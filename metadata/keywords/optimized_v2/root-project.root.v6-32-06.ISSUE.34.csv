quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,"This results in more modular code that is also safer: the `ROOT::Fit::Fitter` has no access to the RooAbsMinimizerFcn anymore, only to the member that is a lightweight adapter. This means the `RooAbsMinimizerFcn` also doesn't get cloned unexpectedly, so we don't need extra checks in the RooMinimizer to account for that!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12348:168,adapter,adapter,168,https://root.cern,https://github.com/root-project/root/pull/12348,1,['adapter'],['adapter']
Integrability,"This reverts commit 1e8c04dd4beff8fc3d34cfd21e45358e85ae0f79.; In this commit, main idea was to use clang binary to retrieve information; about resource-clang-dir. Sadly ROOT patched LLVM/Clang is built; without clang binary and ROOT CMake crash then with next error:. -- /home/oksana/CERN_sources/llvm-clang-root/inst/bin; CMake Error at core/clingutils/CMakeLists.txt:80 (message):; Cannot determine clang resource directory path",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4259:374,message,message,374,https://root.cern,https://github.com/root-project/root/pull/4259,1,['message'],['message']
Integrability,This reverts commit 3efc1356fcd48771c821314fab6c4427078480bd. `/mnt/build/night/LABEL/ROOT-ubuntu18.04/SPEC/rtcxxmod/root/tutorials/hist/ContourList.C:23:19: error: expected unqualified-id; const Double_t PI = TMath::Pi();; /usr/share/R/include/R_ext/Constants.h:36:24: note: expanded from macro 'PI'; #define PI M_PI; /usr/include/math.h:777:16: note: expanded from macro M_PI; CMake Error at /mnt/build/night/LABEL/ROOT-ubuntu18.04/SPEC/rtcxxmod/root/cmake/modules/RootTestDriver.cmake:230 (message):; error code: 1`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3589:493,message,message,493,https://root.cern,https://github.com/root-project/root/pull/3589,1,['message'],['message']
Integrability,"This reverts commit 8bb0a978a34e8f026a98642afe118e15d2356b6c. With ACLiC, which means if you do ""root.exe hsimple.C+"", ROOT generates; library for hsimple.C and execute this library instead of interpreting it at; runtime. This didn't work with our ""preloading modules"" infrastructure,; as it's not even interpreting. We can fix this by; 1. Adding NEEDED section when generating so files.; This is like a ""static linker"" solution, which means we'll change; rootcling_impl to properly add dependency libraries.; 2. Try to get callback from library; I think this makes ACLiC slower, so I like the 1st solution. However, for now, let's just revert this patch. edit:; https://gist.github.com/yamaguchi1024/644b7ee431fce460fb27c1402e92c903; https://gist.github.com/yamaguchi1024/d5a69666d1e10f0b2cfc176a07792420",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2187:487,depend,dependency,487,https://root.cern,https://github.com/root-project/root/pull/2187,1,['depend'],['dependency']
Integrability,"This reverts part of 63636f6aeb3 from a few days ago, which also changed the interface of virtual functions, which was not the intention and breaks user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16491:77,interface,interface,77,https://root.cern,https://github.com/root-project/root/pull/16491,1,['interface'],['interface']
Integrability,"This seems to be the only other place where the configuration setting is checked:; https://github.com/root-project/root/blob/master/io/io/src/TFile.cxx#L4201-L4209. I think people may be annoyed by the `Info` messages and we'd need some static storage to store if the message has been emitted or not for the current process, so I'm not a fan of adding it (although I have no strong feelings about this either). I will add stripping of `file://` prefix so that the behavior is consistent (always redirect) then. I tried and didn't find an easy way to get `file://` to disable the redirection in the case of `TChain`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1309927766:209,message,messages,209,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1309927766,2,['message'],"['message', 'messages']"
Integrability,This seems to remove real dependencies and breaks modules. See PR #2802.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2800#issuecomment-430285309:26,depend,dependencies,26,https://root.cern,https://github.com/root-project/root/pull/2800#issuecomment-430285309,1,['depend'],['dependencies']
Integrability,"This seems to work now and the changes LGTM in principle. We'll break running with `-O0` until the last commit, but I understand that's to make it easier to revert later on. The message of the first commit should be reflowed to not be one very long line. Otherwise, is this ready @devajithvs ? ping @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1907702045:178,message,message,178,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1907702045,1,['message'],['message']
Integrability,"This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5359:143,depend,dependencies,143,https://root.cern,https://github.com/root-project/root/pull/5359,1,['depend'],['dependencies']
Integrability,"This should be the last crop of fixes needed by ROOT-10216. In brief, the changes are to replace lookup by simpler search to avoid nested; initialization of TClasses (leading to the outer nested initialization; to end using deleted memory). Some explanation of the reasons for and details of the actual changes. With. ```; namespace User {; class TrackerVtxBase; class BeamFlux : public User::TrackerVtxBase; class NTrackerVtx : public User::BeamFlux; }; ```. We had a crash during BuildOld for User::BeamFlux. ```; User::TBaseObject triggers replacement routines.; reaches NTrackerVtx; calls (unnecessary) TStreamerBase::InitStreaming() and BuildOld for BeamFlux; in BuildOld look at base User::TrackerVtxBase (and record pointer value in baseclass); calls Init on the TStreamerElement base; this triggers the creation of the TClass for User::TrackerVtxBase; but BuildOld kept a stale pointer to the old TClass (was baseclass variable).; ```. Solution: replace raw pointer by a TClassRef. TCompInfo::Update did a TClass::GetClass for all type that were not classes :(; Usually it is just a waste of time.; In this case, one such type is User::TContext::Time (an enum) use as part; of User::TContext .. Consequently, before the dictionary TClass for User::TContext was constructed,; another class requested the update of the emulated StreamerInfo for the (still); emulated User::TContext, this in turn provoked the (unnecessary) call to; TClass::GetClass on ‘User::TContext::Time’ which provoked the creation of; the TClass for User::TContext … one of the steps is to absorb the existing; StreamerInfo (including the one being updated) and clear them (i.e. delete; the TCompInfo array) … upon return the result of the TClass::GetClass (a nullptr); is stored in deleted memory. Solution: Don’t call TClass::GetClass on non-type. ```; User::TDatum is loaded; provokes update of a StreamerInfo with a TTrueParticle; *spurrious* InitStreaming provoke need for TTrueParticle TClass; start consuming the TTr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4389:555,rout,routines,555,https://root.cern,https://github.com/root-project/root/pull/4389,2,['rout'],['routines']
Integrability,This should fix the following error on Windows:; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):; PyROOT: Python development package not found and pyroot component required; (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5414:114,message,message,114,https://root.cern,https://github.com/root-project/root/pull/5414,1,['message'],['message']
Integrability,"This somewhat huge commit mainly demotes many class-versions to 0. . If wanted, I can for sure squash some things (right now, the commit messages contain the underlying reasoning). . In ROOT, a lot of classes were equipped with class-versions > 0 even though they are not meant for IO / streaming. ; This produces unnecessary overhead (creation of Streamer() functions) and might be misleading for users (especially if they believe streaming of these classes would be ok and then lose parts of their data). That's even more helpful when testing framework's dataobject-code. . These classes were identified by https://github.com/olifre/rootStaticAnalyzer (a new project still in early stages) and I have created this PR to fix almost all these issues. . The last commit in the series also explicitly marks two members (of TSeqCollection and THashList) as transient, even though these classes are already class-version 0. This is purely to make it more explicit that these are not streamed - and allow for programmatic testing (since then the `kTransient` bit of the `TRealData` will be set correctly). . Several issues alerted by `rootStaticAnalyzer` still remain which are probably real bugs in ROOT 6. . Examples: . ```; TMVA/PDF.h:0: error: Data object class 'TMVA::PDF' will not stream the following indirect members: members 'fConfigName, fConfigDescription, fReferenceFile' from class 'TMVA::Configurable' (class-version 0)!; ```. It seems like `TMVA::PDF` is meant for streaming, but inherits from a base which is not. . Similar to that:. ```; include/TTreeResult.h:0: error: Data object class 'TTreeResult' will not stream the following indirect members: members 'fRowCount' from class 'TSQLResult' (class-version 0)!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/169:137,message,messages,137,https://root.cern,https://github.com/root-project/root/pull/169,1,['message'],['messages']
Integrability,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:77,depend,dependencies,77,https://root.cern,https://github.com/root-project/root/pull/15272,2,['depend'],['dependencies']
Integrability,"This turned out to be quite a bit harder to fix than I anticipated, but now almost all headers should be picked from the source directory, and many missing dependencies were added. After I also fix `ROOT_GENERATE_EXECUTABLE()` to use headers from the source directory, then generate headers out of `${CMAKE_BINARY_DIR}/include` and add them to their respective owning targets, we should be able to move the headers to the build directory only at the very end of the build in order to make ROOT usable from the build directory. However, in order to catch missing includes and other dependencies at build time, we need to keep using headers from the source directory only during the build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4299:156,depend,dependencies,156,https://root.cern,https://github.com/root-project/root/pull/4299,2,['depend'],['dependencies']
Integrability,"This was causing roottest-root-core-execStatusBitsCheck failure. TEmulatedTuple is injected to AST by creating virtual file called; `input_line_<number>`. This is the same way as we inject ""ClassDef(name,; id)"" and we need to `undef __ROOTCLING__` in that case (because it's not; ROOTCLING)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2112:83,inject,injected,83,https://root.cern,https://github.com/root-project/root/pull/2112,2,['inject'],"['inject', 'injected']"
Integrability,This was detected by redundant loading on libRooStats when we are trying; to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol; but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending; on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2764:263,depend,depending,263,https://root.cern,https://github.com/root-project/root/pull/2764,1,['depend'],['depending']
Integrability,"This was last methods where TVirtualPad and TVirtualPainter3D were used.; Now dependency from libGpad remains only via libTreePlayer.; Later these specialized classes will be moved to separate library to make libROOTEve only depend from libGeom, libCore, libMath libraries",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3199:78,depend,dependency,78,https://root.cern,https://github.com/root-project/root/pull/3199,2,['depend'],"['depend', 'dependency']"
Integrability,"This was spotted by @vepadulano. As the title suggests: RDatasetSpec is not throwing the correct error when the begin entry > end entry in Python. Minimal repro:; ```py; >>> import ROOT; >>> ds2 = ROOT.RDF.Experimental.RDatasetSpec(""tree"", ""z.root"", (10, 7)); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: none of the 5 overloaded methods succeeded. Full details:; RDatasetSpec::RDatasetSpec(ROOT::RDF::Experimental::RDatasetSpec&&) =>; TypeError: takes at most 1 arguments (3 given); RDatasetSpec::RDatasetSpec(const string& treeName, const vector<string>& fileNameGlobs, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: could not convert argument 2; RDatasetSpec::RDatasetSpec(const vector<pair<string,string> >& treeAndFileNameGlobs, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: takes at most 2 arguments (3 given); RDatasetSpec::RDatasetSpec(const ROOT::RDF::Experimental::RDatasetSpec&) =>; TypeError: takes at most 1 arguments (3 given); RDatasetSpec::RDatasetSpec(const string& treeName, const string& fileNameGlob, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: could not convert argument 3; ```; This is instead supposed to trigger:; ```cpp; RDatasetSpec::REntryRange::REntryRange(Long64_t begin, Long64_t end) : fBegin(begin), fEnd(end); {; if (fBegin > fEnd); throw std::logic_error(""The starting entry cannot be larger than the ending entry in the ""; ""creation of a dataset specification."");; }; ```; P.S. very interesting that an overload is not recognized depending on the same basic types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11051:1637,depend,depending,1637,https://root.cern,https://github.com/root-project/root/issues/11051,1,['depend'],['depending']
Integrability,This way when we introduce dependencies in TMath that require linkage (f.e. Vc) it won't suppose a problem for libCore.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/466:27,depend,dependencies,27,https://root.cern,https://github.com/root-project/root/pull/466,1,['depend'],['dependencies']
Integrability,This will be replaced with a proper error message in the future; once we have a reliable way of implmenting such an error. For; now it's already an improvement if we always print a warning; when we build a module on demand.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1336:42,message,message,42,https://root.cern,https://github.com/root-project/root/pull/1336,1,['message'],['message']
Integrability,This will be the interface to apply for void returning functions (or when you have no need to return the map vector -this implies no reduction- and want to save some space),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/397:17,interface,interface,17,https://root.cern,https://github.com/root-project/root/pull/397,1,['interface'],['interface']
Integrability,"This would allow CMSSW to build its third party modules by calling:. ```; rootcling bare-cling -xc++ -I${ROOTSYS}/etc -I ${headers_location}; -fmodules -Xclang -emit-module -fmodule-name=tinyxml2; -fmodules-cache-path=${CMSSW_LIBDIR} -o ${module_file_location}; ${headers_location}/module.modulemap; ```. This commit has several issues one is that it does not order the dependencies so if libc.pcm goes out of date the build system does not regenerate std.pcm. cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5521:370,depend,dependencies,370,https://root.cern,https://github.com/root-project/root/pull/5521,1,['depend'],['dependencies']
Integrability,"Those 2 classes may or may not be the only 2 that have this kind of pattern in the wild, so it might be interesting to solve the underlying issue which is likely to be that `BindCppObject` is trying to bind to a type which has no interpreter info. So a fix could be to have either `CPyCppyy::BindCppObject` or `Cppyy::GetActualClass` to check for the presence of interpreter info before attempting to automatically bind to the ""actual class/type"". (In theory this should be done by testing `TClass::HasInterpreterInfo` but in this case it is returning an incorrect information and thus we have to use `TClass::GetClassInfo`). The change in behavior is that after this modification, `PyROOT/Cppyy` would no longer warn if the actual return type is inadvertently missing its interpreter info. However semantically this seems to be the right behavior, for example in our cases we would:; * have no warning; * PyROOT will report the type of the pointer as `TList`; * Usage of the meta routines (`IsA` and co.) would still give accurate information (access to the `TClass` for `TViewPubFunctions`); * Interfaces to the objects are the same as the one available from the equivalent C++ code (I.e. `TList`) (unless the user does an explicit dynamic_cast to the underlying type). * In other cases (for user provided functions and classes) where the interpreter information from the underlying class is missing by mistake (bad/broken configuration of the user code/libraries), the error/warning reporting about the missing interpreter info will be delayed until the user actually want to access the underlying class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16177#issuecomment-2271797820:981,rout,routines,981,https://root.cern,https://github.com/root-project/root/pull/16177#issuecomment-2271797820,2,"['Interface', 'rout']","['Interfaces', 'routines']"
Integrability,"Those dictionaries also generate a C++ module, but we don't specify; as of yet the dependencies on the referenced C++ modules from ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/914:83,depend,dependencies,83,https://root.cern,https://github.com/root-project/root/pull/914,1,['depend'],['dependencies']
Integrability,"To be clear, it seems to me that the following:. ```C++; diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx; index c69a3a95e3..e80e45d8be 100644; --- a/tree/tree/src/TBranch.cxx; +++ b/tree/tree/src/TBranch.cxx; @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,; /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may; /// still fail, depending on the contents of the individual TBaskets loaded.; Bool_t TBranch::SupportsBulkRead() const {; + return true;; return (fNleaves == 1) &&; (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);; }; @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf); // TODO: eventually support multiple leaves.; if (R__unlikely(fNleaves != 1)) return -1;; TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));; - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}; +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}; ; // Remember which entry we are reading.; fReadEntry = entry;; @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf); Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;; //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);; if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {; - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");; - return -1;; + leaf->ReadBasket(user_buf);; }; user_buf.SetBufferOffset(bufbegin);; ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-701704099:413,depend,depending,413,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-701704099,2,['depend'],['depending']
Integrability,To be investigated before merging:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84694/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/. On MacOS the test succeeds but we get those `Symbol not found` messages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5643#issuecomment-638019521:268,message,messages,268,https://root.cern,https://github.com/root-project/root/pull/5643#issuecomment-638019521,1,['message'],['messages']
Integrability,"To be merged after #2709 (depends on it).; Only the last 5 commits of this PR are new, the rest are already present in #2709 . This resolves ROOT-9468 (""[DF] Jitting of large Snapshots is too slow"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2713:26,depend,depends,26,https://root.cern,https://github.com/root-project/root/pull/2713,1,['depend'],['depends']
Integrability,To be more precise than just a thumbs up: I also think the on-disk representation should not depend on the allocator.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16754#issuecomment-2441745375:93,depend,depend,93,https://root.cern,https://github.com/root-project/root/issues/16754#issuecomment-2441745375,1,['depend'],['depend']
Integrability,"To clarify, we are talking about the case where a library has a module. Users do not use make project often and roottest claims to cover a good amount of their workflows. As for the dev hours: they are already invested and we know that only under very specific conditions we need rdicts -- it seems that it depends on the amount of header files we parse. If the number is very high, as in Philippe's example, we should load the rdict -- it slows things by 2%...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-650964137:307,depend,depends,307,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-650964137,1,['depend'],['depends']
Integrability,"To facilitate the creation of RooFit datasets from RDataFrame, an; ActionHelper is added to RooFit.; It lives in its own mini library, because it depends on RDF, which RooFit is not. This adresses #7223, but weighted filling is missing, so I'm not closing that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7317:146,depend,depends,146,https://root.cern,https://github.com/root-project/root/pull/7317,1,['depend'],['depends']
Integrability,"To reproduce, you just need to build ROOT using a compiler wrapper (i.e. a symlink like `/usr/lib/ccache/bin/g++` as ; your `CMAKE_CXX_COMPILER`, which points to ccache). For example, on my machine, I have:; ```sh; $ ls -l $(which g++); lrwxrwxrwx 1 root root 15 abr 24 06:52 /usr/lib/ccache/bin/g++ -> /usr/bin/ccache; $ g++ --version; g++ (Gentoo 11.3.0 p4) 11.3.0; ```; I suppose just using `PATH` rather then `REALPATH` in the place linked above should fix this, but I don't know if that has other consequences. If you need a place with this setup to test, you can use `titanx`, I can setup an account there for you if you don't have one yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10556#issuecomment-1128835062:59,wrap,wrapper,59,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1128835062,1,['wrap'],['wrapper']
Integrability,To stay consistent with the interface method.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/642:28,interface,interface,28,https://root.cern,https://github.com/root-project/root/pull/642,1,['interface'],['interface']
Integrability,"To understand why this is failing, and barring a stand-alone reproducer, I need a build of ROOT with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` that I can ""inject"" into this environment. Do you think you could convince your build setup to provide me with one? Or do I need to hack that in myself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12758#issuecomment-1536252367:164,inject,inject,164,https://root.cern,https://github.com/root-project/root/issues/12758#issuecomment-1536252367,1,['inject'],['inject']
Integrability,"Tokyo:; >; >; > https://bigpanda.cern.ch//media/filebrowser/e051d153-88d6-4010-9bae-adee1dc89c07/panda/tarball_PandaJob_4925837464_TOKYO/payload.stdout; >; > [2020-12-18 18:28:04.321336 +0000][Debug ][XRootDTransport ] [; > lcg-se01.icepp.jp:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 500); >; > Failed BNL:; >; >; > https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout; >; > [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [; > dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: manager; > [], protocol version 500); >; > Fail Romania:; >; >; > https://bigpanda.cern.ch//media/filebrowser/60928171-593f-4422-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout; >; > [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [; > tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 400); >; > Fail canada:; >; >; > https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout; >; > [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [; > lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol successful (type:; > server [], protocol version 400); >; > Failed CERN:; >; >; > https://bigpanda.cern.ch//media/filebrowser/c4b9c33e-f260-46b5-9b07-40d54ddef09b/panda/tarball_PandaJob_4926196336_CERN/payload.stdout; >; > [2020-12-19 01:47:52.683440 +0100][Debug ][XRootDTransport ] [; > eosatlas.cern.ch:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 400); >; > Failed Technion:; >; >; > https://bigpanda.cern.ch//media/filebrowser/a51fb0cb-4f96-4442-b0c2-ea15e6d72bf7/panda/tarball_PandaJob_4926186375_TECHNION/payload.stdout; >; > [2020-12-19 02:37:01.970916 +0200][Debug ][XRootDTransport ] [; > tech-gftp.hep.technion.ac.il:1094 #0.0] kXR_protocol successful (t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758074953:3854,protocol,protocol,3854,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758074953,1,['protocol'],['protocol']
Integrability,Tools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 46 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:127 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546714154:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546714154,2,['message'],['message']
Integrability,Trouble with CMake Integration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:19,Integrat,Integration,19,https://root.cern,https://github.com/root-project/root/issues/7982,1,['Integrat'],['Integration']
Integrability,"True` as optional argument. ```python; @ROOT.DeclareCppCallable([""float""], ""float"", numba_only=True); def f(x); return 2.0 * x; ```. In addition, you can set a `verbose` flag to let PyROOT tell you if the decorator falls back to the generic implementation. ```python; @ROOT.DeclareCppCallable([""float""], ""string"", verbose=True); def f(x); return ROOT.std.string(str(x)). ROOT.CppCallable.f(x); # 1) Throws Python warning:; # /home/stefan/foo.py:5: RuntimeWarning: Failed to compile Python callable using numba. Fall back to generic implementation.; # @ROOT.DeclareCppCallable([""float""], ""string"", verbose=True); # 2) Falls back to generic impl and prints ""42"" (as string); ```. **DEPRECATED:**. I've cleaned up and improved the feature. Here's the basic workflow now:. ```python; @ROOT.DeclareCallable([""float""], ""float""); def f(x); return 2.0 * x. # General use-cases; ROOT.ROOT.f(21) # Returns 42; ROOT.gInterpreter.ProcessLine(""cout << ROOT::f(21.0) << endl;"") # Prints 42.0. # Inject callable into dataframe; df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""rdfentry__"").Define(""ROOT::f(x)""); ```. The `DeclareCallable` dispatches between numba and the generic implementation. It tries to compile the thingy with numba (falls through silently) and otherwise tries the generic implementation (fails noisily).; However, you can force using the generic implementation or numba by using the decorators `DeclareGenericCallable` and `DeclareNumbaCallable`. The interface is exactly the same than for the general `DeclareCallable` decorator. In addition, you can now give the wrapped function a custom name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strong",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:1742,Inject,Inject,1742,https://root.cern,https://github.com/root-project/root/pull/3488,1,['Inject'],['Inject']
Integrability,Try to fix a missing dependency of Imt on TBB (at least on Windows),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12777:21,depend,dependency,21,https://root.cern,https://github.com/root-project/root/pull/12777,1,['depend'],['dependency']
Integrability,"Try to keep old interface as is - if by chance anybody uses it outside ROOT. In any case, one **MUST** fix problem with TVirtualGL.cxx.; In original code (current master) not a pointer on the function but double pointer on the variable was provided - code was never working before",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2652:16,interface,interface,16,https://root.cern,https://github.com/root-project/root/pull/2652,1,['interface'],['interface']
Integrability,"Trying to wrap up here: I do not think we have instructions to build ROOT on top of an external clang, even if the patch version of clang is built with changes we need. At the moment, we do not have at disposal enough effort to work on such a recipe. Therefore, the reply to this inquiry, unfortunately, is that there is no well tested, blessed recipe to build external llvm for ROOT. And that would be enough to close the item, in my opinion. . Of course, @cgleggett , we would warmly invite you to contribute such a recipe, helping you in the process as best as we can.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14250#issuecomment-2038229517:10,wrap,wrap,10,https://root.cern,https://github.com/root-project/root/issues/14250#issuecomment-2038229517,1,['wrap'],['wrap']
Integrability,"Trying to wrap up: I agree that the interactive case is real, and more than one loop is triggered on purpose. Likewise, I tend to think that it's not really possible to distinguish this case from the case when subsequent, unintended, runtime performance degrading loops are triggered (how can we check we are not at the root prompt, python prompt, ipython, jupyter...). Doesn't all this point to closing this issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13440#issuecomment-1967511621:10,wrap,wrap,10,https://root.cern,https://github.com/root-project/root/issues/13440#issuecomment-1967511621,1,['wrap'],['wrap']
Integrability,"Turns out the `arrow` dependency is not installed anywhere, so this code can't be tested for now. To discuss with the RDataFrame developers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15312#issuecomment-2071932846:22,depend,dependency,22,https://root.cern,https://github.com/root-project/root/pull/15312#issuecomment-2071932846,1,['depend'],['dependency']
Integrability,"Two fixes here:; - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable; - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```; -- Found py_keras: /usr/lib/python3.5/site-packages/keras ; -- Failed to find Python module theano: Traceback (most recent call last):; File ""<string>"", line 1, in <module>; ImportError: No module named 'theano'; -- Could NOT find py_theano (missing: PY_THEANO) ; -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/280#issuecomment-253640317:279,message,message,279,https://root.cern,https://github.com/root-project/root/pull/280#issuecomment-253640317,1,['message'],['message']
Integrability,"Two fixes in CMake, which were in the way for RooFit work:; - Improve documentation/interfaces for passing LinkDefs in `ROOT_STANDARD_LIBRARY_PACKAGE`. Some functions suggest that multiple LinkDefs can be passed, but it doesn't work. I found out when trying to get this done for RooFit. The solution is to refactor all RF linkdefs into one, but with this PR, I want to make it clear that multiple LinkDefs will not work.; - ROOT_ADD_GTEST didn't allow for test labels such as LONGTEST etc. With this change, they are passed on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4968:84,interface,interfaces,84,https://root.cern,https://github.com/root-project/root/pull/4968,1,['interface'],['interfaces']
Integrability,"Two more gradient interfaces have been parallelized and vectorized: `PoissonLikelihood` and `LogLikelihood`. Both of them are tested. The review of these new implementations should be straightforward, as they are very similar to the `Chi2` implementations. Also, the previous errors in the builds should be fixed now, let's see what Jenkins has to say. By the way, I have pushed a commit fixing the clang-format style because I got a huge diff (probably due to the recent changes in .clang-format) when doing `git clang-format`. I thought this would be cleaner and easier to review, but if you want me to squash the changes I can do it (actually I tried to do it, but the `rebase` threw *a lot* of conflicts, so I just did this new commit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-320457479:18,interface,interfaces,18,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-320457479,1,['interface'],['interfaces']
Integrability,"Two of the PRs that this PR was dependent on were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! @lmoneta @guitargeek. And thanks for the brave first review in the previous cluttered state @hageboeck! Also, apologies ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-877413869:32,depend,dependent,32,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-877413869,1,['depend'],['dependent']
Integrability,"Two substantive changes:; 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:72,wrap,wrapper,72,https://root.cern,https://github.com/root-project/root/pull/12449,1,['wrap'],['wrapper']
Integrability,"Typical example is:. ```; auto h1 = new TH1I(Form(""name%d"",i),Form(""title%d"",i), 100, 0, 100);; ```. Similar interface was used when creating branches. Extreme case when:. ```; Form(""%s_somthing"", Form(""incpsulated%d"", cnt));; ```. In all these places use `TString::Format` instead which returns `TString` instance. Do same in `tmva/tests` and `tmva/tmvagui`. Fixes: https://github.com/root-project/root/issues/13136",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13433:109,interface,interface,109,https://root.cern,https://github.com/root-project/root/pull/13433,1,['interface'],['interface']
Integrability,URCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Frontend -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Frontend -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/usr/include/libxml2 -Iinterpreter/llvm/src/include -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++11 -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -fno-exceptions -fno-rtti -std=c++11 -MD -MT interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:376: error: ‘conditional_t’ in namespace ‘std’ does not name a template type ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected ‘&gt;’ before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8399#issuecomment-865243666:1337,Interface,InterfaceStubFunctionsConsumer,1337,https://root.cern,https://github.com/root-project/root/pull/8399#issuecomment-865243666,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,Uniformize Interface of Random Generators in Math,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12410:11,Interface,Interface,11,https://root.cern,https://github.com/root-project/root/pull/12410,1,['Interface'],['Interface']
Integrability,"Unify the main common entry points between local and distributed RDataFrame API. Currently these changes:. - The ROOT.RDataFrame constructor; - ROOT.RDF.RunGraphs; - ROOT.RDF.Experimental.VariationsFor. Anytime one of the above is called, a pythonization will dispatch to the appropriate RDataFrame flavour, depending on the arguments. Previous usage of the distributed module with fully qualified names of functions still works, although usage of the unified API is preferrable and advisable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16681:308,depend,depending,308,https://root.cern,https://github.com/root-project/root/pull/16681,1,['depend'],['depending']
Integrability,Until now we let users use `array_view` columns to signal that they were reading c-style-array branches from a root file (and therefore we needed a `TTreeReaderArray` as a reader).; We now use our own `TArrayBranch` class for that purpose instead of embedding `array_view` with a meaning it does not have. This is a breaking interface change.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1303:325,interface,interface,325,https://root.cern,https://github.com/root-project/root/pull/1303,1,['interface'],['interface']
Integrability,"Up to now only TVirtualPadPainter interface was redefined.; Now also TVirtualPS is used, which is important for 3D painters.; This is just minimal workaround to support existing painters before appropriate JavaScript code will be provided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2837:34,interface,interface,34,https://root.cern,https://github.com/root-project/root/pull/2837,1,['interface'],['interface']
Integrability,Update ROOT's R interface for Rcpp 1.0.13,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16075:16,interface,interface,16,https://root.cern,https://github.com/root-project/root/pull/16075,1,['interface'],['interface']
Integrability,Update a warning message when using RooFit::NumCpu with strategy=3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5735:17,message,message,17,https://root.cern,https://github.com/root-project/root/pull/5735,1,['message'],['message']
Integrability,"Update the cleanup routine. Add cleaning up failed fits as well, i.e.,; CLs < 0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6219:19,rout,routine,19,https://root.cern,https://github.com/root-project/root/pull/6219,1,['rout'],['routine']
Integrability,Update to VecCore integration in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/830:18,integrat,integration,18,https://root.cern,https://github.com/root-project/root/pull/830,2,['integrat'],['integration']
Integrability,Update warning message as suggested by Stephan in https://github.com/root-project/root/pull/5724,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5735:15,message,message,15,https://root.cern,https://github.com/root-project/root/pull/5735,1,['message'],['message']
Integrability,"Update: I have moved `NumericalDerivatorMinuit2` from roofitcore into Minuit2 and, of course, renamed it into `Minuit2::NumericalDerivator`. Originally, @lmoneta's NumericalDerivator was in mathcore. However, I think it fits well in Minuit2 as well, since the algorithms exactly try to mimic Minuit2's. Also, I have added some depedencies to Minuit2 parameter transformations that I think make it an even more logical fit in Minuit2 than to have to make mathcore depend on Minuit2. I guess in the end it's an arbitrary choice.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567#issuecomment-875917554:463,depend,depend,463,https://root.cern,https://github.com/root-project/root/pull/8567#issuecomment-875917554,1,['depend'],['depend']
Integrability,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6570#issuecomment-708403160:713,message,message,713,https://root.cern,https://github.com/root-project/root/pull/6570#issuecomment-708403160,2,['message'],['message']
Integrability,Updated the commit message as per comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10318#issuecomment-1096565398:19,message,message,19,https://root.cern,https://github.com/root-project/root/pull/10318#issuecomment-1096565398,1,['message'],['message']
Integrability,Updated/fixed the docstrings and added ROOT-10396 to the commit message as discussed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-805870893:64,message,message,64,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-805870893,1,['message'],['message']
Integrability,Updates DeclCollectorPPAdapter to new clang interface that reports an when every **#undef** encountered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/645:44,interface,interface,44,https://root.cern,https://github.com/root-project/root/pull/645,1,['interface'],['interface']
Integrability,Updating dependencies for onepcm in case of runtime_cxxmodules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2687:9,depend,dependencies,9,https://root.cern,https://github.com/root-project/root/pull/2687,1,['depend'],['dependencies']
Integrability,"Usages of `testing::internal::CaptureStd(err|out)` in RDataFrame tests:. ```; ~/W/R/root (credit_rquaglia) git grep -n 'CaptureStd\(err\|out\)' -- tree/dataframe/test/; tree/dataframe/test/dataframe_cache.cxx:148: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_nodes.cxx:55: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_nodes.cxx:79: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_report.cxx:22: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_report.cxx:72: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_report.cxx:81: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_snapshot.cxx:141: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_snapshot.cxx:686: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_snapshot.cxx:700: testing::internal::CaptureStderr();; ````; For example, https://github.com/root-project/root/blob/master/tree/dataframe/test/dataframe_snapshot.cxx#L141-L143 for checking that no error is printed, or https://github.com/root-project/root/blob/master/tree/dataframe/test/dataframe_snapshot.cxx#L686-L694 to check that an error is printed and the message is what we expect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5297#issuecomment-620060541:1221,message,message,1221,https://root.cern,https://github.com/root-project/root/pull/5297#issuecomment-620060541,1,['message'],['message']
Integrability,Use REveElement render state interface so user can control visibility of collection through checkbox in the tree node.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5046:29,interface,interface,29,https://root.cern,https://github.com/root-project/root/pull/5046,1,['interface'],['interface']
Integrability,Use TTaskGroup interface to unzip baskets in parallel.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010:15,interface,interface,15,https://root.cern,https://github.com/root-project/root/pull/1010,1,['interface'],['interface']
Integrability,Use dictionary object files as dependencies for the PCH,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4330:31,depend,dependencies,31,https://root.cern,https://github.com/root-project/root/pull/4330,1,['depend'],['dependencies']
Integrability,Use dictionary source file as dependency for the PCH,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4329:30,depend,dependency,30,https://root.cern,https://github.com/root-project/root/pull/4329,1,['depend'],['dependency']
Integrability,Use dictionary source files as extra dependencies for the PCH,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4355:37,depend,dependencies,37,https://root.cern,https://github.com/root-project/root/pull/4355,1,['depend'],['dependencies']
Integrability,Use find_package(BLAS) to satisfy MathMore's cblas dependencies introduced by GSL.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6950:51,depend,dependencies,51,https://root.cern,https://github.com/root-project/root/pull/6950,1,['depend'],['dependencies']
Integrability,Use more override syntax in main interface classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10469:33,interface,interface,33,https://root.cern,https://github.com/root-project/root/pull/10469,1,['interface'],['interface']
Integrability,Use proper printing Interface in RVec.hxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2640:20,Interface,Interface,20,https://root.cern,https://github.com/root-project/root/pull/2640,1,['Interface'],['Interface']
Integrability,Use proper printing interface in RDataFrame,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2644:20,interface,interface,20,https://root.cern,https://github.com/root-project/root/pull/2644,1,['interface'],['interface']
Integrability,Use very nice feature of openui5 SplitApp to manage different pages together!. * Re-implement GUI which was designed before using dat.GUI.; * Change a lot TGeoPainter interface - especially for setting control parameters; * Newest JSROOT code with several improvements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4223:167,interface,interface,167,https://root.cern,https://github.com/root-project/root/pull/4223,1,['interface'],['interface']
Integrability,Used in `RCanvas::SaveAs()` method to avoid failure message when image production in ; tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13115:52,message,message,52,https://root.cern,https://github.com/root-project/root/pull/13115,1,['message'],['message']
Integrability,"Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3037:259,Depend,Depending,259,https://root.cern,https://github.com/root-project/root/pull/3037,1,['Depend'],['Depending']
Integrability,"Users might want to connect to a notebook server launched with; 'root --notebook' from another computer. This setting of the; Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,; binding on localhost might fail. This looks like the issue; reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3052:261,Depend,Depending,261,https://root.cern,https://github.com/root-project/root/pull/3052,1,['Depend'],['Depending']
Integrability,"Using ""bridge with numpy"" between batch data from RBatchGenerator to torch.tensor(); Padding and Truncate ROOT::RVec temp adopted from &vec depends on vec_size and direct copy in rchunkloader.hxx AssignVector() function",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16341:7,bridg,bridge,7,https://root.cern,https://github.com/root-project/root/pull/16341,2,"['bridg', 'depend']","['bridge', 'depends']"
Integrability,"Using ""bridge with numpy"" between batch data from RBatchGenerator to torch.tensor(); Padding with std::fill() or Truncate &vec depends on vec_size and direct copy in rchunkloader.hxx AssignVector() function",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16342:7,bridg,bridge,7,https://root.cern,https://github.com/root-project/root/pull/16342,2,"['bridg', 'depend']","['bridge', 'depends']"
Integrability,"Using ""bridge with numpy"" between batch data from RBatchGenerator to torch.tensor(); Using std::resize() and direct copy in rchunkloader.hxx AssignVector() function",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16340:7,bridg,bridge,7,https://root.cern,https://github.com/root-project/root/pull/16340,1,['bridg'],['bridge']
Integrability,Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10471:36,message,message,36,https://root.cern,https://github.com/root-project/root/pull/10471,1,['message'],['message']
Integrability,"Using `nlohmann_json` as a public dependency of ROOT can result in different troubles, like #14188. That's why it's better to avoid this dependency if we can, also to minimize the dependency of RooFit on the interface level. In the case of RooFit, the only reason for this dependency was the `HeatmapAnalyzer::getMetadata()` function. However, it just returned a json with a vector of string lables. We can also return a `std::vector<std::string>` here. I already talked with @Zeff020 about this change, and he is completely fine with it. The class was also only used by the RooFit Multiprocess developers so far, so changing the interface is fine. With this interface change, only some refactoring was necessary to avoid including `nlohmann_json` in the RooFit headers. This commit is similar to 9d7aa4a96e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14266:34,depend,dependency,34,https://root.cern,https://github.com/root-project/root/pull/14266,7,"['depend', 'interface']","['dependency', 'interface']"
Integrability,Using higher-level wrapper of OpenSSL SHA1 hash function in civetweb,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10380:19,wrap,wrapper,19,https://root.cern,https://github.com/root-project/root/pull/10380,1,['wrap'],['wrapper']
Integrability,Using target_compile_options to set INTERFACE items on IMPORTED targets; is only supported in cmake 3.11 and up (see similar PR #5396). Reported in issue #7654.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7667:36,INTERFACE,INTERFACE,36,https://root.cern,https://github.com/root-project/root/pull/7667,1,['INTERFACE'],['INTERFACE']
Integrability,"Using the `minuit2_omp` option restricts you to minimizing thread-safe functions, and RooFit models are not thread safe. Also the regular ROOT fitter interface is not thread-safe either, so this option basically breaks your build. It is intended for MInuit2 standalone builds for the specific case where you have an expensive thread-safe function where you want to parallelize the gradient calculation. Adding a warning in the configuration step with CMake hopefully keeps people and package maintainers from using it in the future:; https://github.com/root-project/root/pull/12970",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12940#issuecomment-1581533040:150,interface,interface,150,https://root.cern,https://github.com/root-project/root/issues/12940#issuecomment-1581533040,1,['interface'],['interface']
Integrability,"Using valgrind:; ```; cd /builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/tutorials && LD_LIBRARY_PATH=/builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 valgrind --suppressions=/builddir/build/BUILD/root-6.24.00/etc/valgrind-root.supp --track-origins=yes /builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/bin/root.exe -l -q -b -n -x hsimple.C -e return; ==3856979== Memcheck, a memory error detector; ==3856979== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==3856979== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info; ==3856979== Command: /builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/bin/root.exe -l -q -b -n -x hsimple.C -e return; ```; [ skipping some lines that seem irrelevant... ]; ```; ==3856979== Conditional jump or move depends on uninitialised value(s); ==3856979== at 0x4AD8468: TROOT::FindObject(char const*) const (TROOT.cxx:1267); ==3856979== by 0x186D05AF: ???; ==3856979== by 0x186D004F: ???; ==3856979== by 0x6A5C80F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:376); ==3856979== by 0x6995A4F: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1141); ==3856979== by 0x699F2B3: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1391); ==3856979== by 0x699FD73: cling::Interpreter::echo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*) (Interpreter.cpp:1043); ==3856979== by 0x6AF224B: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:145); ==3856979== by 0x6B02C0F: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:319); ==3856979== by 0x6B050AF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-845027817:851,depend,depends,851,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-845027817,1,['depend'],['depends']
Integrability,VA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1753,message,message,1753,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:5236,message,message,5236,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"Valgrind's helgrind sees several problems, but it is not to be trusted completely as it does not understand the thread synchronization semantics of TBB tasks. One of the reports that seems relevant is e.g.:. ```; ==144544== Possible data race during read of size 8 at 0x1A752C00 by thread #1; ==144544== Locks held: none; ==144544== at 0x51BD968: TGenCollectionProxy::PopProxy() (TGenCollectionProxy.cxx:1332); ==144544== by 0x63D678C: (anonymous namespace)::TCollectionLessSTLReader::GetSize(ROOT::Detail::TBranchProxy*) (TTreeReaderArray.cxx:130); ==144544== by 0x168CEE: ROOT::Internal::TTreeReaderArrayBase::GetSize() const (TTreeReaderArray.h:35); ==144544== by 0x180901: ROOT::Internal::RDF::RTreeColumnReader<ROOT::VecOps::RVec<double> >::GetImpl(long long) (RTreeColumnReader.hxx:79); ==144544== by 0x178553: ROOT::VecOps::RVec<double>& ROOT::Detail::RDF::RColumnReaderBase::Get<ROOT::VecOps::RVec<double> >(long long) (RColumnReaderBase.hxx:38); ==144544== by 0x167C89: void ROOT::Detail::RDF::RDefine<plot_rc()::{lambda(ROOT::VecOps::RVec<double>&)#1}, ROOT::Detail::RDF::CustomColExtraArgs::None>::UpdateHelper<ROOT::VecOps::RVec<double>, 0ul>(unsigned int, long long, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<double> >, std::integer_sequence<unsigned long, 0ul>, ROOT::Detail::RDF::CustomColExtraArgs::None) (RDefine.hxx:77); ==144544== by 0x16782C: ROOT::Detail::RDF::RDefine<plot_rc()::{lambda(ROOT::VecOps::RVec<double>&)#1}, ROOT::Detail::RDF::CustomColExtraArgs::None>::Update(unsigned int, long long) (RDefine.hxx:138); ==144544== by 0x168A5E: ROOT::Internal::RDF::RDefineReader::GetImpl(long long) (RDefineReader.hxx:41); ==144544== by 0x176D71: ROOT::VecOps::RVec<int>& ROOT::Detail::RDF::RColumnReaderBase::Get<ROOT::VecOps::RVec<int> >(long long) (RColumnReaderBase.hxx:38); ==144544== by 0x17588E: void ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::SumHelper<int>, ROOT::Detail::RDF::RLoopManager, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<int> > >::CallExec<ROOT::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10357#issuecomment-1092744098:119,synchroniz,synchronization,119,https://root.cern,https://github.com/root-project/root/issues/10357#issuecomment-1092744098,1,['synchroniz'],['synchronization']
Integrability,"Various small fixes and improvements to RooFit, described further in the commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8632:80,message,messages,80,https://root.cern,https://github.com/root-project/root/pull/8632,1,['message'],['messages']
Integrability,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed.; A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2944#issuecomment-437165806:21,depend,dependency,21,https://root.cern,https://github.com/root-project/root/pull/2944#issuecomment-437165806,2,['depend'],"['dependence', 'dependency']"
Integrability,"Via `TVirtualPad.h` it was spread over many sources.; But only `enum ECursor` was required in `TVirtualPad.h`; I just moved `ECursor` to `GuiTypes.h`, where many similar enum are defined.; Now one can fully remove `TVirtualX.h` from `TVirtualPad.h`, `TCanvas.h` and co. Also GUI classes do not require to populate `TVirtualX` interface via headers - ; one can put `#include ""TVirtualX.h""` in sources where it really used.; If necessary, we could place back TVirtualX.h into TGWindow.h - I can remove last commit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5072:326,interface,interface,326,https://root.cern,https://github.com/root-project/root/pull/5072,1,['interface'],['interface']
Integrability,"Virtually any git operation will trigger a regeneration of VCSRevision.h.; As cling, dictionaries, and libraries depend on this file, we need to; *not* regenerate it - we won't need it anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8006:113,depend,depend,113,https://root.cern,https://github.com/root-project/root/pull/8006,1,['depend'],['depend']
Integrability,"Wait, I was too quick. This fix should go into the adoption mechanism through the array interface and not into `RDataFrame.AsNumpy`. The minimal reproducer is the following:. ```python; import ROOT; import numpy; x = ROOT.std.vector(""float"")(); npy = numpy.asnumpy(x); ```. And then, I'm not sure what value the `data` field should take and what is consistent with what numpy does for empty arrays (which do not have any data?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3528#issuecomment-472336932:88,interface,interface,88,https://root.cern,https://github.com/root-project/root/pull/3528#issuecomment-472336932,1,['interface'],['interface']
Integrability,"Walking the dyld map manually is missing the libc lock. Instead, use the; official interface for this. Make sure that any call to UpdateListOfLoadedSharedLibraries; is actually locked by gInterpreterMutex.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6850:83,interface,interface,83,https://root.cern,https://github.com/root-project/root/pull/6850,1,['interface'],['interface']
Integrability,"Walking the dyld map manually is missing the libc lock. Instead, use the; official interface for this. Make sure that any call to UpdateListOfLoadedSharedLibraries; is actually locked by gInterpreterMutex. (cherry picked from commit 653d927f1d21a50812b049bc16a73e91302485d4)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6877:83,interface,interface,83,https://root.cern,https://github.com/root-project/root/pull/6877,1,['interface'],['interface']
Integrability,"We *do* want to use the source directory includes when possible. So I don't agree that we should exclude those includes. What we have is already almost as good as we can have. We just need to fix the issue with lack of space between includes, and generate headers in `${CMAKE_CURRENT_BINARY_DIR}` instead of `${CMAKE_BINARY_DIR}/include`. See PRs #4108, #4281, and #4299 for more information on the subject. Note that many of those missing dependencies from #4299 are still not fixed, because it was decided that each person would take care of their parts of the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5172#issuecomment-600593668:440,depend,dependencies,440,https://root.cern,https://github.com/root-project/root/pull/5172#issuecomment-600593668,1,['depend'],['dependencies']
Integrability,"We accidentially check and annotate the return type of the function twice for; being a pointer/reference type when we do the ""else"" part of the; wrapper. This patch removes this wrong second check and extends; the tests to check that the cast in both branches of the if/else; is correct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/667:145,wrap,wrapper,145,https://root.cern,https://github.com/root-project/root/pull/667,1,['wrap'],['wrapper']
Integrability,"We are still discussing the names. The current proposal is:; ```; using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with; /// that name does not exist, an invalid RFilePtr will be returned.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid; /// `RFilePtr`) if a file with this name already exists.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name; /// already exists, delete it and create a new one. Else simply create a new file.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());; ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14017#issuecomment-1821818413:166,Synchroniz,Synchronizes,166,https://root.cern,https://github.com/root-project/root/pull/14017#issuecomment-1821818413,4,['Synchroniz'],['Synchronizes']
Integrability,"We can add another option to disable completely SOFIE, but it is itself a small library and we could consider in general as part of tmva. The Onyx parser instead needs to be switch is off for cases where we don't want to have the protobuf dependency",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13055#issuecomment-1926446593:239,depend,dependency,239,https://root.cern,https://github.com/root-project/root/issues/13055#issuecomment-1926446593,1,['depend'],['dependency']
Integrability,"We can not access the original ticket. What is the actual hardware that was being accessed? What is mounted as a local -appearing file system or was it being accessed via a remote protocols (i.e the file name were prefixed with root://...). In first approximation, I don't how we could detect your use case? If you were able to set `ulimit` locally to whatever limit fit your need, hadd would automatically adjust.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11276#issuecomment-1239603727:180,protocol,protocols,180,https://root.cern,https://github.com/root-project/root/issues/11276#issuecomment-1239603727,1,['protocol'],['protocols']
Integrability,"We can probably make this an output variable and fix roottest. If you are willing to go that extra mile, you can create a PR against roottest with a branch `reflGenDicFromTarget` (with the same name) and our infrastructure should be able to integrate them together. If not, resetting the `definitions` variable should allow us to make progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-587562141:241,integrat,integrate,241,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-587562141,1,['integrat'],['integrate']
Integrability,"We considered replacing them with https://packages.ubuntu.com/bionic/fonts-liberation. Thanks for pointing out the fedora patch - looks good, actually - too bad that never made it upstream! I'll assign to @bellenot so see which route we should take: replace the files with ""liberation"" or patch ROOT to use fontconfig.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8357#issuecomment-867694334:228,rout,route,228,https://root.cern,https://github.com/root-project/root/issues/8357#issuecomment-867694334,1,['rout'],['route']
Integrability,"We construct a vector of string pairs and pass it through to the; RNTuple::Merge function for merging. This implements a ""legacy bridge""; between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without; using either class in the implementation by carefully casting the; RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,; and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: ; ```shell; $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root; hadd Target file: dir/merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: dir/merged.root:/; Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins ; examining ntuple1.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; examining ntuple2.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; got ntuple from file 'ntuple1.root:/' named 'ntuple'; got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins; RNTuple merger output file is dir/merged.root:/; merging ntuple from file 'ntuple1.root:/ named 'ntuple'; merging ntuple from file 'ntuple2.root:/ named 'ntuple'; RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive; Error in <TFileMerger::MergeRecursive>: error merging RNTuples; Error in <TFileMerger::Merge>: error during merge of your ROOT files; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6101:129,bridg,bridge,129,https://root.cern,https://github.com/root-project/root/pull/6101,2,"['bridg', 'interface']","['bridge', 'interface']"
Integrability,"We currently don't support numba 0.60.0 yet:; https://github.com/root-project/root/blob/master/requirements.txt#L17. One can see the problem when going into `roottest/python/numba` and running the test there:; ```bash; python PyROOT_numbatests.py; ```. Output with ROOT master and numba 0.59, where it's only a warning:; ```txt; PyROOT_numbatests.py::TestClasNumba::test03_inheritance; /home/rembserj/spaces/master/root/src/root/roottest/python/numba/PyROOT_numbatests.py:107: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors; Exception origin:; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/numba_ext.py"", line 349, in generic_resolve; f = typ._scope.__dict__[attr]; ~~~~~~~~~~~~~~~~~~~^^^^^^. return obj.get_one(). -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html; ```. Supporting numba 0.60.0 would be nice, because 0.59.0 doesn't support NumPy 2 yet. Thus, our current environment falls back to NumPy 1 and we are lacking NumPy 2 test support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16201:546,depend,depending,546,https://root.cern,https://github.com/root-project/root/issues/16201,1,['depend'],['depending']
Integrability,"We currently fail to create a module for RootFit with the following error; message when merging a union in signal.h:; ```; In file included from input_line_12:67:; In file included from /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/RooErrorHandler.h:20:; In file included from /usr/include/signal.h:394:; /usr/include/bits/pthreadtypes.h:130:3: error: typedef redefinition with different types ('union pthread_cond_t' vs 'union pthread_cond_t'); } pthread_cond_t;; ^; /usr/include/sys/types.h:271:11: note: '/usr/include/bits/pthreadtypes.h' included multiple times, additional include site in header from module 'Hist.Foption.h'; ^; /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/module.modulemap:820:10: note: Hist.Foption.h defined here; module ""Foption.h"" { header ""Foption.h"" export * }; ^; /usr/include/signal.h:394:11: note: '/usr/include/bits/pthreadtypes.h' included multiple times, additional include site in header from module 'RooFitCore.RooErrorHandler.h'; ^; /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/module.modulemap:2449:10: note: RooFitCore.RooErrorHandler.h defined here; module ""RooErrorHandler.h"" { header ""RooErrorHandler.h"" export * }; ^; Error: /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/bin/rootcling: compilation failure (/build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/lib/libRooFitCorecbd7d3c40e_dictUmbrella.h); make[2]: *** [roofit/roofitcore/G__RooFitCore.cxx] Error 1; ```. This patch adds the header to the modulemap which prevents us from; trying to merge this struct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1020:75,message,message,75,https://root.cern,https://github.com/root-project/root/pull/1020,1,['message'],['message']
Integrability,"We currently get the error below from stdlib.h as we have problems merging; these special declarations with GCC annotations. We can't add stdlib.h to; the normal libc module as this would cause a dependency cycle between the; builtin modules of clang and libc, but having this as a standalone module; seems to work for me. ```; In file included from input_line_12:18:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/BasicFunctionGradient.h:13:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/MnMatrix.h:31:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/LASymMatrix.h:24:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/StackAllocator.h:28:; In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/7.2.0/../../../../include/c++/7.2.0/cstdlib:75:; In file included from /home/teemperor/root/dbg-build/etc/cling/lib/clang/5.0.0/include/stdlib.h:8:; /usr/include/stdlib.h:742:8: error: reference to 'lldiv_t' is ambiguous; extern lldiv_t lldiv (long long int __numer,; ^; /usr/include/stdlib.h:81:5: note: candidate found by name lookup is 'lldiv_t'; } lldiv_t;; ^; /usr/include/stdlib.h:81:5: note: candidate found by name lookup is 'lldiv_t'; } lldiv_t;; ^; In file included from input_line_12:18:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/BasicFunctionGradient.h:13:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/MnMatrix.h:31:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/LASymMatrix.h:24:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/StackAllocator.h:28:; In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/7.2.0/../../../../include/c++/7.2.0/cstdlib:75:; In file included from /home/teemperor/root/dbg-build/etc/cling/lib/clang/5.0.0/include/stdlib.h:8:; /usr/include/stdlib.h:742:16: error: functions that differ only in their return type cannot be overloaded; extern lldiv_t lldiv (lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1231:196,depend,dependency,196,https://root.cern,https://github.com/root-project/root/pull/1231,1,['depend'],['dependency']
Integrability,"We currently have two ODR errors when using modules. One is when; using setjmp, the other is coming from TException. This patch; makes TException non-textual and moves it to the config module; to prevent cyclic dependencies. We also add setjmp to the; modulemap to fix the ODR errors on the setjmp struct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/876:211,depend,dependencies,211,https://root.cern,https://github.com/root-project/root/pull/876,1,['depend'],['dependencies']
Integrability,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/391#issuecomment-284779477:240,integrat,integration,240,https://root.cern,https://github.com/root-project/root/pull/391#issuecomment-284779477,1,['integrat'],['integration']
Integrability,We decided to merge this PR to move forward in debugging a cyclic module dependency. @Teemperor will submit another PR in resolving the `CodegenForModules` issue as we suggested before.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1017#issuecomment-331809593:73,depend,dependency,73,https://root.cern,https://github.com/root-project/root/pull/1017#issuecomment-331809593,1,['depend'],['dependency']
Integrability,"We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```; template<typename T>; class Bar {; consteval static T x() { return 5; }; public:; Bar() : a(x()) {}. private:; int a;; };. Bar<int> g();; ```; Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13700:30,depend,dependent,30,https://root.cern,https://github.com/root-project/root/pull/13700,1,['depend'],['dependent']
Integrability,We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:; ```; ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':; creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14121:488,message,message,488,https://root.cern,https://github.com/root-project/root/issues/14121,1,['message'],['message']
Integrability,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag?. We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8447#issuecomment-879210583:193,wrap,wrapper,193,https://root.cern,https://github.com/root-project/root/issues/8447#issuecomment-879210583,1,['wrap'],['wrapper']
Integrability,"We do have an actual header dependency, that PR just makes it more obvious, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5439#issuecomment-618464545:28,depend,dependency,28,https://root.cern,https://github.com/root-project/root/pull/5439#issuecomment-618464545,1,['depend'],['dependency']
Integrability,"We do not have yet all python requirement in the current `requirements.txt`, still have to figure out all dependencies and the respective minimum version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654644610:106,depend,dependencies,106,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654644610,1,['depend'],['dependencies']
Integrability,"We do not need to install rdict here, because it is already installed.; Also this FIXME doesn't work as the list of pcms change; depending on which -D option that you give to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3228:129,depend,depending,129,https://root.cern,https://github.com/root-project/root/pull/3228,1,['depend'],['depending']
Integrability,"We don't break b/w comp with ROOT7 - we are stopping development lines, replacing features with new versions that provide no backward compatibility (because they are new), but do provide transitioning help. Think `RNTuple`, `TTree` successor: incompatible interfaces, but tools to migrate a `TTree` stored in a ROOT file to a `RNTuple`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8370#issuecomment-859679425:256,interface,interfaces,256,https://root.cern,https://github.com/root-project/root/issues/8370#issuecomment-859679425,1,['interface'],['interfaces']
Integrability,We first need to fix the dependencies that TreePlayer is built before we try to load it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1328#issuecomment-344347407:25,depend,dependencies,25,https://root.cern,https://github.com/root-project/root/pull/1328#issuecomment-344347407,1,['depend'],['dependencies']
Integrability,"We get these symbols even for a simple hello world message. While it is not clear if we can skip all weak undefined symbols, we can certainly skip those which get resolved to libgcj.so and libitm.so. Oddly enough gcc emits a weak undefined symbol to _Jv_RegisterClasses (resolved in libgcj.so) which is some gcc/java library. _ITM_deregisterTMCloneTable and _ITM_registerTMCloneTable are emitted because (resolved in libitm.so) of pointer arithmetics for transactional memory support. The current understanding is that we can safely omit these when harvesting library dependencies. This should fix the rootbench builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4254:51,message,message,51,https://root.cern,https://github.com/root-project/root/pull/4254,2,"['depend', 'message']","['dependencies', 'message']"
Integrability,"We had test failures in runtime nightlies such as this one:; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/95/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/junit/projectroot.roottest.root.math/smatrix/roottest_root_math_smatrix_testKalman/. Failures were due to what @pcanal commented in #2135, that some so files in; roottest doesn't have external linkage. (It means that if you call; dlopen(libfoo.so), linux kernel can't find dependency libraries and it; emits ""undefined symbol"" error when they try to initialize global; variables in libfoo.so but couldn't find symbol definition); With pch, rootmap files were providing information about the depending library. However we stopped generating rootmap files in #2127 and that's why we; got these failures. To fix this issue, I implemented a callback to; TCling which gets called when DynamicLibraryManager fails with; ""undefined error"". I'm open to suggestion especially in DynamicLibraryManager.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2154:466,depend,dependency,466,https://root.cern,https://github.com/root-project/root/pull/2154,2,['depend'],"['dependency', 'depending']"
Integrability,"We had test failures in runtime nightlies such as this one:; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/95/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/junit/projectroot.roottest.root.math/smatrix/roottest_root_math_smatrix_testKalman/; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/lastCompletedBuild/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/. Failures were due to what @pcanal commented in #2135, that some so files in; roottest doesn't have external linkage. (It means that if you call; dlopen(libfoo.so), linux kernel can't find dependency libraries and it; emits ""undefined symbol"" error when they try to initialize global; variables in libfoo.so but couldn't find symbol definition); With pch, rootmap files were providing information about the depending library. However we stopped generating rootmap files in #2127 and that's why we; got these failures. To fix this issue, I implemented a callback to; TCling which gets called when DynamicLibraryManager fails with; ""undefined error"". I'm open to suggestion especially in DynamicLibraryManager.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2148:708,depend,dependency,708,https://root.cern,https://github.com/root-project/root/pull/2148,2,['depend'],"['dependency', 'depending']"
Integrability,"We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318#issuecomment-2153455231:75,depend,depend,75,https://root.cern,https://github.com/root-project/root/issues/15318#issuecomment-2153455231,1,['depend'],['depend']
Integrability,We have successfully waited out the issue! ROOT 6.28 already doesn't support 4.8 anymore:; https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9370#issuecomment-1739929700:117,depend,dependencies,117,https://root.cern,https://github.com/root-project/root/issues/9370#issuecomment-1739929700,1,['depend'],['dependencies']
Integrability,We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3747:169,depend,depends,169,https://root.cern,https://github.com/root-project/root/pull/3747,1,['depend'],['depends']
Integrability,We need this to avoid build errors in `yoda` and test root master in CMSSW CXXModules integration builds,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4467#issuecomment-538276379:86,integrat,integration,86,https://root.cern,https://github.com/root-project/root/pull/4467#issuecomment-538276379,1,['integrat'],['integration']
Integrability,"We need to only do this when not in in ACLiC-rootmap mode. This means `TSystem::CompileMacro()` needs to know specifically about `-Wl,--no-undefined`, and only pass it depending on rootmap mode's value. That needs a different approach; closing this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3161#issuecomment-446869055:168,depend,depending,168,https://root.cern,https://github.com/root-project/root/pull/3161#issuecomment-446869055,1,['depend'],['depending']
Integrability,We need to set ROOT_MODULES to DEBUG when we want rootcling to; create C++ modules. For this we wrap all rootcling invocations; in cmake wrappers that set this environment variable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/944:96,wrap,wrap,96,https://root.cern,https://github.com/root-project/root/pull/944,2,['wrap'],"['wrap', 'wrappers']"
Integrability,"We need to stop relying on such hacks to deduce the types, because it will never work. If in the next version ICC decides to change the format of PRETTY_FUNCTION again, our code will become broken again. We need to use `typeid(T).name()` and then find a way to consistently demangle the name it returns, instead of trying to parse error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1389#issuecomment-347652046:337,message,messages,337,https://root.cern,https://github.com/root-project/root/pull/1389#issuecomment-347652046,1,['message'],['messages']
Integrability,"We renamed the class of the numpy wrapper object to numpy.array so that; the wrapping is hidden from the user. However, this breaks pickling of; the object since the class name does not match the name of the true; class. Removing the renaming solves the issue. Now, the returned array; is not called numpy.array but ndarray. This PR fixes current and experimental PyROOT. @etejedor @maxgalli I think this is a feasible solution since the name of the class is anyway only visible in the `__repr__` representation and numpy.array is as good as ndarray since both indicate to the user that the object behaves like a numpy array. Jira ticket can be found here: https://sft.its.cern.ch/jira/browse/ROOT-10268",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4197:34,wrap,wrapper,34,https://root.cern,https://github.com/root-project/root/pull/4197,2,['wrap'],"['wrapper', 'wrapping']"
Integrability,We replace it with a combination of a global property and an additional custom target.; The global property is used to collect the dependencies created before the modules.idx target is created.; The custom target is used as a direct dependency of the custom_command (add_dependencies can not be used on the target of a custom_command). Then we can use; this custom target to collect the dependencies created after the modules.idx target. This fixes #10510. To test:. ```; ls -rtl lib/modules.idx lib/libEve.so; rm lib/*Eve*; ninja # or make or cmake --build ; this should update modules.idx; ls -rtl lib/modules.idx lib/libEve.so; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11506:131,depend,dependencies,131,https://root.cern,https://github.com/root-project/root/pull/11506,3,['depend'],"['dependencies', 'dependency']"
Integrability,"We see more or less the same thing in dev4 now: ; Ironically the ""opt"" build gives more of an error message than the debug build; opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763; dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964#issuecomment-2003453893:100,message,message,100,https://root.cern,https://github.com/root-project/root/issues/14964#issuecomment-2003453893,1,['message'],['message']
Integrability,We should not go through the interface setting CodeGenerationForModule.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1017#issuecomment-331068461:29,interface,interface,29,https://root.cern,https://github.com/root-project/root/pull/1017#issuecomment-331068461,1,['interface'],['interface']
Integrability,We should provide tutorials that show how to perform NN and BDT inference with TMVA's experimental interfaces (SOFIE and the fast BDT inference engine).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9242:99,interface,interfaces,99,https://root.cern,https://github.com/root-project/root/issues/9242,1,['interface'],['interfaces']
Integrability,"We use a conformant BLAS implementation to satisfy the cblas; dependencies of MathMore coming from GSL in preference to GSL's provided; libgslcblas. GSL explicitly makes this possible by segregating its BLAS; implementation, and by not having an explicit link from libgsl.so to; libgslcblas.so. Allowing a non-GSL BLAS enables:. 1. the use of (much) more efficient implementations by mathmore / GSL; functions;. 2. consistency with other uses of BLAS within ROOT (e.g. TMVA).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6950:62,depend,dependencies,62,https://root.cern,https://github.com/root-project/root/pull/6950,1,['depend'],['dependencies']
Integrability,"We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2858:64,depend,dependency,64,https://root.cern,https://github.com/root-project/root/pull/2858,2,['depend'],"['dependencies', 'dependency']"
Integrability,"We usually have `Internal` just mean that it is internal to ROOT, i.e. other ROOT classes/namespaces can use it, but we don't advertise/support the usage from outside of ROOT. Why is that different in this case? Should we consider moving this to just a public interface, with docs explaining in which situations this function should be used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16786#issuecomment-2446266750:260,interface,interface,260,https://root.cern,https://github.com/root-project/root/pull/16786#issuecomment-2446266750,1,['interface'],['interface']
Integrability,"We were trying to collect the owning modules of every deserialized; decl. Later, we loaded the corresponding library. This is too; much because for some entities (such as forward declarations) we; load the shared object file in vain because no CodeGen is; required.; ; This patch relies on the ASTReader to decide if a decl needs to; be CodeGenned or not. If it requires an action from CodeGen the; ASTReader passes it through the HandleInterestingDecl interface.; ; This patch brings back to normal the amount of loaded libraries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2006:453,interface,interface,453,https://root.cern,https://github.com/root-project/root/pull/2006,1,['interface'],['interface']
Integrability,WebEve: Add interface for custom GUI in REveManger,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4103:12,interface,interface,12,https://root.cern,https://github.com/root-project/root/pull/4103,1,['interface'],['interface']
Integrability,Weird messages from TInterpreter::AutoParse,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8904:6,message,messages,6,https://root.cern,https://github.com/root-project/root/issues/8904,1,['message'],['messages']
Integrability,"Welcome to this year's fun exercise of upgrading LLVM! :partying_face: . Dependent changes that must land before merging this PR:; * [x] https://github.com/root-project/root/pull/13243; * [x] https://github.com/root-project/root/pull/13269 (to support LLVM 16, cf. https://github.com/vgvassilev/clad/pull/589); * [x] https://github.com/root-project/root/pull/13238; * [x] https://github.com/root-project/root/pull/13310; * [x] https://github.com/root-project/roottest/pull/989; * [x] https://github.com/root-project/root/pull/13335; * [x] https://github.com/root-project/roottest/pull/994; * [x] https://github.com/root-project/root/pull/13366; * [x] https://github.com/root-project/root/pull/13448; * [x] https://github.com/root-project/root/pull/13477; * [x] https://github.com/root-project/root/pull/13482; * [x] https://github.com/root-project/root/pull/13782 and / or https://github.com/root-project/root/pull/13785; * [x] https://github.com/root-project/root/pull/13565 (or at least the last commit to remove `isInstantiatedInPCH`); * [x] https://github.com/root-project/root/pull/14110. Things to check:; * [x] Builds on all platforms; * [x] Passes all ROOT tests on all platforms; * [x] Passes Cling test suite (at least on Linux); * [x] Check increase in resource consumption:; * [x] Build directory in `Release` configuration; * [x] Install directory in `Release` configuration; * [x] Size of module files in particular; * [x] Memory requirement; * [x] CPU requirement (time to run all tests). #### Comparison of resource consumption on AlmaLinux 8, GCC 8.5.0, `CMAKE_BUILD_TYPE=Release`. | | `master` | `llvm16` |; | --- | --- | --- |; | `build` (slightly older version) | 1706284 KB = 1.7 GB | 1766156 KB = 1.7 GB |; | `build` (with `testing` + `roottest`, before `ctest`) | 2286436 KB = 2.2 GB | 2366928 KB = 2.3 GB |; | `install` | 704236 KB = 688 MB | 701032 KB = 685 MB |; | `lib/*.pcm` | 312624 KB = 306 MB | 309560 = 303 MB |; | Memory for `./bin/root.exe -q` | 204020 kbytes | 21467",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273:73,Depend,Dependent,73,https://root.cern,https://github.com/root-project/root/pull/13273,1,['Depend'],['Dependent']
Integrability,"Well I believe you've found a bug, my bad! And thanks for reporting!; Indeed the expected behaviour is that the option should *quietly* turn OFF itself if pyspark can't be found or one of its dependencies (like Java) are not present. At least, this is the expected behaviour when `fail-on-missing` is not enabled, like in your case (it must be explicitly enabled with `-Dfail-on-missing=ON`). The error you see should happen only when `fail-on-missing` is ON. . I'll upload a PR very soon and you can tell me if that fixes the error you see :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7406#issuecomment-793570847:192,depend,dependencies,192,https://root.cern,https://github.com/root-project/root/pull/7406#issuecomment-793570847,1,['depend'],['dependencies']
Integrability,Well also depending on what the user code is going to DO with the TFile object there can be other thread safety issues. (ie multiple threads might end up with pointers to the same TFile object which was being managed by TTreeProcessorMT from a different thread),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10318#issuecomment-1091419639:10,depend,depending,10,https://root.cern,https://github.com/root-project/root/pull/10318#issuecomment-1091419639,1,['depend'],['depending']
Integrability,Well it passed this time but it might just be noise depending on what's going on at the same time...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162#issuecomment-679290564:52,depend,depending,52,https://root.cern,https://github.com/root-project/root/pull/6162#issuecomment-679290564,1,['depend'],['depending']
Integrability,"Well looking at the debug logs, all failed jobs die after ""kXR_protocol"" and before "" and before ""Sending out kXR_login request"". I haven't been able to download logs from too many successful jobs. But I have three - two reading from RAL and one reading in LAPP. I give a link to the log files and the last DEBUG line of the failed jobs and the same line plus the next for the successful jobs. So perhaps a question of what is happening in the code between these two points?. see you, RD. Successful RAL:. https://bigpanda.cern.ch//media/filebrowser/667e8363-d9bb-4ebd-800f-79d3495d1b3a/panda/tarball_PandaJob_4925629005_RAL/payload.stdout. [2020-12-18 14:20:13.919081 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400); [2020-12-18 14:20:13.919352 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2010227.0-lcg2237.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful UK WATERLOO:. https://bigpanda.cern.ch//media/filebrowser/772fff72-3e22-499f-8a3f-aa8956ea5636/panda/tarball_PandaJob_4926186410_RAL/payload.stdout. [2020-12-19 00:45:02.375203 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400); [2020-12-19 00:45:02.375430 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2013477.0-lcg2259.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful IN2P3 LAPP_LAKE. https://bigpanda.cern.ch//media/filebrowser/f9695015-c110-4e2e-9c62-d56eade824f8/panda/tarball_PandaJob_4926136184_IN2P3-LAPP_LAKE/payload.stdout. [2020-12-19 02:08:57.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758062082:779,protocol,protocol,779,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758062082,1,['protocol'],['protocol']
Integrability,"Well the other question is whether we could make this behaviour the default for TTreeProcessorMT or at least for RDataFrame. Depending on the use case, I'm not sure things will work correctly anyways when using a TRef pointing to a TFile which is being read by TTreeProcessorMT. In particular because different clusters from a single file may be processed simultaneously by different threads, it won't be deterministic which particular TFile object is registered in the global TProcessUUID for a given UUID, and any attempt to make use of this is not likely to be thread safe...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10318#issuecomment-1088455084:125,Depend,Depending,125,https://root.cern,https://github.com/root-project/root/pull/10318#issuecomment-1088455084,1,['Depend'],['Depending']
Integrability,"Well this arised particularly by trying to have a conda environment with both `root` and `zfit`. zfit depends on tensorflow and therefore tensorflow would either be installed from conda-forge or from pypi. I'm not really sure I understand your proposed solution. Can I do all that without compiling root myself and while grabbing it from conda? If so, at which point of the installation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970#issuecomment-2208640078:102,depend,depends,102,https://root.cern,https://github.com/root-project/root/issues/15970#issuecomment-2208640078,1,['depend'],['depends']
Integrability,"Well, I can shed some light on how the Xrootd client works (as I'm taking care of that part of xrootd):. - `succesful parsing of kXR_protol` comes from https://github.com/xrootd/xrootd/blob/93871f8241e478a308c8e722fd99aeaa08ff6459/src/XrdCl/XrdClXRootDTransport.cc#L1546-L1552, it means we successfully parsed the server response to `kXR_protocol` and this is the end of `ProcessProtocolResp` routine; - the next step is to generate the initial `kXR_login` request; https://github.com/xrootd/xrootd/blob/stable-4.12.x/src/XrdCl/XrdClXRootDTransport.cc#L441-L454; - if there is a problem in the xrootd client it will be in the `GenerateLogIn` method as by the end of that one the `Sending out kXR_login request ...` log line is printed: https://github.com/xrootd/xrootd/blob/stable-4.12.x/src/XrdCl/XrdClXRootDTransport.cc#L1711-L1716. That said, there's really not much happening in `GenerateLogIn` but I will inspect the code carefully once again ... Do we have the machine name that was hosting the job at CERN?. P. S. Just in case I will ping Andy so he can have a look at, maybe he will come up with some good explanation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758205094:393,rout,routine,393,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758205094,1,['rout'],['routine']
Integrability,"Well, as long as it doesn't break backward compatibility, anything can be done (i.e. internal methods). We **cannot** break user code (public interfaces), even if that means broken code on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13091#issuecomment-1610868081:142,interface,interfaces,142,https://root.cern,https://github.com/root-project/root/issues/13091#issuecomment-1610868081,1,['interface'],['interfaces']
Integrability,"Well, resolving conflicts via github's web interface failed spectacularly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4850#issuecomment-594478750:43,interface,interface,43,https://root.cern,https://github.com/root-project/root/pull/4850#issuecomment-594478750,1,['interface'],['interface']
Integrability,"Well, that argument would apply to 95 % percent of the classes in ROOT then :D Users that are adventurous to use this probably also know about C++ ownership. I personally don't think the added complexity and less clear ownership when using `shared_ptr` + `weak_ptr` is justified in this case. I think `shared_ptr` should only be used when there are really shared resources in the implementation details, not as a general solution to prevent the user from making memory management mistakes. As you say, it gives also mixed messages on how to manage the resources. Would you be okay with leaving it like this for now? We can always revisit this if need be...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12348#issuecomment-1439898961:522,message,messages,522,https://root.cern,https://github.com/root-project/root/pull/12348#issuecomment-1439898961,2,['message'],['messages']
Integrability,"Well, the variable is private and the whole class is in the .cxx because it's an implementation detail. I can of course change it, but IMHO this is better checked if we start discussing how to integrate the `RCombinedDS` and we have an example for that to work correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3428#issuecomment-464018975:193,integrat,integrate,193,https://root.cern,https://github.com/root-project/root/pull/3428#issuecomment-464018975,1,['integrat'],['integrate']
Integrability,"Well-known branch names, e.g. `master` or `v6-28-00-patches` always use the equivalent upstream roottest branch. However, we should be careful not to match a substring. Concretely, before this patch, `master-14449` was incorrectly taken as a well-known branch causing the error below.; ```; Cloning into 'roottest'...; fatal: Remote branch master-13449 not found in upstream origin; CMake Error at CMakeLists.txt:780 (message): Expected roottest at 'C:/ROOT-CI/src/roottest' (not a directory?); ```. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13504:418,message,message,418,https://root.cern,https://github.com/root-project/root/pull/13504,1,['message'],['message']
Integrability,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-385710986:112,interface,interface,112,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-385710986,2,['interface'],['interface']
Integrability,What about including [this](https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html#numerical-integration) in the reference guide on [this page](https://root.cern/doc/master/group__Integration.html) ?. @lmoneta what do you think ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740#issuecomment-810160931:108,integrat,integration,108,https://root.cern,https://github.com/root-project/root/issues/7740#issuecomment-810160931,2,['integrat'],['integration']
Integrability,"What about:. _TXXX is a legacy interface, there will be no bug fixes nor new developments, therefore it is not recommended to use it in new long-term production code. But depending on the context using TXXX might still be a valid solution._. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11315#issuecomment-1237793992:31,interface,interface,31,https://root.cern,https://github.com/root-project/root/pull/11315#issuecomment-1237793992,2,"['depend', 'interface']","['depending', 'interface']"
Integrability,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:; * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`.; * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432#issuecomment-2001956688:170,depend,depends,170,https://root.cern,https://github.com/root-project/root/issues/6432#issuecomment-2001956688,2,['depend'],['depends']
Integrability,What does the build error message say? I can't read it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-779824754:26,message,message,26,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-779824754,1,['message'],['message']
Integrability,"What is happening here is that your build pulls in header files from Clang 13.0.1, instead of using those bundled with ROOT:; ```; /opt/clang/13.0.1-gcc84/include/llvm/ADT/StringRef.h:272:14: note: explicit conversion function is not a candidate; explicit operator std::string() const { return str(); }; ^; ```; In https://github.com/root-project/root/blob/c4175cb2fa0daf07ef03f460f2026c8bbc34b6a5/interpreter/llvm/src/include/llvm/ADT/StringRef.h#L246-L248 the conversion operator isn't `explicit` yet and the code works. Do your compiler wrappers maybe also add arguments or set environment variables that change the include path?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10046#issuecomment-1059267391:540,wrap,wrappers,540,https://root.cern,https://github.com/root-project/root/issues/10046#issuecomment-1059267391,1,['wrap'],['wrappers']
Integrability,"What is somewhat confusing here (ROOT master from Saturday) is that one sees `b'mystring'`, but this is not a `bytes` instance.; ```term; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-el9-gcc13-dbg/ROOT-env.sh; python -c ""import cppyy; mystr = cppyy.gbl.std.string('mystring'); print(repr(mystr)); print(isinstance(mystr, bytes))""; ```; Gives; ```; b'mystring'; False; ```; So at least some printout messages in existing code are confusing me. As you, @wlav , write as well, `repr` [usually](https://docs.python.org/3/library/functions.html#repr) returns something that let's one construct the object again. So something like `cppyy.gbl.std.string('mystring')` is maybe more consistent with the actual type of the object? Or the type and address in angle brackets, so maybe `<cppyy.gbl.std string object at 0xf22d8f0>`?; I saw a print out of `b'something'` and happily coded my `isinstance(.., bytes)` and nothing changed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15153#issuecomment-2056378637:430,message,messages,430,https://root.cern,https://github.com/root-project/root/issues/15153#issuecomment-2056378637,1,['message'],['messages']
Integrability,"What version of OpenSSL is being used, is it the builtin one? Have you installed the CERN SSL certificates? (note `ErrParseBuffer: unknown CA: cannot verify server certificate` in the error message). Do you have a user grid certificate setup? Is Kerberos actually installed? Do you have an active Kerberos ticket while running the test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231#issuecomment-1420328372:190,message,message,190,https://root.cern,https://github.com/root-project/root/issues/12231#issuecomment-1420328372,1,['message'],['message']
Integrability,"What would be the downside of renaming ROOT's `find_package` (say to `ROOT_FIND_PACKAGE`) and using that throughout ROOT? Would there be e.g. any side-effects for say package X used by ROOT which depends on package Y, which ROOT has already find, but now package X will find a different one? And what about users configuring against ROOT, what would be the side-effect they see? pulling @amadio in for opinions and expertise!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633#issuecomment-878259600:196,depend,depends,196,https://root.cern,https://github.com/root-project/root/issues/8633#issuecomment-878259600,1,['depend'],['depends']
Integrability,What's the issue that gets fixed by this commit? Can you add the error messages?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12912#issuecomment-1568608064:71,message,messages,71,https://root.cern,https://github.com/root-project/root/pull/12912#issuecomment-1568608064,1,['message'],['messages']
Integrability,"When Davix is not builtin to ROOT, it's not necessary to propagate link dependencies on Libxml2 and OpenSSL.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2343:72,depend,dependencies,72,https://root.cern,https://github.com/root-project/root/pull/2343,1,['depend'],['dependencies']
Integrability,"When MathMore compiled, rootfit uses includes from MathMore; To do this, roofit has to depend on `MathMore`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5439:87,depend,depend,87,https://root.cern,https://github.com/root-project/root/pull/5439,1,['depend'],['depend']
Integrability,"When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**; Currently, the abstract interface does not have Type/Streamer info such that root complains:; `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`; How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3222:167,depend,dependency,167,https://root.cern,https://github.com/root-project/root/pull/3222,5,"['depend', 'interface']","['dependency', 'interface']"
Integrability,"When TCanvas created with TWebCanvas, it will be marked as batch; This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2805:155,interface,interface,155,https://root.cern,https://github.com/root-project/root/pull/2805,1,['interface'],['interface']
Integrability,"When a dependent module has NO_CXXMODULE specified, we do not generate it's .pcm file. . This commit ensures CMake checks for NO_CXXMODULE property for a dependancy. Also specify NO_CXXMODULE for Tree on Windows. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5798:7,depend,dependent,7,https://root.cern,https://github.com/root-project/root/pull/5798,2,['depend'],"['dependancy', 'dependent']"
Integrability,"When a root is not found in a given interval, an error message is produced written some information in the standard output. This is now fixed and the ROOT error message reporting system is now used, so the message can in case be suppressed. ; Thanks for the user that reported in https://root-forum.cern.ch/t/turn-off-error-messages-from-tf1-getx/38175",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5076:55,message,message,55,https://root.cern,https://github.com/root-project/root/pull/5076,4,['message'],"['message', 'messages-from-']"
Integrability,"When a simultaneous pdf is composed by a not-extended pdf and an extended pdf, RooSimultaneous::extendMode() returns ; `MustBeExtended` or ` CanNotBeExtended` depending on the initial category value. . See example and report on ; https://root-forum.cern.ch/t/use-of-roosimultaneous-pdf-with-mustbeextended-and-cannotbeextended-pdfs/42462",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6894:159,depend,depending,159,https://root.cern,https://github.com/root-project/root/issues/6894,1,['depend'],['depending']
Integrability,"When building ROOT's libGFAL using gfal2, srm-ifce is not a build dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6233:66,depend,dependency,66,https://root.cern,https://github.com/root-project/root/pull/6233,1,['depend'],['dependency']
Integrability,When building latest ROOT (6.28.02) with latest Protobuf 22.4 tmva/sofie_parsers build fails during linking step with errors of the type:; ```; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::log_internal::LogMessage::OstreamView::~OstreamView()...; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::Mutex::~Mutex()'; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `utf8_range::IsStructurallyValid(...; ```; The problem seems to be caused by adding new dependency of Protobuf on Abseil in Protobuf 22.x (https://protobuf.dev/news/2022-08-03/). To make the code build I needed to:; Add in file `cmake/modules/SearchInstalledSoftware.cmake` after line ; ```; find_package(Protobuf); ```; lines (probably this should be dependent on version of Protobuf); ```; find_package(absl REQUIRED); find_package(utf8_range REQUIRED); ```; In file `tmva/sofie_parsers/CMakeLists.txt` add inside linking after line; ```; ${Protobuf_LIBRARIES}; ```; lines; ```; absl::str_format_internal; absl::log_internal_message; absl::hash; absl::flat_hash_set; absl::log_internal_check_op; utf8_range::utf8_validity; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12770:530,depend,dependency,530,https://root.cern,https://github.com/root-project/root/issues/12770,2,['depend'],"['dependency', 'dependent']"
Integrability,"When building with CMSSW, root was being in an infinite loop when; parsing this forward declaration at TCling::RegisterModule:; `namespace reco{namespace btau{enum __attribute__((annotate(\""$clingAutoload$DataFormats/BTauReco/interface/TaggingVariable.h\""))) TaggingVariableName : unsigned int;}}`. This patch fixes the bug which nsPos was always the size of namespace; name (4, in this case)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3186:226,interface,interface,226,https://root.cern,https://github.com/root-project/root/pull/3186,1,['interface'],['interface']
Integrability,When calling Minimize the global prnit level is synchronized to the local one and; then re-set to its original value. This PR replaces #2305,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5128:48,synchroniz,synchronized,48,https://root.cern,https://github.com/root-project/root/pull/5128,1,['synchroniz'],['synchronized']
Integrability,"When calling ROOT_EXECUTABLE from outside of ROOT (e.g. roottest), the; dependency on move_headers, which only works in the project ROOT,; must be ignored.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4367:72,depend,dependency,72,https://root.cern,https://github.com/root-project/root/pull/4367,1,['depend'],['dependency']
Integrability,"When cmake flag `-Ddev=ON` specified, R__LESS_INCLUDES macro is defined. It can be used in different places to reduce/remove includes and replace them by forward declarations - if necessary. Old includes can remain for a while - otherwise lot of user codes can be broken suddenly. Code example:; ```; #ifdef R__LESS_INCLUDES; class TBranch;; class TBuffer;; class TList;; #else; #include ""TBranch.h""; #include ""TBuffer.h""; #include ""TList.h""; #endif; ```. Main changes:; * Classes `TBuffer` and `TDatime` not used in TDirectory.h, can be removed; * Also TList.h can be replaced by forward declarations in TDirectory.h; * Several includes in TClass.h are not used, but lot of code depends on it; * In TTree.h includes TBranch.h, TList.h, TBuffer.h replaced by forward declarations. Main advantage - one really see which includes are really required and not relies on the fact, that some basic includes like TSystem.h or TDirectory.h provides includes for different containers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5123:680,depend,depends,680,https://root.cern,https://github.com/root-project/root/pull/5123,1,['depend'],['depends']
Integrability,"When compiled in with '-Ddev=ON', warning becomes errors. ```; In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:; tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]; 211 | assert(length == ConvertShapeToLength(fShapeC));; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9341:278,depend,depend,278,https://root.cern,https://github.com/root-project/root/pull/9341,1,['depend'],['depend']
Integrability,When did we visibly (eg through a warning message) deprecate `-c`? We need at least one production release where this was deprecated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4360#issuecomment-529229650:42,message,message,42,https://root.cern,https://github.com/root-project/root/pull/4360#issuecomment-529229650,1,['message'],['message']
Integrability,"When generating such a pdf from prototype data, the prototype needs to; contain all the subcategories of the super-category, and it does so by; checking the super-category servers. However, recently; `RooSuperCategory` was changed to contain a `RooMultiCategory`; internally, and the only reported direct server is the internal; multi-category. This leads to a wrong generation (the prototype data is; ignored, the gen context refers to the current labels). The solution that this commit suggests is to use; `RooSuperCategory::inputCatList()` to inspect the internal categories; instead of using the client-server interface. Actually, the; client-server interface is not meant to be used for inspection like; that, just for general dependency management in the evaluation. Closes https://github.com/root-project/root/issues/12020.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12022:614,interface,interface,614,https://root.cern,https://github.com/root-project/root/pull/12022,3,"['depend', 'interface']","['dependency', 'interface']"
Integrability,"When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree ; do not import any data and make an empty dataset. ; This avoid importing the variables using the current values, which will be identical for every event.; This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7347:382,message,message,382,https://root.cern,https://github.com/root-project/root/pull/7347,1,['message'],['message']
Integrability,"When injecting symbols, do not rely on the last Module:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7506:5,inject,injecting,5,https://root.cern,https://github.com/root-project/root/pull/7506,2,['inject'],['injecting']
Integrability,"When integrating a region next to a narrow Crystal Ball shape, the integral; can evaluate to zero. Since RooFit cannot deal with zero integrals,; the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4000:5,integrat,integrating,5,https://root.cern,https://github.com/root-project/root/pull/4000,1,['integrat'],['integrating']
Integrability,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16099:5,integrat,integrating,5,https://root.cern,https://github.com/root-project/root/pull/16099,2,['integrat'],"['integrating', 'integration']"
Integrability,"When linking against gtest/gmock, the include directories are not added; to the newly created targets. This adds INTERFACE includes to these; targets, so includes for all subsequent targets will fall into place. @reikdas This hopefully fixes the problem that you were seeing in `roottest`. Can you try to rebase on this branch, and test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5366:113,INTERFACE,INTERFACE,113,https://root.cern,https://github.com/root-project/root/pull/5366,1,['INTERFACE'],['INTERFACE']
Integrability,"When opening files reconstructed with the SHiP framework, trying to open the second cycle of the cbmsim tree results in a segmentation violation and (depending on ROOT version? not always) the following error:. `Error in <TBufferFile::CheckByteCount>: object of class TClonesArray read too few bytes: 66 instead of 7071`. A small reproducer file:. https://cernbox.cern.ch/s/MSDo7DAuFOuUlMc. Tried with ROOT versions 6.26/06, 6.26/02, from the SHiP software stack and from conda, both using `rootbrowse` and `root`. I assume ROOT doesn't like how this file is created. Accessing all branches using (py)ROOT seems to work fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12537:150,depend,depending,150,https://root.cern,https://github.com/root-project/root/issues/12537,1,['depend'],['depending']
Integrability,"When passing `-DPYTHON_EXECUTABLE=/my/path/to/python2` on macOS ROOT fails to configure with newer CMake versions with a bizarre error of:; ```; -- Preferring Python version 3; -- Found Python: /Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/bin/python2.7 (found version ""2.7.15"") found components: Interpreter Development; -- Could NOT find Python (missing: Development) (found version ""2.7.15""); -- Looking for OpenGL; -- Could NOT find OpenGL (missing: OPENGL_gl_LIBRARY OPENGL_INCLUDE_DIR); CMake Error at cmake/modules/SearchInstalledSoftware.cmake:610 (message):; OpenGL package (with GLU) not found and opengl option required; Call Stack (most recent call first):; CMakeLists.txt:167 (include); ```; Looking at the variables I see a weird mixture of python 2 and python 3:; ```; //; PYTHON_EXECUTABLE-CACHED:STRING=/Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env/bin/python. // Path to a program.; Python_EXECUTABLE:FILEPATH=/Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env/bin/python2.7. // Path to a file.; Python_INCLUDE_DIR:PATH=/usr/local/Cellar/python/3.7.6/Frameworks/Python.framework/Versions/3.7/include/python3.7m. // Path to a library.; Python_LIBRARY_DEBUG:FILEPATH=Python_LIBRARY_DEBUG-NOTFOUND. // Path to a library.; Python_LIBRARY_RELEASE:FILEPATH=/usr/local/opt/python/Frameworks/Python.framework/Versions/3.7/lib/libpython3.7m.dylib. // Path to a file.; Python_NumPy_INCLUDE_DIR:PATH=/Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env/lib/python2.7/site-packages/numpy/core/include; ```; This PR includes one way of fixing the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4832:767,message,message,767,https://root.cern,https://github.com/root-project/root/pull/4832,1,['message'],['message']
Integrability,"When reverting, please enhance the commit message with the reason for the reversions. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3788#issuecomment-491303965:42,message,message,42,https://root.cern,https://github.com/root-project/root/pull/3788#issuecomment-491303965,1,['message'],['message']
Integrability,"When running ccmake in a root build directory, I noticed that some variable descriptions are empty (usually one sees a one-line description stemming from cmake/modules/RootBuildOptions.cmake). This happens when their value is forced in cmake/modules/SearchInstalledSoftware.cmake. This also affects the comments in builddir/CMakeCache.txt. I claim that when forcing these variables' values, the comment is even more important than when they remain at their defaults or user-set values. In the below patch, I basically ran an editor macro retaining the values of `${opt}_description` (as set by `ROOT_BUILD_OPTION`) and adds a very brief explanation of why the value got changed (usually by inspecting the immediate control flow and/or echoing the status message that is print out anyway). The comments are sometimes sub-optimal (when values are forced to the value that the user has set themselves anyway), but … I guess it's still nice to point out ""you had no choice here"". Unrelated to the main part:. `tmva-cuda` is force set, but nowhere else used, I suspect this should've been `tmva-gpu`. In one place I replaced; ```; if (something); else(); code; ```; by; ```; if (NOT something); code; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2056:754,message,message,754,https://root.cern,https://github.com/root-project/root/pull/2056,1,['message'],['message']
Integrability,When testing #6385 I've had issues with the linking order of the LLVM libs due to CMake not knowing about their dependencies. I don't have a log or reproducer to hand but this patch was enough to fix it:. https://github.com/chrisburr/root-feedstock/blob/4dff10152d66bd0e873b60150e72cf0f9bfa8c19/recipe/patches/0001-Use-find_package-for-llvm-clang.patch. The `get_directory_property` call was also an issue. That patch contains the values copied from a build with `builtin_llvm=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7176:112,depend,dependencies,112,https://root.cern,https://github.com/root-project/root/issues/7176,1,['depend'],['dependencies']
Integrability,"When the `SplitRange` command arguemnt is used in; `RooAbsPdf::createNLL`, the actual range names used for the fit depend on the channel, with the range names suffixed by the category name. This should be considered correctly in the overlap checks. Closes #11396.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11401:115,depend,depend,115,https://root.cern,https://github.com/root-project/root/pull/11401,1,['depend'],['depend']
Integrability,"When the expected number of events becomes negative, this can happen for some combinations of the parameters, ; `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. ; A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: ; ```; {; RooWorkspace w;; w.factory(""mu[1,-1.5,10]"");; w.factory(""prod::ns(1,mu)"");; w.factory(""prod::nb(b[1,0,10],theta[1])"");; w.factory(""sum::ntot(ns,nb)"");; w.factory(""Uniform::ff(x[0,1])"");; w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");; auto x = w.var(""x"");; RooDataSet d(""data"",""data"",*x);; d.add(*x); ; auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();; nll->plotOn(pl);. pl->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8011:154,message,message,154,https://root.cern,https://github.com/root-project/root/issues/8011,1,['message'],['message']
Integrability,"When the normalization range for coefficient determination of a; RooAddPdf is changed, the AddPdf's projection cache needs to be reset,; just like it is already done in `RooAddPdf::fixCoefNormalization`.; Otherwise, there will be problems in the pdf evaluation and integration; because the projection cache is invalid. A unit test based on the GitHub issue that reported this problem is also; implemented. Closes https://github.com/root-project/root/issues/10988. Furthermore, another potential RooAddPdf problem is fixed, where several instances of RooRecursiveFraction were created with the same name (which could become problematic for example when using the new BatchMode).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10995:265,integrat,integration,265,https://root.cern,https://github.com/root-project/root/pull/10995,1,['integrat'],['integration']
Integrability,"When trying to build with `-Dbuiltin_llvm=OFF` on Nixpkgs on NixOS (x86_64-linux),. ```; -- Configuring done; CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:735 (add_dependencies):; The dependency target ""install-clang"" of target ""install-clang++"" does not; exist.; ```. <details>; <summary>Full build log</summary>; <pre wrap=true>; building '/nix/store/8xsj5zq00fkbndl1zzjngmxj3hhi51hd-root-6.28.00.drv'...; unpacking sources; unpacking source archive /nix/store/y5m4pr7c6vgjr34zqdz7wv819ln1mkj0-source; source root is source; patching sources; applying patch /nix/store/qljayx9yxgyx2xnf81b3rzzi99azd5d6-sw_vers.patch; patching file cmake/modules/SetUpMacOS.cmake; Hunk #1 succeeded at 8 with fuzz 1 (offset -20 lines).; Hunk #2 succeeded at 30 (offset -20 lines).; Hunk #3 succeeded at 74 (offset -34 lines).; patching file config/root-config.in; Hunk #1 succeeded at 313 (offset 1 line).; Hunk #2 succeeded at 373 (offset 1 line).; configuring; patching script interpreter paths in build/unix/; build/unix/makedistsrc.sh: interpreter directive changed from ""#! /bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/coreteam.sh: interpreter directive changed from ""#!/bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/compiledata.sh: interpreter directive changed from ""#!/usr/bin/env bash"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/bash""; build/unix/makepchinput.py: interpreter directive changed from ""#! /usr/bin/env python"" to ""/nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python""; build/unix/rootmapcat.py: interpreter directive changed from ""#! /usr/bin/env python"" to ""/nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python""; build/unix/makereleasenotes.sh: interpreter directive changed from ""#! /bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/pandoc-jira.sh: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:243,depend,dependency,243,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,2,"['depend', 'wrap']","['dependency', 'wrap']"
Integrability,"When unloading a 'compiled' TClass, TClass sets the state of the TClass to the most information possible. This usually means setting the ClassInfo if the interpreter information is still known about the class. In the case of std::tuple is order to do that we need to generate code that depends on other types (that may also be unloaded), so skip that steps (which lead to 'compilation error' from the interpreter in the report cases (and a crash due to a couple of others issues solved also in this PR).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12568:286,depend,depends,286,https://root.cern,https://github.com/root-project/root/pull/12568,1,['depend'],['depends']
Integrability,"When user invoke `InsertPointBefore(0, x, y)` with an empty TGraph (fNpoints==0), they will receive a message: . > Error in <TGraph::TGraph>: Inserted point index should be <= -1. This is confusing. The point index can not be -1. It also prevents insertion to an empty graph. People who familiar with `std::vector` may expect the behavior likes `vec.insert(vec.end(), value)`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5149:102,message,message,102,https://root.cern,https://github.com/root-project/root/pull/5149,1,['message'],['message']
Integrability,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10763:109,integrat,integration,109,https://root.cern,https://github.com/root-project/root/issues/10763,3,['integrat'],['integration']
Integrability,"When using `builtin_openssl=ON`, CMake erroneously exports the builtin static libraries in `ROOTConfig-targets.cmake`, which causes problems with dependent projects. In order to avoid this, we need `Net` and `RHTTP` to use SSL as a private dependency. Since CMake requires `target_link_libraries()`; to either be all-plain (as before) or all-keyword (required to allow `PRIVATE` linking), we need to move the build system to use all-keyword linking only. Fixes: [ROOT-9532](https://sft.its.cern.ch/jira/browse/ROOT-9532).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2323:146,depend,dependent,146,https://root.cern,https://github.com/root-project/root/pull/2323,2,['depend'],"['dependency', 'dependent']"
Integrability,When using in TMVA Variable Array (via DataLoader::AddVariableArray) in DataSetFactory::BuildEventVector ; add a check that the data collection (in the TTree) have a size at least large as requested.; If size is smaller add a Fatal message; If size is larger add the first time a warning message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6372:232,message,message,232,https://root.cern,https://github.com/root-project/root/pull/6372,2,['message'],['message']
Integrability,"When using source bilds, all necessary source includes; will be provided via dependencies. When using installed root,; anyway ${CMAKE_BINARY_DIR}/include has to be used. Reduce usage of `find_package(ROOT)` method. ; If was misused to produce variables like `ROOT_asimage_FOUND` or `ROOT_vc_FOUND`; Now only kept at the place where it can be really used outside ROOT.; Plus two historical files in `test/` and `tutorials/` are mostly unchanged while too many such variables are used",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5577:77,depend,dependencies,77,https://root.cern,https://github.com/root-project/root/pull/5577,1,['depend'],['dependencies']
Integrability,"When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and; JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see ; https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with ; ```; sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""); ```; and then later use the other signature of `RDataFrame::Define`; ```; df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. it does not work. Doing: ; `print(sofie_functor)` results in None object. Trying also this , it does not work: ; ```; df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10684:31,integrat,integrate,31,https://root.cern,https://github.com/root-project/root/issues/10684,1,['integrat'],['integrate']
Integrability,"When using this in externals projects, this happens:; ```; The link interface of target ""ROOT::Core"" contains:. PkgConfig::LIBBSD. but the target was not found.; ```; Should be reasonably easy to fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12154#issuecomment-1666908179:68,interface,interface,68,https://root.cern,https://github.com/root-project/root/pull/12154#issuecomment-1666908179,1,['interface'],['interface']
Integrability,When we have a module file we store the rdict in it and reference it through a 'virtual' TMemFile. Depends on #3891,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3965:99,Depend,Depends,99,https://root.cern,https://github.com/root-project/root/pull/3965,1,['Depend'],['Depends']
Integrability,"When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14105:303,depend,depending,303,https://root.cern,https://github.com/root-project/root/pull/14105,1,['depend'],['depending']
Integrability,When xmin=xmax or ymin=ymax the transformed min max are Nan and this causes the; routine to find the triangles to hang forever.; Now in this case and when also no trisangles are found the default zero value is always return. Update also the documentation of the class and of TGraphDelaunay2D. This Pull request fixes #10266,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10276:81,rout,routine,81,https://root.cern,https://github.com/root-project/root/pull/10276,1,['rout'],['routine']
Integrability,Whether an external package is an option depends on significance :-) What does O2 do with this on Linux?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13146#issuecomment-1669585082:41,depend,depends,41,https://root.cern,https://github.com/root-project/root/pull/13146#issuecomment-1669585082,1,['depend'],['depends']
Integrability,Which version of gcc 'starts' having this message?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10500#issuecomment-1114263718:42,message,message,42,https://root.cern,https://github.com/root-project/root/pull/10500#issuecomment-1114263718,1,['message'],['message']
Integrability,"While TBuffer has many virtual methods, provide `override` and `final` specifiers for all derived classes. This will help to maintain code in the future - any bogus changes in TBuffer class interface will be reported already during compilation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4239:190,interface,interface,190,https://root.cern,https://github.com/root-project/root/pull/4239,1,['interface'],['interface']
Integrability,"While debugging a fitting the console gets clogged by a lot of messages of calling constructors and destructors of TFoamVect. I set the debug level needed to 5 for the messages to appear, and leaving the more important ones (like errors) as they were, in debug level 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6835:63,message,messages,63,https://root.cern,https://github.com/root-project/root/pull/6835,2,['message'],['messages']
Integrability,"While debugging the failure triggered by a recent PR updating the behavior of `gDirectory`: https://github.com/root-project/root/pull/11908#issuecomment-1361086304 (The reported error is that a name/symbol that should have been detected and loaded by Cling was not found ... the direct cause was that `gDirectory` was unexpectedly `nullptr`), I discovered that notebooks (or a least the way they are run in the test `JupyROOT-ROOT_kernel_notebook`), runs several threads to actually execute the cells. It is also clear from my investigation that it does not enable thread safety. Whether we need to change depends on whether `Jupyter` (or the way it is use here) guaranteed that only one of the thread would ever be run concurrently (if not then we must enable thread safety). However, one more thing to consider is that when thread safety is enabled, each thread get its own thread local gDirectory pointers. If each cell is run in a separate thread, then change to `gDirectory` in one cell will not be reflected in the next cell. (this would be true also for any user level thread local variable).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11955:606,depend,depends,606,https://root.cern,https://github.com/root-project/root/issues/11955,1,['depend'],['depends']
Integrability,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message.; 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests.; 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well.; 5. Commit 5 is again a minor refactoring to reduce some duplicated code.; 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion.; 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format.; 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15797#issuecomment-2183530657:166,message,message,166,https://root.cern,https://github.com/root-project/root/pull/15797#issuecomment-2183530657,2,['message'],['message']
Integrability,"While parsing LateParsedTemplates, Clang assumes that the Global DeclID matches; with the Local DeclID of a Decl. This is not the case when we have multiple; dependent modules , each having their own LateParsedTemplate section. In such a; case, a Local/Global DeclID confusion occurs which leads to improper casting of; FunctionDecl's. This commit creates a Vector to map the LateParsedTemplate section of each; Module with their module file and therefore resolving the Global/Local DeclID; confusion. Reviewed By: rsmith. Differential Revision: https://reviews.llvm.org/D86514. @vgvassilev",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6307:158,depend,dependent,158,https://root.cern,https://github.com/root-project/root/pull/6307,1,['depend'],['dependent']
Integrability,"While preparing another PR, I noticed various flaws with the RooLagrangianMorphFunc that need to be fixed by someone who is more familiar with this class, like @rahulgrit:. - [x] There are [unused free functions](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L645) only in the `.cxx` source (e.g. `get()`, the other overload of `get()`, and `addCouplings()`). If they are unused in the remaining file and not part of the public interface, why not remove them?; - [x] There is an [unreachable code branch here](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L1905). The `setup()` function is called in the class constructor when `_diagrams` is still empty. So the `diagrams.size() > 0` check will never be true and the if-block can be removed, no?; - [x] The [`_nonInterferig`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/inc/RooLagrangianMorphFunc.h#L266) data member is used in a few member functions, but it is never filled so always an empty vector. How meaningful is that? Can `_nonInterfering` be removed? ; - [x] It's annoying to have all these explicit usage of `this`, just to access a class member that is already marked as a class member with the underscore prefix convention. Please replace all occurences of `this->_` in the source file with just `_`.; - [x] [`makeCrosssectionContainer()`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L2128) returns a `TPair*` that is owned by the caller. Please return `std::unique_ptr<TPair>` is this case, or even better return a `std::pair` instead (avoid using old ROOT container classes that were written before the standard library was introduced).; - [x] Similarly, [`createTH1`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529cc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9845:510,interface,interface,510,https://root.cern,https://github.com/root-project/root/issues/9845,1,['interface'],['interface']
Integrability,"While testing my packages which use PyROOT, I stumbled across a little problem with ROOT and pytest which I propose to fix. Assume you have this very minimal (basically empty) python package:; ```; .; ├── setup.py; └── tests; └── test_test.py. 1 directory, 2 files; ```; Content of `setup.py`:; ```python; from setuptools import setup, find_packages. setup(; name=""root_cleanup_test"",; packages=find_packages(),; setup_requires=[""pytest-runner""],; test_suite=""tests"",; ); ```; Content of `test_test.py`; ```; import unittest; import ROOT. class TestTest(unittest.TestCase):; def test_test(self):; pass; ```. Now if you run the tests with `python setup.py pytest` which gives you the warning and error I attach to the bottom of this post. I think this is maybe related to some multithreading in the pytest runner. When you run the test alone with `pytest tests/test_test.py`, you won't get the error. My setup: ROOT 6.16/00 and Python 3.7. Let me know if I can do anything else to test this! It would be great if pytest works smoothly with ROOT. ````; ========== warnings summary ==========; /usr/lib/python3.7/site-packages/ROOT.py:98: DeprecationWarning: invalid escape sequence \S; message='class \S* already in TClassTable$' ). -- Docs: https://docs.pytest.org/en/latest/warnings.html; ========== 1 passed, 1 warnings in 0.41 seconds ==========; Error in atexit._run_exitfuncs:; Traceback (most recent call last):; File ""/usr/lib/python3.7/site-packages/ROOT.py"", line 782, in cleanup; facade = sys.modules[ __name__ ]; KeyError: ""ROOT""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3595:1184,message,message,1184,https://root.cern,https://github.com/root-project/root/pull/3595,1,['message'],['message']
Integrability,"While working on this issue, I noticed that also `RooHistPdf` is also not bug free. Here is what you can do to get strange results with it:; ```C++; // g++ $(root-config --cflags) -o testHistPdf testHistPdf.cc $(root-config --libs) -lRooFitCore -lRooFit -g. #include ""RooRealVar.h""; #include ""RooHistPdf.h""; #include ""RooDataHist.h""; #include ""TH2D.h""; #include ""TF2.h"". using namespace RooFit;. int main(int argc, char const *argv[]) {. RooRealVar x(""x"",""x"",0, 10);; RooRealVar y(""y"",""y"",0.05);; TH2D h2(""h2"",""h2"",20,0,10, 30, 0, 10);; TF2 f2(""f2"",""y < 0.1"");; h2.FillRandom(""f2"",1000);. RooArgSet argSet{x, y};. RooDataHist dh(""dh"",""dh"",argSet,&h2);; RooHistPdf phf(""phf"","""",argSet,dh);; x.setRange(""R1"",0,5);; y.setRange(""R1"",0,10);; auto int1 = phf.createIntegral(argSet,argSet);; std::cout << int1->getVal() << std::endl;; auto int2 = phf.createIntegral(argSet,argSet, ""R1"");; std::cout << int2->getVal() << std::endl;. auto int3 = phf.createIntegral(x,x);; std::cout << int3->getVal() << std::endl;; auto int4 = phf.createIntegral(x,x,""R1"");; std::cout << int4->getVal() << std::endl;. return 0;; }; ```; Obviously the integral of a constant function if you only take half of the x range should be half of the value you get for the full range, even if there is an additional variable in the slice set. However, this is what the program above outputs in ROOT master:; ```; 1; 0.493; 1; 0.164333; ```. The first 3 integrals are correct, but the final one (custom range for x and slice of y) gives the wrong result (0.493 expected). I thought about how the integration should be done correctly for all of the `RooHistPdf`, `RooHistFunc` and `RooParamHistFunc` family. Some updates to the code to fix all the issues can be found in PR https://github.com/root-project/root/pull/7271.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7182#issuecomment-783663166:1560,integrat,integration,1560,https://root.cern,https://github.com/root-project/root/issues/7182#issuecomment-783663166,1,['integrat'],['integration']
Integrability,"Why add a patch file? We can easily check what changes have been made to Cppyy with git.; Removing the preprocessor macro will probably not please Wim, since that turns an optional into a hard dependency on ROOT. Other than that, the changes look OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3455#issuecomment-469676935:193,depend,dependency,193,https://root.cern,https://github.com/root-project/root/pull/3455#issuecomment-469676935,1,['depend'],['dependency']
Integrability,Why don't you join us at https://mattermost.web.cern.ch/root/channels/root-io to discuss - that seems more interactive than this GH issue :-) Let me know if this doesn't work for you and I'll create a new issue where we can discuss this new interface. Thanks for your flexibility!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13958#issuecomment-1783010054:241,interface,interface,241,https://root.cern,https://github.com/root-project/root/issues/13958#issuecomment-1783010054,1,['interface'],['interface']
Integrability,Why for a small tessellated geometry the message appears . Tile degenerated 2: Length of sides of facet are too small. ![Carbonfiber_ring](https://github.com/root-project/root/assets/62834588/136f5857-781f-44c1-a6c5-9ce2398b61e9),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14283#issuecomment-1908537343:41,message,message,41,https://root.cern,https://github.com/root-project/root/issues/14283#issuecomment-1908537343,1,['message'],['message']
Integrability,Why is it not possible to just use the targets for each binary directly? Is there an example where roottest fails due to a dependency problem in a parallel build?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3279#issuecomment-455445517:123,depend,dependency,123,https://root.cern,https://github.com/root-project/root/pull/3279#issuecomment-455445517,1,['depend'],['dependency']
Integrability,Windows CMake project cannot find_library() after integrating with ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15727:50,integrat,integrating,50,https://root.cern,https://github.com/root-project/root/issues/15727,1,['integrat'],['integrating']
Integrability,Windows is not happy with the new test. I'm not sure how windows handles errors/warnings. Here's how the warning message looks now:; ![image](https://github.com/root-project/root/assets/29475282/2ddaff21-56d4-410e-95ef-852d02ba4d76),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645#issuecomment-1956072860:113,message,message,113,https://root.cern,https://github.com/root-project/root/pull/14645#issuecomment-1956072860,1,['message'],['message']
Integrability,"With Davix not present on the machine, the tutorials tutorials/v7/ntuple/ntpl004_dimuon.C is ran and fails:; ```; ""tutorial-v7-ntuple-ntpl004_dimuon"" start time: Dec 04 11:53 CST; Output:; ----------------------------------------------------------. Processing /home/pcanal/root_working/code/root/tutorials/v7/ntuple/ntpl004_dimuon.C...; terminate called after throwing an instance of 'std::runtime_error'; what(): Cannot find plugin handler for RRawFileDavix; CMake Error at /home/pcanal/root_working/build/master-opt/RootTestDriver.cmake:237 (message):; error code: Child aborted. <end of output>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6916:544,message,message,544,https://root.cern,https://github.com/root-project/root/issues/6916,1,['message'],['message']
Integrability,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12826:108,interface,interface,108,https://root.cern,https://github.com/root-project/root/pull/12826,5,"['depend', 'interface']","['dependents', 'depends', 'interface']"
Integrability,"With `RNTupleWriter::Append` / `RNTupleParallelWriter::Append`, the application must organize synchronization to the underlying `TFile`. To avoid locking for every `Fill`, https://github.com/root-project/root/pull/15239 introduced `FillNoCommit` and gives some guarantees so that locking is only necessary when calling `CommitCluster`. However that's still not ideal because `CommitCluster` will first call `CommitCluster` on every field, which will flush the column write buffers and trigger compression. This can be substantial for many fields or very large page sizes (compared to the cluster size). Ideally a `RNTupleFillContext` had a method to perform this work outside of the critical section, like `PrepareCommitCluster` or `FlushPageBuffers`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16241:94,synchroniz,synchronization,94,https://root.cern,https://github.com/root-project/root/issues/16241,1,['synchroniz'],['synchronization']
Integrability,"With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");; ******************************************************************************; *Tree :t : t *; *Entries : 1000 : Total = 424803 bytes File Size = 33982 *; * : : Tree compression factor = 12.78 *; ******************************************************************************; Cluster Range # Entry Start Last Entry Size; 0 0 49 10; ….; 18 900 949 10; 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range.; This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two; Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two; Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two; Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains; all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914; the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2741:602,message,message,602,https://root.cern,https://github.com/root-project/root/pull/2741,1,['message'],['message']
Integrability,"With llvm9, the module ptr gets reset upon emission.; Instead, just look for the symbol in the JIT - where it should be found,; as Init() is injecting it there, and we want to find *that* symbol,; not the one from the binary. Fixes `CodeUnloading/AtExit.C` cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7506:141,inject,injecting,141,https://root.cern,https://github.com/root-project/root/pull/7506,1,['inject'],['injecting']
Integrability,"With master (commit 7f3f3428e4d20) (but has been present for a long time), PyROOT overload resolution of function that takes an enum class is unstable (it appears to depend on the value rather than the type). With the test file below compiled by ACLiC (for example) running the script:; ```python; import ROOT. ROOT.gSystem.Load(""enums_cxx""). h = ROOT.Holder(); for i in range(10, 0, -1):; h.SetTwo(i); ROOT.to_string(h.two); ```; gives; ```txt; Calling to_string for enum EOne with 0; Calling to_string for enum EOne with 1; ...; ```. I.e. even-though the argument is an 'enum ETwo', the overload take an `enum EOne` actually called. In the original example (requires the code for Celeritas and VecGeom to build). For a similar script:; ```python; for i in range(0, 14, 1):; p.process_class = i; ROOT.celeritas.to_cstring(p.process_class); ```; I get:. ```txt; to_cstring ImportPhysicsVectorType called with 0 unknown; to_cstring ImportPhysicsVectorType called with 1 linear; to_cstring ImportPhysicsVectorType called with 2 log; to_cstring ImportPhysicsVectorType called with 3 free; to_cstring ImportTableType called with 4 ionisation_subsec; to_cstring ImportTableType called with 5 csda_range; to_cstring ImportTableType called with 6 range; to_cstring ImportTableType called with 7 secondary_range; to_cstring ImportTableType called with 8 inverse_range; to_cstring ImportTableType called with 9 lambda; to_cstring ImportTableType called with 10 sublambda; to_cstring ImportTableType called with 11 lambda_prim; to_cstring ImportProcessType called with 12 ucn; to_cstring ImportProcessClass called with 13 annihilation; ```. i.e. the *same* code line given the *same* data members (and thus always the *same* type), call 3 different overloads over the loop iterations. (Funnily running the loop in reverse order leads to the expected/correct executions). I could not reproduce this instability with my simple example. . ```c++; #include <stdio.h>; #include <string>. enum class EOne; {; a,; b,; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7077:166,depend,depend,166,https://root.cern,https://github.com/root-project/root/issues/7077,1,['depend'],['depend']
Integrability,"With multiple concurrent `RNTupleFillContext`s, the order of clusters is generally indeterminate and entries are only partially ordered. With staged cluster committing, this restriction can be partially lifted by splitting a cluster commit into two phases:; 1. Once full, or when manually triggered, all fields are committed which triggers flushing of all columns. All pages are compressed and staged via the page sink. The result is a `RStagedCluster` that records all information for the second phase. This step can be repeated multiple times as entries are filled into the context.; 2. When appropriate for the application, all staged clusters can be committed, which logically appends them to the RNTuple. This is implemented in a single critical section, which guarantees that the clusters and their entries are consecutive. Moreover, by synchronizing the second phase between multiple contexts, the application can enforce a total ordering of all contained entries at reasonable resource consumption: During the first phase, all write buffers are flushed and will be reused for the following cluster. The metadata stored in `RStagedCluster` should require only minimal memory, which will accumulate while staging more clusters. Staged cluster committing is expected to be slightly slower than the default mode, but should still scale well as the second phase only updates the metadata which is a lightweight operation compared to preparing and filling entries, compressing pages, and writing them to disk. A noteworthy disadvantage is that staged cluster committing will lead to non-linear files, where sequentially iterating over clusters may require seeking to distant file offsets. The impact resulting from this will depend on the storage technology and the read pattern. Closes #16326",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16343:843,synchroniz,synchronizing,843,https://root.cern,https://github.com/root-project/root/pull/16343,2,"['depend', 'synchroniz']","['depend', 'synchronizing']"
Integrability,"With the following changes; ```; diff --git a/bindings/pyroot/pythonizations/python/ROOT/__init__.py b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; index 52d23a6fc3..790432eb3d 100644; --- a/bindings/pyroot/pythonizations/python/ROOT/__init__.py; +++ b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; @@ -79,6 +79,7 @@ def cleanup():; # Hard teardown: run part of the gROOT shutdown sequence.; # Running it here ensures that it is done before any ROOT libraries; # are off-loaded, with unspecified order of static object destruction.; + print(""Calling EndOfProcessCleanups from __init__.py""); backend.gROOT.EndOfProcessCleanups(); ; atexit.register(cleanup); diff --git a/core/base/src/TApplication.cxx b/core/base/src/TApplication.cxx; index 8bdaa03f8d..9a02160611 100644; --- a/core/base/src/TApplication.cxx; +++ b/core/base/src/TApplication.cxx; @@ -86,6 +86,7 @@ static void CallEndOfProcessCleanups(); // set gROOT in its end-of-life mode which prevents executing code, like; // autoloading libraries (!) that is pointless ...; if (gROOT) {; + std::cout << ""Calling EndOfProcessCleanups from TApplication\n"";; gROOT->SetBit(kInvalidObject);; gROOT->EndOfProcessCleanups();; }; ```. I get this; ```; $: python -c ""import ROOT""; Calling EndOfProcessCleanups from __init__.py; $: python -c ""import ROOT; ROOT.TH1F""; Calling EndOfProcessCleanups from __init__.py; Calling EndOfProcessCleanups from TApplication; ```. i.e. it looks to me that as long as anything is done in the PyROOT application other than simply importing the module, the second cleanup routine is called at the end of the process (after the Python one). Either one of these should probably not be called",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10743#issuecomment-1154462514:1576,rout,routine,1576,https://root.cern,https://github.com/root-project/root/issues/10743#issuecomment-1154462514,2,['rout'],['routine']
Integrability,"With this PR, the normalization integrals are placed as separate objects in the serialized computation graph for the RooFitDriver. This is done by modifying the RooFit computation graph, injecting a `RooNormalizedPdf` on top of every normalized pdf where the normalization is done instead of doing it hardcoded in the `computeBatch` function for each pdf. These changes make all the stressRooFit unit tests pass with the `CPU` and `CUDA` batch mode, so stressRooFit runs with these instances are added as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9956:187,inject,injecting,187,https://root.cern,https://github.com/root-project/root/pull/9956,1,['inject'],['injecting']
Integrability,"With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:; 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator.; 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15939:218,interface,interface,218,https://root.cern,https://github.com/root-project/root/pull/15939,3,['interface'],['interface']
Integrability,"With this change, the method invocation request is received directly from civetweb server thread. The changes are executed through REveManager thread execution thread that processes. The REveManger::DoRedraw() method bacame depreciated. It is now possible to apply changes without a client interface after the connection is created. This example is implemented in autoplay of events in tutorials/eve7/event_demo.C. Other changes:; * Fix memory leaks in the client; * Reduce calls of TSystem::ProcessLine; * Add structure to transfer server messages to client log (REveLog).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8114:290,interface,interface,290,https://root.cern,https://github.com/root-project/root/pull/8114,2,"['interface', 'message']","['interface', 'messages']"
Integrability,With this only core/imt is missing dependency tracking (on MacOS).; See https://sft.its.cern.ch/jira/browse/ROOT-9066,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1198:35,depend,dependency,35,https://root.cern,https://github.com/root-project/root/pull/1198,1,['depend'],['dependency']
Integrability,With this patch we can finally do `make -j200`! (And I no longer have to explain to the summer students why they have to type `make Cling; make` to compile root :) ). We also get the module dependencies for rootcling right. See the specific commits for the individual fixes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/752:190,depend,dependencies,190,https://root.cern,https://github.com/root-project/root/pull/752,1,['depend'],['dependencies']
Integrability,With this patch we create chains with kWithoutGlobalRegistration in; RDF's constructors -- this is the chain object that RDF uses for; single-thread runs and to look up which branches exist and other; information about the input dataset. The deregistration of that chain from the global lists can take; some time in certain cases. This PR depends (and is based) on #11321 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11322:339,depend,depends,339,https://root.cern,https://github.com/root-project/root/pull/11322,1,['depend'],['depends']
Integrability,"With very few entries passing a given RDataFrame cutflow, it can happen; that a TBB task ends up processing zero ""good"" entries.; In that scenario, it could happen that the first TTree header flushed to; the output file from a Snapshot action was for a tree with no entries and; no branches. This effectively set the number of branches to; zero for all the content written to file, even if following buffers; contained well-formed TTrees. With this commit, if the output tree contains zero entries, we avoid; flushing it to file. And since the next task will remove this TTree from; the output directory, we can be sure that the buffer with the malformed; TTree will never be written out. This fixes ROOT-9471. <hr>. The fix requires that output trees are deregistered from output directories at the end of a task, so that the output directory does not ever try to flush them. This is done by giving `SnapshotHelperMT` ownership of its output trees (see explanation in the relevant commit message).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2197:989,message,message,989,https://root.cern,https://github.com/root-project/root/pull/2197,1,['message'],['message']
Integrability,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:; ```c; #include <stdio.h>. int main() {; printf(""Hello from JIT\n"");; }; ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR.; > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7419#issuecomment-799389082:1081,message,message,1081,https://root.cern,https://github.com/root-project/root/pull/7419#issuecomment-799389082,2,['message'],['message']
Integrability,"Without some of the over-ridding behavior, there would be no (easy) way to disable optimization.The old behavior was:; ```; +g -> -g (and default compiler optimization); +O -> -O3 (or more exactly the optimization level select at ROOT configuration time); +gO -> -g (and default compiler optimization); + -> -g or -O3 depending on whether ROOT was build in debug mode ... except that this is broken since the move to CMake :( so actually always -O3; ```; The new behavior could be:; ```; +g -> -g (and default compiler optimization); +O -> -O3 (or more exactly the optimization level select at ROOT configuration time); +gO -> -g -O3 ; + -> -g or -O3 depending on whether ROOT was build in debug mode ... except that this is broken since the move to CMake :( so actually always -O3; ```; So this can be fine as we **MUST** have a way to completely disable optimization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7377#issuecomment-791810191:318,depend,depending,318,https://root.cern,https://github.com/root-project/root/issues/7377#issuecomment-791810191,2,['depend'],['depending']
Integrability,"Without this dependency, a change to one of `LinkDef{1,2,3}.h` will; not trigger the regeneration of the `G__Core.cxx` dictionary, since; only the main `LinkDef.h` header was explicily listed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1374:13,depend,dependency,13,https://root.cern,https://github.com/root-project/root/pull/1374,1,['depend'],['dependency']
Integrability,"Without this, dependencies specified in ROOT_LINKER_LIBRARY() get; dropped without any warning, leading to underlinking in external; projects that make use of ROOT CMake macros (including roottest). Fixes: [ROOT-9827](https://sft.its.cern.ch/jira/browse/ROOT-9827)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3050:14,depend,dependencies,14,https://root.cern,https://github.com/root-project/root/pull/3050,1,['depend'],['dependencies']
Integrability,"Work in progress to fully generalize gradient interfaces, in order to allow vectorization and parallelization of the fitting methods that make use of them. The implementation of Chi2 gradient has been parallelized and vectorized: these new implementations are unit tested and benchmarked against the simple scalar serial case. To do: test the general use case, where the user simply calls the fitting method specifying that the gradient should be used. Early reviews are more than welcome!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793:46,interface,interfaces,46,https://root.cern,https://github.com/root-project/root/pull/793,1,['interface'],['interfaces']
Integrability,Working on the tdatasource in parallel here (https://github.com/dpiparo/tdatasource). The interface designed for it seems to do the job well. Still some issues in reading root files - working on them!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/983#issuecomment-329363683:90,interface,interface,90,https://root.cern,https://github.com/root-project/root/pull/983#issuecomment-329363683,1,['interface'],['interface']
Integrability,"Wouldn't it be easier to just remove the pymva part? I think an explicit library load in a tutorial is a little bit weird, from the users perspective. It does not convey the message of a clean tutorial for a stable feature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5559#issuecomment-625078965:174,message,message,174,https://root.cern,https://github.com/root-project/root/pull/5559#issuecomment-625078965,1,['message'],['message']
Integrability,"Wouldn't mind a more explicit commit message, but looks ok if it fixes the cxxmodules failing tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1682#issuecomment-369269924:37,message,message,37,https://root.cern,https://github.com/root-project/root/pull/1682#issuecomment-369269924,1,['message'],['message']
Integrability,"Wow, love this!. Random unsolicited feedback: ROOT convention for commit messages is to use the imperative mood and start with a capital letter ([we are not alone](https://chris.beams.io/posts/git-commit/)), and it might be useful to split the changes in different commits per repo subdirectories (tree, roofit, hist, math...) in case parts of this need to be reverted later for whatever reason.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-656194773:73,message,messages,73,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-656194773,2,['message'],['messages']
Integrability,"Wow, thanks for proving that this is possible!. I'm not a big fan of adding complexity that's mostly without effect for users: we had only one (1) complaint on this, ever, and that function is heavy stuff where I'm not sure whether all shells that currently support `thisroot.sh` will continue to be happy. Say ksh, zsh, etc... . Maybe an error message if `BASH_...` isn't available would be enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10332#issuecomment-1089164416:345,message,message,345,https://root.cern,https://github.com/root-project/root/pull/10332#issuecomment-1089164416,1,['message'],['message']
Integrability,"Wrap owning pointers in the RooFit tutorials in `std::unique_ptr`. This has three benefits:. 1. Less memory leaks in tutorials (`delete` was almost never done); 2. Tutorials would also run if the `RooFit::OwningPtr` were to be defined at `std::unique_ptr`, which is useful for debug builds; 3. Users learn about automatic memory management correctly",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12927:0,Wrap,Wrap,0,https://root.cern,https://github.com/root-project/root/pull/12927,1,['Wrap'],['Wrap']
Integrability,"Writer.cpp	2023-01-10 11:34:45.644464781 -0600; @@ -105,6 +105,7 @@; #include <algorithm>; #include <cassert>; #include <cstdint>; +#include <cstdio>; #include <cstdlib>; #include <cstring>; #include <ctime>; @@ -2498,6 +2499,8 @@; // did not result in us loading a module file for that submodule. For; // instance, a cross-top-level-module 'conflict' declaration will hit this.; unsigned ID = getLocalOrImportedSubmoduleID(Mod);; + fprintf(stderr, ""Mod=%X\n"", Mod);; + fprintf(stderr, ""Submodule=%s\n"", Mod->Name.c_str());; assert((ID || !Mod) &&; ""asked for module ID for non-local, non-imported module"");; return ID;; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp~	2023-01-06 05:04:43.000000000 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp	2023-01-10 13:21:47.554190854 -0600; @@ -26,6 +26,8 @@; using namespace clang;; using namespace serialization;. +#include <cstdio>; +; //===----------------------------------------------------------------------===//; // Declaration serialization; //===----------------------------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));. // If this declaration injected a name into a context different from its; ```; itself causes issues with dictionary generation. Once removed, compilation succeeds. As for the libunwind issue, I believe https://bugs.llvm.org/show_bug.cgi?id=44074 is illuminative. The LLVM/Clang in use in the Linux Docker container is configured to use `libc++`, `libc++abi`, `compiler-rt` and `libunwind`. It has the fix for the above-mentioned bug; however it appears that the LLVM/Clang 13 incorporated with ROOT at this time does not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1409129986:2061,inject,injected,2061,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1409129986,1,['inject'],['injected']
Integrability,Wrongly printing root CLI help message when using pyROOT with '-h' or '--help' in sys.argv,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7161:31,message,message,31,https://root.cern,https://github.com/root-project/root/issues/7161,1,['message'],['message']
Integrability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. $ clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/stognini -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -internal-isystem /Library",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:6320,contract,contract,6320,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,2,['contract'],['contract']
Integrability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. + clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/Comm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:6658,contract,contract,6658,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,2,['contract'],['contract']
Integrability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. + clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.module -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:6632,contract,contract,6632,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,2,['contract'],['contract']
Integrability,"X10.14.sdk/usr/include/machine/_types.h:34:2: error: architecture not supported ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_types.h:55:9: error: unknown type name '__int64_t'; did you mean '__int128_t'? ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_types.h:56:9: error: unknown type name '__int32_t'; did you mean '__int128_t'? ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_types.h:57:9: error: unknown type name '__int32_t'; did you mean '__int128_t'? ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_types.h:60:9: error: unknown type name '__uint32_t'; did you mean '__uint128_t'? ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_types.h:61:9: error: unknown type name '__uint32_t'; did you mean '__uint128_t'? . And 230 more. ### Warnings:; - CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:277 (MESSAGE): ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4201#issuecomment-521161432:1503,MESSAGE,MESSAGE,1503,https://root.cern,https://github.com/root-project/root/pull/4201#issuecomment-521161432,1,['MESSAGE'],['MESSAGE']
Integrability,"Yay, thanks for your help Sergey!. I put `TGLSdfFontMaker` in RGL as it requires off-screen GL context to render the SDF font texture. RGL already depends on libASImage ... TGLViewer::SaveAs() calls it directly to store screenshots into png/jpg files. Alja and I have checked it on mac and it works ok. There was an interesting side-story where libRGL got linked against /usr/X11R6/lib/libGL.so (presumably from an old install of XQuartz and libX11 stuff from homebrew -- it worked after we wiped both of those) instead of Apple's OpenGL framework. . I still want to test this on Windows, then I'll rebase and force-push so there's a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2252641668:147,depend,depends,147,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2252641668,1,['depend'],['depends']
Integrability,"Yeah, it'll be nice to have something like gInterpreter->Print(const char*) which already returns a string. It'll be a wrapper function of Evaluate and ToTypeAndValueString in TCling. What do you think @Axel-Naumann and @vgvassilev ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2644#issuecomment-422843414:119,wrap,wrapper,119,https://root.cern,https://github.com/root-project/root/pull/2644#issuecomment-422843414,1,['wrap'],['wrapper']
Integrability,"Yeah, they probably do some quirky simd stuff in there :). I realized yesterday that the stuff for creation of sdf textures always puts them in $ROOTSYS/ui5/eve7/ ... which will not be writable for experiment-wide / cvmfs installs. Would it be possible to do something like this:; 1. if $ROOTSYS/ is not writable, write to ./fonts/;; 2. forward requests for files in $ROOTSYS/ui5/eve7/ to some REveManager function that can then check where these fonts are actually available and route the GET to the proper local file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2172404599:480,rout,route,480,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2172404599,1,['rout'],['route']
Integrability,"Yes @vgvassilev, it is. The three tests that failed are also failing in our integration builds. See https://github.com/cms-sw/cmssw/pull/41964 (`DataFormatsScouting` are actually obsolete tests) and https://github.com/cms-sw/cmssw/issues/42206",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13181#issuecomment-1624870413:76,integrat,integration,76,https://root.cern,https://github.com/root-project/root/pull/13181#issuecomment-1624870413,1,['integrat'],['integration']
Integrability,"Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message.; > ; > ```; > Processing temp.h... ; > In file included from input_line_8:1: ; > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: ; > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' ; > static const CLID CLID_ProtoParticle = 803; ; > ^ ; > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here ; > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" ; > ^ ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple ; > times, additional include site here ; > #include ""Event/ProtoParticle.h"" ; > ^ ; > ...; > ...SKIPPED LINES; > ...; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' ; > class ProtoParticle final : public KeyedObject<int> { ; > ^ ; > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2161206521:310,message,message,310,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2161206521,1,['message'],['message']
Integrability,Yes but to suppress the canvas geometry warning I need to set at least `ROOT::Experimental::RLogManager::Get().SetVerbosity(ROOT::Experimental::ELogLevel::kError);` so everyother warning issued is also suppressed not only the `Hide canvas while geometry too small`. ; That's why I was rasing the question if the warning level for the `Hide canvas while geometry too small` message is optimal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14300#issuecomment-1878999055:373,message,message,373,https://root.cern,https://github.com/root-project/root/issues/14300#issuecomment-1878999055,1,['message'],['message']
Integrability,"Yes it preserve the case if I add the line ; ```; 	set(DOXYGEN_CASE_SENSE_NAMES YES) # default value is system dependent, so need to set this !. ```; in `CMakeLists.txt` but now I have a other weird error:; ```; Processing libs.C+(""BinomialNeymanInterval"",)... Processing libs.C+(""FeldmanCousinsBinomialInterval"",)... Processing libs.C+(""DifferentDimension"",)... Processing libs.C+(""DifferentAxisLimits"",)... Processing libs.C+(""DifferentBinLimits"",)...; Processing libs.C+(""DifferentNumberOfBins"",)... Processing libs.C+(""BinomialProbHelper"",)... Processing libs.C+(""DifferentLabels"",)...; input_line_11:2:28: error: expected expression; input_line_11:2:28: error: expected expression; libs(""DifferentDimension"",) libs(""DifferentBinLimits"",). ^ ^. input_line_11:2:29: error: expected expression; libs(""DifferentAxisLimits"",); ^; input_line_11:2:40: error: expected expression; libs(""FeldmanCousinsBinomialInterval"",); input_line_11 ^:; 2:25: error: expected expression; libs(""DifferentLabels"",); ^; input_line_11:2:31: error: expected expression; libs(""DifferentNumberOfBins"",); ^; ```; It seems the 2nd parameter in calling libs.C is meeting. Let me download again the full PR from scars. I may have done some unwanted mods.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1081535976:111,depend,dependent,111,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081535976,1,['depend'],['dependent']
Integrability,"Yes yes I see the point for the first toy, but for the others I just didn't understand it. Anyhow I'm convinced that there is a problem, and just to record my progress for today, here is a standalone reproducer that doesn't depend on Marcs workspace:. ```c++; #include <RooGenContext.h>; #include <RooRealVar.h>; #include <RooExponential.h>; #include <RooUniform.h>; #include <RooMsgService.h>. #include <TFile.h>; #include <TSystem.h>. #include <iostream>. void repro(); {; using namespace RooFit;. ProcInfo_t procinfo;; const float toMB = 1.f / 1024.f;. RooRealVar x{""x"", ""x"", 0.1, 5.1};; RooRealVar c{""c"", ""c"", -1.8, -5, 5};. RooExponential expo{""expo"", ""expo"", x, c};; RooAbsPdf *pdf = &expo;. // With the uniform distribution, there is no leak!; // RooUniform uni{""uni"", ""uni"", x};; // RooAbsPdf * pdf = &uni;. std::size_t nToys = 5000;. for (std::size_t index_toy = 1; index_toy <= nToys; index_toy++) {. if (index_toy % 500 == 0) {; gSystem->GetProcInfo(&procinfo);; std::cout << index_toy << "": "" << procinfo.fMemResident * toMB << "" "" << procinfo.fMemVirtual * toMB; << std::endl;; }. if (index_toy == nToys) {; RooMsgService::instance().addStream(DEBUG, Topic(Generation));; }. RooGenContext{*pdf, x};; }; }; ```. The output:. ```; 500: 209.504 345.379; 1000: 209.762 345.77; 1500: 209.762 345.77; 2000: 210.535 346.551; 2500: 210.535 346.551; 3000: 210.535 346.551; 3500: 210.535 346.551; 4000: 212.082 348.117; 4500: 212.082 348.117; 5000: 212.082 348.117; [#3] INFO:Generation -- RooGenContext::ctor() setting up event generator context for p.d.f. expo for generation of observable(s) (x); [#3] DEBUG:Generation -- RooGenContext::ctor() observables (x) are safe for internal generator (if supported by p.d.f); [#3] DEBUG:Generation -- RooGenContext::ctor() Model indicates that it can internally generate observables () with configuration identifier 0; [#3] INFO:Generation -- RooGenContext::ctor() Context will generate variables (x) with accept/reject sampling; [#3] INFO:Generation -- ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8984#issuecomment-1396133152:224,depend,depend,224,https://root.cern,https://github.com/root-project/root/issues/8984#issuecomment-1396133152,1,['depend'],['depend']
Integrability,"Yes, I agree. I need to check layout settings that labels are not truncated and not wrapped.; Will be done with next PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11548#issuecomment-1276185930:84,wrap,wrapped,84,https://root.cern,https://github.com/root-project/root/pull/11548#issuecomment-1276185930,1,['wrap'],['wrapped']
Integrability,"Yes, I made the package after this bug was created. Not sure what causes trouble in WSL, could be just some dependency missing, but better have someone confirm this. Could also be due to changes in how pcms are searched, I'm not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901#issuecomment-1353151648:108,depend,dependency,108,https://root.cern,https://github.com/root-project/root/issues/11901#issuecomment-1353151648,1,['depend'],['dependency']
Integrability,"Yes, better than the ""That should fix a recent nightly failure with gcc11"" that Philippe commented on, thanks for improving it!. Compared to just including the actual diagnostic (something Philippe and I generally try to do these days, something that has proven super helpful several times), your current log:; ```; That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context.; ```. does not call out; - that it's during dictionary generation; - that the modulemap requires the module feature 'cplusplus20' (your log seems to suggest that the error surfaces when compiled in C++20 mode, while this error shows up when compiling in C++14 or 17); - that the issue is also with GCC12 headers (your message seems to suggest that it's only with GCC11 headers); - the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`. In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?). But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1429251757:753,message,message,753,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1429251757,2,['message'],['message']
Integrability,"Yes, it addresses the failures uncovered by the added messages ... However there is still a category of case (ellided node in the hierarchy of branches) that trigger the message (because the branch those proxy might correspond to really does not exist).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3770#issuecomment-489635960:54,message,messages,54,https://root.cern,https://github.com/root-project/root/pull/3770#issuecomment-489635960,2,['message'],"['message', 'messages']"
Integrability,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Instead we should either; * fail to configure if BLAS is missing; or ; * disable the components that require BLAS when configuring whe BLAS is missing; or; * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16720#issuecomment-2425048725:295,interface,interface,295,https://root.cern,https://github.com/root-project/root/issues/16720#issuecomment-2425048725,4,['interface'],['interface']
Integrability,"Yes, it is just cosmetics and does not help in dependency of `ExternalProject_Add(AFTERIMAGE ...)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16130#issuecomment-2255402823:47,depend,dependency,47,https://root.cern,https://github.com/root-project/root/pull/16130#issuecomment-2255402823,1,['depend'],['dependency']
Integrability,"Yes, that should be fine. These backports don't add new features in the user interface, but extend the support of existing features like the GPU backend to additional RooFit classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12733#issuecomment-1568136195:77,interface,interface,77,https://root.cern,https://github.com/root-project/root/pull/12733#issuecomment-1568136195,1,['interface'],['interface']
Integrability,"Yes, the error messages are now emitted directly in cmakes `find_package()` as we require the components explicitly.; For example:; ```txt; CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:233 (message):; Could NOT find X11 (missing: Xext); Call Stack (most recent call first):; /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:603 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake/Modules/FindX11.cmake:676 (find_package_handle_standard_args); CMakeLists.txt:5 (find_package); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16008#issuecomment-2220252508:15,message,messages,15,https://root.cern,https://github.com/root-project/root/pull/16008#issuecomment-2220252508,2,['message'],"['message', 'messages']"
Integrability,"Yes, this happened because I was trying to compile on an officially unsupported system. The function `GetExePath()` is not implemented and returns an empty string. It the new commit, an error message is printed in `SetRootSys()` in case of unknown executable path, and the missing implementation of `GetExePath()` is added. The program `rootcling_stage1` now determines its `ROOTSYS` (build directory) successfully as confirmed by printing `rootsys` in `GetIncludeDir()`, although it then still fails reporting circular dependencies in the headers, but it is a separate issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10776#issuecomment-1158620926:192,message,message,192,https://root.cern,https://github.com/root-project/root/pull/10776#issuecomment-1158620926,2,"['depend', 'message']","['dependencies', 'message']"
Integrability,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14553#issuecomment-1945596698:25,depend,dependencies,25,https://root.cern,https://github.com/root-project/root/issues/14553#issuecomment-1945596698,1,['depend'],['dependencies']
Integrability,"Yes, this worked in the old PyROOT. As far as I understand, this worked because there was no `Dispatcher` wrapper class in between the Python class and the C++ base class. Therefore, the proxied C++ object was a base class object, not a `Dispatcher` object, and the invocation of the base class `MyMethod` on that object worked with a code equivalent to the one in my C++ reproducer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6637#issuecomment-713472152:106,wrap,wrapper,106,https://root.cern,https://github.com/root-project/root/issues/6637#issuecomment-713472152,1,['wrap'],['wrapper']
Integrability,"Yes, those 2 interface are accessible/similar in python.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9339#issuecomment-981144492:13,interface,interface,13,https://root.cern,https://github.com/root-project/root/issues/9339#issuecomment-981144492,1,['interface'],['interface']
Integrability,"Yes, you are right. PR https://github.com/root-project/root/pull/12798 also addressing library dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12766#issuecomment-1542179753:95,depend,dependency,95,https://root.cern,https://github.com/root-project/root/issues/12766#issuecomment-1542179753,1,['depend'],['dependency']
Integrability,"Yes, you understood this right. Do you think this is a problem? It is not a new behavior in the context of ROOT math: for example the [GradFunctor](https://root.cern.ch/doc/master/classROOT_1_1Math_1_1GradFunctor.html#af7c06950b37bea8844b81f53b0bf41df) does the same, only that it takes the object by pointer and not by reference. In practice `RooAbsMinimizer`, always lives as long as the RooMinimizer that wraps the `ROOT::Math::Minimizer`, so I don't think this is a problem. Or is there something that I forgot to consider?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12348#issuecomment-1439814166:408,wrap,wraps,408,https://root.cern,https://github.com/root-project/root/pull/12348#issuecomment-1439814166,1,['wrap'],['wraps']
Integrability,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes.; ```; $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR; CMAKE_INCLUDE_CURRENT_DIR; -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds; ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``; to the include path for each directory. These additional include; directories do not propagate down to subdirectories. This is useful; mainly for out-of-source builds, where files generated into the build; tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856752467:37,depend,dependency,37,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856752467,2,"['depend', 'inject']","['dependency', 'injected']"
Integrability,"You are correct about the validity of the C++ code.; However, ROOT accepts the code without complaint.; That actually is the issue. As for the ROOT version, analysis of the STAR data at Brookhaven National Lab is mature and sort of locked into this older ROOT version. Surely EIC will update to a better code base and provide an integrated development environment. Alas, progress is slow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12840#issuecomment-1555278707:329,integrat,integrated,329,https://root.cern,https://github.com/root-project/root/issues/12840#issuecomment-1555278707,1,['integrat'],['integrated']
Integrability,"You are right! I was not taking care about the new interface being backwards compatible, because these constructors are considered as RooFit internal. But of course it doesn't hurt to make them backwards compatible either :). I opened a PR to do that: https://github.com/root-project/root/pull/8986",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8976#issuecomment-918461257:51,interface,interface,51,https://root.cern,https://github.com/root-project/root/issues/8976#issuecomment-918461257,1,['interface'],['interface']
Integrability,"You can attribute things without putting the name on the first line. I don't like my name being put like that, so please don't do it again. Let me write the commit, or put my name after the second line of the commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3866#issuecomment-496153933:216,message,message,216,https://root.cern,https://github.com/root-project/root/pull/3866#issuecomment-496153933,1,['message'],['message']
Integrability,"You can reproduce it on a free online Ubuntu 20 browser-box:. - Go to https://www.onworks.net/os-distributions/ubuntu-based; - Select Ubuntu 20, Start; - Open a WebBrowser within it, google ""cern ROOT install"".; - Copy the line of the ""required dependencies""; - Open a Terminal; - sudo apt update; - Paste the line of the required dependencies to install missing packages; - Go back to web browser; - Copy link to download binary release; - Back to terminal, paste it there; - tar -xzvf ...; - source root/bin/thisroot.sh; - Back to browser, search ""cern root github"", go to Issues; - Download the reproducer of this issue; - unzip; - root -l test_zoom.cpp; - Then zoom. I did the process and it's the case the artifact is there on such a fresh independent install.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1026925002:245,depend,dependencies,245,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026925002,2,['depend'],['dependencies']
Integrability,"You can set different debugging levels for `RLogManager`. See enum in `ROOT/RLogger.hxx`:. ```; enum class ELogLevel : unsigned char {; kUnset,; kFatal, ///< An error which causes further processing to be unreliable; kError, ///< An error; kWarning, ///< Warnings about likely unexpected behavior; kInfo, ///< Informational messages; used for instance for tracing; kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug.; };; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14300#issuecomment-1878429143:324,message,messages,324,https://root.cern,https://github.com/root-project/root/issues/14300#issuecomment-1878429143,1,['message'],['messages']
Integrability,You can try `root --web=server:7788`. . Then try to create canvas - message should appear with URL which can be copied in the web browser. Do not use `-a` flag - it still requires normal X11.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15723#issuecomment-2146767398:68,message,message,68,https://root.cern,https://github.com/root-project/root/issues/15723#issuecomment-2146767398,1,['message'],['message']
Integrability,"You need to load the library that implement those classes (`TRootLHEFEvent`, `TRootWeight`, etc..). However, a lot of operations (eg. using `TTree::Draw` or `RDataFrame`) might still work on this file. So depending on what you need to do with the data in the file those warning may be important or not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9123#issuecomment-944452685:205,depend,depending,205,https://root.cern,https://github.com/root-project/root/issues/9123#issuecomment-944452685,1,['depend'],['depending']
Integrability,"You option 1 is more or less what we used to do, and it doesn't work when Vdt is builtin, because `INTERFACE_INCLUDE_DIRECTORIES` will be inside the build directory. Your option 2 will likely not work with static external Vdt because of `${CMAKE_STATIC_LIBRARY_PREFIX}vdt${CMAKE_SHARED_LIBRARY_SUFFIX}` used in the install interface. I agree with you, however, if your option one can be made to work correctly when Vdt is external/builtin and the several versions of CMake we support, then that would be my preferred option too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797#issuecomment-1339063610:323,interface,interface,323,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339063610,1,['interface'],['interface']
Integrability,"You probably guessed it already - but the issue is that derived classes use `TFile`'s public constructors, too, and so while the purpose of derived classes is to handle remote protocols, `TFile`'s constructors will nonetheless be called with such a ""filename"". Yes - that's not super well designed (we should have had a common base class, and TFile should be an incarnation of those, not be the common base itself), but we cannot change that at this point. As this is in the ctor you cannot even check ""am I really a `TFile` or a derived class?` because the object's vtable isn't populated enough yet, and thus a runtime-type-info ""who are you?"" will just say ""`TFile`!"" even for derived classes. We would have to introduce protected ctors instead, and change all derived classes to use those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11063#issuecomment-1198440268:176,protocol,protocols,176,https://root.cern,https://github.com/root-project/root/pull/11063#issuecomment-1198440268,1,['protocol'],['protocols']
Integrability,You probably want to collect all transitive dependencies like the way we do here:. https://github.com/root-project/root/blob/2a6bdc7029881ff2d2a90e65ebbcb3017e50a613/interpreter/CMakeLists.txt#L535-L566. Everything that starts with `libLLVM` or `libclang` can be filtered out in the `--exclude-libs` flags..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14778#issuecomment-1974886663:44,depend,dependencies,44,https://root.cern,https://github.com/root-project/root/issues/14778#issuecomment-1974886663,1,['depend'],['dependencies']
Integrability,"You said here a clever thing, indeed, the issue could be that in the unpickling ROOT is not properly imported and therefore we have a nullptr for `TROOT`. A good starting point could be figuring out the contracts of pickle how (or whether) the modules are imported if objects are unpickled. I think there could be similar issues with Python modules using native code and that way we could get an idea what is going on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6765#issuecomment-723846133:203,contract,contracts,203,https://root.cern,https://github.com/root-project/root/issues/6765#issuecomment-723846133,1,['contract'],['contracts']
Integrability,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654852533:62,depend,dependencies,62,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654852533,1,['depend'],['dependencies']
Integrability,"[ 47%] Built target rootcling_stage1; Scanning dependencies of target G__Core; [ 47%] Generating G__Core.cxx, ../lib/libCore.rootmap, ../lib/Core.pcm; Error in <CheckModuleValid>: Couldn't find module with name 'Core' in modulemap!; core/CMakeFiles/G__Core.dir/build.make:453: recipe for target 'core/G__Core.cxx' failed; make[2]: *** [core/G__Core.cxx] Error 1; CMakeFiles/Makefile2:15584: recipe for target 'core/CMakeFiles/G__Core.dir/all' failed; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; Makefile:151: recipe for target 'all' failed; make: *** [all] Error 2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3577:47,depend,dependencies,47,https://root.cern,https://github.com/root-project/root/pull/3577,1,['depend'],['dependencies']
Integrability,[BOT] Fix clang-format-bot message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/448:27,message,message,27,https://root.cern,https://github.com/root-project/root/pull/448,1,['message'],['message']
Integrability,[BOT] Minor improvements to clang-format-bot error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/437:51,message,message,51,https://root.cern,https://github.com/root-project/root/pull/437,1,['message'],['message']
Integrability,[BUILD] Add libVecOps to the dependencies of libTreePlayer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1888:29,depend,dependencies,29,https://root.cern,https://github.com/root-project/root/pull/1888,1,['depend'],['dependencies']
Integrability,[CMake] Add interface includes for gtest and gmock targets.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5366:12,interface,interface,12,https://root.cern,https://github.com/root-project/root/pull/5366,1,['interface'],['interface']
Integrability,[CMake] CMake dependency on Python: use targets,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15145:14,depend,dependency,14,https://root.cern,https://github.com/root-project/root/pull/15145,1,['depend'],['dependency']
Integrability,[CMake] Protect move_headers dependency when not configuring ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4367:29,depend,dependency,29,https://root.cern,https://github.com/root-project/root/pull/4367,1,['depend'],['dependency']
Integrability,[CMake] Start migrating strong dependencies outside SearchInstalledSoftware and deprecate 'python' option,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4945:31,depend,dependencies,31,https://root.cern,https://github.com/root-project/root/pull/4945,1,['depend'],['dependencies']
Integrability,"[Cling] Improve help message for .x, allow macros with main.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4244:21,message,message,21,https://root.cern,https://github.com/root-project/root/pull/4244,1,['message'],['message']
Integrability,[Cling][cpt] Fix Cling CI by removing svn dependence and dropping Python 2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7229:42,depend,dependence,42,https://root.cern,https://github.com/root-project/root/pull/7229,1,['depend'],['dependence']
Integrability,[CmdLineUtils][ROOT-8527] Improve clarity of warnings and error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3697:64,message,messages,64,https://root.cern,https://github.com/root-project/root/pull/3697,1,['message'],['messages']
Integrability,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. This PR is the first step in using pure clang based reflection API in meta, and part of eventually integrating the JITCall and DynamicLibraryManager infrastructure. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16814:327,integrat,integrating,327,https://root.cern,https://github.com/root-project/root/pull/16814,1,['integrat'],['integrating']
Integrability,"[DF] Add """" around unknown column names in error message",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11772:49,message,message,49,https://root.cern,https://github.com/root-project/root/pull/11772,1,['message'],['message']
Integrability,"[DF] Add RJittedAction, a wrapper around jitted RActions",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2398:26,wrap,wrapper,26,https://root.cern,https://github.com/root-project/root/pull/2398,1,['wrap'],['wrapper']
Integrability,[DF] Add fwd decls of critical routines in RInterface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3146:31,rout,routines,31,https://root.cern,https://github.com/root-project/root/pull/3146,1,['rout'],['routines']
Integrability,[DF] Avoid public dependency of RDataFrame on `nlohmann::json`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14043:18,depend,dependency,18,https://root.cern,https://github.com/root-project/root/pull/14043,1,['depend'],['dependency']
Integrability,[DF] Better error message for Vary+Fill+no Reset method,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10549:18,message,message,18,https://root.cern,https://github.com/root-project/root/pull/10549,1,['message'],['message']
Integrability,[DF] Better error message in case of empty input TTree for Snapshot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6603:18,message,message,18,https://root.cern,https://github.com/root-project/root/pull/6603,1,['message'],['message']
Integrability,[DF] Fix custom actions depending on RDF+RDataSource,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3559:24,depend,depending,24,https://root.cern,https://github.com/root-project/root/pull/3559,1,['depend'],['depending']
Integrability,[DF] Improve RDisplay documentation and reduce size of its public interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2868:66,interface,interface,66,https://root.cern,https://github.com/root-project/root/pull/2868,1,['interface'],['interface']
Integrability,[DF] Minor improvement to a log message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11340:32,message,message,32,https://root.cern,https://github.com/root-project/root/pull/11340,1,['message'],['message']
Integrability,[DF] Print info message if RDisplay::Print is omitting some columns,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5984:16,message,message,16,https://root.cern,https://github.com/root-project/root/pull/5984,1,['message'],['message']
Integrability,[DF] Provide a more useful error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9858:33,message,message,33,https://root.cern,https://github.com/root-project/root/pull/9858,1,['message'],['message']
Integrability,[DF] Remove obsolete part from error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2253:37,message,message,37,https://root.cern,https://github.com/root-project/root/pull/2253,2,['message'],['message']
Integrability,[DF] Support rdfslot_ and rdfentry_ as well as avoid duplication of routines to check implicit columns,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2658:68,rout,routines,68,https://root.cern,https://github.com/root-project/root/pull/2658,1,['rout'],['routines']
Integrability,[DF] Try making some RDF error messages more helpful,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5861:31,message,messages,31,https://root.cern,https://github.com/root-project/root/pull/5861,1,['message'],['messages']
Integrability,[DF] Turn hard dependency on Davix into a plugin,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5032:15,depend,dependency,15,https://root.cern,https://github.com/root-project/root/pull/5032,1,['depend'],['dependency']
Integrability,[DF] Use TLeaf::GetFullName in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7931:37,message,message,37,https://root.cern,https://github.com/root-project/root/pull/7931,1,['message'],['message']
Integrability,[DF] Use human readable type names in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2144:44,message,message,44,https://root.cern,https://github.com/root-project/root/pull/2144,2,['message'],['message']
Integrability,[DF] Veto tutorials depending on davix when it is not present,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7355:20,depend,depending,20,https://root.cern,https://github.com/root-project/root/pull/7355,1,['depend'],['depending']
Integrability,[DF][ROOT-10045] Fix custom actions depending on RDF+RDataSource,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3565:36,depend,depending,36,https://root.cern,https://github.com/root-project/root/pull/3565,1,['depend'],['depending']
Integrability,[DF][ROOT-10063] Unify internal jitting interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3642:40,interface,interfaces,40,https://root.cern,https://github.com/root-project/root/pull/3642,1,['interface'],['interfaces']
Integrability,"[EDIT]: 2017-07-20 dropped commit (6953483). See the commit messages for detailed descriptions of the changes. In essence, when comparing some data with the KolmogorovTest an infinite loop was triggered. (bba95dd) We want to get an approximate solution to the test despite there being some bins with neg. content; (06024c8) To prevent the infinite loop in other cases, calling FillRandom with a histogram with negative content is now an error.; (6953483) The caching inside GetRandom can violate an invariant of the function. (Always return NaN when there is a bin with neg. content in the source histogram). [EDIT] Removed after discussion with Lorenzo. The recomputation of the integral here was deemed too expensive as the function is intended to be called in tight loops. Since these changes might have far reaching effects I am up for discussion whether any commits should be dropped. A reproducer in can be found [here](https://gist.github.com/ashlaban/05552ab5f5a7aa05e9c9b73229b2dba4).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/705:60,message,messages,60,https://root.cern,https://github.com/root-project/root/pull/705,1,['message'],['messages']
Integrability,[Experimental PyROOT] Add numpy array interface to STL vector and RVec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2468:38,interface,interface,38,https://root.cern,https://github.com/root-project/root/pull/2468,1,['interface'],['interface']
Integrability,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10435:31,message,messages,31,https://root.cern,https://github.com/root-project/root/pull/10435,1,['message'],['messages']
Integrability,[GSoC][TMVA] PyTorch Interface TMVA,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5757:21,Interface,Interface,21,https://root.cern,https://github.com/root-project/root/pull/5757,1,['Interface'],['Interface']
Integrability,[GUI] Silence TGFileDialog error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14865:33,message,messages,33,https://root.cern,https://github.com/root-project/root/pull/14865,1,['message'],['messages']
Integrability,[IO] Backport hashing of StreamerInfos before injecting them in the type system,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2179:46,inject,injecting,46,https://root.cern,https://github.com/root-project/root/pull/2179,1,['inject'],['injecting']
Integrability,[IO] Fix formatting of message for 32 bits,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3679:23,message,message,23,https://root.cern,https://github.com/root-project/root/pull/3679,1,['message'],['message']
Integrability,[IO] Improve error message when no TFile::Open for remote files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11719:19,message,message,19,https://root.cern,https://github.com/root-project/root/pull/11719,1,['message'],['message']
Integrability,[JupyROOT] 6.22: Rescue lost JavaScript code injected by JupyROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7215:45,inject,injected,45,https://root.cern,https://github.com/root-project/root/pull/7215,1,['inject'],['injected']
Integrability,[JupyROOT] Add header with license message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6202:35,message,message,35,https://root.cern,https://github.com/root-project/root/pull/6202,1,['message'],['message']
Integrability,[Math] Do not modify dbg message if never printed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14946:25,message,message,25,https://root.cern,https://github.com/root-project/root/pull/14946,1,['message'],['message']
Integrability,[MetaSema/TApplication] outdated .help message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10065:39,message,message,39,https://root.cern,https://github.com/root-project/root/issues/10065,1,['message'],['message']
Integrability,[Metacling] Integrate cppyy patch for lambdas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5541:12,Integrat,Integrate,12,https://root.cern,https://github.com/root-project/root/pull/5541,1,['Integrat'],['Integrate']
Integrability,[Minuit2] Add interface to pass initial values/cov matrix,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16437:14,interface,interface,14,https://root.cern,https://github.com/root-project/root/pull/16437,1,['interface'],['interface']
Integrability,[Modulariz] Adding missing dependency MathCore for FFTW library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2409:27,depend,dependency,27,https://root.cern,https://github.com/root-project/root/pull/2409,1,['depend'],['dependency']
Integrability,[NFC] Add missing word in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5153:32,message,message,32,https://root.cern,https://github.com/root-project/root/pull/5153,1,['message'],['message']
Integrability,[NFC] Clarification of error message in case of root7 option,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3678:29,message,message,29,https://root.cern,https://github.com/root-project/root/pull/3678,1,['message'],['message']
Integrability,[NFC][DF] Fix error message in Vary,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10619:20,message,message,20,https://root.cern,https://github.com/root-project/root/pull/10619,1,['message'],['message']
Integrability,[PyROOT Exp] Use cppyy directly instead of TPython interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3217:51,interface,interface,51,https://root.cern,https://github.com/root-project/root/pull/3217,2,['interface'],['interface']
Integrability,[PyROOT exp] Acquire GIL in CppCallable wrapper code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3710:40,wrap,wrapper,40,https://root.cern,https://github.com/root-project/root/pull/3710,1,['wrap'],['wrapper']
Integrability,[PyROOT exp] Add 64bit long types to array interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3670:43,interface,interface,43,https://root.cern,https://github.com/root-project/root/pull/3670,1,['interface'],['interface']
Integrability,[PyROOT] Add numpy array interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1753:25,interface,interface,25,https://root.cern,https://github.com/root-project/root/pull/1753,1,['interface'],['interface']
Integrability,[PyROOT] Add numpy array interface to TVec and STL vector,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1871:25,interface,interface,25,https://root.cern,https://github.com/root-project/root/pull/1871,1,['interface'],['interface']
Integrability,[PyROOT] Add tutorials for array interface and TTree.AsMatrix features,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1889:33,interface,interface,33,https://root.cern,https://github.com/root-project/root/pull/1889,1,['interface'],['interface']
Integrability,[PyROOT] Fix array interface for empty arrays,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3535:19,interface,interface,19,https://root.cern,https://github.com/root-project/root/pull/3535,1,['interface'],['interface']
Integrability,[PyROOT] Fix lazy array interface pythonization for Python 3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3170:24,interface,interface,24,https://root.cern,https://github.com/root-project/root/pull/3170,1,['interface'],['interface']
Integrability,[PyROOT] Fix numpy array interface for long types on 32bit systems,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1925:25,interface,interface,25,https://root.cern,https://github.com/root-project/root/pull/1925,1,['interface'],['interface']
Integrability,[PyROOT] Improve handling of array interface if ROOT is not imported,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3192:35,interface,interface,35,https://root.cern,https://github.com/root-project/root/pull/3192,1,['interface'],['interface']
Integrability,[PyROOT] Integrate JsMVA into PyROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15402:9,Integrat,Integrate,9,https://root.cern,https://github.com/root-project/root/pull/15402,1,['Integrat'],['Integrate']
Integrability,[PyROOT] Make array interface pythonizations lazy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3158:20,interface,interface,20,https://root.cern,https://github.com/root-project/root/pull/3158,1,['interface'],['interface']
Integrability,[PyROOT] Print meaningful error message when user pythonizor fails,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9729:32,message,message,32,https://root.cern,https://github.com/root-project/root/pull/9729,1,['message'],['message']
Integrability,[PyROOT] Produce a more meaningful error message in addressof,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9075:41,message,message,41,https://root.cern,https://github.com/root-project/root/pull/9075,1,['message'],['message']
Integrability,[PyROOT] Provide an explanatory error message when pickling cross-inh…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8476:38,message,message,38,https://root.cern,https://github.com/root-project/root/pull/8476,1,['message'],['message']
Integrability,[PyROOT] Remove JupyROOT welcome message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14661:33,message,message,33,https://root.cern,https://github.com/root-project/root/pull/14661,1,['message'],['message']
Integrability,[PyROOT][ROOT-10109] Inject missing overloads in TH2 and more,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4895:21,Inject,Inject,21,https://root.cern,https://github.com/root-project/root/pull/4895,1,['Inject'],['Inject']
Integrability,[PyROOT][ROOT-7983] Inject missing overloads for createHistogram,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4916:20,Inject,Inject,20,https://root.cern,https://github.com/root-project/root/pull/4916,1,['Inject'],['Inject']
Integrability,[PyROOT][WIP] Add numpy array interface (with py3 support),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1777:30,interface,interface,30,https://root.cern,https://github.com/root-project/root/pull/1777,1,['interface'],['interface']
Integrability,[RDF] Fix a dependency issue for an RDF test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5716:12,depend,dependency,12,https://root.cern,https://github.com/root-project/root/pull/5716,1,['depend'],['dependency']
Integrability,[RDF] Fix a dependency issue for an RDF test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5695:12,depend,dependency,12,https://root.cern,https://github.com/root-project/root/pull/5695,2,['depend'],['dependency']
Integrability,[RDF] Fix inconsistency in RDF::Snapshot interfaces for jitted calls,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2088:41,interface,interfaces,41,https://root.cern,https://github.com/root-project/root/pull/2088,1,['interface'],['interfaces']
Integrability,[RDF] Move dictionary generation into RDF test to fix dependency issues.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5748:54,depend,dependency,54,https://root.cern,https://github.com/root-project/root/pull/5748,2,['depend'],['dependency']
Integrability,"[RDF] Re-enable all of dataframe_{cache,simple,interface}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2066:47,interface,interface,47,https://root.cern,https://github.com/root-project/root/pull/2066,2,['interface'],['interface']
Integrability,"[RDF] Re-enable dataframe_{interface,simple}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2083:27,interface,interface,27,https://root.cern,https://github.com/root-project/root/pull/2083,2,['interface'],['interface']
Integrability,[REve] RenderCore integration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7185:18,integrat,integration,18,https://root.cern,https://github.com/root-project/root/pull/7185,1,['integrat'],['integration']
Integrability,[RF] Add a C/C++ function wrapper class in roofit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12050:26,wrap,wrapper,26,https://root.cern,https://github.com/root-project/root/pull/12050,1,['wrap'],['wrapper']
Integrability,[RF] Add back dependency of testHistFactory on RooFitCommon,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11394:14,depend,dependency,14,https://root.cern,https://github.com/root-project/root/pull/11394,1,['depend'],['dependency']
Integrability,[RF] Add initial interface and implementation for code-squashing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12529:17,interface,interface,17,https://root.cern,https://github.com/root-project/root/pull/12529,1,['interface'],['interface']
Integrability,[RF] Add initial minimizer interface for RooFuncWrapper,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12381:27,interface,interface,27,https://root.cern,https://github.com/root-project/root/pull/12381,1,['interface'],['interface']
Integrability,[RF] Add missing Smatrix dependency for RooFitCore.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5437:25,depend,dependency,25,https://root.cern,https://github.com/root-project/root/pull/5437,1,['depend'],['dependency']
Integrability,[RF] Add more functional-style getValue interface to RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6615:40,interface,interface,40,https://root.cern,https://github.com/root-project/root/pull/6615,1,['interface'],['interface']
Integrability,[RF] Add the initial integration of AD to RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11773:21,integrat,integration,21,https://root.cern,https://github.com/root-project/root/pull/11773,1,['integrat'],['integration']
Integrability,[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9680:62,interface,interface,62,https://root.cern,https://github.com/root-project/root/pull/9680,1,['interface'],['interface']
Integrability,[RF] Added interface changes for TestStatatistics classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11549:11,interface,interface,11,https://root.cern,https://github.com/root-project/root/pull/11549,1,['interface'],['interface']
Integrability,[RF] Added interface changes for TestStatistics classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11577:11,interface,interface,11,https://root.cern,https://github.com/root-project/root/pull/11577,2,['interface'],['interface']
Integrability,[RF] Analytical integration for RooNDKeysPdf with custom range,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8019:16,integrat,integration,16,https://root.cern,https://github.com/root-project/root/pull/8019,1,['integrat'],['integration']
Integrability,[RF] Attempt to integrate xRooFit into RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11499:16,integrat,integrate,16,https://root.cern,https://github.com/root-project/root/pull/11499,1,['integrat'],['integrate']
Integrability,[RF] Avoid `nlohmann_json` as a public dependency of RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14266:39,depend,dependency,39,https://root.cern,https://github.com/root-project/root/pull/14266,1,['depend'],['dependency']
Integrability,[RF] Avoid any dependencies of RooFitHS3 for dictionary generation and update HistFactory::JSONTool interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10082:15,depend,dependencies,15,https://root.cern,https://github.com/root-project/root/pull/10082,2,"['depend', 'interface']","['dependencies', 'interface']"
Integrability,[RF] Avoid compile time dependency of RooFit on RDataFrame,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16606:24,depend,dependency,24,https://root.cern,https://github.com/root-project/root/pull/16606,1,['depend'],['dependency']
Integrability,[RF] Avoid overhead of tracking evaluation error messages when not needed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12328:49,message,messages,49,https://root.cern,https://github.com/root-project/root/pull/12328,1,['message'],['messages']
Integrability,[RF] Backport in 6.26 a fix suppressing a RooFit Warning message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10235:57,message,message,57,https://root.cern,https://github.com/root-project/root/pull/10235,1,['message'],['message']
Integrability,[RF] Cannot turn off useless messages with RooMCStudy unbinned fits + Progress bar would be better.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489:29,message,messages,29,https://root.cern,https://github.com/root-project/root/issues/9489,1,['message'],['messages']
Integrability,[RF] Change number of contour points in RooMinimizer interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3327:53,interface,interface,53,https://root.cern,https://github.com/root-project/root/pull/3327,1,['interface'],['interface']
Integrability,[RF] Comment out `ryml` backend for RooFit JSON interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15247:48,interface,interface,48,https://root.cern,https://github.com/root-project/root/pull/15247,1,['interface'],['interface']
Integrability,[RF] Consider rangeName for integration in RooParamHistFunc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7198:28,integrat,integration,28,https://root.cern,https://github.com/root-project/root/pull/7198,1,['integrat'],['integration']
Integrability,[RF] Continue new batch interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6650:24,interface,interface,24,https://root.cern,https://github.com/root-project/root/pull/6650,1,['interface'],['interface']
Integrability,[RF] Correct RooPoisson integral if integrated from a > 0 to infinity,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11697:36,integrat,integrated,36,https://root.cern,https://github.com/root-project/root/pull/11697,1,['integrat'],['integrated']
Integrability,[RF] Correctly forward integrator config in RooImproperIntegrator1D,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11074:23,integrat,integrator,23,https://root.cern,https://github.com/root-project/root/pull/11074,1,['integrat'],['integrator']
Integrability,[RF] Declare dependency of RooFitHS3 on nlohmann-json in CMakeLists.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9382:13,depend,dependency,13,https://root.cern,https://github.com/root-project/root/pull/9382,1,['depend'],['dependency']
Integrability,[RF] Deprecate HistFactory-internal fitting and plotting routine,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16336:57,rout,routine,57,https://root.cern,https://github.com/root-project/root/pull/16336,1,['rout'],['routine']
Integrability,"[RF] Deprecate RooMinuit class (adapter between RooFit and minuit, got replaced by the more general RooMinimizer)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8609:32,adapter,adapter,32,https://root.cern,https://github.com/root-project/root/pull/8609,1,['adapter'],['adapter']
Integrability,[RF] Deprecate legacy interface of RooAbsArg,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16430:22,interface,interface,22,https://root.cern,https://github.com/root-project/root/pull/16430,1,['interface'],['interface']
Integrability,"[RF] Documentation updates, improvement of warning and error messages",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5315:61,message,messages,61,https://root.cern,https://github.com/root-project/root/pull/5315,1,['message'],['messages']
Integrability,[RF] Don't have RooFitCuda as dependency for RooFitCore,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13417:30,depend,dependency,30,https://root.cern,https://github.com/root-project/root/pull/13417,1,['depend'],['dependency']
Integrability,[RF] Enable analytic integration of RooHistPdfs with RooLinearVars,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12482:21,integrat,integration,21,https://root.cern,https://github.com/root-project/root/pull/12482,1,['integrat'],['integration']
Integrability,[RF] Explicitly forbid integration of a `RooAbsRealLValue`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11162:23,integrat,integration,23,https://root.cern,https://github.com/root-project/root/pull/11162,1,['integrat'],['integration']
Integrability,[RF] Fix imt and VDT dependency for roofit BatchCompute library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9441:21,depend,dependency,21,https://root.cern,https://github.com/root-project/root/pull/9441,1,['depend'],['dependency']
Integrability,[RF] Fix the integration of a cloned RooParamHistFunc with range,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7478:13,integrat,integration,13,https://root.cern,https://github.com/root-project/root/pull/7478,2,['integrat'],['integration']
Integrability,"[RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12630#issuecomment-1498932509:1837,interface,interface,1837,https://root.cern,https://github.com/root-project/root/pull/12630#issuecomment-1498932509,1,['interface'],['interface']
Integrability,[RF] General interface to evaluate RooFit pdfs on the GPU,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13389:13,interface,interface,13,https://root.cern,https://github.com/root-project/root/pull/13389,1,['interface'],['interface']
Integrability,[RF] Generalize `RooIntegrator1D` to n dimensions and merge with other Romberg integrator classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13384:79,integrat,integrator,79,https://root.cern,https://github.com/root-project/root/pull/13384,1,['integrat'],['integrator']
Integrability,[RF] Helper functions for bin integration for simultaneous fits,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9358:30,integrat,integration,30,https://root.cern,https://github.com/root-project/root/pull/9358,1,['integrat'],['integration']
Integrability,[RF] Implement proper factory interface for RooLagrangianMorphFunc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11899:30,interface,interface,30,https://root.cern,https://github.com/root-project/root/pull/11899,1,['interface'],['interface']
Integrability,[RF] Improve `MarkovChain` interfaces and `MCMCInterval`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16334:27,interface,interfaces,27,https://root.cern,https://github.com/root-project/root/pull/16334,1,['interface'],['interfaces']
Integrability,[RF] Improve `RooNumIntFactory` plugin system and remove RooIntegratorBinding from public interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13350:90,interface,interface,90,https://root.cern,https://github.com/root-project/root/pull/13350,1,['interface'],['interface']
Integrability,[RF] Improve documentation and interfaces.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4875:31,interface,interfaces,31,https://root.cern,https://github.com/root-project/root/pull/4875,1,['interface'],['interfaces']
Integrability,[RF] Improve interface of RooArgSet / RooArgList,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6300:13,interface,interface,13,https://root.cern,https://github.com/root-project/root/pull/6300,1,['interface'],['interface']
Integrability,[RF] Improve interface of RooArgSet/RooArgList,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6542:13,interface,interface,13,https://root.cern,https://github.com/root-project/root/pull/6542,1,['interface'],['interface']
Integrability,[RF] Improve passing `nullptr` to RooFit message logger,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10546:41,message,message,41,https://root.cern,https://github.com/root-project/root/pull/10546,1,['message'],['message']
Integrability,[RF] Improving the interface to the batch mode in `RooAbsPdf::fitTo` and `RooAbsPdf::createNLL`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9420:19,interface,interface,19,https://root.cern,https://github.com/root-project/root/pull/9420,1,['interface'],['interface']
Integrability,[RF] Make RooRealIntegral conform with the client-server interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11129:57,interface,interface,57,https://root.cern,https://github.com/root-project/root/pull/11129,1,['interface'],['interface']
Integrability,[RF] Make headers of integrator implementations private,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12146:21,integrat,integrator,21,https://root.cern,https://github.com/root-project/root/pull/12146,1,['integrat'],['integrator']
Integrability,[RF] Make integrator replaceable from outside for bin sampling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6921:10,integrat,integrator,10,https://root.cern,https://github.com/root-project/root/pull/6921,1,['integrat'],['integrator']
Integrability,[RF] Minor RooFit interface updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9337:18,interface,interface,18,https://root.cern,https://github.com/root-project/root/pull/9337,1,['interface'],['interface']
Integrability,[RF] Minor interface changes for TestStatistics classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11906:11,interface,interface,11,https://root.cern,https://github.com/root-project/root/pull/11906,1,['interface'],['interface']
Integrability,[RF] Move Roo(Abs)MinimizerFcn out of public RooFit interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9874:52,interface,interfaces,52,https://root.cern,https://github.com/root-project/root/pull/9874,1,['interface'],['interfaces']
Integrability,[RF] Move internal enums of RooResolutionModels out of public interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14056:62,interface,interface,62,https://root.cern,https://github.com/root-project/root/pull/14056,1,['interface'],['interface']
Integrability,[RF] New `EvalBackend()` command argument and reword interfaces and docs for `RooAbsPdf::createNLL()` and `fitTo()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12716:53,interface,interfaces,53,https://root.cern,https://github.com/root-project/root/pull/12716,1,['interface'],['interfaces']
Integrability,[RF] New `RooFit::Owner` pointer wrapper to flag owning return values,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9392:33,wrap,wrapper,33,https://root.cern,https://github.com/root-project/root/pull/9392,1,['wrap'],['wrapper']
Integrability,[RF] Purge old batch interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6841:21,interface,interface,21,https://root.cern,https://github.com/root-project/root/pull/6841,1,['interface'],['interface']
Integrability,[RF] Refactor fitting interface to unify code path for NLL and chi-square fits,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14336:22,interface,interface,22,https://root.cern,https://github.com/root-project/root/pull/14336,1,['interface'],['interface']
Integrability,[RF] Remove RooAbsNumGenerator classes from the public interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11905:55,interface,interface,55,https://root.cern,https://github.com/root-project/root/pull/11905,1,['interface'],['interface']
Integrability,[RF] Remove RooRealMPFE from public interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16346:36,interface,interface,36,https://root.cern,https://github.com/root-project/root/pull/16346,1,['interface'],['interface']
Integrability,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12479:60,interface,interface,60,https://root.cern,https://github.com/root-project/root/pull/12479,1,['interface'],['interface']
Integrability,[RF] Remove details of likelihood minimization from public interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9871:59,interface,interface,59,https://root.cern,https://github.com/root-project/root/pull/9871,1,['interface'],['interface']
Integrability,[RF] Remove integration code from RooEffProd,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10100:12,integrat,integration,12,https://root.cern,https://github.com/root-project/root/pull/10100,1,['integrat'],['integration']
Integrability,[RF] Remove some more classes from the public RooFit interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12800:53,interface,interface,53,https://root.cern,https://github.com/root-project/root/pull/12800,1,['interface'],['interface']
Integrability,[RF] RooFit should give an error message when using different variables with same name,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7417:33,message,message,33,https://root.cern,https://github.com/root-project/root/issues/7417,1,['message'],['message']
Integrability,[RF] RooHypatia2 Analytical integral integration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7254:37,integrat,integration,37,https://root.cern,https://github.com/root-project/root/issues/7254,1,['integrat'],['integration']
Integrability,[RF] RooTruthModel analytical integrals for general integration ranges,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14021:52,integrat,integration,52,https://root.cern,https://github.com/root-project/root/pull/14021,1,['integrat'],['integration']
Integrability,[RF] Synchronize param settings in RooMinimizer when returning function,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10643:5,Synchroniz,Synchronize,5,https://root.cern,https://github.com/root-project/root/pull/10643,1,['Synchroniz'],['Synchronize']
Integrability,[RF] Tell CMake that `rf409_NumPyPandasToRooFit.py` depends on NumPy/Pandas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9373:52,depend,depends,52,https://root.cern,https://github.com/root-project/root/pull/9373,1,['depend'],['depends']
Integrability,[RF] Use local message level changes in stressRooFit to silence tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8611:15,message,message,15,https://root.cern,https://github.com/root-project/root/pull/8611,1,['message'],['message']
Integrability,[RF] Values of RooProdPdfs in a RooAbsPdf should not depend on its factors `normRange()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11486:53,depend,depend,53,https://root.cern,https://github.com/root-project/root/issues/11486,1,['depend'],['depend']
Integrability,[RF] Vectorize `RooAbsBinning` interface for bin index lookups,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11151:31,interface,interface,31,https://root.cern,https://github.com/root-project/root/pull/11151,1,['interface'],['interface']
Integrability,[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8427:13,message,message,13,https://root.cern,https://github.com/root-project/root/pull/8427,1,['message'],['message']
Integrability,[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8590:5,Wrap,Wrap,5,https://root.cern,https://github.com/root-project/root/pull/8590,1,['Wrap'],['Wrap']
Integrability,[RF] Wrong analytic integrals when using Gaussians with sigma depending on the observable,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14320:62,depend,depending,62,https://root.cern,https://github.com/root-project/root/issues/14320,1,['depend'],['depending']
Integrability,[RF] Wrong integral for RooPoisson if integrated from a > 0 to infinity,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10868:38,integrat,integrated,38,https://root.cern,https://github.com/root-project/root/issues/10868,1,['integrat'],['integrated']
Integrability,[RF] compiler-dependent RooNaNPacker tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15908:14,depend,dependent,14,https://root.cern,https://github.com/root-project/root/pull/15908,1,['depend'],['dependent']
Integrability,[RF] factory interface for RooLagrangianMorphFunc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9444:13,interface,interface,13,https://root.cern,https://github.com/root-project/root/pull/9444,1,['interface'],['interface']
Integrability,[RF] xRooFit: avoid having headers depending on preprocessor defines and other fixups,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11932:35,depend,depending,35,https://root.cern,https://github.com/root-project/root/pull/11932,1,['depend'],['depending']
Integrability,[RF][CMake] Use PUBLIC (not INTERFACE) for adding `res` to include dirs - Backport,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15675:28,INTERFACE,INTERFACE,28,https://root.cern,https://github.com/root-project/root/pull/15675,1,['INTERFACE'],['INTERFACE']
Integrability,[RF][Docs] Breaking changes of batch computation interface not documented in release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7454:49,interface,interface,49,https://root.cern,https://github.com/root-project/root/issues/7454,1,['interface'],['interface']
Integrability,[ROOT-10472] Add missing dependencies for coreclingutilstestUnit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4702:25,depend,dependencies,25,https://root.cern,https://github.com/root-project/root/pull/4702,1,['depend'],['dependencies']
Integrability,"[ROOT-10586](https://sft.its.cern.ch/jira/browse/ROOT-10586) is caused by a missing `<cmath>` include, which resulted in old GCC 6 not ""seeing"" the floating-point overloads of `std::abs` and getting confused at which integer overload of `std::abs` it should pick when a `double` is passed in. This was not caught during testing because we test on recent compilers with a C++17-compatible STL implementation, where if you see some overloads of `std::abs`, you see all of them. By switching to `std::fabs` in addition to fixing the include, I guarantee that if this happens again during an overeager include cleanup, the compiler error message will be clearer. Old compilers will now complain about a missing declaration of `std::fabs`, rather than a failed overload resolution of integer `std::abs`. Fixes ROOT-10586.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5062:634,message,message,634,https://root.cern,https://github.com/root-project/root/pull/5062,1,['message'],['message']
Integrability,[ROOT-10797] Seg fault and misleading error messages if system header files are missing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14571:44,message,messages,44,https://root.cern,https://github.com/root-project/root/issues/14571,1,['message'],['messages']
Integrability,[ROOT-10909] Add TMVA python dependencies to the requirements.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14553:29,depend,dependencies,29,https://root.cern,https://github.com/root-project/root/issues/14553,1,['depend'],['dependencies']
Integrability,"[ROOT-10987] When a PDF doesn't implement the faster batch interface,; RooFit's old, single-value computations have to be used as a fallback.; If RooFit, however, tries to precalculate those values, the nodes of; the computation graph will always yield the same wrong value, since; they are switched to ""always clean"".; This happens e.g. when a node of the graph doesn't depend on parameters,; but only on observables. To fix this, the global static that inihibits ""always clean"" has to be; set while the computation is running. (cherry picked from commit 47da6c180b7edd69dcb309fe06197cc50ffc538f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6183:59,interface,interface,59,https://root.cern,https://github.com/root-project/root/pull/6183,2,"['depend', 'interface']","['depend', 'interface']"
Integrability,"[ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the; discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1); yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without; ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used; as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,; the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3326:402,integrat,integration,402,https://root.cern,https://github.com/root-project/root/pull/3326,1,['integrat'],['integration']
Integrability,[ROOT-9829] Make Jupyter server listen on all interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3037:46,interface,interfaces,46,https://root.cern,https://github.com/root-project/root/pull/3037,1,['interface'],['interfaces']
Integrability,[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3052:46,interface,interfaces,46,https://root.cern,https://github.com/root-project/root/pull/3052,1,['interface'],['interfaces']
Integrability,[ROOT-9876] Fix crash introduced by the lazy array interface if cppyy…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3188:51,interface,interface,51,https://root.cern,https://github.com/root-project/root/pull/3188,1,['interface'],['interface']
Integrability,[RVec] Improve error message in case of out-of-bounds access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11771:21,message,message,21,https://root.cern,https://github.com/root-project/root/pull/11771,1,['message'],['message']
Integrability,[TBranch][NFC] More expressive error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3167:37,message,message,37,https://root.cern,https://github.com/root-project/root/pull/3167,1,['message'],['message']
Integrability,[TDF] Integrate TVec with TDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1676:6,Integrat,Integrate,6,https://root.cern,https://github.com/root-project/root/pull/1676,1,['Integrat'],['Integrate']
Integrability,[TDF] Make an error message slightly more helpful,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/984:20,message,message,20,https://root.cern,https://github.com/root-project/root/pull/984,1,['message'],['message']
Integrability,[TDF] Make error message more helpful,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1009:17,message,message,17,https://root.cern,https://github.com/root-project/root/pull/1009,1,['message'],['message']
Integrability,[TDF] Misc fixes for the documentation and interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1482:43,interface,interface,43,https://root.cern,https://github.com/root-project/root/pull/1482,1,['interface'],['interface']
Integrability,"[TDF][TO REVERT] Disable dataframe_{interface,simple} tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1906:36,interface,interface,36,https://root.cern,https://github.com/root-project/root/pull/1906,2,['interface'],['interface']
Integrability,[TDF][VecOps] Improve integration of VecOps and TDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1679:22,integrat,integration,22,https://root.cern,https://github.com/root-project/root/pull/1679,1,['integrat'],['integration']
Integrability,[TMVA experimental] Add iterator interface to RTensor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3995:33,interface,interface,33,https://root.cern,https://github.com/root-project/root/pull/3995,1,['interface'],['interface']
Integrability,[TMVA experimental] Add new reader interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4027:35,interface,interface,35,https://root.cern,https://github.com/root-project/root/pull/4027,1,['interface'],['interface']
Integrability,[TMVA experimental] Use http protocol to fetch model file,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4589:29,protocol,protocol,29,https://root.cern,https://github.com/root-project/root/pull/4589,1,['protocol'],['protocol']
Integrability,[TMVA] Add `data()` interface to buffers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16515:20,interface,interface,20,https://root.cern,https://github.com/root-project/root/pull/16515,1,['interface'],['interface']
Integrability,[TMVA] Add missing TMVA python dependencies to requirements.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15512:31,depend,dependencies,31,https://root.cern,https://github.com/root-project/root/pull/15512,1,['depend'],['dependencies']
Integrability,[TMVA] Enhance usability of CVResults and Envelope interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1694:51,interface,interfaces,51,https://root.cern,https://github.com/root-project/root/pull/1694,2,['interface'],['interfaces']
Integrability,[TMVA] Fix printout message in MethodCategory::GetMvaValue,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10707:20,message,message,20,https://root.cern,https://github.com/root-project/root/pull/10707,1,['message'],['message']
Integrability,[TMVA] Remove dependency on torch.onnx submodule,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13613:14,depend,dependency,14,https://root.cern,https://github.com/root-project/root/pull/13613,1,['depend'],['dependency']
Integrability,[TMVA] cmake status message if PyMVA is dropped due to missing numpy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/272:20,message,message,20,https://root.cern,https://github.com/root-project/root/pull/272,1,['message'],['message']
Integrability,"[TTreeProcMT] Fix missing space, add commas in error message",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5263:53,message,message,53,https://root.cern,https://github.com/root-project/root/pull/5263,1,['message'],['message']
Integrability,[TTreeReader] Formatting and better error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6326:42,message,message,42,https://root.cern,https://github.com/root-project/root/pull/6326,1,['message'],['message']
Integrability,[TreePlayer][ROOT-9713] Remove printing of error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2811:49,message,messages,49,https://root.cern,https://github.com/root-project/root/pull/2811,1,['message'],['messages']
Integrability,[Tree] Mention branch name in TBranchElement error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5212:51,message,message,51,https://root.cern,https://github.com/root-project/root/pull/5212,1,['message'],['message']
Integrability,[Tree] Print Error message if a friend has kEntriesReshuffled set,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5182:19,message,message,19,https://root.cern,https://github.com/root-project/root/pull/5182,1,['message'],['message']
Integrability,"[UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. ; In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting.; See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: ; ```; TGraphMultiErrors g;; g.AddPoint(2,3);; double e1[1] = {1};; double e2[1] = {3}; ; g.AddYError(1, e1, e1);; g.AddYError(1, e2, e2); ; std::cout << g.GetEYlow()[0] << std::endl;; ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. ; One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9335:776,interface,interface,776,https://root.cern,https://github.com/root-project/root/issues/9335,1,['interface'],['interface']
Integrability,[VecOps] Improve wording of an error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13120:37,message,message,37,https://root.cern,https://github.com/root-project/root/pull/13120,1,['message'],['message']
Integrability,[WIP] Add a wrapper around add_subdirectory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406:12,wrap,wrapper,12,https://root.cern,https://github.com/root-project/root/pull/2406,1,['wrap'],['wrapper']
Integrability,[WIP][Proposal] Modern TMVA application interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3321:40,interface,interface,40,https://root.cern,https://github.com/root-project/root/pull/3321,1,['interface'],['interface']
Integrability,[WIP][PyROOT] Move interoperability functions to ROOT.Numpy namespace,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5252:19,interoperab,interoperability,19,https://root.cern,https://github.com/root-project/root/pull/5252,1,['interoperab'],['interoperability']
Integrability,"[backport] Remove deprecated python option, added an info message",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5858:58,message,message,58,https://root.cern,https://github.com/root-project/root/pull/5858,1,['message'],['message']
Integrability,[backport][632][tutorials][tmva] Fix a dependency issue with TMVA tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15631:39,depend,dependency,39,https://root.cern,https://github.com/root-project/root/pull/15631,1,['depend'],['dependency']
Integrability,[bug][GUI]Protection against null pointer der. and better error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6714:64,message,messages,64,https://root.cern,https://github.com/root-project/root/pull/6714,1,['message'],['messages']
Integrability,[bug][improvement] Fix warning message in THtml,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6689:31,message,message,31,https://root.cern,https://github.com/root-project/root/pull/6689,1,['message'],['message']
Integrability,[bugfix] [core] Extend the message ID type to Long_t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6740:27,message,message,27,https://root.cern,https://github.com/root-project/root/pull/6740,1,['message'],['message']
Integrability,[ci-config] Add dependabot to update GitHub Actions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14683:16,depend,dependabot,16,https://root.cern,https://github.com/root-project/root/pull/14683,1,['depend'],['dependabot']
Integrability,[ci] Start integration for the v6-34-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16728:11,integrat,integration,11,https://root.cern,https://github.com/root-project/root/pull/16728,1,['integrat'],['integration']
Integrability,[cling-cpt] Added new dependent arguments [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10937:22,depend,dependent,22,https://root.cern,https://github.com/root-project/root/pull/10937,2,['depend'],['dependent']
Integrability,[cling] Adapt the cling-demo to the new cling::Value interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12228:53,interface,interface,53,https://root.cern,https://github.com/root-project/root/pull/12228,1,['interface'],['interface']
Integrability,[cling] Add a dependency on clangSema to clingInterpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2858:14,depend,dependency,14,https://root.cern,https://github.com/root-project/root/pull/2858,1,['depend'],['dependency']
Integrability,[cling] Add interfaces that expose JIT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16537:12,interface,interfaces,12,https://root.cern,https://github.com/root-project/root/pull/16537,1,['interface'],['interfaces']
Integrability,[cling] Assert if the cling::Value is set via the wrong interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12229:56,interface,interface,56,https://root.cern,https://github.com/root-project/root/pull/12229,1,['interface'],['interface']
Integrability,[cling] Do not inject libCling first (ROOT-10499):,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6108:15,inject,inject,15,https://root.cern,https://github.com/root-project/root/pull/6108,1,['inject'],['inject']
Integrability,[cling] Do not wrap overloaded `operator` function declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11265:15,wrap,wrap,15,https://root.cern,https://github.com/root-project/root/pull/11265,1,['wrap'],['wrap']
Integrability,[cling] Explicitly resolve symbols also from injected libs:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6126:45,inject,injected,45,https://root.cern,https://github.com/root-project/root/pull/6126,1,['inject'],['injected']
Integrability,[cling] Ignore -Wunused-result in wrapped code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12654:34,wrap,wrapped,34,https://root.cern,https://github.com/root-project/root/pull/12654,1,['wrap'],['wrapped']
Integrability,[cling] Inject symbols from libc_nonshared.a,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13286:8,Inject,Inject,8,https://root.cern,https://github.com/root-project/root/pull/13286,1,['Inject'],['Inject']
Integrability,[cling] New interface to export Cling run-time configuration bits.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6928:12,interface,interface,12,https://root.cern,https://github.com/root-project/root/pull/6928,1,['interface'],['interface']
Integrability,[cling] Only set result type if result type is known for auto-injection,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14451:62,inject,injection,62,https://root.cern,https://github.com/root-project/root/pull/14451,1,['inject'],['injection']
Integrability,[cling] Use the dyld to show more meaningful message when a symbol is missing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6606:45,message,message,45,https://root.cern,https://github.com/root-project/root/pull/6606,1,['message'],['message']
Integrability,[cling][v6-28] Ignore -Wunused-result in wrapped code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12703:41,wrap,wrapped,41,https://root.cern,https://github.com/root-project/root/pull/12703,1,['wrap'],['wrapped']
Integrability,[cmake] Add missing dependency.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3040:20,depend,dependency,20,https://root.cern,https://github.com/root-project/root/pull/3040,1,['depend'],['dependency']
Integrability,[cmake] Correct dependencies for tutorial-tmva-TMVA_SOFIE_RDataFrame-py,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16555:16,depend,dependencies,16,https://root.cern,https://github.com/root-project/root/pull/16555,1,['depend'],['dependencies']
Integrability,[cmake] Generation of RGitCommit.h depends on nothing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1741:35,depend,depends,35,https://root.cern,https://github.com/root-project/root/pull/1741,1,['depend'],['depends']
Integrability,[cmake] Inject -isysroot ${CMAKE_OSX_SYSROOT} to unuran.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2699:8,Inject,Inject,8,https://root.cern,https://github.com/root-project/root/pull/2699,1,['Inject'],['Inject']
Integrability,[cmake] Reduce the redundant dependencies to onepcm.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188:29,depend,dependencies,29,https://root.cern,https://github.com/root-project/root/pull/1188,1,['depend'],['dependencies']
Integrability,[cmake] Support INTERFACE_INCLUDE_DIRECTORIES for target dependencies in ROOT_LINKER_LIBRARY,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7026:57,depend,dependencies,57,https://root.cern,https://github.com/root-project/root/pull/7026,1,['depend'],['dependencies']
Integrability,[cmake] Synchronize LLVM flags with cling flags.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/967:8,Synchroniz,Synchronize,8,https://root.cern,https://github.com/root-project/root/pull/967,1,['Synchroniz'],['Synchronize']
Integrability,[cmake] add TBB as builtin dependency for Thread library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8023:27,depend,dependency,27,https://root.cern,https://github.com/root-project/root/pull/8023,1,['depend'],['dependency']
Integrability,[cmake] add TBB as builtin dependency for Thread library 6.24,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8024:27,depend,dependency,27,https://root.cern,https://github.com/root-project/root/pull/8024,1,['depend'],['dependency']
Integrability,[core/foundation/inc/ROOT/span.hxx](https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx) should never be used in the same build as the official span. It is literally meants to be a bridge from older C++ standard (where it is not available) to the newer standard (where it is available). . Which standard did you build ROOT with? Which standard did you build your code with?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042#issuecomment-1595244329:212,bridg,bridge,212,https://root.cern,https://github.com/root-project/root/issues/13042#issuecomment-1595244329,1,['bridg'],['bridge']
Integrability,[core] Improve readbility of unit-test-support messages.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12469:47,message,messages,47,https://root.cern,https://github.com/root-project/root/pull/12469,1,['message'],['messages']
Integrability,[cxmodules] Clarify interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3456:20,interface,interfaces,20,https://root.cern,https://github.com/root-project/root/pull/3456,1,['interface'],['interfaces']
Integrability,[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9566:66,depend,dependency,66,https://root.cern,https://github.com/root-project/root/pull/9566,1,['depend'],['dependency']
Integrability,[cxxmodules] Add dependencies to C++ modules generated by rootcling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1038:17,depend,dependencies,17,https://root.cern,https://github.com/root-project/root/pull/1038,1,['depend'],['dependencies']
Integrability,[cxxmodules] Add missing dependencies to MathCore.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2506:25,depend,dependencies,25,https://root.cern,https://github.com/root-project/root/pull/2506,1,['depend'],['dependencies']
Integrability,[cxxmodules] Add missing dependency rootcling -> complexDict,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1247:25,depend,dependency,25,https://root.cern,https://github.com/root-project/root/pull/1247,1,['depend'],['dependency']
Integrability,[cxxmodules] Add missing module dependencies to test dictionaries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/914:32,depend,dependencies,32,https://root.cern,https://github.com/root-project/root/pull/914,1,['depend'],['dependencies']
Integrability,[cxxmodules] Adding missing dependency for pyroot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1922:28,depend,dependency,28,https://root.cern,https://github.com/root-project/root/pull/1922,1,['depend'],['dependency']
Integrability,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7398:299,depend,dependent,299,https://root.cern,https://github.com/root-project/root/pull/7398,1,['depend'],['dependent']
Integrability,[cxxmodules] Fix nightlies by autoload dependency libraries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2148:39,depend,dependency,39,https://root.cern,https://github.com/root-project/root/pull/2148,1,['depend'],['dependency']
Integrability,[cxxmodules] Implement to_string interface to gInterpreter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2698:33,interface,interface,33,https://root.cern,https://github.com/root-project/root/pull/2698,1,['interface'],['interface']
Integrability,[cxxmodules] Load the dependent modules for both rootcling and rootcling_stage1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5443:22,depend,dependent,22,https://root.cern,https://github.com/root-project/root/pull/5443,1,['depend'],['dependent']
Integrability,[cxxmodules] Load the modules using the new LoadModule interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1362:55,interface,interface,55,https://root.cern,https://github.com/root-project/root/pull/1362,1,['interface'],['interface']
Integrability,[cxxmodules] Make the ROOT modulemap only a dependency when building ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13213:44,depend,dependency,44,https://root.cern,https://github.com/root-project/root/pull/13213,1,['depend'],['dependency']
Integrability,[cxxmodules] Move all Qt header into a wrapper module to fix warnings,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2011:39,wrap,wrapper,39,https://root.cern,https://github.com/root-project/root/pull/2011,1,['wrap'],['wrapper']
Integrability,[cxxmodules] Preload the dependent modules if specified in rootcling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5359:25,depend,dependent,25,https://root.cern,https://github.com/root-project/root/pull/5359,1,['depend'],['dependent']
Integrability,[cxxmodules] Sink the interface for loading a module in cling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3444:22,interface,interface,22,https://root.cern,https://github.com/root-project/root/pull/3444,1,['interface'],['interface']
Integrability,[cxxmodules] Teach ACLiC to work when not all dependent libs are resolved.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4742:46,depend,dependent,46,https://root.cern,https://github.com/root-project/root/pull/4742,1,['depend'],['dependent']
Integrability,[cxxmodules] Teach cling to build modules; Build dependent modules explicitly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5521:49,depend,dependent,49,https://root.cern,https://github.com/root-project/root/pull/5521,1,['depend'],['dependent']
Integrability,[cxxmodules] The bloom filter bloom size depends on the arch bitness.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4116:41,depend,depends,41,https://root.cern,https://github.com/root-project/root/pull/4116,1,['depend'],['depends']
Integrability,[cxxmodules] The newly built pcm files depend on their modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4199:39,depend,depend,39,https://root.cern,https://github.com/root-project/root/pull/4199,1,['depend'],['depend']
Integrability,[df] Improve user interface in DistrRDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16309:18,interface,interface,18,https://root.cern,https://github.com/root-project/root/pull/16309,1,['interface'],['interface']
Integrability,[geom] New BVH/VoxelGrid-based implementation of TGeoParallelWorld routines,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:67,rout,routines,67,https://root.cern,https://github.com/root-project/root/pull/16442,1,['rout'],['routines']
Integrability,"[hist] Fit to TH2 silently ignores the `""I""` option for bin integration",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11016:60,integrat,integration,60,https://root.cern,https://github.com/root-project/root/issues/11016,1,['integrat'],['integration']
Integrability,[hist] TGraphMultiErrors: needs some improvements in interface and better documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9335:53,interface,interface,53,https://root.cern,https://github.com/root-project/root/issues/9335,1,['interface'],['interface']
Integrability,[hist][PyROOT] Pythonize the TF1 EvalPar interface for 2D NumPy arrays,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16371:41,interface,interface,41,https://root.cern,https://github.com/root-project/root/pull/16371,1,['interface'],['interface']
Integrability,[io/ntuple] Use RRawFileTFile for non-supported protocols,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14867:48,protocol,protocols,48,https://root.cern,https://github.com/root-project/root/pull/14867,1,['protocol'],['protocols']
Integrability,[io] Add error message before assert (#8387).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8461:15,message,message,15,https://root.cern,https://github.com/root-project/root/pull/8461,2,['message'],['message']
Integrability,[json] adjust char* JSON format depending on content,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6141:32,depend,depending,32,https://root.cern,https://github.com/root-project/root/pull/6141,1,['depend'],['depending']
Integrability,[lazy-builds] Add add_subdirectory wrapper,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3409:35,wrap,wrapper,35,https://root.cern,https://github.com/root-project/root/pull/3409,1,['wrap'],['wrapper']
Integrability,[master] root cppyy changes causing issues in dependent python projects,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14904:46,depend,dependent,46,https://root.cern,https://github.com/root-project/root/issues/14904,1,['depend'],['dependent']
Integrability,[math] Minuit2 errors out with `Initial matrix not pos.def.` depending on which histograms were fitted before,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13852:61,depend,depending,61,https://root.cern,https://github.com/root-project/root/issues/13852,1,['depend'],['depending']
Integrability,[math] [ROOT-9673] Print message only if verbosity level allows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15683:25,message,message,25,https://root.cern,https://github.com/root-project/root/pull/15683,1,['message'],['message']
Integrability,[mathcore] Delete obscure conditions in class for adaptive quadrature integration in multi-dimensions (AdaptiveIntegratorMultiDim),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11826:70,integrat,integration,70,https://root.cern,https://github.com/root-project/root/pull/11826,1,['integrat'],['integration']
Integrability,[metacling] Offer RLogger interface to trace autoparsing:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7609:26,interface,interface,26,https://root.cern,https://github.com/root-project/root/pull/7609,1,['interface'],['interface']
Integrability,[metacling] Optimize TCling*Info interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3616:33,interface,interfaces,33,https://root.cern,https://github.com/root-project/root/pull/3616,1,['interface'],['interfaces']
Integrability,"[ntuple,daos] Create wrappers around backend-specific structures",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12109:21,wrap,wrappers,21,https://root.cern,https://github.com/root-project/root/pull/12109,1,['wrap'],['wrappers']
Integrability,[ntuple] Fix misuse of the `TVirtualCollectionProxy` iterator interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12542:62,interface,interface,62,https://root.cern,https://github.com/root-project/root/pull/12542,1,['interface'],['interface']
Integrability,[ntuple] Fix typo in exception message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12913:31,message,message,31,https://root.cern,https://github.com/root-project/root/pull/12913,1,['message'],['message']
Integrability,[ntuple] Fix-up tutorial after RFieldBase::Create() interface change,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6698:52,interface,interface,52,https://root.cern,https://github.com/root-project/root/pull/6698,2,['interface'],['interface']
Integrability,[ntuple] Improve column casting error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8227:38,message,message,38,https://root.cern,https://github.com/root-project/root/pull/8227,1,['message'],['message']
Integrability,[ntuple] Integrate RNTupleMerger into TFileMerger,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14398:9,Integrat,Integrate,9,https://root.cern,https://github.com/root-project/root/pull/14398,1,['Integrat'],['Integrate']
Integrability,[ntuple] Move `SerializeXxx` routines for fundamental types to a named namespace,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8003:29,rout,routines,29,https://root.cern,https://github.com/root-project/root/pull/8003,1,['rout'],['routines']
Integrability,[ntuple] Remove `RResult` from public importer interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12565:47,interface,interface,47,https://root.cern,https://github.com/root-project/root/pull/12565,1,['interface'],['interface']
Integrability,[ntuple] Remove column model wrapper,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15991:29,wrap,wrapper,29,https://root.cern,https://github.com/root-project/root/pull/15991,1,['wrap'],['wrapper']
Integrability,[ntuple] Remove outdated test dependency on RDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16292:30,depend,dependency,30,https://root.cern,https://github.com/root-project/root/pull/16292,1,['depend'],['dependency']
Integrability,"[ntuple] Several interface improvements (unique pointer, const)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6655:17,interface,interface,17,https://root.cern,https://github.com/root-project/root/pull/6655,1,['interface'],['interface']
Integrability,[ntuple] Support the storage of collections using the `TVirtualCollectionProxy` interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11525:80,interface,interface,80,https://root.cern,https://github.com/root-project/root/pull/11525,1,['interface'],['interface']
Integrability,[ntuple] Wrap RFieldBase::Create() return field in RResult,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6687:9,Wrap,Wrap,9,https://root.cern,https://github.com/root-project/root/pull/6687,1,['Wrap'],['Wrap']
Integrability,[ntuple] add RIO Dependencies for RXTuple,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15784:17,Depend,Dependencies,17,https://root.cern,https://github.com/root-project/root/pull/15784,1,['Depend'],['Dependencies']
Integrability,[ntuple] advertise RNTuple implements hadd MergeFile interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6008:53,interface,interface,53,https://root.cern,https://github.com/root-project/root/pull/6008,1,['interface'],['interface']
Integrability,[ntuple] avoid page source/sink in public reader/writer interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14521:56,interface,interface,56,https://root.cern,https://github.com/root-project/root/pull/14521,1,['interface'],['interface']
Integrability,[ntuple] clean-up dependencies of unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13351:18,depend,dependencies,18,https://root.cern,https://github.com/root-project/root/pull/13351,1,['depend'],['dependencies']
Integrability,[ntuple] improve RNTuple anchor interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14518:32,interface,interface,32,https://root.cern,https://github.com/root-project/root/pull/14518,1,['interface'],['interface']
Integrability,[ntuple] improve error message when writing fails,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15007:23,message,message,23,https://root.cern,https://github.com/root-project/root/pull/15007,1,['message'],['message']
Integrability,[ntuple] remove page source from public RNTupleDS interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14522:50,interface,interface,50,https://root.cern,https://github.com/root-project/root/pull/14522,1,['interface'],['interface']
Integrability,[ntuple] remove page source from pulic view interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14530:44,interface,interface,44,https://root.cern,https://github.com/root-project/root/pull/14530,1,['interface'],['interface']
Integrability,[ntuple] remove page source/sink from public RField interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14591:52,interface,interface,52,https://root.cern,https://github.com/root-project/root/pull/14591,1,['interface'],['interface']
Integrability,[ntuple] replace raw pointer interface RValue::Get(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14436:29,interface,interface,29,https://root.cern,https://github.com/root-project/root/pull/14436,1,['interface'],['interface']
Integrability,[ntuple] various interface improvements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14454:17,interface,interface,17,https://root.cern,https://github.com/root-project/root/pull/14454,1,['interface'],['interface']
Integrability,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15141:684,message,message,684,https://root.cern,https://github.com/root-project/root/pull/15141,1,['message'],['message']
Integrability,[pyroot exp] Integrate cppyy fix solving issues with python include p…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3415:13,Integrat,Integrate,13,https://root.cern,https://github.com/root-project/root/pull/3415,1,['Integrat'],['Integrate']
Integrability,[pyroot] Fix dependency for pyroot rtensor test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13660:13,depend,dependency,13,https://root.cern,https://github.com/root-project/root/pull/13660,1,['depend'],['dependency']
Integrability,[qtwebdisplay] Update to new RLogger interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6942:37,interface,interface,37,https://root.cern,https://github.com/root-project/root/pull/6942,1,['interface'],['interface']
Integrability,[rbrowser] add warning message when RBrowser stared for TBrowser,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9549:23,message,message,23,https://root.cern,https://github.com/root-project/root/pull/9549,1,['message'],['message']
Integrability,"[rbrowser] add warning message when RBrowser stared for TBrowser, 6.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9550:23,message,message,23,https://root.cern,https://github.com/root-project/root/pull/9550,1,['message'],['message']
Integrability,[rdf] add RIO dependency for dataframe_splitcoll_arrayview,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15820:14,depend,dependency,14,https://root.cern,https://github.com/root-project/root/pull/15820,1,['depend'],['dependency']
Integrability,[rdf] fix gcc14 warning in InterfaceUtils #16360,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16362:27,Interface,InterfaceUtils,27,https://root.cern,https://github.com/root-project/root/pull/16362,1,['Interface'],['InterfaceUtils']
Integrability,[rdf] gcc14 issue warning in `RDF/InterfaceUtils.hxx`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16360:34,Interface,InterfaceUtils,34,https://root.cern,https://github.com/root-project/root/issues/16360,1,['Interface'],['InterfaceUtils']
Integrability,[rdf] remove lambda from InterfaceUtils.hxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16367:25,Interface,InterfaceUtils,25,https://root.cern,https://github.com/root-project/root/pull/16367,1,['Interface'],['InterfaceUtils']
Integrability,[reve] Integrate JSROOT TGeo geometry tessellation and hierarchy browser/table in REve,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16806:7,Integrat,Integrate,7,https://root.cern,https://github.com/root-project/root/pull/16806,1,['Integrat'],['Integrate']
Integrability,[root7] Add missing cmake dependencies for ROOTHistDraw,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4428:26,depend,dependencies,26,https://root.cern,https://github.com/root-project/root/pull/4428,1,['depend'],['dependencies']
Integrability,[rootcling] Fix typo in error message.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5404:30,message,message,30,https://root.cern,https://github.com/root-project/root/pull/5404,1,['message'],['message']
Integrability,[rootcling] Provide better information about the potential missing dependency,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5914:67,depend,dependency,67,https://root.cern,https://github.com/root-project/root/pull/5914,1,['depend'],['dependency']
Integrability,[rootcling] add extra check for MathCore dependency from Vc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7378:41,depend,dependency,41,https://root.cern,https://github.com/root-project/root/pull/7378,1,['depend'],['dependency']
Integrability,"[rootcling] add extra check for MathCore dependency from Vc, backport to 6.24",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7379:41,depend,dependency,41,https://root.cern,https://github.com/root-project/root/pull/7379,1,['depend'],['dependency']
Integrability,[skip ci][WIP] Integration of Zstd compression algorithm in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3681:15,Integrat,Integration,15,https://root.cern,https://github.com/root-project/root/pull/3681,1,['Integrat'],['Integration']
Integrability,[skip-ci] adapt to changes in TBB interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7059:34,interface,interfaces,34,https://root.cern,https://github.com/root-project/root/pull/7059,1,['interface'],['interfaces']
Integrability,[skip-ci] add deprecation messages to outdated classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14754:26,message,messages,26,https://root.cern,https://github.com/root-project/root/pull/14754,1,['message'],['messages']
Integrability,[skip-ci] improve error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11235:24,message,message,24,https://root.cern,https://github.com/root-project/root/pull/11235,1,['message'],['message']
Integrability,[skip-ci] new \legacy interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9108:22,interface,interface,22,https://root.cern,https://github.com/root-project/root/pull/9108,1,['interface'],['interface']
Integrability,"[skip-ci]. Doxygen was omitting classes that are defined in a .cxx. Although their; interface might not be too relevant for users, enabling those should help; developers. See, for example [this](https://root.cern/doc/master/namespaceRooBatchCompute_1_1RF__ARCH.html); It should in theory list the classes that are used for RF computations, but these never show up in doxygen.; Instead, we only see three helper functions. (Not to worry, the docs of this library are improved more in #7451). Especially the broken link in the **See also** is a bit unfortunate:; ![image](https://user-images.githubusercontent.com/16205615/110686280-90aed880-81df-11eb-8246-7f5ffba11183.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7453:84,interface,interface,84,https://root.cern,https://github.com/root-project/root/pull/7453,1,['interface'],['interface']
Integrability,"[tcling,v6-24] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10120:57,wrap,wrappers,57,https://root.cern,https://github.com/root-project/root/pull/10120,1,['wrap'],['wrappers']
Integrability,[tcling] Do not trace weak symbols when resolving library dependencies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4230:58,depend,dependencies,58,https://root.cern,https://github.com/root-project/root/pull/4230,1,['depend'],['dependencies']
Integrability,[tcling] Refactor code in separate routines and reduce include for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3865:35,rout,routines,35,https://root.cern,https://github.com/root-project/root/pull/3865,1,['rout'],['routines']
Integrability,[tcling] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9244:51,wrap,wrappers,51,https://root.cern,https://github.com/root-project/root/pull/9244,1,['wrap'],['wrappers']
Integrability,[tcling] Use the right interface to make a path absolute.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3813:23,interface,interface,23,https://root.cern,https://github.com/root-project/root/pull/3813,1,['interface'],['interface']
Integrability,"[test,cxxmodules] stressMathMore depends on Smatrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2358:33,depend,depends,33,https://root.cern,https://github.com/root-project/root/pull/2358,1,['depend'],['depends']
Integrability,[tmva] Fix Keras vs Pytorch tutorial dependency,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12367:37,depend,dependency,37,https://root.cern,https://github.com/root-project/root/pull/12367,1,['depend'],['dependency']
Integrability,[tmva] Fix dependency of libTMVA from,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13718:11,depend,dependency,11,https://root.cern,https://github.com/root-project/root/pull/13718,1,['depend'],['dependency']
Integrability,[tmva] Fix dependency of tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15493:11,depend,dependency,11,https://root.cern,https://github.com/root-project/root/pull/15493,1,['depend'],['dependency']
Integrability,[tmva] Fix the dependency of TMVA tutorials and PyMVA tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12211:15,depend,dependency,15,https://root.cern,https://github.com/root-project/root/pull/12211,1,['depend'],['dependency']
Integrability,"[tmva] Impose correct test dependencies, avoid multiple invocations of Declare, avoid races when writing model files",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16711:27,depend,dependencies,27,https://root.cern,https://github.com/root-project/root/pull/16711,1,['depend'],['dependencies']
Integrability,[tmva][pymva] Fix finally the PyMVA tests dependency,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12222:42,depend,dependency,42,https://root.cern,https://github.com/root-project/root/pull/12222,1,['depend'],['dependency']
Integrability,[tmva][sofie] Fix error message in Tanh operator,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11030:24,message,message,24,https://root.cern,https://github.com/root-project/root/pull/11030,1,['message'],['message']
Integrability,[tmva][tutorials] Fix dependency of TMVA tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15115:22,depend,dependency,22,https://root.cern,https://github.com/root-project/root/pull/15115,1,['depend'],['dependency']
Integrability,[tree] Clarify error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13386:21,message,message,21,https://root.cern,https://github.com/root-project/root/pull/13386,1,['message'],['message']
Integrability,[tree] Fix GetTreeFullPaths in case of `protocol://`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10217:40,protocol,protocol,40,https://root.cern,https://github.com/root-project/root/pull/10217,1,['protocol'],['protocol']
Integrability,[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10218:40,protocol,protocol,40,https://root.cern,https://github.com/root-project/root/pull/10218,1,['protocol'],['protocol']
Integrability,[tree] Fix typo in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12215:25,message,message,25,https://root.cern,https://github.com/root-project/root/pull/12215,1,['message'],['message']
Integrability,[tree] Integrate rootreadspeed into ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11102:7,Integrat,Integrate,7,https://root.cern,https://github.com/root-project/root/pull/11102,1,['Integrat'],['Integrate']
Integrability,[tree] avoid dependency from TreePlayer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5246:13,depend,dependency,13,https://root.cern,https://github.com/root-project/root/pull/5246,2,['depend'],['dependency']
Integrability,"[tree] major and minor indices to long64, it was forgotten to change from 32bit of old interfaces",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14967:87,interface,interfaces,87,https://root.cern,https://github.com/root-project/root/pull/14967,1,['interface'],['interfaces']
Integrability,[treereader] Clearer error message in SetEntriesRange,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10705:27,message,message,27,https://root.cern,https://github.com/root-project/root/pull/10705,1,['message'],['message']
Integrability,[tutorials][tmva] Fix a dependency issue with TMVA tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15622:24,depend,dependency,24,https://root.cern,https://github.com/root-project/root/pull/15622,1,['depend'],['dependency']
Integrability,[v626][RF] Remove details of likelihood minimization from public interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9873:65,interface,interface,65,https://root.cern,https://github.com/root-project/root/pull/9873,1,['interface'],['interface']
Integrability,[v628][RF] Comment out `ryml` backend for RooFit JSON interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15262:54,interface,interface,54,https://root.cern,https://github.com/root-project/root/pull/15262,1,['interface'],['interface']
Integrability,[v630][RF] Comment out `ryml` backend for RooFit JSON interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15261:54,interface,interface,54,https://root.cern,https://github.com/root-project/root/pull/15261,1,['interface'],['interface']
Integrability,[v630][TMVA] Add missing TMVA python dependencies to requirements.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15584:37,depend,dependencies,37,https://root.cern,https://github.com/root-project/root/pull/15584,1,['depend'],['dependencies']
Integrability,[v632][RF] Comment out `ryml` backend for RooFit JSON interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15260:54,interface,interface,54,https://root.cern,https://github.com/root-project/root/pull/15260,1,['interface'],['interface']
Integrability,[v632][TMVA] Add missing TMVA python dependencies to requirements.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15583:37,depend,dependencies,37,https://root.cern,https://github.com/root-project/root/pull/15583,1,['depend'],['dependencies']
Integrability,[webgui] add Net to list of librariy dependency,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11824:37,depend,dependency,37,https://root.cern,https://github.com/root-project/root/pull/11824,1,['depend'],['dependency']
Integrability,"[webgui] always use loopback for web widgets, adjust warning messages",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14119:61,message,messages,61,https://root.cern,https://github.com/root-project/root/pull/14119,1,['message'],['messages']
Integrability,[webgui] suppress error messages from browsers [6.32],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15358:24,message,messages,24,https://root.cern,https://github.com/root-project/root/pull/15358,1,['message'],['messages']
Integrability,[webgui] suppress log messages from chrome/firefox browsers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15357:22,message,messages,22,https://root.cern,https://github.com/root-project/root/pull/15357,1,['message'],['messages']
Integrability,[win] Fix window position & add missing dependencies,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9866:40,depend,dependencies,40,https://root.cern,https://github.com/root-project/root/pull/9866,1,['depend'],['dependencies']
Integrability,[wincxxmodules] Backport D86514 - Correctly parse LateParsedTemplates in case of dependent modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6307:81,depend,dependent,81,https://root.cern,https://github.com/root-project/root/pull/6307,1,['depend'],['dependent']
Integrability,[wincxxmodules] Remove Cling as a dependency of win32gdk,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5796:34,depend,dependency,34,https://root.cern,https://github.com/root-project/root/pull/5796,1,['depend'],['dependency']
Integrability,"[x] Checked for duplicates. ### Describe the bug; Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior; ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce; Load a dynamic library with ; `gROOT->ProcessLine("".L path_to_library.dylib"")`; or equivalent. ### Setup; 1. ROOT 6.27/01; 2. macOS 11.4; 3. built from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9697:56,message,message,56,https://root.cern,https://github.com/root-project/root/issues/9697,1,['message'],['message']
Integrability,"\14.23.28105\include\xutility(132,48): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXInstrInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2021-05-04T11:23:49.988Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/TrailingObjects.h(224,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCXX.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2021-05-04T11:23:49.988Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree(715,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\InterfaceStubFunctionsConsumer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-05-04T11:23:49.988Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility(122,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGAtomic.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2021-05-04T11:23:49.989Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector(1706,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\Precompi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8036#issuecomment-831868860:2627,Interface,InterfaceStubFunctionsConsumer,2627,https://root.cern,https://github.com/root-project/root/pull/8036#issuecomment-831868860,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,"\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:4696,message,message,4696,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:10769,message,message,10769,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:2417,message,message,2417,https://root.cern,https://github.com/root-project/root/pull/11153,1,['message'],['message']
Integrability,"\utils\TableGen\obj.llvm-tblgen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(60,45): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LLVMDebugInfoMSF.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(70,46): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LLVMDebugInfoMSF.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(77,49): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LLVMDebugInfoMSF.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(60,45): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\utils\TableGen\AsmWriterEmitter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.vcxproj] . And 773 more. ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:36 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:130 (message):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547096756:4313,message,message,4313,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547096756,3,['message'],['message']
Integrability,"] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:137:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:155:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:170:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:183:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621890214:3204,interface,interfaces,3204,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621890214,3,['interface'],['interfaces']
Integrability,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:2779,integrat,integration,2779,https://root.cern,https://github.com/root-project/root/pull/12681,18,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:5127,message,message,5127,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,"_data_name` optional; b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs; f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting; 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication; a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF] Exclude RooHistError from IO; [RF] Remove `add(row, weight, weightErr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12620#issuecomment-1497698813:2396,depend,dependency,2396,https://root.cern,https://github.com/root-project/root/pull/12620#issuecomment-1497698813,1,['depend'],['dependency']
Integrability,_data_name` optional; b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs; f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting; 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication; a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12618#issuecomment-1497317057:1501,depend,dependency,1501,https://root.cern,https://github.com/root-project/root/pull/12618#issuecomment-1497317057,2,['depend'],['dependency']
Integrability,"_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633; 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637; 17: call_init.part.0 in ./elf/./elf/dl-init.c:70; 18: call_init in ./elf/./elf/dl-init.c:33; 19: _dl_init in ./elf/./elf/dl-init.c:117; 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182; 21: dl_open_worker in ./elf/./elf/dl-open.c:808; 22: dl_open_worker in ./elf/./elf/dl-open.c:771; 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 24: _dl_open in ./elf/./elf/dl-open.c:883; 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56; 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227; Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s); in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73; 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51; 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90; 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025; 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111; 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214; 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722; 10: TCling::LoadPCM(std::__cxx11::basic_string<char, st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:23558,depend,depends,23558,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['depend'],['depends']
Integrability,"_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/issues/11578. The PR also fixes the same problem for the RooProjectedPdf, which is essentially a integral wrapper but it also got the server-client interface wrong. Now, it simply takes over the shape and value servers from the underlying integral, which is now implemented correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11597:1503,interface,interface,1503,https://root.cern,https://github.com/root-project/root/pull/11597,5,"['depend', 'integrat', 'interface', 'wrap']","['depend', 'integration', 'interface', 'wrapper']"
Integrability,"_nightly_pipeline/instal; l/dev3/oracle/19.11.0.0.0/x86_64-centos7-gcc9-dbg/lib/libclntsh.so;/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/oracle/19.11.0.0.0/x86_64-centos7-gcc9-dbg/lib/libnnz19.so; -- Looking for SQLite; -- Found Sqlite: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/sqlite/3320300/x86_64-centos7-gcc9-dbg/include; -- Looking for FFTW3; -- Found fftw3 includes at /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/fftw3/3.3.8/x86_64-centos7-gcc9-dbg/include; -- Found fftw3 library at /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/fftw3/3.3.8/x86_64-centos7-gcc9-dbg/lib/libfftw3.so; -- Looking for CFITSIO; -- Found CFITSIO: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/cfitsio/3.48/x86_64-centos7-gcc9-dbg/lib/libcfitsio.so (found version ""3.48""); -- Looking for XROOTD; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- libXrdClient not found: use built-in; -- include_dirs: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/include/xrootd;/build/jenkins/workspace/lcg_nightly_pipeline; /build/projects/ROOT-HEAD/src/ROOT/HEAD/proof/xrdinc; -- libraries: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/lib64/libXrdUtils.so;/build/jenkins/workspace/lcg_nightly_pipel; ine/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/lib64/libXrdCl.so; -- Found GFAL: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Grid/gfal/1.13.0-0/x86_64-centos7-gcc9-dbg/include/.; -- Found DCAP: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Grid/dcap/2.47.7-1/x86_64-centos7-gcc9-dbg/include; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.7.6; -- Looking for TBB; -- Found TBB: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/tbb/2020_U2/x86_64-centos7-gcc9-dbg (found suitable version ""2020.2"", minimum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:10253,wrap,wrapper,10253,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,1,['wrap'],['wrapper']
Integrability,"_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x4845FC0: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307); ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:15769,depend,depends,15769,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,`${includedirs}` has more entries. ; It extract includes from `DEPENDENCIES` plus initial values in lines 372..379,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5172#issuecomment-600517523:63,DEPEND,DEPENDENCIES,63,https://root.cern,https://github.com/root-project/root/pull/5172#issuecomment-600517523,1,['DEPEND'],['DEPENDENCIES']
Integrability,"`-Dtmva-sofie=Off` switch off the sofie parser library that depends on protobuf. There is no reason to remove the sofie library, that is a small one, so this is enabled always by default. If you really want to switch off sofie, you can do this by doing `-Dtmva=Off`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13055#issuecomment-1612676338:60,depend,depends,60,https://root.cern,https://github.com/root-project/root/issues/13055#issuecomment-1612676338,1,['depend'],['depends']
Integrability,"`-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has; ```cmake; target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc); ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15308:95,depend,depends,95,https://root.cern,https://github.com/root-project/root/pull/15308,1,['depend'],['depends']
Integrability,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `; no errors. I found these two files; 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`; 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`; are difference.; so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`; and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418#issuecomment-860955112:513,message,message,513,https://root.cern,https://github.com/root-project/root/issues/8418#issuecomment-860955112,1,['message'],['message']
Integrability,"`; 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):; error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned long); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:1351,message,message,1351,https://root.cern,https://github.com/root-project/root/issues/10203,1,['message'],['message']
Integrability,"`; root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};; root [1] foo.GetName(); ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'?; foo.GetName(); ^; ->; root [2] foo->GetName(); (const char *) ""foo.root""; ```. while the example here doesn't:; ```; root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'?; ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ^; ->; root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(); IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&); Maybe you need to load the corresponding shared library?; root [2] ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-2082071082:984,interface,interface,984,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-2082071082,3,['interface'],['interface']
Integrability,"`AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:; - Fix return value of `AppendImpl()` for collection fields.; - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13021:357,depend,depending,357,https://root.cern,https://github.com/root-project/root/pull/13021,1,['depend'],['depending']
Integrability,"`Count` should return the same type that we use to enumerate entries, by definition. A related PR in roottest updates `test_misc` to comply with the interface change.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1046:149,interface,interface,149,https://root.cern,https://github.com/root-project/root/pull/1046,1,['interface'],['interface']
Integrability,"`DistancetoPrimitive` is the base method to be overridden by visual primitives attached to the pad. In `geom` we attach several different objects. Among these, shapes implement this function directly, while for volumes there is some traversal logic in the geometry painter, dispatching eventually to the shapes methods. Composite Boolean shapes are special and need an extra internal specialized dispatching for union, intersection, and subtraction. The intention was to do this dispatching by avoiding the TObject interface (Boolean nodes are never added directly to the pad), and this is why the upper case `T`. However, due to the complexity, these functions are not implemented, so now they are not even connected to `TGeoCompositeShape::DistancetoPrimitive`. . Sorry for this long explanation, this is only to say there is nothing to worry about, the functions are placeholders to remember that this functionality could be added at some point. I would close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16087#issuecomment-2255333723:515,interface,interface,515,https://root.cern,https://github.com/root-project/root/issues/16087#issuecomment-2255333723,1,['interface'],['interface']
Integrability,`EnableThreadSafety()` is called in `_batchgenerator.py` making another call for it redundant and `class RBatchGenerator` depends to Internal namespace,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14860:122,depend,depends,122,https://root.cern,https://github.com/root-project/root/pull/14860,1,['depend'],['depends']
Integrability,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2723#issuecomment-504644265:47,message,message,47,https://root.cern,https://github.com/root-project/root/pull/2723#issuecomment-504644265,1,['message'],['message']
Integrability,"`RColumnReaderBase` is now a non-template class, and only its `Get`; method is templated over the type of the value to retrieve. This alternative design has two main advantages:; - it simplifies `RAction` greatly, removing the need for the special; `RTypeErasedColumnReader` type: now all column readers are type erased; in the sense that a `RColumnReaderBase*` does not contain the type of; the column that will be read; - it makes it possible to pass `RColumnReaderBase` through interfaces; that type-erase column types, which is important to better integrate; RDF and RDataSource: in the future, `RDataSource` implementations will; be able to return specialized column readers to RDF rather than raw; pointers to the datasource values. There should be no visible difference in event loop runtimes: a virtual; call to `SomeColumnReader<T>::Get` has been substituted with a direct,; inlined call to `RColumnReaderBase::Get<T>` which in turn executes a; virtual call to `SomeColumnReader<T>::GetImpl`. Compile times and jitting times should benefit from the reduced amount; of templates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6310:481,interface,interfaces,481,https://root.cern,https://github.com/root-project/root/pull/6310,2,"['integrat', 'interface']","['integrate', 'interfaces']"
Integrability,"`RMergeableValue<T>` contains the following:; ```cpp; template <typename T>; class RMergeableValue : public RMergeableValueBase {; // ...; protected:; T fValue;; // ...; const T &GetValue() const { return fValue; }; };; ```; `T` is the type of the `fValue` data member. For `RMergeableVariations<T>`, the data member `fValues` is a `std::vector<std::unique_ptr<RMergeableValue<T>>>` (due to the way we need to retrieve the various mergeables of the variations in the call chain). So it seemed quite natural to me to have a ; ```cpp; const std::vector<std::unique_ptr<RMergeableValue<T>>> &GetValue() const { return fValues; }; ```; method in this class to me (albeit I failed to mark the method itself `const`). Having a ; ```cpp; const T &GetValue(const std::string &variation) const;; ```; method is also possible. I originally thought to leave the concrete types already downcasted in the `RMergeableVariations<T>`, but I can try this route too. I'll see how it plays with the Python side",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9942#issuecomment-1062333385:938,rout,route,938,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1062333385,1,['rout'],['route']
Integrability,"`ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to; `std::result_of_t` if the former is not available. It is useful as a; C++-standard-agnostic wrapper for this functionality, as; `std::result_of` has been deprecated in C++17 but `std::invoke_result`; is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10679:40,wrap,wrapper,40,https://root.cern,https://github.com/root-project/root/pull/10679,2,['wrap'],['wrapper']
Integrability,"`RPagePersistentSink::Create` guesses the concrete derived sink without wrapping it in a `RPageSinkBuf`, which is now entirely left in the responsibility of the `RNTupleWriter`. (as suggested in https://github.com/root-project/root/pull/14519#discussion_r1477061194)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14597:72,wrap,wrapping,72,https://root.cern,https://github.com/root-project/root/pull/14597,1,['wrap'],['wrapping']
Integrability,"`RPageSinkBuf::CommitPage` currently allocates a sealed page buffer with the same size as the uncompressed page:; https://github.com/root-project/root/blob/226e4c00e5dc4b7aaf881bad810a0c78c8a14185/tree/ntuple/v7/src/RPageSinkBuf.cxx#L148. Instead the code should seal / compress the page into a temporary buffer, at which point the exact compressed size is known and the contents can be copied into an appropriately sized allocation. This saves (significant) memory depending on the compression factor, while the extra `memcpy` should not be visible compared to the compression itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16752:466,depend,depending,466,https://root.cern,https://github.com/root-project/root/issues/16752,1,['depend'],['depending']
Integrability,"`RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3024:652,wrap,wrap,652,https://root.cern,https://github.com/root-project/root/pull/3024,1,['wrap'],['wrap']
Integrability,"`TCling.cxx`’s `RegisterCxxModules` loads explicitly several modules including `Core`, `Rint` and `RIO`. When executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11687:319,depend,dependencies,319,https://root.cern,https://github.com/root-project/root/pull/11687,3,"['depend', 'message']","['dependencies', 'depends-on', 'message']"
Integrability,"`TROOT.cxx` is indeed a very fundamental file to change; it changes `libCore` which in turn causes rootcling to be possibly changed, which in turn means all dictionaries need to be regenerated, which in turn means all libraries will be relinked. So that's expected, and I am not aware of a good solution for this dependency graph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8624#issuecomment-878992877:313,depend,dependency,313,https://root.cern,https://github.com/root-project/root/issues/8624#issuecomment-878992877,1,['depend'],['dependency']
Integrability,`TRandom::Poisson(double mu)` returns an 32 bit integer.; When passing a value `mu>=int_max` (i.e. ~ 2.E9) it returns -2147483648. Also this happens when my is a NaN. ; This can create confusions. ; I think an error message should be produced such that users needs to take actions and protect it. ; In addition one the function return value could be changed from int to unsigned long . To reproduce: . ```; cout << gRandom->Poisson(1.E10) << endl;; cout << gRandom->Poisson(TMath::QuietNaN()) << endl;; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6927:216,message,message,216,https://root.cern,https://github.com/root-project/root/issues/6927,1,['message'],['message']
Integrability,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221:2091,rout,routine,2091,https://root.cern,https://github.com/root-project/root/issues/15221,3,['rout'],['routine']
Integrability,"```; #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, ; input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false); at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840; ```. That's practically the same area as https://github.com/root-project/root/pull/14287 For some reason cppyy does not go via the offset interface...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10724#issuecomment-1925622781:404,interface,interface,404,https://root.cern,https://github.com/root-project/root/issues/10724#issuecomment-1925622781,1,['interface'],['interface']
Integrability,"```; +Warningin<TClassTable::Add>:classROOT::Detail::TTypedIter<TBaseClass>alreadyinTClassTable; +Warningin<TClassTable::Add>:classROOT::Detail::TTypedIter<TEnumConstant>alreadyinTClassTable; ```; The template ROOT::Detail::TTypedIter uses ClassDefInline and the registration of the class (i.e. the call to TClassTable::Add) is triggered by via a function static variable initialization. What these messages indicates (and we see that on Windows also) is that the ""function static variable"" are initialized multiple time. Setting a breakpoint on TClassTable::Add with the condition ```cname[0] == 'R' && cname[6] == 'D' && cname[24]=='<' && cname[32] == 'E'``` will tell you exactly when/why this happens (on Windows, multiple library have identical copies of the functions and they are not ""de-duplicated"" by the linker (i.e. both copies are brought in independently).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-702219136:399,message,messages,399,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-702219136,1,['message'],['messages']
Integrability,```; 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml; 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6388#issuecomment-696635738:149,message,message,149,https://root.cern,https://github.com/root-project/root/pull/6388#issuecomment-696635738,1,['message'],['message']
Integrability,```; 17:28:07 FAILED: DAVIX-prefix/src/DAVIX-stamp/DAVIX-configure ; 17:28:07 cd /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/build/DAVIX-prefix/src/DAVIX-build && /Applications/CMake.app/Contents/bin/cmake -P /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/build/DAVIX-prefix/src/DAVIX-stamp/DAVIX-configure-Debug.cmake && /Applications/CMake.app/Contents/bin/cmake -E touch /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/build/DAVIX-prefix/src/DAVIX-stamp/DAVIX-configure; 17:28:07 CMake Error at /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/build/DAVIX-prefix/src/DAVIX-stamp/DAVIX-configure-Debug.cmake:16 (message):; 17:28:07 Command failed: 1; 17:28:07 ; 17:28:07 '/Applications/CMake.app/Contents/bin/cmake' '-DCMAKE_INSTALL_PREFIX=/Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/build/DAVIX-prefix' '-DCMAKE_BUILD_TYPE=Debug' '-DBOOST_EXTERNAL=OFF' '-DSTATIC_LIBRARY=ON' '-DSHARED_LIBRARY=OFF' '-DENABLE_TOOLS=OFF' '-DCMAKE_C_COMPILER=/Library/Developer/CommandLineTools/usr/bin/cc' '-DCMAKE_CXX_COMPILER=/Library/Developer/CommandLineTools/usr/bin/c++' '-DCMAKE_C_FLAGS= -m64 -pipe -fsigned-char -fno-common -Qunused-arguments -pthread -Wno-format -Wno-implicit-function-declaration' '-DCMAKE_CXX_FLAGS= -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -Wshadow -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -std=c++11 -stdlib=libc++ -Wno-unused-const-variable' '-DCMAKE_OSX_SYSROOT=' '-DCMAKE_OSX_DEPLOYMENT_TARGET=' '-DLIB_SUFFIX=' '-C/Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/build/DAVIX-prefix/tmp/DAVIX-cache-Debug.cmake' '-GNinja' '/Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/build/DAVIX-prefix/src/DAVIX'; 17:28:07 ; 17:28:07 See also; 17:28:07 ; 17:28:07 /Volumes/HD2/build/jenkins/work,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1535#issuecomment-375008476:670,message,message,670,https://root.cern,https://github.com/root-project/root/pull/1535#issuecomment-375008476,1,['message'],['message']
Integrability,"```; [yuka@yuka-arch module-release]$ bin/root.exe -l -b ; root [0] ; [1]+ Stopped bin/root.exe -l -b; [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l; 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b ; root [0] gMinuit; (TMinuit *) nullptr; root [1] ; [2]+ Stopped bin/root.exe -l -b; [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l; 33; ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:; ```; root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so; root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so; root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so; ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394480864:462,depend,depending,462,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394480864,2,['depend'],"['dependency', 'depending']"
Integrability,"```; frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17; frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15; frame #5: 0x00007ffff790f09b; frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34; frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40; frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25; ```; It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10184#issuecomment-1073877190:703,wrap,wrapPoint,703,https://root.cern,https://github.com/root-project/root/issues/10184#issuecomment-1073877190,1,['wrap'],['wrapPoint']
Integrability,"```; root -l 'openTree.C(0)' -b -q; Processing openTree.C(0)...; 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q; Processing openTree.C(1)...; 20.2826ºC; ```. This is the expected result. `TBranch::SetAddress` is a lower level interface and has less ability to check for incorrect setup. Without `SetMakeClass`, if the branch is within an object (i.e. the case here), the input of `SetAddress` is expected to be the start of the object (and thus the offset of the data member is added to the provided address). The explicit purpose of `SetMakeClass` is to disable this addition of the offset. . Note that `TTree::SetBranchAddress` will detect this case and automatically call `SetMakeClass` for the branch:; ```; t4->SetBranchAddress(""fTemperature"", &temp);; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14583#issuecomment-2048287133:225,interface,interface,225,https://root.cern,https://github.com/root-project/root/issues/14583#issuecomment-2048287133,1,['interface'],['interface']
Integrability,"```cpp; #include <TFile.h>; #include <TTreeReader.h>; #include <TTreeReaderArray.h>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; ULong64_t x[3] = {1ull, 2ull, 3ull};; t.Branch(""x"", &x, ""x[3]/l"");; t.Fill();; t.Write();; }. TFile f(""f.root"");; TTreeReader r(""t"", &f);; // this works:; TTreeReaderArray<ULong64_t> x(r, ""x"");; // this does not:; TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;; }; ```. produces the following (bad) error message:. ```; Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>.; ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9758:476,message,message,476,https://root.cern,https://github.com/root-project/root/issues/9758,1,['message'],['message']
Integrability,"```cpp; $ cat test.h; int add42(int i);. $ cat test.cpp; int add42(int i) {; return i + 42;; }. $ clang++ test.cpp -shared -fPIC -o libtest.so. $ root -l -b; root [0] #include ""test.h""; root [1] gSystem->Load(""./libtest.so""); (int) 0; root [2] add42(1) // postpone this and all is fine!!; (int) 43; root [3] gInterpreter->Declare(""double add42d(double d) { return d + 42.; }\nint add42(int i) { return i + 42; }""); [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_Z5add42i'; (bool) true; root [4] add42d(1.) // innocent bystander; IncrementalExecutor::executeFunction: symbol '_Z6add42dd' unresolved while linking [cling interface function]!; You are probably missing the definition of add42d(double); Maybe you need to load the corresponding shared library?; root [5] ; ```. I believe the JIT considers `add42` as a strong symbol and when we re-define it we have a problem. I think this is the right behavior however we allowed this in the past and we might be breaking (sometimes silently) existing code. cc: @wlav",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12277:642,interface,interface,642,https://root.cern,https://github.com/root-project/root/issues/12277,1,['interface'],['interface']
Integrability,"`civetweb` refers to [RFC6455, section 5.2](https://datatracker.ietf.org/doc/html/rfc6455#section-5.2) for values which can be provided in `code`. And yes - not all of them handled in the `TCivetWeb.cxx`. Although I cannot reproduce `fin = 1` `opcode = 8` combination when closing `WebSocket` instance on the client side, seems to be it can happen while `civetweb` does not handle such combination as well. I will add handling for such situation. For the moment we ignore text/binary nature of received messages and put everything into `std::string`.; Up to now in ROOT we do not have applications where binary data should be send from the clients.; Probably one can extend ROOT interface and provide such information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9207#issuecomment-954493430:503,message,messages,503,https://root.cern,https://github.com/root-project/root/issues/9207#issuecomment-954493430,2,"['interface', 'message']","['interface', 'messages']"
Integrability,"`clingtest` exports many more symbols from `libCling`, for testing purposes (see the code in `interpreter/CMakeLists.txt`). This means our (patched) LLVM and Clang will interfere with other LLVM installations used by dependent libraries. IIRC this can make tests fail!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6957#issuecomment-2076571672:217,depend,dependent,217,https://root.cern,https://github.com/root-project/root/issues/6957#issuecomment-2076571672,1,['depend'],['dependent']
Integrability,"`from ROOT import *` leads to a segmentation violation when used with Python 3.6. One could try fixing it instead of disabling it but the code which is used to install the lookup handler in the module `RootModule::SetRootLazyLookup` depends on internal CPython implementation details of the dict class which are not part of the public API. As a consequence keeping this alive will lead to very; fragile code, require continuous effort to adapt to internal changes and cause a lot of #ifdef handling. (as a matter of fact, Python 3.7 would probably already require new changes to this code already). . Also there's a statement in the bug report that `from ROOT import *` is broken in Python 3 so I don't understand why it's not disabled as it will only confuse users: https://sft.its.cern.ch/jira/browse/ROOT-8931. As such I would propose to instead have a clear error message that `from ROOT import *` does not work. This pr adds an `ImportError` which is easy to handle but cannot be just ignored by the user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/825:233,depend,depends,233,https://root.cern,https://github.com/root-project/root/pull/825,2,"['depend', 'message']","['depends', 'message']"
Integrability,"`gInterpreter::ProcessLine` has an important run-time cost.; Instead of calling it everytime the jitting of an action is required, we now store all the strings that are to jit in TLoopManager and do a single call to `gInterpreter::ProcessLine` before running the event-loop. A couple of life-time issues had to be resolved for this to work properly: in order to let result proxies and action helpers share ownership of the result object, I introduced (simple) manual lifetime management of a shared_ptr (weird, I know). In order to deal with deferred jitting of an action that hangs from a node whose `TInterface` has already been destroyed (can happen due to the deferral of jitting) all `BuildAndBook` functions have been made independent of `TInterface`. In the long term it might be possible to refactor the jitting mechanism so that the `TAction` (and the `TTreeReaderValue/Array`s that it contains) is jitted but the action helpers are not, lifting the requirement of manual lifetime management of a shared_ptr. Although this should be possible in principle, I currently don't see how we could integrate it with the existing logic, so I decided for this much less invasive solution. Before/after runtimes for two extreme scenarios:. `test_inference.cxx` (which performs a lot of jitting).; compile time: ~8s -> ~9s; run time: ~40s -> ~7s. 50 jitted Histo1D calls in a loop (thanks to Attila for the use-case):; run time: ~35s -> <2s. This PR conflicts with #713 . Depending on which one gets merged first I will rebase the other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/720:1100,integrat,integrate,1100,https://root.cern,https://github.com/root-project/root/pull/720,2,"['Depend', 'integrat']","['Depending', 'integrate']"
Integrability,`json_fwd.hpp` exists since a while and included in many early distributions. ; My OpenSUSE has `nlohmann/json.hpp` version 3.10.5 with such forward declaration. Problem is ROOT builds where `nlohmann/json.hpp` can be found only with extra settings for shell variables.; In such cases none of its includes can be used in public ROOT interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11205#issuecomment-1219275457:333,interface,interfaces,333,https://root.cern,https://github.com/root-project/root/pull/11205#issuecomment-1219275457,1,['interface'],['interfaces']
Integrability,"`mtbb201_parallelHistoFill.C` fails on Windows x86 and VS v17.9 with the following error:; ```; IncrementalExecutor::executeFunction: symbol '_Thrd_sleep_for@4' unresolved while linking [cling interface function]!; ```; Due to this line:; ```; std::this_thread::sleep_for(std::chrono::duration<double, std::nano>(500));; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14854:193,interface,interface,193,https://root.cern,https://github.com/root-project/root/pull/14854,2,['interface'],['interface']
Integrability,"`rootfit/CMakeLists.txt` does not check whether `HistFactory` is on, despite hs3 depending on it. This happens e.g. if there's no libxml2. See https://root-forum.cern.ch/t/installing-root-error-on-ubuntu/49146/8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10103:81,depend,depending,81,https://root.cern,https://github.com/root-project/root/issues/10103,1,['depend'],['depending']
Integrability,"a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:1534,depend,depends,1534,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,14,['depend'],['depends']
Integrability,"a/x86_64-centos7-gcc8-opt/lib/libNetxNG.so); ==2512== by 0x3F34DECB: TNetXNGFile::TNetXNGFile(char const*, char; const*, char const*, int, int, bool) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libNetxNG.so); ==2512== by 0x401E6642: ???; ==2512== by 0x31A15B61: TClingCallFunc::exec(void*, void*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCling.so); ==2512== by 0x31A16059:; TClingCallFunc::exec_with_valref_return(void*, cling::Value*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCling.so); ==2512== by 0x31A185F1: TClingCallFunc::ExecInt(void*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCling.so); ==2512== by 0x5B50814: TMethodCall::Execute(void*, long&) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== Uninitialised value was created by a stack allocation; ==2512== at 0x5A7E91F: TMessageHandler::Notify() (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512==. Let me know if I can enhance this test to help, e.g. valgrind arguments. Cheers,. Rod. On Wed, 13 Jan 2021 at 16:30, rdschaffer <notifications@github.com> wrote:. > So you mean that 'somehow' wrapper.so is fabricating this incorrect; > string, or it might be coming in from XrdNetConnect::Connect?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-759523877>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRW7YUZQ3N64JAUMA7TSZW4AJANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759537229:4619,wrap,wrapper,4619,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759537229,1,['wrap'],['wrapper']
Integrability,"a\Local\Temp\_CL_123467e9db': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2023-06-01T09:09:56.335Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/DeclCXX.h(2323,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_111426ffex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\ChainedIncludesSource.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2023-06-01T09:09:56.335Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/APInt.h(890,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_a0ca035fsy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\InterfaceStubs.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2023-06-01T09:09:56.335Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(272,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_99efdc38sy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCUDANV.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2023-06-01T09:09:56.335Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\LayoutOverrideSource.cpp : fatal error C1085: Cannot write compiler generated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12911#issuecomment-1571671148:1601,Interface,InterfaceStubs,1601,https://root.cern,https://github.com/root-project/root/pull/12911#issuecomment-1571671148,1,['Interface'],['InterfaceStubs']
Integrability,"aa0b9be10db43857cd7""><code>570e8b1</code></a> add publishConfig for v3 publishes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/5b7cd3372be253759fb4d865eb3f38f189a5fcdf""><code>5b7cd33</code></a> 3.0.6</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/20b4b562830680867feb75f9c635aca08e5c86ff""><code>20b4b56</code></a> [fix] revert all breaking syntax changes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/2ff038852ec03e85e60e0eb333005c680ac8a543""><code>2ff0388</code></a> document, expose, and test 'partial:true' option</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/minimatch/compare/v3.0.4...v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:2086,depend,dependabot-security-updates,2086,https://root.cern,https://github.com/root-project/root/pull/11864,1,['depend'],['dependabot-security-updates']
Integrability,"ableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:4369,message,message,4369,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"ableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:10442,message,message,10442,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,ace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/build/externals//mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/gpad/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -I/mnt/build/workspace/root-pullrequests-build/build/ginclude -writeEmptyRootPCM ROOT/RCsvDS.hxx ROOT/RDataFrame.hxx ROOT/RDataSource.hxx ROOT/RDFHelpers.hxx ROOT/RLazyDS.hxx ROOT/RResultPtr.hxx ROOT/RRootDS.hxx ROOT/RSnapshotOptions.hxx ROOT/RTrivialDS.hxx ROOT/RDF/ActionHelpers.hxx ROOT/RDF/ActionMergers.hxx ROOT/RDF/GraphNode.hxx ROOT/RDF/GraphUtils.hxx ROOT/RDF/HistoModels.hxx ROOT/RDF/InterfaceUtils.hxx ROOT/RDF/NodesUtils.hxx ROOT/RDF/RActionBase.hxx ROOT/RDF/RAction.hxx ROOT/RDF/RBookedCustomColumns.hxx ROOT/RDF/RColumnValue.hxx ROOT/RDF/RCustomColumnBase.hxx ROOT/RDF/RCustomColumn.hxx ROOT/RDF/RCutFlowReport.hxx ROOT/RDF/RDisplay.hxx ROOT/RDF/RFilterBase.hxx ROOT/RDF/RFilter.hxx ROOT/RDF/RInterface.hxx ROOT/RDF/RJittedAction.hxx ROOT/RDF/RJittedCustomColumn.hxx ROOT/RDF/RJittedFilter.hxx ROOT/RDF/RLazyDSImpl.hxx ROOT/RDF/RLoopManager.hxx ROOT/RDF/RMergeableValue.hxx ROOT/RDF/RNodeBase.hxx ROOT/RDF/RRangeBase.hxx ROOT/RDF/RRange.hxx ROOT/RDF/RSlotStack.hxx ROOT/RDF/Utils.hxx ROOT/RDF/PyROOTHelpers.hxx ROOT/RSqliteDS.hxx /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/LinkDef.h ; - [2020-05-06T10:55:15.943Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDF/ActionHelpers.hxx:46:10: fatal error: 'optional' file not found,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5552#issuecomment-624579673:6509,Interface,InterfaceUtils,6509,https://root.cern,https://github.com/root-project/root/pull/5552#issuecomment-624579673,1,['Interface'],['InterfaceUtils']
Integrability,ace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-866798208:5560,Integrat,IntegratorMultiDim,5560,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-866798208,1,['Integrat'],['IntegratorMultiDim']
Integrability,"add GLEW as dependency for FTGL, v 6.20 [ROOT-10631]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5210:12,depend,dependency,12,https://root.cern,https://github.com/root-project/root/pull/5210,1,['depend'],['dependency']
Integrability,add MathMore dependency to roofit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5439:13,depend,dependency,13,https://root.cern,https://github.com/root-project/root/pull/5439,1,['depend'],['dependency']
Integrability,ah can you use `[DF]` instead of `[RDF]` in the commit message please? :smile: (yes we have been inconsistent in the past but `[DF]` is the prevalent spelling),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6362#issuecomment-693274113:55,message,message,55,https://root.cern,https://github.com/root-project/root/pull/6362#issuecomment-693274113,1,['message'],['message']
Integrability,"aits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]!; You are probably missing the definiti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:2764,interface,interface,2764,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,1,['interface'],['interface']
Integrability,"al read is modeled as an error. This would require `ROOT::ReadFromNetwork()` to force the ""immediate exception"" state to a certain value and reset it later - which is error prone and awkward; it shows that we use a global state that needs local knowledge. If ""immediate exception"" is false and `ROOT::ReadFromNetwork()` captures the error and returns it, same for all subsequent frames but `ROOT::RNTupleIterator::operator++()` (which cannot return a `RStatus`), then only `ROOT::RNTupleIterator::operator++()` will throw. This would shorten the stack trace shown by a potential crash to; ```; ROOT::RNTupleIterator::operator++(); UserCode::modelBackground(); ```; - we would not know the stack trace that actually triggered the exception. We would likely have some info captured in the error message (e.g. ""ROOT::ReadFromNetwork() failed to call linux_read_from_network()""), but we'd miss the connection, i.e. `ROOT::RNetFile::Read()`. One way of handling that is by injecting state:; ```; RStatus ROOT::RNetFile::Read() {; RStatus res(ROOT::ReadFromNetwork());; ...; return R__STATUS_PASSTHROUGH(res); // registers res to have passed through ""ROOT::RNetFile::Read()"" by emplacing a frame string *if* in error state.; ```; That's similar to [`llvm::PrettyStackTraceEntry`](https://llvm.org/doxygen/classllvm_1_1PrettyStackTraceEntry.html), see usage [here](https://github.com/llvm/llvm-project/blob/df494f7512b0ecebdf3d7be97695a1b6278c0336/clang/lib/CodeGen/BackendUtil.cpp#L909). FYI, there has been a multi-hundred email discussion on exactly this topic on the C++ committee mailing list, with pretty much two camps: allow error code handling (with potential exceptions) versus just always throw in case of errors, and if that's slow, go fix the compiler / runtime library implementations (but ABI break). **TL;DR**:; I agree that exceptions instead of error codes allow for nicer code. I don't think that we can have that nice code when we introduce `RStatus`, because the developer of that code m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4683#issuecomment-564972730:1598,inject,injecting,1598,https://root.cern,https://github.com/root-project/root/pull/4683#issuecomment-564972730,1,['inject'],['injecting']
Integrability,"al&gt;::Dropout(TMVA::DNN::TCpuMatrix&lt;AReal&gt;&, AFloat) [with AReal = double]::&lt;lambda(UInt_t)&gt;; INTEGER = int]’, declared using local type ‘TMVA::DNN::TCpu&lt;AReal&gt;::Dropout(TMVA::DNN::TCpuMatrix&lt;AReal&gt;&, AFloat) [with AReal = double]::&lt;lambda(UInt_t)&gt;’, is used but never defined [-fpermissive] ; - include/ROOT/TThreadExecutor.hxx:124:9: error: ‘void ROOT::TThreadExecutor::Foreach(F, ROOT::TSeq&lt;INTEGER&gt;) [with F = TMVA::DNN::TCpu&lt;AReal&gt;::Dropout(TMVA::DNN::TCpuMatrix&lt;AReal&gt;&, AFloat) [with AReal = float]::&lt;lambda(UInt_t)&gt;; INTEGER = int]’, declared using local type ‘TMVA::DNN::TCpu&lt;AReal&gt;::Dropout(TMVA::DNN::TCpuMatrix&lt;AReal&gt;&, AFloat) [with AReal = float]::&lt;lambda(UInt_t)&gt;’, is used but never defined [-fpermissive] . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-409979112:1709,depend,depends,1709,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-409979112,4,['depend'],['depends']
Integrability,"al-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned long); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):; error code: 1; ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer.; However, you can see the problem this way:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |; | From tag , 3 March 2022 |; | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] &RooArgSet::operator delete; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:2394,message,message,2394,https://root.cern,https://github.com/root-project/root/issues/10203,1,['message'],['message']
Integrability,"al-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:14386,message,message,14386,https://root.cern,https://github.com/root-project/root/issues/12429,1,['message'],['message']
Integrability,"al::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Exper",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:15136,message,message,15136,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,all comments integrated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2572#issuecomment-423508068:13,integrat,integrated,13,https://root.cern,https://github.com/root-project/root/pull/2572#issuecomment-423508068,1,['integrat'],['integrated']
Integrability,"allable using numba. Fall back to generic implementation.; # @ROOT.DeclareCppCallable([""float""], ""string"", verbose=True); # 2) Falls back to generic impl and prints ""42"" (as string); ```. **DEPRECATED:**. I've cleaned up and improved the feature. Here's the basic workflow now:. ```python; @ROOT.DeclareCallable([""float""], ""float""); def f(x); return 2.0 * x. # General use-cases; ROOT.ROOT.f(21) # Returns 42; ROOT.gInterpreter.ProcessLine(""cout << ROOT::f(21.0) << endl;"") # Prints 42.0. # Inject callable into dataframe; df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""rdfentry__"").Define(""ROOT::f(x)""); ```. The `DeclareCallable` dispatches between numba and the generic implementation. It tries to compile the thingy with numba (falls through silently) and otherwise tries the generic implementation (fails noisily).; However, you can force using the generic implementation or numba by using the decorators `DeclareGenericCallable` and `DeclareNumbaCallable`. The interface is exactly the same than for the general `DeclareCallable` decorator. In addition, you can now give the wrapped function a custom name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strongly typed, we have to declare the types of the inputs and the output; @ROOT.DeclareCppCallable([""float""], ""float""); def func(x):; return 2.0 * x. print(func(1.0)) # Prints 2.0; print(ROOT.PyROOT.func(1.0)) # Prints 2.0; ROOT.gInterpreter.ProcessLine(""cout << PyROOT::func(1.0) << endl;"") # Prints 2.0; ```. This allows us to run Python code in wrapped C++ workflow, e.g. for `RDataFrame`:. ```python; import ROOT; import numpy. @ROOT.DeclareCppCallable([""unsigned int""], ""float""); def func(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:2214,interface,interface,2214,https://root.cern,https://github.com/root-project/root/pull/3488,1,['interface'],['interface']
Integrability,"allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:582); ==270704== by 0x272164AD: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:890); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66CAF87: _S_copy (basic_string.h:356); ==270704== by 0x66CAF87: _S_copy_chars (basic_string.h:401); ==270704== by 0x66CAF87: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:225); ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109); ==270704== by 0x61E27D9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:47711,depend,depends,47711,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"alright, I made it, thanks! :sweat_smile: . I find it counterintuitive to not specify the dictionary as a dependency of the executable, but at the same time having to add the include directories that the _dictionary_ needs as the include directories for the executable. If that's the best possible, then this issue is a ""won't fix"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856742133:106,depend,dependency,106,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856742133,1,['depend'],['dependency']
Integrability,als/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/builtins -I/usr/include/freetype2 -I/usr/include/x86_64-linux-gnu/freetype2 -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/minuit/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/foam/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/smatrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/roofit/batchcompute/inc -Iroofit/roofitcore/test -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/test/unit_testing_support -isystem googletest-prefix/src/googletest/googletest/include -isystem googletest-prefix/src/googletest/googlemock/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fno-math-errno -std=c++11 -MD -MT roofit/roofitcore/test/CMakeFiles/testRooDataHist.dir/testRooDataHist.cxx.o -MF roofit/roofitcore/test/CMakeFiles/testRooDataHist.dir/testRooDataHist.cxx.o.d -o roofit/roofitcore/test/CMakeFiles/testRooDataHist.dir/testRooDataHist.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataHist.cxx ; - [2021-02-25T16:35:37.279Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataHist.cxx:456:108: error: ‘integrate’ function uses ‘auto’ type specifier without trailing return type ; - [2021-02-25T16:35:37.279Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataHist.cxx:461:85: error: ‘integrate’ function uses ‘auto’ type specifier without trailing return type,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7271#issuecomment-786034936:3289,integrat,integrate,3289,https://root.cern,https://github.com/root-project/root/pull/7271#issuecomment-786034936,2,['integrat'],['integrate']
Integrability,"although there was no message here in the github PR, one can see from https://epsft-jenkins.cern.ch/view/ROOT/job/root-pullrequests-build/ that the fix built successfully on mac1011/native as well as the other platforms. merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2174#issuecomment-395968316:22,message,message,22,https://root.cern,https://github.com/root-project/root/pull/2174#issuecomment-395968316,1,['message'],['message']
Integrability,"alue) {; 884: ^; 884: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 884: error code: -529697949; 884:; 884:; 7/16 Test #884: tutorial-dataframe-df008_createDataSetFromScratch-py .....***Failed Error regular expression found in output. Regex=[: error:] 6.23 sec; test 885; Start 885: tutorial-dataframe-df010_trivialDataSource-py. 885: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df010_trivialDataSource.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 885: Environment variables:; 885: ROOT_HIST=0; 885: Test timeout computed to be: 1500; 885: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 885: error code: -529697949; 885:; 885:; 8/16 Test #885: tutorial-dataframe-df010_trivialDataSource-py ............***Failed 4.46 sec; test 886; Start 886: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py. 886: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df012_DefinesAndFiltersAsStrings.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 886: Environment variables:; 886: ROOT_HIST=0; 886: Test timeout computed to be: 1500; 886: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 886: error code: -529697949; 886:; 886:; 9/16 Test #886: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py ...***Failed 4.43 sec; test 887; Start 887: tutorial-dataframe-df014_CSVDataSource-py. 887: Test command: ""C:\Program",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:7004,message,message,7004,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,"am Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Users/bellenot/build/x64/release/bin/root.exe^-l^-b^-q^--ptrcheck^-e^int*p=nullptr^-e^*p"" ""-DOUT=C:/Users/bellenot/build/x64/release/roottest/cling/exception/nullderef-e.log"" ""-DCWD=C:/Users/bellenot/build/x64/release/roottest/cling/exception"" ""-DRC=1"" ""-DDIFFCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/roottest/scripts/custom_diff.py"" ""-DSYS=C:/Users/bellenot/build/x64/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/x64/release#PYTHONPATH=C:/Users/bellenot/build/x64/release/bin"" ""-P"" ""C:/Users/bellenot/build/x64/release/RootTestDriver.cmake""; 972: Environment variables:; 972: ROOT_HIST=0; 972: Test timeout computed to be: 300; 972: -- TEST COMMAND --; 972: cd C:/Users/bellenot/build/x64/release/roottest/cling/exception; 972: C:/Users/bellenot/build/x64/release/bin/root.exe -l -b -q --ptrcheck -e 'int*p=nullptr' -e '*p'; 972: -- BEGIN TEST OUTPUT --; 972:; 972: (int *) nullptr; 972:; 972: -- END TEST OUTPUT --; 972: -- BEGIN TEST ERROR --; 972: Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; 972: Execution of your code was aborted.; 972: ROOT_cli_1:1:2: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; 972: *p; 972: ^; 972:; 972: -- END TEST ERROR --; 1/1 Test #972: roottest-cling-exception-nullderef-e ... Passed 0.44 sec. The following tests passed:; roottest-cling-exception-nullderef-e. 100% tests passed, 0 tests failed out of 1. Label Time Summary:; cling = 0.44 sec*proc (1 test); regression = 0.44 sec*proc (1 test); roottest = 0.44 sec*proc (1 test). Total Test time (real) = 2.93 sec; ```; And BTW, no need to report the test failures, we are aware of some tests filing with some versions of Visual Studio and architecture (e.g. with VS 2022 x64). And since we run al the tests in our CI, we see immediately if something fails. Note that we are aware of some failing tests, some due to incompatibilities between VS a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9742#issuecomment-1025965371:2157,rout,routine,2157,https://root.cern,https://github.com/root-project/root/issues/9742#issuecomment-1025965371,1,['rout'],['routine']
Integrability,"amerFunc_t //Streamer function for a class; (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types ; (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:8422,Integrat,IntegrationOneDim,8422,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,3,['Integrat'],"['IntegrationOneDim', 'IntegratorOneDim']"
Integrability,"annot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-01-26T19:15:54.928Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-767769935:2185,message,messages,2185,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-767769935,1,['message'],['messages']
Integrability,"annot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-01-27T20:55:05.573Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-768575448:2185,message,messages,2185,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-768575448,1,['message'],['messages']
Integrability,"annot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-03T18:32:22.804Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-772781466:2185,message,messages,2185,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-772781466,1,['message'],['messages']
Integrability,"annot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-04T18:11:39.761Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-773543254:2185,message,messages,2185,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-773543254,1,['message'],['messages']
Integrability,"annot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-05T11:10:55.739Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-773997337:2185,message,messages,2185,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-773997337,1,['message'],['messages']
Integrability,"annot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-05T16:35:12.117Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-774182513:2185,message,messages,2185,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-774182513,1,['message'],['messages']
Integrability,"appen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:5498,rout,routine,5498,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,4,['rout'],['routine']
Integrability,"arameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:7228,wrap,wrapping,7228,https://root.cern,https://github.com/root-project/root/issues/12429,1,['wrap'],['wrapping']
Integrability,"ard for unknown arguments. ; * `TRint` crashes when instantiated with `*argc = nullptr` and / or `argv = nullptr` which are the default values for `TApplication` and hence may be used by existing users of the `TRint` constructor. . ### Affected use cases; Applications may do something like:; ```cpp; TRint *app = new TRint(""app"", 0, NULL);; ...; app->Run(kTRUE);; ```; Applications may also use `TRint` during operation. One existing model some applications I use are employing is:; * Create a `TRint` shortly after startup, passing in `argc` and `argv`. ; * Allow the user to drop to a ROOT interpreter prompt. This is then done by calling `app->Run(kTRUE);`. A user can use the interpreter to inspect state of the analysis software, and exit it again to let the software continue. . The latter approach is extremely useful for example to shell out after analysis software startup, or inside an event, such that the user can interactively analyze objects right from a ROOT interpreter shell. . ### Questions; * Is the use case ""use TRint as class to drop into the interpreter"" supported? ; The changelog of 6.26.00 reads like `TRint` is meant for internal use by `root.exe` only, but there seems to be no easy alternative. ; Depending on the reply, this could be a separate bug report, or a ""wontfix"". ; * If the use case is / should be supported, It would be useful to be able to allow unsupported arguments to pass through, for use in applications which are not `root.exe`. ; * For improved backwards compatibility and safety, not crashing when being passed `*argc = nullptr` and / or `argv = nullptr` would be nice. . In case somebody else is hit by this, I am right now using this hack as workaround:; ```cpp; int dargc = 1;; char** dargv = &argv[0];; myApp = new TRint(""myApp"", &dargc, dargv, nullptr, 0, kTRUE);; myApp->GetOptions(&argc, (argv));; gSystem->SetProgname(argv[0]);; ```; This allows to re-use the `TApplication` functionality as before, without triggering one of the two issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090:1479,Depend,Depending,1479,https://root.cern,https://github.com/root-project/root/issues/10090,1,['Depend'],['Depending']
Integrability,"ard<_Args>(__args)...); { }; {code}; Note the use of std::forward. The snapshot test has 2 steps:. 1. Do the work, including a call to SnapshotImpl which contains the problem line, with only compiled code; 2. Do the same work relying on interpreted code, in which case SnapshotImpl is called via the interpreter. The symptoms of the failure is that **if** the snapshot test is compiled with optimization then. a. The compiled version works fine; b. In the interpreted version the constructor of the RInterface is wrong because the shared_ptr its constructor sees is **not** initialized. If the snapshot test is compiled without optimization then both steps succeeds. The main difference between the two is the amount of fully realized (i.e. non-inlined) functions emitted by the compiler. In the success fully case we have a stack like. {code}; interp SnapshotImpl calls; compiled std::make_shared<ROOT::Detail::RDF::RLoopManager … [in debug mode. this routine and down are used compiled]; compiled std::allocate_shared<ROOT::Detail::RDF::RLoopManager; ... implementation details .. all compiled.; compiled ROOT::Detail::RDF::RLoopManager::RLoopManager; compiled std::make_shared<ROOT::RDF::RInterface …; compiled std::allocate_shared<ROOT::RDF::RInterface …; compiled std::shared_ptr< ROOT::RDF::RInterface; compiled std::__shared_ptr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager; {code}. {code}; interp SnapshotImpl calls; interp std::make_shared<ROOT::Detail::RDF::RLoopManager …; interp std::allocate_shared<ROOT::Detail::RDF::RLoopManager; ... implementation details .. all interpreted.; compiled ROOT::Detail::RDF::RLoopManager::RLoopManager; interp std::make_shared<ROOT::RDF::RInterface …; interp std::allocate_shared<ROOT::RDF::RInterface …; interp std::shared_ptr< ROOT::RDF::RInterface; compiled std::__shared_ptr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager; {code}. I.e. the major difference is that we have the shared_ptr constructor (which contains std::forward) being",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2158:1570,rout,routine,1570,https://root.cern,https://github.com/root-project/root/pull/2158,1,['rout'],['routine']
Integrability,"arker style is influenced by the marker line width I added the function HasMarkerLineWidth to TAttMarker. **Marker size and draw method**; Since the calculation of the size of the marker assumed ultimatly thin lines up to now, the bounding box of the marker would have increased when setting a larger marker line width. To counter that, I decreased the marker size by the amount it would have increased due to the line width. However, note that this only works with round line caps and round line joins, since for example with miter joins the bounding box becomes infinitly large for infinitly small angles. This is also the reason why I decided to used round caps and round joins when drawing the marker lines in a TPad. However for the vector graphic export classes the line join method is set by gStyle->GetJoinLinePS(). Since there was no corresponding implementation for the line cap, I added it to TStyle. Furthermore, the line join method setting was ignored by the SVG export until now, so I decided to add it there as well. **Further changes**; Another thing I noted is that the markers 3 and 5 (and 31) were looking different depending on whether they were drawn by a class based on TVirtualPadPainter or based on TVirtualPS. Furthermore the behaviour for marker styles 9-19 were different between the implementations. (You can see the differences when you compare the canvas created by `TMarker::DisplayMarkerTypes()` with the marker style example picture in the class reference of TAttMarker.); I thought that the marker style definition used by classes based on TVirtualPadPainter seems better than the one by classes based on TVirtualPS. However, if you think that the definition of classes based on TVirtualPS is more correct, I can change this quickly but would then propose to also change definition in the TVirtualPadPainter classes since the markers should look the same everywhere. If you have any further recommendations please let me know.; Thanks and all the best,; Simon Spies",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4721:2587,depend,depending,2587,https://root.cern,https://github.com/root-project/root/pull/4721,1,['depend'],['depending']
Integrability,"arry term can make the small non-zero carry term disappear.; * Due to these changes and the earlier KahanSum updates, we were able to tighten the tolerance of tests in testLikelihoodSerial, testLikelihoodJob and testLikelihoodGradientJob, with many tests now passing EXPECT_EQ.; * testLikelihoodGradientJob adds offsetting to the parameterized test matrices of the LikelihoodGradientJobTest cases to test all the above (and below) changes. - Offset synchronization:; * LikelihoodWrapper and LikelihoodGradientWrapper now store a shared_ptr to the offsets instead of raw offsets. At construction time within a MinuitFcnGrad, they get passed the same single offset object so that it is always kept synced between the different likelihood calculators. If it isn't synced and the likelihood gets different offsets at different times, the minimizer understandably gets very confused. This was the case before this commit, which was, in fact, a bug.; * For LikelihoodJob and LikelihoodGradientJob, the offsets are also synchronized to all workers via update_state. For this, we simply check before evaluation whether offsets have changed since the previous evaluation and if so they are sent over the MultiProcess::Messenger. Note that while the LikelihoodGradientJob doesn't itself use the offset (it doesn't calculate the likelihood), it must still synchronize offsets, because during the gradient calculation the LikelihoodSerial objects on the workers are used to calculate the likelihoods there, so for them the offsets must be up to date.; * The LikelihoodJob contains a LikelihoodSerial member as well now. This allows the LikelihoodJob to trigger calculating the offsets on the master process before sending them to the workers.; * LikelihoodWrapper has some added private helper functions for managing offsets. - Other miscellaneous changes:; * LikelihoodWrapper::setApplyWeightSquared was implemented properly for RooSumL likelihoods as well, passing along the call to component RooUnbinnedLs. Not",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:2388,synchroniz,synchronized,2388,https://root.cern,https://github.com/root-project/root/pull/12202,1,['synchroniz'],['synchronized']
Integrability,"as far as I can tell. The github interface is being ""unresponsive"". I pushed new commits but they are not showing up yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6036#issuecomment-658865121:33,interface,interface,33,https://root.cern,https://github.com/root-project/root/pull/6036#issuecomment-658865121,1,['interface'],['interface']
Integrability,"as merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:; ```; Integrating log(a*x), relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04; 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03; 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14; Integrating log(a*x), relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19; 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41; 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3; Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06; Integrating log(a*x), relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26; 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48; 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38; [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4; Integrating Polynomial 4th order, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04; 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05; 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05; Integrating Polynomial 4th order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06; Integrating Pol",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:1006,Integrat,Integrating,1006,https://root.cern,https://github.com/root-project/root/pull/6632,1,['Integrat'],['Integrating']
Integrability,"as> &x) {; x.reset() // TCanvas requires the extra step, see note below.; x.reset(new TCanvas());; // .. do something with it.; }; ```. ```; //make_canvas.C; namespace root_global { ; unique_ptr<TCanvas> c1;; }. void make_canvas() {; // we decide at the top level to use a global here:; my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice; unique_ptr<TCanvas> local_canvas;; my_subroutine(local_canvas);; }; ```; or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```; //display.h. class display {; private:; unique_ptr<TCanvas> c1;; public:; void make_canvas() {; c1.reset(); ; c1.reset(new TCanvas());; }; };; ```; And use it like:; ```; //make_display.C; #include ""display.h"". namespace root_global { ; display my_display;; }. // main routine:; void make_display() { ; // This one will stick around; root_global::my_display.make_canvas();. // This one wont. ; display local_display;; local_display.make_canvas();; }; ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-787621241:1475,rout,routine,1475,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-787621241,2,['rout'],['routine']
Integrability,"ase we also made some changes to the build system: libImt is now *always* built, but when the flag is disabled it only contains the TExecutor class. Sounds sneaky and it is confusing, but it's the best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327:2111,interface,interfaces,2111,https://root.cern,https://github.com/root-project/root/pull/6327,1,['interface'],['interfaces']
Integrability,"asic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594); ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:162359,depend,depends,162359,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"askArena.hxx"". RTaskArena::RTaskArena(); : fTaskArena( new ROpaqueTaskArena() ) {}; [bash][Legolas]:build > more ../ROpaqueTaskArena/test.cxx . // Local include(s).; #include ""RTaskArena.hxx"". int main() {. RTaskArena arena;; return 0;; }; [bash][Legolas]:build > cmake ../ROpaqueTaskArena/; -- The CXX compiler identification is GNU 9.3.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Configuring done; -- Generating done; -- Build files have been written to: /home/krasznaa/development/ropaquetaskarena/build; [bash][Legolas]:build > make; Scanning dependencies of target TaskArenaLib; [ 25%] Building CXX object CMakeFiles/TaskArenaLib.dir/RTaskArena.cxx.o; [ 50%] Linking CXX shared library libTaskArenaLib.so; [ 50%] Built target TaskArenaLib; Scanning dependencies of target TaskArenaTest; [ 75%] Building CXX object CMakeFiles/TaskArenaTest.dir/test.cxx.o; In file included from /usr/include/c++/9/memory:80,; from /home/krasznaa/development/ropaquetaskarena/ROpaqueTaskArena/RTaskArena.hxx:5,; from /home/krasznaa/development/ropaquetaskarena/ROpaqueTaskArena/test.cxx:3:; /usr/include/c++/9/bits/unique_ptr.h: In instantiation of ‘void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = ROpaqueTaskArena]’:; /usr/include/c++/9/bits/unique_ptr.h:292:17: required from ‘std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = ROpaqueTaskArena; _Dp = std::default_delete<ROpaqueTaskArena>]’; /home/krasznaa/development/ropaquetaskarena/ROpaqueTaskArena/RTaskArena.hxx:10:7: required from here; /usr/include/c++/9/bits/unique_ptr.h:79:16: error: invalid application of ‘sizeof’ to incomplete type ‘ROpaqueTaskArena’; 79 | static_assert(sizeof(_Tp)>0,; | ^~~~~~~~~~~; make[2]: *** [CMakeFiles/TaskArenaTest.dir/build.make:63: CMakeFiles/TaskArenaTest.dir/test.cxx.o] Er",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7062#issuecomment-762847080:3035,depend,dependencies,3035,https://root.cern,https://github.com/root-project/root/pull/7062#issuecomment-762847080,1,['depend'],['dependencies']
Integrability,"ass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXRecordDecl*, clang::SourceLocation&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;const clang::CXXMethodDecl*, const clang::CXXMethodDecl*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] . And 68 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43222/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_processExecutorH1Test/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2752#issuecomment-427067410:3531,depend,depends,3531,https://root.cern,https://github.com/root-project/root/pull/2752#issuecomment-427067410,1,['depend'],['depends']
Integrability,"ass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXRecordDecl*, clang::SourceLocation&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;const clang::CXXMethodDecl*, const clang::CXXMethodDecl*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] . And 68 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43774/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_processExecutorH1Test/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2777#issuecomment-428696915:3531,depend,depends,3531,https://root.cern,https://github.com/root-project/root/pull/2777#issuecomment-428696915,1,['depend'],['depends']
Integrability,"assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:648:20: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] . And 222 more. ### Failing tests:; - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_Names](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36330/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_Names/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2457#issuecomment-411365371:3531,depend,depends,3531,https://root.cern,https://github.com/root-project/root/pull/2457#issuecomment-411365371,1,['depend'],['depends']
Integrability,"ast top-level expression's value is printed if missing trailing semicolon) should be kept for consistency and simplicity reasons.; > ; > Let's hear some other opinions here, e.g. @SimeonEhrig @jalopezg-uc3m @pcanal ?. I do realize my post was terse. Here is more text as the discussion went in another direction. Since early days, as you already mentioned, the rule seems to be ""the last expression without a trailing semicolon should print"". If that is the rule, then it clearly does not handle short-hand operators. Namely, `if (x) expr`. That rule does not extend to your examples `do 1 while(true)` as `while` is not really an user-defined expression. `if (x) { expr }` does not fall there either as it is in a compound statement. It is pretty clear where we stop. The construct `if(x) expr`, as shown in the example, enables an interactive programming pattern wrt error handling where in case of an error we can just ask cling to print details. > I'd prefer to keep value printing simple. The implementation of what I propose requires 2-3 lines [here](https://github.com/vgvassilev/cling/blob/856f8e92f82f9037b3dbb27ae7f94add2ed6121f/lib/Utils/AST.cpp#L141-L152). And actually makes the value printing rule more comprehensible. It took me some time to realize what's wrong and I implemented it, so I'd say it would be less comprehensible to other people. > and instead invest where it's relevant: devtoolset, debug symbols, llvm upgrade (to llvm 11!), etc. This is a trade-off we should consciously do, and given that this is the first time I hear a request for value printing within nested blocks . We have had that in the past. I do not think having not user requests should be an argument against this bug. > I'm not yet convinced that it's worth the effort (and yes, that's an additional counter argument). And I'm not just talking dev time but also long-term maintenance: more code, more clang interfaces used. The implementation does not require clang interfaces and it is couple of lines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713756223:2100,interface,interfaces,2100,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713756223,4,['interface'],['interfaces']
Integrability,"at uses LLVM.; > ; > Unfortunately, those should be carefully attended because of ROOT. I would feel more comfortable if my stack knows which libraries depend on LLVM to avoid pain debugging ROOT.; > ; Well, the problem is that this is no so easy to control. LLVM can come in from a dependency chain via many libraries like OpenCL / Vulkan / arrow. And I am afraid this will become more complicated in the future. Instead of messing with each of them, I thought it might be better to fix the issue in a single place on the ROOT side. > I am not a huge fan of the `RTLD_DEEPBIND` approach because it is not portable and it essentially overrides the dynamic linker behavior yet one more time. I am not sure how this would translate to Windows for example.; > ; I agree, me neither. If we can find a better and cleaner way, I am absolutely in favor of that. > IIUC, `RTLD_DEEPBIND` alters the search order of the dynamic linker and using -fPIC intends to deduplicate. That seems as bad as preloading a set of llvm dependent libraries, IMO. Do we need `libgandiva.so` to be compiled with -fPIC or just the executables which 'use' ROOT?; > ; All shared libraries must be compiled with -fPIC by definition, so libgandiva is already compiler with -fPIC. The change would only be for exectuables, which usually do not have -fPIC by default. But then actually other libraries have similar requirements, e.g. Qt5 (with -reduce-relocation flag, which is the default) requires all executables to link against Qt to be compiled with -fPIC. But again, if there is a better way, I am also in favor of avoiding -fPIC-. > This check is to protect the subsequent `dlsyms` in TCling to resolve symbols from the wrong place. We can fix the check and play with the JIT resolution logic by playing with the search order here:; > ; > https://github.com/root-project/root/blob/39630b7530771be3e4643048361886dcfb057f07/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp#L299-L302; > ; > The challenge is to come up with a c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564020905:1479,depend,dependent,1479,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564020905,1,['depend'],['dependent']
Integrability,"at version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:2762,message,message,2762,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,"at<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:3536,message,message,3536,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,atchHelpers::ArrayWrapper::operator []' cannot result in a constant expression [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\BatchHelpers.h(108): error C2143: syntax error: missing ';' before 'const' [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\BatchHelpers.h(108): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\BatchHelpers.h(84): error C2440: 'initializing': cannot convert from 'const double *' to 'const int' [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\BatchHelpers.h(84): error C2439: 'BatchHelpers::BracketAdapterWithMask::_pointer': member could not be initialized [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\BatchHelpers.h(90): error C2446: ':': no conversion from 'const double *' to 'const int' [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\BatchHelpers.h(98): error C2109: subscript requires array or pointer type [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\RooArgusBG.cxx(99): error C2146: syntax error: missing ')' before identifier 'output' [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] . And 244 more. ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-527581483:2687,message,message,2687,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-527581483,1,['message'],['message']
Integrability,"ate_base&, long)'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const; ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem.; * doing `ldd` on `libImt` prints the expected path for `libtbb`; * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem; * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem ; * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that; * we use `-ltbb` for the buitin; * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb; build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13079:2028,depend,dependent,2028,https://root.cern,https://github.com/root-project/root/issues/13079,1,['depend'],['dependent']
Integrability,"ategory.h RooTable.h RooTFoamBinding.h RooThresholdCategory.h RooTObjWrap.h RooTrace.h RooTreeData.h RooTreeDataStore.h RooTruthModel.h RooUniformBinning.h RooUnitTest.h RooVectorDataStore.h RooWorkspace.h RooWorkspaceHandle.h RooXYChi2Var.h RooHelpers.h RooSpan.h BatchData.h RooVDTHeaders.h /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/LinkDef.h ; - /mnt/build/workspace/root-pullrequests-build/build/include/RooVDTHeaders.h:40:15: error: no member named 'exp' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/RooVDTHeaders.h:44:15: error: no member named 'exp' in namespace 'std' ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libRooFitCoreb2d9d7abc8_dictUmbrella.h) . ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:39:47: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:40:61: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:43:64: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:44:78: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-527491490:8774,message,message,8774,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-527491490,1,['message'],['message']
Integrability,athcore/CMakeFiles/MathCore.dir/src/BrentRootFinder.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/ChebyshevPol.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DataRange.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Delaunay2D.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DistSampler.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DistSamplerOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Factory.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitConfig.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitData.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitResult.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitUtil.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Fitter.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GaussIntegrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GaussLegendreIntegrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GenAlgoOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GoFTest.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Integrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/IntegratorOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MersenneTwisterEngine.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MinimTransformFunction.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MinimizerOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MinimizerVariableTransformation.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MixMaxEngineImpl17.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MixMaxEngineImpl240.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MixMaxEngineImpl256.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/ParameterSettings.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/PdfFuncMathCore.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/ProbFuncMathCore.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/QuantFuncMathCore.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/RandomFunctions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/RanluxppEngineImpl.cxx.o math/mathcore/CMakeFiles/MathCore.dir/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10617#issuecomment-1141092598:1915,Integrat,Integrator,1915,https://root.cern,https://github.com/root-project/root/pull/10617#issuecomment-1141092598,1,['Integrat'],['Integrator']
Integrability,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx; > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7186#issuecomment-801496369:2987,wrap,wrapper,2987,https://root.cern,https://github.com/root-project/root/pull/7186#issuecomment-801496369,2,['wrap'],['wrapper']
Integrability,"ativity) and I also took the liberty and modified `root://eospublic.cern.ch//eos/root-eos/xrootd.test` so it is in line with `http://root.cern.ch/files/davix.test`. ```; ctest -I 164,165; Test project /home/simonm/git/root-my/buildtmp; Start 164: gtest-net-davix-test-RRawFileDavix; 1/2 Test #164: gtest-net-davix-test-RRawFileDavix ..... Passed 0.20 sec; Start 165: gtest-net-netxng-test-RRawFileNetXNG; 2/2 Test #165: gtest-net-netxng-test-RRawFileNetXNG ... Passed 0.05 sec; ```. However running the full test suite yielded some failures:. ```; 99% tests passed, 18 tests failed out of 2101. Label Time Summary:; cling = 69.10 sec; longtest = 1541.18 sec; matrix = 0.22 sec; multithreaded = 206.29 sec; python_runtime_deps = 27.45 sec; regression = 68.69 sec; roottest = 69.32 sec; tutorial = 1559.92 sec. Total Test time (real) = 5594.32 sec. The following tests FAILED:; 	 3 - pyunittests-pyroot-dependency-versions (Failed); 	 56 - pyunittests-pyroot-numbadeclare (Failed); 	 57 - test-import-numba (Failed); 	918 - tutorial-dataframe-df026_AsNumpyArrays-py (Failed); 	920 - test-import-pandas (Failed); 	961 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Failed); 	962 - test-import-numba (Failed); 	1219 - roottest-python-JupyROOT-cppcompleter_doctest (Failed); 	1220 - roottest-python-JupyROOT-handlers_doctest (Failed); 	1221 - roottest-python-JupyROOT-utils_doctest (Failed); 	1222 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1223 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1224 - roottest-python-JupyROOT-thread_local_notebook (Failed); 	1225 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 	1226 - roottest-python-JupyROOT-tpython_notebook (Failed); 	1227 - roottest-python-JupyROOT-Cpp_IMT_Canvas_notebook (Failed); 	1444 - roottest-root-html-runMakeIndex (Failed); 	1627 - roottest-root-meta-execTypedefList-auto (Failed); ```. I don't think it's related to the PR but to be on the safe side I'm reporting it. P. S.; Again, sorry for the delay!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9012#issuecomment-948823698:983,depend,dependency-versions,983,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-948823698,1,['depend'],['dependency-versions']
Integrability,ault.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/136979/console).; ### Warnings:; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:84:56: warning: declaration of ‘file’ shadows a member of ‘Rcpp::file_io_error’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:86:66: warning: declaration of ‘file’ shadows a member of ‘Rcpp::file_io_error’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:88:80: warning: declaration of ‘file’ shadows a member of ‘Rcpp::file_io_error’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:100:57: warning: declaration of ‘file’ shadows a member of ‘Rcpp::file_not_found’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:106:54: warning: declaration of ‘file’ shadows a member of ‘Rcpp::file_exists’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:191:57: warning: declaration of ‘message’ shadows a member of ‘Rcpp::no_such_slot’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:191:57: warning: declaration of ‘message’ shadows a member of ‘Rcpp::not_a_closure’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:191:57: warning: declaration of ‘message’ shadows a member of ‘Rcpp::S4_creation_error’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:191:57: warning: declaration of ‘message’ shadows a member of ‘Rcpp::reference_creation_error’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:191:57: warning: declaration of ‘message’ shadows a member of ‘Rcpp::no_such_binding’ [-Wshadow] . And 24 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9819#issuecomment-1033772304:1251,message,message,1251,https://root.cern,https://github.com/root-project/root/pull/9819#issuecomment-1033772304,5,['message'],['message']
Integrability,"ave anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14558:1251,depend,depends,1251,https://root.cern,https://github.com/root-project/root/issues/14558,1,['depend'],['depends']
Integrability,"ay. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, there also needs to be a cleanupHelper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696817778:1182,depend,dependent,1182,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696817778,2,['depend'],['dependent']
Integrability,"bCore.so; #12 0x00007f682e411d18 in TScopeAdapter::Init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) () from /sw/atlas/Athena/22.0.60/InstallArea/x86_64-centos7-gcc11-opt/lib/libDataModelRoot.so; ```. The place in the code where it's crashing in GetSplit after it calls; to StdLen:. ```; if ( mode & kDropStd) {; unsigned int offset = (0==strncmp(""const "",full.c_str(),6)) ? 6 : 0;; RemoveStd( full, offset );; }; ```. where RemoveStd is inlined:. ```; static void RemoveStd(std::string &name, size_t pos = 0); {; size_t len = StdLen({name.data()+pos,name.length()-pos});; if (len) {; ```. So, it calls to StdLen, which apparently then crashes by branching to 0.; It's unfortunately difficult to then tell exactly why that happened.; FWIW, the registers at the crash were:. ```; rip: 0033:0000000000000000 eflags: 0000000000010202; rax: 00000000ffffffeb rbx: 0000000000000220; rcx: 0000000000000078 rdx: 0000000000000000; r08: ffffffffffffffff r09: 00007f68354af4d0; r10: 72543a3a444f4178 r11: 0000000000000006; r12: 00000000961170c0 r13: 00007f67e4395a90; r14: 0000000000000000 r15: 00007f683459fb22; rsi: 00000000961170c0 rdi: 000000000000001f; rbp: 00007f67e4395c28 rsp: 00007f67e4395a48; ```. However, the reason i'm writing this up here is that StdLen contains; a mutable, static std::set instance:. ```; static ShuttingDownSignaler<std::set<std::string>> gInlined;; ```. So this appears to be a thread-safety issue, regardless of whether; this is actually reponsible for the observed crash. There is no lock protecting this in either StdLen or in the TClass; methods that call it. There is a lock (gCoreMutex) taken in TClass::GetClass,; so we should be safe against other code that's using GetClass.; However, ATLAS code also directly uses TClassEdit in a number of places,; so i think we do have a potential race. (Though we don't use it from so many places, so it may be feasible; to wrap our uses of TClassEdit with taking gCoreMutex.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10353:3501,wrap,wrap,3501,https://root.cern,https://github.com/root-project/root/issues/10353,1,['wrap'],['wrap']
Integrability,"b](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. ; If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. ; It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`.; . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ); ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) ; ; ## Setup. 1. ROOT version 6.22-6.23; 2. Operating system lxplus ; 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context; <!--; Add any other context about the problem here.; -->; It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6552:1062,depend,depend,1062,https://root.cern,https://github.com/root-project/root/issues/6552,1,['depend'],['depend']
Integrability,"back port of https://github.com/root-project/root/pull/12863. This problem appears ""only"" in newer OS/compiler (as seen in the original reports leading to #12715) the dependent library are now dlclose'd when the 'main' library is dlclose'd. In the example a cmake generated library is linked against `libHist` and `libHist` is then loaded and unloaded when the example's library is (intentionally) loaded and unloaded. `libHist` happens to share a STL collection's dictionary (`std::vector<TString>`) with `libCore` (and this collection is used for the reading of rootpcm files and thus during the loading of the example's library). . Details:. Unload only the TClass actually generated by the unloaded library. The TGenericClassInfo's destructor now passes the TClass that they actually generated in; addition to the name so that only that TClass is destroyed. This avoid the problem (seen in #12715) where 2 librares (`A` and `B`) have a dictionary for the same; STL collection (this is supported) and we have the following sequence of operation:. 1. load library A; 2. load library B (dictionary registration is ignored as intended); 3. request TClass for STL collection.; 4. unload (dclose) library B; 5. use TClass for STL collection. With the previous code, step 4. would lead to the TClass for STL; collection to be marked as ""unloaded"" even though it library (A); was still actually loaded. Fix reloading of library with a module. Prior to this fix, the in-memory rootpcm loaded as part of the module was removed; from memory on first use and thus if the library was closed and re-opened/loaded; we no longer had the information needed to restore the TClass object corresponding; to that library. This 2 changes fix #12715. The commit [TClassTable: Remove alternate names upon library unloading.](https://github.com/root-project/root/pull/12863/commits/17e8833ec3deb32ca509bf08d31b56f93058d414) fix #12868",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12914:167,depend,dependent,167,https://root.cern,https://github.com/root-project/root/pull/12914,1,['depend'],['dependent']
Integrability,"bal. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:4430,depend,depending,4430,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,2,['depend'],['depending']
Integrability,ber function ‘double BatchHelpers::BracketAdapterWithMask::operator[](std::size_t) const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:91:20: error: enclosing class of constexpr non-static member function ‘bool BatchHelpers::BracketAdapterWithMask::isBatch() const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:87:22: error: enclosing class of constexpr non-static member function ‘double BatchHelpers::BracketAdapterWithMask::operator[](std::size_t) const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:91:20: error: enclosing class of constexpr non-static member function ‘bool BatchHelpers::BracketAdapterWithMask::isBatch() const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:87:22: error: enclosing class of constexpr non-static member function ‘double BatchHelpers::BracketAdapterWithMask::operator[](std::size_t) const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:91:20: error: enclosing class of constexpr non-static member function ‘bool BatchHelpers::BracketAdapterWithMask::isBatch() const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:87:22: error: enclosing class of constexpr non-static member function ‘double BatchHelpers::BracketAdapterWithMask::operator[](std::size_t) const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:91:20: error: enclosing class of constexpr non-static member function ‘bool BatchHelpers::BracketAdapterWithMask::isBatch() const’ is not a literal type . ### Warnings:; - CMake Warning at /data/sftnight/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-526573854:2811,message,message,2811,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-526573854,1,['message'],['message']
Integrability,"bj) override; - {; - fData.RemoveFromCache(obj);; - }; + void RecursiveRemove(TObject *obj) override { fData->RemoveFromCache(obj); }; +; + ClassDefInline(RBrowserDataCleanup, 1);; };; }; }; @@ -67,7 +69,7 @@ public:; ; RBrowserData::RBrowserData(); {; - fCleanupHandle = std::make_unique<RBrowserDataCleanup>(*this);; + fCleanupHandle = std::make_unique<RBrowserDataCleanup>(this);; R__LOCKGUARD(gROOTMutex);; gROOT->GetListOfCleanups()->Add(fCleanupHandle.get());; }. ```. And the test gives even more errors then before:. ```; 1548: -- BEGIN OUTDIFF OUTPUT --; 1548: --- /home/vpadulan/Programs/rootproject/roottest/root/core/execStatusBitsCheck.ref	Wed Jun 9 11:08:31 2021; 1548: +++ /home/vpadulan/Programs/rootproject/rootbuild/execstatusbitcheck-fix-v2/roottest/root/core/execStatusBitsCheck.log	Mon Jul 17 18:19:46 2023; 1548: @@ -14,5 +14,29 @@; 1548: Bit 13 declared in TObject as kInvalidObject; 1548: Bit 14 declared in TStreamerElement as kWholeObject; 1548: Bit 21 declared in TStreamerElement as kWarned; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter infor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:2000,rout,routine,2000,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,1,['rout'],['routine']
Integrability,bj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/datamodelevolution/roottest_root_io_datamodelevolution_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844253147:1444,interface,interface,1444,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844253147,2,['interface'],['interface']
Integrability,"bleGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:5839,message,message,5839,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,bleTableEmitter.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.dir\Release\SearchableTableEmitter.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.vcxproj] ; - [2020-05-12T16:06:25.569Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\utils\TableGen\PseudoLoweringEmitter.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.dir\Release\PseudoLoweringEmitter.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.vcxproj] ; - [2020-05-12T16:06:48.489Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/OPENUI5-prefix/src/OPENUI5-stamp/extract-OPENUI5.cmake:33 (message): ; - [2020-05-12T16:06:52.651Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-build-Release.cmake:49 (message): ; - [2020-05-12T16:06:57.225Z] CMake Error at CFITSIO-stamp/CFITSIO-download-Release.cmake:49 (message): ; - [2020-05-12T16:07:02.220Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/builtins/pcre/PCRE-prefix/src/PCRE-stamp/PCRE-configure-Release.cmake:49 (message): ; - [2020-05-12T16:07:02.512Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/googletest-prefix/src/googletest-stamp/googletest-configure-Release.cmake:49 (message): ; - [2020-05-12T16:07:02.807Z] obj.clang-tblgen.dir\Release\obj.clang-tblgen.lib : fatal error LNK1108: cannot write file at 0x10000 [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj] ; - [2020-05-12T16:07:04.575Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5603#issuecomment-627439886:2208,message,message,2208,https://root.cern,https://github.com/root-project/root/pull/5603#issuecomment-627439886,1,['message'],['message']
Integrability,"blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:; * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h); * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:; * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions.; * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7258:1822,interface,interface,1822,https://root.cern,https://github.com/root-project/root/issues/7258,1,['interface'],['interface']
Integrability,build/146494/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot.roottest.root.tree/addresses/roottest_root_tree_addresses_make/); - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143595098:2758,interface,interface,2758,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143595098,2,['interface'],['interface']
Integrability,"build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'; 14:16:07 #include <ROOT/TPadPainter.hxx>; 14:16:07 ~~~~~~~~^; 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h); 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so; ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle).; ```; module ""ROOTGraphicsPrimitives"" {; requires cplusplus; module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }; module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }; module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }; module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }; module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }; module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }; module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }; module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }; module ""ROOT/TStyle.hxx"" { hea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2091#issuecomment-392598607:2335,depend,depend,2335,https://root.cern,https://github.com/root-project/root/pull/2091#issuecomment-392598607,1,['depend'],['depend']
Integrability,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7704:1175,depend,dependent,1175,https://root.cern,https://github.com/root-project/root/issues/7704,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"builtins for ZeroMQ to ease dependency management: libzmq and cppzmq. The builtin for libzmq is especially necessary at this point because it has recently gained a necessary feature that has not been released yet.; > ; > RooFit::MultiProcess is a task-based parallelization framework.; > ; > It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] fix ZMQ deprecation warnings; - [x] refactor member names: underscore suffix; - [x] document important things with doxygen; - [x] remove commented out code and TODOs and other junk; - [x] fix copyright headers + author lists (RooFitZMQ: me, Roel; MP: me, Inti, Vince); - [ ] rebase in 2-3 neat commits that all compile and pass tests; - [x] clang-tidy up; - [x] change libzmq builtin back to master after PR is merged: https://github.com/zeromq/libzmq/pull/4266; - [ ] ~use `enum class` instead of template parameters for minimizer function implementation choice~ -> next PR. _Edit 18 Nov 2021:_ the following list is to keep track of unaddressed (at time of wr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078:1673,depend,dependency,1673,https://root.cern,https://github.com/root-project/root/pull/9078,2,"['depend', 'wrap']","['dependency', 'wrapped']"
Integrability,but add a comment to the jitted code in order to obtain a clear error message if; the user tries to use this type in a jitted action/transformation later in the chain.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2558:70,message,message,70,https://root.cern,https://github.com/root-project/root/pull/2558,1,['message'],['message']
Integrability,but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TGridJob.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TList.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TQObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TFile.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TFTP.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TFileStager.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TNamed.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBits.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TInetAddress.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module MessageTypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TVirtualAuth.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TDatime.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TTimeStamp.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TVirtualMutex.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSocket.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TMemFile.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TMessage.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDire,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:7111,Message,MessageTypes,7111,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Message'],['MessageTypes']
Integrability,"but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TDatime.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TNamed.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSocket.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TNamed.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBits.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TInetAddress.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module MessageTypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TVirtualAuth.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSecContext.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TTimeStamp.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TVirtualMutex.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSocket.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module root_std_complex.h resolved but not visible![5559/8175] Generating G__Smatrix32.cxx, ../../lib/libSmatrix_G__Smatrix32_rdict.pcm, ../../lib/libSmatrix32.rootmap ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iosfwd resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:9932,Message,MessageTypes,9932,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Message'],['MessageTypes']
Integrability,"but that scripts worked before, they were not shell dependant. That's weird",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1077394454:52,depend,dependant,52,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1077394454,1,['depend'],['dependant']
Integrability,"bviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable?. Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870411730:1126,depend,dependency,1126,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870411730,2,['depend'],['dependency']
Integrability,"by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. [Detaching after vfork from child process 800350]; root [0] double f(double x) { return x*x; }; root [1] double y = f(3.0);; Failure value returned from cantFail wrapped call; inconsistent use of embedded source; UNREACHABLE executed at /srv/root/src/root/interpreter/llvm/src/include/llvm/Support/Error.h:782!. Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; 44	 return INTERNAL_SYSCALL_ERROR_P (ret) ? INTERNAL_SYSCALL_ERRNO (ret) : 0;; (gdb) . ```; I will try with dwarf-5 for everything, let's see if that helps. At least GDB didn't crash this time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:2905,wrap,wrapped,2905,https://root.cern,https://github.com/root-project/root/pull/11882,1,['wrap'],['wrapped']
Integrability,c -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/rint/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/zip/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/thread/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/textinput/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/clingutils/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/v7/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/foundation/v7/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/unix/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:3103,Message,MessageTypes,3103,https://root.cern,https://github.com/root-project/root/issues/7206,1,['Message'],['MessageTypes']
Integrability,"c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197.; Are you already aware of any fix for that?. Thank you,; Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:9067,interface,interface,9067,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,"c/RD_valgrid_stdout.log; /afs/cern.ch/user/w/walkerr/public/RD_valgrid_stdout_supp.log. The latter has an attempt to suppress the root known messages, and has; the slightly promising. [2021-01-14 04:10:07.044153 -0500][Debug ][XRootDTransport ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Sending out kXR_login request,; username: usatlas3, cgi:; ?xrd.cc=us&xrd.tz=-5&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=acas1060.usatlas.bnl.gov&xrd.rn=v4.10.0,; dual-stack: false, private IPv4: false, private IPv6: false; [2021-01-14 04:10:07.046851 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Wrote a message: (0x3cc60ff0), 134; bytes; [2021-01-14 04:10:07.052644 -0500][Dump ][XRootDTransport ] [msg:; 0x3cbf39a0] Expecting 49 bytes of message body; [2021-01-14 04:10:07.053325 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Received message header, size: 8; [2021-01-14 04:10:07.053800 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Received a message of 57 bytes; [2021-01-14 04:10:07.058654 -0500][Debug ][XRootDTransport ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Logged in, session:; 7b7dbbd4cfaff647f020363a59db1b5c; [2021-01-14 04:10:07.059797 -0500][Debug ][XRootDTransport ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Authentication is required:; &P=gsi,v:10400,c:ssl,ca:f5f0dfc2; ==2495== Can't extend stack to 0x414a7fc8 during signal delivery for thread 2:; ==2495== no stack segment; ==2495==; ==2495== Process terminating with default action of signal 11; (SIGSEGV): dumping core; ==2495== Access not within mapped region at address 0x414A7FC8; ==2495== at 0x6703DF7: vfprintf (in /usr/lib64/libc-2.17.so); ==2495== If you believe this happened as a result of a stack; ==2495== overflow in your program's main thread (unlikely but; ==2495== possible), you can try to increase the size of the; ==2495== main thread stack using the --main-stacksize= flag.; ==2495== The main thread stack size used in this run was 16777216.; ==2495==; ==2495== Process termina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760074314:1046,message,message,1046,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760074314,1,['message'],['message']
Integrability,"c/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:8390,message,message,8390,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,c/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1670,message,message,1670,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,c/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1895,message,message,1895,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"c/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:253; #65 cling::IncrementalExecutor::runStaticInitializersOnce (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:251; #66 0x00007fffeea63d43 in cling::Interpreter::executeTransaction (this=<optimized out>, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1714; #67 0x00007fffeea6da53 in cling::IncrementalParser::commitTransaction (this=0x4f6670, PRT=..., ClearDiagClient=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:675; #68 0x00007fffeea6e410 in cling::IncrementalParser::Compile (this=0x4f6670, input=..., Opts=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:846; #69 0x00007fffeea62615 in cling::Interpreter::EvaluateInternal (this=0x4f17a0, input=..., CO=..., V=0x7fffffffcc70, wrapPoint=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379; #70 0x00007fffee95d98f in TCling::Calc (this=0x4f0e00, line=0x1c224b0 ""ROOT::Internal::RDF::JitFilterHelper(R_rdf::lambda0, new const char*[1]{\""a\""}, 1, \""\"", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x21269a0), reinterpret_cast<std::shared_ptr<ROO""..., error=0x7fffffffcd0c) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:3556; #71 0x00007ffff7fc97b3 in ROOT::Internal::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_0::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (; codeSlice=""ROOT::Internal::RDF::JitFilterHelper(R_rdf::lambda0, new const char*[1]{\""a\""}, 1, \""\"", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x21269a0), reinterpret_cast<std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1097659822:16510,wrap,wrapPoint,16510,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1097659822,1,['wrap'],['wrapPoint']
Integrability,c5-root-6.28.00/share/locale -DCMAKE_INSTALL_LIBEXECDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/libexec -DCMAKE_INSTALL_LIBDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/lib -DCMAKE_INSTALL_DOCDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/share/doc/ROOT -DCMAKE_INSTALL_INFODIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/share/info -DCMAKE_INSTALL_MANDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/share/man -DCMAKE_INSTALL_OLDINCLUDEDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/include -DCMAKE_INSTALL_INCLUDEDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/include -DCMAKE_INSTALL_SBINDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/sbin -DCMAKE_INSTALL_BINDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/bin -DCMAKE_INSTALL_NAME_DIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/lib -DCMAKE_POLICY_DEFAULT_CMP0025=NEW -DCMAKE_OSX_SYSROOT= -DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_STRIP=/nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/strip -DCMAKE_RANLIB=/nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/ranlib -DCMAKE_AR=/nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/ar -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_INSTALL_PREFIX=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00 -Drpath=ON -Dbuiltin_llvm=OFF -Dbuiltin_freetype=OFF -Dbuiltin_gtest=OFF -Dbuiltin_nlohmannjson=OFF -Dbuiltin_openui5=OFF -Dalien=OFF -Dbonjour=OFF -Dcastor=OFF -Dchirp=OFF -Dclad=OFF -Ddavix=ON -Ddcache=OFF -Dfail-on-missing=ON -Dfftw3=OFF -Dfitsio=OFF -Dfortran=OFF -Dgnuinstall=ON -Dimt=ON -Dgfal=OFF -Dgviz=OFF -Dhdfs=OFF -Dhttp=ON -Dkrb5=OFF -Dldap=OFF -Dmonalisa=OFF -Dmysql=OFF -Dodbc=OFF -Dopengl=ON -Doracle=OFF -Dpgsql=OFF -Dpythia6=OFF -Dpythia8=OFF -Drfio=OFF -Droot7=OFF -Dsqlite=OFF -Dssl=ON -Dtmva=ON -Dvdt=OFF -Dwebgui=OFF -Dxml=ON -Dxrootd=ON -DC_INCLUDE_DIRS=/nix/store/nasgvbblxi25r6y1s8,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:3464,wrap,wrapper-,3464,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['wrap'],['wrapper-']
Integrability,cannot buid the dependent project,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8942:16,depend,dependent,16,https://root.cern,https://github.com/root-project/root/issues/8942,1,['depend'],['dependent']
Integrability,"cation flows into a member access and is used to access a property of a field assignment by name. This may allow a malicious user to access methods (e.g. toString) as opposed to regular properties of objects and cause a crash, remote code execution or more serious problems. This is known as a Prototype Pollution vulnerability. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/js/scripts/JSRoot.core.js#L1123"">JSRoot.core.js:1123</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b4/root-project/root/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/pr/_/%2Fjs%2Fscripts%2FJSRoot.core.js/javascript%2Fdc_interfile_project%2FPrototypePollution/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; <tr>; <td width=""77%"">Unsanitized input from the document location flows into eval, where it is executed as JavaScript code. This may result in a Code Injection vulnerability. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/js/scripts/JSRoot.core.js#L1313"">JSRoot.core.js:1313</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b4/root-project/root/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/pr/_/%2Fjs%2Fscripts%2FJSRoot.core.js/javascript%2Fdc_interfile_project%2FCodeInjection/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; <tr>; <td width=""77%"">Use binary mode in open (current mode is w) to avoid encoding-related issues for written file, on Windows or with Python 3. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/interpreter/llvm/src/utils/benchmark/mingw.py#L122"">mingw.py:122</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6254#issuecomment-898501733:1604,Inject,Injection,1604,https://root.cern,https://github.com/root-project/root/pull/6254#issuecomment-898501733,1,['Inject'],['Injection']
Integrability,"cation is AppleClang 15.0.0.15000040; -- The CXX compiler identification is AppleClang 15.0.0.15000040; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113:1121,message,message,1121,https://root.cern,https://github.com/root-project/root/issues/14113,1,['message'],['message']
Integrability,"ce `RooCmdArg()` with `{}` in default parameter lists; d82b617a5b [RF] More use of `RooFit::OwningPtr<T>`; 7f288f1ca8 [RF] Avoid some usage of the non-thread safe `Form()` in RooFit; 0c9b6b6116 [RF][HF] Remove FlexibleInterpVar constructor from RooArgLists; 466f3f689c [RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; 07b56333f9 [RF] Put members in RooAbsReal class declaration in order; 25db2c78c4 [RF] Add code generation plus AD test for RooLognormal; 37c232f555 [RF] Don't test codegen + AD in testHistFactory on Windows; 1e74086875 [RF] Extend AD tests in `testHistFactory`; 3535820cda [RF] Throw error in RooNLLVarNew code gen when fitting old HistFactory; 33fe9c3ac5 [RF] Add Code-Squash AD support for RooLogNormal.; 344f5f93bf [RF] Add Code-Squash AD support for RooPiecewiseInterpolation.; 51a50839b6 [RF] Extend `testHistFactory` unit test to fit with code generation AD; efecd18bcc [RF] Add `""codegen""` as new option for `BatchMode()`; 6df4d2e80e [RF] Add `RooAbsReal::hasGradient()` and `gradient()` interface; 8adfe677a1 [RF] Only use floating parameters in RooFuncWrapper; 168b9ef861 [RF] Add Code-Squash AD support for RooFlexibleInterpVar.; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:3899,interface,interface,3899,https://root.cern,https://github.com/root-project/root/pull/13295,1,['interface'],['interface']
Integrability,"ce all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5502:1829,interface,interfaces,1829,https://root.cern,https://github.com/root-project/root/pull/5502,2,['interface'],['interfaces']
Integrability,"ce, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation functions to long double instead of double, otherwise round off errors would still persist and ruin any chances of exact bit-wise equality.; 2. In `mathcore`: Some additions to `IFunction` were made to allow Minuit2 to probe functions for their ability to generate gradients and second derivatives. Similar additions were made to function adapter classes in Minuit2.; 3. In RooFit:; 1. Most RooMinimizerFcn functionality was moved into an abstract base class RooAbsMinimizerFcn, which in turn forms the base class of the new RooMinimizerFcn, but also of the added RooGradMinimizerFcn (serial, but gradient external to Minuit2) and MinuitFcnGrad (with parallel MultiProcess back-end) classes.; 2. The RooRealMPFE based classes can make use of an added parameter `CPUAffinity`. In Unix systems (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:2341,adapter,adapter,2341,https://root.cern,https://github.com/root-project/root/pull/8294,1,['adapter'],['adapter']
Integrability,ce/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f55,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:6626,interface,interface,6626,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,ce/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/usr/include/libxml2 -Iinterpreter/llvm/src/include -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++11 -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -fno-exceptions -fno-rtti -std=c++11 -MD -MT interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:376: error: ‘conditional_t’ in namespace ‘std’ does not name a template type ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected ‘&gt;’ before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected ‘(’ before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected primary-expression b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8399#issuecomment-865243666:1578,Interface,InterfaceStubFunctionsConsumer,1578,https://root.cern,https://github.com/root-project/root/pull/8399#issuecomment-865243666,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,ce; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/TransformationHandler.h: mutable MsgLogger* fLog,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2356,message,message,2356,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"cessful IN2P3 LAPP_LAKE; >; >; > https://bigpanda.cern.ch//media/filebrowser/f9695015-c110-4e2e-9c62-d56eade824f8/panda/tarball_PandaJob_4926136184_IN2P3-LAPP_LAKE/payload.stdout; >; > [2020-12-19 02:08:57.250908 +0100][Debug ][XRootDTransport ] [; > lapp-se01.in2p3.fr:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 500); > [2020-12-19 02:08:57.251553 +0100][Debug ][XRootDTransport ] [; > lapp-se01.in2p3.fr:1094 #0.0] Sending out kXR_login request, username:; > atlaspil, cgi: ?xrd.cc=fr&xrd.tz=1&xrd.appname=runH4lAnalRun2&xrd.info; > =&xrd.hostname=lapp-wn168.in2p3.fr&xrd.rn=v4.10.0, dual-stack: false,; > private IPv4: false, private IPv6: false; >; > Failed Tokyo:; >; >; > https://bigpanda.cern.ch//media/filebrowser/e051d153-88d6-4010-9bae-adee1dc89c07/panda/tarball_PandaJob_4925837464_TOKYO/payload.stdout; >; > [2020-12-18 18:28:04.321336 +0000][Debug ][XRootDTransport ] [; > lcg-se01.icepp.jp:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 500); >; > Failed BNL:; >; >; > https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout; >; > [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [; > dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: manager; > [], protocol version 500); >; > Fail Romania:; >; >; > https://bigpanda.cern.ch//media/filebrowser/60928171-593f-4422-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout; >; > [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [; > tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 400); >; > Fail canada:; >; >; > https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout; >; > [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [; > lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol su",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758074953:3162,protocol,protocol,3162,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758074953,1,['protocol'],['protocol']
Integrability,ch in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 11: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 12: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 13: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 15: Assuming 'ro1' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 16: '?' condition is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 17: 'hasrmin' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 18: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 19: Assuming 'rin' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 20: Left side of '&&' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 21: Assuming the condition is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 22: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 23: Assuming 'rout' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 24: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 25: 'in' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 26: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 27: 'inrmin' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 28: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 29: Assuming 'delta' is >= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:446; 30: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:446; 31: The left operand of '+' is a garbage value in /opt/root_src/geom/geom/src/TGeoCone.cxx:447; /opt/root_src/geom/geom/src/TGeoCone.cxx:462:30: warning: The left operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'i' is < 'vecsize' in /opt/root_src/geom/geom/src/TGeoCone.cxx:1181; 2: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoCone.cxx:1181; 3: Calling ',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:15210,rout,rout,15210,https://root.cern,https://github.com/root-project/root/issues/7428,1,['rout'],['rout']
Integrability,"ch is required to write the integral in a computationally feasiable way.; tutorials/math/Voigt.C - Add a tutorial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is al",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:1716,integrat,integrationRange,1716,https://root.cern,https://github.com/root-project/root/pull/11049,1,['integrat'],['integrationRange']
Integrability,"ch test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:3625,depend,dependencies,3625,https://root.cern,https://github.com/root-project/root/issues/7936,1,['depend'],['dependencies']
Integrability,"ch.; 2. If not feasible, the build error should at least guide the user / package aintainer the configuration option to solve the issue or where to find the solution. ### To Reproduce. 1. Build against the master branch (6.27, 0fafc31efb5a94472af2a6b35ded27796cb141c8) with CMake Flag `-Dbuiltin_llvm=OFF`.; (See the external context for steps to reproduce the behavior with the Nix package manager and Nixpkgs.); 2. See error. ### Setup; <!--; 1. ROOT version; 3. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.27.* on the master branch (f9d15227e4c92eac7c6499379912d1ed24d0142b).; 2. Operating system: NixOS (Linux), on a x86_64 machine.; - system: `""x86_64-linux""`; - host os: `Linux 5.10.156, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; 4. Build with Nix and get dependencies from Nixpkgs. ### Additional context. Here is the build steps to reproduce the issue with Nix. It can be proceed as long as `nix` or `docker` is available. Copyright notice: The `default.nix` is derived/taken from [pkgs/applications/science/misc/root/default.nix](https://github.com/NixOS/nixpkgs/blob/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root/default.nix) in [Nixpkgs](https://github.com/NixOS/nixpkgs). The original work is licensed under the MIT license by Eelco Dolstra and the Nixpkgs/NixOS contributors. 1. Run `mkdir test-root-6.27`; 2. Place the following files into the `test-root-6.27` directory:. `setup-hook.sh` and `sw_vers.patch` from https://github.com/NixOS/nixpkgs/tree/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root. `default.nix`. ```Nix; { stdenv; , lib; , callPackage; , fetchFromGitHub; , fetchpatch; , makeWrapper; , cmake; , coreutils; , git; , davix; , ftgl; , gl2ps; , glew; , gnugrep; , gnused; ,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:2972,depend,dependencies,2972,https://root.cern,https://github.com/root-project/root/issues/11920,1,['depend'],['dependencies']
Integrability,"ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5516-ROOT-fedora31-noimt&date=2020-04-30).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79742/console).; ### Warnings:; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:38:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:56:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:74:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621886081:1135,interface,interfaces,1135,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621886081,1,['interface'],['interfaces']
Integrability,ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105431/console).; ### Errors:; - [2021-01-25T16:12:27.965Z] FAILED: cint/cint/CMakeFiles/Cint.dir/src/loadfile.cxx.o ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:23:3: error: invalid preprocessing directive #R__HAS_MATHMORE ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:26:3: error: invalid preprocessing directive #R__HAS_CLING ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:27:3: error: invalid preprocessing directive #R__HAS_COCOA ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:28:3: error: invalid preprocessing directive #R__HAS_VC ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:31:3: error: invalid preprocessing directive #R__USE_LIBCXX ; - [2021-01-25T16:14:03.950Z] FAILED: DAVIX-prefix/src/DAVIX-stamp/DAVIX-download ; - [2021-01-25T16:14:03.950Z] CMake Error at DAVIX-stamp/DAVIX-download-Release.cmake:49 (message): . ### Warnings:; - [2021-01-25T16:12:20.995Z] CMake Warning at math/vc/cmake/OptimizeForArchitecture.cmake:112 (message): ; - [2021-01-25T16:12:29.028Z] cc1plus: warning: ‘-Wabi’ won’t warn about anything [-Wabi] ; - [2021-01-25T16:12:29.028Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:73:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256’ {aka ‘__vector(8) float’} [-Wignored-attributes] ; - [2021-01-25T16:12:29.028Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:74:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256i’ {aka ‘__vector(4) long long int’} [-Wignored-attributes] ; - [2021-01-25T16:12:29.028Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:75:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256d’ {aka ‘__vector(4) double’} [-Wignored-attributes] ; - [2021-01-25T1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7089#issuecomment-766928504:1070,message,message,1070,https://root.cern,https://github.com/root-project/root/pull/7089#issuecomment-766928504,1,['message'],['message']
Integrability,chain/usr/include/c++/v1/__tree:1819:22: warning: the specified comparator type does not provide a const call operator [-Wuser-defined-warnings] . ### Failing tests:; - [projectroot.roottest.cling.bytecode.roottest_cling_bytecode_runarrayhist_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.cling/bytecode/roottest_cling_bytecode_runarrayhist_WILL_FAIL/); - [projectroot.roottest.root.hist.roottest_root_hist_mergeTH2Poly](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root/hist/roottest_root_hist_mergeTH2Poly/); - [projectroot.test.test_stressfit_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot/test/test_stressfit_interpreted/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execBrowseNonAccessibleType](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execBrowseNonAccessibleType/); - [projectroot.roottest.root.multicore.roottest_root_multicore_exectstformula](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_exectstformula/); - [projectroot.roottest.root.multicore.roottest_root_multicore_TThreadedObjectAutoMemManagement](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_TThreadedObjectAutoMemManagement/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1911#issuecomment-384237158:1635,interface,interface,1635,https://root.cern,https://github.com/root-project/root/pull/1911#issuecomment-384237158,1,['interface'],['interface']
Integrability,change the TBufferMerger callback to wrap the merge operation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1706:37,wrap,wrap,37,https://root.cern,https://github.com/root-project/root/pull/1706,1,['wrap'],['wrap']
Integrability,"civetweb server creates pre-coinfigured number of threads and this number cannot be change once server running. Each active websocket consumes one thread, where all communication handling is performed. ; To avoid situation that simple http requests fails just while websockets blocked all threads number of; websocket connection will be limited by 90% of configured threads. Issue warning message from `TCivetweb.cxx` when websocket connection refused because of threads number like:; ```; Error in <TCivetweb::WebSocketHandler>: Only 2 threads are available, reject connection request for win3. Increase WebGui.HttpThreads parameter in rootrc, now it is 7; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13542:389,message,message,389,https://root.cern,https://github.com/root-project/root/pull/13542,1,['message'],['message']
Integrability,"cked for duplicates. ### Description. When using Python in interactive mode, the web window does not launch properly (see screenshot). It works from a C++ macro. One can also save canvas contents in ROOT batch mode. ![image](https://github.com/root-project/root/assets/1557360/2181f05e-27bd-4473-9151-b28a90773900). ### Reproducer. ```python; import ROOT; import numpy as np. def main():; voltages = np.array([1,2,3], dtype=np.uint32); capacitances = np.array([4,5,6], dtype=np.float32). #ROOT.gROOT.SetBatch(True); df = ROOT.RDF.FromNumpy({'voltages': voltages, 'capacitances': capacitances}); df = df.Define('inv', '1/(capacitances*capacitances)'). c = ROOT.TCanvas(); graph = df.Graph('voltages', 'inv'); graph.Draw('APL'). c.SaveAs(""graph.pdf""). if __name__ == ""__main__"":; main(); ```; Output:; ```bash; $ python3 -i repro.py ; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9449; Opening in existing browser session.; [102887:102898:0312/160727.268507:ERROR:object_proxy.cc(576)] Failed to call method: org.freedesktop.DBus.Properties.Get: object_path= /org/freedesktop/portal/desktop: org.freedesktop.DBus.Error.InvalidArgs: No such interface “org.freedesktop.portal.FileChooser”; [102887:102898:0312/160727.268546:ERROR:select_file_dialog_linux_portal.cc(285)] Failed to read portal version property; [102887:102887:0312/160727.306050:ERROR:policy_logger.cc(156)] :components/enterprise/browser/controller/chrome_browser_cloud_management_controller.cc(161) Cloud management controller initialization aborted as CBCM is not enabled. Please use the `--enable-chrome-browser-cloud-management` command line flag to enable it if you are not using the official Google Chrome build.; 13986 bytes written to file /home/jakob/Documents/CERN/ROOT/demo/graph.pdf; Info in <ProduceImage>: PDF file graph.pdf with 1 pages has been created; >>> ; ```. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14943:1200,interface,interface,1200,https://root.cern,https://github.com/root-project/root/issues/14943,1,['interface'],['interface']
Integrability,"clang-format wants me to do things that I don't want to do:. ```diff; diff --git a/tree/tree/inc/TVirtualIndex.h b/tree/tree/inc/TVirtualIndex.h; index c4753fac14..7f38cb2ca0 100644; --- a/tree/tree/inc/TVirtualIndex.h; +++ b/tree/tree/inc/TVirtualIndex.h; @@ -45,7 +45,7 @@ public:; virtual Long64_t GetN() const = 0;; virtual TTree *GetTree() const {return fTree;}; virtual void UpdateFormulaLeaves(const TTree *parent) = 0;; - virtual void SetTree(TTree *T) = 0;; + virtual void SetTree(TTree *T) = 0;. ClassDefOverride(TVirtualIndex,1); //Abstract interface for Tree Index; };; diff --git a/tree/treeplayer/inc/TChainIndex.h b/tree/treeplayer/inc/TChainIndex.h; index 83bfba1f30..7eca7b529f 100644; --- a/tree/treeplayer/inc/TChainIndex.h; +++ b/tree/treeplayer/inc/TChainIndex.h; @@ -88,7 +88,7 @@ public:; virtual Long64_t GetN() const {return fEntries.size();}; virtual Bool_t IsValidFor(const TTree *parent);; virtual void UpdateFormulaLeaves(const TTree *parent);; - virtual void SetTree(TTree *T);; + virtual void SetTree(TTree *T);. ClassDef(TChainIndex,1) //A Tree Index with majorname and minorname.; };; diff --git a/tree/treeplayer/inc/TTreeIndex.h b/tree/treeplayer/inc/TTreeIndex.h; index d56ad5c3ac..218f21403a 100644; --- a/tree/treeplayer/inc/TTreeIndex.h; +++ b/tree/treeplayer/inc/TTreeIndex.h; @@ -68,7 +68,7 @@ public:; virtual Bool_t IsValidFor(const TTree *parent);; virtual void Print(Option_t *option="""") const;; virtual void UpdateFormulaLeaves(const TTree *parent);; - virtual void SetTree(TTree *T);; + virtual void SetTree(TTree *T);. ClassDef(TTreeIndex,2); //A Tree Index with majorname and minorname.; };; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12269#issuecomment-1431462065:552,interface,interface,552,https://root.cern,https://github.com/root-project/root/pull/12269#issuecomment-1431462065,1,['interface'],['interface']
Integrability,clarify error message with bash,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11530:14,message,message,14,https://root.cern,https://github.com/root-project/root/pull/11530,1,['message'],['message']
Integrability,"cleHandler;; #pragma link C++ class dd4hep::sim::Geant4UIManager;; #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here; //namespace detail {}; //#pragma link C++ namespace detail;. #endif. // CLHEP stuff; #include <CLHEP/Random/Random.h>; #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;; #pragma link C++ class CLHEP::HepRandom;; #pragma link C++ class CLHEP::HepRandomEngine;; #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB; #define DD4HEP_USE_TBB 1; #endif; #ifndef BOOST_SPIRIT_USE_PHOENIX_V3; #define BOOST_SPIRIT_USE_PHOENIX_V3 1; #endif; #ifndef DD4HEP_USE_XERCESC; #define DD4HEP_USE_XERCESC 1; #endif; #ifndef G4LIB_BUILD_DLL; #define G4LIB_BUILD_DLL 1; #endif; #ifndef PTL_BUILD_DLL; #define PTL_BUILD_DLL 1; #endif; #ifndef G4VIS_USE_RAYTRACERX; #define G4VIS_USE_RAYTRACERX 1; #endif; #ifndef G4VIS_USE_TOOLSSG_QT_GLES; #define G4VIS_USE_TOOLSSG_QT_GLES 1; #endif; #ifndef G4VIS_USE_TOOLSSG_QT_ZB; #define G4VIS_USE_TOOLSSG_QT_ZB 1; #endif; #ifndef G4VIS_USE_TOOLSSG_X11_GLES; #define G4VIS_USE_TOOLSSG_X11_GLES 1; #endif; #ifndef G4VIS_USE_TOOLSSG_XT_GLES; #define G4VIS_USE_TOOLSSG_XT_GLES 1; #endif; #ifndef G4VIS_USE_TOOLSSG_XT_ZB; #define G4VIS_USE_TO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:19061,rout,routine,19061,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,1,['rout'],['routine']
Integrability,cling depends on exact macOS SDK headers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7021:6,depend,depends,6,https://root.cern,https://github.com/root-project/root/issues/7021,1,['depend'],['depends']
Integrability,"clude RooHistError from IO; [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; [RF] Code-format `testRooDataHist.cxx`; [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`; [RF] Modernize `RooVectorDataStore::RealFullVector` class; [RF] Enable AD code-gen test for RooFit.; [RF] Suggest alternative to RooDataSet c'tor that takes weight name; [RF] Add unit test for splitting RooDataSets with weight errors; [RF] Add weight errors and not weight squared when filling split data; [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`; [RF] Less manual memory management in RooAbsArg and RooProdGenContext; [RF] Code modernization of RooAbsReal; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF] New mechanism to implicitly convert numbers to RooRealVar&; [RF] Remove RooFormula code for gcc <= 4.8; [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; [RF] More use of `snapshot()` overload with output parameter; [RF] Bring back `RooStats::FeldmanCousins::SetData()`; [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12620#issuecomment-1497698813:4879,wrap,wrapper,4879,https://root.cern,https://github.com/root-project/root/pull/12620#issuecomment-1497698813,1,['wrap'],['wrapper']
Integrability,"clude\vector(659,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\CompilerInvocation.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-04-07T10:00:10.394Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility(546,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Analysis\ValueTracking.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Analysis\LLVMAnalysis.vcxproj] ; - [2021-04-07T10:00:10.394Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/Lex/MacroInfo.h(433,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\InterfaceStubFunctionsConsumer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-04-07T10:00:10.394Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility(208,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SimplifyCFG.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2021-04-07T10:00:15.528Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\bitset(208,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXReplaceImageHandles.cp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7795#issuecomment-814787481:2592,Interface,InterfaceStubFunctionsConsumer,2592,https://root.cern,https://github.com/root-project/root/pull/7795#issuecomment-814787481,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,"cmake fails if `arrow` not installed while ARROW_VERSION is not defined. Error message is:; ```; CMake Error at cmake/modules/FindArrow.cmake:40 (if):; if given arguments:. ""0"" ""AND"" ""VERSION_GREATER_EQUAL"" ""10.0.0"". Unknown arguments specified; Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:18 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1062 (find_package); CMakeLists.txt:249 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11706:79,message,message,79,https://root.cern,https://github.com/root-project/root/pull/11706,1,['message'],['message']
Integrability,"cmake""; 888: Environment variables:; 888: ROOT_HIST=0; 888: Test timeout computed to be: 1500; 888: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 888: error code: -529697949; 888:; 888:; 11/16 Test #888: tutorial-dataframe-df016_vecOps-py .......................***Failed 4.51 sec; test 889; Start 889: tutorial-dataframe-df017_vecOpsHEP-py. 889: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df017_vecOpsHEP.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 889: Environment variables:; 889: ROOT_HIST=0; 889: Test timeout computed to be: 1500; 889: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 889: error code: -529697949; 889:; 889:; 12/16 Test #889: tutorial-dataframe-df017_vecOpsHEP-py ....................***Failed 5.05 sec; test 890; Start 890: tutorial-dataframe-df019_Cache-py. 890: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df019_Cache.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 890: Environment variables:; 890: ROOT_HIST=0; 890: Test timeout computed to be: 1500; 890: Error in <TChain::LoadTree>: Cannot find tree with name ÉB D═ in file C:\Users\sftnight\build\release\tutorials\hsimple.root; 890: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 890: error code: -529697949; 890:; 890:; 13/16 Test #890: tutorial-dataframe-df019_Cache-py ........................***Failed Error reg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:12280,message,message,12280,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,"cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163:1986,message,message,1986,https://root.cern,https://github.com/root-project/root/issues/14163,1,['message'],['message']
Integrability,"cmake:232 (message):; error code: 1; ~~~. #### tutorial-fit-combinedFit-py. cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:6714,message,message,6714,https://root.cern,https://github.com/root-project/root/issues/12429,1,['message'],['message']
Integrability,"code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12630#issuecomment-1498932509:1262,integrat,integration,1262,https://root.cern,https://github.com/root-project/root/pull/12630#issuecomment-1498932509,2,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"code></a> [fix] revert all breaking syntax changes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/2ff038852ec03e85e60e0eb333005c680ac8a543""><code>2ff0388</code></a> document, expose, and test 'partial:true' option</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/minimatch/compare/v3.0.4...v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:2408,Depend,Dependabot,2408,https://root.cern,https://github.com/root-project/root/pull/11864,1,['Depend'],['Dependabot']
Integrability,"com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When `TBrowser` is opened, all the child items (files and folders) of the super-directories will be shown. This cause it to get stuck when one of them contains a huge amount of files and directories. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT by `nix-env -iA root`; 3. ```bash; cd ~/.nix-profile/tutorials; root; ```; 4. In",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7213:1029,Interface,Interface,1029,https://root.cern,https://github.com/root-project/root/issues/7213,1,['Interface'],['Interface']
Integrability,components; #pragma link C++ class dd4hep::sim::Geant4DataDump;; #pragma link C++ class dd4hep::sim::Geant4Random;; #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;; #pragma link C++ class dd4hep::sim::Geant4UIManager;; #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here; //namespace detail {}; //#pragma link C++ namespace detail;. #endif. // CLHEP stuff; #include <CLHEP/Random/Random.h>; #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;; #pragma link C++ class CLHEP::HepRandom;; #pragma link C++ class CLHEP::HepRandomEngine;; #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:54617,rout,routine,54617,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,1,['rout'],['routine']
Integrability,"components; #pragma link C++ class dd4hep::sim::Geant4DataDump;; #pragma link C++ class dd4hep::sim::Geant4Random;; #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;; #pragma link C++ class dd4hep::sim::Geant4UIManager;; #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here; //namespace detail {}; //#pragma link C++ namespace detail;. #endif. // CLHEP stuff; #include <CLHEP/Random/Random.h>; #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;; #pragma link C++ class CLHEP::HepRandom;; #pragma link C++ class CLHEP::HepRandomEngine;; #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB; #define DD4HEP_USE_TBB 1; #endif; #ifndef BOOST_SPIRIT_USE_PHOENIX_V3; #define BOOST_SPIRIT_USE_PHOENIX_V3 1; #endif; #ifndef DD4HEP_USE_XERCESC; #define DD4HEP_USE_XERCESC 1; #endif; #ifndef G4LIB_BUILD_DLL; #define G4LIB_BUILD_DLL 1; #endif; #ifndef PTL_BUILD_DLL; #define PTL_BUILD_DLL 1; #endif; #ifndef G4VIS_USE_RAYTRACERX; #define G4VIS_USE_RAYTRACERX 1; #endif; #ifndef G4VIS_USE_TOOLSSG_QT_GLES; #define G4VIS_USE_TOOLSSG_QT_GLES 1; #endif; #ifndef G4VIS_USE_TOOLSSG_QT_ZB; #define G4VIS_USE_TOOLSSG_QT_ZB 1; #endif; #ifndef G4VIS_USE_TOOLSSG_X11_GLES; #define G4VIS_US",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:18898,rout,routine,18898,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,1,['rout'],['routine']
Integrability,"concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the same position ID in the object store. ; - `RNTupleLocator`: leverages the changes introduced by PR #11828; all DAOS locators use the type `kDaos` and payload format `RNTupleLocatorObject64`. To locate pages within a cage, the 64-bit payload encodes the cage index in the LS half and the offset in the MS half. If caging is disabled, the offset remains zero, and each 'cage' is trivially the sealed page.; - Currently, there are no plans to enable support for page-wise reading without cluster caching if the desired page is caged, as that use-case is not performant and thus not recommended. Caged pages in DAOS should be accessed with the page buffering read option turned on. By disallowing the reading of a single caged page when the wrapping cage size is unknown, the cage sizes - or upper bounds for them - do not need to be passed to `RPageSourceDaos`; they are trivially devised in `RPageSourceDaos::LoadClusters()` by accessing all page locators in a buffered page-group. ; - `RPageSourceDaos::LoadClusters()` and `RPageSourceDaos::PopulatePageFromCluster()` extract the cage position and offset-in-cage from each sealed page's `RNTupleLocator::fPosition`. The former function has been changed to coalesce the page locators by cage index and perform a single read operation per cage. ## Checklist:. - [x] tested changes locally + HPE `delphi` cluster; - [x] updated the docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11466:2735,wrap,wrapping,2735,https://root.cern,https://github.com/root-project/root/pull/11466,1,['wrap'],['wrapping']
Integrability,conditional jump or move depends on uninitialised value triggered in LLVM's CodeGen,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16123:25,depend,depends,25,https://root.cern,https://github.com/root-project/root/issues/16123,1,['depend'],['depends']
Integrability,"copy the changed files from the ROOT sources. Being a git repository, it also easily is included as a submodule in the `/extern` folder for GooFit, for example. After meeting and talking with @lmoneta a couple of days ago over a coffee, he outlined the procedure I initially implemented. He showed me the old ""build"" directory, with an old bash script that copied the necessary files out. He wanted me to make a new folder to eventually replace his build folder. The idea is that you could create source distributions that would be packaged and made available as downloads to continue the outdated ones available here: http://project-mathlibs.web.cern.ch/project-mathlibs/minuit/release/download.html. I added this though `make package_source`, and included `make package` for binary distributions as well. The integrated version does look a bit better, though it is a bit more invasive and not nearly as well separated. I do need to copy to `/inc/Math`, etc, since a source distribution needs to be in the source directory. Everything is copied to `INSTALL_PREFIX/include` when it's installed or packaged for a binary distribution. As for use, a git only solution really is not feasible, unfortunately, with any method that does not include git submodules. The current methods for a user are:. * Install beforehand from one of the downloadable packages, either building a source package or installing a binary package. This is the way some people will get it, but not ideal for a modern package that wants to have minimal dependencies.; * Have CMake download and build the package with `ExternalProject` - probably the best solution for now, still not as nice for something like GooFit that already has all dependencies as git submodules.; * Check out all of ROOT as a submodule, then `add_subdirectory(extern/root/math/minuit2)`. Much more disk space usage that needed, but otherwise also a decent solution. Might even be best. All three methods should be supported by this standalone build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369601161:1610,depend,dependencies,1610,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369601161,2,['depend'],['dependencies']
Integrability,cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 46 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:887 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1272:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-545300649:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-545300649,1,['message'],['message']
Integrability,cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 38 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:887 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1272:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-545186399:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-545186399,1,['message'],['message']
Integrability,cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 38 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546606703:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546606703,1,['message'],['message']
Integrability,cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 46 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546694603:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546694603,1,['message'],['message']
Integrability,cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 62 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546705079:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546705079,1,['message'],['message']
Integrability,cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 78 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:887 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1272:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-545436942:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-545436942,1,['message'],['message']
Integrability,cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 78 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546613502:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546613502,1,['message'],['message']
Integrability,"cs/minimatch/commit/20b4b562830680867feb75f9c635aca08e5c86ff""><code>20b4b56</code></a> [fix] revert all breaking syntax changes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/2ff038852ec03e85e60e0eb333005c680ac8a543""><code>2ff0388</code></a> document, expose, and test 'partial:true' option</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/minimatch/compare/v3.0.4...v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:2318,depend,dependabot-automerge-start,2318,https://root.cern,https://github.com/root-project/root/pull/11864,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,ction_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.directory.roottest_root_io_directory_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.io/directory/roottest_root_io_directory_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/). And 22 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1348#issuecomment-345679975:2680,interface,interface,2680,https://root.cern,https://github.com/root-project/root/pull/1348#issuecomment-345679975,1,['interface'],['interface']
Integrability,"cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>""; ==652727== Memcheck, a memory error detector; ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.; ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info; ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>; ==652727== ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |; | From heads/master@tags/v6-30-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s); ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2166043260:1201,depend,depends,1201,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2166043260,1,['depend'],['depends']
Integrability,"cypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196; #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626; #8 <signal handler called>; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:11475,Wrap,WrapperCall,11475,https://root.cern,https://github.com/root-project/root/issues/15117,1,['Wrap'],['WrapperCall']
Integrability,d ... But may be it should be ? ... at least the current code is not consistent: ; ```; tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1199,message,message,1199,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"d Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not match",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:1270,depend,dependency,1270,https://root.cern,https://github.com/root-project/root/pull/15272,1,['depend'],['dependency']
Integrability,"d [-Wbidirectional=] ; - [2021-11-30T07:31:27.486Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:31:27.486Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:32:09.170Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:32:09.170Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368250:2052,synchroniz,synchronizeParameterSettings,2052,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368250,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"d by; transaction created during the callbacks executed during the; ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':; ```; int main(int argc, char ** argv); {; char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";; auto const result [[gnu::unused]] = TClass::GetClass(class_string);; return 0;; }; ```; which is a representation of real use case (in a more complex setup) in ART.; We were getting:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; (*(TStreamerInfo**)ret) = new TStreamerInfo();; return;; }; else {; new TStreamerInfo();; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented!; Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object!; ```; The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:; ```; if (const llvm::GlobalValue* GV; = getLastTransaction()->getModule()->getNamedValue(name)); ```; However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```; #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345; #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111; #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:1213,wrap,wrapper,1213,https://root.cern,https://github.com/root-project/root/pull/2776,2,['wrap'],['wrapper']
Integrability,"d from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/Service",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:4696,depend,depends,4696,https://root.cern,https://github.com/root-project/root/issues/11765,1,['depend'],['depends']
Integrability,"d it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: error: ld returned 1 exit status; ```; Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:4296,message,message,4296,https://root.cern,https://github.com/root-project/root/issues/7936,1,['message'],['message']
Integrability,"d on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please join the discussion [here](https://github.com/orgs/community/discussions/29534) in the official GitHub community!. #### I have another question / how do I get in touch?; Please join the discussion [here](https://github.com/orgs/community/discussions/29534) to ask further questions and send us suggestions!. </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:4397,integrat,integrated,4397,https://root.cern,https://github.com/root-project/root/pull/11808,1,['integrat'],['integrated']
Integrability,"d-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-30T07:31:37.755Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:31:37.755Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:31:37.755Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/TestStatistics/testLikelihoodGradientJob.cpp:467:53: warning: declaration of ‘likelihood’ shadows a member of ‘LikelihoodSimBinnedConstrainedTest_ConstrainedAndOffset_Test’ [-Wshadow] . And 1 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982359449:3908,synchroniz,synchronizeParameterSettings,3908,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982359449,2,['synchroniz'],['synchronizeParameterSettings']
Integrability,"d. From a quick glance it seems that ROOT's CMake configuration sets up way too many unnecessary dependencies between its build targets. Most of the issues seem to arise from how the dictionary generation is set up as far as I can see. In ATLAS I use the following code to set up the generation of dictionary source files:. https://gitlab.cern.ch/atlas/atlasexternals/-/blob/master/Build/AtlasCMake/modules/AtlasDictionaryFunctions.cmake. And that provides a much better behaviour. Mainly because in ATLAS's setup dictionary generations do not need to wait for anything. Even if the library that a dictionary is being produced for depends on a number of upstream libraries, the dictionary for that library can be generated before all the upstream libraries would have finished building. In practice this actually means that the start of any ATLAS software build is dominated by running dictionary generation. As GNU Make and Ninja both prefer running those build steps first. (As they do not have any dependencies themselves.). The reason I blame the dictionary generation code is that regular C(\+\+) code building with Ninja scales very well to many cores. Even when one has many small libraries in a project, Ninja can start the build of object files before all of the libraries that they depend on would've finished building. (In ATLAS's offline software the very end of a build is taken up purely by library/executable linking steps.). ## To Reproduce. Unfortunately you need a pretty powerful machine to do so... But once you do, just do something similar to what I did:. ```; cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=17 \; -Dall=ON -Dbuiltin_gsl=ON -Dbuiltin_freetype=ON -Dbuiltin_lzma=ON -Dbuiltin_veccore=ON \; -DXROOTD_ROOT_DIR=~/software/xrootd/4.12.2/x86_64-ubuntu2004-gcc9-opt \; -DTBB_ROOT_DIR=~/software/oneTBB/2020.2/x86_64-ubuntu2004-gcc9-opt \; -DCMAKE_INSTALL_PREFIX=~/software/root/6.20.08/x86_64-ubuntu2004-gcc9-opt ../root-6.20.08/; ninja; ```. ## Setup. A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432:2241,depend,dependencies,2241,https://root.cern,https://github.com/root-project/root/issues/6432,1,['depend'],['dependencies']
Integrability,"d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 1184 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52311/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_aclicDataMemberSelection/); - [projectroot.roottest.root.meta.evolution.version5.roottest_root_meta_evolution_version5_execNestedColl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52311/testReport/projectroot.roottest.root.meta.evolution/version5/roottest_root_meta_evolution_version5_execNestedColl/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2983#issuecomment-457425291:2426,depend,depends,2426,https://root.cern,https://github.com/root-project/root/pull/2983#issuecomment-457425291,1,['depend'],['depends']
Integrability,d/roofit/roofitcore/G__RooFitCore.cxx /mnt/build/workspace/root-pullrequests-build/build/lib/libRooFitCore_rdict.pcm /mnt/build/workspace/root-pullrequests-build/build/lib/libRooFitCore.rootmap ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:32:13: error: typedef redefinition with different types ('IMultiGenFunctionTempl&lt;double&gt;' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:38:42: error: typedef redefinition with different types ('ROOT::Math::IBaseFunctionMultiDim' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:154:37: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:174:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:180:43: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:193:40: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:215:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:219:43: error: only virtual member functions can be marked 'override' . ### Warnings:; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDataSource.hxx:213:11: warning: unknown attribute 'REMOVE_THIS_NOW,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373548076:1453,Wrap,WrappedFunction,1453,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373548076,1,['Wrap'],['WrappedFunction']
Integrability,"d/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3299:25: error: expected primary-expression before ‘&gt;’ token ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3299:27: error: ‘mask2’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3300:25: error: expected primary-expression before ‘&gt;’ token ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3300:27: error: ‘mask3’ was not declared in this scope . And 64 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-ini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400713921:1988,depend,depends,1988,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400713921,2,['depend'],['depends']
Integrability,"d: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzE4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzM4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; collect2: error: ld returned 1 exit status; math/genvector/CMakeFiles/GenVector.dir/build.make:363: recipe for target 'lib/libGenVector.so' failed; make[2]: *** [lib/libGenVector.so] Error 1; CMakeFiles/Makefile2:41978: recipe for target 'math/genvector/CMakeFiles/GenVector.dir/all' failed; make[1]: *** [math/genvector/CMakeFiles/GenVector.dir/all] Error 2; Makefile:165: recipe for target 'all' failed; ```. </details>. > So, so far, my best guess (because I don't understand 'what' it really does) is that [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) has the side effect of destroying/replacing the partial desugaring.; > ; > I would have expected the change to be much closer to part that generate the (partial) output for this kind of type/value and/or to be an extension in the partial desugaring routines.; > ; > (As a side note, I have a vague memory that we already solved a similar problem in the past but can not find (yet?) the solution (if any) in the repository). I do not see how that is affecting the desugaring but I have not debugged this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1136423157:25396,rout,routines,25396,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157,2,['rout'],['routines']
Integrability,"d_library(VDT::VDT UNKNOWN IMPORTED GLOBAL); + set_target_properties(VDT::VDT; + PROPERTIES; + IMPORTED_LOCATION ""${VDT_LIBRARIES}""; + INTERFACE_INCLUDE_DIRECTORIES ""${VDT_INCLUDE_DIRS}""; + ); endif(); endif(); ```. - At this point you could simplify the build configuration to:. ```diff; diff --git a/math/vecops/CMakeLists.txt b/math/vecops/CMakeLists.txt; index 09fde3eb40..e15b5ea186 100644; --- a/math/vecops/CMakeLists.txt; +++ b/math/vecops/CMakeLists.txt; @@ -8,10 +8,6 @@; # CMakeLists.txt file for building ROOT math/vecops package; ############################################################################; ; -if(builtin_vdt); - link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY}); -endif(); -; ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; HEADERS; ROOT/RVec.hxx; @@ -24,13 +20,7 @@ ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; ); ; if(builtin_vdt OR vdt); - target_include_directories(ROOTVecOps PRIVATE ${VDT_INCLUDE_DIRS} INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>); -endif(); -; -if(builtin_vdt); - target_link_libraries(ROOTVecOps PRIVATE ${VDT_LIBRARIES}); -elseif(vdt); - target_link_libraries(ROOTVecOps PUBLIC ${VDT_LIBRARIES}); + target_link_libraries(ROOTVecOps PUBLIC VDT::VDT); endif(); ; if(MSVC); ```. - Finally, you would have to ensure that `find_package(ROOT)` would look for VDT if it needs to. Like:. ```diff; diff --git a/cmake/scripts/ROOTConfig.cmake.in b/cmake/scripts/ROOTConfig.cmake.in; index 54f1a17140..054954ac8c 100644; --- a/cmake/scripts/ROOTConfig.cmake.in; +++ b/cmake/scripts/ROOTConfig.cmake.in; @@ -97,6 +97,9 @@ if(ROOT_minuit2_omp_FOUND); find_dependency(OpenMP); find_dependency(Threads); endif(); +if(@vdt@ OR @builtin_vdt@); + find_dependency(Vdt); +endif(); ; #----------------------------------------------------------------------------; # Now set them to ROOT_LIBRARIES; ```. Though on this latter part I wasn't sure how you prefer to pass configuration options from the build to the generated `ROOTConfig.cmake` file. :thinking:. 2. Just u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797#issuecomment-1339057027:1699,INTERFACE,INTERFACE,1699,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339057027,1,['INTERFACE'],['INTERFACE']
Integrability,dation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/macosx/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/winnt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/mnt/build/workspace/root-pullrequests-build/root/builtins/xxhash -I/mnt/build/workspace/root-pullrequests-build/root/builtins/lz4 -I/mnt/build/workspace/root-pullrequests-build/root/builtins/zlib -writeEmptyRootPCM -DSYSTEM_TYPE_unix ROOT/StringConv.hxx ROOT/TExecutor.hxx ROOT/TSequentialExecutor.hxx Buttons.h Bytes.h Byteswap.h Gtypes.h GuiTypes.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TApplicationImp.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBrowser.h TBrowserImp.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TCanvasImp.h TColorGradient.h TColor.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TDatime.h TDirectory.h TEnv.h TError.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TGuiFactory.h TInetAddress.h TInspectorImp.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjectSpy.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4120#issuecomment-515038284:3003,Message,MessageTypes,3003,https://root.cern,https://github.com/root-project/root/pull/4120#issuecomment-515038284,3,['Message'],['MessageTypes']
Integrability,"dden [-Woverloaded-virtual] ; - [2021-11-30T07:30:53.680Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiPro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982359449:2560,synchroniz,synchronizeParameterSettings,2560,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982359449,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"dden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-30T07:31:37.755Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:31:37.755Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982359449:3269,synchroniz,synchronizeParameterSettings,3269,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982359449,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,de -compilerI/usr/lib/clang/14.0.5/include -compilerI/usr/include -I/home/mkrzewic/src/root_build/include -I/home/mkrzewic/src/root_build/ginclude -I/home/mkrzewic/src/root_src/core/base/inc -I/home/mkrzewic/src/root_src/core/foundation/inc -I/home/mkrzewic/src/root_src/core/cont/inc -I/home/mkrzewic/src/root_src/core/gui/inc -I/home/mkrzewic/src/root_src/core/meta/inc -I/home/mkrzewic/src/root_src/core/clib/inc -I/home/mkrzewic/src/root_src/core/rint/inc -I/home/mkrzewic/src/root_src/core/zip/inc -I/home/mkrzewic/src/root_src/core/thread/inc -I/home/mkrzewic/src/root_src/core/textinput/inc -I/home/mkrzewic/src/root_src/core/clingutils/inc -I/home/mkrzewic/src/root_src/core/base/v7/inc -I/home/mkrzewic/src/root_src/core/foundation/v7/inc -I/home/mkrzewic/src/root_src/core/unix/inc -I/usr/local/include -I/home/mkrzewic/src/root_src/builtins/xxhash -I/usr/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787:4525,Message,MessageTypes,4525,https://root.cern,https://github.com/root-project/root/issues/12787,1,['Message'],['MessageTypes']
Integrability,de -compilerI/usr/lib/clang/14.0.5/include -compilerI/usr/include -I/home/mkrzewic/src/root_build/include -I/home/mkrzewic/src/root_build/ginclude -I/home/mkrzewic/src/root_src/core/base/inc -I/home/mkrzewic/src/root_src/core/foundation/inc -I/home/mkrzewic/src/root_src/core/cont/inc -I/home/mkrzewic/src/root_src/core/gui/inc -I/home/mkrzewic/src/root_src/core/meta/inc -I/home/mkrzewic/src/root_src/core/clib/inc -I/home/mkrzewic/src/root_src/core/rint/inc -I/home/mkrzewic/src/root_src/core/zip/inc -I/home/mkrzewic/src/root_src/core/thread/inc -I/home/mkrzewic/src/root_src/core/textinput/inc -I/home/mkrzewic/src/root_src/core/clingutils/inc -I/home/mkrzewic/src/root_src/core/base/v7/inc -I/home/mkrzewic/src/root_src/core/foundation/v7/inc -I/home/mkrzewic/src/root_src/core/unix/inc -I/usr/local/include -I/home/mkrzewic/src/root_src/builtins/xxhash -I/usr/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1537529063:2984,Message,MessageTypes,2984,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1537529063,1,['Message'],['MessageTypes']
Integrability,"dear @guitargeek . It seems that my project has one more problem with new cppyy.; While I am trying to prepare ""easy"" reproducer, I need to ask you some advice/recipe.; The issue is with ""python""-RooAbsPdf. I need to have a RooAbdPdf class with the major; method implemented in python. Previously I have such solution, but with new cppyy; I've got two problems - first, and the drawing phase, there are error messages ; that servers are not redirected. ButI have ""correct"" fit results and the plot. ; And, the main problem is that at the end of the script the program stalls -; likely in ROOT finalization. ; It is not easy to make short, simple & easy reproducer, but I'll try to do it asap.; But, might be it is a known issue? ; What is the ""correct/recommended"" way for implementation of such ""hybrid"" pythonic RooAbdPdf?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15085#issuecomment-2029462023:409,message,messages,409,https://root.cern,https://github.com/root-project/root/issues/15085#issuecomment-2029462023,2,['message'],['messages']
Integrability,dedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: con,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-596563785:1313,interface,interface,1313,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-596563785,1,['interface'],['interface']
Integrability,"dentify libraries that could be loaded to provide the requested symbols, and record their paths but do not load them yet. Instead you should record a map of libraries to the symbols they provide. E.g. [ ( ""liba.so"", [ ""foo"", ""bar"" ] ), ( ""libb.so"", [ ""baz"" ] ) ]. For each library/symbol-set pair you can install a custom MaterializationUnit using JITDylib::define.; Step 2: In the custom MaterializationUnit's materialize function you'll walk the map from before, do the library load, and then resolve the symbols. Since step 2 happens outside the session lock the idea is that it should prevent the kind of deadlock that you're seeing. Unfortunately if you can reference JIT'd code from static initializers in precompiled code then there's still a chance for similar failures. Consider a precompiled ""libx.so"" containing a global ""x"" and a static constructor that calls a JIT'd function ""f"" which uses the ""x"" from ""libx.so"" (a circular reference). I believe this will result in starvation or deadlock (depending on the number of threads involved). The failure path looks like this:. 1. A lookup for ""x"" enters the generator, which discovers that ""libx.so"" provides ""x"" and creates a MaterializationUnit, MU, to load ""libx.so"" and resolve ""x"".; 2.1 Outside the lock, MU dlopens ""libx.so""... ; 2.2. dlopen runs the initializers for ""libx.so"" which triggers a lookup in the JIT for ""f"".; 2.2.1. The lookup for ""f"" finds and runs the materializer for ""f"".; 2.2.2. The materializer for ""f"" reaches JITLink, which tries to resolve symbol ""x"". There is no work to trigger (we started materializing it already in (2.1)), so the link is suspended pending resolution of ""x"". Critically, the dlopen cannot complete until the link completes.; 2.2. MU would dlsym ""x"", but it's blocked waiting on the dlopen to finish. And we're deadlocked again. The root cause of the problem is that ld.so and the JIT don't communicate immediately about symbol resolutions. What we really wanted was for the dlopen to registe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1104564382:1649,depend,depending,1649,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1104564382,1,['depend'],['depending']
Integrability,dictionary payload parsing diagnostics: no more error message when header not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:54,message,message,54,https://root.cern,https://github.com/root-project/root/issues/6791,1,['message'],['message']
Integrability,"dientJobTest cases to test all the above (and below) changes. - Offset synchronization:; * LikelihoodWrapper and LikelihoodGradientWrapper now store a shared_ptr to the offsets instead of raw offsets. At construction time within a MinuitFcnGrad, they get passed the same single offset object so that it is always kept synced between the different likelihood calculators. If it isn't synced and the likelihood gets different offsets at different times, the minimizer understandably gets very confused. This was the case before this commit, which was, in fact, a bug.; * For LikelihoodJob and LikelihoodGradientJob, the offsets are also synchronized to all workers via update_state. For this, we simply check before evaluation whether offsets have changed since the previous evaluation and if so they are sent over the MultiProcess::Messenger. Note that while the LikelihoodGradientJob doesn't itself use the offset (it doesn't calculate the likelihood), it must still synchronize offsets, because during the gradient calculation the LikelihoodSerial objects on the workers are used to calculate the likelihoods there, so for them the offsets must be up to date.; * The LikelihoodJob contains a LikelihoodSerial member as well now. This allows the LikelihoodJob to trigger calculating the offsets on the master process before sending them to the workers.; * LikelihoodWrapper has some added private helper functions for managing offsets. - Other miscellaneous changes:; * LikelihoodWrapper::setApplyWeightSquared was implemented properly for RooSumL likelihoods as well, passing along the call to component RooUnbinnedLs. Note, however, that it is currently not reachable for users because there is no interface to pass this along from the RooMinimizer, which contains the MinuitFcnGrad, which contains the LikelihoodWrapper. A comment in MinuitFcnGrad.h refers to this, reminding future devs to also flip offsets_reset_ when (un)setting squared weights.; * LikelihoodWrapper now holds the likelihood_ty",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:2720,synchroniz,synchronize,2720,https://root.cern,https://github.com/root-project/root/pull/12202,1,['synchroniz'],['synchronize']
Integrability,"dir/src/VariableSelectionRule.cxx.o ../../dictgen/CMakeFiles/Dictgen.dir/src/XMLReader.cxx.o CMakeFiles/MetaCling.dir/rootclingTCling.cxx.o CMakeFiles/MetaCling.dir/ClingRAII.cxx.o CMakeFiles/MetaCling.dir/TCling.cxx.o CMakeFiles/MetaCling.dir/TClingBaseClassInfo.cxx.o CMakeFiles/MetaCling.dir/TClingCallbacks.cxx.o CMakeFiles/MetaCling.dir/TClingCallFunc.cxx.o CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o CMakeFiles/MetaCling.dir/TClingDataMemberInfo.cxx.o CMakeFiles/MetaCling.dir/TClingDeclInfo.cxx.o CMakeFiles/MetaCling.dir/TClingDiagnostics.cxx.o CMakeFiles/MetaCling.dir/TClingMemberIter.cxx.o CMakeFiles/MetaCling.dir/TClingMethodArgInfo.cxx.o CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o CMakeFiles/MetaCling.dir/TClingValue.cxx.o -Wl,-rpath,:::::::::::::::::::::::: -Wl,--unresolved-symbols=ignore-in-object-files ; ```; 2. When linking the executable a built time - dependent on `--no-undefined` in the CMAKE_EXE_LINKER_FLAGS; 3. At runtime at startup, when the runtime linker uses LD_BIND_NOW (man ld.so) - either set via env variable, or by default with `-Wl,-z,now`; 4. At runtime when the symbol is used the first time (without LD_BIND_NOW). > Unfortunately I cannot reproduce this on my end. It's correct that only a few files are compiled with `-fno-rtti`, all others including `TCling.cxx` interface with the rest of ROOT and must be built with RTTI. They should never contain code that references RTTI of LLVM classes, and while it's possible that we overlooked something I don't quite understand why we can only observe the problem in very limited environments... See above for what has been overlooked. `TCling.cxx` calls the `ScopeInfo` dtor, and thus references its vtable. Are you using Clang or GCC for compiling? Which version?. Have you verified `-Wl,--no-undefined` is actually used when linking `rootcling`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1207946705:3153,depend,dependent,3153,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1207946705,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"dk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 Apr 30 18:16 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 Sep 16 20:47 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 Aug 21 11:15 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 Sep 16 20:47 MacOSX15.sdk -> MacOSX15.0.sdk. $ clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/stognini -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:1545,contract,contract,1545,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,2,['contract'],['contract']
Integrability,"dk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 Sep 25 18:33 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 Sep 25 18:29 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 Sep 25 18:31 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 Sep 25 18:29 MacOSX15.sdk -> MacOSX15.0.sdk; + clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.module -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Applications/Xcode.app/Contents/Developer/Pla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:1813,contract,contract,1813,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,2,['contract'],['contract']
Integrability,"doing more complex analyses with RDF. the first line of the [RDF docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html) says `ROOT's RDataFrame offers a high level interface for analyses of data stored in TTree, CSV's and other data formats. `. Just by the fact that I can read and process other formats than TTree I would say that in general RDF is not meant to be treated like a TTree. Otherwise I would also have to say that RDF is meant to be treated like a CSV file or something similar. I did not refer to the documentation but to how people would actually use this class. 99% of people do not read CSV files with ROOT and `RDataFrame` will be mostly used to interact in a simple and quick way with trees. > ; > > there should be a function that allows us to merge them; > ; > If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing datasets; > df_1=ROOT.RDataFrame('tree', file_path_1); > df_2=ROOT.RDataFrame('tree', file_path_2); > ; > # creating new columns in the datasets; > df_1=df_1.Define('identity', '+1'); > df_2=df_2.Define('identity', '+2'); > ; > # Merging the datasets in memory; > df_3 = df_1.Merge(df_2); > # Opening a new file and save the merged dataset into the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-927331768:1375,interface,interface,1375,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768,2,['interface'],['interface']
Integrability,doing the merge resolution through the git interface did not workout well :( ... . @bellenot Can you rebase this branch? Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3335#issuecomment-461148969:43,interface,interface,43,https://root.cern,https://github.com/root-project/root/pull/3335#issuecomment-461148969,1,['interface'],['interface']
Integrability,"dule 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]; 14:16:07 #include <ROOT/TPadPainter.hxx>; 14:16:07 ^; 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to; 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system; 14:16:07 module if you provided your own system modulemap file:; 14:16:07 ROOTGpadv7 [system] { ... }; 14:16:07 While building module 'ROOTGraphicsPrimitives':; 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:; 14:16:07 In file included from <module-includes>:1:; 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:; 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives; 14:16:07 #include ""ROOT/TDrawingAttr.hxx""; 14:16:07 ^; 14:16:07 In file included from input_line_13:10:; 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'; 14:16:07 #include <ROOT/TPadPainter.hxx>; 14:16:07 ~~~~~~~~^; 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h); 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so; ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2091#issuecomment-392598607:1114,depend,dependency,1114,https://root.cern,https://github.com/root-project/root/pull/2091#issuecomment-392598607,1,['depend'],['dependency']
Integrability,"during its build:. ![root-6 20 08-build](https://user-images.githubusercontent.com/30694331/94133565-1d97ec80-fe61-11ea-927d-94b8926cd41b.png). The build starts ""pretty much"" at the left hand side of the timeline, and lasts until ""pretty much"" the right hand side of it. As you can see, the build starts out very well. Building LLVM scales perfectly to 64 threads. And I believe it would scale well to even beyond that. But once the LLVM build is done, many bottlenecks show up. First there is a big bottleneck with building `libCling` and `rootcling`, but after that the build of `libRIO` is also taking a surprising amount of time. And the build is stuck waiting for all of these. Towards the end things improve a bit once more, as many libraries / source files can build in parallel once more. But even then, very rarely does the build manage to make use of all of the available cores. ## Optional: share how it could be improved. From a quick glance it seems that ROOT's CMake configuration sets up way too many unnecessary dependencies between its build targets. Most of the issues seem to arise from how the dictionary generation is set up as far as I can see. In ATLAS I use the following code to set up the generation of dictionary source files:. https://gitlab.cern.ch/atlas/atlasexternals/-/blob/master/Build/AtlasCMake/modules/AtlasDictionaryFunctions.cmake. And that provides a much better behaviour. Mainly because in ATLAS's setup dictionary generations do not need to wait for anything. Even if the library that a dictionary is being produced for depends on a number of upstream libraries, the dictionary for that library can be generated before all the upstream libraries would have finished building. In practice this actually means that the start of any ATLAS software build is dominated by running dictionary generation. As GNU Make and Ninja both prefer running those build steps first. (As they do not have any dependencies themselves.). The reason I blame the dictionary generat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432:1337,depend,dependencies,1337,https://root.cern,https://github.com/root-project/root/issues/6432,1,['depend'],['dependencies']
Integrability,"dy. However, I would like to put this forward not as a ""final MR"" (would need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5151:1052,interface,interface,1052,https://root.cern,https://github.com/root-project/root/pull/5151,1,['interface'],['interface']
Integrability,"e (found version ""0.4"") ; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/hdd1/krasznaa/projects/root/buildtest; [bash][pcadp04]:buildtest >; ```. Wile previously it failed. ```; [bash][pcadp04]:buildtest > cmake -DROOT_DIR=/mnt/hdd1/krasznaa/projects/root/install/cmake ../findtester/; -- The CXX compiler identification is GNU 11.3.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; CMake Warning (dev) at /usr/share/cmake/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Policy CMP0074 is not set: find_package uses <PackageName>_ROOT variables.; Run ""cmake --help-policy CMP0074"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning. CMake variable Vdt_ROOT is set to:. /mnt/hdd1/krasznaa/projects/root/install/cmake/.. For compatibility, CMake is ignoring the variable.; Call Stack (most recent call first):; /mnt/hdd1/krasznaa/projects/root/install/cmake/ROOTConfig.cmake:140 (find_dependency); CMakeLists.txt:5 (find_package); This warning is for project developers. Use -Wno-dev to suppress it. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /mnt/hdd1/krasznaa/projects/root/install/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /mnt/hdd1/krasznaa/projects/root/install/cmake/ROOTConfig.cmake:140 (find_dependency); CMakeLists.txt:5 (find_package). -- Configuring incomplete, errors occurred!; See also ""/mnt/hdd1/krasznaa/projects/root/buildtest/CMakeFiles/CMakeOutput.log"".; [bash][pcadp04]:buildtest >; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14178#issuecomment-1840829056:2054,message,message,2054,https://root.cern,https://github.com/root-project/root/pull/14178#issuecomment-1840829056,1,['message'],['message']
Integrability,e -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -writeEmptyRootPCM Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFunc.h Math/PdfFuncMathCore.h Math/ProbFunc.h Math/ProbFuncMathCore.h Math/QuantFunc.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/io,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4346#issuecomment-528976735:3479,Integrat,IntegratorOptions,3479,https://root.cern,https://github.com/root-project/root/pull/4346#issuecomment-528976735,5,['Integrat'],['IntegratorOptions']
Integrability,"e 3.1+; - Support for adding as a subdirectory, using from build directory, or installing; - Works inside of ROOT or standalone; - Support for CPack binary `make package`; - Options for MPI and OpenMP integrated with main ROOT build; - Support for macOS, Linux, and Windows; - Version captured from ROOT; - CTest support; - `make docs` support (CMake 3.8+ only); * No need for extra ""prepare"" shell scripts, everything is done cross-platform through CMake and CPack; - Files can be copied in to make redistributable source with `-Dminuit2-standalone=ON`; - `make package_source` on Unix creates `.tar.gz` and `.zip` files (non-binary CPack); - `make purge` can remove copied files; * Helpful `README.md` and `DEVELOP.md` files. ### To produce a source distribution:; Make sure you have CMake 3.1+ (ROOT requires 3.4.3+, so that's likely). Then, from `/math/minuit2/build` run:. ```bash; cmake .. -Dminuit2-standalone=ON; make package_source; make purge; ```. ### You can also build Minuit2 for testing (standalone option on or off) with:. ```; make; ```. ### And you can make a prebuilt binary package with:. ```; make package; ```. (Standard CPack option for different generators apply.). ### Maintenence. If new files are needed by Minuit2 due to additions to ROOT, they should be added to the source files lists in `/math/minuit2/src/Math/CMakeLists.txt` and `/math/minuit2/src/CMakeLists.txt` (depending on if it's a new Math or Minuit2 requirement). ### Windows; This works on Windows; and you can even then create binary installers for Windows trivially. (Though ""package_source"" does not seem to be supported on Windows). This is the procedure on Windows:. First, install Visual Studio 17, Git, CMake, and NSIS. Then from the `math/minuit2/build directory` of your ROOT checkout, run:. ```; ""C:\Program Files\CMake\bin\cmake.exe"" ..; ""C:\Program Files\CMake\bin\cmake.exe"" --build .; ""C:\Program Files\CMake\bin\cmake.exe"" --build . --target package; ```. This creates a `.exe` installer file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680:1647,depend,depending,1647,https://root.cern,https://github.com/root-project/root/pull/1680,1,['depend'],['depending']
Integrability,"e ; -- Looking for gl2ps; -- Found gl2ps: /nix/store/lvm73632hn805cfwnrfqvy3zqcbn0z6k-gl2ps-1.4.2/lib/libgl2ps.so ; -- Looking for LibXml2; -- Found LibXml2: /nix/store/6pcf2hzn0d4kjddj8v2rzkpr99wwnfx9-libxml2-2.10.3/lib/libxml2.so (found version ""2.10.3"") ; -- Found OpenSSL: /nix/store/gw4hdapx2kipvjlwm8r4vg356abbi9xd-openssl-3.0.7/lib/libcrypto.so (found version ""3.0.7"") ; -- Looking for XROOTD; -- Found untagged Xrootd version: assuming very recent (setting -DROOTXRDVERS=1000000000); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- libXrdClient not found: use built-in; -- include_dirs: /nix/store/7g904n4vqsj77r8rmyxbrx0iza8sa4bw-xrootd-5.5.1-dev/include/xrootd;/build/source/proof/xrdinc; -- libraries: /nix/store/8ajjky60vk5dbrgciyppc8sw3dkrwb60-xrootd-5.5.1/lib/libXrdUtils.so;/nix/store/8ajjky60vk5dbrgciyppc8sw3dkrwb60-xrootd-5.5.1/lib/libXrdCl.so; -- Found FTGL: /nix/store/n8xnr87zp15xf74y52cprqy5ppk20wpp-ftgl-2.4.0/include ; -- Found PkgConfig: /nix/store/v73ppkjk196bwsjm6yy9yv80bdq7q68v-pkg-config-wrapper-0.29.2/bin/pkg-config (found version ""0.29.2"") ; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.8.3; -- Looking for TBB; -- Found TBB: /nix/store/2d2lhp3b4fwva16v4hnxswwc99z0k3ab-tbb-2020.3 (found suitable version ""2020.3"", minimum required is ""2018"") ; -- Performing Test tbb_exception_result; -- Performing Test tbb_exception_result - Success; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /nix/store/ar32z43050rasr218cqpg2lpk18axhrq-openblas-0.3.21/lib/libopenblas.so ; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Found LLVM_CONFIG as /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/bin/llvm-config; -- External llvm built in Release mod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:13158,wrap,wrapper-,13158,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['wrap'],['wrapper-']
Integrability,"e _NAME2_(name1,name2) name1##name2; ^; <scratch space>:81:1: note: expanded from here; R__dummyintdefault78; ^; /Users/uhlig/software/fair/cbm/cbmroot_git/analysis/PWGDIL/dielectron/papaframework/PairAnalysisHistos.h:78:1: note: previous definition is here; ClassImp(PairAnalysisHn); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:361:24: note: expanded from macro 'ClassImp'; #define ClassImp(name) ClassImpUnique(name,default); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:356:21: note: expanded from macro 'ClassImpUnique'; static int _R__UNIQUE_(_NAME2_(R__dummyint,key)) __attribute__((unused)) = \; ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:456:27: note: expanded from macro '_R__UNIQUE_'; # define _R__UNIQUE_(X) _R__JOIN_(X,__LINE__); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:453:27: note: expanded from macro '_R__JOIN_'; # define _R__JOIN_(X,Y) _NAME2_(X,Y); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:435:33: note: expanded from macro '_NAME2_'; # define _NAME2_(name1,name2) name1##name2; ^; <scratch space>:59:1: note: expanded from here; R__dummyintdefault78; ```. ### Expected behavior. The code should compile without problems. ### To Reproduce. Put together some code which by chance has two ClassImp statements in the same line in two different files which end up in the same compilation unit.; In the end it turned out that the name expanded from the ClassImp statements does not depend on the name of the class but only one the line of the ClassImp statement in the code. Both calls. `ClassImp(PairAnalysisSpectrum)` . and . `ClassImp(PairAnalysisHn)`. generated the same name. `R__dummyintdefault78`. which is only defined by the line number. Adding one empty line in one of the files work around the problem. ### Setup. 1. ROOT version: 6.22.08; 2. Operating system: macosx 11 and 12. Probably will fail also on other systems and with newer ROOT versions. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10948:2902,depend,depend,2902,https://root.cern,https://github.com/root-project/root/issues/10948,1,['depend'],['depend']
Integrability,"e best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] Refactoring the switch statements if possible; - [ ] Adapt the Mapreduce signature to allow returning [something other than T](https://github.com/root-project/root/pull/6327#discussion_r526016153)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327:2393,interface,interface,2393,https://root.cern,https://github.com/root-project/root/pull/6327,3,"['depend', 'interface']","['dependencies', 'interface']"
Integrability,"e class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime6gClingE' unresolved while linking [cling interface function]!; You are probably missing the definition of cling::runtime::gCling; Maybe you need to load the corresponding shared library?; root [1]; ```; A really interesting observation is that `root.exe` includes and links to the CUDA SDK by default when it is available. ```C++; $ root.exe ; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); (cudaError_t) (cudaSuccess) : (unsigned int) 0; root [1] ; ``` ; I think this is related to TMVA using the CUDA library. Unfortunately this is not enough, because without `-xcuda` root cannot compile CUDA specific things like kernel ( `_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:14213,interface,interface,14213,https://root.cern,https://github.com/root-project/root/issues/7518,1,['interface'],['interface']
Integrability,"e class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events; (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM.; (C++ compiled) struct CpuInfo_t //CPU load information.; (C++ compiled) struct MemInfo_t //Memory utilization information.; (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases; (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching.; (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens.; (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators; (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes; (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class; (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor; (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument; (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:3437,Wrap,Wrapper,3437,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,1,['Wrap'],['Wrapper']
Integrability,e compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.dir\Release\SearchableTableEmitter.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.vcxproj] ; - [2020-05-12T16:06:25.569Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\utils\TableGen\PseudoLoweringEmitter.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.dir\Release\PseudoLoweringEmitter.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.vcxproj] ; - [2020-05-12T16:06:48.489Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/OPENUI5-prefix/src/OPENUI5-stamp/extract-OPENUI5.cmake:33 (message): ; - [2020-05-12T16:06:52.651Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-build-Release.cmake:49 (message): ; - [2020-05-12T16:06:57.225Z] CMake Error at CFITSIO-stamp/CFITSIO-download-Release.cmake:49 (message): ; - [2020-05-12T16:07:02.220Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/builtins/pcre/PCRE-prefix/src/PCRE-stamp/PCRE-configure-Release.cmake:49 (message): ; - [2020-05-12T16:07:02.512Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/googletest-prefix/src/googletest-stamp/googletest-configure-Release.cmake:49 (message): ; - [2020-05-12T16:07:02.807Z] obj.clang-tblgen.dir\Release\obj.clang-tblgen.lib : fatal error LNK1108: cannot write file at 0x10000 [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj] ; - [2020-05-12T16:07:04.575Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5603#issuecomment-627439886:2381,message,message,2381,https://root.cern,https://github.com/root-project/root/pull/5603#issuecomment-627439886,5,['message'],['message']
Integrability,"e configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```; The following tests FAILED:; 	 1 - clingtest-check-cling (Failed); 	 13 - pyunittests-pyroot-dependency-versions (Failed); 	 68 - pyunittests-pyroot-numbadeclare (Not Run); 	 69 - test-import-numba (Failed); 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed); 	282 - test-stressmathcore (Failed); 	307 - test-TFormulaTests (Failed); 	800 - tutorial-pythia-pythiaExample (Failed); 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run); 	1143 - test-import-numba (Failed); 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta-ROOT-7462-make (Failed); 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed); 	2230 - roottest-root-tree-cache-perfstattest (Failed); ```; * You can ignore the failures for numba, as I don't have that installed.; * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. ; * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BU",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:1223,depend,dependency-versions,1223,https://root.cern,https://github.com/root-project/root/issues/9436,1,['depend'],['dependency-versions']
Integrability,"e grid. We do need to postprocess these ntuples anyway, so the idea is to slip in a small function to add this index. ; > ; > * calculate the index from the value of `rdfentry_`, knowing how many entries are in each tree and their ordering inside the TChain. It is dangerous and requires adding too many lines of code. > * store some unique identifier in each tree when it's produced (even a timestamp works, and although it's not elegant you don't have to worry about having that same value stored in each event because it will compress almost perfectly, occupying very little extra space on disk). With that unique identifier per tree you can build another tree that serves as a lookup table between id and index. It will have two branches, `id` and `index`, with the first taking the values of the ids of each tree and the second being an index from 0 to nTrees-1. Then you can use `TTree::BuildIndex` and `TChain::AddFriend` to add that lookup table tree as a friend of the original chain and thanks to `BuildIndex` the correct value of `index` will be returned for each event depending on the value of `id` in the original chain. More info at https://root.cern/manual/trees/#indexing-trees. We would have to run again all the jobs in the grid to store a unique ID. However the name of the file identifies it, so we deduce the index with the filename. The rest of the solution is close to what I did below.; ; > * do a pass on each input tree to calculate whatever other quantities you need to calculate (let's call these trees `aux1`, `aux2` etc.), then make a TChain out of the original trees, another TChain out of the `aux` trees, and then add the second chain as a friend of the first (effectively creating a single large ""virtual"" TTree with everything in it). OK, that is closer to what we need, I managed to get the code below to add these indexes in a slightly different way from what you said (or maybe the same if I misunderstood you), i.e. using chains and friend trees:. ```python; im",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-932494638:1807,depend,depending,1807,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638,2,['depend'],['depending']
Integrability,"e issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a ; ```python; print(client.scheduler_info()); ```; call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9429#issuecomment-992489655:1003,interface,interface,1003,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992489655,1,['interface'],['interface']
Integrability,e logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2273,message,message,2273,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,e output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/63576/console).; ### Errors:; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - CMake Error at VDT-stamp/VDT-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - CMake Error at TBB-stamp/TBB-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - CMake Error at VC-stamp/VC-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/work,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4097#issuecomment-512765959:944,message,message,944,https://root.cern,https://github.com/root-project/root/pull/4097#issuecomment-512765959,1,['message'],['message']
Integrability,"e possible, have full felxibility and stay consistent with the other TGraph classes which are all using pointers for 1D arrays. Nevertheless I understand your concerns since double pointers for arrays are a rather dirty way of programming. I think it might be a good compromise to use the ROOT array wrapper class TArrayD. Then the two dimensional Arrays could be represented by an 1D array of TArrayD objects. The functions SetPointEY, SetPointEYL and SetPointEYH were implemented by me to keep full consistency with the TGraphAsymmErrors class. They are overloaded with one version taking the point and an array in which case the array cointains all errors of the named point for the different dimensions. My idea was to alter the TGraphAsymmErrors notation as little as possible so TGraphAsymmErrors::SetPointEY(i, el, eh) would translate to TGraphMultiErrors::SetPointEY(i, &el, &ey) in the case of only one error dimension which would be equal to a TGraphAsymmErrors. The idea of the function SetDimensionEY, SetDimensionEYL and SetDimensionEYH is basically the same. They set the errors of all points in the given dimension. My idea was to think of a way to convert from multiple TGraphAsymmErrors objects to one single TGraphMultiErrors object like in this small example:; ```; TGraphAsymmErrors* statisticErrors = ...; TGraphAsymmErrors* systematicErrors = ... TGraphMultiErrors* theGraph = new TGraphMultiErrors(statisticErrors->GetN(), 2, statisticErrors->GetX(), statisticErrors->GetY(), statisticErrors->GetEXlow(), statisticErrors->GetEXhigh());; theGraph->SetDimensionEY(0, statisticErrors->GetEYlow(), statisticErrors->GetEYhigh());; theGraph->SetDimensionEY(1, systematicErrors->GetEYlow(), systematicErrors->GetEYhigh());; ```. But again I see your point since there is no check whether the passed array has a sufficient size. Maybe here it would also be a good solution to use the wrapper class TArrayD instead since it provides the neccessary information and is rather lightweight.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-516408489:2122,wrap,wrapper,2122,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-516408489,1,['wrap'],['wrapper']
Integrability,"e provided `runit` script to configure, build, and execute the tests. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Problem verified on 6.24/06 and 6.25/02.; 2. SLF7.; 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context; <!--; Add any other context about the problem here.; -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:; ```Console; Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system.; ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception?. ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz); * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz); * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583:2141,message,messages,2141,https://root.cern,https://github.com/root-project/root/issues/9583,1,['message'],['messages']
Integrability,"e same, while ""on demand"" goes to 41. This also results in a 60MB jump in memory:. ```bash; → ROOTDEBUG=7 root.exe -l -b -q ~/public/AO2D.root 2>&1 | grep Preloading | wc -l; 120. → ROOTDEBUG=7 root.exe -l -b -q ~/public/AO2D.root 2>&1 | grep 'on demand' | cut -d' ' -f 2 | sort | uniq | wc -l; 41. → /usr/bin/time -v root.exe -l -b -q ~/public/AO2D.root. Attaching file /afs/cern.ch/user/e/eulisse/public/AO2D.root as _file0...; (TFile *) 0x3910f20; Command exited with non-zero status 255; Command being timed: ""root.exe -l -b -q /afs/cern.ch/user/e/eulisse/public/AO2D.root""; User time (seconds): 0.42; System time (seconds): 0.30; Percent of CPU this job got: 72%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:01.01; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 207928; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 76766; Voluntary context switches: 9921; Involuntary context switches: 28; Swaps: 0; File system inputs: 0; File system outputs: 0; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 255; ```. The difference indeed seems to come from loading SOFIE and PyMVA on demand (why?). ```bash; → diff -Naur =(ROOTDEBUG=7 root.exe -l -b -q ~/public/AO2D.root 2>&1 | grep Preloading) =(ROOTDEBUG=7 root.exe -l -b -q 2>&1 | grep Preloading); --- /tmp/zsh3krahi 2023-06-28 09:47:35.214307973 +0200; +++ /tmp/zshDEGUqN 2023-06-28 09:47:35.843315522 +0200; @@ -117,4 +117,3 @@; Info in <TCling::__LoadModule>: Preloading module MultiProc.; Info in <TCling::__LoadModule>: Preloading module Imt.; Info in <TCling::__LoadModule>: Preloading module MathCore.; -Info in <TCling::__LoadModule>: Preloading module Tree.; ```. ```bash; → diff -Naur =(ROOTDEBUG=7 root.exe -l -b -q ~/public/AO2D.root 2>&1 | grep 'on demand' | cut -d'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1611006906:3301,message,messages,3301,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1611006906,2,['message'],['messages']
Integrability,e specified comparator type does not provide a const call operator [-Wuser-defined-warnings] ; - /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__tree:1819:22: warning: the specified comparator type does not provide a const call operator [-Wuser-defined-warnings] . ### Failing tests:; - [projectroot.roottest.cling.bytecode.roottest_cling_bytecode_runarrayhist_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.cling/bytecode/roottest_cling_bytecode_runarrayhist_WILL_FAIL/); - [projectroot.roottest.root.hist.roottest_root_hist_mergeTH2Poly](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root/hist/roottest_root_hist_mergeTH2Poly/); - [projectroot.test.test_stressfit_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot/test/test_stressfit_interpreted/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execBrowseNonAccessibleType](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execBrowseNonAccessibleType/); - [projectroot.roottest.root.multicore.roottest_root_multicore_exectstformula](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_exectstformula/); - [projectroot.roottest.root.multicore.roottest_root_multicore_TThreadedObjectAutoMemManagement](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_TThreadedObjectAutoMemManagement/); - [projectroot.roottest.root.tree.reader.rootte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1911#issuecomment-384237158:1488,interface,interface,1488,https://root.cern,https://github.com/root-project/root/pull/1911#issuecomment-384237158,1,['interface'],['interface']
Integrability,"e to a negative value causing that many clusters of baskets kept in memory Just some indentation changes.; pick c25ea30332 Make some clang format changes; pick dae3241bee Fix whitespace; pick baa80f53a4 Fix memory leak; pick a8324c92ee Undo TBranch version change, thanks Philippe.; ```. Then, you can change the commits you want to fuse from `pick` to `fixup`, which will combine them with the previous commit, like this:. ```; pick ede15457be Adding new option to set MaxVirtualSize to a negative value causing one cluster of baskets kept in memory; fixup 3035c73a31 Adding new option to set MaxVirtualSize to a negative value causing that many clusters of baskets kept in memory; fixup 275d909504 Adding new option to set MaxVirtualSize to a negative value causing that many clusters of baskets kept in memory Just some indentation changes.; fixup c25ea30332 Make some clang format changes; fixup dae3241bee Fix whitespace; fixup baa80f53a4 Fix memory leak; fixup a8324c92ee Undo TBranch version change, thanks Philippe.; ```. Then you save and quit, and git will rebase for you, leaving you with a single commit:. ```; commit 304f38e812556a7d8c4dcaaf5a71fca4d3ba9bf2; Author: Peter van Gemmeren <gemmeren@anl.gov>; Date: Tue Jul 18 17:47:58 2017 -0500. Adding new option to set MaxVirtualSize to a negative value causing one cluster of baskets kept in memory; ```. Since the message is quite long, I also did `git commit --amend`, which lets you edit your message and save it. At the end, I have this:. ```; commit 891b51caa6089e13997e2d2e0aa25f869970e878; Author: Peter van Gemmeren <gemmeren@anl.gov>; Date: Tue Jul 18 17:47:58 2017 -0500. [TBranch] Add new option to help in keeping baskets in memory; ; Set MaxVirtualSize to a negative value causing one cluster of baskets; kept in memory.; ```. The final commit has all the changes combined, and a nice short message and separate long explanation. Let me know if you have any problems reproducing, otherwise I can do this at the end. Cheers,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796#issuecomment-317761739:2023,message,message,2023,https://root.cern,https://github.com/root-project/root/pull/796#issuecomment-317761739,3,['message'],['message']
Integrability,"e.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/13.0.0/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -I/Users/suter_a/Applications/root/root_exec/include -I/opt/local/include -I/Users/suter_a/Applications/musrfit/src/include -I/Users/suter_a/Applications/musrfit/src/classes PUserFcnBase.h /Users/suter_a/Applications/musrfit/src/include/PUserFcnBaseLinkDef.h; cd /Users/suter_a/Applications/musrfit/build && /opt/local/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/suter_a/Applications/musrfit /Users/suter_a/Applications/musrfit/src/classes /Users/suter_a/Applications/musrfit/build /Users/suter_a/Applications/musrfit/build/src/classes /Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake --color=; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/CMakeDirectoryInformation.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Scanning dependencies of target PUserFcnBase; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/classes/CMakeFiles/PUserFcnBase.dir/build.make src/classes/CMakeFiles/PUserFcnBase.dir/build; ... And all the further root_generate_dictionary work as well. Does this help?. Cheers,; Andreas. PS: Machine I have tested it on: ; Darwin Kernel Version 21.3.0: Wed Jan 5 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_ARM64_T8101 arm64. ________________________________. Paul Scherrer Institut. Dr. Andreas Suter; Laboratory for Muon-Spin Spectroscopy; Swiss M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1061481610:4280,Depend,Dependee,4280,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1061481610,1,['Depend'],['Dependee']
Integrability,e.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/TransformationHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Types.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/VarTransformHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/VariableTransformBase.h: mutable MsgLogger* fLogger; //! message logger; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2657,message,message,2657,https://root.cern,https://github.com/root-project/root/issues/9792,13,['message'],['message']
Integrability,e/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.036Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.297Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.557Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.817Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:28.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.858Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:30.685Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 55 more. ### Failing tests:; - [projectroot.roottest.root.d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803932665:1386,Interface,InterfaceUtils,1386,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803932665,1,['Interface'],['InterfaceUtils']
Integrability,e/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.297Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.557Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.817Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:28.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.858Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:30.685Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 55 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803932665:1589,Interface,InterfaceUtils,1589,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803932665,1,['Interface'],['InterfaceUtils']
Integrability,e/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.557Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.817Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:28.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.858Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:30.685Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 55 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803932665:1792,Interface,InterfaceUtils,1792,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803932665,1,['Interface'],['InterfaceUtils']
Integrability,e/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.817Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:28.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.858Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:30.685Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 55 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803932665:1995,Interface,InterfaceUtils,1995,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803932665,1,['Interface'],['InterfaceUtils']
Integrability,e/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:28.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.858Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:30.685Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 55 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.ce,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803932665:2198,Interface,InterfaceUtils,2198,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803932665,1,['Interface'],['InterfaceUtils']
Integrability,e/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -I/usr/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/gpad/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc ROOT/RCsvDS.hxx ROOT/RDataFrame.hxx ROOT/RDataSource.hxx ROOT/RDFHelpers.hxx ROOT/RLazyDS.hxx ROOT/RResultHandle.hxx ROOT/RResultPtr.hxx ROOT/RRootDS.hxx ROOT/RSnapshotOptions.hxx ROOT/RTrivialDS.hxx ROOT/RDF/ActionHelpers.hxx ROOT/RDF/ColumnReaderUtils.hxx ROOT/RDF/GraphNode.hxx ROOT/RDF/GraphUtils.hxx ROOT/RDF/HistoModels.hxx ROOT/RDF/InterfaceUtils.hxx ROOT/RDF/RActionBase.hxx ROOT/RDF/RAction.hxx ROOT/RDF/RActionImpl.hxx ROOT/RDF/RColumnRegister.hxx ROOT/RDF/RNewSampleNotifier.hxx ROOT/RDF/RSampleInfo.hxx ROOT/RDF/RDefineBase.hxx ROOT/RDF/RDefine.hxx ROOT/RDF/RDefineReader.hxx ROOT/RDF/RDSColumnReader.hxx ROOT/RDF/RColumnReaderBase.hxx ROOT/RDF/RCutFlowReport.hxx ROOT/RDF/RDisplay.hxx ROOT/RDF/RFilterBase.hxx ROOT/RDF/RFilter.hxx ROOT/RDF/RInterface.hxx ROOT/RDF/RJittedAction.hxx ROOT/RDF/RJittedDefine.hxx ROOT/RDF/RJittedFilter.hxx ROOT/RDF/RJittedVariation.hxx ROOT/RDF/RLazyDSImpl.hxx ROOT/RDF/RLoopManager.hxx ROOT/RDF/RMergeableValue.hxx ROOT/RDF/RNodeBase.hxx ROOT/RDF/RRangeBase.hxx ROOT/RDF/RRange.hxx ROOT/RDF/RResultMap.hxx ROOT/RDF/RSlotStack.hxx ROOT/RDF/RTreeColumnReader.hxx ROOT/RDF/RVariation.hxx ROOT/RDF/RVariationBase.hxx ROOT/RDF/RVariationReader.hxx ROOT/RDF/RVariationsDescription.hxx ROOT/RDF/RVariedAction.hxx ROOT/RDF/Utils.hxx ROOT/RDF/PyROOTHelpers.hxx ROOT/RDF/RDFDescription.hxx ROOT/RSqliteDS.h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675#issuecomment-1145981138:4301,Interface,InterfaceUtils,4301,https://root.cern,https://github.com/root-project/root/pull/8675#issuecomment-1145981138,1,['Interface'],['InterfaceUtils']
Integrability,e/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -I/usr/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/gpad/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc ROOT/RCsvDS.hxx ROOT/RDataFrame.hxx ROOT/RDataSource.hxx ROOT/RDFHelpers.hxx ROOT/RLazyDS.hxx ROOT/RResultPtr.hxx ROOT/RResultHandle.hxx ROOT/RRootDS.hxx ROOT/RSnapshotOptions.hxx ROOT/RTrivialDS.hxx ROOT/RDF/ActionHelpers.hxx ROOT/RDF/ColumnReaderUtils.hxx ROOT/RDF/GraphNode.hxx ROOT/RDF/GraphUtils.hxx ROOT/RDF/HistoModels.hxx ROOT/RDF/InterfaceUtils.hxx ROOT/RDF/RActionBase.hxx ROOT/RDF/RAction.hxx ROOT/RDF/RBookedDefines.hxx ROOT/RDF/RNewSampleNotifier.hxx ROOT/RDF/RSampleInfo.hxx ROOT/RDF/RDefineBase.hxx ROOT/RDF/RDefine.hxx ROOT/RDF/RDefineReader.hxx ROOT/RDF/RDSColumnReader.hxx ROOT/RDF/RColumnReaderBase.hxx ROOT/RDF/RCutFlowReport.hxx ROOT/RDF/RDisplay.hxx ROOT/RDF/RFilterBase.hxx ROOT/RDF/RFilter.hxx ROOT/RDF/RInterface.hxx ROOT/RDF/RJittedAction.hxx ROOT/RDF/RJittedDefine.hxx ROOT/RDF/RJittedFilter.hxx ROOT/RDF/RLazyDSImpl.hxx ROOT/RDF/RLoopManager.hxx ROOT/RDF/RMergeableValue.hxx ROOT/RDF/RNodeBase.hxx ROOT/RDF/RRangeBase.hxx ROOT/RDF/RRange.hxx ROOT/RDF/RSlotStack.hxx ROOT/RDF/RTreeColumnReader.hxx ROOT/RDF/Utils.hxx ROOT/RDF/PyROOTHelpers.hxx ROOT/RSqliteDS.hxx /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/LinkDef.h ; - [2021-10-21T07:53:28.459Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDF/RInterface.hxx:108:29: error: friend declaration of 'TriggerRun' does no,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9153#issuecomment-948352677:3792,Interface,InterfaceUtils,3792,https://root.cern,https://github.com/root-project/root/pull/9153#issuecomment-948352677,1,['Interface'],['InterfaceUtils']
Integrability,"e/src/TMath.cxx:3298:25: error: expected primary-expression before ‘&gt;’ token ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3298:27: error: ‘mask1’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3299:25: error: expected primary-expression before ‘&gt;’ token ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3299:27: error: ‘mask2’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3300:25: error: expected primary-expression before ‘&gt;’ token ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3300:27: error: ‘mask3’ was not declared in this scope . And 64 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400713921:1758,depend,depends,1758,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400713921,2,['depend'],['depends']
Integrability,"e/src/TSystem.cxx:746; 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362; 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737; 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660; 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116; 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389; 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471; 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153; 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174; 13: main in /opt/root_src/main/src/rmain.cxx:81; Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s); in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479; 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177; 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174; 7: main in /opt/root_src/main/src/rmain.cxx:81; Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s); in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirect",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:1478,depend,depends,1478,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['depend'],['depends']
Integrability,"e>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator==<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1833762580:2218,interface,interface,2218,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1833762580,1,['interface'],['interface']
Integrability,"eError: could not convert argument 2; 887: Failed to instantiate ""Histo1D(ROOT::RDF::TH1DModel*,std::string)""; 887: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 887: error code: 1; 887:; 887:; 10/16 Test #887: tutorial-dataframe-df014_CSVDataSource-py ................***Failed 5.75 sec; test 888; Start 888: tutorial-dataframe-df016_vecOps-py. 888: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df016_vecOps.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 888: Environment variables:; 888: ROOT_HIST=0; 888: Test timeout computed to be: 1500; 888: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 888: error code: -529697949; 888:; 888:; 11/16 Test #888: tutorial-dataframe-df016_vecOps-py .......................***Failed 4.51 sec; test 889; Start 889: tutorial-dataframe-df017_vecOpsHEP-py. 889: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df017_vecOpsHEP.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 889: Environment variables:; 889: ROOT_HIST=0; 889: Test timeout computed to be: 1500; 889: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 889: error code: -529697949; 889:; 889:; 12/16 Test #889: tutorial-dataframe-df017_vecOpsHEP-py ....................***Failed 5.05 sec; test 890; Start 890: tutorial-dataframe-df019_Cache-py. 890: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:11501,message,message,11501,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,eIT_E4typeEOS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]!; You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]!; You ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:3710,interface,interface,3710,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,1,['interface'],['interface']
Integrability,"eInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== by 0x7766985: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd; ==652727== . *** Break *** segmentation violation; ```; (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:; ```; $ CLING_DEBUG=1 root.exe ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |; | From heads/master@tags/v6-30-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6; #1 0x00007ff1c124b243 in do_syst",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2166043260:6605,wrap,wrapper,6605,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2166043260,1,['wrap'],['wrapper']
Integrability,"eTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/stognini -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.0.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:8468,protocol,protocols,8468,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,2,['protocol'],['protocols']
Integrability,"e_5:2:20: error: use of undeclared identifier 'any_undeclared_variable_here'; auto h1 = new int(any_undeclared_variable_here);; ^; ```; ```; [cling]$ if(true) {auto h1 = new int(any_undeclared_variable_here);}; input_line_4:2:30: error: use of undeclared identifier 'any_undeclared_variable_here'; if(true) {auto h1 = new int(any_undeclared_variable_here);}; ^; ```. In root, the first example gives a syntax error instead (which is already wrong). This is because `ROOT` tries to resolve `any_undeclared_variable_here` at runtime:; ```; root [0] auto h1 = new int(any_undeclared_variable_here);; ROOT_prompt_0:1:1: error: Syntax error; auto h1 = new int(any_undeclared_variable_here);; ^; FunctionDecl 0x55555714b7c8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'; |-ParmVarDecl 0x55555714b710 <col:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x555557161e30 <col:42, ROOT_prompt_0:3:1>; | |-DeclStmt 0x555557161e10 <line:1:1, col:48>; | | `-VarDecl 0x55555714b918 <col:1, col:47> col:6 h1 'int *':'int *' cinit; | | `-CXXNewExpr 0x555557161ce8 <col:11, col:47> 'int *' Function 0x55555714bb40 'operator new' 'void *(std::size_t)'; | | `-ParenListExpr 0x55555714bad0 <col:18, col:47> 'NULL TYPE'; | | `-DeclRefExpr 0x55555714ba90 <col:19> '<dependent type>' lvalue Var 0x55555714b988 'any_undeclared_variable_here' '<dependent type>'; | `-NullStmt 0x555557161e28 <line:2:1>; `-AnnotateAttr 0x55555714b9f0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; <<<NULL>>>; root [1] ; ```. And we get a segfault when added inside an if clause: ; ```; root [1] if(true) {auto h1 = new int(any_undeclared_variable_here);}; root.exe: /home/dvalapar/work/root/dev.bug-fixes/interpreter/llvm-project/clang/include/clang/AST/Type.h:752: const clang::ExtQualsTypeCommonBase* clang::QualType::getCommonPtr() const: Assertion `!isNull() && ""Cannot retrieve a NULL type pointer""' failed. Program received signal SIGABRT, Aborted.; __pthread_kill_i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13252#issuecomment-2082487744:1423,depend,dependent,1423,https://root.cern,https://github.com/root-project/root/issues/13252#issuecomment-2082487744,2,['depend'],['dependent']
Integrability,"ears in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: ; ```; tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1036,message,message,1036,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"ease search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integral works); # but not in the y project",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12646:1034,integrat,integration,1034,https://root.cern,https://github.com/root-project/root/issues/12646,1,['integrat'],['integration']
Integrability,"ebgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencies matching the selected feature set, then run `cmake` and `make` as suggested. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.04; OS Ubuntu 22.04 (amd64) `pbuilder` sandbox on 20.04 system; Source: official tarball. ### Ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:1676,depend,dependencies,1676,https://root.cern,https://github.com/root-project/root/issues/10777,1,['depend'],['dependencies']
Integrability,"ec/include -I/opt/local/include -I/Users/suter_a/Applications/musrfit/src/include -I/Users/suter_a/Applications/musrfit/src/classes PUserFcnBase.h /Users/suter_a/Applications/musrfit/src/include/PUserFcnBaseLinkDef.h; cd /Users/suter_a/Applications/musrfit/build && /opt/local/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/suter_a/Applications/musrfit /Users/suter_a/Applications/musrfit/src/classes /Users/suter_a/Applications/musrfit/build /Users/suter_a/Applications/musrfit/build/src/classes /Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake --color=; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/CMakeDirectoryInformation.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Scanning dependencies of target PUserFcnBase; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/classes/CMakeFiles/PUserFcnBase.dir/build.make src/classes/CMakeFiles/PUserFcnBase.dir/build; ... And all the further root_generate_dictionary work as well. Does this help?. Cheers,; Andreas. PS: Machine I have tested it on: ; Darwin Kernel Version 21.3.0: Wed Jan 5 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_ARM64_T8101 arm64. ________________________________. Paul Scherrer Institut. Dr. Andreas Suter; Laboratory for Muon-Spin Spectroscopy; Swiss Muon Source SµS; WLGA/119; Forschungsstrasse 111; CH - 5232 Villigen PSI; Switzerland. Tel.: +41 (0)56 310 4238; ________________________________. > On 7 Mar 2022, at 20:08, Axel Naumann ***@***.***> wrote:; > ; > ; > Can you share how you determined that DYLD_LIBRARY_PATH works?; > ; > —; > Reply to this email directly, view it on GitHub <https://github",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1061481610:4637,depend,depender,4637,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1061481610,1,['depend'],['depender']
Integrability,"eckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132; #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956; #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096; #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406; #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356; #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604; #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112; (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex; $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}; (gdb) . ```. Valgrind:; ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:; ```; Thread 1 ""runGUI"" received signal SIGINT, Interrupt.; futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183; 183	../sysdeps/nptl/futex-internal.h: No such file or directory.; (gdb) info threads; Id Target Id Frame ; * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183; 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183; (gdb) thread apply all bt. Threa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-878288640:15210,Protocol,Protocol,15210,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-878288640,1,['Protocol'],['Protocol']
Integrability,"ect description of standard mixing in GCC documents, but it seems that they do not point out that changing standards will lead to changes in ABI compatibility (If so, it means that the backward compatibility of the C++ standard is violated, which seems serious). I tend to think that this compatibility is guaranteed, but it does require more evidence. > I also don't understand how `cxx20::span` would solve anything: we want users to be able to use the stdlib `span` with ROOT, if their stdlib provides it. In fact, if the user uses the same standard as ROOT, the current situation is very good. I propose to change the name on the premise that users are allowed to link to ROOT with different standards. Typically, if the user is using a higher standard, the `std::span` in the std library will be exposed and conflict with the ROOT version `std::(inline)__ROOT::span`. In order to resolve the conflict, we have to take the second place: if we use `cxx20::span` and provide an interface to convert from/to standard `std::span`, then even if there are differences in standards, the two sides will not interfere with each other. If users have `std::span`, they can use it; If not, they should not get an implementation from ROOT in the std namespace (which affects their subsequent upgrade to a higher version of the C++ standard). All in all, it provides an implementation independent of std when the true `std::span` is not available, and prevents name conflict when mixing the standard.; Of course, if want ROOT to use `std::span` of the standard library when feasible (e.g. complie with C++20), we can just use `cxx20::span` as the alias of `std::span`. However, after then the user cannot be allowed to go back to a standard lower than C++20, otherwise `span` will missing in the header file, and the ROOT internal implementation of `span` should not be use as the fallback - if so, there may be a compatibility problem, caused by the so-called ODR violation. > To come back to my question: shou",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311#issuecomment-1254659106:1875,interface,interface,1875,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1254659106,1,['interface'],['interface']
Integrability,"ect/root/io/io/src/TBufferMerger.cxx:117; #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>); at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51; #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>); at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52; #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0); at /usr/include/c++/10/bits/unique_ptr.h:85; #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182; #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (; this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456; #7 0x00000000004876c9 in ROOT::Internal::RDF::SnapshotHelperMT<int>::Finalize (this=0x16ecda0); at /home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/include/ROOT/RDF/ActionHelpers.hxx:1530; ```; And gdb tells us we're not dealing with a TMemFile anymore:; ```; (gdb) p this; $1 = (TFileMerger * const) 0x44b0108; (gdb) p this->fOutputFile; $2 = (TFile *) 0x4d63230; (gdb) p this->fOutputFile->InheritsFrom(""TMemFile""); $3 = false; ```; > Independently, before we close this, we need to understand why TTree::ChangeFile was triggered in the first place for a TMemFile (as the default size is .. 100GB). The original issue that triggered this investigation is in PyRDF (linked a few messages above). Unfortunately we don't have a full reproducer from the user, we just know that they were using IMT, although at some point in the discussion they tried with sequential execution and still got segfault. The fixes in this PR may be worth nonetheless though",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6570#issuecomment-705515934:2653,message,messages,2653,https://root.cern,https://github.com/root-project/root/pull/6570#issuecomment-705515934,1,['message'],['messages']
Integrability,"ect/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. On Linux, in a Juyter/ROOT Python notebook, every cell execution makes the `python` process open two ""files"":; ; lrwx------ 1 user users 64 2 Jun 22.33 77 -> /dev/pts/7; lr-x------ 1 user users 64 2 Jun 22.33 78 -> 'pipe:[214404]'; ; one to the terminal bound to the notebook server (`/dev/pts/7`), and another always a different pipe reading for nothing to write in it, e.g. from `lsof`:; ; python3.8 16586 user 78r FIFO 0,10 0t0 214404 pipe; ; These stay open, making the process reach the OS limit of open files sooner or later, at which point grief ensues.; Some commands (e.g. `matplotlib` figures) may create additional pairs out of the void. ### Expected behavior. The open file descriptor count should be roughly stable and not proportional to the number of executed cells. ### To Reproduce; ; jupyter --notebook # or root --notebook; ; then execute _(empty lines mark cell boundaries)_:; ```.py; import os; def printFiles(): print(f""PID={os.getpid()} files={len(os.listdir(f'/proc/{os.getpid()}/fd'))}""); printFiles(). printFiles(). printFiles(). printFiles(). import ROOT; printFiles(). printFiles(). printFiles(). printFiles(); ```; I get a file count of `43` or `44` on each cell before importing ROOT, and from the _next_ cell, each cell increments by 4 (`48`, `52`, ...).; The issue does not appear on plain `python`/`ipython`. ### Setup. Working with:; * Gentoo Linux, amd64, kernel 5.12.4 (last update a few days ago); * ROOT 6.24/00; * Python 3.8.10 (`dev-lang/python-3.8.10_p1` from Gentoo); * Jupyter 1.0.0; * ipython 7.24.0. I assume this issue is setup-dependent, or it would have been reported already... ([actually, it was in 2017](https://github.com/matplotlib/matplotlib/issues/8308)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8326:1957,depend,dependent,1957,https://root.cern,https://github.com/root-project/root/issues/8326,1,['depend'],['dependent']
Integrability,"ector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-30T07:27:04.442Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:27:04.442Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:27:04.442Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/TestStatistics/testLikelihoodGradientJob.cpp:467:53: warning: declaration of ‘likelihood’ shadows a member of ‘LikelihoodSimBinnedConstrainedTest_ConstrainedAndOffset_Test’ [-Wshadow] . ### Failing tests:; - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testLikelihoodGradientJob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131195/testReport/projectroot.roofit.roofitcore/test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368821:2968,synchroniz,synchronizeParameterSettings,2968,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368821,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"ector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x5E07061: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236); ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356); ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:217559,depend,depends,217559,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"ed -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling dataframe davix exceptions gdml gnuinstall http imt mathmore mlp minuit2 opengl pyroot roofit rpath runtime_cxxmodules shared ssl tmva tmva-cpu tmva-pymva spectrum x11 xml xrootd; -- Configuring done; CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:735 (add_dependencies):; The dependency target ""install-clang"" of target ""install-clang++"" does not; exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:736 (add_dependencies):; The dependency target ""install-clang-stripped"" of target; ""install-clang++-stripped"" does not exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:735 (add_dependencies):; The dependency target ""install-clang"" of target ""install-clang-cl"" does not; exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:18030,depend,dependency,18030,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['depend'],['dependency']
Integrability,"ediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_5d1f4f63db': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\InstCombine\LLVMInstCombine.vcxproj] ; - [2020-08-13T09:00:00.377Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(300,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_b65dea1ddb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Bitcode\Reader\BitReader.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Bitcode\Reader\LLVMBitReader.vcxproj] ; - [2020-08-13T09:00:00.377Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolVisitorCallbacks.h(33): message : see declaration of 'llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolSerializer.cpp)C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(2752,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_aa614ad0ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\TypeIndexDiscovery.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - [2020-08-13T09:00:00.766Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(1037,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_6b123fbbex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6170#issuecomment-673358392:2856,message,message,2856,https://root.cern,https://github.com/root-project/root/pull/6170#issuecomment-673358392,1,['message'],['message']
Integrability,educe public headers of `roobatchcompute`; 8b0a768f0c [RF] Refactor CUDA code in RooFit; 853e93a23a [RF] Add new `RooSpline` class contributed by Ruggero Turra; a5ebdc7291 [RF] Add documentation to `RooB*Decay` constructors; e5b7ba0d35 [RF] Make plotting of histograms work for all orders of magnitude; 95816f07c5 [RF] Modernize RooStepFunction and RooParametricStepFunction; 49b7c88181 [RF] Apply clang-tidy `readability-redundant-string-cstr`; bb1b313d7a [RF] Apply clang-tidy `modernize-use-bool-literals`; 52f67f84ec [RF] Apply clang-tidy `modernize-deprecated-headers`; 0fdb1e98ea [RF] Apply clang-tidy `readability-container-size-empty`; e7dfbfb1df [RF] Apply clang-format to RooGlobalFunc.cxx; 8462bb48e9 [RF] Apply clang-tidy modernize-use-nullptr; 4999c486de [RF] Use `RooFit::OwningPtr<T>` for RooAbsData member functions; 742d4018ad [RF] Don't store reference to `RooDataSet` in RooNDKeysPdf; 9b98ed181c [RF] Replace ReooRealAnalytic with `createIntegral` plus RooRealBinding; b3acd81280 [RF] Remove `RooIntegratorBinding` from public interface; e11a5e4d8c [RF] Improve `RooNumIntFactory` plugin system; 10085390e5 [RF] Generalize RooMultiVarGaussian to be constructed from TMatrixDBase; 37f1e60345 [RF] Refactor RooIntegrator1D to use free functions; 47332b7fd5 [RF] Add `testRooIntegrator1D.cxx`; 9009fb2218 [RF] Fix bug in NLL summation in RooBatchCompute. 695eeef717 [RF] No need to create NLL manually in testLikelihoodJob; 498e846794 [RF] New `gtest_wrapper.h` for gtest backwards compatibility; c8c5b0d9c0 [RF] Add unit test for binned likelihood optimization; aedc556499 [RF] Use `BinnedLikelihood` in createNLL also without RooSimultaneous; 1ab0f6ddba [RF] Remove default constructors of old test statistic classes; 8d79da19c3 [RF] Deprecate now unused RooDataWeightedAverage; 2de763972e [RF] Use BatchMode for data projection plots; a6d0b50a63 [RF] Remove useless variable ownership management from RooAbsData; f07f77dfad [RF] Replace `RooCmdArg()` with `{}` in default parameter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:1956,interface,interface,1956,https://root.cern,https://github.com/root-project/root/pull/13295,1,['interface'],['interface']
Integrability,"efault_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:3811,message,message,3811,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"elEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04; 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05; 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05; Integrating Polynomial 4th order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06; Integrating Polynomial 4th order, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06; 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02; 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03; [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig; Integrating Breit-Wigner distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05; 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02; 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25; Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001; Integrating Breit-Wigner distribution, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18; 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18; 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16; Integrating Breit-Wigner distribution, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3; 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25; 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2; [ OK ] Roo1DIntegrator.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:2432,Integrat,Integrating,2432,https://root.cern,https://github.com/root-project/root/pull/6632,1,['Integrat'],['Integrating']
Integrability,"elease/RootTestDriver.cmake:237 (message):; 891: error code: -529697949; 891:; 891:; 14/16 Test #891: tutorial-dataframe-df021_createTGraph-py .................***Failed Error regular expression found in output. Regex=[: error:] 4.85 sec; test 892; Start 892: tutorial-dataframe-df024_Display-py. 892: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df024_Display.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 892: Environment variables:; 892: ROOT_HIST=0; 892: Test timeout computed to be: 1500; 892: IncrementalExecutor::executeFunction: symbol '?printValue@cling@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PB_K@Z' unresolved while linking [cling interface function]!; 892: You are probably missing the definition of class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cling::printValue(unsigned __int64 const *); 892: Maybe you need to load the corresponding shared library?; 892: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 892: error code: -529697949; 892:; 892:; 15/16 Test #892: tutorial-dataframe-df024_Display-py ......................***Failed 9.91 sec; test 893; Start 893: tutorial-dataframe-df031_Stats-py. 893: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df031_Stats.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 893: Environment variables:; 893: ROOT_HIST=0; 893: Test timeout computed to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:15181,interface,interface,15181,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['interface'],['interface']
Integrability,"eloper/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/stognini -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.0.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Applications/Xcode.app/Contents/Deve",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:3886,protocol,protocols,3886,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,2,['protocol'],['protocols']
Integrability,"em externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable?. Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droof",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870411730:1691,depend,dependency,1691,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870411730,2,['depend'],['dependency']
Integrability,"ementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add inti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12723:2394,interface,interface,2394,https://root.cern,https://github.com/root-project/root/pull/12723,5,['interface'],['interface']
Integrability,"ementation. The degradation is caused by tbb function:. tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::receive_or_steal_task(long&). I suspect the reason is because #785 in the following function:. https://github.com/zzxuanyuan/root/blob/15cceff19b48dfe4a4b0c69c1ec07ea75bd1ccb5/tree/tree/src/TTreeCacheUnzip.cxx#L708. CreateTasks() explicitly creates 2 tasks (empty_task and MappingTask; and set_ref_count(2) means 2 tasks in total). The scheduler might make a better decision here since it knows there will be only one task except empty_task running in future. On the other hand, TTaskGroup uses tbb::task_group which calls the following function:. https://github.com/01org/tbb/blob/b9805bacadd4d0474fd3358cf0c7153042ce50c3/include/tbb/task_group.h#L108. task_group_base() also first creates a empty_task. However, it only creates 1 task(itself) by setting reference count as 1 (set_ref_count(1)). When it invoke another task by calling . https://github.com/01org/tbb/blob/b9805bacadd4d0474fd3358cf0c7153042ce50c3/include/tbb/task_group.h#L103. allocate_additional_child() will create a new task as child and increment reference count by 1. I guess accumulating tasks on-the-fly might degrade the performance since the tbb scheduler could spend more time on finding tasks to work on. In a short, I think explicitly defining the total number of tasks and task graph should have better performance (more efficient for scheduler I guess) than adding more tasks to task_group as the program runs. There are two alternative approaches that might improve the performance. ; 1. Since we have already know we will only have one task (except empty_task) to add into the task_group, we could revise TTaskGroup interface and notify it what task is going to run in advance.; 2. We could get rid of TTaskGroup in my current implemention and synchronously map baskets to different tasks. If we do not mind a little performance drops, the current implementation should be fine. Thanks,. Zhe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010:1928,interface,interface,1928,https://root.cern,https://github.com/root-project/root/pull/1010,1,['interface'],['interface']
Integrability,"ems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:1744,depend,dependency,1744,https://root.cern,https://github.com/root-project/root/issues/8518,1,['depend'],['dependency']
Integrability,"enceIT_E4typeEOS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunctio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1833762580:1504,interface,interface,1504,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1833762580,1,['interface'],['interface']
Integrability,"eneral use-cases; ROOT.ROOT.f(21) # Returns 42; ROOT.gInterpreter.ProcessLine(""cout << ROOT::f(21.0) << endl;"") # Prints 42.0. # Inject callable into dataframe; df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""rdfentry__"").Define(""ROOT::f(x)""); ```. The `DeclareCallable` dispatches between numba and the generic implementation. It tries to compile the thingy with numba (falls through silently) and otherwise tries the generic implementation (fails noisily).; However, you can force using the generic implementation or numba by using the decorators `DeclareGenericCallable` and `DeclareNumbaCallable`. The interface is exactly the same than for the general `DeclareCallable` decorator. In addition, you can now give the wrapped function a custom name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strongly typed, we have to declare the types of the inputs and the output; @ROOT.DeclareCppCallable([""float""], ""float""); def func(x):; return 2.0 * x. print(func(1.0)) # Prints 2.0; print(ROOT.PyROOT.func(1.0)) # Prints 2.0; ROOT.gInterpreter.ProcessLine(""cout << PyROOT::func(1.0) << endl;"") # Prints 2.0; ```. This allows us to run Python code in wrapped C++ workflow, e.g. for `RDataFrame`:. ```python; import ROOT; import numpy. @ROOT.DeclareCppCallable([""unsigned int""], ""float""); def func(x):; return numpy.power(x, 2). df = ROOT.RDataFrame(4).Define(""x"", ""rdfentry_"").Define(""y"", ""PyROOT::func(x)""); npy = df.AsNumpy(); print(npy[""x""]) # Prints [0, 1, 2, 3]; print(npy[""y""]) # Prints [0.0, 1.0, 4.0, 9.0]; ```. Finally, the approach is fully compatible with any custom C++ types you may have. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""; str",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:2599,wrap,wrapper,2599,https://root.cern,https://github.com/root-project/root/pull/3488,1,['wrap'],['wrapper']
Integrability,"enkins/job/root-pullrequests-build/169137/console).; ### Errors:; - [2023-02-22T14:26:32.477Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.477Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:10: error: ‘assert’ was not declared in this scope ; - [2023-02-22T14:26:32.477Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:466:10: error: ‘assert’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.989Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1440118758:1166,depend,depend,1166,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1440118758,1,['depend'],['depend']
Integrability,"eproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; f->Close();; return 0;; }; ```. Depending on how many times I invoke reproducer(f) I get different live allocations. For the example above:. ```; Flat profile (cumulative >= 1%). % total Total Calls Function; 100.0 1'441'603'989 32'730 <spontaneous> [1]; 100.0 1'441'593'885 32'636 _start [2]; 100.0 1'441'593'885 32'636 __libc_start_main [3]; 100.0 1'441'593'885 32'636 main [4]; 97.2 1'400'951'423 7'936 reproducer(TFile*) [5]; 97.0 1'397'652'408 2'508 ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) [6]; 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&) [7]; 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) [8]; 97.0 1'397'652'408 2'508 TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) [9]; 97.0 1'397'652'408 2'508 TBranch::GetBasketImpl(int, TBuffer*) [10]; 96.9 1'397'435'904 480 TBasket::ReadBasketBuffers(long long, int, TFile*) [11]; 96.9 1'397'435'904 480 TBufferFile::ReadArray(int*&) [12]; 2.8 40'642'462 24'700 TFile::Open(char const*, char con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11853#issuecomment-1341770769:4404,Depend,Depending,4404,https://root.cern,https://github.com/root-project/root/issues/11853#issuecomment-1341770769,1,['Depend'],['Depending']
Integrability,"equests-build/root/roofit/roofitcore/src/RooProdPdf.cxx:1069:22: error: cannot convert ‘std::vector&lt;std::unique_ptr&lt;RooArgSet&gt; &gt;*’ to ‘pRooLinkedList’ {aka ‘RooLinkedList*’} in assignment ; - /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooProdPdf.cxx:1157:36: error: ‘class std::vector&lt;std::unique_ptr&lt;RooArgSet&gt; &gt;’ has no member named ‘fwdIterator’; did you mean ‘iterator’? ; - /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooProdPdf.cxx:1839:24: error: cannot convert ‘std::vector&lt;std::unique_ptr&lt;RooArgSet&gt; &gt;*’ to ‘RooLinkedList*’ in assignment ; - /usr/include/c++/8/ext/new_allocator.h:136:4: error: no matching function for call to ‘std::unique_ptr&lt;RooArgSet&gt;::unique_ptr(RooAbsCollection*)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3509#issuecomment-470484693:1693,depend,depends,1693,https://root.cern,https://github.com/root-project/root/pull/3509#issuecomment-470484693,1,['depend'],['depends']
Integrability,equests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111619/console).; ### Warnings:; - [2021-03-22T09:19:17.164Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:17.423Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:17.423Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:17.681Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.248Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.248Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.766Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:19.025Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:20.220Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:52.151Z] include/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parame,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803916135:1143,Interface,InterfaceUtils,1143,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803916135,1,['Interface'],['InterfaceUtils']
Integrability,"er handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15197:1096,depend,depend,1096,https://root.cern,https://github.com/root-project/root/issues/15197,1,['depend'],['depend']
Integrability,"er&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C7E89: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:143); ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307); ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMetho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:12195,depend,depends,12195,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"er&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C7E91: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:143); ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307); ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMetho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:13982,depend,depends,13982,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"er/CMakeLists.txt` and runtime searches in `interpreter/cling/lib/Interpreter/CIFactory.cpp`. Below I'm listing a number of things I noticed, and I think it would be worth it to clean up this business:. - [ ] Let's start with the obvious: `CLING_CXX_PATH` and `CLING_CXX_HEADERS` are declared as `option`s in `interpreter/cling/lib/Interpreter/CMakeLists.txt`. This gives them a type of `BOOL` instead of `STRING` (or maybe `FILEPATH` for `CLING_CXX_PATH`?).; - [ ] If these variables are not set by the user, the build system starts to make some guesses. These choices are not `FORCE`d back into the `CACHE`, so it will be re-computed on every CMake invocation.; - [ ] The code for determining `CLING_CXX_PATH` has a large section dealing with `ccache` and `distcc`, which can only be taken if users set the environment variable `CXX=""ccache g++""`. Since CMake 3.4, it is recommended to instead use `CMAKE_CXX_COMPILER_LAUNCHER=ccache`, or ROOT's `ccache=ON`, so this may be obsolete?; - [ ] The header lookup is inconsistent between the build system and the `CIFactory`: The messages during configuration suggest that the order is; 1. Determined directories of C++ headers, or if not found; 2. Invocation of the compiler's full path, or as a fallback; 3. Invocation of the compiler's relative path. I think this matches the initial implementation, but it's not true anymore since commit afabc3b63885427251fd69b4aeda887bae35a289 switched to asking the compiler in the `PATH` first, to address a problem report from CMS.; - [ ] It also appears that the default guess from the build system is to *either* set the compiler's full path *or* its relative path. This is potentially problematic because changing the `PATH` could make the interpreter pick up a different compiler, even though it could still ask the existing full path. It's also inconsistent with respect to the previous point because a compiler in `PATH` takes precedence over the directories determined at build time, while a compiler out",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11612:1225,message,messages,1225,https://root.cern,https://github.com/root-project/root/issues/11612,1,['message'],['messages']
Integrability,"er` | `ESnapshotOutputFormat::kDefault` | `ESnapshotOutputFormat::kRNTuple` |. ## Implementation; As mentioned, the existing `Snapshot` interface is used. A new `SnapshotRNTupleHelper` has been created to handle the creation and writing of the RNTuple, akin to the existing `SnapshotHelper` (which has been renamed to `SnapshotTTreeHelper` for consistency). ### RLoopManager data source initialization (rev bbf221f); The snapshot action creates a new loop manager which manages the snapshotted data set. The loop manager gets initialized before the actual snapshotting takes place. Originally, the pointer to the data source owned by the loop manager was marked as `const`. Because the RNTuple's data source _has_ to be created after the loop manager, for this PR the `const` qualifier has been dropped. ### Move `ROOT::RDF::Experimental::FromRNTuple` (rev 0a29b02); For snapshotting RNTuples, we need to include the header file for RNTupleDS in `ActionHelpers.hxx`. To avoid dependency conflicts related to including `ROOT/RDataFrame.hxx`, the free `FromRNTuple` functions have been moved to a separate header. ## Current limitations and follow-ups; This PR adds the minimal functionality for (single-threaded) snapshotting to RNTuple. A number of follow-ups are foreseen:. ### RNTuple write options; Currently no RNTuple-specific write options have been added to `RSnapshotOptions` yet, except for compression settings which were already present as an option. Adding (a subset) of the other `RNTupleWriteOptions` is trivial. ### Default compression settings; `RSnapshotOptions`' default compression setting is 101 (Zlib). However, RNTuple's default compression setting is 505 (zstd). We could change the default compression setting to `kInherit` and decide which settings to use according to the target data format (unless explicitly set by the user, of course). ### Multithreaded snapshotting; This PR only adds single-threaded RNTuple snapshotting. Multithreaded (and parallel) snapshotting will b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15750:1706,depend,dependency,1706,https://root.cern,https://github.com/root-project/root/pull/15750,1,['depend'],['dependency']
Integrability,"eras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553:1872,depend,dependencies,1872,https://root.cern,https://github.com/root-project/root/issues/16553,1,['depend'],['dependencies']
Integrability,"erlaps`](https://root.cern.ch/doc/master/classTGeoManager.html#afa2bfedf7f02398fdf5867072a77a884) the first parameter `ovlp` is described as a limit for the overlap size (which we understand to be the minimal size before considering it as illegal and triggering the error).; This method lead through chained calls to either `TGeoChecker::MakeCheckOverlap` (standard surface/edge/point check) or `TGeoChecker::CheckOverlapsBySampling` (sampling check):; ```; TGeoManager::CheckOverlaps => TNode::CheckOverlaps => TGeoVolume::CheckOverlaps => TGeoPainter::CheckOverlaps => TGeoChecker::CheckOverlaps | => TGeoChecker::MakeCheckOverlap; | => TGeoChecker::CheckOverlapsBySampling; ```. However [the line using this parameter in the sampling case (l.1271) is commented out](https://github.com/root-project/root/blame/master/geom/geompainter/src/TGeoChecker.cxx#L1271).; It was commented in https://github.com/root-project/root/commit/406af49ee13e135d7c2f1268370ea83e0a99c729 and the commit message does not mention this change explicitly (maybe a consequence of the introduction of the usage of `Voxels`?). The [corresponding line for the non-sampling method is in `TGeoChecker::MakeCheckOverlap` (l.1173) and not commented out](https://github.com/root-project/root/blame/master/geom/geompainter/src/TGeoChecker.cxx#L1173), which would indicate that the intended original usage is still valid. We (CBMROOT) stumbled upon this as we started to find for some of our geometries overlaps with total integrated volume in the order of `10^-6 to 10^-10 cm3` when changing the sampling points number. We first started by adding exceptions in our CI but the list quickly grew as the sampling position is different with each change in the fully assembled geometry volume.; Having/restoring the possibility to ignore the ""really small"" overlaps would cure our problem with a single parameter. Proposed solutions:; - either un-comment the line to re-enable the threshold if it is not bringing other bugs (see simple pa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14675:1106,message,message,1106,https://root.cern,https://github.com/root-project/root/issues/14675,1,['message'],['message']
Integrability,"error message under permissive-:; `F:\gitP\root-project\root\hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types `. If the issue is not a ROOT bug, could you please help provide a workarounds aiming at the error above? Thanks a lot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9607#issuecomment-1016281431:6,message,message,6,https://root.cern,https://github.com/root-project/root/issues/9607#issuecomment-1016281431,1,['message'],['message']
Integrability,"ers\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellen",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:2266,message,message,2266,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"ertion CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/Basic/Diagnostic.h, line 1545; 768: Assertion failed: (*I)->isCompleCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: (!m_Consumer->getTransaction() || (m_Consumer->getTransaction() == T)) && ""Cannot release different T"", file C:\root-dev\git\master\interpreter\cling\lib\Interpreter\IncrementalParser.cpp, line 538; 768: CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: CurLexerKind != CLK_CachingLexer && ""already in caching lex mode"", file C:\root-dev\git\master\interpreter\llvm-project\clang\lib\Lex\PPCaching.cpp, line 99; 768: Assertion failed: CCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: is(tok::raw_identifier), file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/Lex/Token.h, line 208; 768: Assertion failed: (CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: DiagID - DIAG_UPPER_LIMIT < DiagInfo.size() && ""Invalid diagnosti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14200#issuecomment-1903602682:1390,message,message,1390,https://root.cern,https://github.com/root-project/root/pull/14200#issuecomment-1903602682,1,['message'],['message']
Integrability,"ery strict source compatibility requirements: ""we should only break source compatibility if the ROOT constructs were actively harmful in some way, the volume of affected ROOT code is relatively small, and we can provide source compatibility and migration"". As discussed with @pcanal, and with TExecutor introduced in ROOT 6.08, there's little possibilities any user has implemented a new derived class from TExecutor. If this happened, the user is most probably advanced enough to be able to change the implementation. In any case, the volume of affected ROOT code will be relatively small. . As suggested by @dpiparo, for the moment we will keep the new ```TExecutor``` in ```ROOT::Internals```, not exposing it to the user. The executor usage will look as following:. ```cpp ; ROOT::Internal::TExecutor pool(ROOT::Fit::ExecutionPolicy::kSerial);; auto mapFunction = [](unsigned i){return 1u;};; auto reductionFunction = [](const std::vector<unsigned> &v) {; return std::accumulate(v.begin(), v.end(), 0u);; };. pool.MapReduce(ROOT::Fit::ExecutionPolicy::kSerial, mapFunction, ROOT::TSeq<unsigned>(20), reductionFunction);; ```. **TLDR;** This PR changes the behaviour of existing executors and introduces; new ones:. * TExecutor: changes its functionality to be a general Executor, while; TExecutorBaseImpl takes the role of the previous TExecutor. TExecutor; now acts as a general interface to the executors. The executor it will; resolve to is specified by a execution policy parameter in its; constructor. * TExecutorBaseImpl: Plays the previous role of TExecutor. * TSequentialExecutor: provides a sequential implementation of the; executor model, defined by TExecutorBaseImpl. This PR is not finished, but I'm opening it for discussion. Things left:; - [x] Change kSerial to kSequential. - [x] Move Execution Policies to ROOT::Internal. - [x] Adapt Fitting functions to use the new TExecutor instead of if statements. A test can be found here: https://github.com/root-project/roottest/pull/106",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1312:2254,interface,interface,2254,https://root.cern,https://github.com/root-project/root/pull/1312,1,['interface'],['interface']
Integrability,es not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 46 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:33 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:127 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547060479:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547060479,6,['message'],['message']
Integrability,es not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 78 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:33 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:127 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546715013:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546715013,6,['message'],['message']
Integrability,"es was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories.;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5502:2055,interface,interfaces,2055,https://root.cern,https://github.com/root-project/root/pull/5502,1,['interface'],['interfaces']
Integrability,"es. ### Description. `TTreeFormula` (and thus by extend `TTree::Scan` and `TTree::Draw`) does not handle well (under-statement) cases of schema evolution that involves renaming a class. See the reproducer for more details. We need to verify if whether `TTreeReader` and thus `RDataFrame` suffer from the same issue. ### Reproducer. [conversion.tgz](https://github.com/root-project/root/files/14105386/conversion.tgz); run:; ```; root.exe -b -l -q writedata.C+; # Read with the 'old' schema, the result is accurate.; root.exe -b -l -q oldread.C+; # Read with the complex rule ; TTree::Scan is broken; root.exe -b -l -q readwithrule.C+; # Read with the renaming rule ; TTree::Scan only works for accessing the inner content in the case of a split branch.; root.exe -b -l -q readwithrenaming.C+; ```. The correct output for the full object printing part of the reading script is:; ```; Content of branch seg_split.; Wrapper; CSCSegment::someValue = 1; CSCSegment::theDuplicateSegments size = 2; MatchedCSCSegment::someValue = 2; MatchedCSCSegment::someValue = 3; Content of branch seg_unsplit.; Wrapper; CSCSegment::someValue = 1; CSCSegment::theDuplicateSegments size = 2; MatchedCSCSegment::someValue = 2; MatchedCSCSegment::someValue = 3; ```. The expected result of the `TTree::Scan` part of the reading script is:. ```; ******************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments@.size *; ******************************************************************; * 0 * 0 * 2 *; ******************************************************************; **************************************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments.someValue *; **************************************************************************************; * 0 * 0 * 2 *; * 0 * 1 * 3 *; **************************************************************************************; ************************************",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14493:967,Wrap,Wrapper,967,https://root.cern,https://github.com/root-project/root/issues/14493,1,['Wrap'],['Wrapper']
Integrability,es.cern.ch/root-jenkins/job/root-pullrequests-build/103401/console).; ### Errors:; - [2020-12-07T13:11:17.708Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - [2020-12-07T13:11:17.708Z] CMake Error at VDT-stamp/VDT-download-Release.cmake:49 (message): ; - [2020-12-07T13:11:17.708Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - [2020-12-07T13:11:17.708Z] CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:49 (message): ; - [2020-12-07T13:11:22.990Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download ; - [2020-12-07T13:11:22.990Z] CMake Error at VECCORE-stamp/VECCORE-download-Release.cmake:49 (message): ; - [2020-12-07T13:11:22.990Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - [2020-12-07T13:11:22.990Z] CMake Error at VC-stamp/VC-download-Release.cmake:49 (message): ; - [2020-12-07T13:11:22.991Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6922#issuecomment-739909438:1152,message,message,1152,https://root.cern,https://github.com/root-project/root/pull/6922#issuecomment-739909438,1,['message'],['message']
Integrability,"es; `RooAbsCategory.h, RooCategory.h`; The former is the base class of all categories, the latter the user-facing implementation. Here's what happened:; RooFit categories were using the class RooCatType (: public TObject); instead of an integer to represent category states.; This class contained an integer and a char[256] to store a category index; and a (possibly truncated) state name. This prevented fast batch access,; and increased the overhead for data storage and data loading. From now on, categories are represented as integers.; Every state can be denoted by index or name, but instead of storing; *both packed into an object* in each row of the dataset, only the index is stored, and the; mapping from index to state name is stored in the category instance. Since all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatTyp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5502:1047,interface,interface,1047,https://root.cern,https://github.com/root-project/root/pull/5502,1,['interface'],['interface']
Integrability,"ess `c_str()` conversions in RooFitHS3; [RF][HS3] New `wsEmplace()` method for creating objects in workspace; [RF][HS3] New `wsImport()` function to avoid repeating command args; [RF] Less manual memory management in RooAbsArg and RooProdGenContext; [RF] Code modernization of RooAbsReal; [RF][HS3] Renaming some distributions to conform with HS3 standard; [RF][HS3] Use HistFunc variables instead of underlying hist variables; [RF] Added protection against invalid variable names in createHistogram; [RF][HS3] Correct error messages when IO keys are missing; [RF][HS3] Code improvements in HS3 HistFactory; [RF][HS3] Small HS3 closure fixes; [RF][HS3] Import HistFactory constraints directly upon creation; [RF][HS3] Cleanup of generic functions to avoid using arguments; [RF][HS3] Don't import embedded data directly to RooWorkspace; [RF] Avoid false warnings in RooAbsReal::createHistogram(); [RF][HS3] Reduce verbosity of unit tests; [RF][HS3] Less usage of TString; [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets; [RF][HS3] Remove unused functions from JSONFactories_HistFactory; [RF][HS3] Export `staterror` correctly for HistFactory; [RF][HS3] Major restructuring of HistFactory in HS3 - part 2; [RF][HS3] Major refactoring of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS3] Moved `DependencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation; [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation; [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`; [RF] Add intiial minimizer interface for RooFuncWrapper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:6568,Depend,DependencyMissingError,6568,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,6,"['Depend', 'interface']","['DependencyMissingError', 'interface']"
Integrability,est of a Composite Object (containing Vector's and Matrices); ******************************************************************************; Test Using CINT library; TrackD creation 		................ OK; TrackD addition 		................ OK; TrackD write 		................ OK; TrackD read 		................ OK; TrackD after read 		................ OK; TrackD32 creation 		................ OK; TrackD32 addition 		................ OK; TrackD32 write 		................ OK; TrackD32 read 		................ OK; TrackD32 after read 		................ OK; TrackD32 Double32 test 		................ OK; TrackErrD creation 		................ OK; TrackErrD addition 		................ OK; TrackErrD write 		................ OK; TrackErrD read 		................ OK; TrackErrD after read 		................ OK; TrackErrD32 creation 		................ OK; TrackErrD32 addition 		................ OK; TrackErrD32 write 		................ OK; TrackErrD32 read 		................ OK; TrackErrD32 after read 		................ OK; TrackErrD32 Double32 test 		................ OK; VecTrack<TrackD> creation 		................ OK; VecTrack<TrackD> addition 		................ OK; VecTrack<TrackD> write 		................ OK; VecTrack<TrackD> read 		................ OK; VecTrack<TrackD> after read 		................ OK; VecTrack<TrackErrD> creation 		................ OK; VecTrack<TrackErrD> addition 		................ OK; VecTrack<TrackErrD> write 		................ OK; VecTrack<TrackErrD> read 		................ OK; VecTrack<TrackErrD> after read 		................ OK; ******************************************************************************; stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds; ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06; *******************************************************************************; stressMathCore Test Failed !!; CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):; error code: 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/401:11487,message,message,11487,https://root.cern,https://github.com/root-project/root/pull/401,1,['message'],['message']
Integrability,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144980019:2262,interface,interface,2262,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019,4,['interface'],['interface']
Integrability,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145207749:2262,interface,interface,2262,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749,4,['interface'],['interface']
Integrability,est_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.directory.roottest_root_io_directory_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root.io/directory/roottest_root_io_directory_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/). And 37 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1337#issuecomment-345216771:2741,interface,interface,2741,https://root.cern,https://github.com/root-project/root/pull/1337#issuecomment-345216771,2,['interface'],['interface']
Integrability,est_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.directory.roottest_root_io_directory_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root.io/directory/roottest_root_io_directory_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/). And 37 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1337#issuecomment-345228090:2741,interface,interface,2741,https://root.cern,https://github.com/root-project/root/pull/1337#issuecomment-345228090,2,['interface'],['interface']
Integrability,ests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -writeEmptyRootPCM Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFunc.h Math/PdfFuncMathCore.h Math/ProbFunc.h Math/ProbFuncMathCore.h Math/QuantFunc.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - FAILED: cd /mnt/build/workspace/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4346#issuecomment-528976735:3453,Integrat,IntegratorMultiDim,3453,https://root.cern,https://github.com/root-project/root/pull/4346#issuecomment-528976735,5,['Integrat'],['IntegratorMultiDim']
Integrability,"ests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ============================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:14653,Wrap,WrapperCall,14653,https://root.cern,https://github.com/root-project/root/issues/12771,1,['Wrap'],['WrapperCall']
Integrability,"esult.; * As its perfectly legal to cast `TSystemDirectory *` to `TSystemFile *`, a `TSystemFile *tsysfFoo` with name ""foo"" and title ""foo"" could mean either; * A file with path `foo/foo`; * A directory with path `foo`, which was originally an instance of `TSystemDirectory *`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The name-title interface of both `TSystemFile` and `TSystemDirectory` is unified. Due to the inconsistency of the original interface, there's no fully-backward-compatible solution. The possible interface would be one of the followings:. | Name | Title | Pros | Cons |; |-|-|-|-|; | basename | dirname | the most informative and good-looking; closer to what GetListOfFiles() tries to output | incompatible to the original `TSystemFile` and `TSystemDirectory` interfaces |; | basename | full path | closer to the original `TSystemDirectory` interface | incompatible to the original `TSystemDirectory` interface |; | full path | dirname | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | basename | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | full path | closer to the original `TSystemFile` and `TSystemDirectory` interfaces | carry the least information |. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 4. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. #### Wrong `IsDirectory()` from `TSystemDirectory::GetListOfFiles()` elements; ```console; $ mkdir bar; $ mkdir foodir; $ touch foodir/foo; $ touch foodir/bar; $ tree; .; ├── bar; └── foodir; ├── bar; └── foo. 2 directories, 2 files; $ root -l; root [0] for (const auto &&tsysfChildRaw: *TSystemDirectory(""foodir"", ""foodir"").GetL",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12350:2043,interface,interfaces,2043,https://root.cern,https://github.com/root-project/root/issues/12350,8,['interface'],"['interface', 'interfaces']"
Integrability,"etFromScratch.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 884: Environment variables:; 884: ROOT_HIST=0; 884: Test timeout computed to be: 1500; 884: input_line_40:2:211: warning: missing terminating '""' character [-Winvalid-pp-token]; 884: *reinterpret_cast<ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager>>*>(0x62d78c) = reinterpret_cast<ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase>*>(0x62d7a8)->Snapshot<double>("" [R<U+0013>,<CA>b; 884: ^; 884: input_line_40:2:211: error: expected expression; 884: <<< cling interactive line includer >>>:1:1: error: expected '}'; 884: input_line_40:1:43: note: to match this '{'; 884: void __cling_Un1Qu315(void* vpClingValue) {; 884: ^; 884: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 884: error code: -529697949; 884:; 884:; 7/16 Test #884: tutorial-dataframe-df008_createDataSetFromScratch-py .....***Failed Error regular expression found in output. Regex=[: error:] 6.23 sec; test 885; Start 885: tutorial-dataframe-df010_trivialDataSource-py. 885: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df010_trivialDataSource.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 885: Environment variables:; 885: ROOT_HIST=0; 885: Test timeout computed to be: 1500; 885: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 885: error code: -529697949; 885:; 885:; 8/16 Test #885: tutorial-dataframe-df010_trivialDataSource-py ............***Failed 4.46 sec; test 886; Start 886: tutorial-dataframe-df012_DefinesAndF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:6151,message,message,6151,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,"eter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x17404b400, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #15 0x00007fff9a450208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x174094f70) at /usr/include/c++/8/bits/unique_ptr.h:345; #16 cling::IncrementalExecutor::executeWrapper (this=0x174094f70, function=..., returnValue=0x7fffd51c7cb0) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #17 0x00007fff9a39b964 in cling::Interpreter::RunFunction (this=0x1740192b0, FD=<optimized out>, res=res; entry=0x7fffd51c7cb0) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fff9a3a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffd51c7cb0, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #19 0x00007fff9a24178c in TCling::Calc (this=0x174039100, line=0x174e16fa0 ""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""..., error=0x7fffd51c7de8) at /usr/include/c++/8/bits/basic_string.h:256; #20 0x00007fffa32551c8 in ROOT::Internal::RDF::<lambda(const string&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, codeSlice=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""...) at /usr/include/c++/8/bits/basic_string.h:2294; #21 ROOT::Internal::RDF::InterpreterCalc (code=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:22952,wrap,wrapPoint,22952,https://root.cern,https://github.com/root-project/root/issues/12372,1,['wrap'],['wrapPoint']
Integrability,"eter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #16 cling::IncrementalJIT::getSymbolAddress (this=0x11ef800c0, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #17 0x00007fffa2a50208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x11efca180) at /usr/include/c++/8/bits/unique_ptr.h:345; #18 cling::IncrementalExecutor::executeWrapper (this=0x11efca180, function=..., returnValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #19 0x00007fffa299b964 in cling::Interpreter::RunFunction (this=0x11ef4d780, FD=<optimized out>, res=res; entry=0x7fffff157520) at /usr/include/c++/8/bits/basic_string.h:2306; #20 0x00007fffa29a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffff157520, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #21 0x00007fffa2aecf60 in cling::MetaSema::<lambda(cling::Transaction*, std::__cxx11::string, llvm::StringRef, cling::Value*)>::operator() (__closure=<synthetic pointer>, ret=0x7fffff157520, args=..., func=""rf104_classfactory"", T=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:643; #22 cling::MetaSema::actOnxCommand (this=0x11f2601d0, file=..., args=..., result=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #23 0x00007fffa2afed24 in cling::MetaParser::isXCommand (this=this; entry=0x7fffff1572b0, actionResult=; 0x7fffff157260: cling::MetaSema::AR_Success, resultValue=resultValue; entry=0x7fffff157520) at /usr/include/c++/8/bits/basic_string.h:2306; #24 0x00007fffa2affe20 in cling::MetaParser::isCommand (this=0x7fffff1572b0, actionResult=; 0x7fffff157260: clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:16537,wrap,wrapPoint,16537,https://root.cern,https://github.com/root-project/root/issues/12372,1,['wrap'],['wrapPoint']
Integrability,"ethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66CAF7E: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:217); ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109); ==270704== by 0x190163FE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:28561,depend,depends,28561,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"ets the path of the directory from its title (`fTitle`), and returns a `TList *`, each element in which represents the child item (with basename `file` and path `sdirpath`) inside the directory the following ways:; * If the element is a directory, it would be `new TDirectory(file, sdirpath)`; * If the element is a file, it would be `new TFile(file, fTitle)`. Which results in the following bugs:. * If an element of `TSystemDirectory::GetListOfFiles()` is a file, its `IsDirectory()` will try to look for the file basename in the *current working directory* and produce the wrong result.; * As its perfectly legal to cast `TSystemDirectory *` to `TSystemFile *`, a `TSystemFile *tsysfFoo` with name ""foo"" and title ""foo"" could mean either; * A file with path `foo/foo`; * A directory with path `foo`, which was originally an instance of `TSystemDirectory *`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The name-title interface of both `TSystemFile` and `TSystemDirectory` is unified. Due to the inconsistency of the original interface, there's no fully-backward-compatible solution. The possible interface would be one of the followings:. | Name | Title | Pros | Cons |; |-|-|-|-|; | basename | dirname | the most informative and good-looking; closer to what GetListOfFiles() tries to output | incompatible to the original `TSystemFile` and `TSystemDirectory` interfaces |; | basename | full path | closer to the original `TSystemDirectory` interface | incompatible to the original `TSystemDirectory` interface |; | full path | dirname | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | basename | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | full path | closer to the original `TSystemFile` and `TSystemDirectory` interfaces | carry the least information |. ### To Reproduce; <!--; Steps",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12350:1600,interface,interface,1600,https://root.cern,https://github.com/root-project/root/issues/12350,1,['interface'],['interface']
Integrability,"evel 0, only errors are reported. On level 1, errors and ""info"" are reported. I propose to enhance this by two more levels. - level 0: report errors; - level 1: all of level 0 + warnings; - level 2: all of level 1 + info; - level 3: all of level 2 + debug. and add the corresponding macros; ```c++; MN_WARN_MSG; MN_WARN_MSG2; MN_WARN_VAL; MN_WARN_VAL2; MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN_DEBUG_* macros. Level 1 would enable the warning messages that are currently only available when the compiler flag WARNINGMSG is defined. Level 3 would enable the debug messages that are currently only available when the compiler flag DEBUG is defined. In my experience, trouble with minimizing some function is common so it would be a great asset to enable more debug output at anytime by just increasing the print level without recompiling ROOT. The DEBUG messages are particularly problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). ### Possible negative side-effects. #### Breaking changes?. This proposal does not change the output for print level 0, but there is a minor change for print level 1. It changes the output of scripts/software that uses print level 1, because previously level 1 meant ""print errors and info"" while in the new hierarchy it means ""print errors and warnings"". I think this is a minor effect, which has to be documented in the next changelog but it cannot cause backward incompatibilities or breakage. #### Reduced performance?. The impact on performance is expected to be negligible. I propose to place additional calls into the compiled code for everyone, but these calls are not executed unless the user picks a high print level. For a low print level, there is just the minor additional cost of a branch, which moreover can be predicted very well by the CPU, so the added cost should be almost zero. Furtherm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:2460,message,messages,2460,https://root.cern,https://github.com/root-project/root/issues/6421,1,['message'],['messages']
Integrability,"even as an implementation detail perhaps of a higher level more usable ; interface. I fully get the need to have a working win alpha for may, ; support all efforts to arrive there  and have 2 worries:; - The amount of ifdefs; - The (non) sturdiness of string manipulations. On 08.02.2018 11:33, Bertrand Bellenot wrote:; >; > Well, right, we could use gSystem->UnixPathname()...; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub ; > <https://github.com/root-project/root/pull/1609#issuecomment-364070384>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/AHfJPvBOt1y6pFQxmNRkG5_698E9UAFRks5tSs2NgaJpZM4R-HWn>.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1609#issuecomment-364071818:73,interface,interface,73,https://root.cern,https://github.com/root-project/root/pull/1609#issuecomment-364071818,2,['interface'],['interface']
Integrability,"ewer versions of Osx / Xcode. The error happens during the configuration:; ```; cmake .. -G Xcode ; -- The C compiler identification is AppleClang 14.0.0.14000029; -- The CXX compiler identification is AppleClang 14.0.0.14000029; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Configuring done (12.8s); -- Generating done (0.0s); CMake Error in CMakeLists.txt:; The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree; data2TreeLib. but none of these is a common dependency of the other(s). This is not; allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly.; ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/14 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 28 2023, 00:39:39 |; | From tags/v6-26-14@v6-26-14 |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14595:1311,depend,dependency,1311,https://root.cern,https://github.com/root-project/root/issues/14595,1,['depend'],['dependency']
Integrability,"example makefile from tutorials/tmva should use the same c++ standard as; root (otherwise one faces errors from string views in the root headers; when building the tutorials). Note:; - I also changed in the global CMakeLists.txt `tutorial_file` into `artifact_file`, (which looks like a renaming variable mistake to me, but didn't go through the history); - This causes `tutorials/tmva/makefile` to not appear in artifact_files_builddir and thus the dependencies of move_artifacts. → I am not sure if I broke dependencies here. (WIP struggeling to install the configured makefile)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2547:450,depend,dependencies,450,https://root.cern,https://github.com/root-project/root/pull/2547,2,['depend'],['dependencies']
Integrability,"exception, another exception occurred:. Traceback (most recent call last):; File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 619, in main; process(); File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 611, in process; serializer.dump_stream(out_iter, outfile); File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/serializers.py"", line 259, in dump_stream; vs = list(itertools.islice(iterator, batch)); File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 995, in func; except StopIteration:; File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 1152, in aggregatePartition; acc = seqOp(acc, obj); File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/util.py"", line 74, in wrapper; return f(*args, **kwargs); File ""/home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/DistRDF/Backends/Spark/Backend.py"", line -1, in spark_mapper; File ""/home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/DistRDF/Backends/Base.py"", line 116, in distrdf_mapper; raise RuntimeError(f""C++ exception thrown:\n\t{type(e).__name__}: {e.what()}""); RuntimeError: C++ exception thrown:; 	runtime_error: Graph was applied to a mix of scalar values and collections. This is not supported. 	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:555); 	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:713); 	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:695); 	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:508); 	at org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37); 	at scala.collection.Iterator.foreach(Iterator.scala:943); 	at scala.collection.I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11050#issuecomment-1196878051:2305,wrap,wrapper,2305,https://root.cern,https://github.com/root-project/root/issues/11050#issuecomment-1196878051,1,['wrap'],['wrapper']
Integrability,"executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr));",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:5554,interface,interface,5554,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,1,['interface'],['interface']
Integrability,external nlohmann/json.hpp is not forwarded as dependency or should be linked PRIVATE?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6784:47,depend,dependency,47,https://root.cern,https://github.com/root-project/root/issues/6784,1,['depend'],['dependency']
Integrability,"externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin23.6.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frame",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:8896,protocol,protocols,8896,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,2,['protocol'],['protocols']
Integrability,"externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin23.6.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Applications/Xcode.app/Contents/Developer/Plat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:4224,protocol,protocols,4224,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,2,['protocol'],['protocols']
Integrability,f_integration_spark_test_friend_trees](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_friend_trees/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_histo_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_histo_write/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_include_headers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_include_headers/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_inv_mass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_inv_mass/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_reducer_merge](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_reducer_merge/); - [projectroot.bindings.experimental.distrdf.tests.unit.backend.pyunittests_distrdf_unit_backend_test_spark](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.unit/backend/pyunittests_distrdf_unit_backend_test_spark/); - [projectroot.bindings.experimental.distrdf.tests.unit.backend.pyunitt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-774112839:1340,integrat,integration,1340,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-774112839,1,['integrat'],['integration']
Integrability,"feedback. The bulk IO APIs aim to provide as fast access as possible in the case where the user is using relatively simple datatypes and the objects can be deserialized ""non-destructively"" (i.e., in-place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:. * A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; * A TTreeReader-like interface, TTreeReaderFast. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize and apply user code, rather than two.; * The intent is that this interface can be extended in the future and used by TDataFrame, provided we can make TDataFrame sufficiently fast.; * A Python-based numpy export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; * The numpy interface is low-level for Python; we intend to furt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519:1318,interface,interfaces,1318,https://root.cern,https://github.com/root-project/root/pull/2519,1,['interface'],['interfaces']
Integrability,"ferent numeric integration methods (more detail in the PR description).; It will also make porting the numerical integration with the Romberg method to the GPU much easier. The changes were validated with the following script:; ```c++; // runNumIntValidation.C. #include <RooFormulaVar.h>; #include <RooNumIntConfig.h>; #include <RooRealVar.h>. void testIntegrationMethod(int ndim, std::string const &label); {; RooRealVar x{""x"", ""x"", 0, 10};; RooRealVar y{""y"", ""y"", 0, 10};. std::string funcName = std::string(""func"") + label;; RooFormulaVar func{funcName.c_str(), ""x*std::sqrt(x) + y*std::sqrt(y) + x*y"", {x, y}};. std::cout << label << "":"" << std::endl;. RooNumIntConfig cfg(*func.getIntegratorConfig());. if (ndim == 2) {; cfg.method2D().setLabel(label.c_str());; }; if (ndim == 1) {; cfg.method1D().setLabel(label.c_str());; }. RooArgSet iset{x};; if (ndim > 1); iset.add(y);; std::unique_ptr<RooAbsReal> integ{func.createIntegral(iset, RooFit::NumIntConfig(cfg))};; double val = integ->getVal();; std::cout << std::setprecision(15) << val << std::endl;. std::cout << std::endl;; }. void runNumIntValidation(); {; RooHelpers::LocalChangeMsgLevel changeMsgLvl(RooFit::WARNING);. std::vector<std::string> methods1d{""RooIntegrator1D"", ""RooSegmentedIntegrator1D""};; std::vector<std::string> methods2d{""RooAdaptiveIntegratorND"", ""RooIntegrator2D"", ""RooSegmentedIntegrator2D""};. for (auto const &label : methods1d) {; testIntegrationMethod(1, label);; }. for (auto const &label : methods2d) {; testIntegrationMethod(2, label);; }; }; ```. The output with this PR is the same as with ROOT master:; ```; RooIntegrator1D:; 488.294986988088. RooSegmentedIntegrator1D:; 488.294680086881. RooAdaptiveIntegratorND:; 5029.82213550336. RooIntegrator2D:; 5029.84276464679. RooSegmentedIntegrator2D:; 5029.82506801992; ```. A new unit test that checks these numbers is also implemented. This is a follow up to #13350, which made it possible to implement different numeric integration plugins with the same class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13384:2273,integrat,integration,2273,https://root.cern,https://github.com/root-project/root/pull/13384,1,['integrat'],['integration']
Integrability,fixes the issues about dependencies mentioned in #16553,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16555:23,depend,dependencies,23,https://root.cern,https://github.com/root-project/root/pull/16555,1,['depend'],['dependencies']
Integrability,"flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xrootd builtin_xxhash builtin_zstd clad dataframe gdml http imt mlp opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xrootd; -- Configuring done (28.0s); -- Generating done (3.2s); -- Build files have been written to: /home/<user>; ```. I tried to run `cmake --build . --target install` and ended up with. ```; CMake Error: The current CMakeCache.txt directory /home/<user>/root_build/CMakeCache.txt is different than the directory /home/<user> where CMakeCache.txt was created. This may result in binaries being created in the wrong place. If you are not sure, reedit the CMakeCache.txt; CMake Error: Target DependInfo.cmake file not found; Creating directories for 'LZMA'; CMake Error: Error processing file: /home/francisco/LZMA-prefix/tmp/LZMA-mkdirs.cmake; gmake[2]: *** [CMakeFiles/LZMA.dir/build.make:108: LZMA-prefix/src/LZMA-stamp/LZMA-mkdir] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:8564: CMakeFiles/LZMA.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ``` . ### ROOT version. supposedly the most recent ; root_v6.30.02. ### Installation method. build from source. ### Operating system. Ubuntu 23.10 . ### Additional context. I have been using Ubuntu and ROOT for some years now but when I come across this type of problems normally I can work them and come up with a solution. But all this with installations and building from source is quite new to me. When I have done it before I have never came across problems that would put me reading through the outputs.; I am sorry if it definetly not contextualized but please guide me through this issue :); Thank you in advance for ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:4809,Depend,DependInfo,4809,https://root.cern,https://github.com/root-project/root/issues/14479,1,['Depend'],['DependInfo']
Integrability,"flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; return self._float_to_str(self.smallest_subnormal); 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable; 616573:sh: fork: retry: Resource temporar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552:3728,message,message,3728,https://root.cern,https://github.com/root-project/root/issues/16552,1,['message'],['message']
Integrability,"for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:1934,depend,depends,1934,https://root.cern,https://github.com/root-project/root/issues/11385,1,['depend'],['depends']
Integrability,"for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-rele",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1250106081:1986,depend,depends,1986,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1250106081,1,['depend'],['depends']
Integrability,"fs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:9571,wrap,wrapper,9571,https://root.cern,https://github.com/root-project/root/pull/13295,1,['wrap'],['wrapper']
Integrability,"g /Volumes/MacintoshHD2/ec/build/workspace/root-nightly-master-cxx14root7/BUILDTYPE/Release/COMPILER/native/LABEL/mac1012/root/tutorials/roofit/rf611_RooMCMarkovChainexample.C... [NON-XML-CHAR-0x1B][1mRooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby[NON-XML-CHAR-0x1B][0m ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.65215, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.04508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.08508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.11206, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.61614, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=4.19165, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327#issuecomment-349216512:1218,message,message,1218,https://root.cern,https://github.com/root-project/root/pull/1327#issuecomment-349216512,1,['message'],['message']
Integrability,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:6027,interface,interfaces,6027,https://root.cern,https://github.com/root-project/root/pull/14039,1,['interface'],['interfaces']
Integrability,"g interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RDrawable; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:4249,interface,interface,4249,https://root.cern,https://github.com/root-project/root/issues/14587,1,['interface'],['interface']
Integrability,"g the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this ; example2: ; ```cpp; {; // my_subroutines.C; unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {; x.reset(); ; x.reset(new TH1F());; // .. do something with it.; }; ```; except for maybe quick temporary scripts. So we have about 2.5 issues. ; 1) The global command,; 2) the interface and ownership model, and; 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:3269,interface,interface,3269,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,2,['interface'],['interface']
Integrability,"g.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:3205,message,message,3205,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"g/Interpreter/DynamicLookupRuntimeUniverse.h etc/cling/Interpreter/DynamicLookupLifetimeHandler.h etc/cling/Interpreter/Exception.h etc/cling/Interpreter/RuntimePrintValue.h etc/cling/Interpreter/RuntimeUniverse.h etc/cling/Interpreter/RuntimeOptions.h etc/cling/Interpreter/Value.h etc/cling/Interpreter/Visibility.h && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3.5 /mnt/build/workspace/root-pullrequests-build/root/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/core ; - [2021-11-30T07:32:08.128Z] ./include/TestStatistics/LikelihoodJob.h:17:10: fatal error: 'RooFit/MultiProcess/Job.h' file not found . ### Warnings:; - [2021-11-30T07:30:53.680Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:53.680Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::Like",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982359449:1510,synchroniz,synchronizeParameterSettings,1510,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982359449,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"g::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583); ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869); ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374); ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063); ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530); ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152); ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33); ==92602== by 0x40E209B: TList::TList() (TList.h:78); ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477); ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215); ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572); ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928); ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240); ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857); ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:18610,depend,depends,18610,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,gInterpreter->Evaluate is a proper interface for printing purposes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2644:35,interface,interface,35,https://root.cern,https://github.com/root-project/root/pull/2644,1,['interface'],['interface']
Integrability,"g\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-11T16:52:05.553Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(161,22): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\MicrosoftCXXABI.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-11T16:52:05.553Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector(467,88): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\Mangle.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-11T16:52:05.553Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/Expr.h(2773,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ExternalASTSource.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-11T16:52:05.553Z] c1xx : fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2022-04-11T16:52:06.004Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/APFloat.h(1100,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\DependencyFile.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] . And 313 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10380#issuecomment-1095298541:3947,Depend,DependencyFile,3947,https://root.cern,https://github.com/root-project/root/pull/10380#issuecomment-1095298541,1,['Depend'],['DependencyFile']
Integrability,"gcc8-opt/bin/runH4lAnalRun2); ==2512== Uninitialised value was created by a stack allocation; ==2512== at 0x5ABC43E: TSystem::IsPathLocal(char const*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512==; ==2512== Conditional jump or move depends on uninitialised value(s); ==2512== at 0x4F01099: TStorage::UpdateIsOnHeap(unsigned int const; volatile&, unsigned int volatile&) (in; /srv/workDir/usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/lib/libH4lAnalysisRun2Lib.so); ==2512== by 0x5A7E9BA: TMessageHandler::Notify() (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x5A7E2B0: TMessageHandler::HandleMessage(int, TObject; const*) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x5A42360: TROOT::Message(int, TObject const*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x5A812D4: TObject::Error(char const*, char const*,; ...) const (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x3F34D156: TNetXNGFile::TNetXNGFile(char const*, char; const*, char const*, char const*, int, int, bool) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libNetxNG.so); ==2512== by 0x3F34DECB: TNetXNGFile::TNetXNGFile(char const*, char; const*, char const*, int, int, bool) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libNetxNG.so); ==2512== by 0x401E6642: ???; ==2512== by 0x31A15B61: TClingCallFunc::exec(void*, void*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759537229:2494,Message,Message,2494,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759537229,1,['Message'],['Message']
Integrability,"ge_cast and static_range_cast #8769 (comment)](https://github.com/root-project/root/pull/8769#issuecomment-891036930): I didn't generalize TRangeDynCast and TRangeStaticCast. They are tied to TCollection and fulfill a different purpose because of that. They are also part of `ROOT::Internal`, while my new functions are supposed to be also used by the RooFit users. I would suggest we leave them as they are, but if you think the new `static_range_cast` and `dynamic_range_cast` are useful for everyone we can move the new file if you want. But where?. I was already expecting that it would be difficult to adapt those, but there will be ways to adapt them. I think it would be *better* if there's one good solution for all, but you have to decide how much time you want to invest. > 2. [[RF] New RangeCast file with dynamic_range_cast and static_range_cast #8769 (comment)](https://github.com/root-project/root/pull/8769#discussion_r680892053): I didn't add the `assert(dynamic_cast)` to the `static_range_cast` because the performance penalty it introduces in debug mode is not probably not expected by non-RooFit developers. There's not many loops out there in the world that will depend on this. If somebody uses it, they might be glad to have the extra safety. About the performance:; - When you run from the interpreter, you don't care about the performance of your loop as much.; - When you compile, you probably know what `NDEBUG` is.; - When you ACLIC-compile, I would have hoped that you get an automatic `NDEBUG` in release builds of ROOT, or when you `+O` a file. You don't, unfortunately. My preferred solution would have been to fix that and use the asserts, but it's your project now. > 3. [[RF] New RangeCast file with dynamic_range_cast and static_range_cast #8769 (comment)](https://github.com/root-project/root/pull/8769#issuecomment-890998817): I stuck with the detection of `dynamic_cast` vs. `static_cast` at compile time to also support non-polymorphic types.; > . Sounds good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8769#issuecomment-891155267:1399,depend,depend,1399,https://root.cern,https://github.com/root-project/root/pull/8769#issuecomment-891155267,1,['depend'],['depend']
Integrability,"git dpkg-dev cmake binutils libx11-dev libxpm-dev \; libxft-dev libxext-dev; sudo apt-get install gfortran libssl-dev libpcre3-dev \; xlibmesa-glu-dev libglew1.5-dev libftgl-dev \; libmysqlclient-dev libfftw3-dev libcfitsio-dev \; graphviz-dev libavahi-compat-libdnssd-dev \; libldap2-dev python-dev libxml2-dev libkrb5-dev \; libgsl0-dev libqt4-dev; sudo apt install gdb. sudo apt install libstdc++ # then add flag -stdlib=libstdc++. wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh; (echo ''; echo 'yes'; echo ''; echo 'yes';) | bash ./Miniconda3-latest-Linux-x86_64.sh; source .bashrc; source activate base; pip install numpy sklearn xgboost matplotlib. #################################### install projects #############################3; # Get ROOT; cd; git clone git@github.com:LucaZampieri/root.git. # build with gcc; mkdir build_gcc && cd build_gcc && cmake ../root && make -j8. ## Google bench; cd; # Check out the library.; git clone https://github.com/google/benchmark.git; # Benchmark requires Google Test as a dependency. Add the source tree as a subdirectory.; git clone https://github.com/google/googletest.git benchmark/googletest. # Go to the library root directory; cd benchmark ; mkdir build_gcc; cd build_gcc ; cmake -DCMAKE_BUILD_TYPE=Release ../root && make -j8. # XGBoost; cd; git clone --recursive https://github.com/dmlc/xgboost; cd xgboost; mkdir build_gcc; cd build_gcc; cmake -DCMAKE_BUILD_TYPE=Release ../. # Setup aliases; echo ""alias bdt='cd ~/root/tmva/tmva/src/BDT'"" >> ~/.bashrc; source .bashrc. # Add the folders missing from github (add them directly in github?) ; cd; bdt ; git checkout backend/FastInference; mkdir build. # For ROOT; echo 'export ROOTSYS=""~/root/""' >> ~/.bashrc; echo 'export ROOTBUILD=""~/build_gcc/""' >> ~/.bashrc; echo 'source $ROOTBUILD/bin/thisroot.sh' >> ~/.bashrc. echo 'export XGBOOST_ROOT=""~/xgboost""' >> ~/.bashrc. echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/xgboost/lib/' >> ~/.bashrc. source .bashrc; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4351:3427,depend,dependency,3427,https://root.cern,https://github.com/root-project/root/pull/4351,1,['depend'],['dependency']
Integrability,"gletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:11159,message,message,11159,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,great PR! Do we want to have unit tests and integration tests too?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1764#issuecomment-374247543:44,integrat,integration,44,https://root.cern,https://github.com/root-project/root/pull/1764#issuecomment-374247543,1,['integrat'],['integration']
Integrability,"gs&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-30T07:31:37.755Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982359449:2928,synchroniz,synchronizeParameterSettings,2928,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982359449,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"gs:; - [2021-11-29T20:38:45.207Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:38:45.207Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual voi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982003312:1763,synchroniz,synchronizeParameterSettings,1763,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982003312,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"gs:; - [2021-11-30T07:26:24.689Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:24.689Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual voi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368821:1229,synchroniz,synchronizeParameterSettings,1229,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368821,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"gtests can print errors using ROOT's message system, but these get; ignored completely.; Several problems could have been caught automatically, but they went undetected. This adds a default regex to all gtests that checks for; ""(Fatal|Error|Warning) in <"", unless an explicit FAILREGEX is passed to; ROOT_ADD_GTEST. ### How to fix the tests:; - [Easy, but unsafe] Add `FAILREGEX """"` to `ROOT_ADD_GTEST`. In that case, we will not grep for anything.; - [Safe] Use the macros from https://github.com/root-project/root/blob/master/test/unit_testing_support/ROOTUnitTestSupport.h and catch the diagnostics ; - Fix what triggers the warnings/errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591:37,message,message,37,https://root.cern,https://github.com/root-project/root/pull/5591,1,['message'],['message']
Integrability,"gui/src/TRootCanvas.cxx:1789; #10 0x00007f5b3e8464fd in TGFrame::HandleEvent(Event_t*) (this=0x55e767938e70, event=0x7f5b79adff40) at ../gui/gui/src/TGFrame.cxx:476; #11 0x00007f5b3e7f4c9a in TGClient::HandleEvent(Event_t*) (this=0x55e768de2290, event=0x7f5b79adff40) at ../gui/gui/src/TGClient.cxx:846; #12 0x00007f5b3e7f531d in TGClient::ProcessOneEvent() (this=0x55e768de2290) at ../gui/gui/src/TGClient.cxx:656; #13 TGClient::ProcessOneEvent() (this=0x55e768de2290) at ../gui/gui/src/TGClient.cxx:648; #14 0x00007f5b3e7f536b in TGClient::HandleInput() (this=0x55e768de2290) at ../gui/gui/src/TGClient.cxx:703; #15 0x00007f5b8dcb0ff8 in TUnixSystem::DispatchOneEvent(bool) (this=0x55e75ccfd080, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1067; #16 0x00007f5b8dbd0dca in TSystem::ProcessEvents() (this=0x55e75ccfd080) at ../core/base/src/TSystem.cxx:424; #17 0x00007f5b8130600d in (); #18 0x00007f5b79ae0450 in (); #19 0x00007f5b8de5215f in WrapperCall(Cppyy::TCppMethod_t, size_t, void*, void*, void*) (method=94452242807424, nargs=0, args_=0x7f5b79ae01d7, self=0x55e75ccfd080, result=0x7f5b79ae01d7) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778; #20 0x00007f5b8de527cf in CallT<unsigned char> (args=<optimized out>, nargs=<optimized out>, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816; #21 Cppyy::CallB(long, void*, unsigned long, void*) (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:833; #22 0x00007f5b8decdc0f in GILCallB (ctxt=0x7f5b79ae0430, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:69; #23 CPyCppyy::(anonymous namespace)::BoolExecutor::Execute(Cppyy::TCppMethod_t, Cppyy::TCppObject_t, CPyCppyy::CallContext*) (this=<optimized out>, method=<optimized out>, self=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9139:1351,Wrap,WrapperCall,1351,https://root.cern,https://github.com/root-project/root/pull/9139,1,['Wrap'],['WrapperCall']
Integrability,"gument(clang::TemplateArgumentLoc const&, clang::TemplateArgumentLoc&, bool) () from /home/linev/build/webgui/lib/libCling.so; #17 0x00007f4aa5996dc2 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformTemplateSpecializationType(clang::TypeLocBuilder&, clang::TemplateSpecializationTypeLoc, clang::TemplateName) () from /home/linev/build/webgui/lib/libCling.so; #18 0x00007f4aa5993be9 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformTSIInObjectScope(clang::TypeLoc, clang::QualType, clang::NamedDecl*, clang::CXXScopeSpec&) [clone .isra.0] () from /home/linev/build/webgui/lib/libCling.so; #19 0x00007f4aa5994499 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformNestedNameSpecifierLoc(clang::NestedNameSpecifierLoc, clang::QualType, clang::NamedDecl*) () from /home/linev/build/webgui/lib/libCling.so; #20 0x00007f4aa5998edf in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType(clang::TypeLocBuilder&, clang::DependentNameTypeLoc, bool) () from /home/linev/build/webgui/lib/libCling.so; #21 0x00007f4aa598ea8c in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType(clang::TypeLocBuilder&, clang::TypeLoc) () from /home/linev/build/webgui/lib/libCling.so; #22 0x00007f4aa5990757 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformPointerType(clang::TypeLocBuilder&, clang::PointerTypeLoc) () from /home/linev/build/webgui/lib/libCling.so; #23 0x00007f4aa598ee52 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType(clang::TypeLocBuilder&, clang::TypeLoc) () from /home/linev/build/webgui/lib/libCling.so; #24 0x00007f4aa5991a8e in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType(clang::TypeSourceInfo*) () from /home/linev/build/webgui/lib/libCling.so; #25 0x00007f4aa5992c97 in clang::Sema::SubstType(clang::QualType, clang::MultiLevelTemplateArgum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8494#issuecomment-865084737:3288,Depend,DependentNameTypeLoc,3288,https://root.cern,https://github.com/root-project/root/issues/8494#issuecomment-865084737,1,['Depend'],['DependentNameTypeLoc']
Integrability,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:4363,wrap,wrapper,4363,https://root.cern,https://github.com/root-project/root/pull/12681,8,['wrap'],['wrapper']
Integrability,"h T = art::(anonymous namespace)::RunWorkerFunctor]::<lambda()> >::execute(void); (this=0x7fffe8ec7940) at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/hep_concurrency/v1_05_00/slf7.x86_64.e19.debug/include/hep_concurrency/SerialTaskQueue.h:86; #13 0x00007ffff4e9db71 in tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::process_bypass_loop (this=0x7fffe8ed2600, context_guard=..., t=0x7fffe8ec7940, isolation=0); at ../../src/tbb/custom_scheduler.h:474. === end of File opening stack.; ```. On Dec 9, 2020, at 2:30 PM, Kyle Knoepfel <knoepfel@fnal.gov> wrote:. > Hi Philippe,; > ; > I have spent hours trying to debug a multi-threading error that appears when processing concurrent events with art's ROOT-based facilities. There are three ingredients required to reproduce the problem:; > • Must use multiple events and threads in flight; > • Must enable either art's TFileService or RootOutput module; > • Must use art's product-mixing module that wraps around to the beginning of the file once the set of secondary events has been exhausted; > ; > To reproduce the error on scisoftbuild01, first checkout the source code:; > ; > git clone https://cdcvs.fnal.gov/projects/critic; > cd critic; > git checkout for-philippe; > ; > Then build the code and run the tests:; > ; > source /products/setup; > mkdir /scratch/pcanal/build-critic && cd $_; > source ~/critic/ups/setup_for_development -d; > buildtool --generator=ninja -j12 -T; > ; > The test that demonstrates the MT error often hangs due to a memory error (I believe). If the above tests don't complete, then CTRL+C out of them and try running the single problematic test:; > ; > ctest -V -R ProductMix_wraparound_r; > ; > You will see printout like:; > ; > 213: ...; > 213: Begin processing the 99th record. run: 1 subRun: 0 event: 99 at 09-Dec-2020 14:09:34 CST; > 213: Begin processing the 100th record. run: 1 subRun: 0 event: 100 at 09-Dec-2020 14:09:34 CST; > 213: %MSG-w Mixi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:6445,wrap,wraps,6445,https://root.cern,https://github.com/root-project/root/issues/6939,1,['wrap'],['wraps']
Integrability,"h const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug3/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug3/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; /home/b/bendavid/pyrootdebug3/test.h:18:10: error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; return helper();; ^~~~~~; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; Failed to instantiate ""call_helper(Helper<vector<double> >*)""; Failed to instantiate ""call_helper(Helper<vector<double> >)""; call attempt 1; /home/b/bendavid/pyrootdebug3/test.h:18:10: error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; return helper();; ^~~~~~; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; Failed to instantiate ""call_helper(Helper<vector<double> >*)""; Failed to instantiate ""call_helper(Helper<vector<double> >)""; ```. So the relevant error message ```error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long')``` only appears in the first attempt (and is only printed because I've set gDebug=6 here)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449#issuecomment-1460106107:2318,message,message,2318,https://root.cern,https://github.com/root-project/root/pull/12449#issuecomment-1460106107,1,['message'],['message']
Integrability,"h name in file df002_dataModel_py.root; 879: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 879: error code: -529697949; 879:; 879:; 2/16 Test #879: tutorial-dataframe-df002_dataModel-py ....................***Failed Error regular expression found in output. Regex=[Error in] 8.04 sec; test 880; Start 880: tutorial-dataframe-df003_profiles-py. 880: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df003_profiles.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 880: Environment variables:; 880: ROOT_HIST=0; 880: Test timeout computed to be: 1500; 880: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 880: error code: -529697949; 880:; 880:; 3/16 Test #880: tutorial-dataframe-df003_profiles-py .....................***Failed 4.47 sec; test 881; Start 881: tutorial-dataframe-df004_cutFlowReport-py. 881: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df004_cutFlowReport.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 881: Environment variables:; 881: ROOT_HIST=0; 881: Test timeout computed to be: 1500; 881: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 881: error code: -529697949; 881:; 881:; 4/16 Test #881: tutorial-dataframe-df004_cutFlowReport-py ................***Failed 4.53 sec; test 882; Start 882: tutorial-dataframe-df006_ranges-py. 882: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" """,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:2443,message,message,2443,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,"h' file not found . ### Warnings:; - [2021-11-30T07:30:53.680Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:53.680Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::Like",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982359449:2219,synchroniz,synchronizeParameterSettings,2219,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982359449,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"h. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:18429,Wrap,WrapperCall,18429,https://root.cern,https://github.com/root-project/root/issues/15117,1,['Wrap'],['WrapperCall']
Integrability,"had issues with dictionary operations; sometimes failing with clang assertions. When this happens, it is; of course only in the debug build; in the optimized build,; everything seems to work fine. The problem; is related to the ordering in which dictionaries are loaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dicti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14186:1142,depend,depend,1142,https://root.cern,https://github.com/root-project/root/issues/14186,1,['depend'],['depend']
Integrability,"hadows a member of ‘llvm::APSInt’ [-Wshadow] ; - [2020-09-26T22:08:26.754Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:42:7: warning: declaration of ‘end_iterator’ shadows a member of ‘llvm::iterator_range&lt;IteratorT&gt;’ [-Wshadow] ; - [2020-09-26T22:08:26.754Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:42:7: warning: declaration of ‘begin_iterator’ shadows a member of ‘llvm::iterator_range&lt;IteratorT&gt;’ [-Wshadow] ; - [2020-09-26T22:08:26.754Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:95:7: warning: declaration of ‘Size’ shadows a member of ‘llvm::SmallVectorTemplateCommon&lt;T, &lt;template-parameter-1-2&gt; &gt;’ [-Wshadow] ; - [2020-09-26T22:08:26.755Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator.h:88:32: warning: declaration of ‘I’ shadows a member of ‘llvm::iterator_facade_base&lt;DerivedT, IteratorCategoryT, T, DifferenceTypeT, PointerT, ReferenceT&gt;::ReferenceProxy’ [-Wshadow] ; - [2020-09-26T22:08:26.755Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator.h:354:7: warning: declaration of ‘DR’ shadows a member of ‘llvm::WrappedPairNodeDataIterator&lt;ItType, NodeRef, DataRef&gt;’ [-Wshadow] ; - [2020-09-26T22:08:26.755Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:138:7: warning: declaration of ‘callable’ shadows a member of ‘llvm::function_ref&lt;Ret(Params ...)&gt;’ [-Wshadow] ; - [2020-09-26T22:08:26.755Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:226:5: warning: declaration of ‘F’ shadows a member of ‘llvm::mapped_iterator&lt;ItTy, FuncTy, FuncReturnTy&gt;’ [-Wshadow] . And 68632 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699554823:2419,Wrap,WrappedPairNodeDataIterator,2419,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699554823,1,['Wrap'],['WrappedPairNodeDataIterator']
Integrability,"handling system events; (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM.; (C++ compiled) struct CpuInfo_t //CPU load information.; (C++ compiled) struct MemInfo_t //Memory utilization information.; (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases; (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching.; (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens.; (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators; (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes; (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class; (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor; (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument; (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off; (C++ compiled) class TVirtualPadPainter //Painter interface for pad.; (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter; (C++ compiled) class TVirtualGLManip //Interface for GL manipulator; (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager; (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering; (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components; (C++ compiled) class TAttBBox //Helper for management of bounding-box information; (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:3648,interface,interface,3648,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,9,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"he generic implementation or numba by using the decorators `DeclareGenericCallable` and `DeclareNumbaCallable`. The interface is exactly the same than for the general `DeclareCallable` decorator. In addition, you can now give the wrapped function a custom name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strongly typed, we have to declare the types of the inputs and the output; @ROOT.DeclareCppCallable([""float""], ""float""); def func(x):; return 2.0 * x. print(func(1.0)) # Prints 2.0; print(ROOT.PyROOT.func(1.0)) # Prints 2.0; ROOT.gInterpreter.ProcessLine(""cout << PyROOT::func(1.0) << endl;"") # Prints 2.0; ```. This allows us to run Python code in wrapped C++ workflow, e.g. for `RDataFrame`:. ```python; import ROOT; import numpy. @ROOT.DeclareCppCallable([""unsigned int""], ""float""); def func(x):; return numpy.power(x, 2). df = ROOT.RDataFrame(4).Define(""x"", ""rdfentry_"").Define(""y"", ""PyROOT::func(x)""); npy = df.AsNumpy(); print(npy[""x""]) # Prints [0, 1, 2, 3]; print(npy[""y""]) # Prints [0.0, 1.0, 4.0, 9.0]; ```. Finally, the approach is fully compatible with any custom C++ types you may have. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""; struct Foo {; static const int foo = 42;; };; """"""). @ROOT.DeclareCppCallable([""Foo""], """"); def func(x):; print(x.foo). ROOT.gInterpreter.ProcessLine(""Foo x; PyROOT::func(x);"") # Prints 42; ```; There are still some things to check before merging:. - [ ] Double check reference counting; - [ ] C++ wrapper takes (lvalue) references, what happens with rvalues? What is the universal thingy?; - [ ] We put the C++ callable in the `PyROOT::` namespace. This is fine? It can be everything, ev",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:3105,wrap,wrapped,3105,https://root.cern,https://github.com/root-project/root/pull/3488,1,['wrap'],['wrapped']
Integrability,"hen just using ```TInterpreter::Declare```:. test.h; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug3/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug3/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; /home/b/bendavid/pyrootdebug3/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; /home/b/bendavid/pyrootdebug3/test.h:18:10: error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; return helper();; ^~~~~~; input_line_55:1:22: note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);; ^; ret False; ```. So again the error message is different/more obscure on the second attempt at explicit template instantiation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449#issuecomment-1464946488:1987,message,message,1987,https://root.cern,https://github.com/root-project/root/pull/12449#issuecomment-1464946488,1,['message'],['message']
Integrability,"here; static_cast<Action_t *>(this)->Exec(slot, entry, TypeInd_t());; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:223:4: note: in instantiation of member function 'ROOT::Internal::RDF::RActionCRTP<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > > >::Run' requested here; RAction(Helper &&h, const ColumnNames_t &bl, std::shared_ptr<PrevDataFrame> pd,; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/bin/../lib/gcc/x86_64-conda-linux-gnu/7.5.0/../../../../x86_64-conda-linux-gnu/include/c++/7.5.0/bits/unique_ptr.h:821:34: note: in instantiation of member function 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::RAction' requested here; { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:153:19: note: in instantiation of function template specialization 'std::make_unique<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >, ROOT::Internal::RDF::FillParHelper<TH1D>, const std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &, std::shared_ptr<ROOT::Detail::RDF::RNodeBase>, ROOT::Internal::RDF::RBookedCustomColumns>' requested here; return std::make_unique<Action_t>(Helper_t(h, nSlots), bl, std::move(prevNode), std::move(customColumns));; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:458:21: note: in instantiation of function template specialization 'ROOT::Internal::RDF::BuildAction<ROOT::VecOps::RVec<bool> , ROOT::Detail::RDF::RNodeBase>' reques",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:2152,Interface,InterfaceUtils,2152,https://root.cern,https://github.com/root-project/root/issues/6675,1,['Interface'],['InterfaceUtils']
Integrability,"hi, cleaned up obsolete jenkins messages, will start a new build and start reviewing today",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2322#issuecomment-407321656:32,message,messages,32,https://root.cern,https://github.com/root-project/root/pull/2322#issuecomment-407321656,1,['message'],['messages']
Integrability,"his:; ```; y; B; y; xxxxxxxxxxxxxxxxxx A xxxxxx; y; y; ```; where A and B are the minima along the x and y axis respectively. This approach has the advantage that the number of function evaluations scales like with k * n, where k is the number of dimensions and n the number of steps per dimension, while a full grid search scales like n ^ k. However, this approach will fail miserably when x and y are correlated, trying this on the Rosenbrock function for instance gives terrible results (basically no improvement with respect to the starting value). ### What to do?. The current behavior of MnScan is not what people usually consider a scan, which most people understand as a full grid search over the whole N-dimensional space. It seems that MnScan is not really used in ROOT, but I may be mistaken. If it is not really used, I would suggested to keep the name MnScan and change the implemenation to do a full hypercube scan. I am strongly convinced that MnScan should do a full grid search instead of what it currently does, because the current implementation is fairly pointless for most real-world functions which have correlations. If MnScan has a use case that I am not aware of, then I propose to add a new Minimizer, MnHyperScan (or similar name), which implements the full scan. ### Other issues with current MnScan. - One cannot configure the number of steps taken per dimension when MnScan is called through the minimizer interface (MnApplication). The maxcalls option should be used for this.; - A gradient and second derivatives are computed for the starting values, only to be discarded. This is wasteful.; - The scan returns EDM = 0, which is very misleading. It should either return inf or NaN, to indicate that the EDM is invalid. Ideally, a proper EDM should be calculated for the obtained minimum after the scan.; - MnScan always builds a vector of all the (parameter, function value) pairs obtained during the scan, but that vector is discarded after the run. This is wasteful.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6862:2361,interface,interface,2361,https://root.cern,https://github.com/root-project/root/issues/6862,1,['interface'],['interface']
Integrability,"historically typeinfo's operator== has been unstable. For example in case we tested (a while back :) ), the compiler was producing distinct typeinfo for the same type for each library and operator== was fooled :( .. It possible that this has been fixed by newer C++ standard, the commit message would need to explicitly refer to the new boundary conditions (when was is it ""fixed"" and by what means ... i.e. are we sure it is fixed for all the platform we support). See also `9922208313e4c09de89fb2c553970f01939d91a1` which made the switch to string comp ""to take into account differences arising when one of the two typeinfos come from a jitted context.""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7776#issuecomment-812040515:287,message,message,287,https://root.cern,https://github.com/root-project/root/pull/7776#issuecomment-812040515,1,['message'],['message']
Integrability,hod_vectorcall () from /lib64/libpython3.13.so.1.0; #35 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #36 0x00007f3f1423d53d in _PyObject_VectorcallDictTstate () from /lib64/libpython3.13.so.1.0; #37 0x00007f3f14291f67 in slot_tp_call () from /lib64/libpython3.13.so.1.0; #38 0x00007f3f1415ea6b in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #39 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #40 0x00007f3f141a5d0b in slot_tp_init () from /lib64/libpython3.13.so.1.0; #41 0x00007f3f1415e9c5 in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #42 0x00007f3f1417d188 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #43 0x00007f3f1423f8eb in PyEval_EvalCode () from /lib64/libpython3.13.so.1.0; #44 0x00007f3f1425afe4 in builtin_exec () from /lib64/libpython3.13.so.1.0; #45 0x00007f3f1418e3e7 in cfunction_vectorcall_FASTCALL_KEYWORDS () from /lib64/libpython3.13.so.1.0; #46 0x00007f3f14160f57 in PyObject_Vectorcall () from /lib64/libpython3.13.so.1.0; #47 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #48 0x00007f3f142797ed in pymain_run_module () from /lib64/libpython3.13.so.1.0; #49 0x00007f3f1427500c in Py_RunMain () from /lib64/libpython3.13.so.1.0; #50 0x00007f3f1422bcbc in Py_BytesMain () from /lib64/libpython3.13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. CMake Error at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 129; ```. ### Reproducer. Compile root with Python 3.13. Run tests. ### ROOT version. 6.32.00. ### Installation method. RPM package build from source. ### Operating system. Fedora 41 (rawhide). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:25409,message,message,25409,https://root.cern,https://github.com/root-project/root/issues/15799,1,['message'],['message']
Integrability,hon_stl_stl/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_dataframe_nodes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_dataframe_nodes/); - [projectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 9 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1050#issuecomment-331873715:2125,interface,interface,2125,https://root.cern,https://github.com/root-project/root/pull/1050#issuecomment-331873715,2,['interface'],['interface']
Integrability,hon_stl_stl/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_dataframe_nodes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_dataframe_nodes/); - [projectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/). And 8 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1050#issuecomment-334548661:1894,interface,interface,1894,https://root.cern,https://github.com/root-project/root/pull/1050#issuecomment-334548661,2,['interface'],['interface']
Integrability,"https://github.com/cms-sw/cmssw/blob/master/CUDADataFormats/CaloCommon/interface/Common.h; > ; > ; > Thanks! Last bit, hopefully: where is calo::common::AddSize defined?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or unsubscribe.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-770806834:71,interface,interface,71,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-770806834,1,['interface'],['interface']
Integrability,"https://github.com/isaacs/minimatch/commit/5b7cd3372be253759fb4d865eb3f38f189a5fcdf""><code>5b7cd33</code></a> 3.0.6</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/20b4b562830680867feb75f9c635aca08e5c86ff""><code>20b4b56</code></a> [fix] revert all breaking syntax changes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/2ff038852ec03e85e60e0eb333005c680ac8a543""><code>2ff0388</code></a> document, expose, and test 'partial:true' option</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/minimatch/compare/v3.0.4...v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:2143,Depend,Dependabot,2143,https://root.cern,https://github.com/root-project/root/pull/11864,1,['Depend'],['Dependabot']
Integrability,"https://github.com/root-project/root/issues/8828#issuecomment-902721993 still fails the same way as two years ago. It's not as much of a problem anymore since ROOT's backports don't inject into `std::Detail` anymore, but the problem is still there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-1861339162:182,inject,inject,182,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-1861339162,1,['inject'],['inject']
Integrability,"https://github.com/root-project/root/pull/16768 seems to have unexpected consequence on ATLAS workflow, see https://github.com/root-project/root/pull/16768#discussion_r1829743338. Per @amete :. > This is in a mutli-chain workflow. The first step creates an RNTuple that is read by the second step. We throw on the very first event of the second step, seemingly related to reading an empty top-level field, e.g. (the messages need to be improved but that's independent):. ```; 12:37:41 ERROR (pool):; 12:37:41 Unknown Source> field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo; 12:37:41 At:; 12:37:41 ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]; 12:37:41 ; 12:37:41 EventData(xAOD::EventInfo_v1/EventInfo)> Cannot open ROOT container(Tree/Branch); 12:37:41 StorageSvc 0 0 ERROR Could not read object: [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 AthenaPoolConverter 0 0 ERROR poolToObject: Could not get object for Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 Exception: POOL read failed. Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000] (no backtrace available).; 12:37:41 AthenaPoolConverter 0 0 ERROR createObj - caught exception: AthenaPoolCnvSvc::::ExcCaughtException: Caught exception in StatusCode T_AthenaPoolCustomCnvWithKey<TRANS, PERS>::PoolToDataObject(DataObject*&, const Token*, const std",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16826:416,message,messages,416,https://root.cern,https://github.com/root-project/root/issues/16826,1,['message'],['messages']
Integrability,https://github.com/root-project/root/pull/7033/files#diff-db4685eef4f677b824081ed3667b66c57d14b163edaef2b5d545b2a708ec1e15R217-R226; ```c++; #ifdef R__USE_IMT; std::unique_ptr<ROOT::TThreadExecutor> fThreadExecutor;; #else; #define fThreadExecutor fSequentialExecutor; #endif; #ifndef R__WIN32; std::unique_ptr<ROOT::TProcessExecutor> fProcessExecutor;; #else; #define fProcessExecutor fSequentialExecutor; #endif; ```. This is very non-intuitive because it only works for code that follows this declaration. Additionally I would guess these `define`s spill over to user code with potentially very confusing problems and error messages...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7033#issuecomment-759494622:627,message,messages,627,https://root.cern,https://github.com/root-project/root/pull/7033#issuecomment-759494622,2,['message'],['messages']
Integrability,"https://github.com/root-project/root/pull/7506 for v6-24. With llvm9, the module ptr gets reset upon emission.; Instead, just look for the symbol in the JIT - where it should be found,; as Init() is injecting it there, and we want to find *that* symbol,; not the one from the binary. Fixes `CodeUnloading/AtExit.C` cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7524:199,inject,injecting,199,https://root.cern,https://github.com/root-project/root/pull/7524,1,['inject'],['injecting']
Integrability,"hxx:23:10: fatal error: could not build module 'ROOTGpadv7'; 14:16:07 #include <ROOT/TPadPainter.hxx>; 14:16:07 ~~~~~~~~^; 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h); 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so; ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle).; ```; module ""ROOTGraphicsPrimitives"" {; requires cplusplus; module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }; module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }; module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }; module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }; module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }; module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }; module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }; module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }; module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }; module ""ROOT/TText.hxx"" { header ""ROOT/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2091#issuecomment-392598607:2414,depend,depend,2414,https://root.cern,https://github.com/root-project/root/pull/2091#issuecomment-392598607,1,['depend'],['depend']
Integrability,"i will check later tonight. i think it might be trivial. Ciao,; Giulio. On Wed, Aug 23 2023 at 3:05 PM, Axel Naumann ***@***.***>; wrote:. > @ktf <https://github.com/ktf> do you think you could have a look at this?; > Can we do without including a header from testing/?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/13516#issuecomment-1689929484>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAACSMEGK6DEOKF546VM27TXWX5ZDANCNFSM6AAAAAA33LZWIQ>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13516#issuecomment-1690343495:591,Message,Message,591,https://root.cern,https://github.com/root-project/root/issues/13516#issuecomment-1690343495,1,['Message'],['Message']
Integrability,"iC:0: RuntimeWarning: Output will be written to /tmp/vvasilev/vvasilev; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/vvasilev/vvasilev//afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. 	Command being timed: ""python3 -c import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'kO')""; 	User time (seconds): 10.03; 	System time (seconds): 9.36; 	Percent of CPU this job got: 57%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.48; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 289028; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 77334; 	Minor (reclaiming a frame) page faults: 410138; 	Voluntary context switches: 145350; 	Involuntary context switches: 131; 	Swaps: 0; 	File system inputs: 15192744; 	File system outputs: 936; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; bash-4.2$ rm /tmp/vvasilev/vvasilev/afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp*; bash-4.2$ /usr/bin/time -v python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp')"" ; ACLiC:0: RuntimeWarning: /afs/cern.ch/user/t/tnanut/public/Stephan is not writable!; ACLiC:0: RuntimeWarning: Output will be written to /tmp/vvasilev/vvasilev; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/vvasilev/vvasilev//afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roof",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7774#issuecomment-931958356:5071,message,messages,5071,https://root.cern,https://github.com/root-project/root/issues/7774#issuecomment-931958356,2,['message'],['messages']
Integrability,ib64/libc.so.6 (0x00007fe2b13ae000); libGraf3d.so.6.24 (0x00007fe2b12f9000); libGpad.so.6.24 (0x00007fe2b121b000); libGraf.so.6.24 (0x00007fe2b10b4000); libMultiProc.so.6.24 (0x00007fe2b10a5000); libNet.so.6.24 (0x00007fe2b0fc0000); /lib64/ld-linux-x86-64.so.2 (0x00007fe2b370e000); libbrotlienc.so.1 => /usr/lib64/libbrotlienc.so.1 (0x00007fe2b0f1c000); libbrotlidec.so.1 => /usr/lib64/libbrotlidec.so.1 (0x00007fe2b0f0e000); libutf8proc.so.2 => /usr/lib64/libutf8proc.so.2 (0x00007fe2b0eb9000); libdl.so.2 => /lib64/libdl.so.2 (0x00007fe2b0eb3000); liblz4.so.1 => /usr/lib64/liblz4.so.1 (0x00007fe2b0e80000); libz.so.1 => /lib64/libz.so.1 (0x00007fe2b0e5e000); libicui18n.so.69 => /usr/lib64/libicui18n.so.69 (0x00007fe2b0aff000); libicuuc.so.69 => /usr/lib64/libicuuc.so.69 (0x00007fe2b08da000); libThread.so.6.24 (0x00007fe2b0881000); libMatrix.so.6.24 (0x00007fe2b06f9000); libtbb_debug.so.2 => /usr/lib64/libtbb_debug.so.2 (0x00007fe2b06a4000); libpcre.so.1 => /lib64/libpcre.so.1 (0x00007fe2b061f000); liblzma.so.5 => /lib64/liblzma.so.5 (0x00007fe2b05f1000); libxxhash.so.0 => /usr/lib64/libxxhash.so.0 (0x00007fe2b05e4000); libzstd.so.1 => /usr/lib64/libzstd.so.1 (0x00007fe2b04bd000); libfreetype.so.6 => /usr/lib64/libfreetype.so.6 (0x00007fe2b03ca000); libssl.so.1.1 => /usr/lib64/libssl.so.1.1 (0x00007fe2b032e000); libcrypto.so.1.1 => /usr/lib64/libcrypto.so.1.1 (0x00007fe2b0033000); libbrotlicommon.so.1 => /usr/lib64/libbrotlicommon.so.1 (0x00007fe2b000f000); libicudata.so.69 => /usr/lib64/libicudata.so.69 (0x00007fe2ae4b4000); librt.so.1 => /lib64/librt.so.1 (0x00007fe2ae4a8000); libbz2.so.1 => /lib64/libbz2.so.1 (0x00007fe2ae48c000); libpng16.so.16 => /usr/lib64/libpng16.so.16 (0x00007fe2ae443000); ```. But then our software pulls in gandiva:; ```; [O2/latest] ~/alice/sw/gentoo2_x86-64/O2/latest/bin $> ldd o2-sim-serial; [...]; libgandiva.so.100 => /usr/lib64/libgandiva.so.100 (0x00007f5ae0b3d000); ```. Not sure this is the only dependency chain that leads to the llvm11.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180#issuecomment-843137896:4497,depend,dependency,4497,https://root.cern,https://github.com/root-project/root/issues/8180#issuecomment-843137896,1,['depend'],['dependency']
Integrability,"ib:arm64e+0x52ba4); #1 0x1062c0d60 in ROOT::Experimental::Detail::RFieldBase::GenerateValue() RField.cxx:332; #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147; #3 0x104699f00 in main ao2dToAO2NT.cxx:145; #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98; ==5670==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_lon",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:8893,message,message,8893,https://root.cern,https://github.com/root-project/root/issues/13996,1,['message'],['message']
Integrability,"icPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15751:1825,integrat,integrator,1825,https://root.cern,https://github.com/root-project/root/issues/15751,6,['integrat'],['integrator']
Integrability,"if(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Create and install the HTML based API documentation (requires Doxygen)"" ON); if(BUILD_DOCUMENTATION); find_package(Doxygen OPTIONAL_COMPONENTS dot). if(DOXYGEN_FOUND); set(DOXYGEN_PROJECT_NAME ""Data Acquisition System""); set(DOXYGEN_USE_MDFILE_AS_MAINPAGE ""${CMAKE_SOURCE_DIR}/README.md""); set(DOXYGEN_WARN_NO_PARAMDOC YES); set(DOXYGEN_GENERATE_QHP YES); set(DOXYGEN_QCH_FILE ""TheName.qch""); set(DOXYGEN_QHP_NAMESPACE org.doxygen.TheName.Project); set(DOXYGEN_GENERATE_LATEX NO); set(DOXYGEN_GENERATE_TREEVIEW YES); #set(DOXYGEN_HIDE_UNDOC_RELATIONS NO); #set(DOXYGEN_DOT_NUM_THREADS 1); #set(DOXYGEN_UML_LOOK YES); #set(DOXYGEN_UML_LIMIT_NUM_FIELDS 50); #set(DOXYGEN_TEMPLATE_RELATIONS YES); set(DOXYGEN_DOT_IMAGE_FORMAT svg); set(DOXYGEN_INTERACTIVE_SVG YES); #set(DOXYGEN_DOT_GRAPH_MAX_NODES 100); #set(DOXYGEN_DOT_TRANSPARENT YES); #set(DOXYGEN_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}). doxygen_add_docs(doc ALL; ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/doc/cmake.dox ${CMAKE_SOURCE_DIR}/usb; ALLOW_DUPLICATE_CUSTOM_TARGETS; #USE_STAMP_FILE; COMMENT ""Generating doxygen documentation for ${PROJECT_NAME}""; ). # install generated files; #install(; # DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc/html; # TYPE DOC; # OPTIONAL # because available only after ""make doc""; #); else(); message(FATAL_ERROR ""Doxygen is needed to build the documentation.""); endif(). add_custom_target(dox ALL; #DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt; ); include(make_documentation); PARSE_CMAKE_DOCUMENTATION(INCLUDES ""${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt"" EXCLUDES ""${CMAKE_CURRENT_BINARY_DIR}/*"" ); WRITE_CMAKE_DOCUMENTATION( ""${CMAKE_CURRENT_SOURCE_DIR}/cmake.dox"" SORTED ); endif(); ```; ### Aditional context; https://github.com/root-project/root/issues/8950; https://github.com/root-project/root/issues/8947; https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8999:3370,message,message,3370,https://root.cern,https://github.com/root-project/root/issues/8999,3,"['DEPEND', 'message']","['DEPENDS', 'message']"
Integrability,"ify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXX",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:5692,interface,interface,5692,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,"igned int; typename Architecture::Scalar_t = double]::&lt;lambda(Scalar_t)&gt;’, is used but never defined [-fpermissive] . ### Warnings:; - include/Vc/scalar/vector.h:288:9: warning: declaration of ‘reference’ shadows a previous local [-Wshadow] ; - include/Vc/sse/vector.h:318:9: warning: declaration of ‘reference’ shadows a previous local [-Wshadow] ; - include/Vc/common/simdarray.h:450:5: warning: declaration of ‘reference’ shadows a previous local [-Wshadow] ; - include/Vc/common/simdarray.h:1377:5: warning: declaration of ‘reference’ shadows a previous local [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2980#issuecomment-439015981:2229,depend,depends,2229,https://root.cern,https://github.com/root-project/root/pull/2980#issuecomment-439015981,1,['depend'],['depends']
Integrability,ild/146029/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_ROOT_8197](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_ROOT_8197/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_drawing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.root/meta/roottest_root_meta_drawing/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1137072883:2368,interface,interface,2368,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137072883,2,['interface'],['interface']
Integrability,ild/146050/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_ROOT_8197](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_ROOT_8197/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_drawing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.root/meta/roottest_root_meta_drawing/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1137155659:2368,interface,interface,2368,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137155659,2,['interface'],['interface']
Integrability,ild/146100/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_ROOT_8197](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_ROOT_8197/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_drawing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.root/meta/roottest_root_meta_drawing/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1138875776:2368,interface,interface,2368,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1138875776,2,['interface'],['interface']
Integrability,ild/workspace/root-pullrequests-build/build/graf2d/primitives && /usr/local/bin/cmake -E env LD_LIBRARY_PATH=/mnt/build/workspace/root-pullrequests-build/build/lib: ROOTIGNOREPREFIX=1 /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling -rootbuild -v2 -f G__ROOTGraphicsPrimitives.cxx -cxxmodule -s /mnt/build/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives.so -m libCore_rdict.pcm -m libRIO_rdict.pcm -excludePath /mnt/build/workspace/root-pullrequests-build/root -excludePath /mnt/build/workspace/root-pullrequests-build/build -rml libROOTGraphicsPrimitives.so -rmf /mnt/build/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives.rootmap -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/etc/cling/ -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/io/io/res -writeEmptyRootPCM ROOT/RBox.hxx ROOT/RColor.hxx ROOT/RDisplayItem.hxx ROOT/RDrawingAttr.hxx ROOT/RDrawingOptsBase.hxx ROOT/RLine.hxx ROOT/RMarker.hxx ROOT/RPadExtent.hxx ROOT/RPadLength.hxx ROOT/RPadPos.hxx ROOT/RPalette.hxx ROOT/RStringEnumAttr.hxx ROOT/RStyle.hxx ROOT/RText.hxx /mnt/build/workspace/root-pullrequests-build/root/graf2d/primitives/inc/LinkDef.h ; - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -&gt; ROOTGpadv7 -&gt; ROOTGraphicsPrimitives ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RBox.hxx:23:10: fatal error: could not build module 'ROOTGpadv7' ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives3d57938004_dictUmbrella.h),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3468#issuecomment-467425096:1717,depend,dependency,1717,https://root.cern,https://github.com/root-project/root/pull/3468#issuecomment-467425096,1,['depend'],['dependency']
Integrability,"ild/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:923:11: error: invalid use of incomplete type ‘class TFile’ ; - /mnt/build/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:924:18: error: incomplete type ‘TFile’ used in nested name specifier ; - /mnt/build/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:927:34: error: invalid use of incomplete type ‘class TFile’ ; - /mnt/build/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:928:34: error: invalid use of incomplete type ‘class TFile’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2619#issuecomment-421309703:1421,depend,depends,1421,https://root.cern,https://github.com/root-project/root/pull/2619#issuecomment-421309703,1,['depend'],['depends']
Integrability,"ile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'; | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'; | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>; | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root""; | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'; | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'; | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'; | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>; | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit; | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'; | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get; | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'; | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1""; | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'; | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw; | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'; | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'; | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs; | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'; | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png""; | `-NullStmt 0x5af6326e1a68 <line:13:1>; |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; <<<NULL>>>; ```. p.s. just for completeness I made a little mistake in the example above, I load the object in th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16560#issuecomment-2402546592:1581,depend,dependent,1581,https://root.cern,https://github.com/root-project/root/issues/16560#issuecomment-2402546592,8,['depend'],['dependent']
Integrability,"ile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:9846,message,message,9846,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,"iled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility.; (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting; TMVA::VariableDecorrTransform ; TMVA::VariableGaussTransform ; TMVA::VariableIdentityTransform ; TMVA::VariableNormalizeTransform ; TMVA::VariablePCATransform ; TMVA::VariableRearrangeTransform ; TMVA::VariableTransformBase ; TSpectrum2Transform ; TSpectrumTransform ; ROOT::Math::Transform3D ; TGeoUniformMagField ; class ROOT::Math::SinVariableTransformation ; class ROOT::Math::SqrtLowVariableTransformation ; class ROOT::Math::SqrtUpVariableTransformation ; class auto_ptr<ROOT::Math::MinimizerVariableTransformation> ; class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > ; class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> ; (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class; (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:6007,interface,interface,6007,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,2,['interface'],['interface']
Integrability,ilt target obj.clangLex; [ 69%] Built target LLVMCodeGen; [ 69%] Built target obj.clangEdit; [ 69%] Built target obj.clangRewrite; [ 69%] Built target clang-headers; [ 69%] Built target LLVMX86CodeGen; [ 69%] Built target obj.clangSerialization; [ 69%] Built target clangParse; [ 70%] Built target obj.clangAnalysis; [ 70%] Built target clangASTMatchers; [ 70%] Built target obj.clangDriver; [ 71%] Built target obj.clangRewriteFrontend; [ 71%] Built target clangEdit; [ 71%] Built target obj.clangFrontend; [ 71%] Built target clangLex; [ 71%] Built target clangRewrite; [ 71%] Built target obj.clangAST; [ 71%] Built target clangAnalysis; [ 71%] Built target clangSerialization; [ 71%] Built target LLVMOrcJIT; [ 71%] Built target obj.clingMetaProcessor; [ 71%] Built target clangRewriteFrontend; [ 71%] Built target obj.clingUtils; [ 71%] Built target clangFrontend; [ 71%] Built target clangDriver; [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o; [ 72%] Built target obj.clangCodeGen; [ 72%] Built target clangAST; [ 72%] Built target obj.clangSema; [ 72%] Built target clingMetaProcessor; [ 72%] Built target clingUtils; [ 72%] Built target clangCodeGen; [ 72%] Built target clangSema; [ 72%] Built target obj.clingInterpreter; [ 72%] Built target clingInterpreter; [ 72%] Built target clad; [ 72%] Built target CLING; [ 72%] Built target LLVMRES; [ 72%] Built target Dictgen; [ 72%] Built target ClingUtils; [ 73%] Built target MetaCling; [ 73%] Built target obj.clangBasic; [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a; [ 73%] Built target clangBasic; [ 73%] Linking CXX shared library ../../../lib/libCling.so; [ 73%] Linking CXX executable src/rootcling_stage1; // ... snip ...; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7893:7485,depend,depend,7485,https://root.cern,https://github.com/root-project/root/issues/7893,1,['depend'],['depend']
Integrability,"imental8RPadBaseE' unresolved while linking [cling interface function]!; You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RDrawable; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:3919,interface,interface,3919,https://root.cern,https://github.com/root-project/root/issues/14587,1,['interface'],['interface']
Integrability,"imilar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:965,message,message,965,https://root.cern,https://github.com/root-project/root/pull/12523,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"imizer.h Math/GSLMinimizer1D.h Math/GSLMultiRootFinder.h Math/GSLNLSMinimizer.h Math/GSLQuasiRandom.h Math/GSLRandom.h Math/GSLRandomFunctions.h Math/GSLRndmEngines.h Math/GSLRootFinder.h Math/GSLRootFinderDeriv.h Math/GSLSimAnMinimizer.h Math/InterpolationTypes.h Math/Interpolator.h Math/KelvinFunctions.h Math/MCParameters.h Math/PdfFuncMathMore.h Math/Polynomial.h Math/ParamFunction.h Math/QuasiRandom.h Math/RootFinderAlgorithms.h Math/SpecFuncMathMore.h Math/Vavilov.h Math/VavilovAccurate.h Math/VavilovAccurateCdf.h Math/VavilovAccuratePdf.h Math/VavilovAccurateQuantile.h Math/VavilovFast.h /build/root-cds-6.26.04.sg/math/mathmore/inc/Math/LinkDef.h; <<< cling interactive line includer >>>: fatal error: module file '/build/root-cds-6.26.04.sg/.build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/build/root-cds-6.26.04.sg/.build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:142: math/mathmore/G__MathMore.cxx] Error 1; make[2]: Leaving directory '/build/root-cds-6.26.04.sg/.build'; make[1]: *** [CMakeFiles/Makefile2:26590: math/mathmore/CMakeFiles/G__MathMore.dir/all] Error 2; ```; Something still seems to be wrong with `cling`? What is that `Rint` file, is it related to R (which isn't enabled)?; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix exceptions fftw3 fitsio gdml gfal gnuinstall http imt mathmore mlp minuit2 mysql opengl pgsql pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd; ```. I'm already running out of ideas but will retry with the full dependency set and `cmake` options line, keeping `-j 1`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1161349757:5400,depend,dependency,5400,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1161349757,1,['depend'],['dependency']
Integrability,imt should depend on MultiProc for TExecutor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7040:11,depend,depend,11,https://root.cern,https://github.com/root-project/root/pull/7040,1,['depend'],['depend']
Integrability,"in /usr/home/erik/devel/resources/root/build; 1 error. make: stopped in /usr/home/erik/devel/resources/root/build; ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell; -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4; Processor 8 core 0 MHz (amd64); Build type RelWithDebInfo; Install path /usr/local; Compiler Clang 14.0.5; Compiler flags:; C -pipe -Wall -W -pthread -O2 -g -DNDEBUG; C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd; ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell; cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b; ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865#issuecomment-1779361849:3737,message,message,3737,https://root.cern,https://github.com/root-project/root/issues/13865#issuecomment-1779361849,1,['message'],['message']
Integrability,"in CIFactory:; - Add -fno-threadsafe-statics flag (for Windows only), to prevent potential unresolved symbols at run-time. in MetaProcessor::readInputFromFile:; - add required std::ifstream::binary flag when opening the std::ifstream; - add missing backslashes. in PlatformWin:; - properly format error messages; - in IsDLL(): check and return false if the file size is 0; - fix _CxxThrowException symbol name (not fully understood - to be reviewed); - filter out a couple of system dlls when looking for symbols",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607:303,message,messages,303,https://root.cern,https://github.com/root-project/root/pull/1607,1,['message'],['messages']
Integrability,"in_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + SET_PROPERTY(TARGET ${lib} APPEND PROPERTY INTERFACE_COMPILE_OPTIONS ""-Wno-deprecated-copy""); endif(); endforeach(); # Once we require at least cmake 3.11, target_include_directories will work for imported targets. ```. ### Additional context; Similar PR: #5396; From [`target_compile_options` documentation](https://cmake.org/cmake/help/latest/command/target_compile_options.html#arguments): ""New in version 3.11: Allow setting INTERFACE items on IMPORTED targets.""; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:6340,INTERFACE,INTERFACE,6340,https://root.cern,https://github.com/root-project/root/issues/7654,3,['INTERFACE'],['INTERFACE']
Integrability,"inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc -I/mnt/build/workspace/root-pullrequests-build/root/test/unit_testing_support -isystem googletest-prefix/src/googletest/googletest/include -isystem googletest-prefix/src/googletest/googlemock/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -std=c++11 -MD -MT tree/dataframe/test/CMakeFiles/dataframe_vecops.dir/dataframe_vecops.cxx.o -MF tree/dataframe/test/CMakeFiles/dataframe_vecops.dir/dataframe_vecops.cxx.o.d -o tree/dataframe/test/CMakeFiles/dataframe_vecops.dir/dataframe_vecops.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_vecops.cxx ; - [2021-05-04T14:51:49.461Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RTreeColumnReader.hxx:100:42: error: dependent-name ‘ROOT::VecOps::RVec&lt;T&gt;::pointer’ is parsed as a non-type, but instantiation yields a type ; - [2021-05-04T14:51:49.461Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RTreeColumnReader.hxx:100:42: error: dependent-name ‘ROOT::VecOps::RVec&lt;T&gt;::pointer’ is parsed as a non-type, but instantiation yields a type ; - [2021-05-04T14:51:52.248Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-832003505:3069,depend,dependent-name,3069,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-832003505,1,['depend'],['dependent-name']
Integrability,inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1822,message,message,1822,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"include them or comment them out. On Ubuntu 20.04.1 LTS (gcc 9.4.0), with ROOT version from 6.12.06 to 6.28.04, none of the combinations got to work. For instance, when the TMapFile works with ROOT 6.12.06, then the TApplication returns an error of ""Segmentation violation"". With a newer ROOT, e.g. 6.28.04, the TApplication works but the TMapFile got the error message; *****************************************************************************; Error in <TMapFile::TMapFile> : no memory mapped file capability available; Use rootn.exe or link application against ""-lNew""; *****************************************************************************. Could you guys have a look at this problem and find out what happened or may find a solution? Many thanks in advance. Huagen Xu from FZ Juelich, IKP; [root_examples.zip](https://github.com/root-project/root/files/12415948/root_examples.zip). ### Reproducer. As attached, there are three Macro files plus one Makefile. Those three files are all the ROOT examples to demostrate how the TMapFile as well as the TApplication work. To reproduce the problem described above, one could follow the tipps below.; 1. Unzip the file into a local directory ; 2. Open a terminal and cd to the unzipped directory, type ""make"" to compile the files; 3. Run ""./appdemo"" in a terminal to check whether TApplication works properly; 4. Run ""./hisprod"" in a termianl to check whether the TMapFile will be created; 5. Assuming the ""hisprod"" works and creates a ""hsimple.map"" file, run ""./hisplot"" in a new Terminal to check whether the TMapFile and TApplication could work together. In the Makefile, it is required to have the link of -lNew or --new for running TMapFile. With different combinations of ROOT and operating versions, the error message might be different. . ### ROOT version. Ubuntu 20.04.2 LTS; ROOT 6.12.06 to 6.28.04. ### Installation method. both of compiling and binary package. ### Operating system. Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511:2571,message,message,2571,https://root.cern,https://github.com/root-project/root/issues/13511,1,['message'],['message']
Integrability,"include(s).; #include <memory>. // Forward declaration(s).; class ROpaqueTaskArena;. class RTaskArena {; public:; /// Default constructor; RTaskArena();. private:; /// Task arena object; std::unique_ptr<ROpaqueTaskArena> fTaskArena;; };. #endif // TEST_RTASKARENA_HXX; [bash][Legolas]:build > more ../ROpaqueTaskArena/RTaskArena.cxx. // Local include(s).; #include ""RTaskArena.hxx""; #include ""ROpaqueTaskArena.hxx"". RTaskArena::RTaskArena(); : fTaskArena( new ROpaqueTaskArena() ) {}; [bash][Legolas]:build > more ../ROpaqueTaskArena/test.cxx . // Local include(s).; #include ""RTaskArena.hxx"". int main() {. RTaskArena arena;; return 0;; }; [bash][Legolas]:build > cmake ../ROpaqueTaskArena/; -- The CXX compiler identification is GNU 9.3.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Configuring done; -- Generating done; -- Build files have been written to: /home/krasznaa/development/ropaquetaskarena/build; [bash][Legolas]:build > make; Scanning dependencies of target TaskArenaLib; [ 25%] Building CXX object CMakeFiles/TaskArenaLib.dir/RTaskArena.cxx.o; [ 50%] Linking CXX shared library libTaskArenaLib.so; [ 50%] Built target TaskArenaLib; Scanning dependencies of target TaskArenaTest; [ 75%] Building CXX object CMakeFiles/TaskArenaTest.dir/test.cxx.o; In file included from /usr/include/c++/9/memory:80,; from /home/krasznaa/development/ropaquetaskarena/ROpaqueTaskArena/RTaskArena.hxx:5,; from /home/krasznaa/development/ropaquetaskarena/ROpaqueTaskArena/test.cxx:3:; /usr/include/c++/9/bits/unique_ptr.h: In instantiation of ‘void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = ROpaqueTaskArena]’:; /usr/include/c++/9/bits/unique_ptr.h:292:17: required from ‘std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = ROpaqueTaskArena; _Dp = std::default_d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7062#issuecomment-762847080:2828,depend,dependencies,2828,https://root.cern,https://github.com/root-project/root/pull/7062#issuecomment-762847080,1,['depend'],['dependencies']
Integrability,include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:171): will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:171): will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:171): will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:171): will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:171): will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-596563227:1309,interface,interface,1309,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-596563227,3,['interface'],['interface']
Integrability,"indeed. I am not sure why this choice was made though. Anyway, we even already have ```TClassEdit::DemangleTypeIdName(const std::type_info& ti, int& errorCode)``` that hides the platform dependence ... it might need to be moved though to be accessible from Rtypes.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1389#issuecomment-347666945:187,depend,dependence,187,https://root.cern,https://github.com/root-project/root/pull/1389#issuecomment-347666945,1,['depend'],['dependence']
Integrability,ing interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-12T06:56:09.498Z] ghprbPullLongDescription=This addresses test failures like:\r\n```\r\n 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417#issuecomment-860019280:2781,message,message,2781,https://root.cern,https://github.com/root-project/root/pull/8417#issuecomment-860019280,1,['message'],['message']
Integrability,"ing of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS3] Moved `DependencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation; [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation; [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF] New mechanism to implicitly convert numbers to RooRealVar&; [RF] Remove RooFormula code for gcc <= 4.8; [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; [RF] More use of `snapshot()` overload with output parameter; [RF] Bring back `RooStats::FeldmanCousins::SetData()`; [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12618#issuecomment-1497317057:7761,wrap,wrapper,7761,https://root.cern,https://github.com/root-project/root/pull/12618#issuecomment-1497317057,2,['wrap'],['wrapper']
Integrability,ing tests:; - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_friend_trees](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_friend_trees/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_inv_mass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_inv_mass/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_reducer_merge](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_reducer_merge/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_include_headers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_include_headers/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_histo_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_histo_write/); - [projectroot.bindings.experimental.distrdf.tests.unit.backend.pyunittests_distrdf_unit_backend_test_spark](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.unit/backend/pyunittests_distrdf_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-774106349:1204,integrat,integration,1204,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-774106349,1,['integrat'],['integration']
Integrability,"ingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module root_std_complex.h resolved but not visible![5558/8175] Generating G__Net.cxx, ../../lib/libNet_rdict.pcm, ../../lib/libNet.rootmap, ../../lib/Net.pcm ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module Rtypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module Rtypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module RRemoteProtocol.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TApplication.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TMD5.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TUrl.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBufferFile.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module MessageTypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBits.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSysEvtHandler.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TApplication.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSysEvtHandler.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TUrl.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSystem.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module MessageTypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TNamed.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:4213,Message,MessageTypes,4213,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Message'],['MessageTypes']
Integrability,"ing_assertion(mode); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 1312: INTERNALERROR> assert False; 1312: INTERNALERROR> AssertionError; 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py; 1312: Traceback (most recent call last):; 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: config.do_configure(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: self.hook.pytest_configure(config=self); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: return self._docall(methods, kwargs); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall; 1312: res = mc.execute(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute; 1312: res = method(**kwargs); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure; 1312: warn_about_missing_assertion(mode); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 1312: assert False; 1312: AssertionError; 1312: ; 1312: -- END TEST OUTPUT --; 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):; 1312: got exit code 3 but expected 0; 1312: ; 1312: ; 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:; 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:4971,message,message,4971,https://root.cern,https://github.com/root-project/root/issues/6597,1,['message'],['message']
Integrability,"inished name='Task-245' coro=<SpecCluster._correct_state_internal() done, defined at /home/vpadulan/.local/lib/python3.10/site-packages/distributed/deploy/spec.py:330> exception=RuntimeError('cannot schedule new futures after shutdown')>); Traceback (most recent call last):; File ""/home/vpadulan/.local/lib/python3.10/site-packages/tornado/ioloop.py"", line 741, in _run_callback; ret = callback(); File ""/home/vpadulan/.local/lib/python3.10/site-packages/tornado/ioloop.py"", line 765, in _discard_future_result; future.result(); RuntimeError: cannot schedule new futures after shutdown; ```. Initially I thought these errors were just a by-product of the errors coming from `TInterpreter` that were leaving the dask worker in a bad state and thus breaking the scheduler too. But then, I updated to `distributed==2022.8.1` and they were not present. So I went on and I used `git bisect` starting from `2022.8.0` going onwards. . I was able to identify the following scenarios, depending on a combination of the status of ROOT and the version of dask `distributed` module:. * ROOT current master, with `distributed==2022.8.0`: errors like shown shown above, both those coming from `TInterepreter::Calc` from RDF and those coming from dask about `cannot schedule new futures after shutdown` that I mentioned in this comment.; * ROOT current master, with `distributed==2022.8.1`: **No more errors about futures after shutdown**. The errors from `TInterpreter::Calc` remain; * ROOT master+fix, with `distributed==2022.8.0`: **No more errors from `TInterpreter::Calc`**, but still errors from dask about `cannot schedule new futures after shutdown` **and also the segfaults with Python-only stacktrace** that I wrote in a previous comment; * ROOT master+fix, with `distributed==2022.8.1`: **No errors at all!**. So it seems that a mix of adding the fix suggested by Philippe (a `R_LOCKGUARD` in `TClingClassInfo::IsEnum`) plus updating to `distributed==2022.8.1` fixes all our problems. ## More details ab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515#issuecomment-1272186236:1710,depend,depending,1710,https://root.cern,https://github.com/root-project/root/issues/11515#issuecomment-1272186236,1,['depend'],['depending']
Integrability,"inor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;; \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member; \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14555:1515,rout,routines,1515,https://root.cern,https://github.com/root-project/root/issues/14555,1,['rout'],['routines']
Integrability,io: Add version number to missing StreamerInfo record error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4374:60,message,message,60,https://root.cern,https://github.com/root-project/root/pull/4374,1,['message'],['message']
Integrability,"ion whether offsets have changed since the previous evaluation and if so they are sent over the MultiProcess::Messenger. Note that while the LikelihoodGradientJob doesn't itself use the offset (it doesn't calculate the likelihood), it must still synchronize offsets, because during the gradient calculation the LikelihoodSerial objects on the workers are used to calculate the likelihoods there, so for them the offsets must be up to date.; * The LikelihoodJob contains a LikelihoodSerial member as well now. This allows the LikelihoodJob to trigger calculating the offsets on the master process before sending them to the workers.; * LikelihoodWrapper has some added private helper functions for managing offsets. - Other miscellaneous changes:; * LikelihoodWrapper::setApplyWeightSquared was implemented properly for RooSumL likelihoods as well, passing along the call to component RooUnbinnedLs. Note, however, that it is currently not reachable for users because there is no interface to pass this along from the RooMinimizer, which contains the MinuitFcnGrad, which contains the LikelihoodWrapper. A comment in MinuitFcnGrad.h refers to this, reminding future devs to also flip offsets_reset_ when (un)setting squared weights.; * LikelihoodWrapper now holds the likelihood_type. This cleans up some code duplication in LikelihoodSerial and LikelihoodJob, which previously used the type only in their ctors, and avoids dynamic_casts later, e.g. on when calculating offsets.; * A RooSubsidiaryL can now also be computed with LikelihoodSerial and LikelihoodJob; this case was still missing in their evaluation functions.; * The LikelihoodSerial, LikelihoodJob and LikelihoodGradientJob ""ConstrainedAndOffset"" test cases used the wrong argument for the constrained parameter. These are now corrected from alpha_bkg_obs_A to become alpha_bkg_A.; * In LikelihoodJobTest, the added test case ""UnbinnedGaussian1DSelectedParameterValues"" shows where splitting over events can lead to bit-wise differences",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:3453,interface,interface,3453,https://root.cern,https://github.com/root-project/root/pull/12202,1,['interface'],['interface']
Integrability,"ion=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420; #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667; #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594; #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216; #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=; 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981; #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099; #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928; #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149; #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474#issuecomment-864393181:6809,depend,dependentVars,6809,https://root.cern,https://github.com/root-project/root/issues/8474#issuecomment-864393181,1,['depend'],['dependentVars']
Integrability,"ir<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308); ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558); ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623); ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631); ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633); ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53); ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241); ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157); ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501); ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321); ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124); ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326); ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95); ==92602== by 0x4549833: THashTable::Add(TObject*) (T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:9552,depend,depends,9552,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,isibility=hidden -Wno-shadow -fno-strict-aliasing -Wno-unused-parameter -Wwrite-strings -Wno-long-long -Wno-missing-field-initializers -DLLVM_BUILD_GLOBAL_ISEL -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -MD -MT core/foundation/CMakeFiles/Foundation_Stage1.dir/src/TClassEdit.cxx.o -MF core/foundation/CMakeFiles/Foundation_Stage1.dir/src/TClassEdit.cxx.o.d -o core/foundation/CMakeFiles/Foundation_Stage1.dir/src/TClassEdit.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/TClassEdit.cxx ; - [2020-12-01T16:40:31.719Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/TClassEdit.cxx:513:37: error: ‘offset’ was not declared in this scope ; - [2020-12-01T16:40:31.719Z] FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -Iginclude -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT core/foundation/CMakeFiles/Foundation.dir/src/TClassEdit.cxx.o -MF core/foundation/CMakeFiles/Foundation.dir/src/TClassEdit.cxx.o.d -o core/foundation/CMakeFiles/Foundation.dir/src/TClassEdit.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/TClassEdit.cxx ; - [2020-12-01T16:40:31.719Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/TClassEdit.cxx:513:37: error: ‘offset’ was not declared in this scope ; - [2020-12-01T16:43:54.915Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - [2020-12-01T16:43:54.915Z] CMake Error at VC-stamp/VC-download-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6895#issuecomment-736673041:2578,message,message,2578,https://root.cern,https://github.com/root-project/root/pull/6895#issuecomment-736673041,1,['message'],['message']
Integrability,"ister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:189270,depend,depends,189270,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"ister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:193464,depend,depends,193464,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"it depends on the timescales/cost of the change, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1662#issuecomment-367848075:3,depend,depends,3,https://root.cern,https://github.com/root-project/root/pull/1662#issuecomment-367848075,1,['depend'],['depends']
Integrability,"it's official request, we want to integrate TBB 2021.1.1 and the ROOT tag for cmssw master is 6.22.06",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6933#issuecomment-762161425:34,integrat,integrate,34,https://root.cern,https://github.com/root-project/root/issues/6933#issuecomment-762161425,1,['integrat'],['integrate']
Integrability,"it-roofitcore-test-testSumW2Error (Failed); 	294 - gtest-roofit-roofitcore-test-testLikelihoodGradientJob (Failed); 	295 - gtest-roofit-roofitcore-test-testLikelihoodJob (Failed); 	298 - gtest-roofit-roostats-test-testSPlot (Failed). Here is an example failure:; ```; 331/1268 Test #292: gtest-roofit-roofitcore-test-testSumW2Error ...............................***Failed 0.58 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 2 tests from SumW2Error; [ RUN ] SumW2Error.BatchMode; /builddir/build/BUILD/root-6.30.02/core/testsupport/src/TestSupport.cxx:77: Failure; Failed; Received unexpected diagnostic of severity 2000 at 'RooNaNPacker' reading 'Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern'.; Suppress those using ROOT/TestSupport.hxx; [ FAILED ] SumW2Error.BatchMode (408 ms); [ RUN ] SumW2Error.ExtendedFit; [ OK ] SumW2Error.ExtendedFit (112 ms); [----------] 2 tests from SumW2Error (521 ms total); [----------] Global test environment tear-down; [==========] 2 tests from 1 test suite ran. (521 ms total); [ PASSED ] 1 test.; [ FAILED ] 1 test, listed below:; [ FAILED ] SumW2Error.BatchMode; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.30.02/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```; Normally, when root issues a warning it is not fatal, and program execution continues. However, this is a test, and the ROOT::TestSupport installs a custum error handler that captures warnings and rethrow them as GTest failures. So it this contaext a warning is expected to generate a failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10303#issuecomment-1837156931:2946,message,message,2946,https://root.cern,https://github.com/root-project/root/pull/10303#issuecomment-1837156931,1,['message'],['message']
Integrability,it/TestStatistics/LikelihoodGradientWrapper.h:30:7: error: conflicting declaration ‘struct RooFit::TestStatistics::RooAbsL’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:31:8: error: conflicting declaration ‘struct RooFit::TestStatistics::WrapperCalculationCleanFlags’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:37:46: error: ‘RooAbsL’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:37:53: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:46: error: ‘WrapperCalculationCleanFlags’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:74: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:44:11: error: ‘LikelihoodGradientMode’ has not been declared . And 2038 more. ### Warnings:; - [2023-01-06T12:13:58.100Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:3:32: warning: declaration of ‘G__RooFitCoreInit290’ shadows a global declaration [-Wshadow] ; - [2023-01-06T12:13:58.935Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:19968:46: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - [2023-01-06T12:13:58.935Z] /data/sftnight/workspace/root-pullrequests-build/build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373555060:2063,Wrap,WrapperCalculationCleanFlags,2063,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373555060,1,['Wrap'],['WrapperCalculationCleanFlags']
Integrability,"ith RTLD_DEEPBIND. (By design, RTLD_DEEPBIND links to libstdc++ first before checking the global namespace, so it does not see the copy-relocated symbol.). I am not a huge fan of the `RTLD_DEEPBIND` approach because it is not portable and it essentially overrides the dynamic linker behavior yet one more time. I am not sure how this would translate to Windows for example. > ; > ; > The problem can be avoided if executables are compiled with -fPIC as well.; > I just tried locally to compile the failing ROOT ctests with -fPIC and this fixed the segmentation faults.; > The question is whether this is a proper solution, since it would require to compile all executables with -fPIC. On the other hand, I don't know how to fix this in another way. Perhaps this could be enabled via a special CMake option for ROOT, which enables RTLD_DEEPBIND for libCling and -fPIC for all executables. IIUC, `RTLD_DEEPBIND` alters the search order of the dynamic linker and using -fPIC intends to deduplicate. That seems as bad as preloading a set of llvm dependent libraries, IMO. Do we need `libgandiva.so` to be compiled with -fPIC or just the executables which 'use' ROOT?. > @vgvassilev : I do not see how I could control this.; > https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L2037 states that InitInterpreter() should be called after main(). Therefore, as we link to libgandiva, which links to llvm libs, the system LLVM symbols will always be in the global namespace by design. They are loaded before main(), while InitInterpreter() loads libCling only after main(). This check is to protect the subsequent `dlsyms` in TCling to resolve symbols from the wrong place. We can fix the check and play with the JIT resolution logic by playing with the search order here: https://github.com/root-project/root/blob/39630b7530771be3e4643048361886dcfb057f07/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp#L299-L302. The challenge is to come up with a consistent symbol resolution :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564015399:2215,depend,dependent,2215,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564015399,1,['depend'],['dependent']
Integrability,"itic voigt's dumping function. ; math/mathmore/src/VoigtRelativistic.cxx - Implements the two functions defined in VoigtRelativistic.h . This implementation uses the redefinition of variables in https://arxiv.org/pdf/1711.09304.pdf which is required to write the integral in a computationally feasiable way.; tutorials/math/Voigt.C - Add a tutorial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:1523,integrat,integrator,1523,https://root.cern,https://github.com/root-project/root/pull/11049,1,['integrat'],['integrator']
Integrability,"its between fit cycles. Only the ones that changed.; - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation.; - [ ] Use batch evaluation & inverted CDF for toys; - [ ] Continue to improve interface with variadic templates; - [ ] Profile and optimise new Batch interface; - [ ] Modernise proxyList member of RooSimultaneous; - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.); - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous; - [ ] Implement analytical integration of RooJohnson.; - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense.; - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`.; - [ ] Use analytic integrals in RooBinSamplingPdf when available.; - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf.; - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304; - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits.; - [ ] Throw Gaussian & Poisson constraints into dedicated fast class.; - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface.; - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits.; - [ ] #7217, pythonisations for RooFit; - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557:1370,integrat,integrator,1370,https://root.cern,https://github.com/root-project/root/issues/6557,4,"['integrat', 'interface', 'message']","['integrator', 'interface', 'message']"
Integrability,ix/src/VDT-stamp/VDT-download ; - [2021-08-26T14:15:12.643Z] CMake Error at VDT-stamp/VDT-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:24.829Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src/DAVIX-stamp/DAVIX-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src/DAVIX-stamp/DAVIX-download ; - [2021-08-26T14:15:24.829Z] CMake Error at DAVIX-stamp/DAVIX-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:37.013Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - [2021-08-26T14:15:37.013Z] CMake Error at TBB-stamp/TBB-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:37.013Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - [2021-08-26T14:15:37.013Z] CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:37.013Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - [2021-08-26T14:15:37.013Z] CMake Error at VC-stamp/VC-download-Release.cmake:49 (message): . And 2 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8903#issuecomment-906453026:1633,message,message,1633,https://root.cern,https://github.com/root-project/root/pull/8903#issuecomment-906453026,3,['message'],['message']
Integrability,"iz/libcmaes), a novel high performance C++11 (with Python bindings) library for blackbox optimization. The new minimizer yields better results than Minuit2 for most problems, though for an higher computation cost on average. See below for links to relevant benchmarks backing up these claims. This implementation is on behalf of [Inria Saclay Research group TAO](http://www.inria.fr/en/teams/tao), [Laboratoire de l'Accelerateur Lineaire, group AppStat](http://appstat.lal.in2p3.fr/) and [University Paris-Sud LRI](https://www.lri.fr/index_en.php?lang=EN). ===Features===; - Seamless replacement for Minuit, Minuit2 and Fumili; - Seamless support for RooFit; - Relying on libcmaes allows for best performances known for CMA-ES + access to several flavors of the original algorithm, yielding best results with a trade off for computational cost, as needed; - Compilation support for both Autotools and CMake; - Included tutorial files, tests, and a special benchmark vs Minuit2. ===Documentation===; - Main documentation for building and using the new minimizer is here: https://github.com/beniz/libcmaes/wiki/using-CMA-ES-in-CERN's-ROOT. ===Performances===; - On-par with Minuit2 on low dimensional problems (< 10-D), consistently beats Minuit2 in higher dimension, leading to better fits. These claims are backed by two benchmarks and two experiments on real world data (we are still waiting from some results from usage at CERN); - Benchmark CMA-ES vs Minuit on [BBOB](http://coco.gforge.inria.fr/doku.php?id=bbob-2013) available here: https://drive.google.com/open?id=0B3J1vWYhta9ibktXc2JLRUExUTA&authuser=0; - In-ROOT benchmark vs Minuit2 on low-dimensional problems, results available here: https://drive.google.com/open?id=0B3J1vWYhta9iTmR0T0hnN21lSGM&authuser=0; - Beats out Minuit2 up to 98% of the time on some experiments (data + code available on demand from Auger group, ask me). I am available for help in testing and possibly integrating and maintaining this addition, just let me know.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40:2128,integrat,integrating,2128,https://root.cern,https://github.com/root-project/root/pull/40,1,['integrat'],['integrating']
Integrability,"ize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:2316,depend,dependency,2316,https://root.cern,https://github.com/root-project/root/pull/12681,4,['depend'],['dependency']
Integrability,"ize.cxx:1105 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&) Pre-release format version: RC 1; [ OK ] RNTuple.RandomAccess (113 ms); [ RUN ] RNTuple.LargeFile; Warning in [ROOT.NTuple] Warning /builddir/build/BUILD/root-6.26.02/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&) The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in [ROOT.NTuple] Warning /builddir/build/BUILD/root-6.26.02/tree/ntuple/v7/src/RNTupleSerialize.cxx:1105 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&) Pre-release format version: RC 1; /builddir/build/BUILD/root-6.26.02/test/unit_testing_support/ROOTUnitTestSupport.cxx:75: Failure; Failed; Received unexpected diagnostic of severity 2000 at 'RIoUring' reading 'io_uring is unexpectedly not available because:; batch 0: read failed for ReadEvent[1], error: Invalid argument'.; Suppress those using ROOTUnitTestSupport.h; /builddir/build/BUILD/root-6.26.02/test/unit_testing_support/ROOTUnitTestSupport.cxx:75: Failure; Failed; Received unexpected diagnostic of severity 2000 at 'RRawFileUnix' reading 'io_uring setup failed, falling back to blocking I/O in ReadV'.; Suppress those using ROOTUnitTestSupport.h; [ FAILED ] RNTuple.LargeFile (20982 ms); [----------] 3 tests from RNTuple (29599 ms total); [----------] Global test environment tear-down; [==========] 3 tests from 1 test suite ran. (29599 ms total); [ PASSED ] 2 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.LargeFile; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.26.02/cmake/modules/RootTestDriver.cmake:227 (message):; error code: 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10303#issuecomment-1100792435:3812,message,message,3812,https://root.cern,https://github.com/root-project/root/pull/10303#issuecomment-1100792435,1,['message'],['message']
Integrability,"ject_Repr (obj);; if (!repr) return nullptr;; const char* s = PyROOT_PyUnicode_AsString (repr);; if (*s == '<') ++s;; if (strncmp (s, ""ROOT."", 5) == 0); s += 5;; if (strncmp (s, ""cppyy.gbl."", 10) == 0); s += 10;; const char* p = strstr (s, "" object "");; if (!p) return nullptr;; std::string name;; name.reserve (p-s + 10);; while (s < p) {; if (*s == '.'); name += ""::"";; else; name += *s;; ++s;; }; TClass* cls = TClass::GetClass (name.c_str());; Py_DECREF (repr);; return cls;; }; ```. We can identify at least three distinct problems here. 1. First, this code is stupid. It's trying to get the TClass for a pyroot; object. It does this by calling repr on the object (which could result; in something very large) and then trying to extract the class name; and looking it up with TClass. In fact, it looks like this hasn't; actually been working for a while now, because the format of the repr; string changed --- and now doesn't include the 'object' string.; If i change this to instead use Py_TYPE(obj)->tp_name, then everything; works (and much faster too!). 2. I originally added this code here, but from the comments, it was copied; from the pyroot of the time. The reason why we're doing this in this; roundabout way to begin with is because the TPython interface doesn't; supply any way to get the TClass from a pyroot object. If it would; add a call for that, than this could be streamlined. 3. Finally, there seems to have been a regression with finding the repr; string for a pyroot object between 6.26.10 and dev4. If i have a loop; just calling repr for a vector<float> instance, it runs very slowly; and eventually starts printing memory errors from cling. But with 6.26.10,; it runs much faster and does not start crashing. It sounds sort of like; code is now being repeatedly jitted each time with dev4, but i have; not tried to verify that. Anyway, this change gets at least the unit tests working. Will try to get; that merged soon, and will try to report the repr issue separately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12406#issuecomment-1547118274:1449,interface,interface,1449,https://root.cern,https://github.com/root-project/root/issues/12406#issuecomment-1547118274,1,['interface'],['interface']
Integrability,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1849,interface,interface,1849,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479,2,['interface'],['interface']
Integrability,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1849,interface,interface,1849,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598,2,['interface'],['interface']
Integrability,"k since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce; * On ROOT version 6.22/08; ```; $ root -l; root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};; root [1] Take(v, 2); (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }; root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);; root [3] firstTwo; (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }; root [4] auto firstTwo2 = Take(v, 2);; ROOT_prompt_4:1:1: error: Syntax error; auto firstTwo2 = Take(v, 2);; ^; FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'; |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>; | |-DeclStmt 0x38829b8 <line:1:1, col:28>; | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit; | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'; | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'; | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'; | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2; | `-NullStmt 0x38829d0 <line:2:1>; |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6; #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6; #2 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9261:1659,depend,dependent,1659,https://root.cern,https://github.com/root-project/root/issues/9261,3,['depend'],['dependent']
Integrability,"k&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful IN2P3 LAPP_LAKE. https://bigpanda.cern.ch//media/filebrowser/f9695015-c110-4e2e-9c62-d56eade824f8/panda/tarball_PandaJob_4926136184_IN2P3-LAPP_LAKE/payload.stdout. [2020-12-19 02:08:57.250908 +0100][Debug ][XRootDTransport ] [lapp-se01.in2p3.fr:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 500); [2020-12-19 02:08:57.251553 +0100][Debug ][XRootDTransport ] [lapp-se01.in2p3.fr:1094 #0.0] Sending out kXR_login request, username: atlaspil, cgi: ?xrd.cc=fr&xrd.tz=1&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=lapp-wn168.in2p3.fr&xrd.rn=v4.10.0, dual-stack: false, private IPv4: false, private IPv6: false. Failed Tokyo:. https://bigpanda.cern.ch//media/filebrowser/e051d153-88d6-4010-9bae-adee1dc89c07/panda/tarball_PandaJob_4925837464_TOKYO/payload.stdout. [2020-12-18 18:28:04.321336 +0000][Debug ][XRootDTransport ] [lcg-se01.icepp.jp:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 500). Failed BNL:. https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout. [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: manager [], protocol version 500). Fail Romania:. https://bigpanda.cern.ch//media/filebrowser/60928171-593f-4422-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout. [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 400). Fail canada:. https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout. [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400). F",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758062082:2739,protocol,protocol,2739,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758062082,1,['protocol'],['protocol']
Integrability,"ke Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:735 (add_dependencies):; The dependency target ""install-clang"" of target ""install-clang-cl"" does not; exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:736 (add_dependencies):; The dependency target ""install-clang-stripped"" of target; ""install-clang-cl-stripped"" does not exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). -- Generating done; CMake Generate step failed. Build files cannot be regenerated correctly.; error: builder for '/nix/store/8xsj5zq00fkbndl1zzjngmxj3hhi51hd-root-6.28.00.drv' failed with exit code 1;; last 10 log lines:; > The dependency target ""install-clang-stripped"" of target; > ""install-clang-cl-stripped"" does not exist.; > Call Stack (most recent call first):; > /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); > interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); > interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink); >; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly.; For full logs, run 'nix log /nix/store/8xsj5zq00fkbndl1zzjngmxj3hhi51hd-root-6.28.00.drv'.; </pre>; </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:19807,depend,dependency,19807,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['depend'],['dependency']
Integrability,"keModelAndMeasurementFast(RooStats::HistFactory::Measurement&) () from /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/lib/libHistFactory.so; ```. Note that this happens only for some setups, so I tried to debug it a bit and see what is special about the setups that crash. I will briefly describe what I found out:. We use AddPreprocessFunction() method to reparametrise our likelihood, this generally seems to work, but for some special cases this seems to cause problems. I created the XML files for the problematic setups and tried to use `hist2workspace` to try to identify the issues. I found out that the executable cannot read the XML files produced if it contains `&` and `<` or `>` as these are not valid XML characters and need to be escaped. So e.g. if the top level XML contains function like this:; ```; <Function Name=""morph_topWidth_0.700000"" Expression=""(0.+(((topWidth-0.700000)>=0)&&(fabs(topWidth-0.700000)<0.300000))*(1.-(fabs(topWidth-0.700000))/0.300000))"" Dependents=""topWidth[0.700000,0.700000,2.000000]"" />; ```; The `hist2workspace` executable will complain that it cannot parse the XML. I tried replacing the problematic characters with the XML replacements like `&gt;` etc. This makes the `hist2workspace` code run and it generates the workspace. However, if I try to replace the characters in the same way for the string passed to AddPrepropcessFunction, it doesnt parse the string and complains:; ```; input_line_48:2:89: error: use of undeclared identifier 'gt'; Double_t TFormula____id12625155560414669645(Double_t *x){ return (0.+(((x[0]-0.700000)&{gt;}=0)&#38;&#38;(fabs(x[0]-0.700000)&{lt;0.300000}))*(1.-(fabs(x[0]-0.700000))/0.300000)) ; }; ^; ```. I am not 100% sure these two issue - crash in the `MakeModelAndMeasurementFast` code and the XML parsing are related, but I think they could be. . ### Expected behavior; The code should not crash when calling `MakeModelAndMeasurementFast` as was the case in ROOT 6.24.06. The XML generated should be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10840:3643,Depend,Dependents,3643,https://root.cern,https://github.com/root-project/root/issues/10840,1,['Depend'],['Dependents']
Integrability,"kes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review!. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necess",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596:3002,depend,depends,3002,https://root.cern,https://github.com/root-project/root/pull/8596,1,['depend'],['depends']
Integrability,"king leftover after the analysis (see any file ending with `_patch` and compare it with the same file ending with `_master`). Now that the main source of memory usage is gone, I have noticed a much smaller contribute that still seems to make the memory increase in the flamegraphs. And it seems to have something to do with the increased number of files, at least on the surface. Let's take the following two files to compare:; * test_agc_9sample_1file_10task_patch.html; * test_agc_9sample_10file_10task_patch.html. They are running exactly the same script, with all 9 RDF samples. In the first case we have 1 file per sample, in the second case 10 files per sample. The memray flamegraph report a total of 253.5 MB used for the first case and 260.9 MB used for the first case (7.4 MB delta). There are two main parts of the graph: the one deriving from the `clone` of the Dask process, where the actual analysis code is run, and the one deriving from the `_start` function where most of the Python code around the analysis is (things like `import`ing packages or the Dask worker-scheduler communication). The difference between the two graphs in the `clone` part is of 0.6 MB, the difference between the two `_start` parts is 6.7 MB, so I focus on that from now on. This 6.7 MB difference is in turn split between a 0.1 MB difference deriving from `_PyObject_VectorcallTState` and 6.6 MB difference deriving from. Finally, the vast majority of these 6.6 MB comes from:; * The metrics gathered by profiling (i.e. memray itself); * Dask communication protocol. [Screencast from 2024-07-26 10-47-18.webm](https://github.com/user-attachments/assets/3a21ea3e-c130-42af-b50b-bb324b06eaaa). TL;DR: After this patch the leftover memory increase may be attributed mostly to Dask or memray itself. To confirm this, I have executed the full AGC benchmark on the SWAN platform with 64 workers of the CERN condor pools for 10 times in a row. At the end of the 10th run all the workers have a total RSS of < 1GB.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094#issuecomment-2252273470:1801,protocol,protocol,1801,https://root.cern,https://github.com/root-project/root/pull/16094#issuecomment-2252273470,2,['protocol'],['protocol']
Integrability,"kspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:381:56: error: unknown type name 'RSnapshotOptions' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:440:4: error: no template named 'RResultPtr' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:442:56: error: unknown type name 'RSnapshotOptions' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:459:4: error: no template named 'RResultPtr' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:461:56: error: unknown type name 'RSnapshotOptions' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:660:4: error: no template named 'RResultPtr' . And 10 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2232#issuecomment-399775824:1653,depend,depends,1653,https://root.cern,https://github.com/root-project/root/pull/2232#issuecomment-399775824,2,['depend'],['depends']
Integrability,"l observable terms. This brings the results of these fits closer to the old-style RooNLLVar fits, because those also use per-component offsets (per-RooNLLVar in a RooAddition to be exact).; * In LikelihoodJob::evaluate, the result_ KahanSum is no longer initialized to zero, but is initialized to the first value in the results_ array, both sum and carry term. This sometimes makes a difference: adding a term with a small but non-zero carry term to an existing sum with a zero sum and zero carry term can make the small non-zero carry term disappear.; * Due to these changes and the earlier KahanSum updates, we were able to tighten the tolerance of tests in testLikelihoodSerial, testLikelihoodJob and testLikelihoodGradientJob, with many tests now passing EXPECT_EQ.; * testLikelihoodGradientJob adds offsetting to the parameterized test matrices of the LikelihoodGradientJobTest cases to test all the above (and below) changes. - Offset synchronization:; * LikelihoodWrapper and LikelihoodGradientWrapper now store a shared_ptr to the offsets instead of raw offsets. At construction time within a MinuitFcnGrad, they get passed the same single offset object so that it is always kept synced between the different likelihood calculators. If it isn't synced and the likelihood gets different offsets at different times, the minimizer understandably gets very confused. This was the case before this commit, which was, in fact, a bug.; * For LikelihoodJob and LikelihoodGradientJob, the offsets are also synchronized to all workers via update_state. For this, we simply check before evaluation whether offsets have changed since the previous evaluation and if so they are sent over the MultiProcess::Messenger. Note that while the LikelihoodGradientJob doesn't itself use the offset (it doesn't calculate the likelihood), it must still synchronize offsets, because during the gradient calculation the LikelihoodSerial objects on the workers are used to calculate the likelihoods there, so for them th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:1824,synchroniz,synchronization,1824,https://root.cern,https://github.com/root-project/root/pull/12202,1,['synchroniz'],['synchronization']
Integrability,"l obstacles, the main one being that we don't have a single, coherent code path for all data sources. Crucially, `TTree` is handled differently from any other data format (i.e. it doesn't use the `RDataSource` mechanism). This practically means that I cannot create a lazy `RDataSource` to handle them all. But in first approximation this could have been solved with one extra branching; 2. It is not straightforward to know where exactly to trigger the inferring of the data source. Practically, this is needed at the very latest in `RLoopManager::Run`, i.e. right before the start of the event loop. But it can also be needed before that, namely whenever a node of the computation graph is created it might need to know about the column names it uses, so the dataset schema must be gathered thus the data source type must be inferred. Admittedly, this is also another fixable problem with a better documentation or cleaner code to explain exactly at what point of any RDataFrame application the loop manager would need the dataset schema in place; 3. Probably the greatest obstacle posed by this idea is that it indeed fixes one backwards-incompatible change, but introduces another one. RDataFrame allows some operations to run without triggering the computation graph, actually without even needing to populate the computation graph at all. Specifically, `Describe` produces a string description of some metadata of the dataset wrapped by the RDataFrame, e.g. the name of the TTree and the file it is stored in. This info doesn't need file opening (at least with `TChain`). The lazy data source would effectively change the behaviour of `Describe` as it would hide the type of the data source even if in principle it could be known (supposing the same workflow with TChain as before). Bottom line, it was worth to investigate this idea as it also gave more insights on some of the not-immediately-evident parts of the machinery. Given the insights listed above, I decide to merge the PR as it is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13090#issuecomment-1889018672:1663,wrap,wrapped,1663,https://root.cern,https://github.com/root-project/root/pull/13090#issuecomment-1889018672,1,['wrap'],['wrapped']
Integrability,"l::RNTupleReader;; using ROOT::Experimental::RNTupleWriter;. void modelextension() {; {; auto model = RNTupleModel::Create();. auto fld = model->MakeField<float>(""fld"", 42.0);. auto ntuple = RNTupleWriter::Recreate(std::move(model), ""ntuple"",; ""modelext.root"");. ntuple->Fill();; ntuple->CommitCluster();. auto modelUpdater = ntuple->CreateModelUpdater();. modelUpdater->BeginUpdate();; auto extField = modelUpdater->MakeField<std::vector<float>>(""extVecFld"", std::vector<float>{1., 2., 3.});; modelUpdater->CommitUpdate();. ntuple->Fill();; ntuple->CommitCluster();; }. auto ntuple = RNTupleReader::Open(""ntuple"", ""modelext.root"");; ntuple->PrintInfo(ENTupleInfo::kStorageDetails);. auto inspector = RNTupleInspector::Create(""ntuple"", ""modelext.root"");; }; ```; Running this macro will result in an exception with the following message:; ```txt; compression setting mismatch between column ranges (505 vs 0); ```; The output of `PrintInfo` is as follows:; ```txt; ============================================================; NTUPLE: ntuple; Compression: 505; ------------------------------------------------------------; # Entries: 2; # Fields: 4; # Columns: 3; # Alias Columns: 0; # Pages: 5; # Clusters: 2; Size on storage: 36 B; Compression rate: 1.00; Header size: 110 B; Footer size: 304 B; Meta-data / data: 11.500; ------------------------------------------------------------; CLUSTER DETAILS; ------------------------------------------------------------; # 0 Entry range: [0..0] -- 1; # Pages: 2; Size on storage: 12 B; Compression: 1.00; # 1 Entry range: [1..1] -- 1; # Pages: 3; Size on storage: 24 B; Compression: 1.00; ------------------------------------------------------------; COLUMN DETAILS; ------------------------------------------------------------; extVecFld [#0] -- SplitIndex64 {id:1}; # Elements: 2; # Pages: 2; Avg elements / page: 1; Avg page size: 8 B; Size on storage: 16 B; Compression: 1.00; ............................................................; extVecFld._0 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15661:2953,message,message,2953,https://root.cern,https://github.com/root-project/root/issues/15661,1,['message'],['message']
Integrability,"l] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-29T20:41:10.036Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982003312:2492,synchroniz,synchronizeParameterSettings,2492,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982003312,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"l] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-30T07:27:04.442Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368821:1958,synchroniz,synchronizeParameterSettings,1958,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368821,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"lang\include\clang/Basic/Diagnostic.h(1300,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_1e28f4dfex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Sema\SemaAttr.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Sema\clangSema.vcxproj] ; - [2020-05-13T13:52:45.076Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Utils\SourceNormalization.cpp(129,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_2c597c5eex': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Utils\obj.clingUtils.vcxproj] ; - [2020-05-13T13:52:45.462Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-Release.cmake:49 (message): ; - [2020-05-13T13:52:45.462Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/APValue.h(135,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_28a5e50aex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Sema\AttributeList.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Sema\clangSema.vcxproj] ; - [2020-05-13T13:52:45.462Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/Basic/Module.h(442,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_bae1546bdb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Sema\AnalysisBasedWarnings.cpp) [C:\build\workspace\root-pullrequests-build\b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5568#issuecomment-628001950:3781,message,message,3781,https://root.cern,https://github.com/root-project/root/pull/5568#issuecomment-628001950,1,['message'],['message']
Integrability,"lar expression found in output. Regex=[: error:] 30.90 sec. Processing /home/vvassilev/workspace/sources/root/tutorials/dataframe/df004_cutFlowReport.C...; In module 'std' imported from input_line_1:1:; /usr/include/c++/7/string_view:88:41: error: static data member 'npos' already has an initializer; static constexpr size_type npos = size_type(-1);; ^; /usr/include/c++/7/string_view:319:43: note: in instantiation of static data member 'std::basic_string_view<char, std::char_traits<char> >::npos' requested here; rfind(_CharT __c, size_type __pos = npos) const noexcept;; ^; /home/vvassilev/workspace/builds/root_runtime_modules_builtin_clang_debug/include/ROOT/RDF/RInterface.hxx:468:14: note: in instantiation of function template specialization 'ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::SnapshotImpl<double, int>' requested here; return SnapshotImpl<ColumnTypes...>(treename, filename, columnList, options);; ^; input_line_102:2:206: note: in instantiation of function template specialization 'ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::Snapshot<double, int>' requested here; *reinterpret_cast<ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager>>*>(0x7fffffff9598) = reinterpret_cast<ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase>*>(0x7fffffff95d0)->Snapshot<__rdf1::b13_type, __rdf1::b24_type>(""myTree"", ""df004_cutFlowReport.root"", *reinterpret_cast<std::vector<std::string>*>(0x7fffffff9940),*reinterpret_cast<ROOT::RDF::RSnapshotOptions*>(0x7fffffff9a40));; ^; /usr/include/c++/7/string_view:88:41: note: previous initialization is here; static constexpr size_type npos = size_type(-1);; ^; terminate called after throwing an instance of 'std::runtime_error'; what(): ; An error occurred while jitting in Snapshot. The lines above might indicate the cause of the crash. CMake Error at /home/vvassilev/workspace/builds/root_runtime_modules_builtin_clang_debug/RootTestDriver.cmake:238 (message):; error code: Child aborted. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4437:2403,message,message,2403,https://root.cern,https://github.com/root-project/root/pull/4437,1,['message'],['message']
Integrability,"latile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34); ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966); ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506); ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354); ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880); ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758); ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817); ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663); ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102); ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76); ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760); ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350); ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680); ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665); ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102); ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383); ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465); ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153); ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147); ==92602== ; ==92602== Conditional jump o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:4156,depend,depends,4156,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,; Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14558:1637,depend,depending,1637,https://root.cern,https://github.com/root-project/root/issues/14558,2,['depend'],"['depend', 'depending']"
Integrability,"ld/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:7638,message,message,7638,https://root.cern,https://github.com/root-project/root/issues/12429,1,['message'],['message']
Integrability,ld/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-866798208:5586,Integrat,IntegratorOptions,5586,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-866798208,1,['Integrat'],['IntegratorOptions']
Integrability,"ld/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 27019; 	Voluntary context switches: 211; 	Involuntary context switches: 7; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1251821611:2799,message,messages,2799,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611,4,['message'],['messages']
Integrability,"leView` advertises a defaulted move constructor, but unconditionally frees state in it's destructor causing a double free in the destructor of the second instance. This is caused by the call to `fField.DestroyValue(fValue);` in the dtor. `fValue` is copyable and moveable since the copy special member functions are not deleted, but contains pointers to allocated memory which are not duplicated during copies or transferred during a move (with leaving the moved from pointer `nullptr`) and thus shared between two instances of `RNTupleView`. Although the documentation of `RFieldValue`, the type of `fValue`, claims that the class owns no memory, the class receives a heap allocated value during the call chain of the constructor initialization list of `RNTupleView`: `fValue(fField.GenerateValue())`. Since the ownership model is convoluted to me, I cannot propose an easy fix. From the perspective of `RNTupleView`, `RFieldValue` would need a user-defined move ctor transferrign ownership of the heap-allocated pointer and `RNTupleView`'s dtor needs to be able to detect and handle a moved-from state. But the former is against the documented intent of the class, so I need to leave this to the designers of those classes :). ### Expected behavior; The move ctor of `RNTupleView` should let the dtors of both `RNTupleView` instances finish correctly. ### To Reproduce. Example:; ```c++; auto ntuple = RE::RNTupleReader::Open(RE::RNTupleModel::Create(), ""DecayTree"", ""B2HHH~none.ntuple"");; {; auto viewH1IsMuon = ntuple->GetView<int>(""H1_isMuon"");; {; auto copy{std::move(viewH1IsMuon)};; } // dtor for copy, frees shared state; } // dtor for viewH1IsMuon, double free; ```. I assume the problem does not depend on the input file, so it can probably be reproduced in a smaller setup. ### Setup; ```; bgruber@graviola:$ root --version; ROOT Version: 6.29/01; Built for linuxx8664gcc on Jan 16 2023, 14:47:00; From remotes/origin/HEAD@v6-29-01-212-gc8ad008463; ```; Built with g++-12 on Ubuntu 22.10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12136:1735,depend,depend,1735,https://root.cern,https://github.com/root-project/root/issues/12136,1,['depend'],['depend']
Integrability,"lease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; ```; This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:11309,message,message,11309,https://root.cern,https://github.com/root-project/root/pull/12523,3,['message'],['message']
Integrability,"ler () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #16 0x00007f58658504a8 in Warning(char const*, char const*, ...) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #17 0x00007f5865881acf in ROOT::TGenericClassInfo::TGenericClassInfo(char const*, int, char const*, int, std::type_info const&, ROOT::Internal::TInitBehavior const*, TClass* (*)(), TVirtualIsAProxy*, int, int) (); from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #18 0x00007f5861aadcae in ROOT::GenerateInitInstanceLocal(edm::Wrapper<edm::Association<std::vector<reco::TrackExtra, std::allocator<reco::TrackExtra> > > > const*) [clone .constprop.0] (); from /build/mkortela/debug/debug2/CMSSW_12_4_8/lib/slc7_amd64_gcc10/libRecoE2EDataFormats.so; #19 0x00007f5861aab4c6 in _GLOBAL__sub_I_RecoE2EDataFormats_xr.cc () from /build/mkortela/debug/debug2/CMSSW_12_4_8/lib/slc7_amd64_gcc10/libRecoE2EDataFormats.so; #20 0x00007f586644c9c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #21 0x00007f586645159e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #22 0x00007f586644c7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #23 0x00007f5866450b8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #24 0x00007f5865042fab in dlopen_doit () from /lib64/libdl.so.2; #25 0x00007f586644c7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #26 0x00007f58650435ad in _dlerror_run () from /lib64/libdl.so.2; #27 0x00007f5865043041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #28 0x00007f5866483946 in edmplugin::SharedL",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11383:4960,Wrap,Wrapper,4960,https://root.cern,https://github.com/root-project/root/issues/11383,1,['Wrap'],['Wrapper']
Integrability,"les when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23; The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.).; \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284:1892,depend,depending,1892,https://root.cern,https://github.com/root-project/root/issues/7284,4,['depend'],"['depend', 'depending', 'depends']"
Integrability,les.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Clearly mark `RooFit::CloneData()` as deprecated; [RF] Again code-format RooMinimizer; [RF] Avoid overhead of tracking evaluation error msgs when not needed; [RF] Implement safe way to set eval error logging in RooMinimizer; [RF] Use proper infinity checks in RooFit HS3; [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code; [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable; [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Inline infinity constant and checks in `RooNumber`; [RF] Code-format RooNumber.h and RooNumber.cxx; [RF] Fill weight errors when importing RooDataHists to RooDataSet; [RF] Make it possible to directly import RooDataHist to RooDataSet; [RF] Reduce code duplication in RooDataSet constructor; [RF] Always create weight var in RooDataSet when importing weighted data; [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist; [RF] Support also importing `RooDataHists` into RooDataSets; [RF] Avoid some code duplication in `RooDataSet` with importing slices; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF] New mechanism to implicitly convert numbers to RooRealVar&; [RF] Remove RooFormula code for gcc <= 4.8; [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; [RF] More use of `snapshot()` overload with output parameter; [RF] Bring back `RooStats::FeldmanCousins::SetData()`; [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:9665,wrap,wrapper,9665,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,2,['wrap'],['wrapper']
Integrability,"let me argue just once in favour of RVec::Sort. many (all?) operations available with RVec can be done with STL, and Take can be done with RVec v2({v1[0], v1[2]}), but we can be nicer than that, nicer than begin/end. most of the time, RVec is syntactic sugar -- why do we offer RVec::Map instead of std::transform, RVec::Filter instead of std::remove_if, but not Sort, which we already know will be used virtually in every RDF analysis?. regarding TakeLargest/Smallest: depending on how you sort (typically ascending), one could think of Take(v, -2) and Take(v, 2) respectively. just proposing :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2329#issuecomment-406303447:470,depend,depending,470,https://root.cern,https://github.com/root-project/root/pull/2329#issuecomment-406303447,1,['depend'],['depending']
Integrability,"lias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140); ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151); ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:73938,depend,depends,73938,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,libNew is a custom memory allocator used in ROOT to output more information about memory pressure. It essentially overrides the new and delete operators. The functionality of libNew is only available in *rootn.exe* and libNew is statically linked to the binary. In root-project/root#4717 we discovered that dlopening libNew at random time can trigger earthquakes because it allows the dynamic linker to *sometimes* resolve new and delete to the symbols from libNew and libc++. Since libNew was not designed to be dlopened we should make it a static library to enforce this protocol more strongly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4722:573,protocol,protocol,573,https://root.cern,https://github.com/root-project/root/pull/4722,1,['protocol'],['protocol']
Integrability,"licates. ### Description. One of the overloads of the function abuses the logic of the class:. https://github.com/root-project/root/blob/224551cf3fc5bdc80b2693578d082eb9cb0e32a3/tmva/tmva/src/DataLoader.cxx#L126-L133. In this overload a `DatasetInfo` object is created on the heap (as a temporary). Then `DatasetManager::AddDatasetInfo` takes the input argument as l-value ref and finally stores the `DatasetInfo` object as a shallow-reference in the internal `TList` data member `fDataSetInfoCollection`. This data member is not owning, thus at destruction time it will not take care of deleting its items. . https://github.com/root-project/root/blob/224551cf3fc5bdc80b2693578d082eb9cb0e32a3/tmva/tmva/src/DataSetManager.cxx#L105-L113. At the same time, the `DataSetInfo` object was created with `new` but never deleted. This logic is faulty and is related to the following report by valgrind:. ```; ==290973== Conditional jump or move depends on uninitialised value(s); ==290973== at 0x2C720F3A: TMVA::DataLoader::AddTree(TTree*, TString const&, double, TCut const&, TMVA::Types::ETreeType) (DataLoader.cxx:360); ==290973== by 0x2C72113C: TMVA::DataLoader::AddSignalTree(TTree*, double, TMVA::Types::ETreeType) (DataLoader.cxx:373); ==290973== by 0x4F9573B: ???; ==290973== by 0x4F9107E: ???; ==290973== by 0x6EC8BCD: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6E4EA4E: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6E4F13C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/vpadulan/Programs/rootproject/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14433:986,depend,depends,986,https://root.cern,https://github.com/root-project/root/issues/14433,1,['depend'],['depends']
Integrability,"linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):; error code: 1; ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer.; However, you can see the problem this way:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |; | From tag , 3 March 2022 |; | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] &RooArgSet::operator delete; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460; root [2] &RooArgSet::operator delete; (void (*)(void *) noexcept) Function @0x7f94fd5e3900; ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the clas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:3219,interface,interface,3219,https://root.cern,https://github.com/root-project/root/issues/10203,1,['interface'],['interface']
Integrability,"lization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;const clang::CXXMethodDecl*, const clang::CXXMethodDecl*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2654#issuecomment-424382043:1781,depend,depends,1781,https://root.cern,https://github.com/root-project/root/pull/2654#issuecomment-424382043,2,['depend'],['depends']
Integrability,"ll [error.txt](https://github.com/root-project/root/files/5517699/error.txt). But with the root master or 6.22.00, there is only; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still prints the header not found message; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```; (That the XML file isn't there doesn't matter, the argument has to be filled). ### Setup. 1. ROOT master, 6.22.00; 2. centos7; 3. lcg install. ### Additional context. This isn't really high priority, as a work around is available, but from; https://sft.its.cern.ch/jira/browse/ROOT-11029?focusedCommentId=110376&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-110376; where @Axel-Naumann said; > I'm still a bit unhappy about the quality of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:1693,message,message,1693,https://root.cern,https://github.com/root-project/root/issues/6791,1,['message'],['message']
Integrability,"ll(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x4A8CB53: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x4A8855A: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C93BC: _M_check_length (basic_string.h:330); ==270704== by 0x66C93BC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:452); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:3872,depend,depends,3872,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"llenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\datafr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:1092,message,message,1092,https://root.cern,https://github.com/root-project/root/pull/11153,1,['message'],['message']
Integrability,"llrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/129238/console).; ### Warnings:; - [2021-11-04T18:40:03.077Z] ghprbPullLongDescription=This pull-request suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc (see below).\r\n\r\nA TClingCallFunc wrapper function might look as the excerpt below, where the function denoted by `func` may have been annotated as `[[nodiscard]]`. Note that if `ret == nullptr` the result of the call is unused.\r\n```c++\r\nextern \""C\"" void __cf_0(void* obj, int nargs, void** args, void* ret) {\r\n if (ret) {\r\n new (ret) (return_type) ((class_name*)obj)-&gt;func(args...);\r\n }\r\n else {\r\n ((class_name*)obj)-&gt;func(args...);\r\n }\r\n}\r\n```\r\n\r\nIn turn, this triggers warnings when used by cppyy/PyROOT, e.g.\r\n```python\r\n&gt;&gt;&gt; import ROOT\r\n&gt;&gt;&gt; v = ROOT.std.vector(int)()\r\n&gt;&gt;&gt; v.empty()\r\ninput_line_34:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute\r\n [-Wunused-result]\r\n ((const vector&lt;int&gt;*)obj)-&gt;empty();\r\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nTrue\r\n&gt;&gt;&gt;\r\n```\r\n\r\n## Changes or fixes:\r\n- Given the above situation, this commit supresses `-Wunused-result` diagnostics only for TClingCallFunc wrapper functions.\r\n\r\n## Checklist:\r\n- [X] tested changes locally\r\n\r\nThis PR fixes #8622. . ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_samplecallback](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/129238/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_samplecallback/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execSharedPtr_WILL_FAIL](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/129238/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execSharedPtr_WILL_FAIL/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9244#issuecomment-961392946:1418,wrap,wrapper,1418,https://root.cern,https://github.com/root-project/root/pull/9244#issuecomment-961392946,1,['wrap'],['wrapper']
Integrability,"llvm/ADT/PointerIntPair.h(190,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\DeclCXX.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2021-04-22T10:04:46.921Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector(1537,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\FrontendActions.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-04-22T10:04:46.921Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility(133,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\InterfaceStubFunctionsConsumer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-04-22T10:04:46.921Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(94,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseDeclCXX.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2021-04-22T10:04:46.921Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits(442,42): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\Scalarizer.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4465#issuecomment-824710868:3159,Interface,InterfaceStubFunctionsConsumer,3159,https://root.cern,https://github.com/root-project/root/pull/4465#issuecomment-824710868,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,"loaded-virtual] ; - [2021-11-30T07:31:27.486Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:32:09.170Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:32:09.170Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] . And 4 more. ### Failing tests:; - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testLikelihoodGradientJob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368250:2397,synchroniz,synchronizeParameterSettings,2397,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368250,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,log message was missing a closing parenthesis,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1859:4,message,message,4,https://root.cern,https://github.com/root-project/root/pull/1859,1,['message'],['message']
Integrability,lrequests-build/125078/console).; ### Errors:; - [2021-08-26T14:15:12.643Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - [2021-08-26T14:15:12.643Z] CMake Error at VDT-stamp/VDT-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:24.829Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src/DAVIX-stamp/DAVIX-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src/DAVIX-stamp/DAVIX-download ; - [2021-08-26T14:15:24.829Z] CMake Error at DAVIX-stamp/DAVIX-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:37.013Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - [2021-08-26T14:15:37.013Z] CMake Error at TBB-stamp/TBB-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:37.013Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - [2021-08-26T14:15:37.013Z] CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:37.013Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8903#issuecomment-906453026:1188,message,message,1188,https://root.cern,https://github.com/root-project/root/pull/8903#issuecomment-906453026,1,['message'],['message']
Integrability,"lrequests-build/build/lib/libCling.so; #37 0x00007fdefa2379f9 in clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.5247] [clone .constprop.5251] () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #38 0x00007fdefa19c893 in clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #39 0x00007fdefa16e16c in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #40 0x00007fdefa58db63 in clang::ASTReader::PassInterestingDeclToConsumer(clang::Decl*) () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #41 0x00007fdefa5da4dc in clang::ASTReader::PassInterestingDeclsToConsumer() () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #42 0x00007fdefa5b063e in clang::ASTReader::FinishedDeserializing() [clone .part.1962] [clone .constprop.2010] () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #43 0x00007fdefb4c7fe1 in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #44 0x00007fdefba6e261 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage() const () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #45 0x00007fdefba6e2cf in clang::DeclContext::decls_begin() const () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #46 0x00007fdefa0bbce9 in TClingClassInfo::TClingClassInfo(cling::Interpreter*, bool) () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #47 0x00007fdefa07a53a in TCling::GetDataMember(ClassInfo_t*, char const*) const () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; ```. We trigger excessive deserialization due to the eager iterations over the decl contexts. This PR likely depends on #1416.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-359575131:7108,depend,depends,7108,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-359575131,1,['depend'],['depends']
Integrability,"ls using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3] Consistently have implicit fallback for HistFactory variables; [RF][HS3] Don't import datasets that are parts of a combined dataset; [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`; [RF][HS3] Generate input file for testHS3HistFactory on the fly; [RF][HS3] Improvements to the HS3 HistFactory implementation; [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; [RF][HS3] Some refactoring for less lines of code; [RF][HS3] Ordering fixes; [RF][HS3] Achieved closure for ATLAS ttW workspace; [RF][HS3] Sorting distributions; [RF][HS3] Bugfixes for histfactory workspaces; [RF][HS3] Small renamings; [RF][HS3] Improved attribute handling, caught some typecast-errors; [RF][HS3] Bugfix for FlexibleInterpVar; [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF][HS3] Re-retrieve element after exporting dependants; [RF][HS3] Don't write `histfactory_dist` axes redundantly; [RF] Exclude RooHistError from IO; [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; [RF] Code-format `testRooDataHist.cxx`; [RF][HS3] Change analysis and likelihoods fields to match HS3 standard; [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`; [RF] Modernize `RooVectorDataStore::RealF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:3398,integrat,integration,3398,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,12,"['depend', 'integrat', 'interface']","['dependants', 'integration', 'interface']"
Integrability,"ls/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: (!m_Consumer->getTransaction() || (m_Consumer->getTransaction() == T)) && ""Cannot release different T"", file C:\root-dev\git\master\interpreter\cling\lib\Interpreter\IncrementalParser.cpp, line 538; 768: CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: CurLexerKind != CLK_CachingLexer && ""already in caching lex mode"", file C:\root-dev\git\master\interpreter\llvm-project\clang\lib\Lex\PPCaching.cpp, line 99; 768: Assertion failed: CCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: is(tok::raw_identifier), file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/Lex/Token.h, line 208; 768: Assertion failed: (CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: DiagID - DIAG_UPPER_LIMIT < DiagInfo.size() && ""Invalid diagnostic ID"", file C:\root-dev\git\master\interpreter\llvm-project\clang\lib\Basic\DiagnosticIDs.cpp, line 379; 768: Assertion failed: CurLexerCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: CurLexer && ""Got EOF but no current lexer set!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\lib\Lex\PPLexerChange.cpp, line 531; 768: ACMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14200#issuecomment-1903602682:2181,message,message,2181,https://root.cern,https://github.com/root-project/root/pull/14200#issuecomment-1903602682,3,['message'],['message']
Integrability,"ls/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *; *Entries : 10000 : Total = 1177229 bytes File Size = 785298 *; * : : Tree compression factor = 1.48 *; ******************************************************************************; *Br 0 :Type : Type/F *; *Entries : 10000 : Total Size= 40556 bytes File Size = 307 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 130.54 *; *.........................",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:9623,message,message,9623,https://root.cern,https://github.com/root-project/root/issues/12429,1,['message'],['message']
Integrability,ls_v._Init_thread_epoch' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of __emutls_v._Init_thread_epoch; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_abort' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of _Init_thread_abort; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_abort' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_abort; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_header' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_header; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of __emutls_get_address; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_footer' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_footer; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_v._Init_thread_epoch' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of __emutls_v._Init_thread_epoch; 131: Maybe you need to load the corresponding shared library?; 131: CMake Error at,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607#issuecomment-364363584:3452,interface,interface,3452,https://root.cern,https://github.com/root-project/root/pull/1607#issuecomment-364363584,8,['interface'],['interface']
Integrability,"lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:200:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:235:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:270:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:306:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-409646068:1262,depend,depends,1262,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-409646068,4,['depend'],['depends']
Integrability,"ltercount=1&field1=buildname/string&compare1=65&value1=PR-5516-ROOT-fedora30-cxx14&date=2020-04-30).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79741/console).; ### Warnings:; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:38:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:56:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:74:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:67: warning: ‘ROOT::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621890214:1176,interface,interfaces,1176,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621890214,1,['interface'],['interfaces']
Integrability,"ltin_gl2ps option; -- Looking for LibXml2; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.7""); -- Found OpenSSL: /usr/lib64/libcrypto.so (found version ""1.1.1k""); -- Looking for MySQL; -- Could NOT find MySQL (missing: MYSQL_INCLUDE_DIR MYSQL_LIBRARIES); -- MySQL not found. Switching off mysql option; -- Looking for PostgreSQL; -- Could NOT find PostgreSQL (missing: PostgreSQL_LIBRARY PostgreSQL_INCLUDE_DIR); -- PostgreSQL not found. Switching off pgsql option; -- Looking for SQLite; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.4.2""); -- Found Sqlite: /usr/include; -- Looking for CFITSIO; -- Could NOT find CFITSIO (missing: CFITSIO_LIBRARY CFITSIO_INCLUDE_DIR); -- CFITSIO not found. You can enable the option 'builtin_cfitsio' to build the library internally'; -- For the time being switching off 'fitsio' option; -- Looking for XROOTD; -- Found Xrootd version num: 5.6.3 (setting -DROOTXRDVERS=500060003); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- libXrdClient not found: use built-in; -- include_dirs: /usr/include/xrootd;/afs/cern.ch/user/b/bellenot/temp/root/proof/xrdinc; -- libraries: /usr/lib64/libXrdUtils.so;/usr/lib64/libXrdCl.so; -- Could NOT find FTGL (missing: FTGL_INCLUDE_DIR FTGL_LIBRARY); -- ftgl library not found. Set variable FTGL_ROOT_DIR to point to your installation; -- For the time being switching ON 'builtin_ftgl' option; -- Checking for module 'davix>=0.6.4'; -- Package 'davix', required by 'virtual:world', not found; -- Looking for uuid_generate_random in uuid; -- Looking for uuid_generate_random in uuid - found; -- Found libuuid: /usr/include; -- Davix not found, switching ON 'builtin_davix' option.; -- Looking for clock_gettime; -- Looking for clock_gettime - found; -- Looking for TBB; -- Found TBB: /usr (found suitable version ""2018.0"", minimum required is ""2018""); -- Performing Test tbb_exception_result; -- Performing Test tbb_exception_result - Success; -- Looking for VDT; -- Could NOT find Vdt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159#issuecomment-1838972446:6521,wrap,wrapper,6521,https://root.cern,https://github.com/root-project/root/issues/14159#issuecomment-1838972446,1,['wrap'],['wrapper']
Integrability,lvm/src/tools/clang/include -I/usr/include/libxml2 -Iinterpreter/llvm/src/include -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++11 -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -fno-exceptions -fno-rtti -std=c++11 -MD -MT interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:376: error: ‘conditional_t’ in namespace ‘std’ does not name a template type ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected ‘&gt;’ before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected ‘(’ before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected primary-expression before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8399#issuecomment-865243666:1714,Interface,InterfaceStubFunctionsConsumer,1714,https://root.cern,https://github.com/root-project/root/pull/8399#issuecomment-865243666,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,"lvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:2592,message,message,2592,https://root.cern,https://github.com/root-project/root/pull/12523,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"m name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strongly typed, we have to declare the types of the inputs and the output; @ROOT.DeclareCppCallable([""float""], ""float""); def func(x):; return 2.0 * x. print(func(1.0)) # Prints 2.0; print(ROOT.PyROOT.func(1.0)) # Prints 2.0; ROOT.gInterpreter.ProcessLine(""cout << PyROOT::func(1.0) << endl;"") # Prints 2.0; ```. This allows us to run Python code in wrapped C++ workflow, e.g. for `RDataFrame`:. ```python; import ROOT; import numpy. @ROOT.DeclareCppCallable([""unsigned int""], ""float""); def func(x):; return numpy.power(x, 2). df = ROOT.RDataFrame(4).Define(""x"", ""rdfentry_"").Define(""y"", ""PyROOT::func(x)""); npy = df.AsNumpy(); print(npy[""x""]) # Prints [0, 1, 2, 3]; print(npy[""y""]) # Prints [0.0, 1.0, 4.0, 9.0]; ```. Finally, the approach is fully compatible with any custom C++ types you may have. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""; struct Foo {; static const int foo = 42;; };; """"""). @ROOT.DeclareCppCallable([""Foo""], """"); def func(x):; print(x.foo). ROOT.gInterpreter.ProcessLine(""Foo x; PyROOT::func(x);"") # Prints 42; ```; There are still some things to check before merging:. - [ ] Double check reference counting; - [ ] C++ wrapper takes (lvalue) references, what happens with rvalues? What is the universal thingy?; - [ ] We put the C++ callable in the `PyROOT::` namespace. This is fine? It can be everything, even the global namespace. What is a sane solution here?; - [ ] How many copies we are doing finally? What is the performance?; - [ ] What happens in MT scenarios? Put in a test case!; - [ ] We have to ship the public cppyy interface with the ROOT headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:3908,wrap,wrapper,3908,https://root.cern,https://github.com/root-project/root/pull/3488,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"m/Support/type_traits.h(79,1): warning C4624: 'llvm::detail::copy_construction_triviality_helper<T>': destructor was implicitly defined as deleted [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits(585): message : see reference to class template instantiation 'llvm::detail::copy_construction_triviality_helper<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(100): message : see reference to class template instantiation 'std::is_copy_constructible<llvm::detail::copy_construction_triviality_helper<T>>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(312): message : see reference to class template instantiation 'llvm::is_trivially_copy_constructible<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(1168): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12379:1034,message,message,1034,https://root.cern,https://github.com/root-project/root/pull/12379,2,['message'],['message']
Integrability,mOutsideS' in /opt/root_src/geom/geom/src/TGeoCone.cxx:503; 9: Assuming 'dz' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 10: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 11: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 12: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 13: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 15: Assuming 'ro1' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 16: '?' condition is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 17: 'hasrmin' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 18: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 19: Assuming 'rin' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 20: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 21: Assuming 'rout' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 22: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 23: 'in' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 24: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 25: 'inrmin' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 26: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 27: 'hasrmin' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:459; 28: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:459; 29: Assuming 'delta' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:461; 30: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:461; 31: The left operand of '+' is a garbage value in /opt/root_src/geom/geom/src/TGeoCone.cxx:462; /opt/root_src/geom/geom/src/TGeoCone.cxx:476:22: warning: The left operand of '-' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'i' is < 'vecsize' in /opt/root_src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:17616,rout,rout,17616,https://root.cern,https://github.com/root-project/root/issues/7428,1,['rout'],['rout']
Integrability,massimiliano: very nice. Maybe the commit messages can be improved in order to be more meaningful and in English?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3835#issuecomment-494001286:42,message,messages,42,https://root.cern,https://github.com/root-project/root/pull/3835#issuecomment-494001286,1,['message'],['messages']
Integrability,mathcore/CMakeFiles/MathCore.dir/src/ChebyshevPol.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DataRange.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Delaunay2D.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DistSampler.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DistSamplerOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Factory.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitConfig.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitData.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitResult.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitUtil.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Fitter.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GaussIntegrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GaussLegendreIntegrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GenAlgoOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GoFTest.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Integrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/IntegratorOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MersenneTwisterEngine.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MinimTransformFunction.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MinimizerOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MinimizerVariableTransformation.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MixMaxEngineImpl17.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MixMaxEngineImpl240.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MixMaxEngineImpl256.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/ParameterSettings.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/PdfFuncMathCore.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/ProbFuncMathCore.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/QuantFuncMathCore.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/RandomFunctions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/RanluxppEngineImpl.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/RichardsonDerivator.cxx.o math/mathcore/CMakeFiles/MathCor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10617#issuecomment-1141092598:1974,Integrat,IntegratorOptions,1974,https://root.cern,https://github.com/root-project/root/pull/10617#issuecomment-1141092598,1,['Integrat'],['IntegratorOptions']
Integrability,maybe related: https://stackoverflow.com/questions/69571809/why-does-the-variable-bash-argv-have-a-different-value-in-a-function-depending,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10298#issuecomment-1087601339:129,depend,depending,129,https://root.cern,https://github.com/root-project/root/issues/10298#issuecomment-1087601339,1,['depend'],['depending']
Integrability,"mbinations of ROOT and ubuntu versions, finally it worked with ROOT 6.12.06 on Ubuntu 16.04.7 LTS (gcc 5.4.0). . The main problem is remaining with the TMapFile which requires -lNew to be included in the makefile. Once this works, the TApplication just doesn't work with error message of segmentation fault or violation. Or vice versa, TApplication works but TMapFile doesn't work. In order to repeat the errors, I collected the three ROOT example macros (as attached) and created a makefile to compile them. In the Makefile, the option of --new or -lNew have been added. One can include them or comment them out. On Ubuntu 20.04.1 LTS (gcc 9.4.0), with ROOT version from 6.12.06 to 6.28.04, none of the combinations got to work. For instance, when the TMapFile works with ROOT 6.12.06, then the TApplication returns an error of ""Segmentation violation"". With a newer ROOT, e.g. 6.28.04, the TApplication works but the TMapFile got the error message; *****************************************************************************; Error in <TMapFile::TMapFile> : no memory mapped file capability available; Use rootn.exe or link application against ""-lNew""; *****************************************************************************. Could you guys have a look at this problem and find out what happened or may find a solution? Many thanks in advance. Huagen Xu from FZ Juelich, IKP; [root_examples.zip](https://github.com/root-project/root/files/12415948/root_examples.zip). ### Reproducer. As attached, there are three Macro files plus one Makefile. Those three files are all the ROOT examples to demostrate how the TMapFile as well as the TApplication work. To reproduce the problem described above, one could follow the tipps below.; 1. Unzip the file into a local directory ; 2. Open a terminal and cd to the unzipped directory, type ""make"" to compile the files; 3. Run ""./appdemo"" in a terminal to check whether TApplication works properly; 4. Run ""./hisprod"" in a termianl to check whether t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511:1157,message,message,1157,https://root.cern,https://github.com/root-project/root/issues/13511,1,['message'],['message']
Integrability,"md64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMO",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:5402,interface,interface,5402,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,me/test/datasource_root.cxx:94:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:137:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:155:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:170:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.383Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:183:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621922856:2810,interface,interfaces,2810,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621922856,3,['interface'],['interfaces']
Integrability,"ment for that?; >; > 3. I will change the search order to search for first the one; > that are not marked RTLD_GLOBAL.; >; > So any other client that wants to open thing's with RTLD_LOCAL will ; > then expose what they thought were private symbols to the JIT as a whole?; >; > One of the issues is that it is not clear to me is what exactly is; > your use case and this is why there are misunderstandings.; >; > I also don't understand why there are mis-understandings, but have ; > explained the use case a few times now and *3* will explicitly break ; > that as well as provide bizarre default behavior:; >; > libc++.so, libA.so; > libA.so defines an overload for global operator new/delete; >; > |DynamicLibrary::getPermanentLibrary(NULL) // Other code; > DynamicLibrary::getPermanentLibrary(""libA.so"") |; >; > In your scheme the JIT can pull operator new/delete from libA.so,; > and worse is that whether it pulls operator new/delete from; > libA.so is dependent on whether operator new/delete has been; > resolved in *// Other code* before libA.so has been loaded.; >; > The example can be expanded to RTTI information, exceptions, and a ; > host of other problems.; >; No, this would not break the case you mentioned. The case that will ; have a special behavior is if you called ; `DynamicLibrary::addPermanentLibrary(handle)`. So you should be safe there.; >; > And even worse than that is that in your scheme there is no way of ; > hiding symbols from the global scope, in fact it promotes everything ; > that the user reasonably expected to be private (via RTLD_LOCAL) to ; > take dominance over anything else.; >; I understand that and I am totally fine for fixing this the right way ; after the llvm release.; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub ; > <https://github.com/root-project/root/pull/744#issuecomment-313799028>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/AGNuU_J817GPmY",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313802370:2940,depend,dependent,2940,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313802370,1,['depend'],['dependent']
Integrability,"ment in which represents the child item (with basename `file` and path `sdirpath`) inside the directory the following ways:; * If the element is a directory, it would be `new TDirectory(file, sdirpath)`; * If the element is a file, it would be `new TFile(file, fTitle)`. Which results in the following bugs:. * If an element of `TSystemDirectory::GetListOfFiles()` is a file, its `IsDirectory()` will try to look for the file basename in the *current working directory* and produce the wrong result.; * As its perfectly legal to cast `TSystemDirectory *` to `TSystemFile *`, a `TSystemFile *tsysfFoo` with name ""foo"" and title ""foo"" could mean either; * A file with path `foo/foo`; * A directory with path `foo`, which was originally an instance of `TSystemDirectory *`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The name-title interface of both `TSystemFile` and `TSystemDirectory` is unified. Due to the inconsistency of the original interface, there's no fully-backward-compatible solution. The possible interface would be one of the followings:. | Name | Title | Pros | Cons |; |-|-|-|-|; | basename | dirname | the most informative and good-looking; closer to what GetListOfFiles() tries to output | incompatible to the original `TSystemFile` and `TSystemDirectory` interfaces |; | basename | full path | closer to the original `TSystemDirectory` interface | incompatible to the original `TSystemDirectory` interface |; | full path | dirname | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | basename | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | full path | closer to the original `TSystemFile` and `TSystemDirectory` interfaces | carry the least information |. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12350:1708,interface,interface,1708,https://root.cern,https://github.com/root-project/root/issues/12350,1,['interface'],['interface']
Integrability,message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/TransformationHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Types.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/VarTransformHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/VariableTransformBase.h: mutab,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2585,message,message,2585,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,missing the definition of __emutls_v._Init_thread_epoch; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_abort' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of _Init_thread_abort; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_abort' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_abort; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_header' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_header; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of __emutls_get_address; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_footer' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_footer; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_v._Init_thread_epoch' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of __emutls_v._Init_thread_epoch; 131: Maybe you need to load the corresponding shared library?; 131: CMake Error at C:/Users/bellenot/git/master/cmake/modules/RootTestDriver.cmake:232 (message):; 131: error code: -529697949; 131:; 131:; 1/1 Test #131: tutorial-dataframe-tdf003_profiles ...***Failed 3.13 sec; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607#issuecomment-364363584:4495,interface,interface,4495,https://root.cern,https://github.com/root-project/root/pull/1607#issuecomment-364363584,4,"['interface', 'message']","['interface', 'message']"
Integrability,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035:2171,message,message,2171,https://root.cern,https://github.com/root-project/root/pull/9035,1,['message'],['message']
Integrability,"mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 1184 more. ### Failing tests:; - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52667/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_utils_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52667/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_utils_doctest/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3347#issuecomment-459054611:2426,depend,depends,2426,https://root.cern,https://github.com/root-project/root/pull/3347#issuecomment-459054611,1,['depend'],['depends']
Integrability,"module.modulemap:1:1: error: unknown type name 'module' ; - ./etc/cling/module.modulemap:3:3: error: use of undeclared identifier 'module' ; - ./etc/cling/module.modulemap:11:2: error: expected ';' after top level declarator ; - ./include/TMathBase.h:337:6: error: use of undeclared identifier 'TMath' ; - ./include/TString.h:110:18: error: no type named 'string_view' in namespace 'std' ; - ./include/TString.h:144:38: error: no member named 'TypeTraits' in namespace 'ROOT' ; - ./include/TString.h:144:66: error: 'T' does not refer to a value ; - ./include/TString.h:144:70: error: friends can only be classes or functions ; - ./include/TString.h:144:76: error: friends can only be classes or functions ; - ./include/TString.h:144:83: error: expected ';' at end of declaration list . And 9 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2530#issuecomment-416270073:1124,depend,depends,1124,https://root.cern,https://github.com/root-project/root/pull/2530#issuecomment-416270073,2,['depend'],['depends']
Integrability,"monalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17; ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:; ```; [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap; Disabling gnu++: clang has no __float128 support on this target!; Disabling gnu++: clang has no __float128 support on this target!; ```; and at runtime:; ```; info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root; Disabling gnu++: clang has no __float128 support on this target!; Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found; Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine.; {and a thousand more messages like the last one}; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1109804151:3681,rout,routine,3681,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1109804151,2,"['message', 'rout']","['messages', 'routine']"
Integrability,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log; ```; ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary; Traceback (most recent call last):; File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>; value = metree.Value; File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__; proxy = bind_branch_to_proxy(self, name, branch); File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy; return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()); TypeError: 'nullptr_t' object is not subscriptable; + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14441#issuecomment-1912182438:133,integrat,integration,133,https://root.cern,https://github.com/root-project/root/pull/14441#issuecomment-1912182438,1,['integrat'],['integration']
Integrability,"ms (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:3703,integrat,integrate,3703,https://root.cern,https://github.com/root-project/root/pull/8294,1,['integrat'],['integrate']
Integrability,"mtbb201_parallelHistoFill.C fails on Windows x86 and VS v17.9 with the following error:; ```; IncrementalExecutor::executeFunction: symbol '_Thrd_sleep_for@4' unresolved while linking [cling interface function]!; ```; Due to this line:; ```; std::this_thread::sleep_for(std::chrono::duration<double, std::nano>(500));; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14936:191,interface,interface,191,https://root.cern,https://github.com/root-project/root/pull/14936,1,['interface'],['interface']
Integrability,mva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1513,message,message,1513,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"n == 1`. This fixes `SimBinnedConstrainedTest.SubEventSections` on `mac13arm`, but makes it fail on x86 (didn't investigate why). It also makes `SimBinnedConstrainedTest.EventSections` fail (both on `mac13arm` and x86) - this test looks even worse in terms of floating point arithmetic, since it expects summing up two partitions individually and then adding the result being bitwise identical to summing up the whole range at once. From what I can see, this is only working by chance right now. > Or is the problem that the FMA operation on the different parts of the sum (the likelihood is calculated over multiple event ranges in the test that is failing, which are summed afterwards) has higher rounding errors on non-x86 so that in the end the result indeed differs?. See above; the additional problem is that the (optimizing) compiler will insert FMA operations if it sees fit (and is allowed to do so). So depending on how the code and the arithmetic operations are formulated, you may get different results depending on platform, software versions, optimization level, hardware, etc. > Or, even more problematically, could such FMA operations also cause similar rounding errors on x86 so that EXPECT_EQ indeed becomes impossible (and I just got lucky with the current parameters on x86)?. On x86, you are saved by the fact that, as far as I can tell, FMA instructions only come from some SIMD extension that the compiler cannot use unconditionally. This is different on AArch64 (and apparently also PPC64LE) where it appears it is in the base ISA and always available. But yes, if in the future FMA is always available on x86 or you compile (parts of) the code with vector instructions (`RooBatchCompute`, hint hint), you can potentially run into the same problem. For another point regarding ""lucky"", see above that adding the `extendedTerm` to the last partition already makes one other test fail... In conclusion, I urge you to reconsider expecting bit-wise identical results. I think I've",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1545342170:1979,depend,depending,1979,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1545342170,2,['depend'],['depending']
Integrability,"n error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.04508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.08508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.11206, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.61614, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=4.19165, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.07341, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=3.42638, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=2.6117, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation er",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327#issuecomment-349216512:1968,message,message,1968,https://root.cern,https://github.com/root-project/root/pull/1327#issuecomment-349216512,1,['message'],['message']
Integrability,"n error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.65215, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.04508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.08508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.11206, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.61614, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=4.19165, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.07341, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=3.42638, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327#issuecomment-349216512:1718,message,message,1718,https://root.cern,https://github.com/root-project/root/pull/1327#issuecomment-349216512,1,['message'],['message']
Integrability,"n help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:** add ""`LikelihoodGradientSerial`"" class (based on `RooGradMinimizerFcn`) so we can add an integration test in this PR; **B:** wait for the integration test in PR 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700:3180,depend,dependencies-,3180,https://root.cern,https://github.com/root-project/root/pull/8700,3,"['depend', 'integrat']","['dependencies-', 'integration']"
Integrability,"n of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:8118,interface,interface,8118,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,"n prefer to have a run-time option and I think I have a solution that satisfies everyone. This is implemented in my latest patch https://github.com/root-project/root/pull/6705/commits/365bd46563c025a5341b48e6d199b2aa4be76c4e. I think we need to collect the prefix stack if we want to be able to filter out, for example, messages from MnLineSearch that happen inside MnMigrad, but not those that happen inside MnHesse. That's why I think the prefix stack should stay. It is also fast, since only a couple of pointers are copied around. However, there is no need to show the full stack of prefixes. By default, MnPrint could just show the prefix from the innermost scope. I added the static method `MnPrint::ShowPrefixStack(bool yes)` to toggle showing the full prefix or not. The default is off so that the messages are not too long. I also now implemented filtering of messages based on the value of the prefix stack. When no filters are set, all messages are shown. Once a filter is set, only messages that match the filter are shown. This is done with strings, using `MnPrint::AddFilter` and `MnPrint::ClearFilter` to reset the filters. Filtering works like `grep` on the full prefix, the message is shown if any of the filter strings match. To only see messages from `MnHesse`, one can do:; ```c++; MnPrint::AddFilter(""MnHesse"");; ```; To only see messages from `MnHesse` called from VariableMetrixBuilder, one can do:; ```c++; MnPrint::AddFilter(""VariableMetricBuilder:MnHesse"");; ```; To only match the beginning of the prefix string, use ""^"". For example,; ```c++; MnPrint::AddFilter(""^MnHesse"");; ```; only matches direct execution of MnHesse, but not MnHesse called by MnMigrad. It also works with substrings. To see all messages from any Gradient calculator, one can do:; ```c++; MnPrint::AddFilter(""Gradient"");; ```; to match AnalyticalGradientCalculator, Numerical2PGradientCalculator, and InitialGradientCalculator. Filtering is not implemented in a very efficient way to keep the code sim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-733046580:1006,message,messages,1006,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-733046580,2,['message'],['messages']
Integrability,"n the 2nd run). The issue here (well there https://github.com/root-project/root/issues/10743) does not seems to be the 2nd running of EndOfProcessCleanups but rather that there is a bad interaction between the 'early' running of the cleanups and that something in RDataFrame is not properly informed that something is delete early. The early cleanups is necessary because of the following issue. * The python code (directly or indirectly) can load libraries (Ls); * The python code (directly or indirectly) can open TFile (Fs) and can elect to never delete them; * The python code (directly or indirectly) can attach objects based on the Libraries on to the TFile. Then the order of execution at tear down will be. (1) tear down python; (2) unload the loaded libraries (Ls); (3) execute the atexit registered by TROOT, ; (4) this includes EndOfProcessCleanups; (5) this includes flushing and closing the TFiles. During (5) the object attached the TFile (usually just histogram and `TTree` but can also be object from the user libraries. However if the libraries for the user objects are already unloaded, their code (including a Streamer function or even their dictionary) are gone and this result in crash at best or worse in data loss. In order to prevent that we introduced (in https://github.com/root-project/root/commit/7a592f5d62dda6c76f230bfa6fd879e5fa80582a and friends), running the `EndOfProcessCleanups` of cleanups as soon as possible (i.e. as soon as we can detect the process is starting to tear down). (i.e. make it part of (1)). More likely that not this means than rather than removing early this call to `EndOfProcessCleanups`, the solution is to inform `RDataFrame` of those early deletion (depending whether the things that are deleted that are annoying `RDataFrame`, they may or may not be having the trouble described above, so another solution might be to insure that the things that bother `RDataFrame` are not included in the list of things deleted by `EndOfProcessCleanups`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10753#issuecomment-1155610874:1835,depend,depending,1835,https://root.cern,https://github.com/root-project/root/pull/10753#issuecomment-1155610874,1,['depend'],['depending']
Integrability,n.ch/job/root-pullrequests-build/80548/console).; ### Warnings:; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: con,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-596563785:1062,interface,interface,1062,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-596563785,1,['interface'],['interface']
Integrability,"n.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):; got exit code 139 but expected 0; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14155:3613,message,message,3613,https://root.cern,https://github.com/root-project/root/issues/14155,1,['message'],['message']
Integrability,"n/usr/lib/clang/13.0.0/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -I/Users/suter_a/Applications/root/root_exec/include -I/opt/local/include -I/Users/suter_a/Applications/musrfit/src/include -I/Users/suter_a/Applications/musrfit/src/classes PUserFcnBase.h /Users/suter_a/Applications/musrfit/src/include/PUserFcnBaseLinkDef.h; cd /Users/suter_a/Applications/musrfit/build && /opt/local/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/suter_a/Applications/musrfit /Users/suter_a/Applications/musrfit/src/classes /Users/suter_a/Applications/musrfit/build /Users/suter_a/Applications/musrfit/build/src/classes /Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake --color=; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/CMakeDirectoryInformation.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Scanning dependencies of target PUserFcnBase; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/classes/CMakeFiles/PUserFcnBase.dir/build.make src/classes/CMakeFiles/PUserFcnBase.dir/build; ... And all the further root_generate_dictionary work as well. Does this help?. Cheers,; Andreas. PS: Machine I have tested it on: ; Darwin Kernel Version 21.3.0: Wed Jan 5 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_ARM64_T8101 arm64. ________________________________. Paul Scherrer Institut. Dr. Andreas Suter; Laboratory for Muon-Spin Spectroscopy; Swiss Muon Source SµS; WLGA/119; Forschungsstrasse 111; CH - 5232 V",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1061481610:4372,Depend,DependInfo,4372,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1061481610,1,['Depend'],['DependInfo']
Integrability,"nStmt(clang::ReturnStmt const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x961225B: clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x9674B79: clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x9683D06: clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96CC352: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628==; ==75628== Conditional jump or move depends on uninitialised value(s); ==75628== at 0xCE735BC: llvm::getAllocAlignment(llvm::CallBase const*, llvm::TargetLibraryInfo const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA0A1EF: llvm::InstCombinerImpl::annotateAnyAllocSite(llvm::CallBase&, llvm::TargetLibraryInfo const*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA1277B: llvm::InstCombinerImpl::visitCallBase(llvm::CallBase&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA15A53: llvm::InstCombinerImpl::visitCallInst(llvm::CallInst&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xC9BEF7E: llvm::InstCombinerImpl::run() (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xC9C2298: combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16123:5329,depend,depends,5329,https://root.cern,https://github.com/root-project/root/issues/16123,1,['depend'],['depends']
Integrability,"nZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from; > ; > ```; > | | |-MoveConstructor; > ```; > ; > to; > ; > ```; > | | |-MoveConstructor exists non_trivial user_declared; > ```; > ; > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow?. I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the explicit intent is to `delete` the copy constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426#issuecomment-1918556597:2892,wrap,wrapper,2892,https://root.cern,https://github.com/root-project/root/pull/14426#issuecomment-1918556597,2,['wrap'],['wrapper']
Integrability,"naconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. I make my conda environment using; ```yaml; channels:; - conda-forge; dependencies:; - ipython; - pandas=1.2.0; - particle=0.14.0; - root=6.22.6; - root_pandas=0.7.0; ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249#issuecomment-782161773:7369,depend,dependencies,7369,https://root.cern,https://github.com/root-project/root/issues/7249#issuecomment-782161773,1,['depend'],['dependencies']
Integrability,"nal/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml; In file included from input_line_8:57:; In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:4010,interface,interface,4010,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,"named 'RResultPtr' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:442:56: error: unknown type name 'RSnapshotOptions' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:459:4: error: no template named 'RResultPtr' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:461:56: error: unknown type name 'RSnapshotOptions' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:660:4: error: no template named 'RResultPtr' . And 10 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-ini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2232#issuecomment-399775824:1883,depend,depends,1883,https://root.cern,https://github.com/root-project/root/pull/2232#issuecomment-399775824,2,['depend'],['depends']
Integrability,nc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-23T12:37:06.205Z] /mn,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-866798208:5542,Integrat,Integrator,5542,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-866798208,1,['Integrat'],['Integrator']
Integrability,nclude -I/bld6/root/src/core/base/inc -I/bld6/root/src/core/base/v7/inc -I/bld6/root/src/core/clib/inc -I/bld6/root/src/core/clingutils/inc -I/bld6/root/src/core/clingutils/res -I/bld6/root/src/core/cont/inc -I/bld6/root/src/core/foundation/inc -I/bld6/root/src/core/foundation/v7/inc -I/bld6/root/src/core/foundation/res -I/bld6/root/src/core/gui/inc -I/bld6/root/src/core/meta/inc -I/bld6/root/src/core/rint/inc -I/bld6/root/src/core/textinput/inc -I/bld6/root/src/core/textinput/src -I/bld6/root/src/core/thread/inc -I/bld6/root/src/core/zip/inc -I/bld6/root/src/core/lzma/inc -I/bld6/root/bld_nvhpc/include -I/bld6/root/src/core/lz4/inc -I/bld6/root/src/core/zstd/inc -I/bld6/root/src/builtins/zstd -I/bld6/root/src/core/unix/inc -I/bld6/root/src/core/unix/../clib/res -I/usr/include -I/bld6/root/src/builtins/xxhash -I/bld6/root/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14250:5699,Message,MessageTypes,5699,https://root.cern,https://github.com/root-project/root/issues/14250,1,['Message'],['MessageTypes']
Integrability,nclude -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-25T09:12:01.464Z] /mn,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8220#issuecomment-868356611:3409,Integrat,Integrator,3409,https://root.cern,https://github.com/root-project/root/pull/8220#issuecomment-868356611,1,['Integrat'],['Integrator']
Integrability,"ncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1833762580:2711,interface,interface,2711,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1833762580,2,['interface'],['interface']
Integrability,nctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:38:42: error: typedef redefinition with different types ('ROOT::Math::IBaseFunctionMultiDim' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:154:37: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:174:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:180:43: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:193:40: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:215:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:219:43: error: only virtual member functions can be marked 'override' . ### Warnings:; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDataSource.hxx:213:11: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373548076:1978,Wrap,WrappedFunction,1978,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373548076,2,['Wrap'],['WrappedFunction']
Integrability,nd -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Frontend -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/usr/include/libxml2 -Iinterpreter/llvm/src/include -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++11 -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -fno-exceptions -fno-rtti -std=c++11 -MD -MT interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:376: error: ‘conditional_t’ in namespace ‘std’ does not name a template type ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected ‘&gt;’ before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected ‘(’ before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8399#issuecomment-865243666:1457,Interface,InterfaceStubFunctionsConsumer,1457,https://root.cern,https://github.com/root-project/root/pull/8399#issuecomment-865243666,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,"nditional jump or move depends on uninitialised value(s); in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479; 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177; 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174; 7: main in /opt/root_src/main/src/rmain.cxx:81; Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s); in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36; 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53; 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61; 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331; 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114; 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852; 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:2416,depend,depends,2416,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['depend'],['depends']
Integrability,"ne 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using K",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:7101,wrap,wrapping,7101,https://root.cern,https://github.com/root-project/root/issues/12429,1,['wrap'],['wrapping']
Integrability,"next 10 years. I see this can be an issue if we start shipping module files (`bmi`s or equivalent) instead of header files. However, in practice that won't be the case in near future because the compiler vendors cannot agree on a common file format and make it standard. Until then, there will be always some sort of a textual header file which can be processed with our clang-based rootcling and build a pcm file as basis for our dictionaries. . > My request is for the upcoming ROOT with Clang 16 to be able to accommodate the generation and use of PCM dictionaries where dependencies thereof are or use C++20 modules. Clang has at least 5 different ""flavors"" of modules. One of them is the C++20 modules as described by the C++ standard. At the moment you start using C++ 20 you could use the `import`/`export` constructs and you will be able to use that feature for encapsulation purposes. There is not enough project transitions which are bigger than toy examples. One of the challenges is how we discover module dependencies. That is, we need extra tooling to decide how to split the source files into modules. In practice we need to pre-lex all of the content before the build system can start processing project files. The community is discussing scanners (such as clang scan-deps), daemons (the gcc implementation), protocols, etc. There is increasing amount of papers trying to address how we put C++ modules at scale (https://wg21.link/p2656, https://wg21.link/P2409, https://youtu.be/_LGR0U5Opdg?si=AbLazREvyl5PXVFG). Some papers/talks are more radical claiming that we cannot even roll out modules (as written in the standard) at such scale. . For modules to be useful and work reliably we know that we need to apply modularization bottom up. That means that before modularizing cmssw/art we need everything below starting from libc and libxml to become modular. That's something we observed during our modularization efforts in cmssw (see https://github.com/cms-sw/cmssw/issues/15248). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13536#issuecomment-1693395998:1475,depend,dependencies,1475,https://root.cern,https://github.com/root-project/root/issues/13536#issuecomment-1693395998,2,['depend'],['dependencies']
Integrability,"next time such breaking changes before asking for a llvm review and land patches in these particularly sensitive areas. I explicitly added you to the list of reviewers for the original patch, there is little more I can do than that. And more coordination is exactly what I am trying to do now. If we cannot reach a conclusion may I at least be added to review whatever your solution looks like?. > 1. I plan to remove the NDEBUG assert. Already done in D33529. > 2. Make the std::vector<void*> a std::vector<llvm::PointerIntPair<void*, 1, bool>>. How can you guarantee that the platform will deliver a pointer with proper alignment for that?. > 3. I will change the search order to search for first the one that are not marked RTLD_GLOBAL. So any other client that wants to open thing's with RTLD_LOCAL will then expose what they thought were private symbols to the JIT as a whole?. > One of the issues is that it is not clear to me is what exactly is your use case and this is why there are misunderstandings. I also don't understand why there are mis-understandings, but have explained the use case a few times now and **3** will explicitly break that as well as provide bizarre default behavior:. > libc++.so, libA.so; > libA.so defines an overload for global operator new/delete; > ; > ```; > DynamicLibrary::getPermanentLibrary(NULL); > // Other code; > DynamicLibrary::getPermanentLibrary(""libA.so""); > ```; > In your scheme the JIT can pull operator new/delete from libA.so, and worse is that whether it pulls operator new/delete from libA.so is dependent on whether operator new/delete has been resolved in **// Other code** before libA.so has been loaded.; > . The example can be expanded to RTTI information, exceptions, and a host of other problems.; And even worse than that is that in your scheme there is no way of hiding symbols from the global scope, in fact it promotes everything that the user reasonably expected to be private (via RTLD_LOCAL) to take dominance over anything else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313799028:2526,depend,dependent,2526,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313799028,1,['depend'],['dependent']
Integrability,"nformation.hh' file not found; #include ""G4VUserTrackInformation.hh""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:; ```; See full [error.txt](https://github.com/root-project/root/files/5517699/error.txt). But with the root master or 6.22.00, there is only; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still prints the header not found message; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```; (That the XML file isn't there doesn't matter, the argument has to be filled). ### Setup. 1. ROOT master, 6.22.00; 2. centos7; 3. lcg install. ### Additional context. This isn't really high priority, as a work around is available, but from; https:/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:1402,message,message,1402,https://root.cern,https://github.com/root-project/root/issues/6791,1,['message'],['message']
Integrability,"ng) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149); ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728); ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C86E2: _S_copy (basic_string.h:356); ==270704== by 0x66C86E2: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (basic_string.h:739); ==270704== by 0x27216540: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:92713,depend,depends,92713,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"ng::printValue(unsigned __int64 const *); 892: Maybe you need to load the corresponding shared library?; 892: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 892: error code: -529697949; 892:; 892:; 15/16 Test #892: tutorial-dataframe-df024_Display-py ......................***Failed 9.91 sec; test 893; Start 893: tutorial-dataframe-df031_Stats-py. 893: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df031_Stats.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 893: Environment variables:; 893: ROOT_HIST=0; 893: Test timeout computed to be: 1500; 893: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 893: error code: -529697949; 893:; 893:; 16/16 Test #893: tutorial-dataframe-df031_Stats-py ........................***Failed 4.47 sec. 0% tests passed, 16 tests failed out of 16. Label Time Summary:; tutorial = 85.86 sec*proc (16 tests). Total Test time (real) = 94.38 sec. The following tests FAILED:; 878 - tutorial-dataframe-df001_introduction-py (Failed); 879 - tutorial-dataframe-df002_dataModel-py (Failed); 880 - tutorial-dataframe-df003_profiles-py (Failed); 881 - tutorial-dataframe-df004_cutFlowReport-py (Failed); 882 - tutorial-dataframe-df006_ranges-py (Failed); 883 - tutorial-dataframe-df007_snapshot-py (Failed); 884 - tutorial-dataframe-df008_createDataSetFromScratch-py (Failed); 885 - tutorial-dataframe-df010_trivialDataSource-py (Failed); 886 - tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py (Failed); 887 - tutorial-dataframe-df014_CSVDataSource-py (Failed); 888 - tutorial-dataframe-df016_vecOps-py (Failed); 889 - tutorial-dataframe-df017_vecOpsHEP-py (Failed); 890 - tutorial-dataframe-df019_Cache-py (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:16304,message,message,16304,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,night/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/rint/src/TRint.cxx:461:22; #19 0x514b4a in main /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/main/src/rmain.cxx:84:12; #20 0x7f885647ed84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f92f9985bf742e6e1ea71e6851f27783568e23d4). SUMMARY: AddressSanitizer: heap-use-after-free /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8 in TClass::Size() const; Shadow bytes around the buggy address:; 0x0c2c800baf30: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa; 0x0c2c800baf40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800baf50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; =>0x0c2c800baf80: fd fd fd fd[fd]fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf90: fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafa0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07 ; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==1544443==ABORTING. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 1 but expected 0. Standard Output. -- TEST COMMAND --,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715:22405,message,message,22405,https://root.cern,https://github.com/root-project/root/issues/12715,1,['message'],['message']
Integrability,nk C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;; #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components; #pragma link C++ class dd4hep::sim::Geant4DataDump;; #pragma link C++ class dd4hep::sim::Geant4Random;; #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;; #pragma link C++ class dd4hep::sim::Geant4UIManager;; #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here; //namespace detail {}; //#pragma link C++ namespace detail;. #endif. // CLHEP stuff; #include <CLHEP/Random/Random.h>; #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;; #pragma link C++ class CLHEP::HepRandom;; #pragma link C++ class CLHEP::HepRandomEngine;; #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Gea,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:54454,rout,routine,54454,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,1,['rout'],['routine']
Integrability,"nk C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;; #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components; #pragma link C++ class dd4hep::sim::Geant4DataDump;; #pragma link C++ class dd4hep::sim::Geant4Random;; #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;; #pragma link C++ class dd4hep::sim::Geant4UIManager;; #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here; //namespace detail {}; //#pragma link C++ namespace detail;. #endif. // CLHEP stuff; #include <CLHEP/Random/Random.h>; #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;; #pragma link C++ class CLHEP::HepRandom;; #pragma link C++ class CLHEP::HepRandomEngine;; #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB; #define DD4HEP_USE_TBB 1; #endif; #ifndef BOOST_SPIRIT_USE_PHOENIX_V3; #define BOOST_SPIRIT_USE_PHOENIX_V3 1; #endif; #ifndef DD4HEP_USE_XERCESC; #define DD4HEP_USE_XERCESC 1; #endif; #ifndef G4LIB_BUILD_DLL; #define G4LIB_BUILD_DLL 1; #endif; #ifndef PTL_BUILD_DLL; #define PTL_BUILD_DLL 1; #endif; #ifndef G4VIS_USE_RAYTRACERX; #define G4VIS_USE_RAYTRACERX 1; #endif; #ifndef G4VIS_USE_TOOLSSG_QT_GLES; #define G4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:18735,rout,routine,18735,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,1,['rout'],['routine']
Integrability,nking [cling interface function]!; You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]!; You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:4231,interface,interface,4231,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,1,['interface'],['interface']
Integrability,"no @pcanal , looks like all of the failed one are reading data from EOS. There are few unit tests which failed with different error message e.g. [a] . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-efd635/14020/unitTests/failed.html; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-efd635/14020/unitTests/src/TopQuarkAnalysis/TopHitFit/test/runtestTqafTopHitFit/testing.log; ```; 06-Apr-2021 18:34:49 CEST Closed file root://eoscms.cern.ch//eos/cms/store/user/cmsbuild/store/relval/CMSSW_9_2_2/RelValProdTTbar_13/AODSIM/91X_mcRun2_asymptotic_v3-v1/10000/EEB99F74-DA4D-E711-A41C-0025905A48F2.root; ----- Begin Fatal Exception 06-Apr-2021 18:34:50 CEST-----------------------; An exception of category 'StdException' occurred while; [0] Calling EventProcessor::runToCompletion (which does almost everything after beginJob and before endJob); Exception Message:; A std::exception was thrown.; vector::_M_fill_insert; ----- End Fatal Exception -------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-814425870:132,message,message,132,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-814425870,4,"['Message', 'integrat', 'message']","['Message', 'integration', 'message']"
Integrability,no this is correct. This is one of the errors we get ( https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-941446/14005/addOnTests/pat1/cmsRun__data_cmsbld_jenkins_workspace_ib-run-pr-addon_CMSSW_11_3_ROOT6_X_2021-04-05-2300_src_PhysicsTools_PatAlgos_test_IntegrationTest_cfg.py.log ) . . If you are interested in error https://github.com/root-project/root/issues/7718#issuecomment-814425870 then I can provide the reproducer for that too,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-815180258:113,integrat,integration,113,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-815180258,1,['integrat'],['integration']
Integrability,"nonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:735); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149); ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728); ==270704== by 0x5E1004F: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:101); ==270704== by 0x5E1F938: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:607); ==270704== by 0x49E0C2E: _PyObject_Call (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49DD066: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x5DF38F7: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2602); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C3391: ??? (in /usr/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:2518,depend,depends,2518,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Gr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:3334,message,message,3334,https://root.cern,https://github.com/root-project/root/issues/16242,1,['message'],['message']
Integrability,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h; -> fails with file not found:; ```; -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\; 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx ; /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\; directory ; 3 | #include ""tbb/tbb_config.h"" ; ```; maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8239#issuecomment-848726115:518,wrap,wrap,518,https://root.cern,https://github.com/root-project/root/pull/8239#issuecomment-848726115,1,['wrap'],['wrap']
Integrability,ns.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/). And 40 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1318#issuecomment-344218491:3261,interface,interface,3261,https://root.cern,https://github.com/root-project/root/pull/1318#issuecomment-344218491,2,['interface'],['interface']
Integrability,ns.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/). And 39 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1318#issuecomment-344198870:3256,interface,interface,3256,https://root.cern,https://github.com/root-project/root/pull/1318#issuecomment-344198870,2,['interface'],['interface']
Integrability,ns.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/). And 40 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1322#issuecomment-344242226:3282,interface,interface,3282,https://root.cern,https://github.com/root-project/root/pull/1322#issuecomment-344242226,2,['interface'],['interface']
Integrability,ns.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/). And 40 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1322#issuecomment-344243813:3256,interface,interface,3256,https://root.cern,https://github.com/root-project/root/pull/1322#issuecomment-344243813,2,['interface'],['interface']
Integrability,"nsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x278D9835: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565); ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >) (predefined_ops.h:270); ==270704== by 0x27198DBB: __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::__find_if<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:155076,depend,depends,155076,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,nsistent: ; ```; tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1273,message,message,1273,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"nst&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149); ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728); ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x671C320: _S_copy (basic_string.h:356); ==270704== by 0x671C320: _S_copy_chars (basic_string.h:406); ==270704== by 0x671C320: _M_construct<char const*> (basic_string.tcc:225); ==270704== by 0x671C320: _M_construct_aux<char const*> (basic_string.h:255); ==270704== by 0x671C320: _M_construct<char const*> (basic_string.h:274); ==270704== by 0x671C320: basic_string (basic_string.h:521); ==270704== by 0x671C320: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::__sv_wrapper, std::allocator<char> const&) (basic_string.h:154); ==270704== by 0x6B50558: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::basic_string_view<char, std::char_traits<char> >, void>(std::basic_string_view<char, std::char_traits<char> > const&, std::allocator<char> const&) (basic_string.h:664); ==270704== by 0x27",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:63174,depend,depends,63174,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"nst*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #13 0x00007f6ff46276da in TCling::TCling(char const*, char const*, char const* const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007f6ff4628c20 in CreateInterpreter () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007f70030165d9 in TROOT::InitInterpreter() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007f7003016a8f in ROOT::Internal::GetROOT2() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007f70035e68a2 in __static_initialization_and_destruction_0(int, int) [clone .constprop.376] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libcppyy_backend3_8.so; #18 0x00007f704e7d19c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #19 0x00007f704e7d659e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #20 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #21 0x00007f704e7d5b8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #22 0x00007f704dbf1fab in dlopen_doit () from /lib64/libdl.so.2; #23 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #24 0x00007f704dbf25ad in _dlerror_run () from /lib64/libdl.so.2; #25 0x00007f704dbf2041 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2; ... (more Python-related stack); ```. Installing the ROOT dependencies in the system fixed the error. I ran the following command:. `sudo yum install git make cmake3 gcc-c++ gcc binutils libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel`. but I don't know exactly what dependency fixed it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8157:5068,depend,dependencies,5068,https://root.cern,https://github.com/root-project/root/issues/8157,2,['depend'],"['dependencies', 'dependency']"
Integrability,"nt); inline size_t recv (void *buf_, size_t len_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’; /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int); inline bool recv (message_t *msg_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’; In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:; (...); /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope; auto it = m_fds.find(fd);; ^~~~~; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’; auto it = m_fds.find(fd);; ^~~~~; m_free; Consolidate compiler generated dependencies of target obj.clingInterpreter; [ 73%] Built target obj.clingInterpreter; [ 73%] Built target clingInterpreter; [ 73%] Built target CLING; [ 73%] Built target clad; [ 73%] Built target LLVMRES; Consolidate compiler generated dependencies of target ClingUtils; roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed; make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1; make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors.; CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed; make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all] Error 2; (...); ```; It seems that the problem is related to the system provided ""`libzmq`"".; The configuration step says:; `-- ZeroMQ not found. Switching on builtin_zeromq option`; but it also finds:; `pkgcfg_li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10107:2895,depend,dependencies,2895,https://root.cern,https://github.com/root-project/root/issues/10107,1,['depend'],['dependencies']
Integrability,ntalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-12T06:56:09.498Z] ghprbPullLongDescription=This addresses test failures like:\r\n```\r\n 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417#issuecomment-860019280:1481,message,message,1481,https://root.cern,https://github.com/root-project/root/pull/8417#issuecomment-860019280,1,['message'],['message']
Integrability,"nternal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56); ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:201886,depend,depends,201886,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"nterpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:8316,message,message,8316,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"ntext*) (CPPMethod.cxx:728); ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565); ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >) (predefined_ops.h:270); ==270704== by 0x27198C78: __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::__find_if<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:96636,depend,depends,96636,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"ntry=0x555ecdd48270, wrapper_name=""__cf_10"", ; wrapper=""#pragma clang diagnostic push\n#pragma clang diagnostic ignored \""-Wformat-security\""\n__attribute__((used)) __attribute__((annotate(\""__cling__ptrcheck(off)\"")))\nextern \""C\"" void __cf_10(void* obj, int narg""..., withAccessControl=withAccessControl@entry=true); at /home/b/bendavid/rootdev19/root/core/metacling/src/TClingCallFunc.cxx:268; #10 0x00007fb1c56357e0 in TClingCallFunc::make_wrapper (this=0x555ecdd48270) at /home/b/bendavid/rootdev19/root/core/metacling/src/TClingCallFunc.cxx:1120; #11 0x00007fb1c5635ce0 in TClingCallFunc::IFacePtr (this=0x555ecdd48270) at /home/b/bendavid/rootdev19/root/core/metacling/src/TClingCallFunc.cxx:2304; #12 0x00007fb1ca95d7ab in GetCallFunc (method=93865664483216) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:727; #13 WrapperCall (method=93865664483216, nargs=1, args_=0x7ffd174f83d0, self=0x7fb1ca9130a0 <ROOT::Internal::GetROOT1()::alloc>, result=0x7ffd174f8140); at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:769; #14 0x00007fb1ca95ded0 in Cppyy::CallR (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>); at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:846; #15 0x00007fb1ca9d9cc8 in GILCallR (ctxt=0x7ffd174f83b0, self=<optimized out>, method=<optimized out>); at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:78; #16 CPyCppyy::(anonymous namespace)::InstancePtrExecutor::Execute (this=<optimized out>, method=<optimized out>, self=<optimized out>, ctxt=0x7ffd174f83b0); at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:579; #17 0x00007fb1ca9c5269 in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>, ; this=<optimized out>) at /ho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010779015:5487,Wrap,WrapperCall,5487,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010779015,1,['Wrap'],['WrapperCall']
Integrability,ntu18.04-i386/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80549/console).; ### Warnings:; - /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declar,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-596724308:997,interface,interface,997,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-596724308,1,['interface'],['interface']
Integrability,"oat) [with AReal = double]::&lt;lambda(UInt_t)&gt;’, is used but never defined [-fpermissive] ; - include/ROOT/TThreadExecutor.hxx:124:9: error: ‘void ROOT::TThreadExecutor::Foreach(F, ROOT::TSeq&lt;INTEGER&gt;) [with F = TMVA::DNN::TCpu&lt;AReal&gt;::Dropout(TMVA::DNN::TCpuMatrix&lt;AReal&gt;&, AFloat) [with AReal = float]::&lt;lambda(UInt_t)&gt;; INTEGER = int]’, declared using local type ‘TMVA::DNN::TCpu&lt;AReal&gt;::Dropout(TMVA::DNN::TCpuMatrix&lt;AReal&gt;&, AFloat) [with AReal = float]::&lt;lambda(UInt_t)&gt;’, is used but never defined [-fpermissive] . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-ini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-409979112:1939,depend,depends,1939,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-409979112,4,['depend'],['depends']
Integrability,"obably have; incompatible bins. Rather than wait for failures like. `Error in <Merge>: Cannot merge histograms - limits are inconsistent`. that happen only when the distributed execution has already started and; may be hidden inside worker logs, raise an error in the local user; machine. An example of the error raised with this change: running this snippet; ```python; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; from dask.distributed import Client, LocalCluster. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True); client = Client(cluster); return client. if __name__ == ""__main__"":; df = RDataFrame(10, daskclient = create_connection()).Define(""x"",""rdfentry_""); m = ROOT.RDF.TH1DModel(""name"",""title"",10,0,10); df.Histo1D(m, ""x""); print(""After first Histo1D""); df.Histo1D((""name"",""title"",10,0,10), ""x""); print(""After second Histo1D""); df.Histo1D(""x""); print(""After third Histo1D""); ```; results in; ```; After first Histo1D; After second Histo1D; Traceback (most recent call last):; File ""/home/vpadulan/projects/rootcode/distrdf-histo-nomodel/test.py"", line 17, in <module>; df.Histo1D(""x""); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Proxy.py"", line 240, in _create_new_op; op = Operation.create_op(self.proxied_node._new_op_name, *args, **kwargs); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Operation.py"", line 118, in create_op; return SUPPORTED_OPERATIONS[name](name, *args, **kwargs); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Operation.py"", line 60, in __init__; raise TypeError(textwrap.fill(message)); TypeError: A histogram was created without a model. This cannot work in; distributed mode because histograms resulting from different tasks; would have incompatible bins. Please make sure to pass the histogram; model as the first argument to the function. See the RDataFrame docs; for help.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10368:1888,message,message,1888,https://root.cern,https://github.com/root-project/root/pull/10368,1,['message'],['message']
Integrability,"oducer. ```c++; RooRealVar x{""x"", ""x"", 0, 1};; RooRealVar y{""y"", ""y"", 0, 1};. RooGenericPdf pdfx{""pdfx"", ""1.0 + x - x"", {x}};; RooGenericPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] IN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15751:1539,integrat,integrator,1539,https://root.cern,https://github.com/root-project/root/issues/15751,2,['integrat'],['integrator']
Integrability,"of prefixing messages with a string to indicate the origin, e.g. when you logged from MnHesse, messages would be prefixed with ""MnHesse:"". Inside ``MnHesse``, to stay with the example, you might have seen code like this; ```c++; MN_INFO_MSG(""MnHesse: Some foo happened"");; [...]; MN_INFO_MSG(""MnHesse: Some bar happened"");; [...]; int n = 5;; MN_INFO_MSG(""MnHesse: Frobinated"", n, ""glorps"");; ```; Setting the prefix by hand was error prone and repetetive and made the logging code more distractive from the actual code. Especially now, since all the debug messages should also have this prefix, I wanted to automate this. So I turned MnPrint into a class that one can instantiate with a prefix for a given scope.; ```c++; MnPrint print(""MnHesse""); // appears once at the beginning of a long method; [...]; print.Info(""Some foo happened"");; [...]; print.Info(""Some bar happened"");; [...]; int n = 5;; print.Info(""Frobinated"", n, ""glorps"");; ```; The method ``MnPrint::Info`` uses the prefix set in the MnPrint ctor. The ctor of MnPrint also has an optional argument to print with a local print level. If this is not set, the global print level is used. In the long run (not in this patch), we should get rid of the global print level, because global mutable variables are difficult to reason about and in particular do not play nice with multi-threading. This design prepares for that step.; * I generally made sure that the logging messages contain the same information as the previous ones, but I reduced excess whitespace and improved the formatting. Some debug messages added several empty lines to the output, which made the logs hard to read.; * In very few isolated cases I removed redundant messages. I did this only when two messages printed the same information in succession.; * In a few cases, I changed debug output so that variables are printed in one line that were printed in several lines. A log is easier to grep and scroll through when variables are on the same line as the prefix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-719713799:1725,message,messages,1725,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-719713799,4,['message'],['messages']
Integrability,"of_vec_of_0/test-listarray.root'; tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). tests/test_1781-rdataframe-snapshot.py:53: SystemError; ```; while running the same code line by line in `Python` or in `lldb`:; ```python; >>> data_frame.Snapshot(""ListArray"", ""listarray.root"", (""x"",)); Error in <TStreamerInfo::Build>: awkward::ArrayView, discarding: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`:; ```python; % python ; Python 3.10.6 | packaged by conda-forge | (main, Aug 22 2022, 20:43:44) [Clang 13.0.1 ] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import awkward as ak; >>> import ROOT; >>> ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); >>> data_frame = ak.to_rdataframe({""x"": ak_array_in}); >>> data_frame.Snapshot(""ListArray"", ""filename.root"", (""x"",)); TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_T4lNHLu6jVU: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11602:4354,message,message,4354,https://root.cern,https://github.com/root-project/root/issues/11602,1,['message'],['message']
Integrability,ogger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message log,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1969,message,message,1969,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,ojectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1432,interface,interface,1432,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827,2,['interface'],['interface']
Integrability,ojectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6811/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6811/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6811/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6811/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6811/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6811/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6811/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6811/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6811/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1050#issuecomment-331864696:1700,interface,interface,1700,https://root.cern,https://github.com/root-project/root/pull/1050#issuecomment-331864696,2,['interface'],['interface']
Integrability,ojectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6815/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6815/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6815/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6815/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6815/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6815/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6815/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6815/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6815/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1050#issuecomment-331870670:1702,interface,interface,1702,https://root.cern,https://github.com/root-project/root/pull/1050#issuecomment-331870670,2,['interface'],['interface']
Integrability,ojectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8248/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8248/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8248/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8248/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8248/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8248/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8248/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8248/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8248/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1050#issuecomment-334527582:1700,interface,interface,1700,https://root.cern,https://github.com/root-project/root/pull/1050#issuecomment-334527582,2,['interface'],['interface']
Integrability,ojectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8250/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8250/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8250/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8250/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8250/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8250/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8250/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8250/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8250/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1050#issuecomment-334531809:1697,interface,interface,1697,https://root.cern,https://github.com/root-project/root/pull/1050#issuecomment-334531809,2,['interface'],['interface']
Integrability,ojectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8251/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8251/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8251/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8251/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8251/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8251/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8251/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8251/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8251/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1050#issuecomment-334527288:1697,interface,interface,1697,https://root.cern,https://github.com/root-project/root/pull/1050#issuecomment-334527288,2,['interface'],['interface']
Integrability,ojectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8252/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8252/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8252/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8252/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8252/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8252/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8252/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8252/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8252/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1050#issuecomment-334527911:1702,interface,interface,1702,https://root.cern,https://github.com/root-project/root/pull/1050#issuecomment-334527911,2,['interface'],['interface']
Integrability,ok fair enough. This looks good then. Did you also test going through the `TMethodCall` interfaces?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12654#issuecomment-1511935868:88,interface,interfaces,88,https://root.cern,https://github.com/root-project/root/pull/12654#issuecomment-1511935868,1,['interface'],['interfaces']
Integrability,"ok, i will try that. indeed in alice we need to use c++17. I will try; without. Ciao,; Giulio. On Sat, Sep 16 2023 at 8:32 PM, Jonas Hahnfeld ***@***.***>; wrote:. > @ktf <https://github.com/ktf> can you please not debug in Jenkins? This; > should be investigated offline!; >; > Sorry, but I cannot replicate it offline, I have tried mac, ubuntu and; > centos with a number of combinations of the various -D*ASSERT*=ON,; > -DCMAKE_BUILD_TYPE=* I can possibly think of. If you have a failing; > environment could you provide me access to it?; >; > I can quite easily reproduce it on EL8 with the exact cmake command from; > the Jenkins log. The important piece seems to be -DCMAKE_CXX_STANDARD=14.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/pull/13641#issuecomment-1722289138>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAACSMFXWNET6PLRILOVARLX2XWDPANCNFSM6AAAAAA4VAKC3A>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1722290915:1016,Message,Message,1016,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1722290915,1,['Message'],['Message']
Integrability,"ol testing::internal::MatcherBase<T>::IsInlined()’:; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared; std::is_trivially_copy_constructible<M>::value &&; ^; ```; There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior; CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup; 1. ROOT version: master; 2. Operating system: CentOS 7; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context; None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9370:2694,message,messages,2694,https://root.cern,https://github.com/root-project/root/issues/9370,1,['message'],['messages']
Integrability,"olation; 304: ******************************************************************; 304: * SYS: FreeBSD hack 13.2-RELEASE-p1 FreeBSD 13.2-RELEASE-p1 GENERIC; 304: ******************************************************************; 304: ******************************************************************; 304: * ROOTMARKS =4262.5 * Root6.29/01 20221221/1150; 304: ******************************************************************; 304: Time at the end of job = 18.882812 seconds; 304: Generating stack trace...; 304: 0x0000000826fefe68 in _ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_1 at /usr/include/c++/v1/__hash_table:2070 from /home/mkrzewic/build/root/lib/libTree.so; 304: 0x0000000830314f3e in TClass::TDeclNameRegistry::AddQualifiedName(char const*) at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x0000000830315169 in TClass::InsertTClassInRegistryRAII::~InsertTClassInRegistryRAII() at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x000000083032618c in TClass::SetUnloaded() at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x00000008302d88cb in ROOT::RemoveClass(char const*, TClass*) at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x00000008303344d7 in ROOT::TGenericClassInfo::~TGenericClassInfo() at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: CMake Error at /home/mkrzewic/build/root/RootTestDriver.cmake:232 (message):; 304: error code: 129; 304:; 304:; 1/1 Test #304: test-stressroofit-batchmode-cpu ...***Failed 22.19 sec; ```. ### Reproducer. ctest -V -R test-stressroofit-batchmode-cpu. ### ROOT version. master. ### Installation method. source. ### Operating system. freeBSD 13.2p1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13200:2302,message,message,2302,https://root.cern,https://github.com/root-project/root/issues/13200,1,['message'],['message']
Integrability,ols/root-6.32.04/core/textinput/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/textinput/src -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/thread/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/zip/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/lzma/inc -I/opt/homebrew/include -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/lz4/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/zstd/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/builtins/zstd -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/macosx/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/unix/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/unix/../clib/res -I/Users/josiahlee/WORK/Tools/root_build_release/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Users/josiahlee/WORK/Tools/root-6.32.04/builtins/zlib -I/Users/josiahlee/WORK/Tools/root-6.32.04/builtins/xxhash ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMapFile.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498:14214,Message,MessageTypes,14214,https://root.cern,https://github.com/root-project/root/issues/16498,1,['Message'],['MessageTypes']
Integrability,"omania:; >; >; > https://bigpanda.cern.ch//media/filebrowser/60928171-593f-4422-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout; >; > [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [; > tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 400); >; > Fail canada:; >; >; > https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout; >; > [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [; > lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol successful (type:; > server [], protocol version 400); >; > Failed CERN:; >; >; > https://bigpanda.cern.ch//media/filebrowser/c4b9c33e-f260-46b5-9b07-40d54ddef09b/panda/tarball_PandaJob_4926196336_CERN/payload.stdout; >; > [2020-12-19 01:47:52.683440 +0100][Debug ][XRootDTransport ] [; > eosatlas.cern.ch:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 400); >; > Failed Technion:; >; >; > https://bigpanda.cern.ch//media/filebrowser/a51fb0cb-4f96-4442-b0c2-ea15e6d72bf7/panda/tarball_PandaJob_4926186375_TECHNION/payload.stdout; >; > [2020-12-19 02:37:01.970916 +0200][Debug ][XRootDTransport ] [; > tech-gftp.hep.technion.ac.il:1094 #0.0] kXR_protocol successful (type:; > server [], protocol version 400); >; > Failed Manchester:; >; >; > https://bigpanda.cern.ch//media/filebrowser/75e12a74-de3e-4b78-bc16-cfcde3fdcb77/panda/tarball_PandaJob_4926186317_UKI-NORTHGRID-MAN-HEP/payload.stdout; >; > [2020-12-19 00:36:00.516637 +0000][Debug ][XRootDTransport ] [; > bohr3226.tier2.hep.manchester.ac.uk:1094 #0.0] kXR_protocol successful; > (type: manager [], protocol version 500); >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-758062082>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABN",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758074953:4532,protocol,protocol,4532,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758074953,1,['protocol'],['protocol']
Integrability,"on RuntimeError and produces some output log on stdout as follows:. ```; 2022-10-07 17:00:25,901 - distributed.worker - WARNING - Compute Failed; Key: dask_mapper-d6baeae1-74a8-4a41-84e9-6ee2e8db064f; Function: execute_task; args: ((<function DaskBackend.ProcessAndMerge.<locals>.dask_mapper at 0x7f0cdae1a320>, (<function apply at 0x7f0cfa133910>, <class 'DistRDF.Ranges.TreeRangePerc'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:1359,wrap,wrapper,1359,https://root.cern,https://github.com/root-project/root/issues/11515,1,['wrap'],['wrapper']
Integrability,"on error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.08508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.11206, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.61614, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=4.19165, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.07341, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=3.42638, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=2.6117, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-3.10404, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327#issuecomment-349216512:2217,message,message,2217,https://root.cern,https://github.com/root-project/root/pull/1327#issuecomment-349216512,1,['message'],['message']
Integrability,"on of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RDrawable; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RPadBase; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:4973,interface,interface,4973,https://root.cern,https://github.com/root-project/root/issues/14587,1,['interface'],['interface']
Integrability,"onary build twice.; See the result of $ grep -r ""Generating G__Imt"" core/imt; core/imt/CMakeFiles/Imt.dir/build.make:@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --blue --bold --progress-dir=/Users/axel/build/root/cmake/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) ""Generating G__Imt.cxx, ../../lib/libImt.rootmap""; core/imt/CMakeFiles/G__Imt.dir/build.make:@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --blue --bold --progress-dir=/Users/axel/build/root/cmake/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) ""Generating G__Imt.cxx, ../../lib/libImt.rootmap"". With this change, G__Imt.cxx has only one target:; $ grep -r ""Generating G__Imt"" core/imt; core/imt/CMakeFiles/G__Imt.dir/build.make:@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --blue --bold --progress-dir=/Users/axel/build/root/cmake/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) ""Generating G__Imt.cxx, ../../lib/libImt.rootmap"". This fixes sporadic build problems due to two targets creating the same output file concurrently:; [ 73%] Generating G__Imt.cxx, ../../lib/libImt.rootmap; Scanning dependencies of target G__Imt; [ 73%] Generating G__Imt.cxx, ../../lib/libImt.rootmap; [ 73%] Building CXX object core/imt/CMakeFiles/Imt.dir/G__Imt.cxx.o; g++: error: /mnt/build/workspace/lcg_release_tar/BUILDTYPE/Debug/COMPILER/native/LABEL/ubuntu16/build/projects/ROOT-6.16.00/src/ROOT-6.16.00-build/core/imt/G__Imt.cxx: No such file or directory; g++: fatal error: no input files; compilation terminated.; core/imt/CMakeFiles/Imt.dir/build.make:106: recipe for target 'core/imt/CMakeFiles/Imt.dir/G__Imt.cxx.o' failed; make[5]: *** [core/imt/CMakeFiles/Imt.dir/G__Imt.cxx.o] Error 1; [ 73%] Built target G__Imt; make[5]: Target 'core/imt/CMakeFiles/Imt.dir/build' not remade because of errors.; CMakeFiles/Makefile2:18311: recipe for target 'core/imt/CMakeFiles/Imt.dir/all' failed; make[4]: *** [core/imt/CMakeFiles/Imt.dir/all] Error 2. (cherry picked from commit a3e7a3c535b80c3a6cf0883a0bf8de66eca7d93f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3636:1247,depend,dependencies,1247,https://root.cern,https://github.com/root-project/root/pull/3636,1,['depend'],['dependencies']
Integrability,"ons are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```; Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V ; UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Add coverage exclude regular expressions.; SetCTestConfiguration:CMakeCommand:/usr/bin/cmake; UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Test project /scratchnvme/bendavid/rootdev2/build; Constructing a list of tests; Ignore test: roottest-cling-parsing-semicolon; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 76; Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake""; 76: Environment variables: ; 76: ROOT_HIST=0; 76: Test timeout computed to be: 1500; 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc; 76: [==========] Running 104 tests from 3 test suites.; 76: [----------] Global test environment set-up.; 76: [----------] 6 tests from InterpreterLock; 76: [ RUN ] InterpreterLock.ConcurrentCalc; 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms); 76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-741456188:1274,depend,dependency,1274,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-741456188,1,['depend'],['dependency']
Integrability,onsole output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/128607/console).; ### Errors:; - [2021-10-29T11:02:00.746Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - [2021-10-29T11:02:00.746Z] CMake Error at VC-stamp/VC-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:00.746Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - [2021-10-29T11:02:00.746Z] CMake Error at VDT-stamp/VDT-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:04.031Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download ; - [2021-10-29T11:02:04.031Z] CMake Error at VECCORE-stamp/VECCORE-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:04.031Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - [2021-10-29T11:02:04.031Z] CMake Error at TBB-stamp/TBB-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:25.960Z] FAILED: cd /mnt/build/workspace/root-pullreque,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-954652370:1116,message,message,1116,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-954652370,1,['message'],['message']
Integrability,"onst volatile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76); ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760); ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350); ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680); ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665); ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102); ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383); ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465); ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153); ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76); ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483); ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177); ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147); ==92602== by 0x100011BF: main (rmain.cxx:80); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36); ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47); ==92602== by 0x5FE37F3: TD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:5209,depend,depends,5209,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,"ooRealVar x(""x"",""x"",0,50);; RooGenericPdf func(""func"",""Test Function"",""x"",x);. RooPlot* xframe = x.frame();. func.plotOn(xframe, RooFit::Name(""funcCurve""));. RooCurve* funcCurve = xframe->getCurve(""funcCurve"");; Double_t xFirst, xLast;; std::cout << ""\ni, f(i), f(i+0.1), avg[i,i+0.1]\n"" << std::endl;. for (Double_t i = 10; i < 11; i += 0.1); {; Double_t avg = funcCurve->average(i,i+0.1);; xFirst = funcCurve->interpolate(i, 1e-10);; xLast = funcCurve->interpolate(i+0.1, 1e-10);; std::cout << i << "", "" << xFirst << "", "" << xLast << "", "" << avg << std::endl;; }; }; ```; Run with `root -l ExampleMacro.C`. Output, marking the higher than expected averages with `<--`:; ```; root [0] ; Processing ExampleMacro.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:NumericIntegration -- RooRealIntegral::init(func_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x). i, f(i), f(i+0.1), avg[i,i+0.1]. 10, 0.004, 0.00404, 0.00402; 10.1, 0.00404, 0.00408, 0.02456 <--; 10.2, 0.00408, 0.00412, 0.0041; 10.3, 0.00412, 0.00416, 0.02464 <--; 10.4, 0.00416, 0.0042, 0.00418; 10.5, 0.0042, 0.00424, 0.00422; 10.6, 0.00424, 0.00428, 0.02576 <--; 10.7, 0.00428, 0.00432, 0.0043; 10.8, 0.00432, 0.00436, 0.02584 <--; 10.9, 0.00436, 0.0044, 0.00438; 11, 0.0044, 0.00444, 0.00442; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.24/06; Built for linuxx8664gcc; From tags/v6-24-06@v6-24-06; Installed manually within WSL Ubuntu 20.04. ### Additional context; <!--; Add any other context about the problem here.; -->; I first encountered this behaviour when calculating the chi^2 between a fitted RooCurve and data, where the data had bin sizes of 0.1, and the RooCurve was taking steps of 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9838:2423,integrat,integrator,2423,https://root.cern,https://github.com/root-project/root/issues/9838,1,['integrat'],['integrator']
Integrability,"oofit/roofitcore/src/RooAddPdf.cxx#L825-L840; where Clang now optimizes the inlined `RooArgList::at`:; https://github.com/root-project/root/blob/e8ba1328693f89af8299904ce3db7bdc8f57c535/roofit/roofitcore/inc/RooArgList.h#L109-L116; and removes the `return nullptr` in case of range errors. The reasoning is that `RooAddPdf::checkObservables` calls a member function on `pdf`, so it being `nullptr` is UB and can be optimized out, and dereferences `coef`, which is also UB on a `nullptr` (although it works because `RooAbsArg::observableOverlaps` takes a reference, ie no pointer dereference actually takes place). If I remove the `return nullptr` statically in the code like; ```diff; diff --git a/roofit/roofitcore/inc/RooArgList.h b/roofit/roofitcore/inc/RooArgList.h; index c5a49bd1b6..bb4afbd12d 100644; --- a/roofit/roofitcore/inc/RooArgList.h; +++ b/roofit/roofitcore/inc/RooArgList.h; @@ -109,9 +109,6 @@ public:; /// Return object at given index, or nullptr if index is out of range; inline RooAbsArg* at(Int_t idx) const {. - if (idx >= static_cast<Int_t>(_list.size())); - return nullptr;; -; return _list[idx];; }. ```; I see the same crash happening with GCC. What I see with a debugger is that `_pdfList` has size 2 while `_coefList` has size 1, so the second iteration of the loop passes `nullptr` for `coef`. This is ""filtered out"" later in `RooAbsArg::dependsOn` where `ignoreArg` is also `nullptr` and things magically work. So, @guitargeek, there are a number of possibilities:; 1. Modify the loop to only run until `std::min(_pdfList.size(), _coefList.size()`.; 2. Add explicit `nullptr` checks for `pdf` and `coef` before calling `observableOverlaps` so the compiler cannot optimize them out.; 3. Make `observableOverlaps` take a pointer that can be `nullptr` and deal with it later on. However, is it actually valid that there are fewer coefficients than pdfs? As far as I understand `RooAddPdf` as a sum of pdfs, that sounds wrong and points to some other code having a problem!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547#issuecomment-1011927535:1658,depend,dependsOn,1658,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011927535,1,['depend'],['dependsOn']
Integrability,"ools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:4076,message,message,4076,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"ools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:10149,message,message,10149,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,oot-6.26.04/core/gui/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/meta/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/clib/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/rint/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/zip/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/thread/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/textinput/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/clingutils/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/base/v7/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/foundation/v7/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/unix/inc -I/usr/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1192995322:4534,Message,MessageTypes,4534,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1192995322,2,['Message'],['MessageTypes']
Integrability,"oot-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:; https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280; (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr); -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814; But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1456059333:1730,wrap,wraps,1730,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1456059333,1,['wrap'],['wraps']
Integrability,oot-pullrequests-build/11410/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.typedef.roottest_cling_typedef_assertTypedefIter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11410/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11410/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11410/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11410/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11410/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11410/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11410/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11410/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 45 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1314#issuecomment-343704517:3468,interface,interface,3468,https://root.cern,https://github.com/root-project/root/pull/1314#issuecomment-343704517,2,['interface'],['interface']
Integrability,oot-pullrequests-build/11551/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.typedef.roottest_cling_typedef_assertTypedefIter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11551/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11551/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11551/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11551/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11551/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11551/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11551/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11551/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 40 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1318#issuecomment-344197846:3463,interface,interface,3463,https://root.cern,https://github.com/root-project/root/pull/1318#issuecomment-344197846,2,['interface'],['interface']
Integrability,oot-pullrequests-build/11552/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.typedef.roottest_cling_typedef_assertTypedefIter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11552/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11552/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11552/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11552/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11552/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11552/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11552/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11552/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 40 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1318#issuecomment-344197106:3453,interface,interface,3453,https://root.cern,https://github.com/root-project/root/pull/1318#issuecomment-344197106,2,['interface'],['interface']
Integrability,oot-pullrequests-build/11623/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.typedef.roottest_cling_typedef_assertTypedefIter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11623/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11623/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11623/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11623/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11623/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11623/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11623/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11623/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 40 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1322#issuecomment-344233628:3468,interface,interface,3468,https://root.cern,https://github.com/root-project/root/pull/1322#issuecomment-344233628,2,['interface'],['interface']
Integrability,oot-pullrequests-build/11624/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.typedef.roottest_cling_typedef_assertTypedefIter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11624/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11624/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11624/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11624/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11624/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11624/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11624/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11624/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 40 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1322#issuecomment-344230495:3468,interface,interface,3468,https://root.cern,https://github.com/root-project/root/pull/1322#issuecomment-344230495,2,['interface'],['interface']
Integrability,"oot/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/gpad/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -std=c++11 -MD -MT tree/dataframe/test/CMakeFiles/dataframe_snapshot.dir/dataframe_snapshot.cxx.o -MF tree/dataframe/test/CMakeFiles/dataframe_snapshot.dir/dataframe_snapshot.cxx.o.d -o tree/dataframe/test/CMakeFiles/dataframe_snapshot.dir/dataframe_snapshot.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_snapshot.cxx ; - /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_snapshot.cxx:218:65: error: ‘kZSTD’ is not a member of ‘ROOT’ ; - /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_snapshot.cxx:218:76: error: unable to deduce ‘std::initializer_list&lt;_Tp&gt;&&’ from ‘{kZLIB, kLZMA, kLZ4, &lt;expression error&gt;}’ ; - /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_snapshot.cxx:234:181: error: template argument 1 is invalid . ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/zstd/src/ZipZSTD.cxx:85:68: warning: integer constant is so large that it is unsigned",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3947#issuecomment-526708986:2445,message,message,2445,https://root.cern,https://github.com/root-project/root/pull/3947#issuecomment-526708986,1,['message'],['message']
Integrability,"oot_src/core/meta/inc/TClass.h:502; 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373; 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124; 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341; 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95; 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96; 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66; 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645; 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686; 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378; 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s); in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53; 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241; 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205; 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502; 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373; 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116; 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObje",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:17103,depend,depends,17103,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['depend'],['depends']
Integrability,"or C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\ChainedIncludesSource.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2024-01-30T20:03:47.678Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory(913,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\PrecompiledPreamble.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2024-01-30T20:03:47.678Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/Stmt.h(3397,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\DependencyFile.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2024-01-30T20:03:47.678Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xpolymorphic_allocator.h(28,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\ModuleDependencyCollector.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2024-01-30T20:03:47.678Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/RecursiveASTVisitor.h(2719,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14398#issuecomment-1917805867:3314,Depend,DependencyFile,3314,https://root.cern,https://github.com/root-project/root/pull/14398#issuecomment-1917805867,1,['Depend'],['DependencyFile']
Integrability,or in &lt;TClingCallbacks::InclusionDirective&gt;: Module TUrl.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBufferFile.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module MessageTypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBits.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSysEvtHandler.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TApplication.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSysEvtHandler.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TUrl.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSystem.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module MessageTypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TNamed.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TMap.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TN,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:5000,Message,MessageTypes,5000,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Message'],['MessageTypes']
Integrability,or in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initializat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:2920,rout,routine,2920,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,10,['rout'],['routine']
Integrability,"or in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experime",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:4760,rout,routine,4760,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,1,['rout'],['routine']
Integrability,"or in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 0 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:4944,rout,routine,4944,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,1,['rout'],['routine']
Integrability,"or in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 0 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> > for parent ROOT::Experimental::RFileDialog!; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<ROOT::Experimenta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:5128,rout,routine,5128,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,1,['rout'],['routine']
Integrability,"or in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 0 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> > for parent ROOT::Experimental::RFileDialog!; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 1 of class tuple<ROOT::Experimental::RBro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:5312,rout,routine,5312,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,1,['rout'],['routine']
Integrability,"or in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 0 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> > for parent ROOT::Experimental::RFileDialog!; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 1 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> > for parent ROOT::Experimental::RFileDialog!; ```. I guess the new errors come from the fact I am not generati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:5496,rout,routine,5496,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,1,['rout'],['routine']
Integrability,"order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06; Integrating Polynomial 4th order, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06; 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02; 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03; [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig; Integrating Breit-Wigner distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05; 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02; 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25; Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001; Integrating Breit-Wigner distribution, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18; 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18; 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16; Integrating Breit-Wigner distribution, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3; 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25; 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2; [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf; Integrating Gaussian distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04; 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:2724,integrat,integrator,2724,https://root.cern,https://github.com/root-project/root/pull/6632,1,['integrat'],['integrator']
Integrability,"ore sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review!. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596:3653,depend,dependency,3653,https://root.cern,https://github.com/root-project/root/pull/8596,1,['depend'],['dependency']
Integrability,orkspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -writeEmptyRootPCM Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFunc.h Math/PdfFuncMathCore.h Math/ProbFunc.h Math/ProbFuncMathCore.h Math/QuantFunc.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - FAILED: cd /mnt/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4346#issuecomment-528976735:3435,Integrat,Integrator,3435,https://root.cern,https://github.com/root-project/root/pull/4346#issuecomment-528976735,5,['Integrat'],['Integrator']
Integrability,"orkspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] . And 2 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-541874616:1831,depend,depend,1831,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-541874616,4,['depend'],['depend']
Integrability,"orkspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] . And 2 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-543261278:1831,depend,depend,1831,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-543261278,4,['depend'],['depend']
Integrability,"orming Test C_FLAG_WUNDEF - Success; -- Performing Test CXX_FLAG_WUNDEF; -- Performing Test CXX_FLAG_WUNDEF - Success; -- Performing Test C_FLAG_WSHADOW; -- Performing Test C_FLAG_WSHADOW - Success; -- Performing Test CXX_FLAG_WSHADOW; -- Performing Test CXX_FLAG_WSHADOW - Success; -- Performing Test C_FLAG_WCAST_ALIGN; -- Performing Test C_FLAG_WCAST_ALIGN - Success; -- Performing Test CXX_FLAG_WCAST_ALIGN; -- Performing Test CXX_FLAG_WCAST_ALIGN - Success; -- Performing Test C_FLAG_WCAST_QUAL; -- Performing Test C_FLAG_WCAST_QUAL - Success; -- Performing Test CXX_FLAG_WCAST_QUAL; -- Performing Test CXX_FLAG_WCAST_QUAL - Success; -- Performing Test C_FLAG_WSTRICT_PROTOTYPES; -- Performing Test C_FLAG_WSTRICT_PROTOTYPES - Success; -- Building AfterImage library included in ROOT itself; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4 (setting -DROOTXRDVERS=500050004); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- libXrdClient not found: use built-in; -- include_dirs: /home/ubuntu/temp/install/include/xrootd;/home/ubuntu/git/root/proof/xrdinc; -- libraries: /home/ubuntu/temp/install/lib/libXrdUtils.so;/home/ubuntu/temp/install/lib/libXrdCl.so; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Building LLVM in 'Release' mode.; -- The ASM compiler identification is GNU; -- Found assembler: /usr/bin/cc; -- Found LibXml2: /usr/lib/x86_64-linux-gnu/libxml2.so (found version ""2.9.10""); -- Looking for backtrace; -- Looking for backtrace - found; -- backtrace facility detected in default set of libraries; -- Found Backtrace: /usr/include; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- Found Python module pygments; -- Found Python module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host tripl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631#issuecomment-1504751163:4138,wrap,wrapper,4138,https://root.cern,https://github.com/root-project/root/issues/12631#issuecomment-1504751163,1,['wrap'],['wrapper']
Integrability,"ot updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:; `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element; Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray; Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element; Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57; Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628; Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element; Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57; Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(); Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57; Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57; Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(); Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior; E",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10382:475,message,messages,475,https://root.cern,https://github.com/root-project/root/issues/10382,1,['message'],['messages']
Integrability,ot-pullrequests-build/71794/testReport/projectroot.roottest.root.io/arrayobject/roottest_root_io_arrayobject_make/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71794/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71794/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/); - [projectroot.roottest.root.io.alloc.roottest_root_io_alloc_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71794/testReport/projectroot.roottest.root.io/alloc/roottest_root_io_alloc_make/); - [projectroot.roottest.root.io.customCollection.roottest_root_io_customCollection_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71794/testReport/projectroot.roottest.root.io/customCollection/roottest_root_io_customCollection_make/); - [projectroot.roottest.root.io.directory.roottest_root_io_directory_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71794/testReport/projectroot.roottest.root.io/directory/roottest_root_io_directory_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71794/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.io.float16.roottest_root_io_float16_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71794/testReport/projectroot.roottest.root.io/float16/roottest_root_io_float16_make/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71794/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/). And 40 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5154#issuecomment-599545996:1832,interface,interface,1832,https://root.cern,https://github.com/root-project/root/pull/5154#issuecomment-599545996,2,['interface'],['interface']
Integrability,"ot-pullrequests-build/build/lib/libCling.6.25.01.so] cling::Interpreter::process(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (no debug info); [/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libCling.6.25.01.so] cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) (no debug info); [/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libCling.6.25.01.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info); [/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libCling.6.25.01.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info); [/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.6.25.01.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info); [/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libRint.6.25.01.so] TRint::ProcessLineNr(char const*, char const*, int*) (no debug info); [/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libRint.6.25.01.so] TRint::Run(bool) (no debug info); [/Users/sftnight/build/workspace/root-pullrequests-build/build/bin/root.exe] main (no debug info); [/usr/lib/system/libdyld.dylib] start (no debug info). -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; --- Using ROOT from /Users/sftnight/build/workspace/root-pullrequests-build/build; make: *** [iobug.log] Error 129. -- END TEST ERROR --; CMake Error at /Users/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:191 (message):; got exit code 2 but expected 0; ```; So, since I don't understand, given the error message, where the error could come from, I tried to reproduce the error on the build node, but failed to do so. Then, after re-starting the build on that node it works. So feel free to approve it or not, especially that I'll be away until next Tuesday afternoon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8013#issuecomment-828444669:6774,message,message,6774,https://root.cern,https://github.com/root-project/root/pull/8013#issuecomment-828444669,2,['message'],['message']
Integrability,"ot-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -Itree/dataframe/test -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/gpad/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc -I/mnt/build/workspace/root-pullrequests-build/root/test/unit_testing_support -isystem googletest-prefix/src/googletest/googletest/include -isystem googletest-prefix/src/googletest/googlemock/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -std=c++11 -MD -MT tree/dataframe/test/CMakeFiles/dataframe_cache.dir/dataframe_cache.cxx.o -MF tree/dataframe/test/CMakeFiles/dataframe_cache.dir/dataframe_cache.cxx.o.d -o tree/dataframe/test/CMakeFiles/dataframe_cache.dir/dataframe_cache.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_cache.cxx ; - [2021-05-04T14:51:52.248Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RTreeColumnReader.hxx:100:42: error: dependent-name ‘ROOT::VecOps::RVec&lt;T&gt;::pointer’ is parsed as a non-type, but instantiation yields a type",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-832003505:6254,depend,dependent-name,6254,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-832003505,1,['depend'],['dependent-name']
Integrability,"ot-pullrequests-build/root/tree/dataframe -Ibuiltins/davix/DAVIX-prefix/include/davix -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/gpad/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/davix/inc -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RActionBase.cxx.o -MF tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RActionBase.cxx.o.d -o tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RActionBase.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RActionBase.cxx ; - /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-543260812:1975,depend,depend,1975,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-543260812,2,['depend'],['depend']
Integrability,"ot.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed.; ```. ### Backtrace; ```; #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6; #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6; #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6; #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113; #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153; #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211; #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870; #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847; #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923; #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832; #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830; #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,; prototype=<optimized out>, auxProto=0x0, verbose=false); at /h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547:1193,depend,dependsOn,1193,https://root.cern,https://github.com/root-project/root/issues/9547,1,['depend'],['dependsOn']
Integrability,"ot/tree/dataframe -Ibuiltins/davix/DAVIX-prefix/include/davix -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/gpad/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/davix/inc -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RCustomColumnBase.cxx.o -MF tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RCustomColumnBase.cxx.o.d -o tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RCustomColumnBase.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RCustomColumnBase.cxx ; - /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-541875642:4167,depend,depend,4167,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-541875642,2,['depend'],['depend']
Integrability,"otDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:56:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:74:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:137:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: R[ 97%] Linking CXX executable datasource_root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621886081:1917,interface,interfaces,1917,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621886081,2,['interface'],['interfaces']
Integrability,ottest/scripts/roottest_scripts_utils/); - [projectroot.test.test_periodic_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/26462/testReport/projectroot/test/test_periodic_build/); - [projectroot.roottest.root.io.alloc.roottest_root_io_alloc_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/26462/testReport/projectroot.roottest.root.io/alloc/roottest_root_io_alloc_make/); - [projectroot.roottest.root.io.arrayobject.roottest_root_io_arrayobject_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/26462/testReport/projectroot.roottest.root.io/arrayobject/roottest_root_io_arrayobject_make/); - [projectroot.roottest.root.io.directory.roottest_root_io_directory_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/26462/testReport/projectroot.roottest.root.io/directory/roottest_root_io_directory_make/); - [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/26462/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/); - [projectroot.roottest.root.io.customCollection.roottest_root_io_customCollection_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/26462/testReport/projectroot.roottest.root.io/customCollection/roottest_root_io_customCollection_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/26462/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.io.multizip.roottest_root_io_multizip_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/26462/testReport/projectroot.roottest.root.io/multizip/roottest_root_io_multizip_make/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/26462/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/). And 39 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2034#issuecomment-389937603:1882,interface,interface,1882,https://root.cern,https://github.com/root-project/root/pull/2034#issuecomment-389937603,2,['interface'],['interface']
Integrability,"ou are probably missing the definition of vtable for ROOT::Experimental::RDrawable; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RPadBase; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&); Maybe you need to load the corresponding shared library?; ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:5275,interface,interface,5275,https://root.cern,https://github.com/root-project/root/issues/14587,3,['interface'],['interface']
Integrability,"ou can then adapt RooFitZMQ to that in a new pull request.; ; > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way.; ; > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right?. That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang.; ; > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870570029:2144,depend,dependency,2144,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870570029,4,['depend'],"['dependency', 'depends']"
Integrability,"ount.size()' failed.; ```. ### Backtrace; ```; #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6; #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6; #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6; #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113; #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153; #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211; #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870; #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847; #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923; #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832; #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830; #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,; prototype=<optimized out>, auxProto=0x0, verbose=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63; #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,; auxP",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547:1397,depend,dependsOn,1397,https://root.cern,https://github.com/root-project/root/issues/9547,1,['depend'],['dependsOn']
Integrability,"our message seems to suggest that it's only with GCC11 headers); > ; > * the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`; > ; > ; > In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?); > ; > But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me). This issue exists on gcc11 and gcc12 (and I guess any gcc that made changes to libstdc++ and the experimental/string_view header file). I am not sure if pasting a diagnostic from a random system makes this clearer in any form. I agree with you this should have be 1 min review fixing an important failure that we introduced with the c++20 support and some of the new releases of maybe libstdc++. @pcanal I find pasting errors in the logs a bad practice, especially when it obfuscates the real fix. Can you suggest a commit message which adds enough information which makes me happy as well?. In general it is a bit unfortunate how the whole review went for this PR. This should been just a simple ""approve"" as I thought we needed a quick fix which I developed in between travels and a business trip... I suspect this would help me define urgent/important in similar circumstances in future...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1430019305:2424,message,message,2424,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1430019305,2,['message'],['message']
Integrability,"ource argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-405050428:1296,depend,depends,1296,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-405050428,2,['depend'],['depends']
Integrability,"out of threads, see #16552 ):; ```; 47:PyMVA-Keras-Classification; 348:PyMVA-Keras-Regression; 349:PyMVA-Keras-Multiclass; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 985:tutorial-tmva-TMVA_SOFIE_Keras; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py; 1246:tutorial-tmva-TMVA_SOFIE_Models-py; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553:1397,interface,interface,1397,https://root.cern,https://github.com/root-project/root/issues/16553,2,['interface'],['interface']
Integrability,"ow what I`m doing with C. A colleague; gave me; g++ $(root-config --cflags --libs) -o main main.C; which I`m doing after the asetup of the same release. Does ldd answer the; question?. $ ldd main.mars | grep -i root; libROOTVecOps.so => /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libROOTVecOps.so; (0x00007f8b07f3d000); libROOTDataFrame.so => /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libROOTDataFrame.so; (0x00007f8b062af000); libROOTNTuple.so => /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libROOTNTuple.so; (0x00007f8b04041000). I don`t think the LD_PRELOAD has any xroot stuff - it is at a lower level; to get network ops (hton or whatever). The code is from. wget http://pandaserver.cern.ch:25085/trf/user/runGen-00-00-02; chmod u+x runGen-00-00-02; ./runGen-00-00-02; less pandawnutil/tracer/wrapper.c. Cheers,; Rod. $ ldd main.mars; linux-vdso.so.1 => (0x00007fff34109000); libCore.so => /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so; (0x00007f09e6284000); libImt.so => /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libImt.so; (0x00007f09e6077000); libRIO.so => /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libRIO.so; (0x00007f09e5adb000); libNet.so => /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libNet.so; (0x00007f09e57fc000); libHist.so => /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libHist.so; (0x00007f09e5210000); libGraf.so => /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746475965:1052,wrap,wrapper,1052,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746475965,1,['wrap'],['wrapper']
Integrability,"owing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`.; See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:; - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file.; - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use.; ```; +-------------------------+-------------------------------+; | Redeclaration kind | Time (us) for 1000000 lookups |; +-------------------------+-------------------------------+; | ForVisibleRedeclaration | 27617 |; | NotForRedeclaration | 717458 |; +-------------------------+-------------------------------+; ```. ## Checklist:; - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9788:1254,wrap,wrapper,1254,https://root.cern,https://github.com/root-project/root/pull/9788,1,['wrap'],['wrapper']
Integrability,"ping @smuzaffar, can you integrate this PR with cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11076#issuecomment-1221520451:25,integrat,integrate,25,https://root.cern,https://github.com/root-project/root/pull/11076#issuecomment-1221520451,1,['integrat'],['integrate']
Integrability,"place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:. * A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; * A TTreeReader-like interface, TTreeReaderFast. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize and apply user code, rather than two.; * The intent is that this interface can be extended in the future and used by TDataFrame, provided we can make TDataFrame sufficiently fast.; * A Python-based numpy export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; * The numpy interface is low-level for Python; we intend to further explore the ideal high-level interface through projects such as https://github.com/diana-hep/plur. (With many thanks to @jpivarski for driving this work home with his work on a python interface!)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519:1558,interface,interface,1558,https://root.cern,https://github.com/root-project/root/pull/2519,7,['interface'],['interface']
Integrability,"pp/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -I/Users/suter_a/Applications/root/root_exec/include -I/opt/local/include -I/Users/suter_a/Applications/musrfit/src/include -I/Users/suter_a/Applications/musrfit/src/classes PUserFcnBase.h /Users/suter_a/Applications/musrfit/src/include/PUserFcnBaseLinkDef.h; cd /Users/suter_a/Applications/musrfit/build && /opt/local/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/suter_a/Applications/musrfit /Users/suter_a/Applications/musrfit/src/classes /Users/suter_a/Applications/musrfit/build /Users/suter_a/Applications/musrfit/build/src/classes /Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake --color=; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/CMakeDirectoryInformation.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Scanning dependencies of target PUserFcnBase; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/classes/CMakeFiles/PUserFcnBase.dir/build.make src/classes/CMakeFiles/PUserFcnBase.dir/build; ... And all the further root_generate_dictionary work as well. Does this help?. Cheers,; Andreas. PS: Machine I have tested it on: ; Darwin Kernel Version 21.3.0: Wed Jan 5 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_ARM64_T8101 arm64. ________________________________. Paul Scherrer Institut. Dr. Andreas Suter; Laboratory for Muon-Spin Spectroscopy; Swiss Muon Source SµS; WLGA/119; Forschungsstrasse 111; CH - 5232 Villigen PSI; Switzerland. Tel.: +41 (0)56 310 4238; __________",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1061481610:4404,depend,depender,4404,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1061481610,1,['depend'],['depender']
Integrability,"ppCallable([""float""], ""string"", verbose=True); # 2) Falls back to generic impl and prints ""42"" (as string); ```. **DEPRECATED:**. I've cleaned up and improved the feature. Here's the basic workflow now:. ```python; @ROOT.DeclareCallable([""float""], ""float""); def f(x); return 2.0 * x. # General use-cases; ROOT.ROOT.f(21) # Returns 42; ROOT.gInterpreter.ProcessLine(""cout << ROOT::f(21.0) << endl;"") # Prints 42.0. # Inject callable into dataframe; df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""rdfentry__"").Define(""ROOT::f(x)""); ```. The `DeclareCallable` dispatches between numba and the generic implementation. It tries to compile the thingy with numba (falls through silently) and otherwise tries the generic implementation (fails noisily).; However, you can force using the generic implementation or numba by using the decorators `DeclareGenericCallable` and `DeclareNumbaCallable`. The interface is exactly the same than for the general `DeclareCallable` decorator. In addition, you can now give the wrapped function a custom name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strongly typed, we have to declare the types of the inputs and the output; @ROOT.DeclareCppCallable([""float""], ""float""); def func(x):; return 2.0 * x. print(func(1.0)) # Prints 2.0; print(ROOT.PyROOT.func(1.0)) # Prints 2.0; ROOT.gInterpreter.ProcessLine(""cout << PyROOT::func(1.0) << endl;"") # Prints 2.0; ```. This allows us to run Python code in wrapped C++ workflow, e.g. for `RDataFrame`:. ```python; import ROOT; import numpy. @ROOT.DeclareCppCallable([""unsigned int""], ""float""); def func(x):; return numpy.power(x, 2). df = ROOT.RDataFrame(4).Define(""x"", ""rdfentry",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:2328,wrap,wrapped,2328,https://root.cern,https://github.com/root-project/root/pull/3488,1,['wrap'],['wrapped']
Integrability,"pp` into a header, all the classes become part of the corresponding module. So if headers from different modules include the header, like; ```diff; diff --git a/graf3d/eve/inc/TEveCalo.h b/graf3d/eve/inc/TEveCalo.h; index 9be7925a6b..3ca258105f 100644; --- a/graf3d/eve/inc/TEveCalo.h; +++ b/graf3d/eve/inc/TEveCalo.h; @@ -21,6 +21,8 @@; #include ""TEveCaloData.h""; #include <vector>; ; +#include <nlohmann/json.hpp>; +; class TClass;; class TEveRGBAPalette;; ; diff --git a/graf3d/eve7/inc/ROOT/REveElement.hxx b/graf3d/eve7/inc/ROOT/REveElement.hxx; index 2a127888a2..fb237fdfb6 100644; --- a/graf3d/eve7/inc/ROOT/REveElement.hxx; +++ b/graf3d/eve7/inc/ROOT/REveElement.hxx; @@ -16,26 +16,13 @@; #include <ROOT/REveVector.hxx>; #include <ROOT/REveProjectionBases.hxx>; ; +#include <nlohmann/json.hpp>; +; #include <map>; #include <memory>; ; class TGeoMatrix;; ; -namespace nlohmann {; -template<typename T, typename SFINAE>; -struct adl_serializer;; -; -template <template <typename U, typename V, typename... Args> class ObjectType,; - template <typename U, typename... Args> class ArrayType, class StringType, class BooleanType,; - class NumberIntegerType, class NumberUnsignedType, class NumberFloatType,; - template <typename U> class AllocatorType, template <typename T, typename SFINAE = void> class JSONSerializer,; - class BinaryType>; -class basic_json;; -; -using json = basic_json<std::map, std::vector, std::string, bool, std::int64_t, std::uint64_t, double, std::allocator,; - adl_serializer, std::vector<std::uint8_t>>;; -} // namespace nlohmann; -; namespace ROOT {; namespace Experimental {; ; ```; we get errors because the symbols are provided by two modules. The only way out would be to have a decoupled json module, but that is bad for other reasons. > Without llvm13 one cannot directly include `nlohmann/json.hpp` in header file. Not sure what's supposed to change with llvm13, but the diff I posted above fails with identical error message. And in my opinion, rightfully so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1216633037:2050,message,message,2050,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1216633037,1,['message'],['message']
Integrability,preter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146676/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146676/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146676/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146676/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146676/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146676/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146676/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146676/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/). And 1 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145226961:1666,interface,interface,1666,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145226961,2,['interface'],['interface']
Integrability,"preter/llvm/src/include/llvm/Support/Compiler.h:557:62: warning: unused parameter ‘Alignment’ [-Wunused-parameter] ; - [2020-09-26T21:56:10.523Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:42:7: warning: declaration of ‘end_iterator’ shadows a member of ‘llvm::iterator_range&lt;IteratorT&gt;’ [-Wshadow] ; - [2020-09-26T21:56:10.524Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:42:7: warning: declaration of ‘begin_iterator’ shadows a member of ‘llvm::iterator_range&lt;IteratorT&gt;’ [-Wshadow] ; - [2020-09-26T21:56:10.524Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:95:7: warning: declaration of ‘Size’ shadows a member of ‘llvm::SmallVectorTemplateCommon&lt;T, &lt;template-parameter-1-2&gt; &gt;’ [-Wshadow] ; - [2020-09-26T21:56:10.524Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator.h:88:32: warning: declaration of ‘I’ shadows a member of ‘llvm::iterator_facade_base&lt;DerivedT, IteratorCategoryT, T, DifferenceTypeT, PointerT, ReferenceT&gt;::ReferenceProxy’ [-Wshadow] ; - [2020-09-26T21:56:10.524Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator.h:354:7: warning: declaration of ‘DR’ shadows a member of ‘llvm::WrappedPairNodeDataIterator&lt;ItType, NodeRef, DataRef&gt;’ [-Wshadow] ; - [2020-09-26T21:56:10.524Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:138:7: warning: declaration of ‘callable’ shadows a member of ‘llvm::function_ref&lt;Ret(Params ...)&gt;’ [-Wshadow] ; - [2020-09-26T21:56:10.524Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:226:5: warning: declaration of ‘F’ shadows a member of ‘llvm::mapped_iterator&lt;ItTy, FuncTy, FuncReturnTy&gt;’ [-Wshadow] . And 69991 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699553531:7598,Wrap,WrappedPairNodeDataIterator,7598,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699553531,1,['Wrap'],['WrappedPairNodeDataIterator']
Integrability,"produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context; Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8952:2503,message,messages,2503,https://root.cern,https://github.com/root-project/root/issues/8952,1,['message'],['messages']
Integrability,"proj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:5492,message,message,5492,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"pt/lib/libXrdUtils.so.2.0.0); ==2505== by 0x3FCEE754: XrdCl::Socket::ConnectToAddress(XrdNetAddr const&, unsigned short) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD59467: XrdCl::AsyncSocketHandler::Connect(long) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FCF7B48: XrdCl::Stream::EnableLink(XrdCl::PathID&) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FCF7DEC: XrdCl::Stream::Send(XrdCl::Message*, XrdCl::OutgoingMsgHandler*, bool, long) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD202FC: XrdCl::MessageUtils::SendMessage(XrdCl::URL const&, XrdCl::Message*, XrdCl::ResponseHandler*, XrdCl::MessageSendParams const&, XrdCl::LocalFileHandler*) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD2AC91: XrdCl::FileStateHandler::IssueRequest(XrdCl::URL const&, XrdCl::Message*, XrdCl::ResponseHandler*, XrdCl::MessageSendParams&) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD2E324: XrdCl::FileStateHandler::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned short, unsigned short, XrdCl::ResponseHandler*, unsigned short) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD27325: XrdCl::File::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, XrdCl::Op",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759513859:1418,Message,MessageUtils,1418,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759513859,3,['Message'],"['Message', 'MessageSendParams', 'MessageUtils']"
Integrability,pullrequests-build/105431/console).; ### Errors:; - [2021-01-25T16:12:27.965Z] FAILED: cint/cint/CMakeFiles/Cint.dir/src/loadfile.cxx.o ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:23:3: error: invalid preprocessing directive #R__HAS_MATHMORE ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:26:3: error: invalid preprocessing directive #R__HAS_CLING ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:27:3: error: invalid preprocessing directive #R__HAS_COCOA ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:28:3: error: invalid preprocessing directive #R__HAS_VC ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:31:3: error: invalid preprocessing directive #R__USE_LIBCXX ; - [2021-01-25T16:14:03.950Z] FAILED: DAVIX-prefix/src/DAVIX-stamp/DAVIX-download ; - [2021-01-25T16:14:03.950Z] CMake Error at DAVIX-stamp/DAVIX-download-Release.cmake:49 (message): . ### Warnings:; - [2021-01-25T16:12:20.995Z] CMake Warning at math/vc/cmake/OptimizeForArchitecture.cmake:112 (message): ; - [2021-01-25T16:12:29.028Z] cc1plus: warning: ‘-Wabi’ won’t warn about anything [-Wabi] ; - [2021-01-25T16:12:29.028Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:73:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256’ {aka ‘__vector(8) float’} [-Wignored-attributes] ; - [2021-01-25T16:12:29.028Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:74:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256i’ {aka ‘__vector(4) long long int’} [-Wignored-attributes] ; - [2021-01-25T16:12:29.028Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:75:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256d’ {aka ‘__vector(4) double’} [-Wignored-attributes] ; - [2021-01-25T16:12:29.028Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:76:42: warning: ignoring att,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7089#issuecomment-766928504:1192,message,message,1192,https://root.cern,https://github.com/root-project/root/pull/7089#issuecomment-766928504,1,['message'],['message']
Integrability,pullrequests-build/root/roofit/roofit/inc -Iinclude -I/mnt/build/workspace/root-pullrequests-build/root/roofit/roofit -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/minuit/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/foam/inc -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT roofit/roofit/CMakeFiles/RooFit.dir/src/RooArgusBG.cxx.o -MF roofit/roofit/CMakeFiles/RooFit.dir/src/RooArgusBG.cxx.o.d -o roofit/roofit/CMakeFiles/RooFit.dir/src/RooArgusBG.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooArgusBG.cxx ; - /mnt/build/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:87:22: error: enclosing class of constexpr non-static member function ‘double BatchHelpers::BracketAdapterWithMask::operator[](std::size_t) const’ is not a literal type ; - /mnt/build/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:91:20: error: enclosing class of constexpr non-static member function ‘bool BatchHelpers::BracketAdapterWithMask::isBatch() const’ is not a literal type . ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-526573281:2228,message,message,2228,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-526573281,1,['message'],['message']
Integrability,"pullrequests-build/root/roofit/roofitcore/src/RooProdPdf.cxx:1157:36: error: ‘class std::vector&lt;std::unique_ptr&lt;RooArgSet&gt; &gt;’ has no member named ‘fwdIterator’; did you mean ‘iterator’? ; - /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooProdPdf.cxx:1839:24: error: cannot convert ‘std::vector&lt;std::unique_ptr&lt;RooArgSet&gt; &gt;*’ to ‘RooLinkedList*’ in assignment ; - /usr/include/c++/8/ext/new_allocator.h:136:4: error: no matching function for call to ‘std::unique_ptr&lt;RooArgSet&gt;::unique_ptr(RooAbsCollection*)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3509#issuecomment-470484693:1923,depend,depends,1923,https://root.cern,https://github.com/root-project/root/pull/3509#issuecomment-470484693,1,['depend'],['depends']
Integrability,"pyspark is added to requirements.txt along the other python runtime dependencies. For now it is ignored in `dependency_versions.py` since we already check that pyspark tests can be run in the environment through the `test_distrdf_pyspark` build option. At the same time, on some nodes where `dependency_versions.py` is run (because it's [always activated with the pythonization tests except for windows](https://github.com/root-project/root/blob/296fad253ee07a2e081d68020a9fbf3ad5980a72/bindings/pyroot/pythonizations/test/CMakeLists.txt#L19) ) pyspark could not be present for various reasons. So we resort to using the build option only to check this dependency for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7511:68,depend,dependencies,68,https://root.cern,https://github.com/root-project/root/pull/7511,2,['depend'],"['dependencies', 'dependency']"
Integrability,"pyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C83FA: _M_dispose (basic_string.h:239); ==270704== by 0x66C83FA: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:317); ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:19177,depend,depends,19177,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,quests-build/105432/console).; ### Errors:; - [2021-01-25T16:12:32.403Z] /build/workspace/root-pullrequests-build/build/include/RConfigure.h:23:3: error: invalid preprocessing directive #R__HAS_MATHMORE ; - [2021-01-25T16:12:32.403Z] /build/workspace/root-pullrequests-build/build/include/RConfigure.h:26:3: error: invalid preprocessing directive #R__HAS_CLING ; - [2021-01-25T16:12:32.403Z] /build/workspace/root-pullrequests-build/build/include/RConfigure.h:27:3: error: invalid preprocessing directive #R__HAS_COCOA ; - [2021-01-25T16:12:32.403Z] /build/workspace/root-pullrequests-build/build/include/RConfigure.h:28:3: error: invalid preprocessing directive #R__HAS_VC ; - [2021-01-25T16:12:32.403Z] /build/workspace/root-pullrequests-build/build/include/RConfigure.h:31:3: error: invalid preprocessing directive #R__USE_LIBCXX ; - [2021-01-25T16:12:34.991Z] CMake Error at /build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message): ; - [2021-01-25T16:13:51.187Z] CMake Error at DAVIX-stamp/DAVIX-download-Release.cmake:49 (message): . ### Warnings:; - [2021-01-25T16:12:27.043Z] cc1plus: warning: ‘-Wabi’ won’t warn about anything [-Wabi] ; - [2021-01-25T16:12:27.043Z] /build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:73:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256’ {aka ‘__vector(8) float’} [-Wignored-attributes] ; - [2021-01-25T16:12:27.043Z] /build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:74:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256i’ {aka ‘__vector(4) long long int’} [-Wignored-attributes] ; - [2021-01-25T16:12:27.043Z] /build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:75:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256d’ {aka ‘__vector(4) double’} [-Wignored-attributes] ; - [2021-01-25T16:12:27.043Z] /build/workspace/root-pullrequests-build/root/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7089#issuecomment-766928340:1185,message,message,1185,https://root.cern,https://github.com/root-project/root/pull/7089#issuecomment-766928340,1,['message'],['message']
Integrability,quests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - [2020-12-07T13:11:17.708Z] CMake Error at VDT-stamp/VDT-download-Release.cmake:49 (message): ; - [2020-12-07T13:11:17.708Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - [2020-12-07T13:11:17.708Z] CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:49 (message): ; - [2020-12-07T13:11:22.990Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download ; - [2020-12-07T13:11:22.990Z] CMake Error at VECCORE-stamp/VECCORE-download-Release.cmake:49 (message): ; - [2020-12-07T13:11:22.990Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - [2020-12-07T13:11:22.990Z] CMake Error at VC-stamp/VC-download-Release.cmake:49 (message): ; - [2020-12-07T13:11:22.991Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - [2020-12-07T13:11:22.991Z] CMake Error at TBB-stamp/TBB-download-Release.cmake:49 (message): . And 2 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6922#issuecomment-739909438:1633,message,message,1633,https://root.cern,https://github.com/root-project/root/pull/6922#issuecomment-739909438,3,['message'],['message']
Integrability,"r const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565); ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >) (predefined_ops.h:270); ==270704== by 0x27198CA4: __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::__find_if<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:103919,depend,depends,103919,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"r const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565); ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >) (predefined_ops.h:270); ==270704== by 0x27198CD0: __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::__find_if<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:111202,depend,depends,111202,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"r const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565); ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >) (predefined_ops.h:270); ==270704== by 0x27198CFC: __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::__find_if<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:118485,depend,depends,118485,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"r const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565); ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >) (predefined_ops.h:270); ==270704== by 0x27198DBB: __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::__find_if<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:125768,depend,depends,125768,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"r const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308); ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558); ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623); ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76); ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317); ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114); ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857); ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308); ==92602=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:7706,depend,depends,7706,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,"r element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyClass>(""fieldKlass""); // Regular class; auto fieldCollection = model->MakeField<ProxiedCollection>(""fieldCollection""); // Class with associated collection proxy; ```; **This tag is not required when using the type-erased interface** (i.e., `RFieldBase::Create()`), as the use of a collection proxy can be determined at run time via `TClass`.; - `RCollectionClassField::ReadGlobalImpl()`: reduce the number of virtual calls to `TVirtualCollectionProxy::Insert()` by reading and inserting a block of elements at once. The size of the buffer that holds the elements is set by `RCollectionClassField::kReadChunkSize` (in bytes).; - Provide implementation and tests for `RPrintValueVisitor::VisitCollectionClassField()`; - Add unit tests for collections of fundamental types, compound types, vector of a collection proxy, and nested collection proxies.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11523.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11525:2248,interface,interface,2248,https://root.cern,https://github.com/root-project/root/pull/11525,1,['interface'],['interface']
Integrability,r.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFunc.h Math/PdfFuncMathCore.h Math/ProbFunc.h Math/ProbFuncMathCore.h Math/QuantFunc.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/io/xml && /usr/local/bin/cmake -E env LD_LIBRARY_PATH=/mnt/build/workspace/root-pullrequests-build/build/lib: ROOTIGNOREPREFIX=1 /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling -rootbuild -v2 -f G__XMLIO.cxx -cxxmodule -s /mnt/build/workspace/root-pullrequests-build/build/lib/libXMLIO.so -m libRIO_rdict.pcm -excludePath /mnt/build/workspace/root-pullrequests-build/root -excludePath /mnt/build/workspace/root-pullrequests-build/build -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/etc/cling/ -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/io/xml/inc -I/mnt/build/w,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4346#issuecomment-529005715:14074,Wrap,WrappedParamFunction,14074,https://root.cern,https://github.com/root-project/root/pull/4346#issuecomment-529005715,3,['Wrap'],['WrappedParamFunction']
Integrability,r.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFunc.h Math/PdfFuncMathCore.h Math/ProbFunc.h Math/ProbFuncMathCore.h Math/QuantFunc.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/io/xmlparser && /usr/local/bin/cmake -E env LD_LIBRARY_PATH=/mnt/build/workspace/root-pullrequests-build/build/lib: ROOTIGNOREPREFIX=1 /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling -rootbuild -v2 -f G__XMLParser.cxx -cxxmodule -s /mnt/build/workspace/root-pullrequests-build/build/lib/libXMLParser.so -m libCore_rdict.pcm -excludePath /mnt/build/workspace/root-pullrequests-build/root -excludePath /mnt/build/workspace/root-pullrequests-build/build -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/etc/cling/ -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/io/xmlpars,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4346#issuecomment-528976735:4183,Wrap,WrappedParamFunction,4183,https://root.cern,https://github.com/root-project/root/pull/4346#issuecomment-528976735,2,['Wrap'],['WrappedParamFunction']
Integrability,"r/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:; .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]; BOOST_HAS_NOTHROW_ASSIGN(T); ....; ....; In file included from input_line_7:57:; In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:; In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:; In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:17:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/string.hpp:23:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/level.hpp:30:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/integral_c.hpp:32:; .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/integral_wrapper.hpp:73:31: error: integer value -1 is outside the valid range of values [0, 3] for this enumeration type [-Wenum-constexpr-conversion]; typedef AUX_WRAPPER_INST( BOOST_MPL_AUX_STATIC_CAST(AUX_WRAPPER_VALUE_TYPE, (value - 1)) ) prior;; ^; .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/static_cast.hpp:24:47: note: expanded from macro 'BOOST_MPL_AUX_STATIC_CAST'; # define BOOST_MPL_AUX_STATIC_CAST(T, expr) sta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1782483745:1997,interface,interface,1997,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1782483745,1,['interface'],['interface']
Integrability,r/lib/clang/13.0.0/include -compilerI/usr/include -compilerI/usr/lib/clang/13.0.0/include -compilerI/usr/include -I/home/cai/root/bld/include -I/usr/local/include -I/usr/local/include -I/home/cai/root/bld/ginclude -I/home/cai/root/root-6.26.06/core/base/inc -I/home/cai/root/root-6.26.06/core/foundation/inc -I/home/cai/root/root-6.26.06/core/cont/inc -I/home/cai/root/root-6.26.06/core/gui/inc -I/home/cai/root/root-6.26.06/core/meta/inc -I/home/cai/root/root-6.26.06/core/clib/inc -I/home/cai/root/root-6.26.06/core/rint/inc -I/home/cai/root/root-6.26.06/core/zip/inc -I/home/cai/root/root-6.26.06/core/thread/inc -I/home/cai/root/root-6.26.06/core/textinput/inc -I/home/cai/root/root-6.26.06/core/clingutils/inc -I/home/cai/root/root-6.26.06/core/base/v7/inc -I/home/cai/root/root-6.26.06/core/foundation/v7/inc -I/home/cai/root/root-6.26.06/core/unix/inc -I/usr/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11430:4338,Message,MessageTypes,4338,https://root.cern,https://github.com/root-project/root/issues/11430,1,['Message'],['MessageTypes']
Integrability,"r: Cannot access memory at address 0x1>, dirptr=0x0) at /scratch/cmsbuild/vvasilev/root/core/base/src/TSystem.cxx:760; #14 0x00003fff9ad753c0 in TUnixSystem::AccessPathName (this=0x10020b25570, path=0x1 <error: Cannot access memory at address 0x1>, mode=kFileExists) at /scratch/cmsbuild/vvasilev/root/core/unix/src/TUnixSystem.cxx:1532; #15 0x00003fff8a9902a8 in ?? (); #16 0x00003fff8a99003c in ?? (); #17 0x00003fff8f5d1124 in cling::IncrementalExecutor::executeWrapper (this=0x10020d74f50, function=..., returnValue=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:385; #18 0x00003fff8f4001f0 in cling::Interpreter::RunFunction (this=0x10020b946b0, FD=0x10022a3a210, res=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1161; #19 0x00003fff8f40103c in cling::Interpreter::EvaluateInternal (this=0x10020b946b0, input=..., CO=..., V=0x3fffeacc4a60, wrapPoint=44) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1413; #20 0x00003fff8f3ff7f0 in cling::Interpreter::echo (this=0x10020b946b0, input=..., V=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1063; #21 0x00003fff8f779214 in cling::MetaSema::<lambda(cling::Transaction*, std::__cxx11::string, llvm::StringRef, cling::Value*)>::operator()(cling::Transaction *, std::__cxx11::string, llvm::StringRef, cling::Value *) const (__closure=0x3fffeacc4488, T=0x100219b9ec0, func=..., args=..., ret=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:141; #22 0x00003fff8f7794b8 in cling::MetaSema::actOnxCommand (this=0x1002147e6e0, file=..., args=..., result=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #23 0x00003fff8f794738 in cling::MetaParser::isXCommand (this=0x3fffeacc4750, actionResult=; 0x3fffeacc4818: cling::MetaSema::AR_Success",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981977924:66034,wrap,wrapPoint,66034,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981977924,2,['wrap'],['wrapPoint']
Integrability,"r::operator++()` will throw. This would shorten the stack trace shown by a potential crash to; ```; ROOT::RNTupleIterator::operator++(); UserCode::modelBackground(); ```; - we would not know the stack trace that actually triggered the exception. We would likely have some info captured in the error message (e.g. ""ROOT::ReadFromNetwork() failed to call linux_read_from_network()""), but we'd miss the connection, i.e. `ROOT::RNetFile::Read()`. One way of handling that is by injecting state:; ```; RStatus ROOT::RNetFile::Read() {; RStatus res(ROOT::ReadFromNetwork());; ...; return R__STATUS_PASSTHROUGH(res); // registers res to have passed through ""ROOT::RNetFile::Read()"" by emplacing a frame string *if* in error state.; ```; That's similar to [`llvm::PrettyStackTraceEntry`](https://llvm.org/doxygen/classllvm_1_1PrettyStackTraceEntry.html), see usage [here](https://github.com/llvm/llvm-project/blob/df494f7512b0ecebdf3d7be97695a1b6278c0336/clang/lib/CodeGen/BackendUtil.cpp#L909). FYI, there has been a multi-hundred email discussion on exactly this topic on the C++ committee mailing list, with pretty much two camps: allow error code handling (with potential exceptions) versus just always throw in case of errors, and if that's slow, go fix the compiler / runtime library implementations (but ABI break). **TL;DR**:; I agree that exceptions instead of error codes allow for nicer code. I don't think that we can have that nice code when we introduce `RStatus`, because the developer of that code must not assume a state for ""immediate exceptions"". In the end, we cannot use exceptions (across frames returning `RStatus`) and need to handle the error state, *always*. That leaves missing stack frames versus manipulation of a global (with developers dangerously and tacitly assuming a default state) - where IMHO it's more robust to have a mechanism to supply the missing stack frames (which can then - even better! - include user-facing diagnostic messages rather than just function names).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4683#issuecomment-564972730:3082,message,messages,3082,https://root.cern,https://github.com/root-project/root/pull/4683#issuecomment-564972730,1,['message'],['messages']
Integrability,r; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1586,message,message,1586,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"r<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here; RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here; std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; libc++abi: terminating due to uncaught exception of type std::runtime_error: ; An e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13656:2383,Interface,InterfaceUtils,2383,https://root.cern,https://github.com/root-project/root/issues/13656,1,['Interface'],['InterfaceUtils']
Integrability,"r<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:9609,message,message,9609,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"r> > > > const&) const (RDFColumnRegister.cxx:84); ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x484F02A: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361); ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236); ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356); ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:230654,depend,depends,230654,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,rSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-25T09:12:01.464Z] /mnt/build/workspace/root-pullrequests-build/build/include/TMath.h:290:11: error: C++ requires a type specifier for all declarations . ### Warnings:; - [2021-06-25T09:12:01.464Z] /mnt/build/workspace/root-pullrequests-build/build/include/TMath.h:292:11: warning: implicit conversion of out of range value from 'double' to 'int' is undefined [-Wliteral-conversion],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8220#issuecomment-868356611:4120,Wrap,WrappedFunction,4120,https://root.cern,https://github.com/root-project/root/pull/8220#issuecomment-868356611,2,['Wrap'],"['WrappedFunction', 'WrappedParamFunction']"
Integrability,r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-12T06:56:09.498Z] ghprbPullLongDescription=This addresses test failures like:\r\n```\r\n 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417#issuecomment-860019280:2080,message,message,2080,https://root.cern,https://github.com/root-project/root/pull/8417#issuecomment-860019280,1,['message'],['message']
Integrability,"raits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84); ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x484F033: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361); ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236); ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356); ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::all",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:237184,depend,depends,237184,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"raits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84); ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x484F047: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361); ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236); ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356); ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::all",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:243714,depend,depends,243714,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"raries that could be loaded to provide the requested; symbols, and record their paths but do not load them yet. Instead you; should record a map of libraries to the symbols they provide. E.g. [ (; ""liba.so"", [ ""foo"", ""bar"" ] ), ( ""libb.so"", [ ""baz"" ] ) ]. For each; library/symbol-set pair you can install a custom MaterializationUnit using; JITDylib::define.; Step 2: In the custom MaterializationUnit's materialize function you'll; walk the map from before, do the library load, and then resolve the symbols. Since step 2 happens outside the session lock the idea is that it should; prevent the kind of deadlock that you're seeing. Unfortunately if you can reference JIT'd code from static initializers in; precompiled code then there's still a chance for similar failures. Consider; a precompiled ""libx.so"" containing a global ""x"" and a static constructor; that calls a JIT'd function ""f"" which uses the ""x"" from ""libx.so"" (a; circular reference). I believe this will result in starvation or deadlock; (depending on the number of threads involved). The failure path looks like; this:. 1. A lookup for ""x"" enters the generator, which discovers that ""libx.so""; provides ""x"" and creates a MaterializationUnit, MU, to load ""libx.so"" and; resolve ""x"".; 2.1 Outside the lock, MU dlopens ""libx.so""...; 2.2. dlopen runs the initializers for ""libx.so"" which triggers a lookup in; the JIT for ""f"".; 2.2.1. The lookup for ""f"" finds and runs the materializer for ""f"".; 2.2.2. The materializer for ""f"" reaches JITLink, which tries to resolve; symbol ""x"". There is no work to trigger (we started materializing it; already in (2.1)), so the link is suspended pending resolution of ""x"".; Critically, the dlopen cannot complete until the link completes.; 2.2. MU *would* dlsym ""x"", but it's blocked waiting on the dlopen to finish. And we're deadlocked again. The root cause of the problem is that ld.so and the JIT don't communicate; immediately about symbol resolutions. What we really wanted was for the; dlopen ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1274280300:1575,depend,depending,1575,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1274280300,1,['depend'],['depending']
Integrability,"rc/table/adobeglyphlist.h:128:44: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=] ; - [2021-11-30T07:25:41.000Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/mathtext/src/table/adobeglyphlist.h:128:55: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=] ; - [2021-11-30T07:31:10.411Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/postscript/src/AdobeGlyphList.h:110:44: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=] ; - [2021-11-30T07:31:10.411Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/postscript/src/AdobeGlyphList.h:110:55: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=] ; - [2021-11-30T07:31:27.486Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:31:27.486Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368250:1335,synchroniz,synchronizeParameterSettings,1335,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368250,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"re probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RDrawable; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RPadBase; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:4589,interface,interface,4589,https://root.cern,https://github.com/root-project/root/issues/14587,1,['interface'],['interface']
Integrability,re.rootmap ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:32:13: error: typedef redefinition with different types ('IMultiGenFunctionTempl&lt;double&gt;' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:38:42: error: typedef redefinition with different types ('ROOT::Math::IBaseFunctionMultiDim' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:154:37: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:174:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:180:43: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:193:40: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:215:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:219:43: error: only virtual member functions can be marked 'override' . ### Warnings:; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDataSource.hxx:213:11: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_TH,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373548076:1636,Wrap,WrappedFunction,1636,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373548076,1,['Wrap'],['WrappedFunction']
Integrability,"ree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector&lt;std::string,std::allocator&lt;std::string&gt;&gt;::insert': no overloaded function takes 1 arguments [C:\User",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153#issuecomment-1209201215:2780,message,message,2780,https://root.cern,https://github.com/root-project/root/pull/11153#issuecomment-1209201215,1,['message'],['message']
Integrability,remove dependency on tbb interfaces from RTaskArena,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7062:7,depend,dependency,7,https://root.cern,https://github.com/root-project/root/pull/7062,2,"['depend', 'interface']","['dependency', 'interfaces']"
Integrability,"replace all uses of the deprecated tbb_task_scheduler_init and its; implicit task_arena by explicit manipulation of our own central; instance of task_arena, as suggested by intel:; https://software.intel.com/sites/default/files/managed/b2/d2/TBBRevamp.pdf. work out some gymnastics to keep tbb out of the headers. We can't; forward-declare tbb::task_arena as it is an alias of a versioned; namespace dependent class (right now tbb::interface7::tbb_task_arena). Interface details to discuss: Should we add an ExecuteIsolated and an Execute call to TPoolManager?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5551:400,depend,dependent,400,https://root.cern,https://github.com/root-project/root/pull/5551,2,"['Interface', 'depend']","['Interface', 'dependent']"
Integrability,"replace the calling site (in `flexibleInterp`) with. ```; // return total * std::exp(interpolate6thDegree(x, std::log(low), std::log(high), std::log(nominal), boundary));; return total * interpolate6thDegree(x, low, high, nominal, boundary);; ```. This (together with using the old code as commented out above) indeed gets rid of the `nan`!. **I think the crucial part is that the old code checks for `high <= 0` and also `low <= 0`.**. Indeed, I traced the `nan` there: the sequence of events in this failing example is that `high` is zero, so that `std::log(high)` is `-inf`. Then `eps_plus` is also `-inf` and so `S` and `A` too, so you `-inf` times something negative (`t` happens to be negative in this example) so the term becomes `+inf` and eventually you get a `-inf + inf` and that equals `nan`. So, there's at least two options to fix this, both will need some conditionals added in again. 1. Going back to the original algorithm. If I understand the commit message of that change correctly, it was mostly removed because it required cached variables. As I rewrote the algorithm above, no more cached variables are necessary. Of course, it does involve more temporary values than the new algorithm, so perhaps this is another reason to pick the new algorithm.; 2. Adding similar `<= 0` checks to the new algorithm. I think this should take place at the call site, because it doesn't make sense for the other `interpolate6thDegree` usecase where no weird values are expected from logarithms. By the way, why is the interpolation taking place in logarithmic space instead of regular linear space and then transformed back into linear space after interpolation? Doesn't this also mean that the two interpolation schemes (FlexibleInterpVar and PiecewiseInterpolation) are again inconsistent? If the logarithm can be eliminated, I think we can do without introducing conditionals, no? That is, assuming the high and low vectors are filled sensibly, which is not checked anywhere as far as I can s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13749#issuecomment-1746494427:1030,message,message,1030,https://root.cern,https://github.com/root-project/root/issues/13749#issuecomment-1746494427,1,['message'],['message']
Integrability,requested here: https://root-forum.cern.ch/t/tgraph-synchronization/52211/4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11659:52,synchroniz,synchronization,52,https://root.cern,https://github.com/root-project/root/pull/11659,1,['synchroniz'],['synchronization']
Integrability,"requests-build/61973/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/gui/gui/src/TGCommandPlugin.cxx:74:40: warning: ignoring return value of ‘char* fgets(char*, int, FILE*)’, declared with attribute warn_unused_result [-Wunused-result] . ### Failing tests:; - [projectroot.roottest.cling.template.separateDict.roottest_cling_template_separateDict_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61973/testReport/projectroot.roottest.cling.template/separateDict/roottest_cling_template_separateDict_make/); - [projectroot.roottest.root.io.abstractclass.roottest_root_io_abstractclass_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61973/testReport/projectroot.roottest.root.io/abstractclass/roottest_root_io_abstractclass_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61973/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execCheckSum](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61973/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execCheckSum/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61973/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.meta.ROOT-7181.roottest_root_meta_ROOT_7181_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61973/testReport/projectroot.roottest.root.meta/ROOT-7181/roottest_root_meta_ROOT_7181_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_runtreeCloneTest2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61973/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_runtreeCloneTest2/); - [projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3850#issuecomment-505186509:1077,interface,interface,1077,https://root.cern,https://github.com/root-project/root/pull/3850#issuecomment-505186509,1,['interface'],['interface']
Integrability,requests-build/build/lib: /mnt/build/workspace/root-pullrequests-build/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /mnt/build/workspace/root-pullrequests-build/build/lib/libCore.so -excludePath /mnt/build/workspace/root-pullrequests-build/root -excludePath /mnt/build/workspace/root-pullrequests-build/build -rml libCore.so -rmf /mnt/build/workspace/root-pullrequests-build/build/lib/libCore.rootmap -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/etc/cling/ -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/core/base/res -I/mnt/build/workspace/root-pullrequests-build/root/core/base/../foundation/res -I/mnt/build/workspace/root-pullrequests-build/root/builtins/zlib -writeEmptyRootPCM -DSYSTEM_TYPE_unix ROOT/StringConv.hxx ROOT/TExecutor.hxx ROOT/TSequentialExecutor.hxx Buttons.h Bytes.h Byteswap.h Gtypes.h GuiTypes.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TApplicationImp.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBrowser.h TBrowserImp.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TCanvasImp.h TColorGradient.h TColor.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TDatime.h TDirectory.h TEnv.h TError.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TGuiFactory.h TInetAddress.h TInspectorImp.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjectSpy.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2755#issuecomment-465672761:1296,Message,MessageTypes,1296,https://root.cern,https://github.com/root-project/root/pull/2755#issuecomment-465672761,1,['Message'],['MessageTypes']
Integrability,"ressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expressions, they can still do so in their pythonizor code via the `name` parameter. I'd like to hear the opinion of @pikacic and @daritter about this since we've discussed about this decorator in the past (no need to review the whole PR, giving your opinion on the programming examples is already more than enough!). EDIT: I have received some feedback from @eguiraud on the `name` parameter: he thinks it could be removed since some users won't need it (they won't do any further filtering inside the pythonizor). As an alternative, `name` could be injected in `klass` before the user pythonizor runs (so users would access it as `klass.name`), but that could cause a clash if `name` is already a static member of the class. There is also `klass.__cpp_name__` that is provided by cppyy with the fully qualified name of the class, so we could rely on that too. @vepadulano would rather keep `name` as a parameter. I'd like to hear more opinions :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128:3849,inject,injected,3849,https://root.cern,https://github.com/root-project/root/pull/9128,1,['inject'],['injected']
Integrability,"rguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc -Iinclude -I/mnt/build/workspace/root-pullrequests-build/root/tree/dataframe -Ibuiltins/davix/DAVIX-prefix/include/davix -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/gpad/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/davix/inc -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RCustomColumnBase.cxx.o -MF tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RCustomColumnBase.cxx.o.d -o tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RCustomColumnBase.cxx.o -c /mnt/build/workspace/root-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-541875642:2222,depend,depend,2222,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-541875642,1,['depend'],['depend']
Integrability,"rial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic cas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:1832,integrat,integrationRange,1832,https://root.cern,https://github.com/root-project/root/pull/11049,1,['integrat'],['integrationRange']
Integrability,"ring foo{""foo""};; std::memcpy(st.char_buffer, foo.data(), foo.size());; }. """"""); struct = ROOT.Struct(); ROOT.fill_char_buffer(struct); char_buffer = struct.char_buffer. # With thew new cppyy, you get access to the lower level buffer instead:; print(""struct.char_buffer : "", char_buffer). # However, you can turn the buffer into a string very easily with as_string():; print(""struct.char_buffer.as_string(): "", char_buffer.as_string()); ```; The output:; ```txt; struct.char_buffer : <cppyy.LowLevelView object at 0x74c7a2682fb0>; struct.char_buffer.as_string(): foo; ```. ## Associated GitHub issues. This will close the following GitHub issue:; * https://github.com/root-project/root/issues/12718; * https://github.com/root-project/root/issues/7686; * https://github.com/root-project/root/issues/11924; * https://github.com/root-project/root/issues/12230; * https://github.com/root-project/root/issues/11411; * https://github.com/root-project/root/issues/11596. ## Upstream contributions to cppyy in the context of this synchronization. - https://github.com/wlav/CPyCppyy/pull/11; - https://github.com/wlav/CPyCppyy/pull/12; - https://github.com/wlav/CPyCppyy/pull/14; - https://github.com/wlav/CPyCppyy/pull/16 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/17 *(was in PyROOT before)*; - https://github.com/wlav/cppyy-backend/pull/20 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/18; - https://github.com/wlav/CPyCppyy/pull/19; - https://github.com/wlav/CPyCppyy/pull/21; - https://github.com/wlav/CPyCppyy/pull/22; - https://github.com/wlav/CPyCppyy/pull/23. ## Performance validation. To validate the performance, I ran the [Python tests in roottest](https://github.com/root-project/roottest/tree/master/python) and the [PyROOT pythonization tests](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test) and compared runtimes with and without the cppyy upgrade. The total runtime of these tests reduced by about 4 % from 208 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507:2128,synchroniz,synchronization,2128,https://root.cern,https://github.com/root-project/root/pull/14507,1,['synchroniz'],['synchronization']
Integrability,ription=This addresses test failures like:\r\n```\r\n 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-12T06:56:09.498Z] ghprbPullLongDescription=This addresses test failures like:\r\n```\r\n 998/1157 Test #997: tutorial-v7-draw_mt.cxx ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417#issuecomment-860019280:1221,interface,interface,1221,https://root.cern,https://github.com/root-project/root/pull/8417#issuecomment-860019280,1,['interface'],['interface']
Integrability,"rity-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:4021,integrat,integration,4021,https://root.cern,https://github.com/root-project/root/pull/11808,1,['integrat'],['integration']
Integrability,"rkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. ******************************************************************; * RooFit - S T R E S S suite *; ******************************************************************; ******************************************************************; * Starting S T R E S S basic suite *; ******************************************************************; Test 1 : Fitting,plotting & event generation of basic p.d.f.....OK; Test 2 : Data import methods....................................OK; Test 3 : Interpreted expression p.d.f...........................OK; Test 4 : C++ function binding operator p.d.f....................OK; Test 5 : Non-standard binning in counting and asymmetry plots...OK; Test 6 : Calculation of chi^2 and residuals in plots............OK; Test 7 : Normalization of p.d.f.s in 1D.........................OK; Test 8 : Numeric integration configuration......................OK; Test 9 : Addition operator p.d.f................................OK; Test 10 : Extended ML fits to addition operator p.d.f.s..........OK; Test 11 : Basic fitting and plotting in ranges...................OK; Test 12 : Extended ML fit in sub range...........................OK; Test 13 : Component plotting variations..........................OK; Test 14 : FFT Convolution operator p.d.f.........................SKIPPED; Test 15 : Analytical convolution operator........................OK; Test 16 : Composition extension of basic p.d.f...................OK; Test 17 : Sum and product utility functions......................OK; Test 18 : Conditional use of F(x|y)..............................OK; Test 19 : Product operator p.d.f. with uncorrelated terms........OK; Test 20 : Product operator p.d.f. with conditional term..........OK; Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK; Test 22 : Full per-event error p.d.f. F(t|dt)G(dt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-881412597:2915,integrat,integration,2915,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-881412597,1,['integrat'],['integration']
Integrability,"rking group server, in the ssh session, where I don't have admin rights for everything.; It gives me a warning and opens the Firefox with an empty new tab.; ```; root [0] ; Processing bug_SetShowProjection.cpp... ROOT comes with a web-based canvas, which is now being started. ; Revert to the legacy canvas by setting ""Canvas.Name: TRootCanvas"" in rootrc file or; by starting ""root --web=off"".; Find more info on https://root.cern/for_developers/root7/#twebcanvas; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9779. ROOT web-based widget started in the session where DISPLAY set to localhost:11.0; Means web browser will be displayed on remote X11 server which is usually very inefficient; One can start ROOT session in server mode like ""root -b --web=server:8877"" and forward http port to display node; Or one can use rootssh script to configure pore forwarding and display web widgets automatically; Find more info on https://root.cern/for_developers/root7/#rbrowser; This message can be disabled by setting ""WebGui.CheckRemoteDisplay: no"" in .rootrc file; START /usr/bin/exo-open --launch WebBrowser ""http://localhost:9779/win1/?key=445963""; [Parent 199285, Main Thread] WARNING: No marshaller for signature of signal 'PropertiesChanged': 'glib warning', file /builddir/build/BUILD/firefox-115.6.0/toolkit/xre/nsSigHandlers.cpp:167. ** (firefox:199285): WARNING **: 12:06:00.377: No marshaller for signature of signal 'PropertiesChanged'; [Parent 199285, IPC Launch] WARNING: fork() failed: No space left on device: file /builddir/build/BUILD/firefox-115.6.0/ipc/chromium/src/base/process_util_linux.cc:280; [Parent 199285, IPC I/O Parent] WARNING: Failed to launch tab subprocess: file /builddir/build/BUILD/firefox-115.6.0/ipc/glue/GeckoChildProcessHost.cpp:802; [Parent 199285, IPC Launch] WARNING: fork() failed: No space left on device: file /builddir/build/BUILD/firefox-115.6.0/ipc/chromium/src/base/process_util_linux.cc:280; [Parent 199285, IPC I/O Parent] WARNING",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12497#issuecomment-1926754919:1434,message,message,1434,https://root.cern,https://github.com/root-project/root/issues/12497#issuecomment-1926754919,1,['message'],['message']
Integrability,rkspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-25T09:12:01.464Z] /mnt/build/workspace/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8220#issuecomment-868356611:3427,Integrat,IntegratorMultiDim,3427,https://root.cern,https://github.com/root-project/root/pull/8220#issuecomment-868356611,1,['Integrat'],['IntegratorMultiDim']
Integrability,"rnal/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:; .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]; BOOST_HAS_NOTHROW_ASSIGN(T); ....; ....; In file included from input_line_7:57:; In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:; In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:; In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:17:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/string.hpp:23:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/level.hpp:30:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/integral_c.hpp:32:; .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/integral_wrapper.hpp:73:31: error: integer value -1 is outside the valid range of values [0, 3] for this enumeration type [-Wenum-constexpr-conversion]; typedef AUX_WRAPPER_INST( BOOST_MPL_AUX_STATIC_CAST(AUX_WRAPPER_VALUE_TYPE, (value - 1)) ) prior;; ^; .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/static_cast.hpp:24:47: note: expanded from macro 'BOOST_MPL_AUX_STATIC_CAST'; # define BOOST_MPL_AUX_STATIC_CAST(T, expr) static_cast<T>(expr); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1782483745:2081,interface,interface,2081,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1782483745,1,['interface'],['interface']
Integrability,"rono::seconds>(dur);; }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp ; $ ; ```; Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```; #include ""Vc/vector.h""; #include <chrono>. void foo() {; using namespace std::chrono;. nanoseconds dur;; floor<seconds>(dur);; }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp ; In file included from a.cpp:1:; In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:; /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T.""; static_assert(std::is_arithmetic<T>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~; a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here; floor<seconds>(dur);; ^; a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]; floor<seconds>(dur);; ^; 1 error generated.; ```; In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```; #if _LIBCPP_STD_VER > 14; template <class _ToDuration, class _Clock, class _Duration>; typename enable_if; <; __is_duration<_ToDuration>::value,; time_point<_Clock, _ToDuration>; >::type; floor(const time_point<_Clock, _Duration>& __t); {; return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};; // ^^^^^ here is a compiler error; }. ```; I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message; ```; void foo() {; std::chrono::time_point<std::chrono::system_clock,; std::chrono::nanoseconds> tp;; std::chrono::floor<std::chrono::seconds>(tp);; }; ```; got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11934#issuecomment-1357943189:1659,wrap,wrapper,1659,https://root.cern,https://github.com/root-project/root/issues/11934#issuecomment-1357943189,2,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"root-project/root@72fe06a does not permit passing random options to rootcling; as improvement in encapsulation. Rootcling used to permit random flags usually; coming CXXFLAGS and it captured only -I, -D and -U. The old implementation; used to pass all flags directly to cling thus clang. This lead to allowing; the dictionaries to be compiled with incompatible to the rest of the build; flags. Some users passed their entire CXXFLAGS from the build systems and the current; rootcling implementation started to reject it breaking backward compatibility. This patch implements a sink for all unrecognized flags and issues a deprecation; message. Should address the rest of the concerns of ROOT-10303.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4356:635,message,message,635,https://root.cern,https://github.com/root-project/root/pull/4356,1,['message'],['message']
Integrability,"root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -std=c++11 -MD -MT core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o -MF core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o.d -o core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/thread/test/testTThreadedObject.cxx ; - include/ROOT/TThreadedObject.hxx:324:13: error: ‘lock_guard’ is not a member of ‘std’ ; - include/ROOT/TThreadedObject.hxx:324:45: error: expected primary-expression before ‘&gt;’ token ; - include/ROOT/TThreadedObject.hxx:324:65: error: there are no arguments to ‘lg’ that depend on a template parameter, so a declaration of ‘lg’ must be available [-fpermissive] ; - include/ROOT/TThreadedObject.hxx:324:49: error: ‘lg’ was not declared in this scope ; - FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -Iinclude -Icore/thread/test -Igoogletest-prefix/src/googletest/googletest/include -Igoogletest-prefix/src/googletest/googlemock/include -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -std=c++11 -MD -MT core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o -MF core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-595748340:1473,depend,depend,1473,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-595748340,1,['depend'],['depend']
Integrability,"root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/builtins -I/usr/include/freetype2 -I/usr/include/x86_64-linux-gnu/freetype2 -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/minuit/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/minuit2/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/foam/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/smatrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/roofit/batchcompute/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -fdiagnostics-color=always -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -fno-math-errno -std=c++14 -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooSimultaneous.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooSimultaneous.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooSimultaneous.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooSimultaneous.cxx ; - [2021-11-30T23:01:46.366Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooSimultaneous.cxx:1137:90: error: no ‘void RooSimultaneous::wrapsPdfsInBinSamplingPdfs(const RooAbsData&, double)’ member function declared in class ‘RooSimultaneous’",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9358#issuecomment-983101834:3288,wrap,wrapsPdfsInBinSamplingPdfs,3288,https://root.cern,https://github.com/root-project/root/pull/9358#issuecomment-983101834,1,['wrap'],['wrapsPdfsInBinSamplingPdfs']
Integrability,root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:17.423Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:17.423Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:17.681Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.248Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.248Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.766Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:19.025Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:20.220Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:52.151Z] include/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 34 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803916135:1339,Interface,InterfaceUtils,1339,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803916135,1,['Interface'],['InterfaceUtils']
Integrability,root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:17.423Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:17.681Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.248Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.248Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.766Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:19.025Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:20.220Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:52.151Z] include/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 34 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111619/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolum,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803916135:1535,Interface,InterfaceUtils,1535,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803916135,1,['Interface'],['InterfaceUtils']
Integrability,root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:17.681Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.248Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.248Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.766Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:19.025Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:20.220Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:52.151Z] include/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 34 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111619/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111619/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803916135:1731,Interface,InterfaceUtils,1731,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803916135,1,['Interface'],['InterfaceUtils']
Integrability,root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.248Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.248Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.766Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:19.025Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:20.220Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:52.151Z] include/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 34 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111619/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111619/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111619/testReport/projectroot.roottest.root/dataframe/roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803916135:1927,Interface,InterfaceUtils,1927,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803916135,1,['Interface'],['InterfaceUtils']
Integrability,"root/pull/12970; 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13044:1868,interface,interface,1868,https://root.cern,https://github.com/root-project/root/pull/13044,1,['interface'],['interface']
Integrability,"root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/meta/src/TClass.cxx:6081. #23 0x00000000004025f5 in main (argc=3, argv=0x7fffffff68f8) at /scratch/greenc/build/mrb-art-devel/e20-debug/build_slf7.x86_64/art/art/Framework/Art/art.cc:26. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:6543,Wrap,Wrapper,6543,https://root.cern,https://github.com/root-project/root/pull/5462,1,['Wrap'],['Wrapper']
Integrability,"root_generate_dictionary does not properly handle ""all"" include directory properties from its dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12263:94,depend,dependencies,94,https://root.cern,https://github.com/root-project/root/issues/12263,1,['depend'],['dependencies']
Integrability,root_generate_dictionary: Improve propagation of INCLUDE_DIRECTORY properties from target and dependencies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12264:94,depend,dependencies,94,https://root.cern,https://github.com/root-project/root/pull/12264,1,['depend'],['dependencies']
Integrability,rootcling does not error out when failing to read dependent PCM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12788:50,depend,dependent,50,https://root.cern,https://github.com/root-project/root/issues/12788,1,['depend'],['dependent']
Integrability,rootcling writes dependency information which is never read/used when loading the rdict file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5211:17,depend,dependency,17,https://root.cern,https://github.com/root-project/root/pull/5211,1,['depend'],['dependency']
Integrability,rootcling: do not select classes of dependent type (ROOT-9185).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2021:36,depend,dependent,36,https://root.cern,https://github.com/root-project/root/pull/2021,1,['depend'],['dependent']
Integrability,roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/datamodelevolution/roottest_root_io_datamodelevolution_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [proj,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844253147:1281,interface,interface,1281,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844253147,2,['interface'],['interface']
Integrability,roottools CMake target purpose is to provide handle to used as a dependency in roottest.git.; It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3279:65,depend,dependency,65,https://root.cern,https://github.com/root-project/root/pull/3279,1,['depend'],['dependency']
Integrability,"rotocols, etc. There is increasing amount of papers trying to address how we put C++ modules at scale (https://wg21.link/p2656, https://wg21.link/P2409, https://youtu.be/_LGR0U5Opdg?si=AbLazREvyl5PXVFG). Some papers/talks are more radical claiming that we cannot even roll out modules (as written in the standard) at such scale. . For modules to be useful and work reliably we know that we need to apply modularization bottom up. That means that before modularizing cmssw/art we need everything below starting from libc and libxml to become modular. That's something we observed during our modularization efforts in cmssw (see https://github.com/cms-sw/cmssw/issues/15248). The reasons we cannot make it yet default is discussed here: https://github.com/cms-sw/cmssw/issues/41810#issuecomment-1578982627 and here https://github.com/root-project/root/pull/13000 Not surprisingly we have observed similar comments coming from modularization efforts in gcc and msvc. . Let's assume we live in an platonic world where all of the above is resolved. It still seems we will be able to use our dictionary system as it is because we will in the end have a build system that processes textual files to build them. There we could use any custom flavor of modules (or something better) that makes our I/O work. We can go one step further and claim that, even if we introduce strict interface encapsulation via C++ 20 modules, our I/O system would require to know more about the non-exported entities so that we can serialize and deserialize the private dependencies of the exported entities. That is, we will probably end up with a very similar system that we have today. I would personally like to tackle the engineering challenge as you have described. However I believe we are not there yet and any efforts into trying to adapt to a still volatile area would probably cause disturbances in our user base for not yet clear final goal. Does that address/answer the concerns you had when you opened that request?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13536#issuecomment-1693395998:3153,interface,interface,3153,https://root.cern,https://github.com/root-project/root/issues/13536#issuecomment-1693395998,4,"['depend', 'interface']","['dependencies', 'interface']"
Integrability,"rpolation; RooHistFunc histFunc{""histFunc"", ""histFunc"", x, templHist, 0};; RooHistPdf histPdf{""histPdf"", ""histPdf"", x, templHist, 0};. RooWrapperPdf wrapperPdf{""wrapperPdf"", ""wrapperPdf"", histFunc};. RooKeysPdf keysPdf{""keysPdf"", ""keysPdf"", x, templData};. RooArgSet normSet0{}; // check empty normalization set; RooArgSet normSet1{x}; // check ""usual"" normalization set; RooArgSet normSet2{x, y}; // it should also handle extra disconnected observables. // init caches; wrapperPdf.getVal(normSet1);. auto test = [&](RooAbsReal const &func, RooArgSet const &nset) {; int maxValCode = func.getMaxVal(nset);; double maxVal = NAN;; if (maxValCode != 0); maxVal = func.maxVal(maxValCode);; std::cout << func.ClassName() << nset << "": "" << func.getVal(nset) << "" "" << maxVal << std::endl;; };. for (auto &normSet : {normSet0, normSet1, normSet2}) {; std::cout << std::endl;. test(histFunc, normSet);; test(histPdf, normSet);; test(keysPdf, normSet);; test(crystalBall, normSet);; test(cbShape, normSet);; test(wrapperPdf, normSet);; test(binSamplingPdf, normSet);; // still missing: RooFFTConvPdf, RooSPHarmonic, and RooLegendre; }; ```. The output is:; ```; RooHistFunc(): 100 nan; RooHistPdf(): 500 nan; RooKeysPdf(): 0.201299 nan; RooCrystalBall(): 1 nan; RooCBShape(): 1 nan; RooWrapperPdf(): 100 nan; RooBinSamplingPdf(): 0.308511 nan. RooHistFunc(x): 100 105; RooHistPdf(x): 5 105; RooKeysPdf(x): 0.218569 0.205937; RooCrystalBall(x): 9.92564 9.92564; RooCBShape(x): 9.92564 9.92564; RooWrapperPdf(x): 5 105; RooBinSamplingPdf(x): 3.06217 9.92564. RooHistFunc(x,y): 100 105; RooHistPdf(x,y): 5 105; RooKeysPdf(x,y): 0.218569 0.205937; RooCrystalBall(x,y): 9.92564 9.92564; RooCBShape(x,y): 9.92564 9.92564; RooWrapperPdf(x,y): 5 105; RooBinSamplingPdf(x,y): 3.06217 9.92564; ```; * It's probably okay to not return values when the normalization set is empty, although it could easily implemented to do it (well, maybe not for the `RooAddPdf`...); * Expect for the crystal ball functions, the values a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12317:2104,wrap,wrapperPdf,2104,https://root.cern,https://github.com/root-project/root/issues/12317,1,['wrap'],['wrapperPdf']
Integrability,"rprising amount of time. And the build is stuck waiting for all of these. Towards the end things improve a bit once more, as many libraries / source files can build in parallel once more. But even then, very rarely does the build manage to make use of all of the available cores. ## Optional: share how it could be improved. From a quick glance it seems that ROOT's CMake configuration sets up way too many unnecessary dependencies between its build targets. Most of the issues seem to arise from how the dictionary generation is set up as far as I can see. In ATLAS I use the following code to set up the generation of dictionary source files:. https://gitlab.cern.ch/atlas/atlasexternals/-/blob/master/Build/AtlasCMake/modules/AtlasDictionaryFunctions.cmake. And that provides a much better behaviour. Mainly because in ATLAS's setup dictionary generations do not need to wait for anything. Even if the library that a dictionary is being produced for depends on a number of upstream libraries, the dictionary for that library can be generated before all the upstream libraries would have finished building. In practice this actually means that the start of any ATLAS software build is dominated by running dictionary generation. As GNU Make and Ninja both prefer running those build steps first. (As they do not have any dependencies themselves.). The reason I blame the dictionary generation code is that regular C(\+\+) code building with Ninja scales very well to many cores. Even when one has many small libraries in a project, Ninja can start the build of object files before all of the libraries that they depend on would've finished building. (In ATLAS's offline software the very end of a build is taken up purely by library/executable linking steps.). ## To Reproduce. Unfortunately you need a pretty powerful machine to do so... But once you do, just do something similar to what I did:. ```; cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=17 \; -Dall=ON -Dbuiltin_gsl=ON ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432:1871,depend,depends,1871,https://root.cern,https://github.com/root-project/root/issues/6432,1,['depend'],['depends']
Integrability,"rrors, warnings, and debug info. Some of these only work when certain compile flags are set (WARNINGMSG and DEBUG). I would like to unify these systems and use the MnPrint facilities consistently everywhere. This would have the advantage that debug info can be turned on at any time without recompiling and it has additional advantages for frontends to Minuit2, like [iminuit](https://github.com/scikit-hep/iminuit). I would like to work on this, but need some feedback before I invest time. ### Proposed changes. Currently, there are three systems to report info, errors, warnings, and debug messages. The latter two need to be enabled with compile flags (WARNINGMSG and DEBUG). Examples from VariableMetricBuilder.cxx:. Direct use of the MnPrint facilities (this is the ""proper"" way); ```c++; if (PrintLevel() > 1) {; MnPrint::PrintState(std::cout, result.back(), ""VariableMetric: Iteration # "",result.size()-1);; }; ```; Use of MnPrint macros for info messages that are only enabled when WARNINGMSG is set; ```c++; #ifdef WARNINGMSG; MN_INFO_MSG(""VariableMetricBuilder: initial matrix not pos.def."");; #endif; ```; Use of DEBUG and std::cout; ```c++; #ifdef DEBUG; std::cout<<""VariableMetricBuilder convergence when edm < ""<<edmval<<std::endl;; #endif; ```; The latter two need to be enabled at compile-time. If they are enabled, there is no fine-grained run-time control, because the MnPrint system only distinguishes two verbosity levels 0 and 1. On level 0, only errors are reported. On level 1, errors and ""info"" are reported. I propose to enhance this by two more levels. - level 0: report errors; - level 1: all of level 0 + warnings; - level 2: all of level 1 + info; - level 3: all of level 2 + debug. and add the corresponding macros; ```c++; MN_WARN_MSG; MN_WARN_MSG2; MN_WARN_VAL; MN_WARN_VAL2; MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN_DEBUG_* macros. Level 1 would enable the warning messages that are currently only a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:1040,message,messages,1040,https://root.cern,https://github.com/root-project/root/issues/6421,1,['message'],['messages']
Integrability,"rse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:; ```; See full [error.txt](https://github.com/root-project/root/files/5517699/error.txt). But with the root master or 6.22.00, there is only; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still prints the header not found message; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```; (That the XML file isn't there doesn't matter, the argument has to be filled). ### Setup. 1. ROOT master, 6.22.00; 2. centos7; 3. lcg install. ### Additional context. This isn't really high priority, as a work around is available, but from; https://sft.its.cern.ch/jira/browse/ROOT-11029?focusedCommentId=110376&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:1645,message,message,1645,https://root.cern,https://github.com/root-project/root/issues/6791,1,['message'],['message']
Integrability,"rsions of `FLAGS` variables, since CMake expects the flags to be a real list in most cases (really everywhere except in the `CMAKE_CXX_FLAGS` variable itself). Actually changing them to CMake lists directly might break users code, so this way is safer.~~. Target based approach before (showing the old INCLUDE issue too). ```cmake; cmake_minimum_required(VERSION 3.4). project(RootSimpleExample LANGUAGES CXX); find_package(ROOT CONFIG REQUIRED COMPONENTS RooFit RooFitCore); # Note: Symbols missing compiling error if user forgets RooFitCore!. # Already fixed in ROOT master; set_property(TARGET ROOT::Core PROPERTY; INTERFACE_INCLUDE_DIRECTORIES ""${ROOT_INCLUDE_DIRS}""). # Fix for ROOT_*_FLAGS not actually being a CMake list; separate_arguments(ROOT_CXX_FLAGS); separate_arguments(ROOT_EXE_LINKER_FLAGS). # Setting up the recommended ROOT flags; add_library(ROOT::Flags IMPORTED INTERFACE); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_OPTIONS ${ROOT_CXX_FLAGS}); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_DEFINITIONS ${ROOT_DEFINITIONS}); #set_property(TARGET ROOT::Flags APPEND PROPERTY; # INTERFACE_LINK_LIBRARIES ${ROOT_EXE_LINKER_FLAGS}). # Adding an exectuable program and linking to needed ROOT libraries; add_executable(RootSimpleExample SimpleExample.cxx); target_link_libraries(RootSimpleExample PUBLIC; ROOT::Core ROOT::Imt ROOT::RIO ROOT::Net ROOT::Hist; ROOT::Graf ROOT::Graf3d ROOT::Gpad ROOT::Tree ROOT::TreePlayer; ROOT::Rint ROOT::Postscript ROOT::Matrix ROOT::Physics; ROOT::MathCore ROOT::Thread ROOT::RooFit; ROOT::Flags); ```; > Note: I'm listing all the libraries that ROOT adds by default, though due to dependency resolution, a few of them might not be needed to achieve the same result. After:. ```cmake; cmake_minimum_required(VERSION 3.4). project(RootSimpleExample LANGUAGES CXX); find_package(ROOT CONFIG REQUIRED COMPONENTS RooFit). # Adding an exectuable program and linking to needed ROOT libraries; add_executable(Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959:1595,INTERFACE,INTERFACE,1595,https://root.cern,https://github.com/root-project/root/pull/1959,1,['INTERFACE'],['INTERFACE']
Integrability,"rters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x4848865: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==270704== by 0x66C8401: deallocate (new_allocator.h:145); ==270704== by 0x66C8401: deallocate (alloc_traits.h:492); ==270704== by 0x66C8401: _M_destroy (basic_string.h:245); ==270704== by 0x66C8401: _M_dispose (basic_string.h:240); ==270704== by 0x66C8401: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:317); ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:20916,depend,depends,20916,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"rts of errors. Consider the following example code:. ```Python; from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf; ; allvars = []; ; xvals = RooArgList(); variables = RooArgSet(); muvals = RooArgList(); ; for i in range(0,3):; mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10); muvals.add(mu); x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.); xvals.add(x); variables.add(x); ; # side problem: unless these two lines are executed, the python garbage collector deletes mu and x; # causing a segfault in the construction of the RooMultiVarGaussian; allvars.append(mu); allvars.append(x); ; covmat = TMatrixDSym(3); covmat[0][0] = 1.; covmat[1][1] = 2.; covmat[2][2] = 3.; covmat[0][1] = 0.2; covmat[1][0] = 0.2; covmat[1][2] = 0.6; covmat[2][1] = 0.6; covmat[2][0] = 0.3; covmat[0][2] = 0.3; ; nevents = 1000.; mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat); allvars.append(mvg); ; ws = RooWorkspace(""ws""); ws.Import(mvg); mc = RooStats.ModelConfig(""model"",""model"",ws); mc.SetObservables(xvals); mc.SetParametersOfInterest(muvals); mc.SetPdf(mvg.GetName()); ; # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian; data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()); ```; ; Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once.; Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000); extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm); ws.Import(extmvg,RooFit.RecycleConflictNodes()); mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws); mc_cnt.SetObservables(xvals); mc_cnt.SetParametersOfInterest(muvals); mc_cnt.SetPdf(extmvg.GetName()); ; data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet())",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7967:1473,wrap,wrapping,1473,https://root.cern,https://github.com/root-project/root/issues/7967,1,['wrap'],['wrapping']
Integrability,"runtest_protocol; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_callers.py"", line 77 in _multicall; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_manager.py"", line 115 in _hookexec; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_hooks.py"", line 493 in __call__; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/main.py"", line 350 in pytest_runtestloop; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_callers.py"", line 77 in _multicall; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_manager.py"", line 115 in _hookexec; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_hooks.py"", line 493 in __call__; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/main.py"", line 325 in _main; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/main.py"", line 271 in wrap_session; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/main.py"", line 318 in pytest_cmdline_main; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_callers.py"", line 77 in _multicall; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_manager.py"", line 115 in _hookexec; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_hooks.py"", line 493 in __call__; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/config/__init__.py"", line 169 in main; File ""/github/home/ROOT-CI/src/roottest/python/common.py"", line 46 in run_pytest; File ""/github/home/ROOT-CI/src/roottest/python/basic/PyROOT_basictests.py"", line 446 in <module>. Extension modules: libcppyy3_12, libcppyy, libROOTPythonizations3_12, libROOTPythonizations (total: 4); *** Break *** segmentation violation; /usr/bin/timeout: the monitored command dumped core. -- END TEST OUTPUT --; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:186 (message):; got exit code Segmentation fault but expected 0; ```. It's not exactly the same test that fails, but it's interesting to know anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14098#issuecomment-1837114968:4726,message,message,4726,https://root.cern,https://github.com/root-project/root/pull/14098#issuecomment-1837114968,1,['message'],['message']
Integrability,"ry useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:; - A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; - A `TTreeReader`-like interface, `TTreeReaderFast`. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize *and* apply user code, rather than two.; - The intent is that this interface can be extended in the future and used by `TDataFrame`, provided we can make `TDataFrame` sufficiently fast.; - A Python-based `numpy` export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; - The `numpy` interface is low-level for Python; we intend to further explore the ideal high-level interface through projects such as https://github.com/diana-hep/plur. So indeed, lot's of experimental / internal interface work here - but we felt that (a) a sufficient amount depends on this and (b) we've demonstrated enough utility that it was time to start talking about merging. (With many thanks to @jpivarski for driving",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943:1507,interface,interface,1507,https://root.cern,https://github.com/root-project/root/pull/943,1,['interface'],['interface']
Integrability,"s is that help messages are automatically generated:; ```; OVERVIEW: rootcling; USAGE: rootcling [options] <output dictionary file> <list of dictionary header files> <LinkDef file>; ; OPTIONS:; ; Generic Options:; ; -help - Display available options (-help-hidden for more); -help-list - Display list of available options (-help-list-hidden for more); -version - Display the version of this program; ; rootcling common options:; ; -D=<string> - Specify defined macros.; -I=<string> - Specify an include path.; -W=<string> - Specify compiler diagnostics options.; -c - Deprecated, legacy flag which is ignored.; -cxxmodule - Generate a C++ module.; -excludePath=<string> - Do not store the <path> in the dictionary.; -f - Overwrite <file>s.; -failOnWarnings - Fail if there are warnings.; -inlineInputHeader - Does not generate #include <header> but expands the header content.; -interpreteronly - Generate minimal dictionary for interactivity (without IO information).; -m=<string> - The list of dependent modules of the dictionary.; -multiDict - If this library has multiple separate LinkDef files.; -noIncludePaths - Do not store include paths but rely on the env variable ROOT_INCLUDE_PATH.; -p - Deprecated, legacy flag which is ignored.; -rmf=<string> - Generate a rootmap file with the specified name.; -rml=<string> - Generate rootmap file.; -s=<string> - The path to the library of the built dictionary.; -selSyntaxOnly - Check the selection syntax only.; -split - Split the dictionary into two parts: one containing the IO (ClassDef)information and another the interactivity support.; Choose verbosity level:; -v - Show errors (default).; -v0 - Show only fatal errors.; -v1 - Show errors (the same as -v).; -v2 - Show warnings.; -v3 - Show notes.; -v4 - Show information.; ```; ; This patch deprecates:; 1) +P, +V, +STUB, -gccxml, -cint, -reflex -- they are old CINT legacy options which had no meaning in rootcling.; 2) -p, -c -- remove old options used by rootcling -generate-pch as now th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4171:1522,depend,dependent,1522,https://root.cern,https://github.com/root-project/root/pull/4171,1,['depend'],['dependent']
Integrability,"s is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In this pull request, we introduce support for legacy collection proxies derived from the `TVirtualCollectionProxy` class, although in later stages, RNTuple might provide this functionality through an interface different interface. At a bare minimum, the user is required to provide an implementation for the following functions in `TVirtualCollectionProxy`:; - `HasPointers()`, `GetProperties()`, `GetValueClass()`, `GetType()`, `Sizeof()`: for general information about the collection and its value type.; - `Sizeof()`, `At()`, `Clear()`, and `Insert()`: for element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyClass>(""fieldKlass""); // Regular class; auto fieldCollection = model->MakeField<ProxiedCollection>(""fieldCollection""); // Class with associated collection proxy; ```; **This tag is not required when using the type-erased interface** (i.e., `RFieldBase::Create()`), as the use of a collection proxy can be determined at run time vi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11525:1446,interface,interface,1446,https://root.cern,https://github.com/root-project/root/pull/11525,1,['interface'],['interface']
Integrability,"s modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used functio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:1883,integrat,integrationRange,1883,https://root.cern,https://github.com/root-project/root/pull/11049,2,['integrat'],['integrationRange']
Integrability,"s passed:; test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec; ```. New pass manager:; ```bash; dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose; UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Add coverage exclude regular expressions.; UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Test project /home/dvalapar/work/root/newpassmanager; Constructing a list of tests; Ignore test: test-stressproof; Ignore test: roottest-cling-parsing-semicolon; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 338; Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake""; 338: Environment variables: ; 338: ROOT_HIST=0; 338: Test timeout computed to be: 1500; 338: ****************************************************************************; 338: * Starting stress INTERPRETER *; 338: ****************************************************************************; 338: FuncCall ................................................................ OK; 338: STLDict ................................................................. OK; 338: Reflection .............................................................. OK; 338: NestedStatements .......................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1915174574:3394,depend,dependency,3394,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1915174574,1,['depend'],['dependency']
Integrability,"s renaming a class. See the reproducer for more details. We need to verify if whether `TTreeReader` and thus `RDataFrame` suffer from the same issue. ### Reproducer. [conversion.tgz](https://github.com/root-project/root/files/14105386/conversion.tgz); run:; ```; root.exe -b -l -q writedata.C+; # Read with the 'old' schema, the result is accurate.; root.exe -b -l -q oldread.C+; # Read with the complex rule ; TTree::Scan is broken; root.exe -b -l -q readwithrule.C+; # Read with the renaming rule ; TTree::Scan only works for accessing the inner content in the case of a split branch.; root.exe -b -l -q readwithrenaming.C+; ```. The correct output for the full object printing part of the reading script is:; ```; Content of branch seg_split.; Wrapper; CSCSegment::someValue = 1; CSCSegment::theDuplicateSegments size = 2; MatchedCSCSegment::someValue = 2; MatchedCSCSegment::someValue = 3; Content of branch seg_unsplit.; Wrapper; CSCSegment::someValue = 1; CSCSegment::theDuplicateSegments size = 2; MatchedCSCSegment::someValue = 2; MatchedCSCSegment::someValue = 3; ```. The expected result of the `TTree::Scan` part of the reading script is:. ```; ******************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments@.size *; ******************************************************************; * 0 * 0 * 2 *; ******************************************************************; **************************************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments.someValue *; **************************************************************************************; * 0 * 0 * 2 *; * 0 * 1 * 3 *; **************************************************************************************; ******************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments@.size *; ******************************************************************; * 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14493:1146,Wrap,Wrapper,1146,https://root.cern,https://github.com/root-project/root/issues/14493,1,['Wrap'],['Wrapper']
Integrability,"s-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/davix/inc -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RActionBase.cxx.o -MF tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RActionBase.cxx.o.d -o tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RActionBase.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RActionBase.cxx ; - /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc -Iinclude -I/mnt/build/workspace/root-pullrequests-build/root/tree/dataframe -Ibuiltins/davix/DAVIX-prefix/include/davix -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/gpad/inc -I/mnt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-541875642:1975,depend,depend,1975,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-541875642,1,['depend'],['depend']
Integrability,"s-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151527/console).; ### Errors:; - [2022-08-09T10:02:47.048Z] ghprbPullLongDescription=This fixes the following compilation errors on Windows:\r\n```\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr&lt;ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;&gt; ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr&lt;ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;&gt; ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153#issuecomment-1209201215:864,message,message,864,https://root.cern,https://github.com/root-project/root/pull/11153#issuecomment-1209201215,1,['message'],['message']
Integrability,"s/musrfit/src/classes PUserFcnBase.h /Users/suter_a/Applications/musrfit/src/include/PUserFcnBaseLinkDef.h; cd /Users/suter_a/Applications/musrfit/build && /opt/local/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/suter_a/Applications/musrfit /Users/suter_a/Applications/musrfit/src/classes /Users/suter_a/Applications/musrfit/build /Users/suter_a/Applications/musrfit/build/src/classes /Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake --color=; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/CMakeDirectoryInformation.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Scanning dependencies of target PUserFcnBase; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/classes/CMakeFiles/PUserFcnBase.dir/build.make src/classes/CMakeFiles/PUserFcnBase.dir/build; ... And all the further root_generate_dictionary work as well. Does this help?. Cheers,; Andreas. PS: Machine I have tested it on: ; Darwin Kernel Version 21.3.0: Wed Jan 5 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_ARM64_T8101 arm64. ________________________________. Paul Scherrer Institut. Dr. Andreas Suter; Laboratory for Muon-Spin Spectroscopy; Swiss Muon Source SµS; WLGA/119; Forschungsstrasse 111; CH - 5232 Villigen PSI; Switzerland. Tel.: +41 (0)56 310 4238; ________________________________. > On 7 Mar 2022, at 20:08, Axel Naumann ***@***.***> wrote:; > ; > ; > Can you share how you determined that DYLD_LIBRARY_PATH works?; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/issues/10062#issuecomment-1061033099>, or unsubscribe <https://github.com/notification",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1061481610:4757,depend,dependencies,4757,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1061481610,1,['depend'],['dependencies']
Integrability,"s/musrfit/src/include -I/Users/suter_a/Applications/musrfit/src/classes PUserFcnBase.h /Users/suter_a/Applications/musrfit/src/include/PUserFcnBaseLinkDef.h; cd /Users/suter_a/Applications/musrfit/build && /opt/local/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/suter_a/Applications/musrfit /Users/suter_a/Applications/musrfit/src/classes /Users/suter_a/Applications/musrfit/build /Users/suter_a/Applications/musrfit/build/src/classes /Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake --color=; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/CMakeDirectoryInformation.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Scanning dependencies of target PUserFcnBase; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/classes/CMakeFiles/PUserFcnBase.dir/build.make src/classes/CMakeFiles/PUserFcnBase.dir/build; ... And all the further root_generate_dictionary work as well. Does this help?. Cheers,; Andreas. PS: Machine I have tested it on: ; Darwin Kernel Version 21.3.0: Wed Jan 5 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_ARM64_T8101 arm64. ________________________________. Paul Scherrer Institut. Dr. Andreas Suter; Laboratory for Muon-Spin Spectroscopy; Swiss Muon Source SµS; WLGA/119; Forschungsstrasse 111; CH - 5232 Villigen PSI; Switzerland. Tel.: +41 (0)56 310 4238; ________________________________. > On 7 Mar 2022, at 20:08, Axel Naumann ***@***.***> wrote:; > ; > ; > Can you share how you determined that DYLD_LIBRARY_PATH works?; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/issues/10062#issuecomment-1061033099>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1061481610:4729,depend,depend,4729,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1061481610,1,['depend'],['depend']
Integrability,"s/sftnight/build/release/RootTestDriver.cmake:237 (message):; 889: error code: -529697949; 889:; 889:; 12/16 Test #889: tutorial-dataframe-df017_vecOpsHEP-py ....................***Failed 5.05 sec; test 890; Start 890: tutorial-dataframe-df019_Cache-py. 890: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df019_Cache.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 890: Environment variables:; 890: ROOT_HIST=0; 890: Test timeout computed to be: 1500; 890: Error in <TChain::LoadTree>: Cannot find tree with name ÉB D═ in file C:\Users\sftnight\build\release\tutorials\hsimple.root; 890: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 890: error code: -529697949; 890:; 890:; 13/16 Test #890: tutorial-dataframe-df019_Cache-py ........................***Failed Error regular expression found in output. Regex=[Error in] 4.65 sec; test 891; Start 891: tutorial-dataframe-df021_createTGraph-py. 891: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df021_createTGraph.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 891: Environment variables:; 891: ROOT_HIST=0; 891: Test timeout computed to be: 1500; 891: input_line_39:2:28: error: use of undeclared identifier 'x'; 891: auto lambda0 = [](){return x*x; 891: ^; 891: input_line_39:2:30: error: use of undeclared identifier 'x'; 891: auto lambda0 = [](){return x*x; 891: ^; 891: CMake Error at C:/Users/sftnight/build/release/RootTes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:13183,message,message,13183,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,"s://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:115; #12 0x00005620a5400eba in handle_notebook_option (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:39; #13 0x00005620a540109c in main (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:78; ===========================================================. Root > .q; ```. - If compiled, there is no crash, but you get a cryptic error:; ```; root -l main.cpp+; root [0] ; Processing main.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./main_cpp.so; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ```; - If one uses `void main` instead of `int main`, you get this error:; ```; /tmp/main.cpp:2:1: error: 'main' must return 'int'; void main(); ^~~~; int; ```; - If one uses an unnamed macro, the problem is not there. ### Expected behavior; An error should be printed if the user tries to execute such kind of named macros, rather than the current crashes or error messages. ### To Reproduce; - Write a file called `main.cpp` with the content `int main() { return 0;}`; - root -l main.cpp. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2022, 13:52:01 |; | From heads/master@v6-25-01-4921-gdfd0f52391 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://stackoverflow.com/questions/74247557/warning-failed-to-call-main-to-execute-the-macro/74445395#74445395",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11707:3813,message,messages,3813,https://root.cern,https://github.com/root-project/root/issues/11707,1,['message'],['messages']
Integrability,"says ""Add **a** module for experimental/string_view""; The commit says:. That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context. The code says:; ```; module ""experimental/string_view"" {; export *; header ""experimental/algorithm""; }; ```; ; The commit content as-is seems completely unrelated to the commit log as far as I could tell (without doing research on the relationship between `range_base`, `string_view` and `algorithm`.; ; So I pondered whether the fix was the right fix for a problem I did not know anything about ... ; ; The right thing to do would have probably be have been to request a complete explanation of what the original problem was, what was the mechanism leading to the error and why this solution was the best solution. This was obviously much more than this seemingly simple fix required. So instead I thought to ask for a very low cost, straight forward solution: simply copy/pasting the error with no additional effort to explain in detail. > Can you suggest a commit message which adds enough information which makes me happy as well?. That requires to paraphrase the error and add a few more details. ```; That should fix a recent nightly failure with gcc11. The failure presented during dictionary generation in a C++14 and C++17 build and incorrectly complained about needing the 'cplusplus20' feature for the 'std.bits/ranges_base.h' module. The issue was triggered by an inclusion of `<bits/ranges_base.h>` from `string_view`. This issue exists on gcc11 and gcc12 (and I guess any gcc that made changes to libstdc++ and the experimental/string_view header file). . It seems the issue is solved by exporting `algorithm` as part of the `string_view` module.; ```. Actually, I still don't know why adding `algorithm` fixes a problem with `range_base.h`, so I can't add that to the commit ... maybe it is something like ""... by avoiding to use the module maps provided by the standard library in those case""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1430326540:1111,message,message,1111,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1430326540,2,['message'],['message']
Integrability,"scribed by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:2007,message,message,2007,https://root.cern,https://github.com/root-project/root/pull/12449,1,['message'],['message']
Integrability,"sdk; drwxr-xr-x 7 root wheel 224 8 Jun 2023 MacOSX12.3.sdk; lrwxr-xr-x 1 root wheel 14 8 Jun 2023 MacOSX12.sdk -> MacOSX12.3.sdk; drwxr-xr-x 7 root wheel 224 1 May 00:16 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 17 Sep 17:17 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 21 Aug 17:15 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 17 Sep 17:16 MacOSX15.sdk -> MacOSX15.0.sdk; sftnight@macphsft31 ~ % clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -I/usr/local/include -internal-isystem /Library/Developer/CommandLine",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:9931,contract,contract,9931,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['contract'],['contract']
Integrability,"se of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================; ```. **Expected behavior**. The output messages should be:. ```; Memory mapped file: hsimple.map; Title: Memory Mapped Hist; Option: CREATE; Mapped Memory region: 0xb46a5000 - 0xb46be000 (0.10 MB); Current breakval: 0xb46b0000; Object Class Size ; hpx TH1F 1024; ```. **To Reproduce:**. The source code test.cpp I am using follows:; ```cpp; // test.cpp; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TH1F.h""; #include ""TH2F.h""; #include ""TMapFile.h""; #include ""TRandom.h"". void hprod();. #ifndef __CINT__ ; int main(int argc, char **argv); {; TApplication* theApp = new TApplication(""Shared Mem - Producer"", &argc, argv);; hprod();; theApp->Run();; }; #endif . void hprod(); {; TH1F *hpx;; TH2F *hpxpy;; TProfile *hprof;; TMapFile::SetMapAddress(0xb46a5000);; TMapFile *mfile = TMapFile::Create(""hsimple.map"",""RECREATE"", 100000,""Memory Mapped Hist"");; hpx = new TH1F(""hpx"",""This is the px distribution"",100,-4,4);; ; // Print status of mapped file; mfile->Print();; ; // Endless loop filling histograms with random numbers; Float_t ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11353:2530,message,messages,2530,https://root.cern,https://github.com/root-project/root/issues/11353,1,['message'],['messages']
Integrability,se/v7/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/clib/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/cont/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/foundation/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/macosx/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/unix/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/winnt/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/clingutils/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/meta/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/gui/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/textinput/inc -I/opt/fairsoft/source/nov20/build/Build/root/include -I/opt/fairsoft/source/nov20/build/Source/root -I/opt/local/include -I/opt/fairsoft/source/nov20/build/Source/root/builtins/xxhash -I/opt/local/include -I/opt/local/include -writeEmptyRootPCM ROOT/StringConv.hxx ROOT/TExecutor.hxx ROOT/TSequentialExecutor.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TError.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6839:3427,Message,MessageTypes,3427,https://root.cern,https://github.com/root-project/root/issues/6839,1,['Message'],['MessageTypes']
Integrability,"seInternal(llvm::StringRef) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #5 0x00007fb1c572d9dd in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #6 0x00007fb1c56a16c0 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) (); from /home/b/bendavid/rootdev19/install/lib/libCling.so; #7 0x00007fb1c56a2d3a in cling::Interpreter::DeclareCFunction(llvm::StringRef, llvm::StringRef, bool, cling::Transaction*&) (); from /home/b/bendavid/rootdev19/install/lib/libCling.so; #8 0x00007fb1c56a2f1c in cling::Interpreter::compileFunction(llvm::StringRef, llvm::StringRef, bool, bool) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #9 0x00007fb1c562d96a in TClingCallFunc::compile_wrapper (this=this@entry=0x555ecdd48270, wrapper_name=""__cf_10"", ; wrapper=""#pragma clang diagnostic push\n#pragma clang diagnostic ignored \""-Wformat-security\""\n__attribute__((used)) __attribute__((annotate(\""__cling__ptrcheck(off)\"")))\nextern \""C\"" void __cf_10(void* obj, int narg""..., withAccessControl=withAccessControl@entry=true); at /home/b/bendavid/rootdev19/root/core/metacling/src/TClingCallFunc.cxx:268; #10 0x00007fb1c56357e0 in TClingCallFunc::make_wrapper (this=0x555ecdd48270) at /home/b/bendavid/rootdev19/root/core/metacling/src/TClingCallFunc.cxx:1120; #11 0x00007fb1c5635ce0 in TClingCallFunc::IFacePtr (this=0x555ecdd48270) at /home/b/bendavid/rootdev19/root/core/metacling/src/TClingCallFunc.cxx:2304; #12 0x00007fb1ca95d7ab in GetCallFunc (method=93865664483216) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:727; #13 WrapperCall (method=93865664483216, nargs=1, args_=0x7ffd174f83d0, self=0x7fb1ca9130a0 <ROOT::Internal::GetROOT1()::alloc>, result=0x7ffd174f8140); at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-back",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010779015:4652,wrap,wrapper,4652,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010779015,1,['wrap'],['wrapper']
Integrability,"sed on the availability of YML/JSON. Something like `roofit/YMLFactory`?; > code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?. I didn't really check that. Maybe we do this when there's a bit less noise after splitting off the const-ness fixes and interface changes.; > build system: Is the way I encoded the optional dependency acceptable?. I don't know. @oshadura? @Axel-Naumann ?; > class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. As long as classes and function names say what these things do, you have quite some freedom. Maybe just check whether the surrounding code capitalises functions or not. > Please don't review yet:; > ; > lack of functionality - more things will be added over time; > individual violations of the style guide (e.g. missing spaces or newlines). Sure, NP. > Please specifically suggest where documenation should be added!; > Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also for the implementations of that, or only for the RooFit-side of the code?. It would be good if every function and class had documentation. They are best placed in the implementation like in; https://root.cern.ch/doc/master/RooAbsPdf_8cxx_source.html. Header-only functions can have small docstrings in the header. The class documentation should explain what the class does, maybe give examples of how to use it. The function documentation should at least say what the function does, what kind of inputs it needs, and what it outputs.; An a-bit-too-long example is:; https://root.cern.ch/doc/master/RooAbsPdf_8cxx_source.html#l01255. **EDIT**:; Oh, and the fewer `#ifdef`s, the better. I didn't check if you can actually get around them, but just saying after I saw the last commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5151#issuecomment-598765709:2494,message,message,2494,https://root.cern,https://github.com/root-project/root/pull/5151#issuecomment-598765709,3,"['Interface', 'message']","['Interface', 'message']"
Integrability,segfault in TClass::InheritsFrom() depending on linking order,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6670:35,depend,depending,35,https://root.cern,https://github.com/root-project/root/issues/6670,1,['depend'],['depending']
Integrability,"serDataCleanup>(*this);; + fCleanupHandle = std::make_unique<RBrowserDataCleanup>(this);; R__LOCKGUARD(gROOTMutex);; gROOT->GetListOfCleanups()->Add(fCleanupHandle.get());; }. ```. And the test gives even more errors then before:. ```; 1548: -- BEGIN OUTDIFF OUTPUT --; 1548: --- /home/vpadulan/Programs/rootproject/roottest/root/core/execStatusBitsCheck.ref	Wed Jun 9 11:08:31 2021; 1548: +++ /home/vpadulan/Programs/rootproject/rootbuild/execstatusbitcheck-fix-v2/roottest/root/core/execStatusBitsCheck.log	Mon Jul 17 18:19:46 2023; 1548: @@ -14,5 +14,29 @@; 1548: Bit 13 declared in TObject as kInvalidObject; 1548: Bit 14 declared in TStreamerElement as kWholeObject; 1548: Bit 21 declared in TStreamerElement as kWarned; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initializat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:2184,rout,routine,2184,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,1,['rout'],['routine']
Integrability,sft-jenkins.cern.ch/job/root-pullrequests-build/11684/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11684/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11684/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11684/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11684/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11684/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11684/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11684/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11684/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/). And 37 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1317#issuecomment-344256772:3027,interface,interface,3027,https://root.cern,https://github.com/root-project/root/pull/1317#issuecomment-344256772,2,['interface'],['interface']
Integrability,"so .... in short your right and the patch does not go far enough. historically TTreeProcessor[MT] was (one of) the first to use multi-threading on TFile. TFile::ReadProcessID was found to be performance/scaling critical so much so that it lead to the introduction of the SpinLocks and the ReadWrite locks ... and at the time there was no point in having the lock taken when that code was not active ... Obviously this is no longer the case. The extension of the use case means that actually we need to protect TFile::ReadProcessID from other use of the TProcessID interfaces (the only other direct user of the collection ```TProcessID::GetPIDs```. This means that we should probably no longer rely on ```TFile::ReadProcessID``` using its own lock. . Also related, we ought to actually leverage the ReadWrite lock in TProcessID.cxx where some of the write section are currently too long, some are missing and some items likely need to become atomic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-608729545:564,interface,interfaces,564,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-608729545,1,['interface'],['interfaces']
Integrability,"source/build/ginclude/compiledata.h; -- ROOT Configuration . System Linux-5.15.86; Processor 8 core Intel(R) Core(TM) i7-10700 CPU @ 2.90GHz (x86_64); Build type Release; Install path /nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00; Compiler GNU 11.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling dataframe davix exceptions gdml gnuinstall http imt mathmore mlp minuit2 opengl pyroot roofit rpath runtime_cxxmodules shared ssl tmva tmva-cpu tmva-pymva spectrum x11 xml xrootd; -- Configuring done; CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:735 (add_dependencies):; The dependency target ""install-clang"" of target ""install-clang++"" does not; exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:736 (add_dependencies):; The dependency target ""install-clang-stripped"" of target; ""install-clang++-stripped"" does not exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:17482,depend,dependency,17482,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['depend'],['dependency']
Integrability,sources/root/core/cont/inc -I/Users/vvassilev/workspace/sources/root/core/gui/inc -I/Users/vvassilev/workspace/sources/root/core/meta/inc -I/Users/vvassilev/workspace/sources/root/core/clib/inc -I/Users/vvassilev/workspace/sources/root/core/rint/inc -I/Users/vvassilev/workspace/sources/root/core/zip/inc -I/Users/vvassilev/workspace/sources/root/core/thread/inc -I/Users/vvassilev/workspace/sources/root/core/textinput/inc -I/Users/vvassilev/workspace/sources/root/core/clingutils/inc -I/Users/vvassilev/workspace/sources/root/core/base/v7/inc -I/Users/vvassilev/workspace/sources/root/core/foundation/v7/inc -I/Users/vvassilev/workspace/sources/root/core/unix/inc -I/Users/vvassilev/workspace/sources/root/core/macosx/inc -I/usr/local/include -I/Users/vvassilev/workspace/sources/root/builtins/xxhash -I/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881#issuecomment-850791642:3523,Message,MessageTypes,3523,https://root.cern,https://github.com/root-project/root/issues/7881#issuecomment-850791642,1,['Message'],['MessageTypes']
Integrability,"space/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3297:25: error: expected primary-expression before ‘&gt;’ token ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3297:27: error: ‘mask3’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3307:4: error: ‘MaskedAssign’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3307:33: error: expected primary-expression before ‘&gt;’ token . And 62 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-ini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401591340:1964,depend,depends,1964,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401591340,2,['depend'],['depends']
Integrability,splitcoll-arrayview needs a dictionary to run. This creates a dependency; between dictionary generation step and test target to fix a build-system; race condition.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5715:62,depend,dependency,62,https://root.cern,https://github.com/root-project/root/pull/5715,1,['depend'],['dependency']
Integrability,spurrious cmake message about AfterImage with -Dminimal=ON,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15027:16,message,message,16,https://root.cern,https://github.com/root-project/root/issues/15027,1,['message'],['message']
Integrability,"sr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. sftnight@macphsft31 ~ % clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:13997,contract,contract,13997,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['contract'],['contract']
Integrability,"sr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. sftnight@macphsft34 ~ % clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.1.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:22801,contract,contract,22801,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['contract'],['contract']
Integrability,ssage logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/TransformationHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Types.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/VarTransformHandler.h: mutable MsgLogger* f,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2515,message,message,2515,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"ssages are particularly problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). ### Possible negative side-effects. #### Breaking changes?. This proposal does not change the output for print level 0, but there is a minor change for print level 1. It changes the output of scripts/software that uses print level 1, because previously level 1 meant ""print errors and info"" while in the new hierarchy it means ""print errors and warnings"". I think this is a minor effect, which has to be documented in the next changelog but it cannot cause backward incompatibilities or breakage. #### Reduced performance?. The impact on performance is expected to be negligible. I propose to place additional calls into the compiled code for everyone, but these calls are not executed unless the user picks a high print level. For a low print level, there is just the minor additional cost of a branch, which moreover can be predicted very well by the CPU, so the added cost should be almost zero. Furthermore, these branches do not happen in hot code paths. Hot paths are inside the cost function (which are unaffected) and in the linear algebra routines that Minuit2 uses (which are not instrumented with debug messages). ### Positive side-effects for wrappers and frontends. An important positive side effect for wrappers like iminuit is that we could show our users debug messages, too. Right now, we cannot, because DEBUG messages can only be enabled at compile-time, not at run-time. The DEBUG messages are also problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). For wrappers like iminuit, it is important to redirect the log to its own streams that can be readout and displayed in Python, for example in a Jupyter notebook session (std::cerr and std::cout always go to the terminal and are invisible in a Jupyter notebook).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:3682,rout,routines,3682,https://root.cern,https://github.com/root-project/root/issues/6421,8,"['message', 'rout', 'wrap']","['messages', 'routines', 'wrappers']"
Integrability,ssgraphics_interpreted/); - [projectroot.test.test_TFormulaTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68999/testReport/projectroot/test/test_TFormulaTests/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_nodes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68999/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_nodes/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68999/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68999/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68999/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68999/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68999/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68999/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68999/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/). And 6 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4446#issuecomment-537447101:1877,interface,interface,1877,https://root.cern,https://github.com/root-project/root/pull/4446#issuecomment-537447101,2,['interface'],['interface']
Integrability,"ssl=ON -Dtmva=ON -Dvdt=OFF -Dwebgui=OFF -Dxml=ON -Dxrootd=ON -DC_INCLUDE_DIRS=/nix/store/nasgvbblxi25r6y1s82il4m0m4ghib68-glibc-2.35-224-dev/include ; -- The C compiler identification is GNU 11.3.0; -- The CXX compiler identification is GNU 11.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /nix/store/bslw1kzx445wxp08ykq2vdsgnr516vcq-git-2.39.1/bin/git (found version ""2.39.1"") ; -- Checking internet connectivity; -- Checking internet connectivity - failed: will not automatically download external dependencies; -- Looking for Python; -- Found Python3: /nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python3.10 (found version ""3.10.9"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_INCLUDE_DIRS Python2_LIBRARIES Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed) ; Reason given by package: ; Interpreter: Wrong major version for the interpreter ""/nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python"". -- Found GCC. Major version 11, minor version 3; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Releas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:5295,depend,dependencies,5295,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['depend'],['dependencies']
Integrability,"st&, XrdCl::LocalFileHandler*) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD2AC91: XrdCl::FileStateHandler::IssueRequest(XrdCl::URL const&, XrdCl::Message*, XrdCl::ResponseHandler*, XrdCl::MessageSendParams&) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD2E324: XrdCl::FileStateHandler::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned short, unsigned short, XrdCl::ResponseHandler*, unsigned short) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD27325: XrdCl::File::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, XrdCl::OpenFlags::Flags, XrdCl::Access::Mode, XrdCl::ResponseHandler*, unsigned short) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD274BC: XrdCl::File::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, XrdCl::OpenFlags::Flags, XrdCl::Access::Mode, unsigned short) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== Uninitialised value was created by a stack allocation; ==2505== at 0x4E3637D: connect (in /srv/workDir/e8d1c011-6cad-4b4c-b0ad-5b9f65b33eb0/lib64/wrapper.so); ```. right?. If I read this correctly the uninitialised value was not created by the client:; ```; ==2505== Uninitialised value was created by a stack allocation; ==2505== at 0x4E3637D: connect (in /srv/workDir/e8d1c011-6cad-4b4c-b0ad-5b9f65b33eb0/lib64/wrapper.so); ```. the `wrapper.so` probably holds the preloads for the posix calls.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759513859:3183,wrap,wrapper,3183,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759513859,3,['wrap'],['wrapper']
Integrability,"st&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1594); ==92602== by 0x1772C99B: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796); ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733); ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754); ==92602== ; ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined); ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess); ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined); ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess); ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34); ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966); ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506); ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354); ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880); ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758); ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817); ==92602== by 0x1134DAEF: TCling::Initialize() (T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:3096,depend,depends,3096,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,"stDriver.cmake""; 881: Environment variables:; 881: ROOT_HIST=0; 881: Test timeout computed to be: 1500; 881: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 881: error code: -529697949; 881:; 881:; 4/16 Test #881: tutorial-dataframe-df004_cutFlowReport-py ................***Failed 4.53 sec; test 882; Start 882: tutorial-dataframe-df006_ranges-py. 882: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df006_ranges.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 882: Environment variables:; 882: ROOT_HIST=0; 882: Test timeout computed to be: 1500; 882: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 882: error code: -529697949; 882:; 882:; 5/16 Test #882: tutorial-dataframe-df006_ranges-py .......................***Failed 4.42 sec; test 883; Start 883: tutorial-dataframe-df007_snapshot-py. 883: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df007_snapshot.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 883: Environment variables:; 883: ROOT_HIST=0; 883: Test timeout computed to be: 1500; 883: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 883: error code: -529697949; 883:; 883:; 6/16 Test #883: tutorial-dataframe-df007_snapshot-py .....................***Failed 4.47 sec; test 884; Start 884: tutorial-dataframe-df008_createDataSetFromScratch-py. 884: Test command: ""C:\Program Files\CMake\bin\cma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:4001,message,message,4001,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,"stack trace with ROOT/Cling build with debug is below. Full build logs are available [here](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8fe9c7/41293/build-logs/). https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8fe9c7/41293/build-logs/CUDADataFormats/PortableTestObjects/log.html; ```; 0.	Program arguments: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling -reflex -f tmp/el8_amd64_gcc12/src/CUDADataFormats/PortableTestObjects/src/CUDADataFormatsPortableTestObjects/a/CUDADataFormatsPortableTestObjects_xr.cc -inlineInputHeader -failOnWarnings -rmf tmp/el8_amd64_gcc12/src/CUDADataFormats/PortableTestObjects/src/CUDADataFormatsPortableTestObjects/a/CUDADataFormatsPortableTestObjects_xr.rootmap -rml libCUDADataFormatsPortableTestObjects.so -m CUDADataFormatsCommon_xr_rdict.pcm -m DataFormatsPortableTestObjects_xr_rdict.pcm -m DataFormatsCommon_xr_rdict.pcm -m DataFormatsProvenance_xr_rdict.pcm -DALPAKA_DEFAULT_HOST_MEMORY_ALIGNMENT=128 -DALPAKA_DISABLE_VENDOR_RNG -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=120301 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=\""CMSSW_14_2_ROOT6_X_2024-09-03-2300\"" -DPROJECT_NAME=\""CMSSW\"" -DPROJECT_VERSION=\""CMSSW_14_2_ROOT6_X_2024-09-03-2300\"" -Isrc -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/alpaka/1.1.0-4d4f1220bfca9be4c4149ab758d15463/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/pcre/8.43-e34796d17981e9b6d174328c69446455/include -isystem/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-7ac88d918a6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2331366418:150,integrat,integration,150,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2331366418,2,['integrat'],['integration']
Integrability,"state would allow us to throw an exception in `ROOT::ReadFromNetwork()`. But `ROOT::RNetFile::Read()` might want/need to handle the error state, e.g. by retrying, or by accessing alternative sources. It might even be that a partial read is modeled as an error. This would require `ROOT::ReadFromNetwork()` to force the ""immediate exception"" state to a certain value and reset it later - which is error prone and awkward; it shows that we use a global state that needs local knowledge. If ""immediate exception"" is false and `ROOT::ReadFromNetwork()` captures the error and returns it, same for all subsequent frames but `ROOT::RNTupleIterator::operator++()` (which cannot return a `RStatus`), then only `ROOT::RNTupleIterator::operator++()` will throw. This would shorten the stack trace shown by a potential crash to; ```; ROOT::RNTupleIterator::operator++(); UserCode::modelBackground(); ```; - we would not know the stack trace that actually triggered the exception. We would likely have some info captured in the error message (e.g. ""ROOT::ReadFromNetwork() failed to call linux_read_from_network()""), but we'd miss the connection, i.e. `ROOT::RNetFile::Read()`. One way of handling that is by injecting state:; ```; RStatus ROOT::RNetFile::Read() {; RStatus res(ROOT::ReadFromNetwork());; ...; return R__STATUS_PASSTHROUGH(res); // registers res to have passed through ""ROOT::RNetFile::Read()"" by emplacing a frame string *if* in error state.; ```; That's similar to [`llvm::PrettyStackTraceEntry`](https://llvm.org/doxygen/classllvm_1_1PrettyStackTraceEntry.html), see usage [here](https://github.com/llvm/llvm-project/blob/df494f7512b0ecebdf3d7be97695a1b6278c0336/clang/lib/CodeGen/BackendUtil.cpp#L909). FYI, there has been a multi-hundred email discussion on exactly this topic on the C++ committee mailing list, with pretty much two camps: allow error code handling (with potential exceptions) versus just always throw in case of errors, and if that's slow, go fix the compiler / runtime libr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4683#issuecomment-564972730:1423,message,message,1423,https://root.cern,https://github.com/root-project/root/pull/4683#issuecomment-564972730,1,['message'],['message']
Integrability,"std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]!; Y",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:3249,interface,interface,3249,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,1,['interface'],['interface']
Integrability,"std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C86DC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (basic_string.h:738); ==270704== by 0x27216540: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:90825,depend,depends,90825,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566; 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623; 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631; 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633; 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637; 24: call_init.part.0 in ./elf/./elf/dl-init.c:70; 25: call_init in ./elf/./elf/dl-init.c:33; 26: _dl_init in ./elf/./elf/dl-init.c:117; Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s); in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152; 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33; 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72; 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217; 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592; 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970; 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240; 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865; 11: TCling::RegisterModule(ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:20493,depend,depends,20493,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['depend'],['depends']
Integrability,"std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x6B3E442: std::basic_string_view<char, std::char_traits<char> >::_S_compare(unsigned long, unsigned long) (string_view:503); ==270704== by 0x6B3E0DF: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:316); ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565); ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >) (predefined_ops.h:270); ==270704== by 0x27198DBB: __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:140390,depend,depends,140390,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x6B3E459: std::basic_string_view<char, std::char_traits<char> >::_S_compare(unsigned long, unsigned long) (string_view:505); ==270704== by 0x6B3E0DF: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:316); ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565); ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >) (predefined_ops.h:270); ==270704== by 0x27198DBB: __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:147733,depend,depends,147733,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:137:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:155:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:170:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:183:67: warning: ‘ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621890214:2798,interface,interfaces,2798,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621890214,1,['interface'],['interfaces']
Integrability,sts-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/builtins/zlib -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/macosx/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/winnt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core -writeEmptyRootPCM -DSYSTEM_TYPE_unix ROOT/StringConv.hxx ROOT/TExecutor.hxx ROOT/TSequentialExecutor.hxx Buttons.h Bytes.h Byteswap.h Gtypes.h GuiTypes.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TApplicationImp.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBrowser.h TBrowserImp.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TCanvasImp.h TColorGradient.h TColor.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TDatime.h TDirectory.h TEnv.h TError.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TGuiFactory.h TInetAddress.h TInspectorImp.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjectSpy.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3531#issuecomment-473678344:1882,Message,MessageTypes,1882,https://root.cern,https://github.com/root-project/root/pull/3531#issuecomment-473678344,7,['Message'],['MessageTypes']
Integrability,sts-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/mnt/build/workspace/root-pullrequests-build/root/builtins/xxhash -I/mnt/build/workspace/root-pullrequests-build/root/builtins/lz4 -I/mnt/build/workspace/root-pullrequests-build/root/builtins/zlib -I/mnt/build/workspace/root-pullrequests-build/root/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9037#issuecomment-929054415:2645,Message,MessageTypes,2645,https://root.cern,https://github.com/root-project/root/pull/9037#issuecomment-929054415,4,['Message'],['MessageTypes']
Integrability,sts_distrdf_integration_spark_test_friend_trees](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_friend_trees/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_inv_mass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_inv_mass/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_reducer_merge](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_reducer_merge/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_include_headers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_include_headers/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_histo_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_histo_write/); - [projectroot.bindings.experimental.distrdf.tests.unit.backend.pyunittests_distrdf_unit_backend_test_spark](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.unit/backend/pyunittests_distrdf_unit_backend_test_spark/); - [projectroot.bindings.experimental.distrdf.tests.unit.backe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-774106349:1333,integrat,integration,1333,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-774106349,1,['integrat'],['integration']
Integrability,"sults, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only in the logs, in the names of the integrals evaluated; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO, Topic = ROOT.RooFit.Integration). x = ROOT.RooRealVar('x', '', 0, 1). g = ROOT.RooGaussian('g', '', x, RooConst(0.5), RooConst(0.2)); u = ROOT.RooUniform('u', '', x). f = ROOT.RooRealVar('f', '', 0.5, 0, 1); a = ROOT.RooAddPdf('a', '', [g, u], [f]). dt = a.generate({x}, NumEvents = 1000). x.setRange('limited', 0.2, 0.8); x.setRange('full', 0, 1). a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fitTo(dt, Range = 'limited', PrintLevel = -1). a.fixAddCoefRange('full'); a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fixAddCoefRange('limited'); a.fitTo(dt, Range = 'limited', PrintLevel = -1). ```; Compare 6.26 with master. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26 from LCG 102b; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12645:2642,Integrat,Integration,2642,https://root.cern,https://github.com/root-project/root/issues/12645,1,['Integrat'],['Integration']
Integrability,superseeded by the new tutorial taking advantage of the mass calculation routines,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3416#issuecomment-479465096:73,rout,routines,73,https://root.cern,https://github.com/root-project/root/pull/3416#issuecomment-479465096,1,['rout'],['routines']
Integrability,"sure @vgvassilev, do you mean a example file in the repo or just an example in the PR message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8722#issuecomment-885047105:86,message,message,86,https://root.cern,https://github.com/root-project/root/pull/8722#issuecomment-885047105,1,['message'],['message']
Integrability,"sure, it's running. but some questions:; * Shouldn't this `std.modulemap` be generated from the state of the STL include tree?; * Let's say, even if ROOT will compile then with this approach, how does it help an experiment library that uses something from the STL that ROOT does not (by chance), isn't that file then missing from the `std.modulemap`, too?; * Also, isn't this compiler version dependent?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478#issuecomment-1113342325:393,depend,dependent,393,https://root.cern,https://github.com/root-project/root/issues/10478#issuecomment-1113342325,1,['depend'],['dependent']
Integrability,"t 3 Emulation; fSameAs.second ->ffffffffbfEmulation; fSameAs.second.fValue 4 ; ======> EVENT:0; pair. = (Contains*)0xbf8a7458; pair.fShort.first = 49; pair.fShort.second = 2; pair.fSameAs.first = 51; pair.fSameAs.second.fValue = 4; size of pair<char, SameAsShort>: 4; 1; 2; 3; 4; size of pair<char, SameAsShort>: 4; ==> Dumping object at: 0xbf8a7204, class=pair<SameAsShort,short>. first ->ffffffffbfEmulation; first.fValue 11 ; second 12 Emulation; ======> EVENT:0; pair. = (pair<SameAsShort,short>*)0xbf8a7204; pair.first.fValue = 11; pair.second = 12. -- END TEST OUTPUT --; -- BEGIN OUTDIFF OUTPUT --; --- /home/sftnight/build/workspace/root-pullrequests-build/roottest/root/meta/tclass/issue-6840/emulatePairs.ref	Tue Apr 6 21:19:08 2021; +++ /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/meta/tclass/issue-6840/emulatePairsTest.log	Wed Apr 7 11:46:41 2021; @@ -8,7 +8,7 @@; fShort.second2; fSameAspointervalue; fSameAs.first3Emulation; -fSameAs.secondpointervalueEmulation; +fSameAs.secondpointervaluemulation; fSameAs.second.fValue4; ======>EVENT:0; pair.=(Contains*)pointervalue; @@ -24,7 +24,7 @@; sizeofpair<char,SameAsShort>:4; ==>Dumpingobjectat:pointervalue,class=pair<SameAsShort,short>; ; -firstpointervalueEmulation; +firstpointervaluemulation; first.fValue11; second12Emulation; ======>EVENT:0. -- END OUTDIFF OUTPUT --; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:264 (message):; compare 'stdout' error: 1. ```; due to a missing space in those lines:; ```; fSameAs.second ->ffffffffbfEmulation; first ->ffffffffbfEmulation; ```; and https://github.com/root-project/roottest/blob/master/root/meta/tclass/issue-6840/CMakeLists.txt#L21 removes the `E` of `Emulation`, leading to:; ```; -fSameAs.secondpointervalueEmulation; +fSameAs.secondpointervaluemulation; -firstpointervalueEmulation; +firstpointervaluemulation; ```; Any suggestion? I don't want to put `#ifdef _WIN64` (or whatever) in the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7778#issuecomment-814891055:2099,message,message,2099,https://root.cern,https://github.com/root-project/root/pull/7778#issuecomment-814891055,1,['message'],['message']
Integrability,"t in the `CMAKE_CXX_FLAGS` variable itself). Actually changing them to CMake lists directly might break users code, so this way is safer.~~. Target based approach before (showing the old INCLUDE issue too). ```cmake; cmake_minimum_required(VERSION 3.4). project(RootSimpleExample LANGUAGES CXX); find_package(ROOT CONFIG REQUIRED COMPONENTS RooFit RooFitCore); # Note: Symbols missing compiling error if user forgets RooFitCore!. # Already fixed in ROOT master; set_property(TARGET ROOT::Core PROPERTY; INTERFACE_INCLUDE_DIRECTORIES ""${ROOT_INCLUDE_DIRS}""). # Fix for ROOT_*_FLAGS not actually being a CMake list; separate_arguments(ROOT_CXX_FLAGS); separate_arguments(ROOT_EXE_LINKER_FLAGS). # Setting up the recommended ROOT flags; add_library(ROOT::Flags IMPORTED INTERFACE); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_OPTIONS ${ROOT_CXX_FLAGS}); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_DEFINITIONS ${ROOT_DEFINITIONS}); #set_property(TARGET ROOT::Flags APPEND PROPERTY; # INTERFACE_LINK_LIBRARIES ${ROOT_EXE_LINKER_FLAGS}). # Adding an exectuable program and linking to needed ROOT libraries; add_executable(RootSimpleExample SimpleExample.cxx); target_link_libraries(RootSimpleExample PUBLIC; ROOT::Core ROOT::Imt ROOT::RIO ROOT::Net ROOT::Hist; ROOT::Graf ROOT::Graf3d ROOT::Gpad ROOT::Tree ROOT::TreePlayer; ROOT::Rint ROOT::Postscript ROOT::Matrix ROOT::Physics; ROOT::MathCore ROOT::Thread ROOT::RooFit; ROOT::Flags); ```; > Note: I'm listing all the libraries that ROOT adds by default, though due to dependency resolution, a few of them might not be needed to achieve the same result. After:. ```cmake; cmake_minimum_required(VERSION 3.4). project(RootSimpleExample LANGUAGES CXX); find_package(ROOT CONFIG REQUIRED COMPONENTS RooFit). # Adding an exectuable program and linking to needed ROOT libraries; add_executable(RootSimpleExample SimpleExample.cxx); target_link_libraries(RootSimpleExample PUBLIC ROOT::Libraries ROOT::Flags); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959:2390,depend,dependency,2390,https://root.cern,https://github.com/root-project/root/pull/1959,1,['depend'],['dependency']
Integrability,"t info; > ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; > ==22765== ; > ; > Processing assertSparseSelection.C...; > ==22765== Conditional jump or move depends on uninitialised value(s); > ==22765== at 0x9D9A01A: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /build/vvassilev/root-release-master/lib/libCling.so); > ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); > ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); > ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1250619567:2014,depend,depends,2014,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1250619567,1,['depend'],['depends']
Integrability,"t is able to provide data from SQlite `SELECT` queries. It will be useful for cvmfs, where we have file catalogs and monitoring information in sqlite files. For instance, one can do. auto rdf = ROOT::RDF::MakeSqliteDataFrame(""catalog.sqlite"", ""select * from catalog"");; auto h = rdf.Define(""lname"", ""name.length()"").Histo1D(""lname"");. to show the distribution of file name sizes. There are probably more use cases, for instance sqlite export of conditions data. This is work in progress, I'm posting it for early comments and feedback. My open points are. - Unit and integration tests are yet to be done; - The data source work single-threaded only at the moment. I initially thought it might be enough to return only a single row in `GetEntryRanges()` to make it thread-safe but that's apparently not enough. So I'm now thinking to wrap `SetEntry()` and `GetEntryRanges()` in a mutex.; - The code is not reusing `TSQLiteServer`. It felt like it requires stretching the `TSQLServer` interface in perhaps unwanted ways, for saving only a handful of direct sqlite API calls. On the other hand, with (probably quite a bit) more work it might be possible to have a more general data source that works on any SQL result set.; - Determining column types in SQlite is tricky as it is dynamically typed and in principle each row can have different column types. If a table column is queried as is, I can use the default/declared column type. For expressions, I'll use the type of the first row of the result set. Still it can result in a column to be of type `NULL` where subsequent rows actually have meaningful values. My guess is that the current heuristic is practical enough, and of course the user can formulate the `SELECT` query to avoid ambiguity.; - It would not be impossible to add support for remote reading of sqlite files. To do so, one can add a custom implementation of an sqlite virtual file system to have data pouring in directly from HTTP or XRootD. This is perhaps something to keep in m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2322:1034,interface,interface,1034,https://root.cern,https://github.com/root-project/root/pull/2322,1,['interface'],['interface']
Integrability,"t webpage I was suggested to do so via snap. I managed to install it and in the end, when I oppened a session and tried new TBrowser() to check some hists and if everything was according to how it was previously, I got this as header of the break:. ```; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TGVSplitter::TGVSplitter>: splitterv.xpm not found; Error in <TGHSplitter::TGHSplitter>: splitterh.xpm not found; Error in <TGComboBox::TGComboBox>: arrow_down.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found; ```. I proceeded to uninstall it and try to build it on my own.; I followed the instructions on this webpage https://root.cern/install/build_from_source/ after checking all the dependencies. When I made the first cmake I got some things that it couldn't find which would give the following lines on terminal. ```; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; ```; The things it couldn't find were:; ```; PCRE; xxHash; ZSTD; GIF; TIFF; JPEG; GLEW; gl2ps; LibXml2; MySQL; PostgreSQL; Sqlite; CFITSIO; XROOTD; FTGL; LibXml2; TBB; Vdt; OCaml; ```; Then I got the following lines ; ```; -- clang project is enabled; -- clang-tools-extra project is disabled; -- compiler-rt project is disabled; -- cross-project-tests project is disabled; -- libc project is disabled; -- libclc project is disabled; -- libcxx project is disabled; -- libcxxabi project is disabled; -- libunwind project is disabled; -- lld project is disabled; -- lldb project is disabled; -- mlir project is disabled; -- openmp project is disabled; -- parallel-l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:1482,depend,dependencies,1482,https://root.cern,https://github.com/root-project/root/issues/14479,1,['depend'],['dependencies']
Integrability,"t's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a; map of allowed ranges.; - Dep",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219:1585,interface,interfaces,1585,https://root.cern,https://github.com/root-project/root/pull/5219,1,['interface'],['interfaces']
Integrability,"t*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555; 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545; 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865; 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737; 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710; 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820; 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461; 25: main in /opt/root_src/main/src/rmain.cxx:84; Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s); in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37; 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227; 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837; 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952; 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48; 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63; 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so; 10: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:30174,depend,depends,30174,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['depend'],['depends']
Integrability,t-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-12T06:56:09.498Z] ghprbPullLongDescription=This addresses test failures like:\r\n```\r\n 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417#issuecomment-860019280:3123,interface,interface,3123,https://root.cern,https://github.com/root-project/root/pull/8417#issuecomment-860019280,4,"['interface', 'message']","['interface', 'message']"
Integrability,"t-Wigner distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05; 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02; 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25; Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001; Integrating Breit-Wigner distribution, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18; 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18; 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16; Integrating Breit-Wigner distribution, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3; 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25; 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2; [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf; Integrating Gaussian distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04; 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07; 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03; Integrating Gaussian distribution, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02; 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02; 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07; Integrating Gaussian distribution, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03; 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06; 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:3530,Integrat,Integrating,3530,https://root.cern,https://github.com/root-project/root/pull/6632,3,['Integrat'],['Integrating']
Integrability,t-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:5559,Message,MessageTypes,5559,https://root.cern,https://github.com/root-project/root/issues/10478,1,['Message'],['MessageTypes']
Integrability,t-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478#issuecomment-1113253160:2864,Message,MessageTypes,2864,https://root.cern,https://github.com/root-project/root/issues/10478#issuecomment-1113253160,1,['Message'],['MessageTypes']
Integrability,"t-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/roofit/roofitZMQ/inc -isystem builtins/zeromq/libzmq/BUILTIN_ZeroMQ-prefix/include -isystem include -fdiagnostics-color=always -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++14 -MD -MT roofit/multiprocess/CMakeFiles/RooFitMultiProcess.dir/src/util.cxx.o -MF roofit/multiprocess/CMakeFiles/RooFitMultiProcess.dir/src/util.cxx.o.d -o roofit/multiprocess/CMakeFiles/RooFitMultiProcess.dir/src/util.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/roofit/multiprocess/src/util.cxx ; - [2021-10-29T11:15:35.069Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/multiprocess/src/util.cxx:126:30: error: converting to ‘std::tuple&lt;std::vector&lt;std::pair&lt;long unsigned int, zmq::event_flags&gt;, std::allocator&lt;std::pair&lt;long unsigned int, zmq::event_flags&gt; &gt; &gt;, bool&gt;’ from initializer list would use explicit constructor ‘constexpr std::tuple&lt;_T1, _T2&gt;::tuple(_U1&&, _U2&&) [with _U1 = std::vector&lt;std::pair&lt;long unsigned int, zmq::event_flags&gt; &gt;&; _U2 = bool&; &lt;template-parameter-2-3&gt; = void; _T1 = std::vector&lt;std::pair&lt;long unsigned int, zmq::event_flags&gt; &gt;; _T2 = bool]’ . ### Warnings:; - [2021-10-29T11:12:30.454Z] CMake Warning at CMakeLists.txt:212 (message):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-954660149:2726,message,message,2726,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-954660149,1,['message'],['message']
Integrability,"t.part.0 in ./elf/./elf/dl-init.c:70; 16: call_init in ./elf/./elf/dl-init.c:33; 17: _dl_init in ./elf/./elf/dl-init.c:117; 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182; 19: dl_open_worker in ./elf/./elf/dl-open.c:808; 20: dl_open_worker in ./elf/./elf/dl-open.c:771; 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 22: _dl_open in ./elf/./elf/dl-open.c:883; 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56; 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227; 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138; 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71; 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81; Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s); in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331; 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114; 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852; 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_tra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:5606,depend,depends,5606,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['depend'],['depends']
Integrability,t/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -writeEmptyRootPCM Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFunc.h Math/PdfFuncMathCore.h Math/ProbFunc.h Math/ProbFuncMathCore.h Math/QuantFunc.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4675#issuecomment-565386571:21799,Integrat,Integrator,21799,https://root.cern,https://github.com/root-project/root/pull/4675#issuecomment-565386571,5,"['Integrat', 'Wrap']","['Integrator', 'IntegratorMultiDim', 'IntegratorOptions', 'WrappedFunction', 'WrappedParamFunction']"
Integrability,"t/googletest/include -isystem googletest-prefix/src/googletest/googlemock/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -std=c++11 -MD -MT tree/dataframe/test/CMakeFiles/dataframe_vecops.dir/dataframe_vecops.cxx.o -MF tree/dataframe/test/CMakeFiles/dataframe_vecops.dir/dataframe_vecops.cxx.o.d -o tree/dataframe/test/CMakeFiles/dataframe_vecops.dir/dataframe_vecops.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_vecops.cxx ; - [2021-05-04T14:51:49.461Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RTreeColumnReader.hxx:100:42: error: dependent-name ‘ROOT::VecOps::RVec&lt;T&gt;::pointer’ is parsed as a non-type, but instantiation yields a type ; - [2021-05-04T14:51:49.461Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RTreeColumnReader.hxx:100:42: error: dependent-name ‘ROOT::VecOps::RVec&lt;T&gt;::pointer’ is parsed as a non-type, but instantiation yields a type ; - [2021-05-04T14:51:52.248Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-832003505:3326,depend,dependent-name,3326,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-832003505,1,['depend'],['dependent-name']
Integrability,"t/pull/12973; 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12971:2010,interface,interface,2010,https://root.cern,https://github.com/root-project/root/pull/12971,1,['interface'],['interface']
Integrability,"t@macphsft18 ~ % ls -l /Library/Developer/CommandLineTools/SDKs/; total 0; lrwxr-xr-x 1 root wheel 14 19 Sep 13:58 MacOSX.sdk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 1 May 00:16 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 19 Sep 13:57 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 21 Aug 17:15 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 19 Sep 13:56 MacOSX15.sdk -> MacOSX15.0.sdk; sftnight@macphsft18 ~ % clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: x86_64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=all; -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -I/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/16/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorde",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:1834,contract,contract,1834,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['contract'],['contract']
Integrability,"tStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:32:09.170Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:32:09.170Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] . And 4 more. ### Failing tests:; - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testLikelihoodGradientJob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131193/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testLikelihoodGradientJob/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368250:2769,synchroniz,synchronizeParameterSettings,2769,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368250,2,['synchroniz'],['synchronizeParameterSettings']
Integrability,"tStats=<optimized out>, SkipFunctionBodies=<optimized out>) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:159; #4 0x00007ffff1d67996 in clang::FrontendAction::Execute (this=this@entry=0x7fffeb7f9c00) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:896; #5 0x00007ffff1d302f4 in clang::CompilerInstance::ExecuteAction (this=0x7fffebff7ed0, Act=...) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:984; #6 0x00007ffff1d309af in <lambda()>::operator() (__closure=0x7fffebff7db0) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1154; #7 llvm::function_ref<void()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>)::<lambda()> >(intptr_t) (callable=140737152777648) at /usr/include/llvm/ADT/STLExtras.h:98; #8 0x00007ffff43bffb3 in llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) () from /home/yuka/module-relwithdeb/lib/libCling.so; #9 0x00007ffff43c00a5 in RunSafelyOnThread_Dispatch(void*) () from /home/yuka/module-relwithdeb/lib/libCling.so; #10 0x00007ffff44360ad in ExecuteOnThread_Dispatch(void*) () from /home/yuka/module-relwithdeb/lib/libCling.so; #11 0x00007ffff6e3d08c in start_thread () from /usr/lib/libpthread.so.0; #12 0x00007ffff6b74e7f in clone () from /usr/lib/libc.so.6; ```; My point is; 1. In user's machine, I think it is unlikely that LD_LIBRARY_PATH and DYLD_LIBRARY_PATH is unset because if ROOT is successfully installed in the machine, they should be set. Thus I'm not 100% sure that we should add DynamicPath to search because it causes overhead in the lookup.; 2. Instead, I think we can change Clang code to abort when it generates implicit modules on-demand and emit error messages. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1761#issuecomment-377492896:6007,message,messages,6007,https://root.cern,https://github.com/root-project/root/pull/1761#issuecomment-377492896,1,['message'],['messages']
Integrability,"t\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Glob",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:6959,message,message,6959,https://root.cern,https://github.com/root-project/root/pull/12523,2,"['depend', 'message']","['dependent', 'message']"
Integrability,t_friend_trees/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_histo_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_histo_write/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_include_headers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_include_headers/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_inv_mass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_inv_mass/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_reducer_merge](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_reducer_merge/); - [projectroot.bindings.experimental.distrdf.tests.unit.backend.pyunittests_distrdf_unit_backend_test_spark](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.unit/backend/pyunittests_distrdf_unit_backend_test_spark/); - [projectroot.bindings.experimental.distrdf.tests.unit.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.unit/backend/pyunittests_distrdf_unit_backend_test_common/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-774112839:1550,integrat,integration,1550,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-774112839,3,['integrat'],['integration']
Integrability,t_friend_trees/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_inv_mass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_inv_mass/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_reducer_merge](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_reducer_merge/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_include_headers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_include_headers/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_histo_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_histo_write/); - [projectroot.bindings.experimental.distrdf.tests.unit.backend.pyunittests_distrdf_unit_backend_test_spark](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.unit/backend/pyunittests_distrdf_unit_backend_test_spark/); - [projectroot.bindings.experimental.distrdf.tests.unit.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.unit/backend/pyunittests_distrdf_unit_backend_test_common/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-774106349:1550,integrat,integration,1550,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-774106349,3,['integrat'],['integration']
Integrability,"t_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here; 93 | struct bucket : tbb::internal::no_copy {; | ^~~~~~; make[6]: *** [Makefile:28: tbb] Error 2; ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says; ```; [I] No git repository info found. Trying to interpret VERSION_INFO; [I] The XrdVersion.hh file already exists; gmake[7]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[7]: *** Waiting for unfinished jobs....; gmake[6]: *** [Makefile:136: all] Error 2; CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):; Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'; ```; The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas?. ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14520:2679,message,message,2679,https://root.cern,https://github.com/root-project/root/issues/14520,1,['message'],['message']
Integrability,"ta&, RooLinkedList const&)+0x6e8>; ca4e8: 00 78 36 91 add x0, x0, #3486; ca4ec: ff 1c 07 94 bl 0x2918e8 <_write+0x2918e8> # print ""expected = %.17g, log = %.17g""; ca4f0: 6c 09 6a 1e fmul d12, d11, d10 # test = sumEntries * std::log(expected); ca4f4: ec 03 00 fd str d12, [sp]; ca4f8: 33 10 00 f0 adrp x19, 0x2d1000 <RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&)+0x6fc>; ca4fc: 73 16 37 91 add x19, x19, #3525; ca500: e0 03 13 aa mov x0, x19; ca504: f9 1c 07 94 bl 0x2918e8 <_write+0x2918e8> # print ""test = %.17g""; ca508: 00 39 6c 1e fsub d0, d8, d12 # test = expected - test;; ca50c: e0 03 00 fd str d0, [sp]; ca510: e0 03 13 aa mov x0, x19; ca514: f5 1c 07 94 bl 0x2918e8 <_write+0x2918e8> # print ""test = %.17g""; ca518: 4b a1 4b 1f fmsub d11, d10, d11, d8 # extra = expected - sumEntries * std::log(expected); ca51c: eb 03 00 fd str d11, [sp]; ca520: 20 10 00 f0 adrp x0, 0x2d1000 <RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&)+0x724>; ca524: 00 70 37 91 add x0, x0, #3548; ca528: f0 1c 07 94 bl 0x2918e8 <_write+0x2918e8> # print ""extra = %.17g""; ca52c: 28 21 60 1e fcmp d9, #0.0; ca530: 60 00 00 54 b.eq 0xca53c <RooAbsPdf::extendedTerm(double, double, double, bool) const+0x29c>; ca534: 20 19 6a 1e fdiv d0, d9, d10 # this is the branch sumEntriesW2 != 0.0; ca538: 6b 09 60 1e fmul d11, d11, d0 # with a division and multiplication; ca53c: 60 41 60 1e fmov d0, d11 # store the return value into d0; ca540: fd 7b 47 a9 ldp x29, x30, [sp, #112]; ca544: f4 4f 46 a9 ldp x20, x19, [sp, #96]; ca548: f6 57 45 a9 ldp x22, x21, [sp, #80]; ca54c: e9 23 44 6d ldp d9, d8, [sp, #64]; ca550: eb 2b 43 6d ldp d11, d10, [sp, #48]; ca554: ed 33 42 6d ldp d13, d12, [sp, #32]; ca558: ff 03 02 91 add sp, sp, #128; ca55c: c0 03 5f d6 ret; ```. There are other problems with expecting bit-wise identical output across platforms. For example `std::exp` and `std::log` can return different results for certain input parameters, depending on how they are implemented and rounding of the result.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1540239366:3531,depend,depending,3531,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1540239366,1,['depend'],['depending']
Integrability,"ta/sftnight/workspace/root-pullrequests-build/root/graf2d/postscript/src/AdobeGlyphList.h:110:44: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=] ; - [2021-11-30T07:31:10.411Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/postscript/src/AdobeGlyphList.h:110:55: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=] ; - [2021-11-30T07:31:27.486Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:31:27.486Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:32:09.170Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368250:1680,synchroniz,synchronizeParameterSettings,1680,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368250,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"tchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llv",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:4971,message,message,4971,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"tchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; ```; Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:11044,message,message,11044,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"td::allocator<char> > > > const&) const (RDFColumnRegister.cxx:79); ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56); ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:177819,depend,depends,177819,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"te if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; };",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:9279,message,message,9279,https://root.cern,https://github.com/root-project/root/issues/13996,2,['message'],['message']
Integrability,"tead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types or with casts of explicitly named typedefs. Oh, it works _now_, with yet another workaround, but it actually crashed `lookupHelper` (segfault and die; and it's not the only one; I have a few more for Vassil, e.g. lookup in an unnamed namespace also crashes deep, deep inside Cling/Clang). So, I consider that another strong argument against ""tryi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696889449:2491,interface,interfaces,2491,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696889449,2,['interface'],['interfaces']
Integrability,"tents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -I/Users/suter_a/Applications/root/root_exec/include -I/opt/local/include -I/Users/suter_a/Applications/musrfit/src/include -I/Users/suter_a/Applications/musrfit/src/classes PUserFcnBase.h /Users/suter_a/Applications/musrfit/src/include/PUserFcnBaseLinkDef.h; cd /Users/suter_a/Applications/musrfit/build && /opt/local/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/suter_a/Applications/musrfit /Users/suter_a/Applications/musrfit/src/classes /Users/suter_a/Applications/musrfit/build /Users/suter_a/Applications/musrfit/build/src/classes /Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake --color=; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/CMakeDirectoryInformation.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Scanning dependencies of target PUserFcnBase; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/classes/CMakeFiles/PUserFcnBase.dir/build.make src/classes/CMakeFiles/PUserFcnBase.dir/build; ... And all the further root_generate_dictionary work as well. Does this help?. Cheers,; Andreas. PS: Machine I have tested it on: ; Darwin Kernel Version 21.3.0: Wed Jan 5 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_ARM64_T8101 arm64. ________________________________. Paul Scherrer Institut. Dr. Andreas Suter; Laboratory for Muon-Spin Spectroscopy; Swiss Muon Source SµS; WLGA/119; Forschungsstrasse 111; CH - 5232 Villigen PSI; Switzerland. Tel.: +41 (0)56 310 4238; ________________________________. > On 7 Mar 2022, at 20:08, Axel Naumann ***@***.***> wrote:; > ; > ; > Can you share how you determined",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1061481610:4515,Depend,Dependee,4515,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1061481610,1,['Depend'],['Dependee']
Integrability,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1064634456:2110,inject,inject,2110,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456,2,['inject'],['inject']
Integrability,"ter/cling/lib/Interpreter/IncrementalExecutor.h:253; > #65 cling::IncrementalExecutor::runStaticInitializersOnce (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:251; > #66 0x00007fffeea63d43 in cling::Interpreter::executeTransaction (this=<optimized out>, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1714; > #67 0x00007fffeea6da53 in cling::IncrementalParser::commitTransaction (this=0x4f6670, PRT=..., ClearDiagClient=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:675; > #68 0x00007fffeea6e410 in cling::IncrementalParser::Compile (this=0x4f6670, input=..., Opts=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:846; > #69 0x00007fffeea62615 in cling::Interpreter::EvaluateInternal (this=0x4f17a0, input=..., CO=..., V=0x7fffffffcc70, wrapPoint=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379; > #70 0x00007fffee95d98f in TCling::Calc (this=0x4f0e00, line=0x1c224b0 ""ROOT::Internal::RDF::JitFilterHelper(R_rdf::lambda0, new const char*[1]{\""a\""}, 1, \""\"", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x21269a0), reinterpret_cast<std::shared_ptr<ROO""..., error=0x7fffffffcd0c) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:3556; > #71 0x00007ffff7fc97b3 in ROOT::Internal::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_0::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (; > codeSlice=""ROOT::Internal::RDF::JitFilterHelper(R_rdf::lambda0, new const char*[1]{\""a\""}, 1, \""\"", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x21269a0), reinterpret_cast",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1098026446:16636,wrap,wrapPoint,16636,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1098026446,1,['wrap'],['wrapPoint']
Integrability,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.0.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:16016,protocol,protocols,16016,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['protocol'],['protocols']
Integrability,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.0.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework direct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:11971,protocol,protocols,11971,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['protocol'],['protocols']
Integrability,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.1.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:24820,protocol,protocols,24820,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['protocol'],['protocols']
Integrability,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.1.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework direct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:20775,protocol,protocols,20775,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['protocol'],['protocols']
Integrability,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target x86_64-apple-darwin23.6.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<bu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:7093,protocol,protocols,7093,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['protocol'],['protocols']
Integrability,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target x86_64-apple-darwin23.6.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /usr/local/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 """,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:3478,protocol,protocols,3478,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['protocol'],['protocols']
Integrability,"test-testMatrixTSparse ..................................***Failed 0.03 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from testSparse; [ RUN ] testSparse.LwbInit; /builddir/build/BUILD/root-6.30.02/math/matrix/test/testMatrixTSparse.cxx:47: Failure; Expected equality of these values:; m1; Which is: 80-byte object <00-00 02-AA 28-E9 07-70 00-00 00-00 02-00 00-00 00-00 00-04 00-00 00-05 00-00 00-01 00-00 00-00 00-00 00-14 00-00 00-05 3C-B0 00-00 00-00 00-00 01-00 03-FF 87-BA DF-98 00-00 02-AA 29-1E 84-50 00-00 02-AA 29-1E 65-B0 00-00 02-AA 29-1E 7F-00>; m2; Which is: 264-byte object <00-00 02-AA 28-E9 04-58 00-00 00-00 02-00 00-00 00-00 00-04 00-00 00-05 00-00 00-01 00-00 00-00 00-00 00-14 00-00 00-00 3C-B0 00-00 00-00 00-00 01-22 00-C0 4C-E7 2C-66 40-09 21-FB 54-44 2D-18 ... 40-34 B8-A1 9E-49 B7-53 40-37 70-82 EF-AC 42-40 00-00 02-AA 29-1E 83-A0 00-00 03-FF 87-BA DF-98 00-00 03-FF 87-86 06-68 00-00 03-FF 87-85 04-16 00-00 03-FF EE-2F 6B-28 00-00 03-FF EE-2F 6A-E0>; [ FAILED ] testSparse.LwbInit (0 ms); [----------] 1 test from testSparse (0 ms total); [----------] Global test environment tear-down; [==========] 1 test from 1 test suite ran. (0 ms total); [ PASSED ] 0 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] testSparse.LwbInit; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.30.02/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. ### Reproducer. - Build root with gcc 14 on Fedora 40 on aarch64, ppc64le or s390x; - Run the test. ### ROOT version. 6.30.02. ### Installation method. build from source. ### Operating system. Fedora Linux 40. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14446:2102,message,message,2102,https://root.cern,https://github.com/root-project/root/issues/14446,1,['message'],['message']
Integrability,testReport/projectroot.roottest.cling.template/separateDict/roottest_cling_template_separateDict_make/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.math.smatrix.roottest_root_math_smatrix_testKalman](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root.math/smatrix/roottest_root_math_smatrix_testKalman/). And 82 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1317#issuecomment-344056775:3312,interface,interface,3312,https://root.cern,https://github.com/root-project/root/pull/1317#issuecomment-344056775,2,['interface'],['interface']
Integrability,"th the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Mino",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1251821611:1762,message,messages,1762,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611,4,['message'],['messages']
Integrability,"th`) inside the directory the following ways:; * If the element is a directory, it would be `new TDirectory(file, sdirpath)`; * If the element is a file, it would be `new TFile(file, fTitle)`. Which results in the following bugs:. * If an element of `TSystemDirectory::GetListOfFiles()` is a file, its `IsDirectory()` will try to look for the file basename in the *current working directory* and produce the wrong result.; * As its perfectly legal to cast `TSystemDirectory *` to `TSystemFile *`, a `TSystemFile *tsysfFoo` with name ""foo"" and title ""foo"" could mean either; * A file with path `foo/foo`; * A directory with path `foo`, which was originally an instance of `TSystemDirectory *`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The name-title interface of both `TSystemFile` and `TSystemDirectory` is unified. Due to the inconsistency of the original interface, there's no fully-backward-compatible solution. The possible interface would be one of the followings:. | Name | Title | Pros | Cons |; |-|-|-|-|; | basename | dirname | the most informative and good-looking; closer to what GetListOfFiles() tries to output | incompatible to the original `TSystemFile` and `TSystemDirectory` interfaces |; | basename | full path | closer to the original `TSystemDirectory` interface | incompatible to the original `TSystemDirectory` interface |; | full path | dirname | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | basename | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | full path | closer to the original `TSystemFile` and `TSystemDirectory` interfaces | carry the least information |. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required inpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12350:1779,interface,interface,1779,https://root.cern,https://github.com/root-project/root/issues/12350,1,['interface'],['interface']
Integrability,"thanks for this! there are two very common scenarios that should be tested for ROOT-9736 to be considered solved:. * `Define(""derived"", [] { return Derived(); }).Define(""base"", [](Base &b) { return b; }, {""derived""})`; * `Define(""val"", [] (Base &b) { return b.val; }, {""derived""})` where ""derived"" is an object of type `Derived` which inherits from `Base` that is stored in a TTree. The second in particular might depend on `TTreeReader` supporting this use case, which I'm not sure it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3749#issuecomment-487380677:414,depend,depend,414,https://root.cern,https://github.com/root-project/root/pull/3749#issuecomment-487380677,1,['depend'],['depend']
Integrability,that should not be shell dependent. The current build system using Makefile works fine with zsh,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1077390625:25,depend,dependent,25,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1077390625,1,['depend'],['dependent']
Integrability,"the Google C++ guidelines. I think this is not something we should spend too much time on now, but maybe good to keep in mind for the future.; 3. https://github.com/root-project/root/pull/8700#discussion_r672519457 The configuration parameters (GlobalObservables etc.): should we unify them or keep like this?; 4. https://github.com/root-project/root/pull/8700#discussion_r672538377 This should be checked by Wouter. In addition, some other remaining questions:; 1. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test.; 2. In an ideal world I would have liked to add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, this will take time. The advantage would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the MultiProcess minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in ""PR 7"" (see overview). So, up for discussion, two choices: A: add (probably mostly useless except for testing this PR) ""LikelihoodGradientSerial"" class (based on RooGradMinimizerFcn) so we can add an integration test in this PR; B: wait for the integration test in PR 7.; 3. Does everybody like the RooNLLVar statics?; 4. Offset in the new TestStatistics classes can easily include the RooSubsidiaryL term as well, unlike with RooAbsTestStatistic, where the RooConstraintSum was a separate class that would not be included in the offset. I have now implemented a legacy mode to get bit-wise equal results, but is the new ""full"" mode a good idea at all? Does it make sense?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-915217168:2074,integrat,integration,2074,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-915217168,4,['integrat'],['integration']
Integrability,"the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. `mkdir -p HEP/root`; 2. `cd HEP/root`; 3. `mkdir build install`; 4. `git clone --depth=1 https://github.com/root-project/root gitclone`; 5. `cd build`; 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; 7. `cmake --build . --target install -- -j4`. ### Setup; <!--; 1. ROOT version; 8. Operating system; 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->; 1. `gcc -v`; ```sh; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; Supported LTO compression algorithms: zlib zstd; gcc version 11.2.0 (GCC); ```; 2. `clang -v`; ```sh; clang version 13.0.1; Target: x86_64-pc-linux-gnu; Thread model: posix; InstalledDir: /usr/bin; Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0; Found candidate GCC install",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:30463,wrap,wrapper,30463,https://root.cern,https://github.com/root-project/root/issues/10528,1,['wrap'],['wrapper']
Integrability,"the code between these two points?. see you, RD. Successful RAL:. https://bigpanda.cern.ch//media/filebrowser/667e8363-d9bb-4ebd-800f-79d3495d1b3a/panda/tarball_PandaJob_4925629005_RAL/payload.stdout. [2020-12-18 14:20:13.919081 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400); [2020-12-18 14:20:13.919352 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2010227.0-lcg2237.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful UK WATERLOO:. https://bigpanda.cern.ch//media/filebrowser/772fff72-3e22-499f-8a3f-aa8956ea5636/panda/tarball_PandaJob_4926186410_RAL/payload.stdout. [2020-12-19 00:45:02.375203 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400); [2020-12-19 00:45:02.375430 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2013477.0-lcg2259.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful IN2P3 LAPP_LAKE. https://bigpanda.cern.ch//media/filebrowser/f9695015-c110-4e2e-9c62-d56eade824f8/panda/tarball_PandaJob_4926136184_IN2P3-LAPP_LAKE/payload.stdout. [2020-12-19 02:08:57.250908 +0100][Debug ][XRootDTransport ] [lapp-se01.in2p3.fr:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 500); [2020-12-19 02:08:57.251553 +0100][Debug ][XRootDTransport ] [lapp-se01.in2p3.fr:1094 #0.0] Sending out kXR_login request, username: atlaspil, cgi: ?xrd.cc=fr&xrd.tz=1&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=lapp-wn168.in2p3.fr&xrd.rn=v4.10.0, dual-stack: false, private IPv4: false, private I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758062082:1441,protocol,protocol,1441,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758062082,1,['protocol'],['protocol']
Integrability,"the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a; map of allowed ranges.; - Deprecate RooMultiCatIter, remove from dictionaries.; - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219:1913,interface,interfaces,1913,https://root.cern,https://github.com/root-project/root/pull/5219,3,['interface'],"['interface', 'interfaces']"
Integrability,the integration attempt (to build master) failed with . ```; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.23.01-725b5e05650d8bf8cd995e6f1f38ca75/root-6.23.01/core/imt/src/RTaskArena.cxx: In constructor 'ROOT::Internal::RTaskArenaWrapper::RTaskArenaWrapper(unsigned int)':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.23.01-725b5e05650d8bf8cd995e6f1f38ca75/root-6.23.01/core/imt/src/RTaskArena.cxx:70:79: error: reference to 'task_arena' is ambiguous; ```. maybe I have to add something to our cmake config ? . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-623c54/12317/lcg/root/6.23.01-725b5e05650d8bf8cd995e6f1f38ca75/log,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6933#issuecomment-762253484:4,integrat,integration,4,https://root.cern,https://github.com/root-project/root/issues/6933#issuecomment-762253484,2,['integrat'],['integration']
Integrability,"the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:; - A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; - A `TTreeReader`-like interface, `TTreeReaderFast`. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize *and* apply user code, rather than two.; - The intent is that this interface can be extended in the future and used by `TDataFrame`, provided we can make `TDataFrame` sufficiently fast.; - A Python-based `numpy` export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; - The `numpy` interface is low-level for Python; we intend to further explore the ideal high-level interface through projects such as https://github.com/diana-hep/plur. So indeed, lot's of experimental / internal interface work here - but we felt that (a) a sufficient amount depends on this and (b) we've demonstrated enough utility that it was time to start talking about merging. (With many thanks to @jpivarski for driving this work home with his work on a python interface!)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943:1797,interface,interface,1797,https://root.cern,https://github.com/root-project/root/pull/943,7,"['depend', 'interface']","['depends', 'interface']"
Integrability,"the same segfault, although it; does not use directio for the inputs; https://bigpanda.cern.ch/job?pandaid=4946328705. It has some hardwired TFile open from RD. [2021-01-12 06:55:54.209757 -0500][Debug ][PostMaster ]; Creating new channel to: this-will-totally-fail:1094 1 stream(s); [2021-01-12 06:55:54.209835 -0500][Debug ][PostMaster ]; [this-will-totally-fail:1094 #0] Stream parameters: Network Stack:; IPAuto, Connection Window: 120, ConnectionRetry: 5, Stream Error; Window: 1800; [2021-01-12 06:55:54.209937 -0500][Debug ][TaskMgr ]; Registering task: ""TickGeneratorTask for: this-will-totally-fail:1094""; to be run at: [2021-01-12 06:56:09 -0500]; [2021-01-12 06:55:54.209976 -0500][Debug ][ExDbgMsg ]; [this-will-totally-fail:1094] MsgHandler created: 0x3171890 (message:; kXR_open (file: , mode: 00, flags: kXR_open_read kXR_async kXR_retstat; ) ).; [2021-01-12 06:55:54.210005 -0500][Dump ][PostMaster ]; [this-will-totally-fail:1094 #0] Sending message kXR_open (file: ,; mode: 00, flags: kXR_open_read kXR_async kXR_retstat ) (0x31933e0); through substream 0 expecting answer at 0; [2021-01-12 06:55:54.210582 -0500][Error ][Utility ] Unable; to resolve this-will-totally-fail:1094: Name or service not known; [2021-01-12 06:55:54.210595 -0500][Error ][PostMaster ]; [this-will-totally-fail:1094 #0] Unable to resolve IP address for the; host; [2021-01-12 06:55:54.210610 -0500][Error ][XRootD ]; [this-will-totally-fail:1094] Unable to send the message kXR_open; (file: , mode: 00, flags: kXR_open_read kXR_async kXR_retstat ):; [FATAL] Invalid address; [2021-01-12 06:55:54.210651 -0500][Debug ][ExDbgMsg ]; [this-will-totally-fail:1094] Destroying MsgHandler: 0x3171890.; Error in <TNetXNGFile::Open>: [FATAL] Invalid address; [2021-01-12 06:55:54.211229 -0500][Debug ][Utility ]; Monitor library name not set. No monitoring. The TFile is expected to fail, but why the segfault?; The jobs ran on native CentOS, so the singularity container theory is; another good one shot down by fa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758618647:1007,message,message,1007,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758618647,1,['message'],['message']
Integrability,"the set of secondary events has been exhausted; > ; > To reproduce the error on scisoftbuild01, first checkout the source code:; > ; > git clone https://cdcvs.fnal.gov/projects/critic; > cd critic; > git checkout for-philippe; > ; > Then build the code and run the tests:; > ; > source /products/setup; > mkdir /scratch/pcanal/build-critic && cd $_; > source ~/critic/ups/setup_for_development -d; > buildtool --generator=ninja -j12 -T; > ; > The test that demonstrates the MT error often hangs due to a memory error (I believe). If the above tests don't complete, then CTRL+C out of them and try running the single problematic test:; > ; > ctest -V -R ProductMix_wraparound_r; > ; > You will see printout like:; > ; > 213: ...; > 213: Begin processing the 99th record. run: 1 subRun: 0 event: 99 at 09-Dec-2020 14:09:34 CST; > 213: Begin processing the 100th record. run: 1 subRun: 0 event: 100 at 09-Dec-2020 14:09:34 CST; > 213: %MSG-w MixingInputWrap: MixFilterTest:mixFilter@BeginModule 09-Dec-2020 14:09:34 CST run: 1 subRun: 0 event: 103; > 213: Wrapping around to initial input file for mixing after 100 secondary events read.; > 213: %MSG; > 213: ...; > ; > And then the job will usually hang or there will be a segmentation violation, both of which originate from the art::RootIOPolicy destructor.; > ; > If, after running all of the tests, you wish to run the job by hand (not using ctest), do the following:; > ; > cd $CETPKG_BUILD/critic/test/art/product-mixing/ProductMix_wraparound_r.d/; > art -c ProductMix_wraparound_r.fcl -j4; > ; > I have debugged using valgrind, helgrind, gdb, and Arm forge's DDT. Under the covers, it appears there is a spin-lock that just spins at the end of the job. When enabling memory-debugging with DDT, I get a memory error when a ROOT file is closed from the destructor of the RootIOPolicy class, a class used for product-mixing. See the attached screenshots, which include a portion of the stacktrace where the memory error is happening, and the value o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:7545,Wrap,Wrapping,7545,https://root.cern,https://github.com/root-project/root/issues/6939,1,['Wrap'],['Wrapping']
Integrability,ther/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 3 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143369248:2740,interface,interface,2740,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143369248,2,['interface'],['interface']
Integrability,ther/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 2 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143567859:2726,interface,interface,2726,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143567859,2,['interface'],['interface']
Integrability,ther/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 2 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144988696:2726,interface,interface,2726,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144988696,2,['interface'],['interface']
Integrability,ther/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 2 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145213663:2726,interface,interface,2726,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145213663,2,['interface'],['interface']
Integrability,ther/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 2 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153770266:2726,interface,interface,2726,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153770266,2,['interface'],['interface']
Integrability,"there will be always some sort of a textual header file which can be processed with our clang-based rootcling and build a pcm file as basis for our dictionaries. . > My request is for the upcoming ROOT with Clang 16 to be able to accommodate the generation and use of PCM dictionaries where dependencies thereof are or use C++20 modules. Clang has at least 5 different ""flavors"" of modules. One of them is the C++20 modules as described by the C++ standard. At the moment you start using C++ 20 you could use the `import`/`export` constructs and you will be able to use that feature for encapsulation purposes. There is not enough project transitions which are bigger than toy examples. One of the challenges is how we discover module dependencies. That is, we need extra tooling to decide how to split the source files into modules. In practice we need to pre-lex all of the content before the build system can start processing project files. The community is discussing scanners (such as clang scan-deps), daemons (the gcc implementation), protocols, etc. There is increasing amount of papers trying to address how we put C++ modules at scale (https://wg21.link/p2656, https://wg21.link/P2409, https://youtu.be/_LGR0U5Opdg?si=AbLazREvyl5PXVFG). Some papers/talks are more radical claiming that we cannot even roll out modules (as written in the standard) at such scale. . For modules to be useful and work reliably we know that we need to apply modularization bottom up. That means that before modularizing cmssw/art we need everything below starting from libc and libxml to become modular. That's something we observed during our modularization efforts in cmssw (see https://github.com/cms-sw/cmssw/issues/15248). The reasons we cannot make it yet default is discussed here: https://github.com/cms-sw/cmssw/issues/41810#issuecomment-1578982627 and here https://github.com/root-project/root/pull/13000 Not surprisingly we have observed similar comments coming from modularization efforts in gcc and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13536#issuecomment-1693395998:1782,protocol,protocols,1782,https://root.cern,https://github.com/root-project/root/issues/13536#issuecomment-1693395998,2,['protocol'],['protocols']
Integrability,therewith avoiding memory hogging because of the attached TTreeChaches. This code has been written by David Smith and minimally edited for its integration in root.; See sister PR in roottest: https://github.com/root-project/roottest/pull/1161. This PR fixes [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16198:143,integrat,integration,143,https://root.cern,https://github.com/root-project/root/pull/16198,1,['integrat'],['integration']
Integrability,"therewith dealing with the concrete type of the source rather than its; virtual interface.; This change has no impact for the user, both in C++ and Python, since; a templated constructor has been added to RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2963:80,interface,interface,80,https://root.cern,https://github.com/root-project/root/pull/2963,1,['interface'],['interface']
Integrability,"this is a backport of; https://gitlab.cern.ch/lhcb/Rec/commit/6103563cc0fc537d8920a2918117b27a48823772#5c0090c3eee645cadb8dd97f9faf43e9664403ce_191_190. There are actually two changes:; - add an override in MethodBase generated code; - remove trailing whitespaces in the code of a MLP w/ normalise variable transformation. discussion points:; - one could also remove trailing whitespaces in other files (`grep -- ' "" << std::endl;'`); - the whitespaces are a bit on the boarder of history noise vs. useful; - the override will make the generated code for all code generated methods (not only MLP) depend on c++11 (which to my knowledge is the case for MLP already, but not for the other methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1456:597,depend,depend,597,https://root.cern,https://github.com/root-project/root/pull/1456,1,['depend'],['depend']
Integrability,"this is solvable though. We can probably hack up a custom ld.so for; this, and we might even be able to convince the ld.so devs to add new APIs; to make this work. -- Lang. On Tue, Apr 19, 2022 at 11:40 PM Vassil Vassilev ***@***.***>; wrote:. > I didn't see this fail before, but from a first look:; >; > It looks like we have a problem with re-entrant JITing; >; > Yes, OL_applyQueryPhase1() is reentered here and it waits for the; > JITDylib's GeneratorsMutex that was locked in the very same place in the; > previous invocation. While the SessionMutex in ExecusionSession is; > recursive, the GeneratorsMutex is not. I assume it's not supposed to be; > recursive. Instead, I guess the process of querying symbols should not be; > re-entrant.; >; > The interesting frame in the callstack is:; >; > #26 0x00007fffebd32f70 in _GLOBAL__sub_I_clingwrapper.cxx; >; > This initializes the llvm::orc::Platform, which eventually calls back; > into the ExecutionSession and triggers the suspicious lookups. Is it; > necessary to do this in a static constructor? Maybe move it into an; > explicit init function and call it after the outer lookup finished? If it; > fixes the bug, maybe that's a way forward.; >; > Otherwise, if this initialization must run in a static ctor, you may try; > and remove the JITDylib that initiates the ld_open from the; > JITDylibSearchOrder used in the lookup. Its symbols won't be available to; > cppyy then. (Never tried this in practice.); >; > We cannot control what's in the static init of user libraries. They can; > use interpreter services. This approach used to work, why locking is; > necessary? Aren't we 'just' reading?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/pull/10294#issuecomment-1103526477>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAA4XKI2Y5KMHF5LN6FKUELVF6RGTANCNFSM5SIVWJ4A>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1274280300:4674,Message,Message,4674,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1274280300,1,['Message'],['Message']
Integrability,"this is the compiler wrapper:; ```; #!/bin/bash; GCC_DIR=`which gcc | sed ""s/\/bin\/gcc$//""`; ${CLANG_ROOT}/bin/clang++ --gcc-toolchain=${GCC_DIR} ""${@}""; ```. should I set CXX to just `/opt/clang/13.0.1-gcc84/bin/clang++ `?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10046#issuecomment-1059271062:21,wrap,wrapper,21,https://root.cern,https://github.com/root-project/root/issues/10046#issuecomment-1059271062,1,['wrap'],['wrapper']
Integrability,this should work:. ```bash; git checkout update-df103; git commit --amend # and change the commit message; git push --force upstream update-df103 # or maybe origin instead of upstream depending on your setup; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5221#issuecomment-604884572:98,message,message,98,https://root.cern,https://github.com/root-project/root/pull/5221#issuecomment-604884572,2,"['depend', 'message']","['depending', 'message']"
Integrability,"thod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C93E9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:457); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:7111,depend,depends,7111,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,thodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFunc.h Math/PdfFuncMathCore.h Math/ProbFunc.h Math/ProbFuncMathCore.h Math/QuantFunc.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/io/xml && /usr/local/bin/cmake -E env LD_LIBRARY_PATH=/mnt/build/workspace/root-pullrequests-build/build/lib: ROOTIGNOREPREFIX=1 /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling -rootbuild -v2 -f G__XMLIO.cxx -cxxmodule -s /mnt/build/workspace/root-pullrequests-build/build/lib/libXMLIO.so -m libRIO_rdict.pcm -excludePath /mnt/build/workspace/root-pullrequests-build/root -excludePath /mnt/build/workspace/root-pullrequests-build/build -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/etc/cling/ -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4346#issuecomment-529005715:14051,Wrap,WrappedFunction,14051,https://root.cern,https://github.com/root-project/root/pull/4346#issuecomment-529005715,3,['Wrap'],['WrappedFunction']
Integrability,thodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFunc.h Math/PdfFuncMathCore.h Math/ProbFunc.h Math/ProbFuncMathCore.h Math/QuantFunc.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/io/xmlparser && /usr/local/bin/cmake -E env LD_LIBRARY_PATH=/mnt/build/workspace/root-pullrequests-build/build/lib: ROOTIGNOREPREFIX=1 /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling -rootbuild -v2 -f G__XMLParser.cxx -cxxmodule -s /mnt/build/workspace/root-pullrequests-build/build/lib/libXMLParser.so -m libCore_rdict.pcm -excludePath /mnt/build/workspace/root-pullrequests-build/root -excludePath /mnt/build/workspace/root-pullrequests-build/build -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/etc/cling/ -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullreque,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4346#issuecomment-528976735:4160,Wrap,WrappedFunction,4160,https://root.cern,https://github.com/root-project/root/pull/4346#issuecomment-528976735,2,['Wrap'],['WrappedFunction']
Integrability,tiGenFunctionTempl&lt;double&gt;' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:38:42: error: typedef redefinition with different types ('ROOT::Math::IBaseFunctionMultiDim' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:154:37: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:174:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:180:43: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:193:40: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:215:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:219:43: error: only virtual member functions can be marked 'override' . ### Warnings:; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDataSource.hxx:213:11: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute ',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373548076:1819,Wrap,WrappedFunction,1819,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373548076,1,['Wrap'],['WrappedFunction']
Integrability,"tion (this=0x165715770, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #20 0x00007fff768fea38 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #21 0x00007fff76908a68 in TClingCallFunc::make_wrapper (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1006; #22 0x00007fff76908e78 in TClingCallFunc::IFacePtr (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:2004; #23 0x00007fff7682c3bc in TCling::CallFunc_IFacePtr (this=<optimized out>, func=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:7888; #24 0x00007fff7ca8f81c in GetCallFunc (method=<optimized out>) at /usr/include/c++/8/bits/locale_facets.h:877; #25 WrapperCall (method=6088041216, nargs=2, args_=0x7fffc4480880, self=0x16b1482f0, result=0x16b0b6990) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (method=6088041216, self=0x16b1482f0, nargs=2, args=0x7fffc4480880, result_type=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:31293,Wrap,WrapperCall,31293,https://root.cern,https://github.com/root-project/root/issues/12372,1,['Wrap'],['WrapperCall']
Integrability,"tion ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]; 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override; | ~~~~~~~~~~~~~~~~~^~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]; 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override; | ~~~~~~~~~~^~~~; [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so; /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':; JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'; collect2: error: ld returned 1 exit status; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1; make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src; > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:5931,integrat,integration,5931,https://root.cern,https://github.com/root-project/root/issues/13101,1,['integrat'],['integration']
Integrability,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:2948,message,message,2948,https://root.cern,https://github.com/root-project/root/issues/12430,1,['message'],['message']
Integrability,"tl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, unsigned int stride = 1) =>; runtime_error: Range: stride must be strictly greater than 0 an",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:4594,message,message,4594,https://root.cern,https://github.com/root-project/root/issues/12429,1,['message'],['message']
Integrability,"tocol successful (type: manager [], protocol version 500). Failed BNL:. https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout. [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: manager [], protocol version 500). Fail Romania:. https://bigpanda.cern.ch//media/filebrowser/60928171-593f-4422-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout. [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 400). Fail canada:. https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout. [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400). Failed CERN:. https://bigpanda.cern.ch//media/filebrowser/c4b9c33e-f260-46b5-9b07-40d54ddef09b/panda/tarball_PandaJob_4926196336_CERN/payload.stdout. [2020-12-19 01:47:52.683440 +0100][Debug ][XRootDTransport ] [eosatlas.cern.ch:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 400). Failed Technion:. https://bigpanda.cern.ch//media/filebrowser/a51fb0cb-4f96-4442-b0c2-ea15e6d72bf7/panda/tarball_PandaJob_4926186375_TECHNION/payload.stdout. [2020-12-19 02:37:01.970916 +0200][Debug ][XRootDTransport ] [tech-gftp.hep.technion.ac.il:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400). Failed Manchester:. https://bigpanda.cern.ch//media/filebrowser/75e12a74-de3e-4b78-bc16-cfcde3fdcb77/panda/tarball_PandaJob_4926186317_UKI-NORTHGRID-MAN-HEP/payload.stdout. [2020-12-19 00:36:00.516637 +0000][Debug ][XRootDTransport ] [bohr3226.tier2.hep.manchester.ac.uk:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 500)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758062082:4009,protocol,protocol,4009,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758062082,3,['protocol'],['protocol']
Integrability,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:24092,message,message,24092,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,"tp_iter is used to implement an iterator protocol for Python using the; ""data"" member function of std::vector. However, the specialization; `vector<bool>` is not required to have this member function, which; breaks the iterator. Removing the tp_iter field does not break iterating; vector<bool> in Python, it falls back to the old iterator mechanism via; the get/setitem special functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4731:41,protocol,protocol,41,https://root.cern,https://github.com/root-project/root/pull/4731,1,['protocol'],['protocol']
Integrability,tps://epsft-jenkins.cern.ch/job/root-pullrequests-build/63570/console).; ### Errors:; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - CMake Error at VC-stamp/VC-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - CMake Error at TBB-stamp/TBB-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - CMake Error at VDT-stamp/VDT-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4097#issuecomment-512764850:962,message,message,962,https://root.cern,https://github.com/root-project/root/pull/4097#issuecomment-512764850,1,['message'],['message']
Integrability,ts-build/root/core/base/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/macosx/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/winnt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/io/io/res -writeEmptyRootPCM ROOT/RCanvas.hxx ROOT/RFrame.hxx ROOT/RMenuItem.hxx ROOT/RObjectDrawable.hxx ROOT/RColor.hxx ROOT/RDisplayItem.hxx ROOT/RDrawingAttr.hxx ROOT/RDrawingOptsBase.hxx ROOT/RPalette.hxx ROOT/RStyle.hxx ROOT/RPadDisplayItem.hxx ROOT/RPadExtent.hxx ROOT/RPad.hxx ROOT/RPadLength.hxx ROOT/RPadPainter.hxx ROOT/RPadPos.hxx ROOT/RPadUserAxis.hxx ROOT/RVirtualCanvasPainter.hxx /mnt/build/workspace/root-pullrequests-build/root/graf2d/gpadv7/inc/LinkDef.h ; - Error: Had to build non-system module ROOTGraphicsPrimitives implicitly. You first need to ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RAttrLine.hxx:19:10: fatal error: cyclic dependency in module 'ROOTGpadv7': ROOTGpadv7 -&gt; ROOTGraphicsPrimitives -&gt; ROOTGpadv7 ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RFrame.hxx:19:10: fatal error: could not build module 'ROOTGraphicsPrimitives' ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libROOTGpadv7d5165452bb_dictUmbrella.h),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3700#issuecomment-483554021:2868,depend,dependency,2868,https://root.cern,https://github.com/root-project/root/pull/3700#issuecomment-483554021,1,['depend'],['dependency']
Integrability,ttest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 1 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1849,interface,interface,1849,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468,2,['interface'],['interface']
Integrability,ttest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1595,interface,interface,1595,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827,2,['interface'],['interface']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393289526:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393289526,2,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/28689/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-394262891:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-394262891,2,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/28729/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2130#issuecomment-394298233:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2130#issuecomment-394298233,2,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1973#issuecomment-394348081:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/1973#issuecomment-394348081,2,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,2,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/31336/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2251#issuecomment-400304937:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2251#issuecomment-400304937,2,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/35709/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2423#issuecomment-410609447:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2423#issuecomment-410609447,2,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411201963:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411201963,2,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,2,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/45678/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2861#issuecomment-433260714:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2861#issuecomment-433260714,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/47279/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2929#issuecomment-436387385:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2929#issuecomment-436387385,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/51378/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-454135180:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-454135180,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/51648/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2983#issuecomment-454782659:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/2983#issuecomment-454782659,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/52436/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-458141335:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-458141335,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/52472/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-458503585:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-458503585,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/52784/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’}",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3357#issuecomment-459369738:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3357#issuecomment-459369738,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/53006/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-460347884:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-460347884,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/53372/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2983#issuecomment-461825509:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/2983#issuecomment-461825509,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/54902/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3509#issuecomment-470527237:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3509#issuecomment-470527237,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/57919/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3726#issuecomment-486155559:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3726#issuecomment-486155559,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/58334/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3751#issuecomment-487600631:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3751#issuecomment-487600631,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/61815/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-503915403:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-503915403,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/71287/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4595#issuecomment-547811067:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/4595#issuecomment-547811067,1,['depend'],['depends']
Integrability,"tutorials/fit/fit1.C opens the fillrandom.root, and declared an ordering dependency that it should be run after tutorials/hist/fillrandom.C. But if then the tutorials/hist/fillrandom.py is messing with the file the tutorials/fit/fit1.C could fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10311#issuecomment-1091394355:73,depend,dependency,73,https://root.cern,https://github.com/root-project/root/pull/10311#issuecomment-1091394355,1,['depend'],['dependency']
Integrability,"ude ""TROOT.h""; #include <iostream>. struct Dummy {; double x;; };. struct Dummy2{; };. template<typename... Args, typename Extra = Dummy2>; double sumT(Args... args) {; return (args.x + ...);; }. int test() {; auto meth_explicit = gROOT->GetGlobalFunctionWithPrototype(""sumT"", ""Dummy, Dummy, Dummy"");; TMethodCall call_explicit(meth_explicit);. double res;; const Dummy arg{5.};; const void *args[3] = {&arg, &arg, &arg};; call_explicit.Execute(nullptr, args, 3, &res);; std::cout << ""res = "" << res << std::endl;. return 0;; }; ```. The attempted call fails, because the ""extra"" template argument is explicitly appended to the list of template arguments when the call wrapper is compiled. (This issue prevents templated functions with this feature being called from PyROOT). ```; In file included from input_line_8:1:; /home/b/bendavid/pyrootdebug7/test.c:16:16: error: no member named 'x' in 'Dummy2'; return (args.x + ...);; ~~~~ ^; input_line_10:8:17: note: in instantiation of function template specialization 'sumT<Dummy, Dummy, Dummy, Dummy2, Dummy2>' requested here; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; ^; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; else {; (void)(((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCallFunc::ExecWithArgsAndReturn(address, args, ret)>: Called with no wrapper, not implemented!; res = 7.31217e-322; (int) 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12549:2067,wrap,wrapper,2067,https://root.cern,https://github.com/root-project/root/issues/12549,1,['wrap'],['wrapper']
Integrability,"ue <a href=""https://github.com/minimistjs/minimist/commit/ef88b9325f77b5ee643ccfc97e2ebda577e4c4e2""><code>ef88b93</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.4...v1.2.5"">v1.2.5</a> - 2020-03-12</h2>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.3...v1.2.4"">v1.2.4</a> - 2020-03-11</h2>; <h3>Commits</h3>; <ul>; <li>security notice <a href=""https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f""><code>4cf1354</code></a></li>; <li>additional test for constructor prototype pollution <a href=""https://github.com/minimistjs/minimist/commit/1043d212c3caaf871966e710f52cfdf02f9eea4b""><code>1043d21</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.2...v1.2.3"">v1.2.3</a> - 2020-03-10</h2>; <h3>Commits</h3>; <ul>; <li>more failing proto pollution tests <a href=""https://github.com/minimistjs/minimist/commit/13c01a5327736903704984b7f65616b8476850cc""><code>13c01a5</code></a></li>; <li>even more aggressive checks for protocol pollution <a href=""https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab""><code>38a4d1c</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.1...v1.2.2"">v1.2.2</a> - 2020-03-10</h2>; <h3>Commits</h3>; <ul>; <li>failing test for protocol pollution <a href=""https://github.com/minimistjs/minimist/commit/0efed0340ec8433638758f7ca0c77cb20a0bfbab""><code>0efed03</code></a></li>; <li>cleanup <a href=""https://github.com/minimistjs/minimist/commit/67d3722413448d00a62963d2d30c34656a92d7e2""><code>67d3722</code></a></li>; <li>console.dir -&gt; console.log <a href=""https://github.com/minimistjs/minimist/commit/47acf72c715a630bf9ea013867f47f1dd69dfc54""><code>47acf72</code></a></li>; <li>don't assign onto <strong>proto</strong> <a href=""https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94""><code>63e7ed0</code></a></li>; </ul>; <!-- raw HTML omi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:4284,protocol,protocol,4284,https://root.cern,https://github.com/root-project/root/pull/11865,1,['protocol'],['protocol']
Integrability,uild failed on ROOT-fedora31/noimt.; Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/console).; ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [proj,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844244254:996,interface,interface,996,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844244254,2,['interface'],['interface']
Integrability,uild/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/macosx/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/winnt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/mnt/build/workspace/root-pullrequests-build/root/builtins/xxhash -I/mnt/build/workspace/root-pullrequests-build/root/builtins/lz4 -I/mnt/build/workspace/root-pullrequests-build/root/builtins/zlib -writeEmptyRootPCM ROOT/StringConv.hxx ROOT/TExecutor.hxx ROOT/TSequentialExecutor.hxx Buttons.h Bytes.h Byteswap.h Gtypes.h GuiTypes.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TApplicationImp.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBrowser.h TBrowserImp.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TCanvasImp.h TColorGradient.h TColor.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TDatime.h TDirectory.h TEnv.h TError.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TGuiFactory.h TInetAddress.h TInspectorImp.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjectSpy.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4270#issuecomment-524220443:5737,Message,MessageTypes,5737,https://root.cern,https://github.com/root-project/root/pull/4270#issuecomment-524220443,2,['Message'],['MessageTypes']
Integrability,"uild/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:785 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3495#issuecomment-471012018:1143,depend,depends,1143,https://root.cern,https://github.com/root-project/root/pull/3495#issuecomment-471012018,1,['depend'],['depends']
Integrability,"uild/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:807 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3875#issuecomment-496524545:1143,depend,depends,1143,https://root.cern,https://github.com/root-project/root/pull/3875#issuecomment-496524545,1,['depend'],['depends']
Integrability,"uild/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4592#issuecomment-547429612:1196,depend,depends,1196,https://root.cern,https://github.com/root-project/root/pull/4592#issuecomment-547429612,1,['depend'],['depends']
Integrability,"uilt for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/issues/10065; Here is the full list of ROOTv5.34:; ```; Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language; processor. It rather is a portable script language environment which; is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory; and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change; the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters.; This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface.; All commands must be preceded by a . (dot), except; for the evaluation statement { } and the ?.; ===========================================================================; > [file] : output redirection to [file]; 2> [file] : error redirection to [file]; >& [file] : output&error redirection to [file]; Help: ? : help; help : help; /[keyword] : search keyword in help information; Shell: ![shell] : execute shell command; Source: v <[line]>: view source code <around [line]>; V [stack] : view source code in function call stack; t : show function call stack; f [file] : select file to debug; T : turn on/off trace mode for all source; J [stat] : Set warning level [0-5]; A [1|0] : allowing automatic variable on/off; trace <classname> : turn on trace mode for class; deltrace <classname> : turn off trace mode for class; Evaluation: p [expr] : evaluate expression (no declaration/loop/condition); Evaluation: s [expr] : step into expression (no declaration/loop/condition); Eval",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:2019,interface,interface,2019,https://root.cern,https://github.com/root-project/root/issues/10191,1,['interface'],['interface']
Integrability,"ulk IO APIs aim to provide as fast access as possible in the case where the user is using relatively simple datatypes and the objects can be deserialized ""non-destructively"" (i.e., in-place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:; - A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; - A `TTreeReader`-like interface, `TTreeReaderFast`. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize *and* apply user code, rather than two.; - The intent is that this interface can be extended in the future and used by `TDataFrame`, provided we can make `TDataFrame` sufficiently fast.; - A Python-based `numpy` export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; - The `numpy` interface is low-level for Python; we intend to furth",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943:1174,interface,interfaces,1174,https://root.cern,https://github.com/root-project/root/pull/943,2,['interface'],"['interface', 'interfaces']"
Integrability,"ull ((1, 2)) __attr_access ((__read_write__, 1, 3));; #endif; ~~~. conflict with the ROOT header core/clib/inc/strlcpy.h:. ~~~.c++; size_t strlcpy(char *dst, const char *src, size_t siz);; size_t strlcat(char *dst, const char *src, size_t siz);; ~~~. Resulting in compilation errors due to different exception specifiers:. ~~~; In file included from /usr/include/c++/13/cstring:42,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of 'size_t strlcpy(char*, const char*, size_t) noexcept' has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /builddir/build/BUILD/root-6.28.04/core/textinput/src/Getline.cxx:13:; /builddir/build/BUILD/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration 'size_t strlcpy(char*, const char*, size_t)'; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of 'size_t strlcat(char*, const char*, size_t) noexcept' has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /builddir/build/BUILD/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration 'size_t strlcat(char*, const char*, size_t)'; 27 | size_t strlcat(char *dst, const char *src, size_t siz);; | ^~~~~~~; ~~~. ### Reproducer. Compile root on a system using the latest dev version of glibc, e.g. Fedora Rawhide. ### ROOT version. 6.28.04. ### Installation method. RPM package build (uses mock, i.e. a clean change root environment). ### Operating system. Fedora Rawhide (f39). ### Additional context. See the failures in Fedora's continuous integration test build at:; https://koschei.fedoraproject.org/package/root?collection=f39",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13156:2605,integrat,integration,2605,https://root.cern,https://github.com/root-project/root/issues/13156,1,['integrat'],['integration']
Integrability,ullLongDescription=This fixes test failure:\r\n```\r\n 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int)\r\nMaybe you need to load the corresponding shared library?\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*)\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-08T05:13:23.652Z] ghprbPullLongDescription=This fixes test failure:\r\n```\r\n 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int)\r\nMaybe you need to load the corresponding shared library?\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*)\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/Roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8366#issuecomment-856508685:1228,message,message,1228,https://root.cern,https://github.com/root-project/root/pull/8366#issuecomment-856508685,1,['message'],['message']
Integrability,"ullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\inc\RooSpan.h(120): error C2146: syntax error: missing '&gt;' before identifier '__restrict__' [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\inc\RooSpan.h(120): error C2146: syntax error: missing '&gt;' before identifier '__restrict__' [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\inc\RooSpan.h(120): error C2146: syntax error: missing '&gt;' before identifier '__restrict__' [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message): ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolSerializer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden (compiling source file C:\build\work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-526504754:1538,message,message,1538,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-526504754,1,['message'],['message']
Integrability,"ult_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:9884,message,message,9884,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"umentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583); ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869); ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374); ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063); ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530); ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x1293ADB4: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:853); ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312); ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455); ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55); ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678); ==92602== by 0x116EEB8F: cling::ParseProto::oper",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:13358,depend,depends,13358,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,"umentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583); ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869); ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374); ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063); ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530); ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x1293AE04: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:855); ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312); ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455); ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55); ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678); ==92602== by 0x116EEB8F: cling::ParseProto::oper",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:15984,depend,depends,15984,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,"unique_ptr can be nullptr too sometimes *and* anyway TStreamerInfo::Build does not make the same restriction.; The mismatch lead to baffling error message like:. Warning in <TStreamerInfo::BuildOld>: Cannot convert A::h from type: B to type: B, skip element. This solves one of the problems seen in https://sft.its.cern.ch/jira/browse/ROOT-9702.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2960:147,message,message,147,https://root.cern,https://github.com/root-project/root/pull/2960,1,['message'],['message']
Integrability,unittests-pyroot-pyz-rdataframe-asnumpy; Start 55: pyunittests-pyroot-pyz-rdataframe-makenumpy; 134/1231 Test #55: pyunittests-pyroot-pyz-rdataframe-makenumpy ......................... Passed 10.99 sec; 151/1231 Test #54: pyunittests-pyroot-pyz-rdataframe-asnumpy ........................... Passed 23.56 sec; Start 363: gtest-tree-dataframe-test-dataframe-friends; Start 364: gtest-tree-dataframe-test-dataframe-colnames; Start 365: gtest-tree-dataframe-test-dataframe-cache; 388/1231 Test #364: gtest-tree-dataframe-test-dataframe-colnames ........................ Passed 4.40 sec; Start 366: gtest-tree-dataframe-test-dataframe-callbacks; 389/1231 Test #363: gtest-tree-dataframe-test-dataframe-friends ......................... Passed 10.87 sec; Start 367: gtest-tree-dataframe-test-dataframe-histomodels; 390/1231 Test #366: gtest-tree-dataframe-test-dataframe-callbacks ....................... Passed 8.60 sec; Start 368: gtest-tree-dataframe-test-dataframe-interface; Start 369: gtest-tree-dataframe-test-dataframe-nodes; 392/1231 Test #369: gtest-tree-dataframe-test-dataframe-nodes ........................... Passed 2.13 sec; Start 370: gtest-tree-dataframe-test-dataframe-regression; 393/1231 Test #367: gtest-tree-dataframe-test-dataframe-histomodels ..................... Passed 19.30 sec; Start 371: gtest-tree-dataframe-test-dataframe-utils; 394/1231 Test #371: gtest-tree-dataframe-test-dataframe-utils ........................... Passed 1.38 sec; Start 372: gtest-tree-dataframe-test-dataframe-report; 395/1231 Test #370: gtest-tree-dataframe-test-dataframe-regression ...................... Passed 12.11 sec; Start 373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview; 396/1231 Test #372: gtest-tree-dataframe-test-dataframe-report .......................... Passed 0.79 sec; Start 374: gtest-tree-dataframe-test-dataframe-redefine; 397/1231 Test #373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview ............. Passed 1.07 sec; Start 375: gtest-tree-dataframe-tes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:1252,interface,interface,1252,https://root.cern,https://github.com/root-project/root/pull/10300,1,['interface'],['interface']
Integrability,"unity is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable?. Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right?. Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870411730:3220,depend,depends,3220,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870411730,2,['depend'],['depends']
Integrability,"until a register value is repeated (or maxPeriod is reached); * @tparam k the length of the LFSR, or the order of the monic polynomial PRBS-k (last exponent); * @tparam nTaps the number of taps; * @param start the start value of the LFSR; * @param taps the taps that will be XOR-ed to calculate the new bit. They are the exponents of the monic polynomial. Ordering is unimportant.; * @param wrapping if true, allow wrapping until maxPeriod or start is reached; * @param verbose if true, print the lfsr and new bit on each step; * @note Shift direction of the register is to the left <<, the newBit is set at bit position 0 (right); * @return the array of pseudo random bits, or an empty array if input was incorrect; * @see https://en.wikipedia.org/wiki/Monic_polynomial; * @see https://en.wikipedia.org/wiki/Linear-feedback_shift_register; * @see https://en.wikipedia.org/wiki/Pseudorandom_binary_sequence; */; template <size_t k, size_t nTaps>; vector<bool>; LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false); {; vector<bool> result;; //Sanity-checks; if(taps.size()<2); {; cerr << ""At least two taps are needed"" << endl;; return result;; }; for(auto tap : taps); {; if(tap > k); {; cerr << ""Out of range tap "" << tap << endl;; return result;; }; }; if(start.none()); {; cerr << ""A non-zero start value is needed"" << endl;; return result;; }. const uint32_t maxPeriod = pow(2,k) - 1;; result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;; bitset<k> lfsr(start);; uint32_t i = 0;; do; {; // XOR of all the tapped bits. We use -1 because an exponent N in the monic polynomial corresponds to bitset index N-1; bool newBit = lfsr[taps.at(0) - 1];; for(uint16_t j = 1; j < taps.size() ; ++j); {; newBit ^= lfsr[taps.at(j) - 1];; }. lfsr <<= 1;; lfsr[0] = newBit;; if(verbose); {; cout << i << "" "" << newBit << "" "" << lfsr << endl;; }; result.emplace_back(newBit);; ++i;. if(!wrapping); {; if(lfsrHistory.count(lfsr.to_ulong())); {; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8199#issuecomment-843369054:1408,wrap,wrapping,1408,https://root.cern,https://github.com/root-project/root/issues/8199#issuecomment-843369054,2,['wrap'],['wrapping']
Integrability,"ur nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```; Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C...; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]!; You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(); Maybe you need to load the corresponding shared library?; CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):; error code: 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6563:1726,interface,interface,1726,https://root.cern,https://github.com/root-project/root/issues/6563,2,"['interface', 'message']","['interface', 'message']"
Integrability,"urce> <dest>`; It set current time when file is copied.; Fine if changing done locally - new file modification will trigger; file copy. But problem appears when changes checkout from repository.; Git preserves time of last modification and this conflicts with logic; of incremental build. Example: . If one builds ROOT today, all files stamp will be from today in build directory.; If somebody commit changes already yesterday, all timestamps for that; changes will be from yesterday. If one checkout these commits, checked out ; files will get time stamps from yesterday. And when running cmake - it will do nothing. This is typical case with `js/` and `ui5/` folders with many files inside.; Very often changes in JSROOT and openui5 are missed by incremental builds. The only way to preserve timestamp in cmake - use `file(COPY ...)` command.; This PR does exactly this. . BUT!!! Drawback - cmake always run rule if source and target file stamps; matches. Incremental builds will be always filled with messages (even when nothing is changed). I did not found way to convince cmake do nothing if time stamp matches.; Probably, there is somewhere the option. Maybe one can apply such brutal-force; approach for `ui5/` and `js/` folders, where main problems appears for me. ```; [ 56%] Generating tutorials/fit/graph2dfit.C; [ 56%] Generating tutorials/fit/langaus.C; [ 56%] Generating tutorials/fit/line3Dfit.C; [ 56%] Generating tutorials/fit/minuit2FitBench.C; [ 56%] Generating tutorials/fit/minuit2GausFit.C; [ 56%] Generating tutorials/fit/minuit2FitBench2D.C; [ 56%] Generating tutorials/fit/multifit.py; [ 56%] Generating tutorials/fit/myfit.C; [ 56%] Generating tutorials/fit/multifit.C; [ 56%] Generating tutorials/fit/multidimfit.C; [ 56%] Generating tutorials/fit/qa2.C; [ 56%] Generating tutorials/fitsio/FITS_tutorial3.C; [ 56%] Generating tutorials/fit/vectorizedFit.C; [ 56%] Generating tutorials/fitsio/FITS_tutorial1.C; [ 56%] Generating tutorials/fitsio/FITS_tutorial2.C; [ 56%] Gene",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9804:1119,message,messages,1119,https://root.cern,https://github.com/root-project/root/pull/9804,1,['message'],['messages']
Integrability,"using namespace RooFit;. void rf801_mcstudy(); {; RooRealVar x(""x"", ""x"", 0, 10);; x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);; RooRealVar sigma(""sg"", """", 0.5);; RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));; //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)); mcstudy->generateAndFit(1000, 1000);; }; ```; ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python; msg = ROOT.RooMsgService.instance(); str_z=msg.getStream(0); str_z.minLevel = ROOT.RooFit.WARNING; ```; which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved; If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one.; 2. Use a progress bar for the `run` message. ### To Reproduce; You can just run the code I put above. ### Setup; 1. ROOT version: 6.24/06; 2. Operating system: Linux manjaro 5.15.7-1-MANJARO; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489:1518,message,message,1518,https://root.cern,https://github.com/root-project/root/issues/9489,4,['message'],"['message', 'messages']"
Integrability,"usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/bindings/pyroot/inc -Iinclude -I/mnt/build/workspace/root-pullrequests-build/root/bindings/pyroot -I/usr/include/python2.7 -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -fno-strict-aliasing -Wno-parentheses-equality -Wno-cast-function-type -Wno-deprecated-register -Wno-register -std=c++11 -MD -MT bindings/pyroot/CMakeFiles/PyROOT.dir/src/Converters.cxx.o -MF bindings/pyroot/CMakeFiles/PyROOT.dir/src/Converters.cxx.o.d -o bindings/pyroot/CMakeFiles/PyROOT.dir/src/Converters.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/bindings/pyroot/src/Converters.cxx ; - /mnt/build/workspace/root-pullrequests-build/root/bindings/pyroot/src/Converters.cxx:860:25: error: converting to ‘std::tuple&lt;const char*, long int&gt;’ from initializer list would use explicit constructor ‘constexpr std::tuple&lt;_T1, _T2&gt;::tuple(_U1&&, _U2&&) [with _U1 = char*&; _U2 = long int&; &lt;template-parameter-2-3&gt; = void; _T1 = const char*; _T2 = long int]’ . ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:865 (message): ; - cc1plus: warning: unrecognized command line option ‘-Wno-register’ ; - cc1plus: warning: unrecognized command line option ‘-Wno-deprecated-register’ ; - cc1plus: warning: unrecognized command line option ‘-Wno-cast-function-type’ ; - cc1plus: warning: unrecognized command line option ‘-Wno-parentheses-equality’",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4345#issuecomment-528012009:1851,message,message,1851,https://root.cern,https://github.com/root-project/root/pull/4345#issuecomment-528012009,1,['message'],['message']
Integrability,"ut adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: ; ```cpp; //subroutine.C. // my_subroutines.C; void my_subroutine(unique_ptr<TH1> &x) {; x.reset(); // not needed for TH1F, but safer in general.; x.reset(new TH1F());; // .. do something with it.; }; ```; ```cpp; //make_th1.C. vector<unique_ptr<TH1>> make_th1() { //edit: changed to TH1's here; vector<unique_ptr<TH1>> retvec(3); // and here, as intended.; for (int i=0; i<3; i++) {; my_subroutine(retvec[i]);; }; return retvec;; }; ```. But the end-user can decide. Again, the subroutine works regardless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:6180,rout,routine,6180,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,2,['rout'],['routine']
Integrability,"ut default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596:2650,integrat,integrate,2650,https://root.cern,https://github.com/root-project/root/pull/8596,1,['integrat'],['integrate']
Integrability,ut](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/console).; ### Warnings:; - [2021-03-22T09:08:25.235Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.036Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.297Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.557Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.817Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:28.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.858Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:30.685Z] /Users/sftnight/build/workspace/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803932665:1183,Interface,InterfaceUtils,1183,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803932665,1,['Interface'],['InterfaceUtils']
Integrability,"utions and functions from dicts to arrays; [RF][HS3] Change some fields to use arrays and not dictionaries; [RF] Suggest alternative to RooDataSet c'tor that takes weight name; [RF] Add unit test for splitting RooDataSets with weight errors; [RF] Add weight errors and not weight squared when filling split data; [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`; [RF][HS3] Don't assume that combined dataset name is always `""obsData""`; [RF][HS3] Use less `c_str()` conversions in RooFitHS3; [RF][HS3] New `wsEmplace()` method for creating objects in workspace; [RF][HS3] New `wsImport()` function to avoid repeating command args; [RF] Less manual memory management in RooAbsArg and RooProdGenContext; [RF] Code modernization of RooAbsReal; [RF][HS3] Renaming some distributions to conform with HS3 standard; [RF][HS3] Use HistFunc variables instead of underlying hist variables; [RF] Added protection against invalid variable names in createHistogram; [RF][HS3] Correct error messages when IO keys are missing; [RF][HS3] Code improvements in HS3 HistFactory; [RF][HS3] Small HS3 closure fixes; [RF][HS3] Import HistFactory constraints directly upon creation; [RF][HS3] Cleanup of generic functions to avoid using arguments; [RF][HS3] Don't import embedded data directly to RooWorkspace; [RF] Avoid false warnings in RooAbsReal::createHistogram(); [RF][HS3] Reduce verbosity of unit tests; [RF][HS3] Less usage of TString; [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets; [RF][HS3] Remove unused functions from JSONFactories_HistFactory; [RF][HS3] Export `staterror` correctly for HistFactory; [RF][HS3] Major restructuring of HistFactory in HS3 - part 2; [RF][HS3] Major refactoring of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:5553,message,messages,5553,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,4,['message'],['messages']
Integrability,"v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:2475,Depend,Dependabot,2475,https://root.cern,https://github.com/root-project/root/pull/11864,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,v6.20 - Load dependent libraries as part of AutoLoading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5713:13,depend,dependent,13,https://root.cern,https://github.com/root-project/root/pull/5713,1,['depend'],['dependent']
Integrability,v6.20: Fix potential startup error messages on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5628:35,message,messages,35,https://root.cern,https://github.com/root-project/root/pull/5628,1,['message'],['messages']
Integrability,v622 - Load dependent libraries as part of AutoLoading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5712:12,depend,dependent,12,https://root.cern,https://github.com/root-project/root/pull/5712,1,['depend'],['dependent']
Integrability,va/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/TransformationHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Types.h: mutable MsgLogger* fLogger; // ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2439,message,message,2439,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"vailable [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ mu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-541874616:1580,depend,depend,1580,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-541874616,1,['depend'],['depend']
Integrability,"vailable [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ mu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-541874616:1329,depend,depend,1329,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-541874616,1,['depend'],['depend']
Integrability,"vailable [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ mu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-543261278:1580,depend,depend,1580,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-543261278,1,['depend'],['depend']
Integrability,"vailable [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ mu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-543261278:1329,depend,depend,1329,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-543261278,1,['depend'],['depend']
Integrability,"ver.cmake""; 882: Environment variables:; 882: ROOT_HIST=0; 882: Test timeout computed to be: 1500; 882: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 882: error code: -529697949; 882:; 882:; 5/16 Test #882: tutorial-dataframe-df006_ranges-py .......................***Failed 4.42 sec; test 883; Start 883: tutorial-dataframe-df007_snapshot-py. 883: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df007_snapshot.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 883: Environment variables:; 883: ROOT_HIST=0; 883: Test timeout computed to be: 1500; 883: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 883: error code: -529697949; 883:; 883:; 6/16 Test #883: tutorial-dataframe-df007_snapshot-py .....................***Failed 4.47 sec; test 884; Start 884: tutorial-dataframe-df008_createDataSetFromScratch-py. 884: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df008_createDataSetFromScratch.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 884: Environment variables:; 884: ROOT_HIST=0; 884: Test timeout computed to be: 1500; 884: input_line_40:2:211: warning: missing terminating '""' character [-Winvalid-pp-token]; 884: *reinterpret_cast<ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager>>*>(0x62d78c) = reinterpret_cast<ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase>*>(0x62d7a8)->Snapshot<double>("" [R<U+0013>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:4777,message,message,4777,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,ver.cmake:237 (message):\r\n error code: 1\r\n\r\n1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-12T06:56:09.498Z] ghprbPullLongDescription=This addresses test failures like:\r\n```\r\n 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1007/1157 Test #1007: tutorial-v7-draw_subpads.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417#issuecomment-860019280:1820,interface,interface,1820,https://root.cern,https://github.com/root-project/root/pull/8417#issuecomment-860019280,1,['interface'],['interface']
Integrability,"verloaded ‘ConstrainedParameters(&lt;brace-enclosed initializer list&gt;)’ is ambiguous ; - [2021-11-29T20:41:10.037Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/TestStatistics/testLikelihoodGradientJob.cpp:469:76: error: call of overloaded ‘GlobalObservables(&lt;brace-enclosed initializer list&gt;)’ is ambiguous . ### Warnings:; - [2021-11-29T20:38:45.207Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:38:45.207Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982003312:1385,synchroniz,synchronizeParameterSettings,1385,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982003312,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,very good. I actually linked a fix to this messages directly in the start of my bug report.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13560#issuecomment-1697299774:43,message,messages,43,https://root.cern,https://github.com/root-project/root/issues/13560#issuecomment-1697299774,1,['message'],['messages']
Integrability,"void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 192 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47634/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2943#issuecomment-437335723:2420,depend,depends,2420,https://root.cern,https://github.com/root-project/root/pull/2943#issuecomment-437335723,1,['depend'],['depends']
Integrability,"warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 1184 more. ### Failing tests:; - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56136/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_utils_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56136/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_utils_doctest/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3619#issuecomment-478136552:2426,depend,depends,2426,https://root.cern,https://github.com/root-project/root/pull/3619#issuecomment-478136552,1,['depend'],['depends']
Integrability,"warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 1184 more. ### Failing tests:; - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66556/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_utils_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66556/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_utils_doctest/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4309#issuecomment-526262587:2426,depend,depends,2426,https://root.cern,https://github.com/root-project/root/pull/4309#issuecomment-526262587,1,['depend'],['depends']
Integrability,"we should try to fix that, so that each TBranch is a single zlib stream when compressed with zlib. Yes and the chunking of the generation is determining the clusters size. We wanted to increase the number of tasks based on that idea, but the TTree clusters are not actually set by this. It is set by the auto-save option<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_blob_master_tree_dataframe_inc_ROOT_RSnapshotOptions.hxx-23L35&d=DwMFaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=UWfwI6PGOKY1hmtnuMh4_A&m=xs3jkKpmLeMypw1lXllSZjdULkrCzzEkzX8vpGMM9yc&s=txfsLH9Ss0Rd1-_XgaCU94eGPUrmNZ7w20xQN3AMsyw&e=> in RSnapshotOptions. The problem is that the default is to not auto-save, but save only when calling Write(), which then happens only at the end of a full task that may generate lots of data that will stay in memory until the end. It's probably enough to make auto-save default to save at every 5-10% of generated data. We already call Write() depending on this setting, so in principle there's no need to increase the number of tasks. This is a bit surprising. The TTree is supposed to be re-using as much as possible the memory chunk (both the compression buffer and the TBuffer) as much as possible. The TTree is reusing memory chunks for the baskets, but the TBB task arenas that are created for each TTree:Fill() are not. They are created by a TBranchIMTHelper that is created on the stack<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_blob_master_tree_tree_src_TTree.cxx-23L4406&d=DwMFaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=UWfwI6PGOKY1hmtnuMh4_A&m=xs3jkKpmLeMypw1lXllSZjdULkrCzzEkzX8vpGMM9yc&s=9vBGU4V_H1c-CBOJQ2AX0dDxhzuNM6Jn0jE9OHzgqgk&e=> in TTree::Fill(). I had already noticed this before (see 5ba88aa<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_commit_5ba88aa3bf2e0ffe222968f9b6f029bf8f4ead57&d=DwMFaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=UWfwI6PGOKY1hmtnuMh4_A&m=xs3jkKpmLeMypw1lXllSZjdULkrCzzEkzX8vpGMM9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3385#issuecomment-461577552:2616,depend,depending,2616,https://root.cern,https://github.com/root-project/root/pull/3385#issuecomment-461577552,1,['depend'],['depending']
Integrability,"webgui: adjust v7 classes drawing, synchronize jsroot code",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1647:35,synchroniz,synchronize,35,https://root.cern,https://github.com/root-project/root/pull/1647,1,['synchroniz'],['synchronize']
Integrability,webgui: introduce binary interface for TWebWindow,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1785:25,interface,interface,25,https://root.cern,https://github.com/root-project/root/pull/1785,1,['interface'],['interface']
Integrability,"ween incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 192 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47486/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2943#issuecomment-437034013:2420,depend,depends,2420,https://root.cern,https://github.com/root-project/root/pull/2943#issuecomment-437034013,1,['depend'],['depends']
Integrability,"well, that's easily fixed as well:; ```cmake; try_compile(FWD_DECLARE MYBINDIR forward_declare.cpp); try_compile(FWD_HEADER MYBINDIR forward_header.cpp); if(FWD_DECLARE); message(""Using forward declaration for nlohmann_json""); elseif(FWD_HEADER); message(""Using forward header from nlohmann_json""); else(); set(DO_WHATEVER_NLOHMANM_3.11.0_NEEDS ON); message(""using the special code that nlohmann 3.11.0 needs""); endif(); ```; But it's up to you. Arch Linux package builds now, so I am satisfied. Thanks for the help and quick response!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1219649968:171,message,message,171,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1219649968,3,['message'],['message']
Integrability,"what is the difference between `histogram_freq=0` and `...=1`? I would like to know the reason for the options that differ from the default. I would set the `write_images` to `False`, because the current PyKeras interface is not desigend for image data. What about `write_grads`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1353#issuecomment-350036293:212,interface,interface,212,https://root.cern,https://github.com/root-project/root/pull/1353#issuecomment-350036293,1,['interface'],['interface']
Integrability,"wiseInterpolation.; 51a50839b6 [RF] Extend `testHistFactory` unit test to fit with code generation AD; efecd18bcc [RF] Add `""codegen""` as new option for `BatchMode()`; 6df4d2e80e [RF] Add `RooAbsReal::hasGradient()` and `gradient()` interface; 8adfe677a1 [RF] Only use floating parameters in RooFuncWrapper; 168b9ef861 [RF] Add Code-Squash AD support for RooFlexibleInterpVar.; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:4862,interface,interface,4862,https://root.cern,https://github.com/root-project/root/pull/13295,1,['interface'],['interface']
Integrability,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log; ```; root.exe -l -q -b -n -x hsimple.C; ===========================================================; There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so).; This is the entire stack trace of all threads:; ===========================================================; #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6; #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6; #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0; #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so; #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so; #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so; #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so; #7 <signal handler called>; #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6; #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-975756188:121,integrat,integration,121,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-975756188,1,['integrat'],['integration']
Integrability,workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/winnt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/mnt/build/workspace/root-pullrequests-build/root/builtins/xxhash -I/mnt/build/workspace/root-pullrequests-build/root/builtins/lz4 -I/mnt/build/workspace/root-pullrequests-build/root/builtins/zlib -I/mnt/build/workspace/root-pullrequests-build/root/builtins/zstd -writeEmptyRootPCM ROOT/StringConv.hxx ROOT/TExecutor.hxx ROOT/TSequentialExecutor.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TError.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4563#issuecomment-544634073:3099,Message,MessageTypes,3099,https://root.cern,https://github.com/root-project/root/pull/4563#issuecomment-544634073,1,['Message'],['MessageTypes']
Integrability,workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/103134/console).; ### Errors:; - [2020-12-01T17:10:04.934Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - [2020-12-01T17:10:04.934Z] CMake Error at VDT-stamp/VDT-download-Release.cmake:49 (message): ; - [2020-12-01T17:10:04.934Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - [2020-12-01T17:10:04.934Z] CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:49 (message): ; - [2020-12-01T17:10:07.471Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - [2020-12-01T17:10:07.471Z] CMake Error at TBB-stamp/TBB-download-Release.cmake:49 (message): ; - [2020-12-01T17:10:07.471Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download ; - [2020-12-01T17:10:07.471Z] CMake Error at VECCORE-stamp/VECCORE-download-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760#issuecomment-736690756:1152,message,message,1152,https://root.cern,https://github.com/root-project/root/pull/3760#issuecomment-736690756,3,['message'],['message']
Integrability,"workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/123928/console).; ### Errors:; - [2021-08-03T11:18:56.328Z] ghprbPullLongDescription=Fix the following compilation errors when using the /std:c++17 flag on Windows:\r\n```\r\nroofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'\r\nroofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called\r\nroofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'\r\nroofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'\r\nroofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called\r\nroofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'\r\nroofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'\r\nroofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called\r\nroofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'\r\n```\r\n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8789#issuecomment-891808563:1260,message,message,1260,https://root.cern,https://github.com/root-project/root/pull/8789#issuecomment-891808563,4,['message'],['message']
Integrability,"x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); IncrementalExecutor::executeFunction: symbol '_ZNK5cling5Value5getAsIP4TH1FEET_v' unresolved while linking function '_GLOBAL__sub_I_cling_module_25'!; You are probably missing the definition of TH1F* cling::Value::getAs<TH1F*>() const; Maybe you need to load the corresponding shared library?; ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); terminate called after throwing an instance of 'cling::InvalidDerefException'; what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:6881,rout,routine,6881,https://root.cern,https://github.com/root-project/root/issues/11385,1,['rout'],['routine']
Integrability,"x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); IncrementalExecutor::executeFunction: symbol '_ZNK5cling5Value5getAsIP4TH1FEET_v' unresolved while linking function '_GLOBAL__sub_I_cling_module_25'!; You are probably missing the definition of TH1F* cling::Value::getAs<TH1F*>() const; Maybe you need to load the corresponding shared library?; ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); terminate called after throwing an instance of 'cling::InvalidDerefException'; what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1250106081:6933,rout,routine,6933,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1250106081,1,['rout'],['routine']
Integrability,"xec<0>' requested here; static_cast<Action_t *>(this)->Exec(slot, entry, TypeInd_t());; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:223:4: note: in instantiation of member function 'ROOT::Internal::RDF::RActionCRTP<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > > >::Run' requested here; RAction(Helper &&h, const ColumnNames_t &bl, std::shared_ptr<PrevDataFrame> pd,; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/bin/../lib/gcc/x86_64-conda-linux-gnu/7.5.0/../../../../x86_64-conda-linux-gnu/include/c++/7.5.0/bits/unique_ptr.h:821:34: note: in instantiation of member function 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::RAction' requested here; { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:157:19: note: in instantiation of function template specialization 'std::make_unique<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >, ROOT::Internal::RDF::FillHelper, const std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &, std::shared_ptr<ROOT::Detail::RDF::RNodeBase>, ROOT::Internal::RDF::RBookedCustomColumns>' requested here; return std::make_unique<Action_t>(Helper_t(h, nSlots), bl, std::move(prevNode), std::move(customColumns));; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:458:21: note: in instantiation of function template specialization 'ROOT::Internal::RDF::BuildAction<ROOT::VecOps::RVec<bool> , ROOT::Detail::RDF::RNodeBase>' requested here; auto act",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:6116,Interface,InterfaceUtils,6116,https://root.cern,https://github.com/root-project/root/issues/6675,1,['Interface'],['InterfaceUtils']
Integrability,"xport/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96C92BA: clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96D1399: clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96D273F: clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x958FFD0: clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628==; ==75628== Conditional jump or move depends on uninitialised value(s); ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x99029E8: clang::CodeGen::CodeGenFunction::EmitCall(clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCallee const&, clang::CodeGen::ReturnValueSlot, clang::CodeGen::CallArgList const&, llvm::CallBase**, bool, clang::SourceLocation) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x996CD27: clang::CodeGen::CodeGenFunction::EmitCall(clang::QualType, clang::CodeGen::CGCallee const&, clang::CallExpr const*, clang::CodeGen::ReturnValueSlot, llvm::Value*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02);",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16123:2732,depend,depends,2732,https://root.cern,https://github.com/root-project/root/issues/16123,1,['depend'],['depends']
Integrability,y.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:30: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:36: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:42: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:49: error: non-member function cannot have 'const' qualifier ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:7: error: 'virtual' can only appe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-866798208:6253,Wrap,WrappedFunction,6253,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-866798208,1,['Wrap'],['WrappedFunction']
Integrability,"yndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131164/console).; ### Errors:; - [2021-11-29T20:41:10.037Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/TestStatistics/testLikelihoodGradientJob.cpp:468:91: error: call of overloaded ‘ConstrainedParameters(&lt;brace-enclosed initializer list&gt;)’ is ambiguous ; - [2021-11-29T20:41:10.037Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/TestStatistics/testLikelihoodGradientJob.cpp:469:76: error: call of overloaded ‘GlobalObservables(&lt;brace-enclosed initializer list&gt;)’ is ambiguous . ### Warnings:; - [2021-11-29T20:38:45.207Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:38:45.207Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual voi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982003312:1034,synchroniz,synchronizeParameterSettings,1034,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982003312,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"you should see the warnings regarding the comparisons of `unsigned long` and `int` as well on your system. can you check? the tests for all builds seem to be fine. is it possible for you to access [cdash.cern.ch](cdash.cern.ch)?. as well, please rebase and squash your commits in a single commit with a meaningful message. last change: please put a `[TMVA]` tag at the begin of your commit message so that it's clear what you've worked on in the commit history.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2309#issuecomment-404080279:314,message,message,314,https://root.cern,https://github.com/root-project/root/pull/2309#issuecomment-404080279,4,['message'],['message']
Integrability,"ze_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 65 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46194/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46194/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-434619561:3181,depend,depends,3181,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-434619561,1,['depend'],['depends']
Integrability,"zed. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same.; 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree).; 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup; 1. ROOT 6.22/06. ### Additional context; I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7308:2752,interface,interfaces,2752,https://root.cern,https://github.com/root-project/root/issues/7308,1,['interface'],['interfaces']
Integrability,"zer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98; ==5670==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the outpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:9098,message,message,9098,https://root.cern,https://github.com/root-project/root/issues/13996,2,['message'],['message']
Integrability,"~~Only problem so far:The runtime is heavily dependent on pulling the data from the source. eospublic.cern.ch+xrootd seems to be even slower than root.cern.ch+davix. A full run on my laptop takes about 15min to 30min (why this fluctuates so much?) compared to about 40s having the files locally.~~. ~~Edit: Probaly it was an issue with my network connection? This run took only 2min. I'll investigate further.~~. Edit: Everything is fine. From different machines it takes with proper connection (from CERN and KIT) about 2min to process to 7GB. However, for users with poor internet connection, it may take a while.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2803#issuecomment-430339684:45,depend,dependent,45,https://root.cern,https://github.com/root-project/root/pull/2803#issuecomment-430339684,1,['depend'],['dependent']
Integrability,… case. Thanks @Axel-Naumann !. This fixes the performance issues for millions of request to the type system from cppyy if the type is for example a `std::vector<int>`. Waiting for response of Wim for integration in the official cppyy-clingwrapper repo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3515:201,integrat,integration,201,https://root.cern,https://github.com/root-project/root/pull/3515,1,['integrat'],['integration']
Integrability,"… enum. Extend root-project/root@c14934ec983 to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. ```; scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^; ```. cc: @smuzaffar, @davidlange6, @oshadura.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4985:625,interface,interface,625,https://root.cern,https://github.com/root-project/root/pull/4985,2,['interface'],['interface']
Integrability,"… spectrum and adjust final plot. The files are taken form publiceos!. The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```; Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %; Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %; ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2803:909,depend,depends,909,https://root.cern,https://github.com/root-project/root/pull/2803,1,['depend'],['depends']
Integrability,…argets. ROOT builds cling and then moves a set of headers under the semi-private $ROOTSYS/etc/cling. This poses an issue -- the set of proper cling dependencies seem not enough to propagate that information to rootcling for example. Instead of adding LLVMRES to rootcling (as it is the case for rootcling_stage1) add the dependency to something more fundamental such as ClingUtils. This will propagate it transitively to all parties without having to specify the sort-of internal LLVMRES target. This patch should fix the incremental builds where the error is:; error: file '/.../RuntimePrintValue.h' from the precompiled header has been overridden. cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4488:149,depend,dependencies,149,https://root.cern,https://github.com/root-project/root/pull/4488,2,['depend'],"['dependencies', 'dependency']"
Integrability,…ath on different platforms. Also integrated in official cppyy repo:; https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3415:34,integrat,integrated,34,https://root.cern,https://github.com/root-project/root/pull/3415,1,['integrat'],['integrated']
Integrability,"…chInstalledSoftware. This change was already proposed in PR 4647, commit b8cd32, for the; following reason: apparently, SearchInstalledSoftware is called AFTER RootInstallDirs;; the consequence of this is that CMAKE_INSTALL_PYROOTDIR does not take; the proper value ONLY IF its value is NOT specified by the user.; The reason for this is that the value assigned to; CMAKE_INSTALL_PYROOTDIR depends on the Python version that is found.; For this reason, the search for Python is here moved to; RootBuildOptions, which is run BEFORE RootInstallDirs, and this; guarantees that the default value is the correct one. Example of current (wrong) behavior on an Ubuntu machine:; CMAKE_INSTALL_PYROOTDIR -> lib/site-packages. Example of correct behavior (this PR):; CMAKE_INSTALL_PYROOTDIR -> lib/python2.7/dist-packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4939:391,depend,depends,391,https://root.cern,https://github.com/root-project/root/pull/4939,2,['depend'],['depends']
Integrability,"…eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class; that inherits from the base C++	class. Since I/O on jitted classes is not; supported by ROOT, trying to pickle a cross-inheritance Python object fails.; For this to work, dictionaries would need to be generated for the jitted class; before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error; message when the user tries to pickle a cross-inheritance Python object. It is; suggested in the message to define a custom `__reduce__` method for the derived; Python class. That `__reduce__` method can e.g. return a callable and some; arguments with which the derived object can be constructed during deserialization,; thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did; not suffer from the problem described above), but serialization/deserialization; of cross-inheritance Python objects was not properly supported anyway,; since the class of the unpickled object was the base C++ class, not the derived; Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8476:89,wrap,wrapper,89,https://root.cern,https://github.com/root-project/root/pull/8476,4,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"…ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):; ```; Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid.; Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented!; ```; And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6046:355,interface,interface,355,https://root.cern,https://github.com/root-project/root/pull/6046,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"…he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):; The package name passed to `find_package_handle_standard_args` (MYSQL) does; not match the name of the calling package (MySQL). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args); cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:601 (find_package); CMakeLists.txt:168 (include); This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5245:139,message,message,139,https://root.cern,https://github.com/root-project/root/pull/5245,1,['message'],['message']
Integrability,"…header. This fixes the following errors on Windows (with all macros using `RColor`):; ```; C:\build\release\tutorials\v7>root -l box.cxx; root [0]; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6097:307,interface,interface,307,https://root.cern,https://github.com/root-project/root/pull/6097,3,['interface'],['interface']
Integrability,"…istered with gtest_main.a. Error message is not obvious: usr/bin/ld: ../../../googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function main:gtest_main.cc:(.text.startup+0x26): undefined reference to testing::InitGoogleTest(int*, char**)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5523:34,message,message,34,https://root.cern,https://github.com/root-project/root/pull/5523,1,['message'],['message']
Integrability,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5001:264,depend,depend,264,https://root.cern,https://github.com/root-project/root/pull/5001,2,"['depend', 'message']","['depend', 'message']"
Integrability,"…ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:; ```; hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types; hist\hist\inc\TF1.h(463,1): message : could be 'TString'; hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types; hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'; hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types; gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'; gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'; graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9613:310,message,message,310,https://root.cern,https://github.com/root-project/root/pull/9613,6,['message'],['message']
Modifiability," 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta-ROOT-7462-make (Failed); 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed); 	2230 - roottest-root-tree-cache-perfstattest (Failed); ```; * You can ignore the failures for numba, as I don't have that installed.; * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. ; * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins.; * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes.; * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:2713,config,configuration,2713,https://root.cern,https://github.com/root-project/root/issues/9436,1,['config'],['configuration']
Modifiability," %p\n"", val, this);; }; };. const A a1(1);; const A a2(2);; const A a3(3);; const A a4(4);; const A a5(5);; const A a6(6);; const A a7(7);; const A a8(8);; const A a9(9);; const A a10(10);; const A a11(11);; const A a12(12);; const A a13(13);; const A a14(14);; const A a15(15);; const A a16(16);; const A a17(17);; ```. This should print from 1 to 17, but for example `master` gives:; ```; A(9), this = 0x7f9f2174e088; A(17), this = 0x7f9f2174e108; A(16), this = 0x7f9f2174e0f8; A(15), this = 0x7f9f2174e0e8; A(14), this = 0x7f9f2174e0d8; A(13), this = 0x7f9f2174e0c8; A(12), this = 0x7f9f2174e0b8; A(11), this = 0x7f9f2174e0a8; A(10), this = 0x7f9f2174e098; A(1), this = 0x7f9f2174e008; A(8), this = 0x7f9f2174e078; A(7), this = 0x7f9f2174e068; A(6), this = 0x7f9f2174e058; A(5), this = 0x7f9f2174e048; A(4), this = 0x7f9f2174e038; A(3), this = 0x7f9f2174e028; A(2), this = 0x7f9f2174e018; ~A(2), this = 0x7f9f2174e018; ~A(3), this = 0x7f9f2174e028; ~A(4), this = 0x7f9f2174e038; ~A(5), this = 0x7f9f2174e048; ~A(6), this = 0x7f9f2174e058; ~A(7), this = 0x7f9f2174e068; ~A(8), this = 0x7f9f2174e078; ~A(1), this = 0x7f9f2174e008; ~A(10), this = 0x7f9f2174e098; ~A(11), this = 0x7f9f2174e0a8; ~A(12), this = 0x7f9f2174e0b8; ~A(13), this = 0x7f9f2174e0c8; ~A(14), this = 0x7f9f2174e0d8; ~A(15), this = 0x7f9f2174e0e8; ~A(16), this = 0x7f9f2174e0f8; ~A(17), this = 0x7f9f2174e108; ~A(9), this = 0x7f9f2174e088; ```; (at least destruction order is consistent). For the LHCb headers, this causes problems because some constructor calls reference other global `const` objects and the scrambled order means they are not constructed yet. This seems to be caused by https://github.com/root-project/root/pull/13614, which was meant to fix https://github.com/root-project/root/issues/13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2167679742:2292,variab,variables,2292,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2167679742,1,['variab'],['variables']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 11 more. ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://eps,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1197#issuecomment-337667733:1722,portab,portable,1722,https://root.cern,https://github.com/root-project/root/pull/1197#issuecomment-337667733,1,['portab'],['portable']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 11 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_zeroen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1200#issuecomment-337895383:1714,portab,portable,1714,https://root.cern,https://github.com/root-project/root/pull/1200#issuecomment-337895383,2,['portab'],['portable']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 11 more. ### Failing tests:; - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1223#issuecomment-338777522:1748,portab,portable,1748,https://root.cern,https://github.com/root-project/root/pull/1223#issuecomment-338777522,1,['portab'],['portable']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1148#issuecomment-343740411:1520,portab,portable,1520,https://root.cern,https://github.com/root-project/root/pull/1148#issuecomment-343740411,79,['portab'],['portable']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1493#issuecomment-358572401:1520,portab,portable,1520,https://root.cern,https://github.com/root-project/root/pull/1493#issuecomment-358572401,14,['portab'],['portable']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 12 more. ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1535#issuecomment-359854573:1702,portab,portable,1702,https://root.cern,https://github.com/root-project/root/pull/1535#issuecomment-359854573,1,['portab'],['portable']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1422#issuecomment-359075766:1520,portab,portable,1520,https://root.cern,https://github.com/root-project/root/pull/1422#issuecomment-359075766,30,['portab'],['portable']
Modifiability," (layers with the 'Legacy' prefix) are deprecated. Please use the ORCv2 IRCompileLayer instead [-Wdeprecated-declarations] ; - [2020-09-27T08:56:19.837Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:344:3: warning: 'LazyEmittingLayer' is deprecated: ORCv1 layers (including LazyEmittingLayer) are deprecated. Please use ORCv2, where lazy emission is the default [-Wdeprecated-declarations] ; - [2020-09-27T08:56:19.838Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:9: warning: 'LegacyRTDyldObjectLinkingLayer' is deprecated: ORCv1 layers (layers with the 'Legacy' prefix) are deprecated. Please use ORCv2 (see docs/ORCv2.rst) [-Wdeprecated-declarations] ; - [2020-09-27T08:56:23.152Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:9: warning: 'LegacyRTDyldObjectLinkingLayer' is deprecated: ORCv1 layers (layers with the 'Legacy' prefix) are deprecated. Please use ORCv2 (see docs/ORCv2.rst) [-Wdeprecated-declarations] ; - [2020-09-27T08:56:23.152Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T08:56:33.713Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T08:56:33.713Z] /Users/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699608185:2055,layers,layers,2055,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699608185,2,['layers'],['layers']
Modifiability, (loaded from variable 'ctmod') [clang-analyzer-core.NullDereference]; 1: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; 2: 'pyobj' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082; 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082; 4: Calling 'IsPyCArgObject' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2087; 5: 'pycarg_type' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164; 6: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164; 7: 'ctmod' initialized here in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:165; 8: Assuming 'ctmod' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166; 9: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166; 10: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'ctmod') in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:176; 11: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1132:9: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1132; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1146:25: warning: Call to 'realloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]; 1: Assuming the condition is tr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-792738257:12862,variab,variable,12862,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-792738257,2,['variab'],['variable']
Modifiability, - [2024-02-08T09:31:38.510Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std' . And 5 more. ### Warnings:; - [2024-02-08T09:26:54.389Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-02-08T09:26:55.921Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-02-08T09:28:08.214Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Exception.cpp:35:28: warning: unused variable 'E' [-Wunused-variable] ; - [2024-02-08T09:28:16.251Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:173:23: warning: ISO C++20 considers use of overloaded operator '!=' (with operand types 'cling::Transaction::DelayCallInfo' and 'cling::Transaction::DelayCallInfo') to be ambiguous despite there being a unique best viable function with non-reversed arguments [-Wambiguous-reversed-operator] ; - [2024-02-08T09:28:16.251Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:218:21: warning: ISO C++20 considers use of overloaded operator '==' (with operand types 'cling::Transaction::MacroDirectiveInfo' and 'cling::Transaction::MacroDirectiveInfo') to be ambiguous despite there being a unique best viable function [-Wambiguous-reversed-operator] ; - [2024-02-08T09:30:56.131Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/TStorage.h:133:12: warning:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14626#issuecomment-1933679438:2666,variab,variable,2666,https://root.cern,https://github.com/root-project/root/pull/14626#issuecomment-1933679438,2,['variab'],['variable']
Modifiability, - [2024-03-11T09:32:32.286Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std' . And 5 more. ### Warnings:; - [2024-03-11T09:27:12.583Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-03-11T09:27:13.916Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-03-11T09:27:24.850Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Exception.cpp:35:28: warning: unused variable 'E' [-Wunused-variable] ; - [2024-03-11T09:27:30.293Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:173:23: warning: ISO C++20 considers use of overloaded operator '!=' (with operand types 'cling::Transaction::DelayCallInfo' and 'cling::Transaction::DelayCallInfo') to be ambiguous despite there being a unique best viable function with non-reversed arguments [-Wambiguous-reversed-operator] ; - [2024-03-11T09:27:30.293Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:218:21: warning: ISO C++20 considers use of overloaded operator '==' (with operand types 'cling::Transaction::MacroDirectiveInfo' and 'cling::Transaction::MacroDirectiveInfo') to be ambiguous despite there being a unique best viable function [-Wambiguous-reversed-operator] ; - [2024-03-11T09:31:58.273Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/TStorage.h:133:12: warning:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14928#issuecomment-1987975643:2666,variab,variable,2666,https://root.cern,https://github.com/root-project/root/pull/14928#issuecomment-1987975643,2,['variab'],['variable']
Modifiability, - [2024-03-22T08:32:06.622Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std' . And 5 more. ### Warnings:; - [2024-03-22T08:28:40.620Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-03-22T08:28:41.726Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-03-22T08:29:41.859Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Exception.cpp:35:28: warning: unused variable 'E' [-Wunused-variable] ; - [2024-03-22T08:29:47.484Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:173:23: warning: ISO C++20 considers use of overloaded operator '!=' (with operand types 'cling::Transaction::DelayCallInfo' and 'cling::Transaction::DelayCallInfo') to be ambiguous despite there being a unique best viable function with non-reversed arguments [-Wambiguous-reversed-operator] ; - [2024-03-22T08:29:47.484Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:218:21: warning: ISO C++20 considers use of overloaded operator '==' (with operand types 'cling::Transaction::MacroDirectiveInfo' and 'cling::Transaction::MacroDirectiveInfo') to be ambiguous despite there being a unique best viable function [-Wambiguous-reversed-operator] ; - [2024-03-22T08:31:34.246Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/TStorage.h:133:12: warning:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15033#issuecomment-2014607036:2666,variab,variable,2666,https://root.cern,https://github.com/root-project/root/pull/15033#issuecomment-2014607036,2,['variab'],['variable']
Modifiability, - [2024-03-22T17:47:05.064Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std' . And 5 more. ### Warnings:; - [2024-03-22T17:46:07.220Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-03-22T17:46:07.846Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-03-22T17:46:16.348Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Exception.cpp:35:28: warning: unused variable 'E' [-Wunused-variable] ; - [2024-03-22T17:46:22.077Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:173:23: warning: ISO C++20 considers use of overloaded operator '!=' (with operand types 'cling::Transaction::DelayCallInfo' and 'cling::Transaction::DelayCallInfo') to be ambiguous despite there being a unique best viable function with non-reversed arguments [-Wambiguous-reversed-operator] ; - [2024-03-22T17:46:22.077Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:218:21: warning: ISO C++20 considers use of overloaded operator '==' (with operand types 'cling::Transaction::MacroDirectiveInfo' and 'cling::Transaction::MacroDirectiveInfo') to be ambiguous despite there being a unique best viable function [-Wambiguous-reversed-operator] ; - [2024-03-22T17:46:30.249Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/TStorage.h:133:12: warning:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15036#issuecomment-2015611531:2666,variab,variable,2666,https://root.cern,https://github.com/root-project/root/pull/15036#issuecomment-2015611531,2,['variab'],['variable']
Modifiability," -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Setup observable that is to be morphed; obsvar = ROOT.RooRealVar(""DPhill_V1_truth"", ""\#Delta \#phi_{truth}^{ll} [rad]"", 0, 1.8); ; cosa = ROOT.RooRealVar(""cosa"",""cosa"",-1.,1.); kAww = ROOT.RooRealVar(""kAww"",""kAww"",1.); kSM = ROOT.RooRealVar(""kSM"",""kSM"",1.); Lambda = ROOT.RooRealVar(""Lambda"",""Lambda"",1000.); kHww = ROOT.RooRealVar(""kHww"",""kHww"",0.); ; gSM = ROOT.RooFormulaVar(""_gSM"" ,""cosa*kSM"", ROOT.RooArgList(cosa,kSM)); gHww = ROOT.RooFormulaVar(""_gHww"" ,""cosa*kHww/Lambda"", ROOT.RooArgList(cosa,kHww,Lambda)); gAww = ROOT.RooFormulaVar(""_gAww"" ,""sqrt(1-(cosa*cosa))*kAww/Lambda"", ROOT.RooArgList(cosa,kAww,Lambda)); ; # Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ""samples-analyzed-NonSMggF-250722-o.root""; ; obsvar.setConstant(True); ; par = ""cosa""; samplelist = [""sig_X_ggf_BSM1"", ""sig_X_ggf_BSM2"", ""sig_X_ggf_SM""]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = obsname; config.folderNames = samplelist; config.couplings.add(gSM); config.couplings.add(gHww); config.couplings.add(gAww); ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of DPhill"", config); ; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Extract input templates for plotting; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfuncpdf = ROOT.RooWrapperPdf(""morphpdf"", ""morphpdf"",morphfunc); ws = ROOT.RooWorkspace(""workspace""); ws.Import(morphfuncpdf); ; return ws. def plot(ws):; morphfunc = ws.function(""morphfunc""); morphpdf = ws.pdf(""morphpdf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11044#issuecomment-1209312505:1487,Config,Config,1487,https://root.cern,https://github.com/root-project/root/issues/11044#issuecomment-1209312505,2,"['Config', 'config']","['Config', 'config']"
Modifiability," -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory 'roottest/root/treeformula/retobj'; --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000; +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000; @@ -28,12 +28,10 @@; Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available; Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available; Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available; -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available; -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available; Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available; Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available; Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available; -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available; -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available; Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available; -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent; +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()""; +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}; gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'; ; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; --- Using ROOT from build; gmake[1]: *** [Makefile:31: retobjTest] Error 1; gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-2289396844:1933,Variab,Variable,1933,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-2289396844,1,['Variab'],['Variable']
Modifiability, /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:326:8: error: 'break' statement not in loop or switch statement ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:328:5: error: extraneous closing brace ('}') ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:329:3: error: extraneous closing brace ('}') ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:330:3: error: expected unqualified-id ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:331:1: error: extraneous closing brace ('}') . ### Warnings:; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:223:72: warning: unused parameter 'evalData' [-Wunused-parameter] ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:223:99: warning: unused parameter 'normSet' [-Wunused-parameter] ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:239:1: warning: non-void function does not return a value [-Wreturn-type] ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:251:44: warning: unused parameter 'code' [-Wunused-parameter] ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:251:62: warning: unused parameter 'rangeName' [-Wunused-parameter] ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:338:19: warning: unused variable 'obs' [-Wunused-variable],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9184#issuecomment-951750412:2879,variab,variable,2879,https://root.cern,https://github.com/root-project/root/pull/9184#issuecomment-951750412,2,['variab'],['variable']
Modifiability, /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:41.176Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:41.758Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:43.135Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:44.974Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] . And 45 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171684/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171684/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171684/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171684/testReport/projectroot.roottest.root/dataframe/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12572#issuecomment-1490137331:2326,variab,variables,2326,https://root.cern,https://github.com/root-project/root/pull/12572#issuecomment-1490137331,1,['variab'],['variables']
Modifiability, /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kBool_t:' at line 173 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174:35: warning: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:47751,variab,variable,47751,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability, /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kChar_t:' at line 174 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175:35: warning: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:49447,variab,variable,49447,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability," /usr/lib64/libffi.so; -- Performing Test Terminfo_LINKABLE; -- Performing Test Terminfo_LINKABLE - Success; -- Found Terminfo: /usr/lib64/libtinfo.so; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""); -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""); -- Linker detection: GNU ld; -- Performing Test C_SUPPORTS_FPIC; -- Performing Test C_SUPPORTS_FPIC - Success; -- Performing Test CXX_SUPPORTS_FPIC; -- Performing Test CXX_SUPPORTS_FPIC - Success; -- Building with -fPIC; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_WARNINGS'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME; -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG; -- Performing Tes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:2225,variab,variables,2225,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,2,['variab'],['variables']
Modifiability," 0x00007f62be7d56fe in ?? (); #7 0x00007ffce112d920 in ?? (); #8 0x00007f62be7dc429 in ?? (); #9 0x00007ffce112d950 in ?? (); #10 0x00007f62be7d26b0 in ?? (); #11 0x00007f62bacd3180 in ?? (); #12 0x00007ffce112d940 in ?? (); #13 0x00007ffce112d9a0 in ?? (); #14 0x00007f62be7d985d in ?? (); #15 0x000000000214fc80 in ?? (); #16 0x00007f62be7d26b0 in ?? (); #17 0x000000001d59e690 in ?? (); #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so; #19 0x00007ffce112d940 in ?? (); #20 0x00007f62bacd5778 in ?? (); #21 0x00007f62bacd5740 in ?? (); #22 0x0000000016991e30 in ?? (); #23 0x00007f62be7d298d in ?? (); #24 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f62be7d56fe in ?? (); #7 0x00007ffce112d920 in ?? (); #8 0x00007f62be7dc429 in ?? (); #9 0x00007ffce112d950 in ?? (); #10 0x00007f62be7d26b0 in ?? (); #11 0x00007f62bacd3180 in ?? (); #12 0x00007ffce112d940 in ?? (); #13 0x00007ffce112d9a0 in ?? (); #14 0x00007f62be7d985d in ?? (); #15 0x000000000214fc80 in ?? (); #16 0x00007f62be7d26b0 in ?? (); #17 0x000000001d59e690 in ?? (); #18 0x00007f62bf3940e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2149151217:2017,variab,variable,2017,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2149151217,1,['variab'],['variable']
Modifiability," 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #20 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #21 0x00007ffff793f598 in TStreamerInfo::ReadBuffer<char**> (this=0x555558602630, b=..., arr=@0x7fffffffd740: 0x55555862ab20,; compinfo=compinfo@entry=0x55555862ab08, first=first@entry=0, last=last@entry=1, narr=2, eoffset=0, arrayMode=3); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1274; #22 0x00007ffff77f92ac in TStreamerInfoActions::VectorLooper::GenericRead (buf=..., start=<optimized out>, end=0x555556a3aaa0, loopconfig=<optimized out>,; config=0x55555862aaf0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1883; #23 0x00007ffff76e978c in TStreamerInfoActions::TConfiguredAction::operator() (loopconf=0x55555862a9e0, end_collection=0x555556a3aaa0,; start_collection=0x555556a3a850, buffer=..., this=0x55555862a9b0) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:131; #24 TBufferFile::ApplySequence (this=0x7fffffffd9d0, sequence=..., start_collection=0x555556a3a850, end_collection=0x555556a3aaa0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3646; #25 0x00007ffff781f65e in TStreamerInfoActions::ReadSTLMemberWiseSameClass (buf=..., addr=<optimized out>, conf=conf@entry=0x555558626dd0,; vers=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1155; #26 0x00007ffff781f896 in TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray>;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:5040,config,config,5040,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,2,['config'],['config']
Modifiability," 2D and 3D Histograms and Profiles..............OK; Test 8: Multiply tests for 1D, 2D and 3D Histograms......................OK; Test 9: Divide tests for 1D, 2D and 3D Histograms........................OK; Test 10: Copy tests for 1D, 2D and 3D Histograms and Profiles.............OK; Test 11: Read/Write tests for 1D, 2D and 3D Histograms and Profiles.......OK; Test 12: Merge tests for Histograms and Profiles with same axes ..........OK; Test 13: Merge tests for Histograms and Profiles with labels ............OK; Test 14: Merge tests for Histograms and Profiles with different axes .....OK; Test 15: Merge tests for Histograms and Profiles with extendable axes ....OK; Test 16: Label tests for 1D and 2D Histograms ............................OK; Test 17: Interpolation tests for Histograms...............................OK; Test 18: Scale tests for Profiles.........................................OK; Test 19: Integral tests for Histograms....................................OK; Test 20: Buffer tests for Histograms......................................OK; Warning in <TROOT::Append>: Replacing existing TH1: h0 (Potential memory leak).; Test 21: Extend axis tests for Histograms.................................OK; Test 22: TH1-THn[Sparse] Conversion tests.................................OK; Test 23: FillData tests for Histograms and Sparses........................OK; [TFile::Cp] Total 0.05 MB	|====================| 100.00 % [0.4 MB/s]; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/stressHistogram.5.18.00.root [./files/stressHistogram.5.18.00.root]; Test 24: Reference File Read for Histograms and Profiles..................OK; ****************************************************************************; stressHistogram: Real Time = 43.72 seconds Cpu Time = 43.45 seconds; ROOTMARKS = 2547.75599669083 ROOT version: 6.25/01	heads/th1_long@v6-25-01-1467-g6783f2255a; ****************************************************************************; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-885544033:1994,Extend,Extend,1994,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-885544033,1,['Extend'],['Extend']
Modifiability, 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:134734,Variab,VariableDecorrTransform,134734,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableDecorrTransform']
Modifiability, 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kFloat16_t:' at line 119 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'helper') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:120; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:121:30: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:26920,variab,variable,26920,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability," 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-04; 10 -0.05 0.9929118716 0.9930125518 0.0001006802 1.01E-04; 11 0.05 1.0075044778 1.0073993699 -0.0001051079 -1.04E-04; 12 0.15 1.0237554038 1.0234460012 -0.0003094025 -3.02E-04; 13 0.25 1.0415811263 1.0411077858 -0.0004733405 -4.54E-04; 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04; 15 0.45 1.0811302458 1.0805675762 -0.0005626696 -5.20E-04; 16 0.55 1.1022639865 1.1017900409 -0.0004739457 -4.30E-04; 17 0.65 1.1238640449 1.1235378523 -0.0003261926 -2.90E-04; 18 0.75 1.1456367871 1.1454695261 -0.0001672610 -1.46E-04; 19 0.85 1.1673890440 1.1673397731 -0.0000492709 -4.22E-05; 20 0.95 1.1890997634 1.1890973372 -0.0000024261 -2.04E-06; 21 1.00 1.2000000000 1.2000000000 0.0000000000 0.00E+00; ```. In case this is useful later, here is how I produced this validation; table. Print `FlexibleInterpVar` values for differnt parameters both with and; without this PR using the following code:. ```C++; using namespace RooFit;; using RooStats::HistFactory::FlexibleInterpVar;. RooRealVar param{""param"", ""param"", -1, 1};; param.setBins(20);. double nominal = 1.;; std::vector<double> low{0.90};; std::vector<double> high{1.20};. std::vector<std::unique_ptr<RooAbsReal>> interps;. for (int code = 0; code < 5; ++code) {; std::vector<int> codes{code};; interps.emplace_back(std::make_unique<FlexibleInterpVar>(""interp"", ""interp"", param, nominal, low, high, codes));; }. cout.precision(12);. param.setVal(-1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; for (int i = 0; i < param.numBins(); ++i) {; param.setBin(i);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; }; param.setVal(1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; ```. Then I concatenated the output with and without this PR to a `.csv` file; that was analyzed with pandas:. ```Python; import pandas as pd. df = pd.read_csv(""interp.csv""). df[""diff_abs""] = df[""new""] - df[""ref""]; df[""dif",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13067:3293,Flexible,FlexibleInterpVar,3293,https://root.cern,https://github.com/root-project/root/pull/13067,1,['Flexible'],['FlexibleInterpVar']
Modifiability," <!--; A clear and concise description of what you expected to happen.; -->; 1. The configurations works, just as it does on the 6.26 branch.; 2. If not feasible, the build error should at least guide the user / package aintainer the configuration option to solve the issue or where to find the solution. ### To Reproduce. 1. Build against the master branch (6.27, 0fafc31efb5a94472af2a6b35ded27796cb141c8) with CMake Flag `-Dbuiltin_llvm=OFF`.; (See the external context for steps to reproduce the behavior with the Nix package manager and Nixpkgs.); 2. See error. ### Setup; <!--; 1. ROOT version; 3. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.27.* on the master branch (f9d15227e4c92eac7c6499379912d1ed24d0142b).; 2. Operating system: NixOS (Linux), on a x86_64 machine.; - system: `""x86_64-linux""`; - host os: `Linux 5.10.156, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; 4. Build with Nix and get dependencies from Nixpkgs. ### Additional context. Here is the build steps to reproduce the issue with Nix. It can be proceed as long as `nix` or `docker` is available. Copyright notice: The `default.nix` is derived/taken from [pkgs/applications/science/misc/root/default.nix](https://github.com/NixOS/nixpkgs/blob/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root/default.nix) in [Nixpkgs](https://github.com/NixOS/nixpkgs). The original work is licensed under the MIT license by Eelco Dolstra and the Nixpkgs/NixOS contributors. 1. Run `mkdir test-root-6.27`; 2. Place the following files into the `test-root-6.27` directory:. `setup-hook.sh` and `sw_vers.patch` from https://github.com/NixOS/nixpkgs/tree/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root. `default.nix`. ```Nix; { stdenv; , lib; , callPack",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:2830,sandbox,sandbox,2830,https://root.cern,https://github.com/root-project/root/issues/11920,1,['sandbox'],['sandbox']
Modifiability," = ROOT.RooRealVar(""kAww"",""kAww"",1.); kSM = ROOT.RooRealVar(""kSM"",""kSM"",1.); Lambda = ROOT.RooRealVar(""Lambda"",""Lambda"",1000.); kHww = ROOT.RooRealVar(""kHww"",""kHww"",0.); ; gSM = ROOT.RooFormulaVar(""_gSM"" ,""cosa*kSM"", ROOT.RooArgList(cosa,kSM)); gHww = ROOT.RooFormulaVar(""_gHww"" ,""cosa*kHww/Lambda"", ROOT.RooArgList(cosa,kHww,Lambda)); gAww = ROOT.RooFormulaVar(""_gAww"" ,""sqrt(1-(cosa*cosa))*kAww/Lambda"", ROOT.RooArgList(cosa,kAww,Lambda)); ; # Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ""samples-analyzed-NonSMggF-250722-o.root""; ; obsvar.setConstant(True); ; par = ""cosa""; samplelist = [""sig_X_ggf_BSM1"", ""sig_X_ggf_BSM2"", ""sig_X_ggf_SM""]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = obsname; config.folderNames = samplelist; config.couplings.add(gSM); config.couplings.add(gHww); config.couplings.add(gAww); ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of DPhill"", config); ; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Extract input templates for plotting; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfuncpdf = ROOT.RooWrapperPdf(""morphpdf"", ""morphpdf"",morphfunc); ws = ROOT.RooWorkspace(""workspace""); ws.Import(morphfuncpdf); ; return ws. def plot(ws):; morphfunc = ws.function(""morphfunc""); morphpdf = ws.pdf(""morphpdf""); obsvar = ws.var(obsname). UnfoldedFile = ROOT.TFile.Open(""Unfolded.root"",""READ""); U1 = UnfoldedFile.Get(""DPhill""); data_hist=ROOT.RooDataHist(""dphill"",""dphill"",[obsvar],U1); ; morphpdf.fitTo(data_hist,ROOT.RooFit.SumW2Error(True)); morphfunc.printPara",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11044#issuecomment-1209312505:1742,coupling,couplings,1742,https://root.cern,https://github.com/root-project/root/issues/11044#issuecomment-1209312505,1,['coupling'],['couplings']
Modifiability," = ROOT.RooRealVar(""kSM"",""kSM"",1.); Lambda = ROOT.RooRealVar(""Lambda"",""Lambda"",1000.); kHww = ROOT.RooRealVar(""kHww"",""kHww"",0.); ; gSM = ROOT.RooFormulaVar(""_gSM"" ,""cosa*kSM"", ROOT.RooArgList(cosa,kSM)); gHww = ROOT.RooFormulaVar(""_gHww"" ,""cosa*kHww/Lambda"", ROOT.RooArgList(cosa,kHww,Lambda)); gAww = ROOT.RooFormulaVar(""_gAww"" ,""sqrt(1-(cosa*cosa))*kAww/Lambda"", ROOT.RooArgList(cosa,kAww,Lambda)); ; # Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ""samples-analyzed-NonSMggF-250722-o.root""; ; obsvar.setConstant(True); ; par = ""cosa""; samplelist = [""sig_X_ggf_BSM1"", ""sig_X_ggf_BSM2"", ""sig_X_ggf_SM""]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = obsname; config.folderNames = samplelist; config.couplings.add(gSM); config.couplings.add(gHww); config.couplings.add(gAww); ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of DPhill"", config); ; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Extract input templates for plotting; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfuncpdf = ROOT.RooWrapperPdf(""morphpdf"", ""morphpdf"",morphfunc); ws = ROOT.RooWorkspace(""workspace""); ws.Import(morphfuncpdf); ; return ws. def plot(ws):; morphfunc = ws.function(""morphfunc""); morphpdf = ws.pdf(""morphpdf""); obsvar = ws.var(obsname). UnfoldedFile = ROOT.TFile.Open(""Unfolded.root"",""READ""); U1 = UnfoldedFile.Get(""DPhill""); data_hist=ROOT.RooDataHist(""dphill"",""dphill"",[obsvar],U1); ; morphpdf.fitTo(data_hist,ROOT.RooFit.SumW2Error(True)); morphfunc.printParameters();. ws = makews(); plot(ws) ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11044#issuecomment-1209312505:1790,config,config,1790,https://root.cern,https://github.com/root-project/root/issues/11044#issuecomment-1209312505,1,['config'],['config']
Modifiability, Building with configuration args:; ```; -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1109820171:89,config,configuration,89,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1109820171,1,['config'],['configuration']
Modifiability," C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-03-30T10:02:50.032Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(617,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCleanup.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-03-30T10:02:50.032Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\ReachableCode.cpp(721,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2022-03-30T10:02:50.032Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\RewriteStatepointsForGC.cpp(2847,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-03-30T10:02:50.032Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/ScaledNumber.h(166,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\BackendUtil.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-03-30T10:02:50.032Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector(1168,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\DeclCXX.cp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10269#issuecomment-1082894731:1410,Rewrite,RewriteStatepointsForGC,1410,https://root.cern,https://github.com/root-project/root/pull/10269#issuecomment-1082894731,1,['Rewrite'],['RewriteStatepointsForGC']
Modifiability," CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FDATA_SECTIONS; -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_EH'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:6122,variab,variable,6122,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,2,['variab'],['variable']
Modifiability, Call to 'realloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]; 1: Assuming the condition is true in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1201; 2: Left side of '&&' is true in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1201; 3: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1201; 4: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1201; 5: Assuming 'bstr' is non-null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1205; 6: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1205; 7: Call to 'realloc' has an allocation size of 0 bytes in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1207; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1268:26: warning: Call to 'realloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]; 1: Assuming the condition is true in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1262; 2: Left side of '&&' is true in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1262; 3: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1262; 4: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1262; 5: Assuming 'bstr' is non-null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1266; 6: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1266; 7: Call to 'realloc' has an allocation size of 0 bytes in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1268; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1685:23: warning: Maybe you meant to call InstanceConverter::SetArg() instead [clazy-skipped-base-method]; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2772:25:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-792738257:15439,portab,portability,15439,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-792738257,2,['portab'],['portability']
Modifiability," Calling 'Classification::GetMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:338; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Calling 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 9: Value assigned to field 'fModelPersistence', which participates in a condition later in /opt/root_src/tmva/tmva/src/Classification.cxx:236; 10: Returning from 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 11: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 12: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 14: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 15: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 16: Assuming field 'fModelPersistence' is true in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 18: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 19: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 20: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 21: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Classification.cxx:431; 22: Assuming 'methBoost' is null in /opt/root_src/tmva/tmva/src/Classification.cx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:24713,Config,Configurable,24713,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Config'],['Configurable']
Modifiability, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kBool_t:' at line 173 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174:35: warning: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:47539,variab,variable,47539,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble_t:' at line 181 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182:35: warning: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:61097,variab,variable,61097,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUChar_t:' at line 182 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183:35: warning: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:62793,variab,variable,62793,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong_t:' at line 185 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186:35: warning: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:67881,variab,variable,67881,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability, Error regular expression found in output. Regex=[: error:] 0.77 sec ; - [2022-09-21T12:01:10.225Z] 1072/2349 Test #962: tutorial-spectrum-Src .............................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.66 sec ; - [2022-09-21T12:01:10.943Z] 1074/2349 Test #963: tutorial-spectrum-Src2 ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.67 sec . And 3 more. ### Warnings:; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] . ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/); - [projectroot.runtutorials.tutorial_multicore_mt101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot/runtutorials/tutorial_multicore_mt101_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253647669:2950,variab,variable,2950,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253647669,1,['variab'],['variable']
Modifiability," I expect constraint term editing to work for both `OverallSys` and `HistoSys` modifiers. Both approaches of changing the constraint term to be uniform and removing it completely should work with `hist2workspace`. . ### To Reproduce; Download the required input files from https://cernbox.cern.ch/index.php/s/AO4ruN3G7LNtcRo. They contain a minimal HistFactory workspace specification (xml + ROOT file with histograms) and a simple script to fit the workspace. #### Baseline for comparisons; To establish the baseline behavior, run `hist2workspace` on the provided HistFactory workspace (xml + ROOT) and perform a fit:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; The relevant best-fit parameter values are:; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```. #### `OverallSys` with uniform constraint [working as expected]. To see the behavior of the `OverallSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is now; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -6.61703e-01; 2 alpha_NP_shape -2.12313e-01; 3 mu 1.10747e+00; ```; where the pull for `alpha_NP_norm` has increased, which makes sense given the removal of its constraint term. #### `HistoSys` with uniform constraint [not working as expected]. To see the behavior of the `HistoSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration for `NP_shape`. The measurement s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9070:1918,config,configuration,1918,https://root.cern,https://github.com/root-project/root/issues/9070,1,['config'],['configuration']
Modifiability," Installed with Spack on macOS 11:; ```; ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuilti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9524:1078,Config,Configure,1078,https://root.cern,https://github.com/root-project/root/issues/9524,1,['Config'],['Configure']
Modifiability," Now that the v6.28 development cycle has just started and there are no; major developments in the pipeline yet, I think it is a good time to add; the missing `override` specifiers everywhere in `hist`, as done already; for RooFit. This commit was generated more or less automatically with this Python; script that uses `clang-tidy`:. ```Python; import os; import glob; import subprocess; import tqdm. """"""; For clang-tidy to work, you have to copy the compile_commands.json from the; build directory back into the repo directory (just like in; .ci/copy_headers.sh).; """""". def get_sources(directory, extensions):. files = []. for ext in extensions:; files += glob.glob(; os.path.join(directory, ""**/*"" + ext), recursive=True; ). return files. """"""; Recursively find extensions in directory, to figure out whic hextensions; should be globbed for.; find . -type f -name '*.*' | sed 's|.*\.||' | sort -u; """"""; extensions = ["".h"", "".hpp"", "".hxx"", "".cpp"", "".cc"", "".cxx""]. """"""; Some extensions are recognized as C and not as C++ files by clang-tidy. We; need to rename them, and this dict specifies how file extensions should be; replaced.; """"""; rename_dict = {"".h"": "".hpp""}. files = get_sources(""math"", extensions). cflags = (; subprocess.check_output([""root-config"", ""--cflags""]).strip().decode(""utf-8""); ). for file in tqdm.tqdm(files):. file_renamed = file; for ext, ext_renamed in rename_dict.items():; if file.endswith(ext):; file_renamed = file.replace(ext, ext_renamed). if file_renamed != file:; os.rename(file, file_renamed). cmd = [; ""clang-tidy"",; ""-checks=modernize-use-override"",; ""--fix"",; file_renamed,; ""--"",; ] + cflags.split("" ""); subprocess.call(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL). if file_renamed != file:; os.rename(file_renamed, file). """"""; Finally, replace the ClassDef with the ClassDefOverride macros.; find math -type f -print | xargs sed -i 's/ClassDef(/ClassDefOverride(/'; ...and change back the ClassDefOverride of non-overriding base classes.; """"""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10083:1598,config,config,1598,https://root.cern,https://github.com/root-project/root/pull/10083,1,['config'],['config']
Modifiability, OK; PNG output................................................ OK; Test 46: Zoom/UnZoom a fitted histogram............................ OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 47: Parallel Coordinates...................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; Test 48: Draw a pad and clone it................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 49: Ntuple drawing with alphanumeric variables................ OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 50: TH2Poly.(DrawClone() and remote file access).............. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; **********************************************************************; * 14 tests failed. :-(; **********************************************************************; * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch; **********************************************************************; * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 second,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14295#issuecomment-1866909548:17389,variab,variables,17389,https://root.cern,https://github.com/root-project/root/pull/14295#issuecomment-1866909548,1,['variab'],['variables']
Modifiability," PkgConfig: /nix/store/v73ppkjk196bwsjm6yy9yv80bdq7q68v-pkg-config-wrapper-0.29.2/bin/pkg-config (found version ""0.29.2"") ; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.8.3; -- Looking for TBB; -- Found TBB: /nix/store/2d2lhp3b4fwva16v4hnxswwc99z0k3ab-tbb-2020.3 (found suitable version ""2020.3"", minimum required is ""2018"") ; -- Performing Test tbb_exception_result; -- Performing Test tbb_exception_result - Success; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /nix/store/ar32z43050rasr218cqpg2lpk18axhrq-openblas-0.3.21/lib/libopenblas.so ; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Found LLVM_CONFIG as /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/bin/llvm-config; -- External llvm built in Release mode.; -- Linker detection: GNU ld; -- Building with -fPIC; -- Using LLVM external library - 13.0.1; -- Clang version: 13.0.1; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/nix/store/v1nxrwb4ls09sbbrwlkgxs7dlw8paksh-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0:/nix/store/v1nxrwb4ls09sbbrwlkgxs7dlw8paksh-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-unknown-linux-gnu:/nix/store/v1nxrwb4ls09sbbrwlkgxs7dlw8paksh-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Perfo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:14075,config,config,14075,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['config'],['config']
Modifiability, ROOT-debian10-i386/cxx14.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/103677/console).; ### Errors:; - [2020-12-10T13:51:42.817Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:14: error: ISO C++ forbids declaration of ‘Config’ with no type [-fpermissive] ; - [2020-12-10T13:51:42.817Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:18: error: only constructors take member initializers ; - [2020-12-10T13:51:46.046Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:14: error: ISO C++ forbids declaration of ‘Config’ with no type [-fpermissive] ; - [2020-12-10T13:51:46.046Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:18: error: only constructors take member initializers ; - [2020-12-10T13:51:50.262Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:14: error: ISO C++ forbids declaration of ‘Config’ with no type [-fpermissive] ; - [2020-12-10T13:51:50.262Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:18: error: only constructors take member initializers ; - [2020-12-10T13:51:50.262Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:14: error: ISO C++ forbids declaration of ‘Config’ with no type [-fpermissive] ; - [2020-12-10T13:51:50.262Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:18: error: only constructors take member initializers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6928#issuecomment-742533457:1328,Config,Config,1328,https://root.cern,https://github.com/root-project/root/pull/6928#issuecomment-742533457,2,['Config'],['Config']
Modifiability, TMVA/ROCCalc.h TMVA/ROCCurve.h TMVA/RootFinder.h TMVA/RuleCut.h TMVA/RuleEnsemble.h TMVA/RuleFitAPI.h TMVA/RuleFit.h TMVA/RuleFitParams.h TMVA/Rule.h TMVA/SdivSqrtSplusB.h TMVA/SeparationBase.h TMVA/SimulatedAnnealingFitter.h TMVA/SimulatedAnnealing.h TMVA/SVEvent.h TMVA/SVKernelFunction.h TMVA/SVKernelMatrix.h TMVA/SVWorkingSet.h TMVA/TActivationChooser.h TMVA/TActivation.h TMVA/TActivationIdentity.h TMVA/TActivationRadial.h TMVA/TActivationReLU.h TMVA/TActivationSigmoid.h TMVA/TActivationTanh.h TMVA/Timer.h TMVA/TNeuron.h TMVA/TNeuronInputAbs.h TMVA/TNeuronInputChooser.h TMVA/TNeuronInput.h TMVA/TNeuronInputSqSum.h TMVA/TNeuronInputSum.h TMVA/Tools.h TMVA/TransformationHandler.h TMVA/TSpline1.h TMVA/TSpline2.h TMVA/TSynapse.h TMVA/Types.h TMVA/VariableDecorrTransform.h TMVA/VariableGaussTransform.h TMVA/VariableIdentityTransform.h TMVA/VariableImportance.h TMVA/VariableInfo.h TMVA/VariableNormalizeTransform.h TMVA/VariablePCATransform.h TMVA/VariableRearrangeTransform.h TMVA/VariableTransformBase.h TMVA/VariableTransform.h TMVA/VarTransformHandler.h TMVA/Version.h TMVA/Volume.h TMVA/RTensor.hxx TMVA/RTensorUtils.hxx /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/inc/LinkDef.h ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RTensor.hxx:223:9: error: no member named 'reverse' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RTensor.hxx:226:9: error: no member named 'reverse' in namespace 'std' ; - Error: Had to build non-system module ROOTDataFrame implicitly. You first need to ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libTMVA5e23216ab9_dictUmbrella.h) . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cxx:3803:17: warning: declaration of ‘f1’ shadows a previous local [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3907#issuecomment-498800780:6857,Variab,VariableTransformBase,6857,https://root.cern,https://github.com/root-project/root/pull/3907#issuecomment-498800780,1,['Variab'],['VariableTransformBase']
Modifiability, TMVA/RegressionVariance.h TMVA/ResultsClassification.h TMVA/Results.h TMVA/ResultsMulticlass.h TMVA/ResultsRegression.h TMVA/ROCCalc.h TMVA/ROCCurve.h TMVA/RootFinder.h TMVA/RuleCut.h TMVA/RuleEnsemble.h TMVA/RuleFitAPI.h TMVA/RuleFit.h TMVA/RuleFitParams.h TMVA/Rule.h TMVA/SdivSqrtSplusB.h TMVA/SeparationBase.h TMVA/SimulatedAnnealingFitter.h TMVA/SimulatedAnnealing.h TMVA/SVEvent.h TMVA/SVKernelFunction.h TMVA/SVKernelMatrix.h TMVA/SVWorkingSet.h TMVA/TActivationChooser.h TMVA/TActivation.h TMVA/TActivationIdentity.h TMVA/TActivationRadial.h TMVA/TActivationReLU.h TMVA/TActivationSigmoid.h TMVA/TActivationTanh.h TMVA/Timer.h TMVA/TNeuron.h TMVA/TNeuronInputAbs.h TMVA/TNeuronInputChooser.h TMVA/TNeuronInput.h TMVA/TNeuronInputSqSum.h TMVA/TNeuronInputSum.h TMVA/Tools.h TMVA/TransformationHandler.h TMVA/TSpline1.h TMVA/TSpline2.h TMVA/TSynapse.h TMVA/Types.h TMVA/VariableDecorrTransform.h TMVA/VariableGaussTransform.h TMVA/VariableIdentityTransform.h TMVA/VariableImportance.h TMVA/VariableInfo.h TMVA/VariableNormalizeTransform.h TMVA/VariablePCATransform.h TMVA/VariableRearrangeTransform.h TMVA/VariableTransformBase.h TMVA/VariableTransform.h TMVA/VarTransformHandler.h TMVA/Version.h TMVA/Volume.h TMVA/RTensor.hxx TMVA/RTensorUtils.hxx /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/inc/LinkDef.h ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RTensor.hxx:223:9: error: no member named 'reverse' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RTensor.hxx:226:9: error: no member named 'reverse' in namespace 'std' ; - Error: Had to build non-system module ROOTDataFrame implicitly. You first need to ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libTMVA5e23216ab9_dictUmbrella.h) . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cxx:3803:17: warning: declarati,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3907#issuecomment-498800780:6741,Variab,VariableInfo,6741,https://root.cern,https://github.com/root-project/root/pull/3907#issuecomment-498800780,1,['Variab'],['VariableInfo']
Modifiability," Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/ubuntu/git/root/build/unix/compiledata.sh; Making /home/ubuntu/git/root/builddir/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.4.0-139-generic; Processor 16 core Intel Core Processor (Broadwell, IBRS) (x86_64); Build type Release; Install path /usr/local; Compiler GNU 9.4.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: builtin_afterimage builtin_clang builtin_cling builtin_gl2ps builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_xxhash builtin_zstd shared xrootd; -- Configuring done; -- Generating done; -- Build files have been written to: /home/ubuntu/git/root/builddir; ```; and after `make -j16`:; ```; [...]; [100%] Generating tutorials/hsimple.root; cd /home/ubuntu/git/root/builddir/tutorials && LD_LIBRARY_PATH=/home/ubuntu/git/root/builddir/lib: ROOTIGNOREPREFIX=1 ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631#issuecomment-1504751163:7566,Config,Configuration,7566,https://root.cern,https://github.com/root-project/root/issues/12631#issuecomment-1504751163,1,['Config'],['Configuration']
Modifiability," The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or even dev4/latest does not produce the same error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8976:1025,extend,extended,1025,https://root.cern,https://github.com/root-project/root/issues/8976,1,['extend'],['extended']
Modifiability, The configuration args are:; ```; '-DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo' '-DCMAKE_INTERPROCEDURAL_OPTIMIZATION:BOOL=OFF' '-DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF' '-Dcxxmodules:BOOL=OFF' '-Dexceptions:BOOL=ON' '-Dexplicitlink:BOOL=ON' '-Dfail-on-missing:BOOL=ON' '-Dfortran:BOOL=OFF' '-Dgminimal:BOOL=ON' '-Dgnuinstall:BOOL=OFF' '-Dlibcxx:BOOL=OFF' '-Dpch:BOOL=ON' '-Droottest:BOOL=OFF' '-Drpath:BOOL=ON' '-Druntime_cxxmodules:BOOL=OFF' '-Dshared:BOOL=ON' '-Dsoversion:BOOL=ON' '-Dtesting:BOOL=OFF' '-Dthread:BOOL=ON' '-DCLING_CXX_PATH:STRING=g++' '-Dbuiltin_afterimage:BOOL=OFF' '-Dbuiltin_cfitsio:BOOL=OFF' '-Dbuiltin_davix:BOOL=OFF' '-Dbuiltin_fftw3:BOOL=OFF' '-Dbuiltin_freetype:BOOL=OFF' '-Dbuiltin_ftgl:BOOL=OFF' '-Dbuiltin_gl2ps:BOOL=OFF' '-Dbuiltin_glew:BOOL=OFF' '-Dbuiltin_gsl:BOOL=OFF' '-Dbuiltin_llvm:BOOL=ON' '-Dbuiltin_lz4:BOOL=OFF' '-Dbuiltin_lzma:BOOL=OFF' '-Dbuiltin_nlohmannjson:BOOL=OFF' '-Dbuiltin_openssl:BOOL=OFF' '-Dbuiltin_pcre:BOOL=OFF' '-Dbuiltin_tbb:BOOL=OFF' '-Dbuiltin_unuran:BOOL=OFF' '-Dbuiltin_vc:BOOL=OFF' '-Dbuiltin_vdt:BOOL=OFF' '-Dbuiltin_veccore:BOOL=OFF' '-Dbuiltin_xrootd:BOOL=OFF' '-Dbuiltin_xxhash:BOOL=OFF' '-Dbuiltin_zlib:BOOL=OFF' '-Dafdsmrgd:BOOL=OFF' '-Dafs:BOOL=OFF' '-Dalien:BOOL=OFF' '-Darrow:BOOL=OFF' '-Dasimage:BOOL=ON' '-Dastiff:BOOL=ON' '-Dbonjour:BOOL=OFF' '-Dcastor:BOOL=OFF' '-Dccache:BOOL=OFF' '-Dchirp:BOOL=OFF' '-Dcling:BOOL=ON' '-Dcocoa:BOOL=OFF' '-Ddataframe:BOOL=ON' '-Ddavix:BOOL=OFF' '-Ddcache:BOOL=OFF' '-Dfftw3:BOOL=OFF' '-Dfitsio:BOOL=OFF' '-Dftgl:BOOL=OFF' '-Dgdml:BOOL=ON' '-Dgenvector:BOOL=OFF' '-Dgeocad:BOOL=OFF' '-Dgfal:BOOL=OFF' '-Dgl2ps:BOOL=OFF' '-Dglite:BOOL=OFF' '-Dglobus:BOOL=OFF' '-Dgsl_shared:BOOL=OFF' '-Dgviz:BOOL=OFF' '-Dhdfs:BOOL=OFF' '-Dhttp:BOOL=OFF' '-Dimt:BOOL=OFF' '-Djemalloc:BOOL=OFF' '-Dkrb5:BOOL=OFF' '-Dldap:BOOL=OFF' '-Dmathmore:BOOL=OFF' '-Dmemstat:BOOL=OFF' '-Dminimal:BOOL=OFF' '-Dminuit:BOOL=ON' '-Dm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1079029708:94,config,configuration,94,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1079029708,1,['config'],['configuration']
Modifiability," This is the full config:; ```; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -DCMAKE_BUILD_TYPE=RelWithDebInfo ""-DCMAKE_BUILD_TYPE=RelWithDebInfo"" ""-Dalien=off"" ""-Dall=off"" ""-Darrow=off"" ""-Dasan=off"" ""-Dasimage=on"" ""-Dasserts=off"" ""-Dbuiltin_cfitsio=off"" ""-Dbuiltin_clang=on"" ""-Dbuiltin_cling=on"" ""-Dbuiltin_cppzmq=on"" ""-Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=on"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=on"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=off"" ""-Dgdml=off"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=off"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=off"" ""-Droottest=on"" ""-Droottest_force_checkout=off"" ""-Drp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16689:375,config,config,375,https://root.cern,https://github.com/root-project/root/issues/16689,1,['config'],['config']
Modifiability," When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context; <!--; Add any other context about the problem here.; -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345:1759,variab,variable,1759,https://root.cern,https://github.com/root-project/root/issues/7345,1,['variab'],['variable']
Modifiability, With configure arguments:; ```; -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsap,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1109804151:101,config,configure,101,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1109804151,1,['config'],['configure']
Modifiability, [2023-04-03T08:02:44.137Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T08:02:44.666Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T08:02:44.925Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T08:02:44.925Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T08:02:44.926Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T08:02:46.413Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] . And 42 more. ### Failing tests:; - [projectroot.hist.histdrawv7.test.gtest_hist_histdrawv7_test_histhistdrawv7testUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171955/testReport/projectroot.hist.histdrawv7/test/gtest_hist_histdrawv7_test_histhistdrawv7testUnit/); - [projectroot.roottest.root.meta.tuple.roottest_root_meta_tuple_exec_configtype_unload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171955/testReport/projectroot.roottest.root.meta/tuple/roottest_root_meta_tuple_exec_configtype_unload_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1493919881:2310,variab,variable,2310,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1493919881,2,['variab'],['variable']
Modifiability, [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12470/console).; ### Errors:; - ERROR: Timeout after 10 minutes ; - ERROR: Error cloning remote repo 'origin' ; - ERROR: Error cloning remote repo 'origin' ; - ERROR: Timeout after 10 minutes ; - ERROR: Error fetching remote repo 'origin' ; - ERROR: Error fetching remote repo 'origin' . ### Warnings:; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1351#issuecomment-346958552:1026,portab,portable,1026,https://root.cern,https://github.com/root-project/root/pull/1351#issuecomment-346958552,1,['portab'],['portable']
Modifiability," [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_g",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10732:1284,plugin,pluginFWCoreServicesPlugins,1284,https://root.cern,https://github.com/root-project/root/issues/10732,1,['plugin'],['pluginFWCoreServicesPlugins']
Modifiability," ```; import ROOT; ; ROOT.gStyle.SetOptStat(0); ROOT.PyConfig.IgnoreCommandLineOptions = True; ROOT.gROOT.SetBatch(True). obsname = ""CutGGF_TopoDPhill_truth/DPhill_V1_truth"". def makews():. # Create functions; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Setup observable that is to be morphed; obsvar = ROOT.RooRealVar(""DPhill_V1_truth"", ""\#Delta \#phi_{truth}^{ll} [rad]"", 0, 1.8); ; cosa = ROOT.RooRealVar(""cosa"",""cosa"",-1.,1.); kAww = ROOT.RooRealVar(""kAww"",""kAww"",1.); kSM = ROOT.RooRealVar(""kSM"",""kSM"",1.); Lambda = ROOT.RooRealVar(""Lambda"",""Lambda"",1000.); kHww = ROOT.RooRealVar(""kHww"",""kHww"",0.); ; gSM = ROOT.RooFormulaVar(""_gSM"" ,""cosa*kSM"", ROOT.RooArgList(cosa,kSM)); gHww = ROOT.RooFormulaVar(""_gHww"" ,""cosa*kHww/Lambda"", ROOT.RooArgList(cosa,kHww,Lambda)); gAww = ROOT.RooFormulaVar(""_gAww"" ,""sqrt(1-(cosa*cosa))*kAww/Lambda"", ROOT.RooArgList(cosa,kAww,Lambda)); ; # Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ""samples-analyzed-NonSMggF-250722-o.root""; ; obsvar.setConstant(True); ; par = ""cosa""; samplelist = [""sig_X_ggf_BSM1"", ""sig_X_ggf_BSM2"", ""sig_X_ggf_SM""]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = obsname; config.folderNames = samplelist; config.couplings.add(gSM); config.couplings.add(gHww); config.couplings.add(gAww); ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of DPhill"", config); ; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Extract input templates for plotting; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11044#issuecomment-1209312505:1209,config,config,1209,https://root.cern,https://github.com/root-project/root/issues/11044#issuecomment-1209312505,1,['config'],['config']
Modifiability," `staterror` correctly for HistFactory; [RF][HS3] Major restructuring of HistFactory in HS3 - part 2; [RF][HS3] Major refactoring of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS3] Moved `DependencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation; [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation; [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF] New mechanism to implicitly convert numbers to RooRealVar&; [RF] Remove RooFormula code for gcc <= 4.8; [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; [RF] More use of `snapshot()` overload with output parameter; [RF] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12618#issuecomment-1497317057:7075,inherit,inheritance,7075,https://root.cern,https://github.com/root-project/root/pull/12618#issuecomment-1497317057,2,['inherit'],['inheritance']
Modifiability," a list of tests; Ignore test: test-tcollex; Ignore test: roottest-cling-parsing-semicolon; Ignore test: roottest-root-rint-TabCom; Ignore test: roottest-root-rint-BackslashNewline; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 910; Start 910: tutorial-v7-ntuple-ntpl007_mtFill. 910: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Users/bellenot/build/x64/release/bin/root.exe^-b^-l^-q^C:/Users/bellenot/git/master/tutorials/v7/ntuple/ntpl007_mtFill.C"" ""-DSYS=C:/Users/bellenot/build/x64/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/x64/release#PYTHONPATH=C:/Users/bellenot/build/x64/release/bin#PYTHIA8=C:/libs/x64/pythia8/8.3.03#PYTHIA8DATA=C:/libs/x64/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/x64/release/RootTestDriver.cmake""; 910: Environment variables:; 910: ROOT_HIST=0; 910: Test timeout computed to be: 1200; 910:; 910: Processing C:/Users/bellenot/git/master/tutorials/v7/ntuple/ntpl007_mtFill.C...; 910: Warning in <[ROOT.NTuple] Warning C:\Users\bellenot\git\master\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; 910: Warning in <[ROOT.NTuple] Warning C:\Users\bellenot\git\master\tree\ntuple\v7\src\RNTupleSerialize.cxx:1396 in class ROOT::Experimental::RResult<void> __cdecl ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void *,unsigned int,class ROOT::Experimental::RNTupleDescriptorBuilder &)>: Pre-release format version: RC 1; 1/1 Test #910: tutorial-v7-ntuple-ntpl007_mtFill ... Passed 2.03 sec. The following tests passed:; tutorial-v7-ntuple-ntpl007_mtFill. 100% tests passed, 0 tests f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13264#issuecomment-1649597994:1544,variab,variables,1544,https://root.cern,https://github.com/root-project/root/pull/13264#issuecomment-1649597994,1,['variab'],['variables']
Modifiability," and execute function [file](w/o extension); Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension); E <[file]>: open editor and evaluate {statements} in the file; Load/Unload: L [file] : load [file]; Lk [file] : keep [file] if already loaded, else load it; La [file] : reload all files loaded after [file]; U [file] : unload [file]; C [1|0] : copy source to $TMPDIR (on/off); undo : undo previous declarations; lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN); preproc : toggle preprocessing of interpreted files; Monitor: g <[var]> : list global variable; l <[var]> : list local variable; proto <[scope]::>[func] : show function prototype; class <[name]> : show class definition (one level); Class <[name]> : show class definition (all level); typedef <name> : show typedefs; function : show interpreted functions; macro : show macro functions; template : show templates; include : show include paths; file : show loaded files; where : show current file position; security : show security level; refcount : reference count control on/off; garbage : show garbage collection buffer; Garbage : Do garbage collection; cover [file] : save trace coverage; return [val] : return undefined symbol value; Run: S : step over function/loop; s : step into function/loop; i : ignore and step over; c <[line]>: continue <to [line]>; e : step out from function; f [file] : select file to debug; b [line] : set break point; db [line] : delete break point; a [assert]: break only if assertion is true; O [0~4] : Set bytecode compiler mode; debug : bytecode status display on/off; asmstep : bytecode step mode on/off; status : show bytecode exec flags; dasm : disassembler; except : toggle exception catching; Quit: q : quit cint; qqq : quit cint - mandatory; qqqqq : exit process immediately; qqqqqqq : abort process; save : call emergency routine to save important data. ROOT special commands.; ===========================================================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:3913,variab,variable,3913,https://root.cern,https://github.com/root-project/root/issues/10191,2,['variab'],['variable']
Modifiability," at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fc2c54dd41d in TObject::AppendPad (this=0x190c210, option=0x400c96 """") at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. ```. ## Expected behavior; No crash. ## To Reproduce; Code:. ```; #include <TCanvas.h>; #include <TText.h>; #include <TPad.h>; #include <fenv.h>. int main(int argc, char **argv) {; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad();; //c->cd(1);//works; c->cd();//fails; TText* t= new TText(0.5,0.5,""some text"");; t->Draw();; delete t;; delete c;; delete C;; return 0;; }. ```; Compile. ```; g++ pad4.cxx $(root-config --glibs --cflags --libs) -o pad4 -g; ```. run. ```; ./pad4; ```. ## Setup; ROOT 6.22.02 gcc4.8.5 on CentOS7/EPEL. ## Additional context; Possible fix:; Change ; ```. TVirtualPad *TPad::cd(Int_t subpadnumber); {; if (!subpadnumber) {; gPad = this;; if (!gPad->IsBatch() && GetPainter()) GetPainter()->SelectDrawable(fPixmapID);; return gPad;; }; ..... ```; to. ```. TVirtualPad *TPad::cd(Int_t subpadnumber); {; if (!subpadnumber) {; gPad = this;; if (!gPad->IsBatch() && GetPainter()) GetPainter()->SelectDrawable(fPixmapID);; if (!fPrimitives) fPrimitives = new TList;; return gPad;; }; ..... ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6447:2490,config,config,2490,https://root.cern,https://github.com/root-project/root/issues/6447,1,['config'],['config']
Modifiability," be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the caching optionally from the user side",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8329:2423,variab,variable,2423,https://root.cern,https://github.com/root-project/root/pull/8329,1,['variab'],['variable']
Modifiability," but a package maintainer who tests the build with `root --help` would be surprised by the nonzero exit status. Is this behavior a design decision, or does it imply some check failures?. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --help` exits with exit status 0. ### To Reproduce; 1. In a Bourn-like shell, run; ```sh; root --help; echo ""Exit status: $?""; ```. ```console; $ root --help; echo ""Exit status: $?"". usage: root; [-b B]; [-x X]; [-e E]; [-n N]; [-t T]; [-q Q]; [-l L]; [-a A]; [-config CONFIG]; [-h HELP]; [--version VERSION]; [--notebook NOTEBOOK]; [--web WEB]; [--web=<browser> WEB=<BROWSER>]; [dir]; [file:data.root]; [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show the ROOT banner; -a Show the ROOT splash screen; -config print ./configure options; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; Exit status: 1; ```. ### Setup; This issue is reproducible on my laptop (x86_64 NixOS), LXPLUS7 LXPLUS8 and LXPLUS9. My laptop:; ```; $ root --version; ROOT Version: 6.26/08; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.15.80, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11977:1812,config,config,1812,https://root.cern,https://github.com/root-project/root/issues/11977,1,['config'],['config']
Modifiability," char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so; #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so; #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so; #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so; #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so; #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so; #23 0x00000000004011ad in main (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:5252,variab,variable,5252,https://root.cern,https://github.com/root-project/root/issues/14037,1,['variab'],['variable']
Modifiability," compile with g++ -fabi-version=6 -o test test.cpp using GCC 13.2; #include <memory>. std::unique_ptr<int> foo() { return nullptr; }. int main() {}; ```; Here is again the error:; ```txt; In file included from /usr/include/c++/13.2.1/memory:78,; from test.C:1:; /usr/include/c++/13.2.1/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<int>; <template-parameter-2-2> = void; _Tp = int; _Dp = std::default_delete<int>; std::nullptr_t = std::nullptr_t]’:; test.C:3:37: required from here; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: error: no matching function for call to ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data()’; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: template argument deduction/substitution failed:; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: note: candidate expects 2 arguments, 0 provided; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate: ‘std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >::__uniq_ptr_data(std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10984#issuecomment-1739815648:1096,inherit,inherited,1096,https://root.cern,https://github.com/root-project/root/issues/10984#issuecomment-1739815648,2,['inherit'],['inherited']
Modifiability," error. Here I show the minimum code that can reproduce the code. Running conditions:; * OS: Linux_CentOS7.7.1908-x86_64-gcc5.2.0; * ROOT: 6.08.00; * GCC: 5.2.0; ; code: ; file1: inc.cxx; ```cpp; #include <map>. // extern std::map<std::string, const double> UNITS;; std::map<std::string, const double> UNITS;; ```; file2: test.cxx; ```cpp; #include <map>. #include ""TGraphErrors.h""; #include ""TH1F.h""; #include ""TCanvas.h"". std::map<std::string, const double> UNITS = {; {"""",	1},; {""mm"", 1e-3},; };. int main() {; 	double value[] = {1, 2, 3, 4, 5};; TCanvas *c = new TCanvas(""c"", ""c"", 1200, 900);; 	TH1F *h = new TH1F(""h"", ""h"", 5, 0.5, 5.5);; 	TGraphErrors *g = new TGraphErrors();; 	for(int i=0; i<5; i++) {; 		g->SetPoint(i, i+1, value[i]);; 		h->Fill(value[i]);; 	}. 	g->SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd638000000-7fd638021000 rw-p 00000000 00:00 0 ; 7fd638021000-7fd63c000000 ---p 00000000 00:00 0 ; 7fd63ffc8000-7fd6400c3000 r--p 00000000 00:32 432514122 /",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8256:1133,config,config,1133,https://root.cern,https://github.com/root-project/root/issues/8256,1,['config'],['config']
Modifiability," for (int i = 0; i < 3; i++); {; y = i;; tree.Fill();; }; tree.Write();; }. void write_tree_and_friends(); {; // Write parent tree to disk.; write_parent_tree(""treeparent.root"", ""treeparent"");; // Write friend trees to disk.; for (int i = 1; i < 4; i++); {; std::string indexstr = std::to_string(i);; std::string treename{""treefriend""};; treename += indexstr;; std::string filename{treename + "".root""};; write_friend_tree(filename, treename);; }; }; ```. Main function; ```cpp; int main(){; write_tree_and_friends();. TFile parentfile{""treeparent.root"", ""read""};. std::unique_ptr<TTree> parenttree{parentfile.Get<TTree>(""treeparent"")};. TChain friendchain{""treefriend""};; for (int i = 1; i < 4; i++); {; std::string indexstr = std::to_string(i);; std::string treename{""treefriend""};; treename += indexstr;; std::string filename{treename + "".root""};; std::string fullpath{filename + ""/"" + treename};; friendchain.Add(fullpath.c_str());; }; parenttree->AddFriend(&friendchain);; // DIFFERENT SUBCASES ACCORDING TO THE NAME OF THE FRIEND VARIABLE; parenttree->Scan(""x:treefriend.y"");; parenttree->Print(""all"");; ROOT::RDataFrame rdf{*parenttree};; auto display = rdf.Display("""");; display->Print();; }; ```. In this scenario, the only consistent behaviour is given by `TTree::Print(""all"")` that always outputs both info on the parent tree and on the friend chain.; Result from TTree:Print(""all""):; ```; ******************************************************************************; *Tree :treeparent: test friend trees *; *Entries : 9 : Total = 1059 bytes File Size = 494 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :x : x/I *; *Entries : 9 : Total Size= 583 bytes File Size = 110 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Chain :treef",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:11022,VARIAB,VARIABLE,11022,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['VARIAB'],['VARIABLE']
Modifiability," gnused # sed; lsof # lsof # for ROOT (>=6.28); man # manpath; procps # ps # for ROOT (>=6.28); which # which; ]}""; patchRcPathCsh ""$out/bin/thisroot.csh"" ""${lib.makeBinPath [; coreutils; gnugrep; gnused; lsof # lsof # for ROOT (>=6.28); man; which; ]}""; patchRcPathFish ""$out/bin/thisroot.fish"" ""${lib.makeBinPath [; coreutils; man; which; ]}""; '';. setupHook = ./setup-hook.sh;; }; ```. `flake.nix`. ```Nix; {; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/2787fc7d1e51404678614bf0fe92fc296746eec0"";. outputs = { flake-utils, nixpkgs, ... }: flake-utils.lib.eachDefaultSystem (system:; let; lib = nixpkgs.lib;; pkgs = nixpkgs.legacyPackages.${system};; root = with pkgs; callPackage ./. {; python = python3;; inherit (darwin.apple_sdk.frameworks) Cocoa CoreSymbolication OpenGL;; # https://github.com/NixOS/nixpkgs/issues/201254; stdenv = if stdenv.isLinux && stdenv.isAarch64 && stdenv.cc.isGNU then gcc11Stdenv else stdenv;; };; in; {; packages = {; default = root;; inherit root;; };; });; }; ```. `flake.lock`. ```JSON; {; ""nodes"": {; ""flake-utils"": {; ""locked"": {; ""lastModified"": 1667395993,; ""narHash"": ""sha256-nuEHfE/LcWyuSWnS8t12N1wc105Qtau+/OdUAjtQ0rA="",; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""rev"": ""5aed5285a952e0b949eb3ba02c12fa4fcfef535f"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""type"": ""github""; }; },; ""nixpkgs"": {; ""locked"": {; ""lastModified"": 1670507980,; ""narHash"": ""sha256-riNZa0xzM1it3pzxciwALeMs+0CsBMWIW2FqulzK8vM="",; ""owner"": ""NixOS"",; ""repo"": ""nixpkgs"",; ""rev"": ""2787fc7d1e51404678614bf0fe92fc296746eec0"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""NixOS"",; ""repo"": ""nixpkgs"",; ""rev"": ""2787fc7d1e51404678614bf0fe92fc296746eec0"",; ""type"": ""github""; }; },; ""root"": {; ""inputs"": {; ""flake-utils"": ""flake-utils"",; ""nixpkgs"": ""nixpkgs""; }; }; },; ""root"": ""root"",; ""version"": 7; }; ```. 4. Run `nix --extra-experimental-features 'nix-command flakes' build --no-link --k",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:9259,inherit,inherit,9259,https://root.cern,https://github.com/root-project/root/issues/11920,1,['inherit'],['inherit']
Modifiability," https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++; void repro(); {; using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);; x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});; // Doesn't work better either...; // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;; RooArgSet pdfs;; RooArgSet yields;. // Fill the templates; for (std::size_t i = 0; i < 2; ++i) {; auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());; pdf.SetParameters(1, 1200 + 100 * i, 50);; pdf.Print();; TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());; h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));; pdfs.addOwned(; *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));; yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));; }. // Construct final model; RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified; model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();; data->plotOn(frame);; model.plotOn(frame, Range(0.0, 2000.0));; model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));; model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));; frame->Draw();. c1.SaveAs(""plot.png"");; }; ```. The plot looks like this:; ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13030:1916,variab,variable,1916,https://root.cern,https://github.com/root-project/root/issues/13030,1,['variab'],['variable']
Modifiability, in /opt/root_src/build/rmkdepend/parse.c:335; 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340; 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340; 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345; 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345; 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376; 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376; 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384; 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384; 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388; 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389; 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389; 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392; /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108; /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:42778,variab,variable,42778,https://root.cern,https://github.com/root-project/root/issues/7410,1,['variab'],['variable']
Modifiability, in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kInt_t:' at line 176 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177:35: warning: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:52836,variab,variable,52836,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability," in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.; So far I have tried the 6.24.00 tag and the `v6-24-00-patches` branch, both with the same result. For reference, we had very similar issues quite a while ago, which was fixed by #4689, al",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180:3556,Config,ConfigurableParam,3556,https://root.cern,https://github.com/root-project/root/issues/8180,3,"['Config', 'config']","['ConfigurableParam', 'configFile']"
Modifiability," in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; [ 69%] Built target rootcling_stage1; [ 69%] Generating G__Core.cxx, ../lib/libCore.rootmap; : CommandLine Error: Option 'W' registered more than once!; LLVM ERROR: inconsistency in registered CommandLine options; Subprocess aborted; ```; Any thoughts, @vgvassilev ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:20155,variab,variable,20155,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,1,['variab'],['variable']
Modifiability," in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.; + gcc --version; gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0); Copyright (C) 2022 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF; (...skip...); -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64; Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64); Build type Release; Install path /usr/local; Compiler GNU 12.0.1; Compiler flags:; C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml; -- Configuring done; -- Generating done; -- Build files have been written to: /reproducer/build; + cmake --bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:2583,Config,Configuration,2583,https://root.cern,https://github.com/root-project/root/issues/10478,1,['Config'],['Configuration']
Modifiability, in output. Regex=[: error:] 0.67 sec . And 3 more. ### Warnings:; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] . ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/); - [projectroot.runtutorials.tutorial_multicore_mt101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot/runtutorials/tutorial_multicore_mt101_fillNtuples/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot.bin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253647669:3448,variab,variable,3448,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253647669,1,['variab'],['variable']
Modifiability," in str(module):; + raise ImportError(f""{partial_name} is not a namespace (type={type(module)})""); + self._module_cache[fullname] = module; + return True; +; + def create_module(self, spec):; + self.is_package(spec.name); + return self._module_cache[spec.name]; +; + def exec_module(self, module):; + pass; +; + def load_module(self, fullname):; + self.is_package(fullname); + return self._module_cache[fullname]; +; +; +class RootNamespaceFinder(importlib.abc.MetaPathFinder):; + def __init__(self):; + self.loader = RootNamespaceLoader(); +; + def find_spec(self, fullname, path, target=None):; + try:; + self.loader.is_package(fullname); + except ImportError:; + return None; + return spec_from_loader(fullname, self.loader); +; + def invalidate_caches(self):; + self.loader = RootNamespaceLoader(); +; +namespace_finder = RootNamespaceFinder(); +if namespace_finder not in sys.meta_path:; + sys.meta_path.append(namespace_finder). # Configuration for usage from Jupyter notebooks; if _is_ipython:; diff --git a/bindings/pyroot/pythonizations/python/ROOT/_facade.py b/bindings/pyroot/pythonizations/python/ROOT/_facade.py; index 69046fc71c..91e7732e5a 100644; --- a/bindings/pyroot/pythonizations/python/ROOT/_facade.py; +++ b/bindings/pyroot/pythonizations/python/ROOT/_facade.py; @@ -135,24 +135,7 @@ class ROOTFacade(types.ModuleType):; return CreateBufferFromAddress(addr). def _set_import_hook(self):; - # This hook allows to write e.g:; - # from ROOT.A import a; - # instead of the longer:; - # from ROOT import A; - # from A import a; - try:; - import __builtin__; - except ImportError:; - import builtins as __builtin__ # name change in p3; - _orig_ihook = __builtin__.__import__; - def _importhook(name, *args, **kwds):; - if name[0:5] == 'ROOT.':; - try:; - sys.modules[name] = getattr(self, name[5:]); - except Exception:; - pass; - return _orig_ihook(name, *args, **kwds); - __builtin__.__import__ = _importhook; + pass. def _handle_import_all(self):; # Called if ""from ROOT import *"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14097#issuecomment-1824949593:2735,Config,Configuration,2735,https://root.cern,https://github.com/root-project/root/issues/14097#issuecomment-1824949593,1,['Config'],['Configuration']
Modifiability," industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from T",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:1863,variab,variable,1863,https://root.cern,https://github.com/root-project/root/pull/16442,1,['variab'],['variable']
Modifiability," initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\DefinitionShadower.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-12-10T13:59:07.098Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\Exception.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-12-10T13:59:07.438Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\AutoloadCallback.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-12-10T13:59:07.757Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\IncrementalCUDADeviceCompiler.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-12-10T13:59:08.046Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\buil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6928#issuecomment-742537851:3770,Config,Config,3770,https://root.cern,https://github.com/root-project/root/pull/6928#issuecomment-742537851,1,['Config'],['Config']
Modifiability," initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\MetaProcessor\MetaSema.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\MetaProcessor\obj.clingMetaProcessor.vcxproj] ; - [2020-12-10T13:59:02.706Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\ClingPragmas.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-12-10T13:59:06.168Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\DefinitionShadower.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-12-10T13:59:07.098Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\Exception.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-12-10T13:59:07.438Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\build\workspace\root-pu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6928#issuecomment-742537851:2803,Config,Config,2803,https://root.cern,https://github.com/root-project/root/pull/6928#issuecomment-742537851,1,['Config'],['Config']
Modifiability," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6); #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594); #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29); #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c); #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca); ; ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1; SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) ; ==6948==ABORTING; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. ; ```; ### To Reproduce; 1. Open a x86 Native Tools Command Prompt for VS 2019; 2. `git clone https://github.com/root-project/root.git root_src`; 3. `mkdir root_build && cd root_build`; 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`; 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ); 6. `set ASAN_OPTIONS=detect_odr_violation=0`; 7. `cmake --build . --config Release` . ### Setup; <!--; 1. Operating system: Windows 10; 2. How you obtained ROOT: built it myself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445:7062,config,config,7062,https://root.cern,https://github.com/root-project/root/issues/9445,1,['config'],['config']
Modifiability," is the expected behaviour?. After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce?. This snippet (taken from the test-stresshistogram source),; ```; ROOT::DisableImplicitMT();; double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }; TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);; TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);; gaus->SetParameters(1,0,1);; h1->FillRandom(""gaus1d"",10000);; auto res = h1->Fit(gaus,""L0S"");; cout << TVirtualFitter::GetFitter() << endl;; ```; run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT?. Custom build from source. ### Which operating system are you using?. macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:; ```; $ root-config --cflags; -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include; $ root-config --features; cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd; ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13041:1689,config,configuration,1689,https://root.cern,https://github.com/root-project/root/issues/13041,3,['config'],"['config', 'configuration']"
Modifiability," it seems to work fine. ```; [bash][atspot01]:self-reference > root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ConfigType c;; root [1]; ```. I can also happily write objects of this type into ROOT files. But as soon as I try to merge two such ROOT files with `hadd`, I get:. ```; hadd Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f45ad4d0c3a in __GI___wait4 (pid=33425, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f45ad4d0bfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0) at waitpid.c:38; #2 0x00007f45ad43ff67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f45adc84afe in TUnixSystem::StackTrace() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:1458,Config,ConfigType,1458,https://root.cern,https://github.com/root-project/root/issues/12358,4,['Config'],['ConfigType']
Modifiability," it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16577:1365,variab,variable,1365,https://root.cern,https://github.com/root-project/root/issues/16577,1,['variab'],['variable']
Modifiability," may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:46.571Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:47.349Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:49.019Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:54.463Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:56.706Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] . And 29 more. ### Failing tests:; - [projectroot.test.test_stressroofit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111452/testReport/projectroot/test/test_stressroofit/); - [projectroot.test.test_stressroofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111452/testReport/projectroot/test/test_stressroofit_interpreted/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616#issuecomment-803056268:2858,Config,Configuration,2858,https://root.cern,https://github.com/root-project/root/pull/7616#issuecomment-803056268,2,['Config'],['Configuration']
Modifiability," missing initializer for member ‘std::array&lt;const clang::Type*, 4ul&gt;::_M_elems’ [-Wmissing-field-initializers] ; - [2020-09-29T23:29:34.418Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/Diagnostics.cpp:35:60: warning: declaration of ‘Reset’ shadows a member of 'this' [-Wshadow] ; - [2020-09-29T23:29:34.418Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/Diagnostics.cpp:35:60: warning: declaration of ‘Report’ shadows a member of 'this' [-Wshadow] ; - [2020-09-29T23:29:34.677Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:235:8: warning: unused parameter ‘C’ [-Wunused-parameter] ; - [2020-09-29T23:29:37.792Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/Output.cpp:59:13: warning: declaration of ‘OS’ shadows a member of 'this' [-Wshadow] ; - [2020-09-29T23:29:38.834Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:92:66: warning: missing initializer for member ‘std::array&lt;const void*, 8ul&gt;::_M_elems’ [-Wmissing-field-initializers] ; - [2020-09-29T23:29:40.394Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:14:16: warning: unused parameter ‘DGR’ [-Wunused-parameter] ; - [2020-09-29T23:29:40.394Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:46:8: warning: unused parameter ‘PP’ [-Wunused-parameter] ; - [2020-09-29T23:29:40.394Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:46:8: warning: unused parameter ‘Introducer’ [-Wunused-parameter] ; - [2020-09-29T23:29:40.394Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:46:8: warning: unused parameter ‘PragmaTok’ [-Wunused-parameter] . And 474 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-701047094:1930,plugin,plugins,1930,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-701047094,4,['plugin'],['plugins']
Modifiability," not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Success; -- Distributed RDataFrame enabled; -- Looking for RapidYAML (used by RooFit); -- Could NOT find ryml (missing: RYML_LIBRARY RYML_INCLUDE_DIR); -- RapidYAML not found, only compiling RooFit with nlohmann-json parser; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /afs/cern.ch/user/b/bellenot/temp/root/build/unix/compiledata.sh; Making /afs/cern.ch/user/b/bellenot/temp/root-build.foo/ginclude/compiledata.h; -- ROOT Configuration. System Linux-4.18.0-513.5.1.el8_9.x86_64; Processor 10 core Intel Core Processor (Broadwell, no TSX, IBRS) (x86_64); Build type Release; Install path /usr/local; Compiler GNU 8.5.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_davix builtin_ftgl builtin_gl2ps builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_vdt builtin_xxhash clad dataframe davix gdml http imt opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd; -- Configuring done; -- Generating done; -- Build files have been written to: /afs/cern.ch/user/b/bellenot/temp/root-build.foo; [bellenot@lxplus803 root-build.foo]$; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159#issuecomment-1838972446:12293,Config,Configuring,12293,https://root.cern,https://github.com/root-project/root/issues/14159#issuecomment-1838972446,1,['Config'],['Configuring']
Modifiability, of '||' is true in /opt/root_src/math/mathcore/src/triangle.c:15901; 152: Field 'quiet' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:15902; 153: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:15902; 154: Assuming field 'edgesout' is 0 in /opt/root_src/math/mathcore/src/triangle.c:15940; 155: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:15940; 156: Assuming field 'voronoi' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:15947; 157: Taking true branch in /opt/root_src/math/mathcore/src/triangle.c:15947; 158: Passing null pointer value via 3rd parameter 'vpointlist' in /opt/root_src/math/mathcore/src/triangle.c:15949; 159: Calling 'writevoronoi' in /opt/root_src/math/mathcore/src/triangle.c:15949; 160: Field 'quiet' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:14972; 161: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:14972; 162: Dereference of null pointer (loaded from variable 'vpointlist') in /opt/root_src/math/mathcore/src/triangle.c:14976; /opt/root_src/math/mathcore/src/triangle.c:15380:3: warning: Value stored to 'worstaspect' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'worstaspect' is never read in /opt/root_src/math/mathcore/src/triangle.c:15380; /opt/root_src/math/matrix/inc/TMatrixT.h:280:4: warning: Returning null reference [clang-analyzer-core.uninitialized.UndefReturn]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Control jumps to 'case kTransposed:' at line 135 in /opt/root_src/math/matrix/src/TMatrixT.cxx:123; 6: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:136; 7: Assuming 'no_rows' is >= 0 in,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:123337,variab,variable,123337,https://root.cern,https://github.com/root-project/root/issues/7458,1,['variab'],['variable']
Modifiability," of a split and clean-up of #8294. ## Changes or fixes:; - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace.; - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252.; - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets.; - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free.; - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication.; - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed.; - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally; - [x] update the docs (if necessary); - [x] unify copyright/license headers with previous commits; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] refactor member names: underscore suffix; - [x] remove commented out code and TODOs and other junk; - [x] clang-tidy up; - [ ] rebase into two commits (one for `KahanSum` and one for the rest); - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349:2289,refactor,refactor,2289,https://root.cern,https://github.com/root-project/root/pull/9349,1,['refactor'],['refactor']
Modifiability," of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f86acb0fd4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f86aca5509b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f86ae5282a1 in TUnixSystem::StackTrace() () from /home/tomas/ROOT/root_install/lib/libCore.so; #4 0x00007f86ae527c14 in TUnixSystem::DispatchSignals(ESignals) () from /home/tomas/ROOT/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007f86ad4a0f34 in RooAbsArg::setAttribute(char const*, bool) () from /home/tomas/ROOT/root_install/lib/libRooFitCore.so; #7 0x00007f86abf40164 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #8 0x00007f86abf42e81 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelModel(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #9 0x00007f86abf57971 in RooStats::HistFactory::MakeModelAndMeasurementFast(RooStats::HistFactory::Measurement&, RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration const&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; ```. ### Reproducer. Unfortunately, I do not have a simple reproducer. But I can provide the XML files produced by the code if that helps?. ### ROOT version. ROOT Version: 6.31/01; Built for linuxx8664gcc on Nov 26 2023, 09:58:47; From remotes/origin/HEAD@v6-31-01-341-gab6cdd5dda. ### Installation method. build from source. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225:3386,Config,Configuration,3386,https://root.cern,https://github.com/root-project/root/issues/14225,1,['Config'],['Configuration']
Modifiability," of error appeared in the ATLAS analysis software (I believe...) when we switched to ROOT 6.26/08. Though when I now produced a standalone reproducer for it, I couldn't make it work with 6.24/06 either. (Which is what we used for a long time, apparently without this issue.). Take the following struct:. ```c++; struct ConfigType {; std::map<std::string, std::tuple<ConfigType, std::string> > m_children;; };; ```. When I build a (Reflex) dictionary for it, it seems to work fine. ```; [bash][atspot01]:self-reference > root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ConfigType c;; root [1]; ```. I can also happily write objects of this type into ROOT files. But as soon as I try to merge two such ROOT files with `hadd`, I get:. ```; hadd Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f45ad4d0c3a in __GI___wait4 (pid=33425, stat_loc=stat_loc; entry=0x7fff23a485e8,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:1061,Config,ConfigType,1061,https://root.cern,https://github.com/root-project/root/issues/12358,1,['Config'],['ConfigType']
Modifiability," of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\Rewrite\RewriteMacros.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/Expr.h(1646,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\Rewrite\RewriteObjC.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(422,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\Rewrite\RewriteModernObjC.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/ADT/SmallVector.h(297,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\Rewrite\InclusionRewriter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/ADT/ArrayRef.h(77,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullreque",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14249#issuecomment-1858805611:1950,Rewrite,Rewrite,1950,https://root.cern,https://github.com/root-project/root/pull/14249#issuecomment-1858805611,2,['Rewrite'],"['Rewrite', 'RewriteModernObjC']"
Modifiability," of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Serialization\ASTWriterStmt.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Serialization\obj.clangSerialization.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector(672,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\Rewrite\RewriteMacros.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/Expr.h(1646,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\Rewrite\RewriteObjC.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(422,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\Rewrite\RewriteModernObjC.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/ADT/SmallVector.h(297,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14249#issuecomment-1858805611:1479,Rewrite,Rewrite,1479,https://root.cern,https://github.com/root-project/root/pull/14249#issuecomment-1858805611,2,['Rewrite'],"['Rewrite', 'RewriteObjC']"
Modifiability," on mac1012/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6932/console).; ### Warnings:; - ninja: warning: multiple rules generate lib/liblz4.a. builds involving this target will not be correct; continuing anyway [-w dupbuild=warn] ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:382:13: warning: unused variable 'shellEscape' [-Wunused-const-variable] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:62:50: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;double&gt;::fOnes' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:144:4: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;double&gt;::fPool' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:62:50: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;float&gt;::fOnes' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:144:4: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;float&gt;::fPool' required here, but no definition is available [-Wundefined-var-template] . ### Failing tests:; - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6932/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_make/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6932/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6932/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1059#issuecomment-332323275:955,variab,variable,955,https://root.cern,https://github.com/root-project/root/pull/1059#issuecomment-332323275,2,['variab'],['variable']
Modifiability," other) : TChain(other), m_self(other.m_self, this) {}; ^; /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here; TChain(const TChain&); // not implemented; ^; /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported; import re; Out[1]: <cppyy.gbl.TChain object at 0x(nil)>; ```. ### Python 3.6. ```python; Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33); Type 'copyright', 'credits' or 'license' for more information; IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT; ...: import numpy as np; ...:; ...: class Ntuple(ROOT.TChain):; ...: def __init__(self, name):; ...: pass; ...:; ...: Ntuple(""DataTree""); ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-1-cdc669878b88> in <module>; 2 import numpy as np; 3; ----> 4 class Ntuple(ROOT.TChain):; 5 def __init__(self, name):; 6 pass. KeyError: 'fProofChain'; ```. ### Python 3.7. ```python; Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50); Type 'copyright', 'credits' or 'license' for more information; IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT; ...: import numpy as np; ...:; ...: class Ntuple(ROOT.TChain):; ...: def __init__(self, name):; ...: pass; ...:; ...: Ntuple(""DataTree""); Out[1]: *** Break *** segmentation violation; *** Break *** segmentation violation; ```. ### Python 3.8. ```python; Python 3.8.5 | packaged by conda-forge | (default, Sep 24 2020, 16:55:52); Type 'copyright', 'credits' or 'license' for more information; IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT; ...: import numpy as np; ...:; ...: class Ntuple(ROOT.TChain):; ...: def __init__(self, name):; ...: pass; ...:; ...: Ntuple(""DataTree""); Out[1]: *** Break *** segmentation violation; *** Break *** segmentation violation; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467#issuecomment-702595265:2163,enhance,enhanced,2163,https://root.cern,https://github.com/root-project/root/issues/6467#issuecomment-702595265,2,['enhance'],['enhanced']
Modifiability," out>) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3503; 2187: #33 0x00007f2a62daf8c5 in TSystem::Load (this=0x617000000080, module=<optimized out>, entry=<optimized out>, system=false) at /home/jhahnfel/ROOT/src/core/base/src/TSystem.cxx:1945; 2187: #34 0x00007f2a47737140 in execInitOrder () at /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx:108; 2187: #35 0x00007f2a492f4029 in ?? (); 2187: #36 0x00007f2a5e77a0c0 in ?? (); 2187: #37 0x0000614000001840 in ?? (); 2187: #38 0x00007ffc0cd42e10 in ?? (); 2187: #39 0x00007f2a50a1db2e in cling::IncrementalExecutor::executeWrapper (this=<optimized out>, function=..., returnValue=0x7f2a5e77a0c0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:288; 2187: ===========================================================; 2187:; 2187:; 2187: The lines below might hint at the cause of the crash. If you see question; 2187: marks as part of the stack trace, try to recompile with debugging information; 2187: enabled and export CLING_DEBUG=1 environment variable before running.; 2187: You may get help by asking at the ROOT forum https://root.cern/forum; 2187: Only if you are really convinced it is a bug in ROOT then please submit a; 2187: report at https://root.cern/bugs Please post the ENTIRE stack trace; 2187: from above as an attachment in addition to anything else; 2187: that might help us fixing this issue.; 2187: ===========================================================; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=0x1 <error: Cannot access memory at address 0x1>, alternate=0x7f2a491937c0 <error: Cannot access memory at address 0x7f2a491937c0>) at /home/jhahnfe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:7307,variab,variable,7307,https://root.cern,https://github.com/root-project/root/issues/11867,1,['variab'],['variable']
Modifiability, path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.io.xml.roottest_root_io_xml_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10480/testReport/projectroot.roottest.root.io/xml/roottest_root_io_xml_make/); - [projectroot.interpreter.clingtest_check_cling](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10480/testReport/projectroot/interpreter/clingtest_check_cling/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1208#issuecomment-341377301:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1208#issuecomment-341377301,2,['portab'],['portable']
Modifiability," realfilename = safemalloc( dirname_len+filename_len+1 );; ^; ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'; #define safemalloc(s) malloc(s); ^; export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'; ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'; #define safemalloc(s) malloc(s); ^; export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; free( realfilename );; ^; export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'; export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; curr = calloc(*size, 1);; ^; export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'; export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; buff->buffer = realloc( buff->buffer, buff->allocated_size );; ^; export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'; 4 errors generated.; make[3]: *** [Makefile:346: export.o] Error 1; make[3]: *** Waiting for unfinished jobs....; ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15044:1959,variab,variable,1959,https://root.cern,https://github.com/root-project/root/pull/15044,1,['variab'],['variable']
Modifiability," remove; -- Looking for remove - found; -- Looking for shmat; -- Looking for shmat - found; -- Looking for IceConnectionNumber in ICE; -- Looking for IceConnectionNumber in ICE - found; -- X11_INCLUDE_DIR: /usr/include; -- X11_LIBRARIES: /usr/lib/libSM.so;/usr/lib/libICE.so;/usr/lib/libX11.so;/usr/lib/libXext.so; -- X11_Xpm_INCLUDE_PATH: /usr/include; -- X11_Xpm_LIB: /usr/lib/libXpm.so; -- X11_Xft_INCLUDE_PATH: /usr/include; -- X11_Xft_LIB: /usr/lib/libXft.so; -- X11_Xext_INCLUDE_PATH: /usr/include; -- X11_Xext_LIB: /usr/lib/libXext.so; -- Found GIF: /usr/lib/libgif.so (found version ""5.2.1""); -- Found TIFF: /usr/lib/libtiff.so (found version ""4.3.0""); -- Found PNG: /usr/lib/libpng.so (found version ""1.6.37""); -- Found JPEG: /usr/lib/libjpeg.so (found version ""80""); -- Looking for AfterImage; -- Could NOT find AfterImage (missing: AFTERIMAGE_INCLUDE_DIR AFTERIMAGE_LIBRARIES); -- AfterImage not found. Switching on builtin_afterimage option; -- Building AfterImage library included in ROOT itself; -- Looking for GSL; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.8.0""); -- Found GSL: /usr/include (found suitable version ""2.7.1"", minimum required is ""1.10""); -- Looking for OpenGL; -- Found OpenGL: /usr/lib/libOpenGL.so; -- Looking for GLEW; -- Could NOT find GLEW (missing: GLEW_INCLUDE_DIRS GLEW_LIBRARIES); -- GLEW not found. Switching on builtin_glew option; -- Looking for gl2ps; -- Could NOT find gl2ps (missing: GL2PS_LIBRARY GL2PS_INCLUDE_DIR); -- gl2ps not found. Switching on builtin_gl2ps option; -- Looking for LibXml2; -- Found LibXml2: /usr/lib/libxml2.so (found version ""2.9.13""); -- Found OpenSSL: /usr/lib/libcrypto.so (found version ""1.1.1n""); -- Looking for MySQL; -- Found MySQL: /usr/include/mysql; -- Looking for Oracle; -- Oracle not found.; -- Oracle: You can specify includes: -DORACLE_PATH_INCLUDES=/usr/include/oracle/10.2.0.3/client; -- currently found includes:; -- Oracle: You can specify libs: -DORACLE_PATH_LIB=/usr/lib/oracle/10.2.0.3/client/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:4700,config,config,4700,https://root.cern,https://github.com/root-project/root/issues/10528,1,['config'],['config']
Modifiability, runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(DeclUnloader.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:16673,variab,variable,16673,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,2,['variab'],['variable']
Modifiability," see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable?. Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870411730:1409,config,config,1409,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870411730,2,['config'],['config']
Modifiability," should provide real implementation ; > ```; > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&); > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&); > ```; > Otherwise these methods will be non-usable for other SQL plugins; > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`; > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:; 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp; `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`; has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds...; For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds.; 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:; `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`; But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for the long answer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3961#issuecomment-506253921:1928,plugin,plugins,1928,https://root.cern,https://github.com/root-project/root/pull/3961#issuecomment-506253921,2,['plugin'],['plugins']
Modifiability," simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapsh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12905:3983,variab,variable,3983,https://root.cern,https://github.com/root-project/root/pull/12905,4,['variab'],['variable']
Modifiability," sprintf(char *string,char *format,arglist,...);; int fscanf(FILE *fp,char *format,arglist,...);; int scanf(char *format,arglist,...);; int sscanf(char *string,char *format,arglist,...);; (C++ compiled) class TClass public:TDictionary //Dictionary containing class information; (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects; (C++ compiled) class TMemberInspector //ABC for inspecting class data members; (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title); (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics; (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup; (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information; (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information; (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information; (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion; (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion; (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method); (C++ compiled) class TQObject //Base class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:2549,plugin,plugin,2549,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,4,['plugin'],['plugin']
Modifiability," ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:2240,config,configuration,2240,https://root.cern,https://github.com/root-project/root/issues/7936,1,['config'],['configuration']
Modifiability," std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::_M_insert_range_unique<const std::pair<const std::__cxx11::basic_string<char>, bool> *>' requested here; { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }; ^; /home/blue/Scratchpad/work/forum_rvec_crash_2/repro_modules_crash.C:2:31: note: in instantiation of member function 'std::map<std::__cxx11::basic_string<char>, bool, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::map' requested here; std::map<std::string, bool> m{{""foo"", true}, {""bar"", false}};; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_tree.h:315:7: note: previous definition is here; operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT; ^; ```. Note 1: A `Release` build seems to work fine. I can reproduce the problem on CentOS 8 Stream with a self-built GCC 11.1.0. When testing with self-built versions of GCC 11.2.0, 10.2.0, and 9.3.0, I get a probably related crash `ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:3857: unsigned int clang::FunctionDecl::getODRHash() const: Assertion 'hasODRHash()' failed.` where the `FunctionDecl` is the constructor of `std::_Rb_tree_iterator`. Note 2: The system-default GCC 8.5.0 and a self-built GCC 8.4.0 are both fine. The only ""relevant"" change that I see for `_Rb_tree_iterator` in GCC 9 is the move from (member) `bool operator==` to `friend bool operator==`, which matches the error message quite nicely. Finally, I was able to reproduce the assertion in a Docker container of `ubuntu:latest` (Ubuntu 22.04.4 LTS at the time of writing), after installing; ```; # apt update; # apt upgrade; # apt install --no-install-recommends ca-certificates cmake gcc g++ git libc6-dev libz-dev make ninja-build patch python3 uuid-dev; ```; and then configuring as `cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -Dx11=OFF ../root.src/`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10291:3363,config,configuring,3363,https://root.cern,https://github.com/root-project/root/issues/10291,1,['config'],['configuring']
Modifiability," the following errors:\r\n```\r\n Start 993: tutorial-rcanvas-rbox-py\r\n\r\n993: Test command: \""C:\Program Files\CMake\bin\cmake.exe\"" \""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py\"" \""-DSYS=C:/Users/bellenot/build/release\"" \""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc\"" \""-P\"" \""C:/Users/bellenot/build/release/RootTestDriver.cmake\""\r\n993: Environment variables:\r\n993: ROOT_HIST=0\r\n993: Test timeout computed to be: 1500\r\n993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]\r\n993: ((const shared_ptr&lt;ROOT::Experimental::RCanvas&gt;*)obj)-&gt;operator-&gt;&lt;ROOT::Experimental::RCanvas, 0&gt;();\r\n993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]\r\n993: ((const shared_ptr&lt;ROOT::Experimental::RBox&gt;*)obj)-&gt;operator-&gt;&lt;ROOT::Experimental::RBox, 0&gt;();\r\n993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n993: Traceback (most recent call last):\r\n993: File \""C:\Users\bellenot\git\master\tutorials\launcher.py\"", line 34, in &lt;module&gt;\r\n993: spec.loader.exec_module(module)\r\n993: File \""&lt;frozen importlib._bootstrap_external&gt;\"", line 850, in exec_module\r\n993: File \""&lt;frozen importlib._bootstrap&gt;\"", line 228, in _call_with_frames_removed\r\n993: File \""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py\"", line 24, in &lt;module&gt;\r\n993: box1.border.color = RColor.kBlue\r\n993: AttributeError: &lt;class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98&gt; has no attribute 'kBlue'. Full details:\r\n993: attribute acces",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035#issuecomment-927923183:900,variab,variables,900,https://root.cern,https://github.com/root-project/root/pull/9035#issuecomment-927923183,1,['variab'],['variables']
Modifiability," think it is seeing llvm2 (system has 16, not sure what root builds - 14? 15?). ```; [ 51%] Performing configure step for 'clad'; CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:37 (message):; Command failed: 1. '/usr/local/bin/cmake' '-G' 'Unix Makefiles' '-DCMAKE_BUILD_TYPE=Release' '-DCMAKE_C_COMPILER=/usr/bin/cc' '-DCMAKE_C_FLAGS= -pipe -Wall -W -pthread -fPIC' '-DCMAKE_CXX_COMPILER=/usr/bin/c++' '-DCMAKE_CXX_FLAGS= -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -fPIC -fno-rtti' '-DCMAKE_INSTALL_PREFIX=/home/mkrzewic/build/root/etc/cling//plugins' '-DLLVM_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm' '-DCLANG_INCLUDE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build'. See also. /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log. -- stdout output is:; -- Configuring incomplete, errors occurred!. -- stderr output is:; CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:1344,plugin,plugins,1344,https://root.cern,https://github.com/root-project/root/issues/14492,3,['plugin'],['plugins']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3821#issuecomment-493117744:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3821#issuecomment-493117744,2,['variab'],['variable']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59426/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59426/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59426/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3825#issuecomment-493136444:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3825#issuecomment-493136444,2,['variab'],['variable']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59432/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59432/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59432/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3687#issuecomment-493200730:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3687#issuecomment-493200730,2,['variab'],['variable']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59438/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59438/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59438/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3826#issuecomment-493376653:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3826#issuecomment-493376653,2,['variab'],['variable']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59450/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59450/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59450/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3827#issuecomment-493406179:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3827#issuecomment-493406179,2,['variab'],['variable']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59456/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59456/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59456/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3825#issuecomment-493393620:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3825#issuecomment-493393620,2,['variab'],['variable']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59462/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59462/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59462/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3828#issuecomment-493395825:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3828#issuecomment-493395825,2,['variab'],['variable']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59468/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59468/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59468/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3825#issuecomment-493407711:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3825#issuecomment-493407711,2,['variab'],['variable']
Modifiability," this would require some changes to our software. And also this problem is not specific to libgandiva only, but it would affect any library that uses LLVM. Unfortunately, those should be carefully attended because of ROOT. I would feel more comfortable if my stack knows which libraries depend on LLVM to avoid pain debugging ROOT. > I have in the mean time found the root cause why my patch fails:; > ; > * It is due to copy relocations of symbols from libstdc++; > ; > * Crashes happen whenever cling wants to output text via cout / cerr / etc.; > ; > * The problem is that there are 2 instances of cout / cerr: The first created by the executable itself through copy relocation, when the executable prints something via cout. The second created by libCling loaded with RTLD_DEEPBIND. (By design, RTLD_DEEPBIND links to libstdc++ first before checking the global namespace, so it does not see the copy-relocated symbol.). I am not a huge fan of the `RTLD_DEEPBIND` approach because it is not portable and it essentially overrides the dynamic linker behavior yet one more time. I am not sure how this would translate to Windows for example. > ; > ; > The problem can be avoided if executables are compiled with -fPIC as well.; > I just tried locally to compile the failing ROOT ctests with -fPIC and this fixed the segmentation faults.; > The question is whether this is a proper solution, since it would require to compile all executables with -fPIC. On the other hand, I don't know how to fix this in another way. Perhaps this could be enabled via a special CMake option for ROOT, which enables RTLD_DEEPBIND for libCling and -fPIC for all executables. IIUC, `RTLD_DEEPBIND` alters the search order of the dynamic linker and using -fPIC intends to deduplicate. That seems as bad as preloading a set of llvm dependent libraries, IMO. Do we need `libgandiva.so` to be compiled with -fPIC or just the executables which 'use' ROOT?. > @vgvassilev : I do not see how I could control this.; > https://git",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564015399:1399,portab,portable,1399,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564015399,1,['portab'],['portable']
Modifiability," time in; the past may now fail. Some workarounds are available. This led to issues within the Python language, tracked at; https://bugs.python.org/issue33725. Any application that makes use of; e.g. multiprocessing (or in any way ends up calling MacOS system `fork`; or `exec`) is affected. According to the Python bug tracker, this issue; has been fixed in Python 3.8. The XCode Python 3.8 version begs to differ. In a very specific usecase,; that boils down to this simple reproducer:; ```python; import pyspark. sparkconf = pyspark.SparkConf().setAll(; {""spark.app.name"": ""distrdf001_spark_connection"",; ""spark.master"": ""local[4]"", }.items()); sparkcontext = pyspark.SparkContext(conf=sparkconf). def imp(partition):; import cppyy; return 1. count = sparkcontext.parallelize(range(1)).map(imp).reduce(lambda x,y:; x+y); ```. the issue is still triggered. Installing any other 3.8+ Python; executable on a MacOS node doesn't show this behaviour, with the exact; same pyspark version (3.2.1). It is possible to workaround this problem, by setting the environment; variable OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES before running a test.; This effectively brings back the behaviour of MacOS10.12 and previous; versions. This commit uses this workaround, since we cannot directly; modify how the system XCode Python on MacOS works. To give an idea of the impact of this issue (and therefore the changes; in this commit), the situation where this occurs is as follows:. 1. A user wants to run RDataFrame in distributed mode.; 2. Their environment is MacOS 10.13+.; 3. The application creates a pyspark mock cluster on the local Mac machine and; the computations happen strictly in the single local node, not in a; distributed cluster. Thus, it probably interests only a very small fraction of use cases for; distributed RDataFrame, mainly regarding quick checks done locally before; actually sending the computations to a cluster. Co-authored-by: Enric Tejedor Saavedra <enric.tejedor.saavedra@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9811:1322,variab,variable,1322,https://root.cern,https://github.com/root-project/root/pull/9811,1,['variab'],['variable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 11 more. ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9220/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9220/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9220/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9220/testReport/projectroot.roottest.python/pythonizations/roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1197#issuecomment-337667733:2487,portab,portable,2487,https://root.cern,https://github.com/root-project/root/pull/1197#issuecomment-337667733,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.cling.array.roottest_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11281/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.return.roottest_cling_return_constRetrunTest_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11281/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343327255:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343327255,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.cling.array.roottest_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11345/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.return.roottest_cling_return_constRetrunTest_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11345/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343509208:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343509208,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.cling.return.roottest_cling_return_constRetrunTest_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.root/collection/roottest_root_collection_execTClonesArrayAbsorb_auto/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-je,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343735053:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343735053,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11047/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11047/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11047/testReport/projectroot.roottes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1049#issuecomment-342628177:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1049#issuecomment-342628177,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10384/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.cling.template.separateDict.roottest_cling_template_separateDict_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10384/testReport/projectroot.roottest.cling.template/separateDict/roottest_cling_template_separateDict_make/); - [projectroot.roottest.root.io.abstractclass.roottest_root_io_abstractclass_make](https://epsft-jenkins.cern.ch/job/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1255#issuecomment-341155396:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1255#issuecomment-341155396,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8996/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_handlers_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8996/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_handlers_doctest/); - [projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test](https://epsft-jenkins.cern.ch/job/root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1167#issuecomment-336691370:2284,portab,portable,2284,https://root.cern,https://github.com/root-project/root/pull/1167#issuecomment-336691370,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9423/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_make/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9423/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1217#issuecomment-338361152:2284,portab,portable,2284,https://root.cern,https://github.com/root-project/root/pull/1217#issuecomment-338361152,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9638/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_make/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9638/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1217#issuecomment-339129413:2284,portab,portable,2284,https://root.cern,https://github.com/root-project/root/pull/1217#issuecomment-339129413,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9752/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_make/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9752/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1217#issuecomment-339535932:2284,portab,portable,2284,https://root.cern,https://github.com/root-project/root/pull/1217#issuecomment-339535932,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9975/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_make/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9975/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1217#issuecomment-339995032:2284,portab,portable,2284,https://root.cern,https://github.com/root-project/root/pull/1217#issuecomment-339995032,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9983/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_make/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9983/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1226#issuecomment-340010416:2284,portab,portable,2284,https://root.cern,https://github.com/root-project/root/pull/1226#issuecomment-340010416,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.test.test_vvector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11896/testReport/projectroot/test/test_vvector/); - [projectroot.test.test_vmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11896/testReport/projectroot/test/test_vmatrix/); - [projectroot.roottest.root.io.tree.roottest_root_io_tree_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11896/testReport/projectroot.roottest.root.io/tree/roottest_root_io_tree_make/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenk,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1337#issuecomment-344879536:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1337#issuecomment-344879536,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15040/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15040/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1521#issuecomment-358393873:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1521#issuecomment-358393873,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15088/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15088/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1524#issuecomment-358696801:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1524#issuecomment-358696801,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15096/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15096/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1525#issuecomment-358710378:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1525#issuecomment-358710378,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15104/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15104/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1526#issuecomment-358749943:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1526#issuecomment-358749943,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15112/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15112/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1524#issuecomment-358761575:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1524#issuecomment-358761575,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15144/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15144/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1523#issuecomment-358897303:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1523#issuecomment-358897303,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15048/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15048/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1517#issuecomment-358454952:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1517#issuecomment-358454952,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15136/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15136/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1526#issuecomment-358771131:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1526#issuecomment-358771131,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15516/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15516/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUti,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-359572750:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-359572750,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15508/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15508/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.meta.roottest_root_meta_runMemberComments_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15508/testReport/projectroot.roottest.root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1514#issuecomment-359542056:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1514#issuecomment-359542056,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15548/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15548/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.meta.roottest_root_meta_runMemberComments_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15548/testReport/projectroot.roottest.root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1514#issuecomment-359760582:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1514#issuecomment-359760582,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15572/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15572/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.meta.roottest_root_meta_runMemberComments_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15572/testReport/projectroot.roottest.root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1514#issuecomment-359922537:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1514#issuecomment-359922537,1,['portab'],['portable']
Modifiability," uni));. // add zero trick to ""convert"" the RooProdPdf into a RealSumPdf; RooUniform dummy_for_sum_pdf{""dummy_for_sum_pdf"", ""dummy_for_sum_pdf"", x};; RooRealVar unity_for_sum_pdf(""unity_for_sum_pdf"", ""unity_for_sum_pdf"", 1);; RooRealSumPdf prod_fixed( ""prod_fixed"", ""prod_fixed"",; RooArgList(prod, dummy_for_sum_pdf),; RooArgList(unity_for_sum_pdf) );. // convolute pdf (replace prod with prod_fixed to enable hotfix); RooFFTConvPdf conv(""conv"", ""conv"", x, prod, gaus2);. // make plot; TCanvas c(""convolution"", ""convolution"");; auto xframe = x.frame(RooFit::Title(""With RooProdPdf""));. gaus1.plotOn(xframe);; gaus2.plotOn(xframe);; prod.plotOn(xframe);; conv.plotOn(xframe);. xframe->Draw();; c.SaveAs(""convolution.png"");. // the result of the convolution is expected to be a wider Gaussian around 1000,; // but without the hotfix it is just a non-zero constant!; }; ```. The executable can be compiled with:; ```bash; g++ $(root-config --cflags) -o convolution convolution.cc $(root-config --libs) -lRooFitCore -lRooFit; ```. An interesting observation is that by turning the `RooProdPdf` into a `RooRealSumPdf` by adding another `RooUniform` with coefficient zero, the problem is gone. So the problem is really in the interaction between `RooProdPdf` and `RooFFTConvPdf`. <img src=""https://user-images.githubusercontent.com/6578603/107349328-5eb73300-6ac8-11eb-953b-b21e90db8abc.png"" width=""400"" alt=""convolution""/> <img src=""https://user-images.githubusercontent.com/6578603/107349528-9de58400-6ac8-11eb-997a-ea938868de60.png"" width=""400"" alt=""convolution_hotfix""/>. ### Setup. Current ROOT master built on CentOS 7. ### Additional context. * Originally reported in the [ROOT forum](https://root-forum.cern.ch/t/roofftconvpdf-gives-constant-zero/43443); * In the forum it was reported that this problem also arises with the numerical convolution `RooNumConvPdf`, **however**, the example in **this issue works fine** with `RooNumConvPdf`!; * Two Jira issues appear to be connected to this issue: [",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7157:2110,config,config,2110,https://root.cern,https://github.com/root-project/root/issues/7157,1,['config'],['config']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3821#issuecomment-493117744:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3821#issuecomment-493117744,1,['variab'],['variable']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59426/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59426/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59426/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3825#issuecomment-493136444:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3825#issuecomment-493136444,1,['variab'],['variable']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59432/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59432/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59432/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3687#issuecomment-493200730:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3687#issuecomment-493200730,1,['variab'],['variable']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59438/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59438/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59438/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3826#issuecomment-493376653:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3826#issuecomment-493376653,1,['variab'],['variable']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59450/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59450/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59450/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3827#issuecomment-493406179:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3827#issuecomment-493406179,1,['variab'],['variable']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59456/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59456/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59456/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3825#issuecomment-493393620:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3825#issuecomment-493393620,1,['variab'],['variable']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59462/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59462/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59462/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3828#issuecomment-493395825:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3828#issuecomment-493395825,1,['variab'],['variable']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59468/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59468/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59468/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3825#issuecomment-493407711:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3825#issuecomment-493407711,1,['variab'],['variable']
Modifiability," was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1748,config,configuration,1748,https://root.cern,https://github.com/root-project/root/pull/11882,1,['config'],['configuration']
Modifiability," weights associated with the bin contents of those histograms should also be added appropriately. `THnSparse` does not do this. It still reports the weights of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11333:1035,variab,variable,1035,https://root.cern,https://github.com/root-project/root/issues/11333,1,['variab'],['variable']
Modifiability, ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:34:16: error: ‘other’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:34:21: error: template argument 1 is invalid . And 16 more. ### Warnings:; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:420:9: warning: unused variable ‘op_0_transA’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:421:9: warning: unused variable ‘op_0_transB’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:422:8: warning: unused variable ‘op_0_m’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:423:8: warning: unused variable ‘op_0_n’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:424:8: warning: unused variable ‘op_0_k’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:425:10: warning: unused variable ‘op_0_alpha’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:426:10: warning: unused variable ‘op_0_beta’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:427:8: warning: unused variable ‘op_0_lda’ [-Wunused-variable] ; - [2024,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14413#issuecomment-1948984768:2678,variab,variable,2678,https://root.cern,https://github.com/root-project/root/pull/14413#issuecomment-1948984768,2,['variab'],['variable']
Modifiability,"!; ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell; [...]; -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred!; ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:; ```shell; [ 98%] Linking CXX executable ../../bin/hist2workspace; [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so; [ 98%] Built target hist2workspace; [100%] Built target RooFitHS3; [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so; [100%] Built target RooFitXRooFit; [100%] Built target onepcm; [100%] Generating lib/modules.idx; Abort trap (core dumped); --- lib/modules.idx ---; *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build; 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build; --- CMakeFiles/modules_idx.dir/all ---; *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build; 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build; *** [all] Error code 2. make: stopped in /usr/ho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865#issuecomment-1779361849:1513,config,configuration,1513,https://root.cern,https://github.com/root-project/root/issues/13865#issuecomment-1779361849,1,['config'],['configuration']
Modifiability,""" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:1867,config,configure,1867,https://root.cern,https://github.com/root-project/root/issues/11787,1,['config'],['configure']
Modifiability,""",""cosa"",-1.,1.); kAww = ROOT.RooRealVar(""kAww"",""kAww"",1.); kSM = ROOT.RooRealVar(""kSM"",""kSM"",1.); Lambda = ROOT.RooRealVar(""Lambda"",""Lambda"",1000.); kHww = ROOT.RooRealVar(""kHww"",""kHww"",0.); ; gSM = ROOT.RooFormulaVar(""_gSM"" ,""cosa*kSM"", ROOT.RooArgList(cosa,kSM)); gHww = ROOT.RooFormulaVar(""_gHww"" ,""cosa*kHww/Lambda"", ROOT.RooArgList(cosa,kHww,Lambda)); gAww = ROOT.RooFormulaVar(""_gAww"" ,""sqrt(1-(cosa*cosa))*kAww/Lambda"", ROOT.RooArgList(cosa,kAww,Lambda)); ; # Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ""samples-analyzed-NonSMggF-250722-o.root""; ; obsvar.setConstant(True); ; par = ""cosa""; samplelist = [""sig_X_ggf_BSM1"", ""sig_X_ggf_BSM2"", ""sig_X_ggf_SM""]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = obsname; config.folderNames = samplelist; config.couplings.add(gSM); config.couplings.add(gHww); config.couplings.add(gAww); ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of DPhill"", config); ; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Extract input templates for plotting; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfuncpdf = ROOT.RooWrapperPdf(""morphpdf"", ""morphpdf"",morphfunc); ws = ROOT.RooWorkspace(""workspace""); ws.Import(morphfuncpdf); ; return ws. def plot(ws):; morphfunc = ws.function(""morphfunc""); morphpdf = ws.pdf(""morphpdf""); obsvar = ws.var(obsname). UnfoldedFile = ROOT.TFile.Open(""Unfolded.root"",""READ""); U1 = UnfoldedFile.Get(""DPhill""); data_hist=ROOT.RooDataHist(""dphill"",""dphill"",[obsvar],U1); ; morphpdf.fitTo(data_hist,ROOT.RooFit.SumW2Error(True))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11044#issuecomment-1209312505:1735,config,config,1735,https://root.cern,https://github.com/root-project/root/issues/11044#issuecomment-1209312505,1,['config'],['config']
Modifiability,""";; TString formula = ""x"";; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<x<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; std::cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:; ```; Written to tree: 1617047019150033926; Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");; Expected output: 1617047019150033926; ****************************************; * Row * x *; ****************************************; * 0 * 1617047019150033920 *; ****************************************. TTree::Scan(""x-1617047019150033925"");; Expected output: 1; ****************************************; * Row * x-1617047019150033925 *; ****************************************; * 0 * 0 *; ****************************************. TTree::Scan(""x-1617047019150033000"");; Expected output: 926; ****************************************; * Row * x-1617047019150033000 *; ****************************************; * 0 * 1024 *; ****************************************; ```; I encou",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7844:1739,variab,variable,1739,https://root.cern,https://github.com/root-project/root/issues/7844,1,['variab'],['variable']
Modifiability,"""Commit"" is not a good commit message. @lmoneta could you help @surya2191997 rewrite the commits?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3924#issuecomment-504893263:77,rewrite,rewrite,77,https://root.cern,https://github.com/root-project/root/pull/3924#issuecomment-504893263,1,['rewrite'],['rewrite']
Modifiability,"""Not applicable"" because this is not a bugfix, just refactoring",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7029#issuecomment-1799063322:52,refactor,refactoring,52,https://root.cern,https://github.com/root-project/root/issues/7029#issuecomment-1799063322,1,['refactor'],['refactoring']
Modifiability,"""RooArgList created with the constructor where you pass multiple elements are non-owning collections"" - it looks like a not very good behaviour. Why can't it be consistent between all constructors?. ""It is also possible to have an owning RooArgList/Set, but in this case it would own all the elements"" - maybe it would be better than to completely prohibit owning? I think it may be used more often than a mixture of owned/not-owned elements. However, it would still require some code. I would also add about RooArgList, that it would be great to handle an arbitrary number of elements. Is it possible? I have 10 pdfs, and I have to add the last one after the RooArgList constructor using the *add* method (because the constructor supports at maximum 9 args).; If one rewrites the constructor, maybe the owning issues might be re-implemented as well.; RooArgList/Set looks like a very general container, so it would benefit from being even more general. Anyway if you can detect this issue and raise an exception, this would be a good solution. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8052#issuecomment-830058968:768,rewrite,rewrites,768,https://root.cern,https://github.com/root-project/root/issues/8052#issuecomment-830058968,1,['rewrite'],['rewrites']
Modifiability,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696260432:517,flexible,flexible,517,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696260432,2,"['flexible', 'variab']","['flexible', 'variables']"
Modifiability,"""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Ensure you are using ROOT >= 6.24/00; 1. Ensure you are using CMake >= 3.22.0; 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Problem verified on 6.24/06 and 6.25/02.; 2. SLF7.; 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context; <!--; Add any other context about the problem here.; -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:; ```Console; Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system.; ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583:1477,config,configured,1477,https://root.cern,https://github.com/root-project/root/issues/9583,1,['config'],['configured']
Modifiability,"""overloadedFreePtsq"", ROOT.squared). #will fail because argument name determination from overloads is ambiguous; d = d.Define(""overloadedFreePtsq"", ROOT.squared2). #templated free function; d = d.Define(""templatedFreeNmuonsSq"", ROOT.squared[""int""], [""nMuons""]). #static class member; d = d.Define(""staticPtsq"", ROOT.Callable.mul, [""Muon_pt"", ""Muon_pt""]). #class member; d = d.Define(""overloadedMemberPtsq"", ROOT.Callable().squared, [""Muon_pt""]). #templated class member; d = d.Define(""templatedMemberNmuonsSq"", ROOT.Callable().squared[""int""], [""nMuons""]). #overloaded operator(); d = d.Define(""overloadedCallPtsq"", ROOT.Callable(), [""Muon_pt""]). #string expression; d = d.Define(""lambdaPtsq"", ""Muon_pt*Muon_pt""). #complete lambda expression (direct jitting without parsing); d = d.Define(""lambdaPtsq"", ""[](float x) { return x*x; }"", [""Muon_pt""]). #complete lambda expression with inferred column names and argument types (direct jitting without parsing, argument names determined from cling after jitting); d = d.Define(""lambdaAutoPtsq"", ""[](auto Muon_pt) { return Muon_pt*Muon_pt; }""); ```. A few remaining issues here:; - ""Warning: failed - offset calculation between TList and TViewPubFunctions"" in some cases (related to extracting argument names through cling machinery). - cppyy gives limited or obscure errors on template instantiation. In this case the templates are instantiated in code compiled by TClingCallFunc::compile_wrapper() which apparently has different verbosity than TCling::Declare (jitting through this route also does not forcibly disable the null pointer check like Declare does, and possibly other subtleties); In particular there's one nasty case which is fairly common and produces totally incomprehensible errors compared to compiling the same code in gcc (or even with TCling::Declare), where an incorrect number of columns is passed to Declare compare to the callable. All of the above functionality can be easily extended to Filter once we're happy with the direction.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9174:4299,extend,extended,4299,https://root.cern,https://github.com/root-project/root/pull/9174,1,['extend'],['extended']
Modifiability,"# API Redesign. ## Goal. The goal is this PR is to improve the API of the CNN layers (MaxPooling and Conv currently), by eliminating redundant constructor arguments and fields. By redundant in this context, I refer to arguments that can be directly computed from others, and fields that unnecesseraly exist in multiple classes. ## Key points. Below some discussion points on design decisions I made, but still consider debatable. ; Since my experience in production level C++ is very limited I highly value opinions from experienced colleagues and previous authors of the module. ### Making `MaxPoolingLayer` a sub-class of `ConvLayer`. Every layer type in a convolutional network follows the logic existing in our `ConvLayer`:. A filter is sliding over the input and at each step applies an operation to the input elements within its receptive field to produce a single output element. * In a convolutional layer this operation is a linear combination with learnable parameters.; * In an average pooling layer the operation is a linear combination with constant parameters (and equal to the inverse of the receptive field's size).; * In a max pooling layer its a non linear operation. As we can see they all share the same logic and therefore fields. ## Results. 1. Common fields between the 2 layer types in the CNN module are now not duplicated (strides sizes, padding sizes, filter sizes). The same for the 4 `protected` methods in `ConvLayer`. 2. We now have a cleaner API, as the constructor arguments where reduced from 26 to 16 without any change in the functionality).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117:78,layers,layers,78,https://root.cern,https://github.com/root-project/root/pull/2117,2,['layers'],['layers']
Modifiability,# Backport. This will backport the following commits from `master` to `v6-32-00-patches`:; - [[skip-ci] improve labeling in candle plot examples.](https://github.com/root-project/root/pull/15659); - [Fix warnings in timeaxis3.C](https://github.com/root-project/root/pull/15659); - [Simplify timeonaxis.C and make the year labels clearer](https://github.com/root-project/root/pull/15659); - [simplify timeonaxis examples.](https://github.com/root-project/root/pull/15659); - [Remove an unused variable and use exact dates.](https://github.com/root-project/root/pull/15659). <!--- Backport version: 9.5.1 -->. ### Questions ?; Please refer to the [Backport tool documentation](https://github.com/sorenlouv/backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15674:492,variab,variable,492,https://root.cern,https://github.com/root-project/root/pull/15674,1,['variab'],['variable']
Modifiability,"# Goal. This PR implements `Im2Col` in CUDA in (what I consider) an optimal way in terms of performance. I achieve that by assigning one thread per output element. This means that threads do not share their write address and therefore no synchronization is required. They do share read address which is of course thread safe. I complement the new functionality with a complete testing suite to assert correctness. # Extra tasks. The tests within the `CNN` module suffer from extensive code duplication as the `Reference` and `CPU` versions do exactly the same thing (the CUDA one's would just worsen the issue). Instead I refactored the `Im2Col` one's using templated arguments: As a result the tests are now defined only once and called independently from each architecture using templates. This approach is also followed in the `DNN` module. If time allows, I plan to refactor all tests within the `CNN` module in a similar manner.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118:622,refactor,refactored,622,https://root.cern,https://github.com/root-project/root/pull/2118,2,['refactor'],"['refactor', 'refactored']"
Modifiability,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10780:96,variab,variables,96,https://root.cern,https://github.com/root-project/root/pull/10780,4,['variab'],"['variable', 'variables']"
Modifiability,"# Problem; It is more efficient to debug applications relying on ROOT having a debug ROOT build. # Solution I would like. Provide debug builds for nightlies (and optionally for releases). # Alternatives . - Debug on Linux with released ROOT works perfectly for standard RedHat distros ( the others are less relevant ).; This is a very good alternative (thanks to Mattias!), but Linux-only and release-only. . - Building from the sources is a very-very bad alternative, as the created builds cannot be transferred elsewhere, i.e. shared with collaborators. Another reason why this is a bad alternative: building with the full configuration on Mac in a reasonable time requires a lot of CPU power, much more than a single user laptop can provide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6430:625,config,configuration,625,https://root.cern,https://github.com/root-project/root/issues/6430,1,['config'],['configuration']
Modifiability,"# This Pull request: ; Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: ; Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10745:202,variab,variable,202,https://root.cern,https://github.com/root-project/root/pull/10745,1,['variab'],['variable']
Modifiability,"# This Pull request: Allows for the user to specify the number of cores used during make. ## Changes or fixes: Added a number-of-cores option to the parser and added a condition to check if option was used, and if it is,; the Build object cores instance variable will be set to the user passed number. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10997:254,variab,variable,254,https://root.cern,https://github.com/root-project/root/pull/10997,1,['variab'],['variable']
Modifiability,# This Pull request: Improves documentation of TRandom::GetSeed() methods in derived classes. ## Changes or fixes:; Documentation involving inconsistencies in `TRandom::GetSeed()` methods. In the derived classes the seed variable is used to store internal state of the generator not to keep track of the initial state with which it was invoked. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #14580,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14687:221,variab,variable,221,https://root.cern,https://github.com/root-project/root/pull/14687,1,['variab'],['variable']
Modifiability,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Added indentation and spacing as well as getting rid of unused variables. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10992:143,variab,variables,143,https://root.cern,https://github.com/root-project/root/pull/10992,1,['variab'],['variables']
Modifiability,"# This Pull request: Reduces global variable mutation, and is now easier to debug. ## Changes or fixes: Created a new Cpt class, moved all functions that use global variables to this class, and then made all the globals instance variables of the Cpt class. ## Checklist:. - [NA] tested changes locally; - [X] updated the docs (if necessary). This PR fixes issue mentioned in the meta-issue list #406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10883:36,variab,variable,36,https://root.cern,https://github.com/root-project/root/pull/10883,3,['variab'],"['variable', 'variables']"
Modifiability,"# This Pull request: Reduces global variable mutation, making it easier to debug. ## Changes or fixes: Got rid of LLVM_GIT_URL, CLANG_GIT_URL, and CLING_GIT_URL and put them in their respective functions. I then got rid of the EXTRA_CMAKE_FLAGS variable and put it in the compile functions and replaced its global reference with the direct value. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11037:36,variab,variable,36,https://root.cern,https://github.com/root-project/root/pull/11037,2,['variab'],['variable']
Modifiability,# This Pull request: Reduces global variable mutation. ## Changes or fixes: Removed the CPT_SRC_DIR and REVISION global variables and implemented them in the functional parameter passing style. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta issue list (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11058:36,variab,variable,36,https://root.cern,https://github.com/root-project/root/pull/11058,2,['variab'],"['variable', 'variables']"
Modifiability,"# This Pull request: [Fix #6981] RDisplay::Print to list custom number of elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed.; ; Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element.; ; Additional paramter to the constructor of the the RDisplay() was added,; that is the nMaxCollectionElements. It determines, number of elements to be; shown from long collction. Default is 10.; ; Corresponding tests were adapted and additional ones were added to check; the new functionality.; ; Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9105:676,adapt,adapted,676,https://root.cern,https://github.com/root-project/root/pull/9105,1,['adapt'],['adapted']
Modifiability,"# This Pull request:. ## Changes or fixes:. - The `CMAKE_GENERATOR_PLATFORM` is only set when manually specified with `cmake -A <platform>`. The `CMAKE_SIZEOF_VOID_P` variable is set automatically by the `project()` call (and it's used elsewhere in the code). This also breaks building with Ninja for Windows x64; - The `ClingTargets.cmake` where no correctly generated when running `cmake --install` on Cling. It looks like the `CLING_HAS_EXPORTS` was removed at some point, but the packaging code was never updated. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes # . Closes https://github.com/root-project/cling/issues/454",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11632:167,variab,variable,167,https://root.cern,https://github.com/root-project/root/pull/11632,1,['variab'],['variable']
Modifiability,"# This Pull request:. ## Changes or fixes:. Add `dependabot.yml` file which will configure the dependabot to periodically create PRs whenever GitHub actions can be updated. Currently configured to submit the PR weekly with a maximum of 5 concurrent open PRs. GitHub actions cannot (or should not) be configured to run on the latest version, you can only specify which major version to run. Many times whenever there is a new version released it never gets updated on the developer's end. This PR fixes this with the added benefit of a dedicated PR for each action which should test if there are any breaking changes. The PR also contains a link to the action changelog.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14683:81,config,configure,81,https://root.cern,https://github.com/root-project/root/pull/14683,3,['config'],"['configure', 'configured']"
Modifiability,"# This Pull request:. ## Changes or fixes:. Adds a reasonable max bin content (and explicitly stated) for TH1F to prevent nasty silent data drawing errors. If the solution is welcome, I can extend it for TH2 and TH3. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/6671",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14271:190,extend,extend,190,https://root.cern,https://github.com/root-project/root/pull/14271,1,['extend'],['extend']
Modifiability,"# This Pull request:. ## Changes or fixes:. Fix an import error in JsMVA:. ```; $ ipython; Python 3.12.3 (main, Apr 17 2024, 00:00:00) [GCC 14.0.1 20240411 (Red Hat 14.0.1-0)]; Type 'copyright', 'credits' or 'license' for more information; IPython 8.23.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: from ROOT.JsMVA import JsMVAMagic. In [2]: %jsmva on; ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); Cell In[2], line 1; ----> 1 get_ipython().run_line_magic('jsmva', 'on'). File /usr/lib/python3.12/site-packages/IPython/core/interactiveshell.py:2480, in InteractiveShell.run_line_magic(self, magic_name, line, _stack_depth); 2478 kwargs['local_ns'] = self.get_local_scope(stack_depth); 2479 with self.builtin_trap:; -> 2480 result = fn(*args, **kwargs); 2482 # The code below prevents the output from being displayed; 2483 # when using magics with decorator @output_can_be_silenced; 2484 # when the last Python token in the expression is a ';'.; 2485 if getattr(fn, magic.MAGIC_OUTPUT_CAN_BE_SILENCED, False):. File /usr/lib64/python3.12/site-packages/ROOT/JsMVA/JsMVAMagic.py:26, in JsMVAMagic.jsmva(self, line); 22 @line_magic; 23 @magic_arguments(); 24 @argument(""arg"", nargs=""?"", default=""on"", help=""Enable/Disable JavaScript visualisation for TMVA""); 25 def jsmva(self, line):; ---> 26 from JsMVA.JPyInterface import functions; 28 args = parse_argstring(self.jsmva, line); 29 if args.arg == ""on"":. ModuleNotFoundError: No module named 'JsMVA'. ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15752:261,enhance,enhanced,261,https://root.cern,https://github.com/root-project/root/pull/15752,1,['enhance'],['enhanced']
Modifiability,# This Pull request:. ## Changes or fixes:. Fixes that CMake was still trying to look for `llvm-config-9` instead of `llvm-config-13` after for #10294. To prevent this I added two variable in the beginning of the file so that it is less likely to be forgotten next time. I also moved the versioned version before the unversioned one. This should make sure it actually takes the right version if `llvm-config` defaults to a version that is not 13 (currently the case in Debian e.g.). /cc @hahnjo @vgvassilev @bellenot. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12150:96,config,config-,96,https://root.cern,https://github.com/root-project/root/pull/12150,4,"['config', 'variab']","['config', 'config-', 'variable']"
Modifiability,"# This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of; the generated code in `Rcpp/generated` and `Rcpp/module` when; compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16075:242,adapt,adapts,242,https://root.cern,https://github.com/root-project/root/pull/16075,1,['adapt'],['adapts']
Modifiability,"# This Pull request:. ## Changes or fixes:. I noticed that the current `.clang-format` file does not fully comply with the schema (https://clang.llvm.org/docs/ClangFormatStyleOptions.html). I updated the configuration file so it's compliant (I made the choices based on what I thought the original authors wanted to achieve with the selected options). I am not sure if the lack of compliance with the schema is because of updates to `clang-format` or not. The changes in this PR should only affect style, but these updates may make `clang-format` behave differently than before (because previous options may have being ignored). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14690:204,config,configuration,204,https://root.cern,https://github.com/root-project/root/pull/14690,1,['config'],['configuration']
Modifiability,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11627:692,Config,Config,692,https://root.cern,https://github.com/root-project/root/pull/11627,1,['Config'],['Config']
Modifiability,"# This Pull request:. ## Changes or fixes:. It is not checked in the existing code whether `getenv(""ROOTSYS"")` returns `NULL`. It does so if the environment variable is not defined; it is exactly what happens during building [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L584). Then `std::string` gets initialized from the C string from address 0, which may result in a segmentation fault. ## Checklist:. - [ x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10776:157,variab,variable,157,https://root.cern,https://github.com/root-project/root/pull/10776,1,['variab'],['variable']
Modifiability,"# This Pull request:. ## Changes or fixes:. Some minor interface changes to reflect better the underlying TestStatistics classes and how we intend to bring it to users in the upcoming release. . The 'NewStyle' name was changed to 'ModularL' to reflect the fact that these new test statistics are modular. Note that we are undecided on 'ModularL' versus just 'Modular', so if you have a strong opinion on this feel free to change it. Some of the functionality included in the added named arguments is not implemented yet, this is because we plan to add the respective backend for these new features in the near future. Therefore these named arguments were added under RooFit::Experimental namespace. Do we also need to add these not yet functioning arguments already to the RooMinimizer config struct, since we plan to add them in the near future?. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11906:786,config,config,786,https://root.cern,https://github.com/root-project/root/pull/11906,1,['config'],['config']
Modifiability,"# This Pull request:. ## Changes or fixes:. TMath.cxx and TMath.h. . Define BreitWignerRelativistic(...) in TMath.h and then calculate in TMath.cxx, following same convention for names of variables, default values and normalization as BreitWigner(...) which is already defined in TMath. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9926:188,variab,variables,188,https://root.cern,https://github.com/root-project/root/pull/9926,1,['variab'],['variables']
Modifiability,# This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9402:253,variab,variables,253,https://root.cern,https://github.com/root-project/root/pull/9402,3,['variab'],['variables']
Modifiability,# This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9456:243,variab,variables,243,https://root.cern,https://github.com/root-project/root/pull/9456,3,['variab'],['variables']
Modifiability,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11791:802,Config,Config,802,https://root.cern,https://github.com/root-project/root/pull/11791,3,"['Config', 'variab']","['Config', 'variable']"
Modifiability,"# This Pull request:. ## Changes or fixes:. This PR re-implements the `TH1` method `GetCumulative(forward, suffix)`, which is equivalent to the original implementation (with #11948 applied) on 1D histograms, but produces more sensible result for 2D and 3D histograms. That is,. $$S_{i_x i_y i_z} = \sum_{j_x = n_{x0}}^{i_x} \sum_{j_y = n_{y0}}^{i_y} \sum_{j_z = n_{z0}}^{i_z} a_{j_x j_y j_z}\ (\text{forward})$$. $$S_{i_x i_y i_z} = \sum_{j_x = i_x}^{n_x} \sum_{j_y = i_y}^{n_y} \sum_{j_z = i_z}^{n_z} a_{j_x j_y j_z}\ (\text{backward})$$. To achieve $O(n_x n_y n_z)$ time complexity (instead of $O(n_x^2 n_y^2 n_z^2)$ ), the method is implemented using the [inclusion-exclusion principle](https://en.wikipedia.org/wiki/Inclusion%E2%80%93exclusion_principle) while referencing the content of the previously-computed neighboring bins. Namely,. $$\begin{cases}; S_{i_x i_y i_z} = a_{i_x i_y i_z} + S_{(i_x-1) i_y i_z} + S_{i_x (i_y-1) i_z} + S_{i_x i_y (i_z-1)} - S_{(i_x-1) (i_y-1) i_z} - S_{i_x (i_y-1) (i_z-1)} - S_{(i_x-1) i_y (i_z-1)} + S_{(i_x-1) (i_y-1) (i_z-1)} & (\text{forward}) \\; S_{i_x i_y i_z} = a_{i_x i_y i_z} + S_{(i_x+1) i_y i_z} + S_{i_x (i_y+1) i_z} + S_{i_x i_y (i_z+1)} - S_{(i_x+1) (i_y+1) i_z} - S_{i_x (i_y+1) (i_z+1)} - S_{(i_x+1) i_y (i_z+1)} + S_{(i_x+1) (i_y+1) (i_z+1)} & (\text{backward}); \end{cases}$$. This is useful when computing the selection efficiency of two variables:; For example, one can get a histogram (`*h2_eff_pt_eta`) in which each bin represents the selection efficiency where pt and eta is greater than the lower edges of the bin from the 2D histogram of these variables (`*h2_pt_eta`) with the following code,. ```c++; TH2 *h2_eff_pt_eta = h2_pt_eta->GetCumulative(kFALSE, ""_efficiency"");; h2_eff_pt_eta->Scale(h2_eff_pt_eta->GetBinContent(1, 1));; ```. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11949:1397,variab,variables,1397,https://root.cern,https://github.com/root-project/root/pull/11949,2,['variab'],['variables']
Modifiability,"# This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:; ```; $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -; ```; Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:; ```; $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -; <command-line>: warning: extra tokens at end of #undef directive; ```; Now it will only undefine VAR, but not define it. I.e. instead of; ```; #undef VAR; #define VAR 1; ```; you get; ```; #undef VAR,-DVAR=1; ```; which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12476:109,variab,variable,109,https://root.cern,https://github.com/root-project/root/pull/12476,1,['variab'],['variable']
Modifiability,"# This Pull request:. ## Changes or fixes:. This is just a suggestion to align a bit more with Clang's coding standards https://opensource.apple.com/source/lldb/lldb-112/llvm/docs/CodingStandards.html#ll_ns_std. If the change is welcome, I can extend to the rest of parts of ROOT that have this statement. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14922:244,extend,extend,244,https://root.cern,https://github.com/root-project/root/pull/14922,1,['extend'],['extend']
Modifiability,# This Pull request:. ## Changes or fixes:. nWorkers setting was actually not being set when the RooMinimizer was called with the nWorkers setting enabled in `RooMinimizer::Config`. Now that is fixed by passing the `RooMinimizer::Config::nWorkers` setting to the multiprocessing internal config. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11840:173,Config,Config,173,https://root.cern,https://github.com/root-project/root/pull/11840,3,"['Config', 'config']","['Config', 'config']"
Modifiability,"# This Pull request:. ## Changes or fixes:; * `thisroot.sh`:; * Pass `shellcheck`; ```sh; shellcheck -s sh config/thisroot.sh; shellcheck -s dash config/thisroot.sh; shellcheck -s ksh config/thisroot.sh; shellcheck -s bash config/thisroot.sh; ```; Notable fixes:; * <code>&DiacriticalGrave;my-command&DiacriticalGrave;</code> -> `$(my-command)`; (SC2006, &DiacriticalGrave;&DiacriticalGrave; is a legacy Bourn shell syntax with several issues); * `[ ""x$foo"" = ""x"" ]` -> `[ -z ""${foo-}"" ]` and `[ ""x$foo"" != ""x"" ]` -> `[ -n ""${foo-}""]`; * `cond && run-true || run-false` -> `if cond; then run-true; else run false; fi`; (SC2015: run-false may be triggered when run-true fails); * [ ""$foo"" == ""$bar"" ] -> [ ""$foo"" = ""$bar"" ] (SC3014, POSIX-conformance). * Fix unbound variables; * Whenever a variable `$foo` is possibly not set, call it like `${foo-}`; * Now it can be sourced with `set -u`. * Unify indentation: use three spaces everywhere. * `thisroot.fish`:; * `dirname` -> `path dirname` so that Fish users don't have to call the `dirname` executable.; ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11557:107,config,config,107,https://root.cern,https://github.com/root-project/root/pull/11557,6,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"# This Pull request:. ## Changes or fixes:; **Commit 1 (2932c2af9ce19d346807a39d990d77efd1169e09): bug fix.** When using a fractional event range smaller than an actual (integral) event, rounding to integers would cause the extended term in unbinned likelihoods in `RooUnbinnedL` to be added multiple times.; **Commit 2 (18cb82c9ef0aed0b30f08b62b3161aa3a2bc3a29): new `LikelihoodJob` mode.** `LikelihoodJob` would parallelize over events, just like the old bulk parallelization mode of `RooNLLVar` (through `RooRealMPFE`). Now it can also parallelize over components and the two modes can be mixed as well to parallelize over both, allowing the user to define an optimal splitting for their usecase. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11068:224,extend,extended,224,https://root.cern,https://github.com/root-project/root/pull/11068,1,['extend'],['extended']
Modifiability,"# This Pull request:. ## Changes or fixes:; - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance; - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference; - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9271:68,Config,ConfigParser,68,https://root.cern,https://github.com/root-project/root/pull/9271,2,['Config'],['ConfigParser']
Modifiability,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15499:568,Extend,Extend,568,https://root.cern,https://github.com/root-project/root/pull/15499,2,['Extend'],['Extend']
Modifiability,"# This Pull request:. ## Changes or fixes:; Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9473:276,config,configuration,276,https://root.cern,https://github.com/root-project/root/pull/9473,1,['config'],['configuration']
Modifiability,"# This Pull request:. ## Changes or fixes:; The main feature is that this PR makes it possible (in the final commit 5227996a9941918404d0a36037daa2c91e29833a) to run minimizations with both LikelihoodGradientJob and LikelihoodJob activated at the same time. This adds likelihood parallelization at the event-level to the non-gradient phases of Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10966:690,extend,extended,690,https://root.cern,https://github.com/root-project/root/pull/10966,1,['extend'],['extended']
Modifiability,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15797:220,enhance,enhanced,220,https://root.cern,https://github.com/root-project/root/pull/15797,3,"['enhance', 'refactor']","['enhanced', 'refactoring', 'refactorings']"
Modifiability,"# This Pull request:. ## Changes or fixes:; This commit adds the Config class to provide a user-accessible place set the desired number of workers. The number of workers was previously settable from a static public member of JobManager, but since we do not expose MultiProcess internals to users, it was unreachable from the ROOT interpreter and scripts. Thanks to @Zeff020 for noticing this omission. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9409:65,Config,Config,65,https://root.cern,https://github.com/root-project/root/pull/9409,1,['Config'],['Config']
Modifiability,"# This Pull request:. ## Changes or fixes:; This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9610:74,refactor,refactor,74,https://root.cern,https://github.com/root-project/root/pull/9610,1,['refactor'],['refactor']
Modifiability,"# This Pull request:. ## Changes or fixes:; some unused variables warnings in MacOs cocoa. I not sure how to fix this one:; ```; Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ```. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10574:56,variab,variables,56,https://root.cern,https://github.com/root-project/root/pull/10574,3,['variab'],"['variable', 'variables']"
Modifiability,"# This Pull request:. ## Changes or fixes:; warns of overflow with an error message. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). See https://root-forum.cern.ch/t/break-segmentation-violation-while-using-geometry-package/53087/7. Side note: To allow for Long64_t, a complete rewrite of all variables' data types would be needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12028:314,rewrite,rewrite,314,https://root.cern,https://github.com/root-project/root/pull/12028,2,"['rewrite', 'variab']","['rewrite', 'variables']"
Modifiability,"# This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);; * Label nodes now use html, allowing for more custom fonts;; * Colors of different element types were changed to be easier to; distinguish;; * Empty RLoopManager is more clearly indicated;; * Actions which has run are more clearly indicated;; * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #9556",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9722:358,adapt,adapted,358,https://root.cern,https://github.com/root-project/root/pull/9722,1,['adapt'],['adapted']
Modifiability,"# This Pull request:. - Cleans up dangling[^1] images and unused containers before running; - Renames `buildroot.yml` to `root-ci.yml` and `rootci-installers/` to `root-ci-config`; - Enables unbuffered python output again. Buffered python output sometimes (often) causes the output to be sorted by stderr first, then stdout. This makes the grouping wrong and warnings out of order. Disabling buffering is also a very minor performance loss for the CI because CMake, CTest and git writes most of their output to stderr, which is already unbuffered. [^1]: Images that are still on disk, but no longer tagged because they are overwritten by an updated one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12309:172,config,config,172,https://root.cern,https://github.com/root-project/root/pull/12309,1,['config'],['config']
Modifiability,"# This Pull request:. - adds helper functions to RooGenericPdf and RooFormulaVar; - makes sure the HS3 JSON contains the names of the variables entering RooFormula-based PDF and function types also in cases where the functions have been constructed with the ""x[0]"" notation. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13225:134,variab,variables,134,https://root.cern,https://github.com/root-project/root/pull/13225,1,['variab'],['variables']
Modifiability,"# This Pull request:. Added some instrospection methods to TestStatistics Likelihood classes and also added corresponding tests. In particular added GetName() and GetInfo(). GetName() follows the same interface as the other RooFit classes in order to stay consistent. GetInfo() returns an std::string which allows for the added flexibility of concatenating more information about the class. Also added getComponents() to RooSumL in order to retrieve the vector of components from the sum likelihood. Note I am not completely happy about the implementation of the naming, in particular with the fact that the name needs to be supplied to the constructor of the RooAbsL class. Another option would be to override the GetName() and GetInfo() functions in each of the child classes explicitly with the same implementation, in which case we could have a unique name_ variable in each of the child classes and no need for the modification to the constructors. Let me know if this is preferred. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10043:862,variab,variable,862,https://root.cern,https://github.com/root-project/root/pull/10043,1,['variab'],['variable']
Modifiability,# This Pull request:. Adds a mechanism to RRawFile to report limitations of vector read requests. Xrootd servers are enforcing such limits. Extends the XRootD RRawFile plugin to query and report the server-side limits. Extends the RNTuple file page source to properly schedule vector reads in presence of limits. ## Changes or fixes:. Fixes RNTuple reading from XRootD. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14175:140,Extend,Extends,140,https://root.cern,https://github.com/root-project/root/pull/14175,3,"['Extend', 'plugin']","['Extends', 'plugin']"
Modifiability,# This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15051:65,inherit,inheritance,65,https://root.cern,https://github.com/root-project/root/pull/15051,2,['inherit'],['inheritance']
Modifiability,# This Pull request:. Adds more functionality to the RooPolyFunc. ## Changes or fixes:. Add a new constructor and change an existing one slightly to avoid collisions.; Add getters for internal variables.; Fix bugs in printout. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11953:193,variab,variables,193,https://root.cern,https://github.com/root-project/root/pull/11953,1,['variab'],['variables']
Modifiability,# This Pull request:. Adds more options to generate asimov datasets by; - allowing to generate asimov datasets for RooMultiVarGaussian; - adding a new constructor to RooExtendPdf that allows to more easily extend pdfs to fixed nEvents; - improving error messages emitted by AsymptoticsCalculator when creating error messages. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12034:206,extend,extend,206,https://root.cern,https://github.com/root-project/root/pull/12034,1,['extend'],['extend']
Modifiability,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11549:301,config,configuration,301,https://root.cern,https://github.com/root-project/root/pull/11549,4,['config'],"['config', 'configuration']"
Modifiability,"# This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15169:27,plugin,plugin,27,https://root.cern,https://github.com/root-project/root/pull/15169,5,['plugin'],"['plugin', 'plugins']"
Modifiability,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15105:643,variab,variables,643,https://root.cern,https://github.com/root-project/root/pull/15105,3,"['config', 'variab']","['configuration', 'variables']"
Modifiability,# This Pull request:. Casted variable rc to void in roofit/multiprocess/src/Messenger.cxx to disable the warning.; It is used only in assert statement besides the cast. ## Changes or fixes: roofit/multiprocess/src/Messenger.cxx. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9368:29,variab,variable,29,https://root.cern,https://github.com/root-project/root/pull/9368,1,['variab'],['variable']
Modifiability,"# This Pull request:. Changes the parametrization of some of the PDFs and a few of their keys. In the process, a mechanism for automatic reparametrization is introduced. ## Changes or fixes:. - the HS3 implementation of RooExponential should invert the meaning of ""c"", such that the JSON represenation reads ""-c"" rather than ""c""; - RooPoisson should write out & read ""noRounding"" as ""integer"" ; - lognormal should be adjusted to adhere to the standard definition by transforming the variables ; - rename multinormal_dist to multivariate_normal_dist; - ""bounds"" now called ""edges"" for irregular binned histograms. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13627:483,variab,variables,483,https://root.cern,https://github.com/root-project/root/pull/13627,1,['variab'],['variables']
Modifiability,"# This Pull request:. Explicitly set `Vdt_ROOT` when `builtin_vdt` was used for the build. This way, a default location would be provided for VDT, which the user could still override if they wanted to. ## Changes or fixes:. This fixes the issue reported in #14163. Following up from the changes introduced in #11844. Note that this fix requires CMake 3.12+, with [CMP0074](https://cmake.org/cmake/help/latest/policy/CMP0074.html#policy:CMP0074) set to `NEW`. :thinking: Supporting older CMake versions, or that policy set to `OLD` would also be possible, but would require a lot more lines of code. (`FindVdt.cmake` would need to learn about a new hint variable itself.). Still, if people here feel very strongly about it, it would be possible to go that route as well. :thinking: . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) (N/A). This PR fixes: #14163",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14178:653,variab,variable,653,https://root.cern,https://github.com/root-project/root/pull/14178,1,['variab'],['variable']
Modifiability,# This Pull request:. Extends @guitargeek s fixups with a few small additional bugfixes. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12490:22,Extend,Extends,22,https://root.cern,https://github.com/root-project/root/pull/12490,1,['Extend'],['Extends']
Modifiability,"# This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (added a doxygen line). ## Code to test functionality:; (run as a root script). ```c++; void apge() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;; TGraphErrors *gr = new TGraphErrors;; for (Int_t i=0;i<n;i++) {; Double_t x = i*0.1;; gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));; }; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15232:22,Extend,Extends,22,https://root.cern,https://github.com/root-project/root/pull/15232,1,['Extend'],['Extends']
Modifiability,"# This Pull request:. Fixes a problem where RooFormulaVar instances using the `@1`, `@2` syntax were not properly exported. ## Changes or fixes:. Variables referenced by `@N` in the expression of RooFormulaVar or RooGenericPdf are now replaced by the variable names upon export. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13555:146,Variab,Variables,146,https://root.cern,https://github.com/root-project/root/pull/13555,2,"['Variab', 'variab']","['Variables', 'variable']"
Modifiability,"# This Pull request:. Fixes various small bugs, makes the implementation more robust and improves error reporting for JSON import of HS3 files. ## Changes or fixes:. - errors from the nlohmann_json importer are now correctly forwarded to the user, rather than giving an unspecific ""std_exception"".; - some missing keys or values no longer trigger segfaults, but instead lead to an actual error being emitted. this includes errors being emitted by ParamHistFuncs if the number of bins is incorrect.; - the version tag has been correctly updated to 0.2; - gaussians can now be imported with ""normal_dist"" as well, as described by the standard; - the implementation is a bit more lenient when missing some values (e.g. ignoring cases where the histfactory modifier name has been omitted and instead just numbers the systematics); - the list of variables in the workspace is now no longer just filled from the parameter_points, but also from the domains, allowing cases where no parameter points are given to be imported successfully. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14289:841,variab,variables,841,https://root.cern,https://github.com/root-project/root/pull/14289,1,['variab'],['variables']
Modifiability,# This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data.; This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10744:185,config,configuration-option,185,https://root.cern,https://github.com/root-project/root/pull/10744,1,['config'],['configuration-option']
Modifiability,"# This Pull request:. Modifies Minuit2 interface to pass initial error/covariance matrix or second derivatives (G2) vector. ## Changes or fixes:. This PR exploits existing code in `MnSeedGenerator` and introduces some improvements, namely:; 1. Check whether provided matrix has positive diagonal (G2 must be positive) and larger than working precision `Eps`; if it is not the case, numerical computation is carried out.; 2. Disable `NegativeG2LineSearch` whenever point 1 is satisfied. Furthermore, this PR provides an interface to pass the error/covariance matrix or second derivatives (G2) vector via `ROOT::Math::Minimizer`. The user can provide either the error/covariance matrix in compressed format (column-major upper triangular part), OR the g2 vector, see the code snippet below. The matrix or second derivatives must take into account only variable parameters, implying that all fixed parameters must be declared before providing initial values. ```; ROOT::Math::Minimizer* minimum = ROOT::Math::Factory::CreateMinimizer(minName, algoName);. minimum->SetVariable(0,""x"",0.,0.);; minimum->SetVariable(1,""y"",0.,0.);. int nrow = 2;; std::vector<double> cov(nrow*(nrow+1)/2);; std::vector<double> d2(nrow);. for(int i = 0; i < nrow; i++) {; d2[i] = 0.1*(i+1);; for(int j = i;j< nrow;j++); cov[i + j * (j + 1) / 2] = (i==j) ? 0.1*(i+1) : 0.;; }. minimum->SetCovariance(cov,nrow);; // OR; //minimum->SetCovarianceDiag(d2,nrow);; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16437:850,variab,variable,850,https://root.cern,https://github.com/root-project/root/pull/16437,1,['variab'],['variable']
Modifiability,"# This Pull request:. Note that this PR does not need to be merged, although it could be, I'm mainly putting it up here to test it on CI. I needed it to rebase another branch on top of, which I will submit for a PR soon too. I leave it up to you whether you want to consider these two things separately. ## Changes or fixes:. The `RooGradMinimizerFcn` was not necessary anymore, so it has been removed. We do plan to repurpose its code later on for a ""`LikelihoodGradientSerial`"" implementation of `LikelihoodGradientWrapper`. This removal also simplifies construction of `RooMinimizer`, which no longer needs it. That, in turn, simplifies the test case configuration in testLikelihoodGradientJob.cpp. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11716:654,config,configuration,654,https://root.cern,https://github.com/root-project/root/pull/11716,1,['config'],['configuration']
Modifiability,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11577:320,config,configuration,320,https://root.cern,https://github.com/root-project/root/pull/11577,4,['config'],"['config', 'configuration']"
Modifiability,"# This Pull request:. Previously, the Exec method of the FillTGraphHelper was ambiguous.; Currently, Exec properly handles container and non-container types.; Corresponding tests added.; Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9770:212,variab,variable,212,https://root.cern,https://github.com/root-project/root/pull/9770,1,['variab'],['variable']
Modifiability,# This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13150:22,Refactor,Refactors,22,https://root.cern,https://github.com/root-project/root/pull/13150,2,"['Refactor', 'variab']","['Refactors', 'variables']"
Modifiability,"# This Pull request:. Resolves #12297. Changes the matrix to do some jobs with different options, e.g. `DLLVM_BUILD_TYP=Debug` for one of the ubuntu22 builds. (can be changed). Also rewrites the matrix to explicitly type each job, instead of doing a N x M jobs. I believe this syntax is easier to configure and makes implementation cleaner, as opposed to using nested lists to provide matrix options. Example run (picture added in case it expires): https://github.com/olemorud/root/actions/runs/4284703493; ![image](https://user-images.githubusercontent.com/82065181/221802381-3394775e-2b1b-45e9-8e3c-63ce0d44bd18.png). ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12388:182,rewrite,rewrites,182,https://root.cern,https://github.com/root-project/root/pull/12388,2,"['config', 'rewrite']","['configure', 'rewrites']"
Modifiability,"# This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14137:283,config,config,283,https://root.cern,https://github.com/root-project/root/pull/14137,1,['config'],['config']
Modifiability,# This Pull request:. This PR contains a few hotfixes to the HS3 implementation. ## Changes or fixes:. - attempting to export a forbidden variable name now triggers an error message; - export-keys-based exporters now use RooAbsProxy instead of RooRealProxy to allow also non-function-type and non-list-type proxies to be exported successfully.; - added a unit test for import and export of RooBernstein to cover the import/export issues for export-keys-based exporters.; - invalid category names will now be fixed upon export such that they don't lead to invalid data names; - FlexibleInterpVars with unequal numbers of variables and high/low variations will now be cut-off on minimum length upon export.; - HistFactory ShapeSys and staterror will now export and import the parameter names instead of auto-generating them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13813:138,variab,variable,138,https://root.cern,https://github.com/root-project/root/pull/13813,3,"['Flexible', 'variab']","['FlexibleInterpVars', 'variable', 'variables']"
Modifiability,"# This Pull request:. This PR is continuing #13457 by Ahmat and it is based on https://github.com/root-project/root/pull/12941 and [Dynamic-Op](https://github.com/root-project/root/compare/master...Neel-Shah-29:root-1:Dynamic-Op) both by Neel Shah. # Changes of Fixes. - Introduce intermediate tensors with parametric shapes (Dynamic tensors); - Implement the [Range operator](https://github.com/onnx/onnx/blob/main/docs/Operators.md#Range); - Add tests for the Range operator; - Add full support for Input tensors with parametric shapes (using the Dim structure) and propagate the shapes using Dim also in the intermediate ones.; - Start changing operators to support inputs/output tensors with Dim shapes. ; - support now Gemm, Relu, Concat, LayerNormalization; - Add support for input Dim shapes in GNN classes to support fully variable number of nodes and edges",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14413:831,variab,variable,831,https://root.cern,https://github.com/root-project/root/pull/14413,1,['variab'],['variable']
Modifiability,# This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9728:30,refactor,refactors,30,https://root.cern,https://github.com/root-project/root/pull/9728,1,['refactor'],['refactors']
Modifiability,"# This Pull request:. This follows on from a recent pull request which added a relativistic breit wigner to ROOT https://github.com/root-project/root/pull/10760, to add a relativistic voigt which is a natural extension. **Brief summary**; Files added:; math/mathmore/inc/Math/VoigtRelativistic.h - Defines VoigtRelativistic class with two functions, evaluate which calculates the relativistic voigt, and dumpingFunction which calculates the relativisitic voigt's dumping function. ; math/mathmore/src/VoigtRelativistic.cxx - Implements the two functions defined in VoigtRelativistic.h . This implementation uses the redefinition of variables in https://arxiv.org/pdf/1711.09304.pdf which is required to write the integral in a computationally feasiable way.; tutorials/math/Voigt.C - Add a tutorial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this val",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:632,variab,variables,632,https://root.cern,https://github.com/root-project/root/pull/11049,1,['variab'],['variables']
Modifiability,"# This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:; It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally ; Was compiling both in ""standard"" and ""FetchContent ""; - [ X] updated the docs (if necessary) ; - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8941:147,variab,variable,147,https://root.cern,https://github.com/root-project/root/pull/8941,1,['variab'],['variable']
Modifiability,"# This Pull request:. This pull request allows to root as a sub-project using `FetchContent`.; It a cleaner Pull request than (#8941). ## Changes or fixes:; It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally ; Was compiling both in ""standard"" and ""FetchContent ""; - [ X] updated the docs (if necessary) ; - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9516:187,variab,variable,187,https://root.cern,https://github.com/root-project/root/pull/9516,1,['variab'],['variable']
Modifiability,"# This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced.; It has 2 member strings, corresponding to the brief and the full description.; It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`.; As brief description is the output from `RInterface::DescribeDataset`.; As full description is the remaining code from `RInterface::Describe`.; Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:; * `AsString(bool)` -> returning brief/full description as a string; * `Print(bool)` -> printing the content of `AsString(bool)`; * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`; * printValue -> returns string corresponding to AsString(shortFomat=false); * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #8893",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9551:981,adapt,adapted,981,https://root.cern,https://github.com/root-project/root/pull/9551,1,['adapt'],['adapted']
