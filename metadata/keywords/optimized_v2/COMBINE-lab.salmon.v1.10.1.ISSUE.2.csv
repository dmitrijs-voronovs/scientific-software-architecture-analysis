quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Performance,"s files (if Present) . ; processed 267 Million barcodes. [2018-12-05 15:12:18.914] [alevinLog] [info] Done barcode density calculation.; [2018-12-05 15:12:18.914] [alevinLog] [info] # Barcodes Used: 267451749 / 267548197.; [2018-12-05 15:12:25.126] [alevinLog] [info] Knee found left boundary at 11954 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-12-05 15:12:27.371] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-05 15:12:27.494] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 15:12:27.880] [alevinLog] [info] Done populating Z matrix; [2018-12-05 15:12:27.952] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:6806,Load,Loading,6806,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Load'],['Loading']
Performance,"s the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. **Desktop (please complete the following information):**. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. **Additional context**; I appreciate any help you can offer and I apologize in advance if there's something obvious I should ha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/317:2016,Load,Loading,2016,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317,1,['Load'],['Loading']
Performance,"s while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 0 | max rel diff. = 0.548; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:1798,Load,Loading,1798,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,1,['Load'],['Loading']
Performance,s/SRR2454059.fq.gz }; ### [ threads ] => { 8 }; ### [ libType ] => { ISF }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further processin; g; [2016-12-13 12:46:51.776] [jointLog] [info] Counted 16265961 total reads in the equivalence classes . [2016-12-13 12:46:51.786] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 12:46:51.786] [joint,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111:1760,Load,Loading,1760,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111,1,['Load'],['Loading']
Performance,"s/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52:41.666] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:52:41.668] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:52:42.565] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:52:43.137] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:52:43.276] [jointLog] [info] . The alignment group queue pool has been exhausted. 1759 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 25000000 reads in current roundSegmentation fault (core dumped). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:9853,queue,queue,9853,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['queue'],['queue']
Performance,salmon docker failing while loading hash,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/243:28,load,loading,28,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243,1,['load'],['loading']
Performance,"salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading refere",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:6486,Load,Loading,6486,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading refere",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:3361,Load,Loading,3361,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"sed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screens",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/304:1209,Load,Loading,1209,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304,1,['Load'],['Loading']
Performance,"sed Barcodes except Whitelist: 3667; [2021-01-25 16:27:07.498] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-25 16:27:07.498] [alevinLog] [info] parsing read library format; [2021-01-25 16:30:54.542] [alevinLog] [info] Starting optimizer; [2021-01-25 16:30:54.782] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:54.782] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 1350278.00 UMI after deduplicating.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 30909 BiDirected Edges.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 8817 UniDirected Edges.; [2021-01-25 16:30:55.969] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-01-25 16:30:56.294] [alevinLog] [warning] Num High confidence barcodes too less 20 < 90.Can't performing whitelisting; Skipping; [2021-01-25 16:30:56.297] [alevinLog] [info] Finished optimizer. ### with `--exceptCells 7000`; > [2021-01-21 09:24:45.891] [alevinLog] [info] Found 43030 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); [2021-01-21 09:24:45.942] [alevinLog] [info] Filled with 43030 txp to gene entries; [2021-01-21 09:24:45.947] [alevinLog] [info] Found all transcripts to gene mappings; [2021-01-21 09:24:45.967] [alevinLog] [info] Processing barcodes files (if Present); [2021-01-21 09:33:35.885] [alevinLog] [info] Done barcode density calculation.; [2021-01-21 09:33:35.885] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-21 09:33:37.337] [alevinLog] [info] Total 10016(has 1000 low confidence) barcodes; [2021-01-21 09:33:38.202] [alevinLog] [info] Done True Barcode Sampling; [2021-01-21 09:33:39.137] [alevinLog] [warning] Total **52.0343% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-21 09:33:39.960] [alevinLog] [info] Done populating Z matrix; [2021-01-21 09:33:39.989] [alevi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:5076,optimiz,optimizer,5076,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,1,['optimiz'],['optimizer']
Performance,"sh index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 325.83 us; -----------------------------------------; [2020-05-29 20:14:24.638] [jointLog] [info] done; [2020-05-29 20:14:24.638] [jointLog] [info] Index contained 57,190 targets; [2020-05-29 20:14:25.202] [jointLog] [info] Number of decoys : 0. processed 38,500,000 fragmentsntLog] [info] Automatically detected most likely library type as IU; hits: 40,221,178, hits per frag: 1.04508. **Desktop (please complete the following information):**; - OS:Ubuntu ; - Version 18.04. **Additional context**; Previously used salmon on this laptop and it was much much faster, that'ts the main reason I use salmon.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:3815,Load,Loading,3815,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,3,['Load'],['Loading']
Performance,"sh quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. Desktop (please complete the following information):. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. Additional context; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318:2160,Load,Loading,2160,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318,4,"['Load', 'load']","['Loading', 'loading']"
Performance,"sh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:2093,Load,Loading,2093,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,1,['Load'],['Loading']
Performance,"sijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:1952,Load,Loading,1952,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,1,['Load'],['Loading']
Performance,"sing a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `un",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/304:1469,load,loading,1469,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304,1,['load'],['loading']
Performance,"sizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading reference sequence | Time = 408.65 ms; -----------------------------------------; -----------------------------------------; | Loading reference ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:10478,Load,Loading,10478,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['Load'],['Loading']
Performance,"st: 44516; [2019-07-18 14:15:58.973] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2019-07-18 14:15:58.973] [alevinLog] [info] parsing read library format; [2019-07-18 14:24:27.923] [alevinLog] [info] Starting optimizer; [2019-07-18 14:24:28.655] [alevinLog] [warning] 24 mitorna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.655] [alevinLog] [info] Total 13 usable mRna genes; [2019-07-18 14:24:28.656] [alevinLog] [warning] 558 ribosomal rna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.656] [alevinLog] [info] Total 0 usable rRna genes; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 4282454.00 UMI after deduplicating.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 5378060 BiDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 958944 UniDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [warning] Skipped 28272 barcodes due to No mapped read; [2019-07-18 14:30:09.552] [alevinLog] [info] Finished optimizer; ```. ## R code (How to Use alevin with Seurat). ```; > library(here); > library(tidyverse); > library(Seurat); > library(tximport); > library(tictoc). > files <- file.path(here(""alevin_output/alevin/quants_mat.gz"")); > file.exists(files); [1] TRUE; >; > tic(""starts...""); > txi <- tximport(files, type=""alevin""; > toc(); starts...: 728.506 sec elapsed; > sessionInfo(); ```; R version 3.6.1 (2019-07-05); Platform: x86_64-conda_cos6-linux-gnu (64-bit); Running under: CentOS Linux 7 (Core). Matrix products: default; BLAS/LAPACK: /gpfs/data/software/anaconda3/envs/R3.6/lib/libopenblasp-r0.3.6.so. locale:; [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C; [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8; [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8; [7] LC_PAPER=en_US.UTF-8 LC_NAME=C; [9] LC_ADDRESS=C LC_TELEPHONE=C; [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C. attached base packages:; [1] stats graphics grDevices utils datasets methods base. other attached packages:; [1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/404:2626,optimiz,optimizer,2626,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404,1,['optimiz'],['optimizer']
Performance,"sv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:4791,optimiz,optimized,4791,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,2,['optimiz'],['optimized']
Performance,"t ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:13574,optimiz,optimized,13574,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,2,['optimiz'],['optimized']
Performance,"t sure if the mapping rate so low is reasonable in this case: the fastq files (R1 and R2) were generated reservely from the bam files. I tried both Hg38 and Hg19 for this dataset (only bam files available to me, which were aligned by Hg19 genome), and I got similarly low mapping rate. . The salmon log is like this:; ```; [2024-01-27 01:09:31.030] [jointLog] [info] setting maxHashResizeThreads to 20; [2024-01-27 01:09:31.030] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-01-27 01:09:31.030] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-01-27 01:09:31.030] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-01-27 01:09:31.030] [jointLog] [info] parsing read library format; [2024-01-27 01:09:31.030] [jointLog] [info] There is 1 library.; [2024-01-27 01:09:31.032] [jointLog] [info] Loading pufferfish index; [2024-01-27 01:09:31.033] [jointLog] [info] Loading dense pufferfish index.; [2024-01-27 01:09:33.435] [jointLog] [info] done; [2024-01-27 01:09:33.508] [jointLog] [info] Index contained 252,048 targets; [2024-01-27 01:09:36.263] [jointLog] [info] Number of decoys : 0; [2024-01-27 01:09:41.237] [jointLog] [info] Automatically detected most likely library type as IU. [2024-01-27 01:10:28.189] [fileLog] [info] ; At end of round 0; ==================; Observed 3600210 total fragments (3600210 in most recent round). [2024-01-27 01:10:28.188] [jointLog] [info] Computed 179,584 rich equivalence classes for further processing; [2024-01-27 01:10:28.188] [jointLog] [info] Counted 446,871 total reads in the equivalence classes ; [2024-01-27 01:10:28.202] [jointLog] [warning] 0.197488% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2024-01-27 01:10:28",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/908:1040,Load,Loading,1040,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908,1,['Load'],['Loading']
Performance,"t with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog] [info] Loading Suffix Array ; [2017-03-15 12:19:05.982] [stderrLog] [info] Loading Transcript Info ; Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34.791] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2017-03-14 12:10:36.701] [jointLog] [warning] Entry with header [734bf21190b56e1ed4c8d7093c340df1fc6266bd80ed60ebc0ae0f4e9343c3a4], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 420000 transcripts[2017-03-14 12:10:56.697] [jointLog] [warning] Entry ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129:1871,Load,Loading,1871,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129,1,['Load'],['Loading']
Performance,"t/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:1501,Load,Loading,1501,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"ta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog] [info] Loading Suffix Array ; [2017-03-15 12:19:05.982] [stderrLog] [info] Loading Transcript Info ; Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34.791] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2017-03-14 12:10:36.701] [jointLog] [warning] Entry with header [734bf21190b56e1ed4c8d7093c340df1fc6266bd80ed60ebc0ae0f4e9343c3a4], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 420000 transcripts[2017-03-14 12:10:56.697] [jointLog] [warning] Entry with header [0c9d699aa70741734115dadd8175a44a013ad4122a3af7952e3b38e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129:1936,Load,Loading,1936,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129,1,['Load'],['Loading']
Performance,"tal Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-29 16:05:46.678] [jointLog] [info] Mapping rate = 20.1566%. [2019-01-29 16:05:46.678] [jointLog] [info] finished quantifyLibrary(); [2019-01-29 16:05:51.316] [alevinLog] [info] Starting optimizer. **Analyzed 4000 cells (100% of all).**; [2019-01-29 16:06:27.447] [alevinLog] [info] Total 20167967.00 UMI after deduplicating.; [2019-01-29 16:06:27.475] [alevinLog] [info] Clearing EqMap; Might tak",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:1900,load,loading,1900,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['load'],['loading']
Performance,"ted]; [Thread 0x7ff8f725e700 (LWP 27927) exited]. Program received signal SIGABRT, Aborted.; [Switching to Thread 0x7ffcf97e7700 (LWP 27870)]; 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:4541,optimiz,optimized,4541,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['optimiz'],['optimized']
Performance,"th Barcode Processing; Moving to Quantify. [2021-09-20 22:30:13.044] [alevinLog] [info] parsing read library format; [2021-09-20 22:33:09.346] [alevinLog] [info] Starting optimizer. [2021-09-20 22:33:09.516] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.516] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 46357.00 UMI after deduplicating.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 2930 BiDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 3804 UniDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [warning] Skipped 21 barcodes due to No mapped read; [2021-09-20 22:33:09.579] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-09-20 22:33:09.590] [alevinLog] [warning] Num Low confidence barcodes too less 186 < 200.Can't performing whitelisting; Skipping; [2021-09-20 22:33:09.591] [alevinLog] [info] Finished optimizer. ```; Then I tried setting `--keepCBFraction 1`. This does decrease the total number of reads being thrown away. However, mapping percentage is still low as compared to what I was getting from CellRanger (27%). I thought that since Alevin takes into consideration the multi mapping reads, the mapping percentage will likely increase because when we ran STAR on this data we found a lot of multi mapping reads. ```bash; nohup ./salmon alevin -l ISR -1 S1_L003_R1_001.fastq.gz -2 S1_L003_R2_001.fastq.gz --chromiumV3 -i ~/salmon_selective/salmon_index/ -p 20 -o ~/salmon_selective/9NT_keepCBfraction --keepCBFraction 1 --tgMap ~/salmon_selective/txgene_p3d7.txt &. [2021-09-21 00:11:13.532] [alevinLog] [info] Total 1.97665% reads will be thrown away because of noisy Cellular barcodes.; [2021-09-21 00:11:17.977] [alevinLog] [info] Done populating Z matrix; [2021-09-21 00:11:17.984] [alevinLog] [info] Total 21839 CB got sequence corrected; [2021-09-21 00:11:17.985] [alevinLog] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/706:4797,optimiz,optimizer,4797,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/706,1,['optimiz'],['optimizer']
Performance,"the fastq files (R1 and R2) were generated reservely from the bam files. I tried both Hg38 and Hg19 for this dataset (only bam files available to me, which were aligned by Hg19 genome), and I got similarly low mapping rate. . The salmon log is like this:; ```; [2024-01-27 01:09:31.030] [jointLog] [info] setting maxHashResizeThreads to 20; [2024-01-27 01:09:31.030] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-01-27 01:09:31.030] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-01-27 01:09:31.030] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-01-27 01:09:31.030] [jointLog] [info] parsing read library format; [2024-01-27 01:09:31.030] [jointLog] [info] There is 1 library.; [2024-01-27 01:09:31.032] [jointLog] [info] Loading pufferfish index; [2024-01-27 01:09:31.033] [jointLog] [info] Loading dense pufferfish index.; [2024-01-27 01:09:33.435] [jointLog] [info] done; [2024-01-27 01:09:33.508] [jointLog] [info] Index contained 252,048 targets; [2024-01-27 01:09:36.263] [jointLog] [info] Number of decoys : 0; [2024-01-27 01:09:41.237] [jointLog] [info] Automatically detected most likely library type as IU. [2024-01-27 01:10:28.189] [fileLog] [info] ; At end of round 0; ==================; Observed 3600210 total fragments (3600210 in most recent round). [2024-01-27 01:10:28.188] [jointLog] [info] Computed 179,584 rich equivalence classes for further processing; [2024-01-27 01:10:28.188] [jointLog] [info] Counted 446,871 total reads in the equivalence classes ; [2024-01-27 01:10:28.202] [jointLog] [warning] 0.197488% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2024-01-27 01:10:28.202] [jointLog] [info] Number of mappings discarded because o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/908:1110,Load,Loading,1110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908,1,['Load'],['Loading']
Performance,"the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [info] Index contained 58,086 targets; [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-28 21:40:30.446] [jointLog] [info] Mapping rate = 37.2969%. [2019-01-28 21:40:30.446] [jointLog] [info] finished quantifyLibrary(). cat alevin/alevin.log; [2019-01-28 21:02:08.496] [alevinLog] [info] Processing barcodes files (if Present). [2019-01-28 21:07:56.106] [alevinLog] [info] Done barcode density calculation.; [2019-01-28 21:07:56.106] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-28 21:07:57.808] [alevinLog] [info] Done importing ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:6195,Load,Loading,6195,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['Load'],['Loading']
Performance,"till getting the same similar mapping rate and the parameters at quant.sf though the values differ a bit from each Salmon version. **To Reproduce**; ### Steps and data to reproduce the behavior: for version 0.8. **First I took the genome fasta file and the gff3 file and made a transcriptome fasta file using Salmon:**; module load Cufflinks/2.2.1; gffread all.gff3 -g all.chrs.fasta -w MSU7_transcript.fasta. **I then indexed the transcript fasta file.**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. salmon index -t ~/data/genome/MSU7_transcript.fasta -i ~/data/genome/MSU7_transcript.index --type quasi -k 31. **I then run transcript abundance estimate pipeline for the raw-reads and the trimmed reads as follows:**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_old/${line} --seqBias --gcBias. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias. **Steps and data to reproduce the behavior: for version 0.12**; module load Cufflinks/2.2.1; gffread MSU7_all.gff3 -g all.chrs.fasta -w MSU7_newtran",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:1800,load,load,1800,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['load'],['load']
Performance,"tion while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 0 | max rel dif",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:1733,Load,Loading,1733,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,1,['Load'],['Loading']
Performance,"to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further processing; [2019-06-23 18:14:43.418] [jointLog] [info] Counted 5,043,781 total reads in the equivalence classes ; [2019-06-23 18:14:43.419] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-23 18:14:43.419] [jointLog] [warning] Found 494 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-06-23 18:14:43.419] [jointLog] [info] Mapping rate = 4.69856%. [2019-06-23 18:14:43.419] [jointLog] [info] finished quantifyLibrary(); [2019-06-23 18:14:43.838] [alevinLog] [info] Starting optimizer. Analyzed 39 cells (10% of all).; Analyzed 40 cells (10% of all).; Analyzed 41 cells (11% of all).; Analyzed 42 cells (11% of all).; Analyzed 43 cells (11% of all).; ...; Analyzed 154 cells (40% of all).; Analyzed 155 cells (40% of all).; Analyzed 156 cells (41% of all).; Analyzed 157 cells (41% of all).; ```. It seems that after the analysis of some cell the analysis stops. I have 12 different samples and each of them fails on the same step; even some of them fail just when starting the analysis of the cells. I have done a random subset of 35M reads from one sample and the analysis went fine, but when scaling to ~100M (this case) it also broke. I though that maybe the transcript-to-gene file was wrong, but I guess is not because is the one I used for the previous analysis, and also the one for the 35M-read file and it went right.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:6752,optimiz,optimizer,6752,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['optimiz'],['optimizer']
Performance,"torial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. **Desktop (please complete the following information):**. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. **Additional context**; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are prec",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/317:2081,Load,Loading,2081,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317,1,['Load'],['Loading']
Performance,tput ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further processin; g; [2016-12-13 12:46:51.776] [jointLog] [info] Counted 16265961 total reads in the equivalence classes . [2016-12-13 12:46:51.786] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 12:46:51.786] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 12:46:51.786] [jointLog] [info] Starting optimizer; [2016-12-13 12:46:51.867] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 12:46:51.877] [jointLog] [info] iteration = 0 | max rel diff. = 299.948; [2016-12-13 12:46:51.959] [,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111:2083,load,loading,2083,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111,1,['load'],['loading']
Performance,"tq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --ra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:4024,Load,Loading,4024,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['Load'],['Loading']
Performance,"undary at 22 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Learned InvCov: 1044.2 normfactor: 295.235; [2018-07-26 11:25:31.135] [alevinLog] [info] Total 222(has 200 low confidence) barcodes; [2018-07-26 11:25:31.440] [alevinLog] [info] Done True Barcode Sampling; [2018-07-26 11:25:31.789] [alevinLog] [info] Done populating Z matrix; [2018-07-26 11:25:31.793] [alevinLog] [info] Done indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, eventually outputting the following after processing the reads:. ```; [2018-07-24 10:56:20.712] [jointLog] [info] Computed 9968 rich equivalenc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/258:2890,Load,Loading,2890,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258,1,['Load'],['Loading']
Performance,"upc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_status cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:5120,optimiz,optimized,5120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,4,['optimiz'],['optimized']
Performance,"urcations time: 2; True marks count: 20234145; Edges construction time: 59; --------------------------------------------------------------------------------; Distinct junctions = 5239944. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 139; Max Junction ID: 12729038; seen.size():101832313 kmerInfo.size():12729039; approximateContigTotalLength: 1607258836; counters for complex kmers:; (prec>1 & succ>1)=133010 | (succ>1 & isStart)=7442 | (prec>1 & isEnd)=7516 | (isStart & isEnd)=2442; contig count: 11353512 element count: 2210067304 complex nodes: 150410; # of ones in rank vector: 11353511; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory illerney.index; size = 2210067304; -----------------------------------------; | Loading contigs | Time = 451.61 ms; -----------------------------------------; size = 2210067304; -----------------------------------------; | Loading contig boundaries | Time = 180.73 ms; -----------------------------------------; Number of ones: 11353511; Number of ones per inventory item: 512; Inventory entries filled: 22175; 11353511; [2023-03-15 20:35:13.921] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2023-03-15 20:35:13.997] [puff::index::jointLog] [info] contig count for validation: 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of Contigs : 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of numerical Contigs : 11,353,511; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] Total # of contig vec entries: 16,343,267; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] bits per offset entry 24; [2023-03-15 20:35:22.331] [puff::index::jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/837:3323,Load,Loading,3323,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837,1,['Load'],['Loading']
Performance,"ut how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. Desktop (please complete the following information):. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. Additional context; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318:2022,Load,Loading,2022,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318,1,['Load'],['Loading']
Performance,"vCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished quantifyLibrary(); [2018-11-29 22:41:01.682] [alevinLog] [info] Star",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324:2330,Load,Loading,2330,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324,1,['Load'],['Loading']
Performance,vinLog] [info] Done indexing Barcodes; [2021-04-09 12:16:37.892] [alevinLog] [info] Total Unique barcodes found: 822; [2021-04-09 12:16:37.892] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:4653,Load,Loading,4653,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['Load'],['Loading']
Performance,"vinLog] [warning] Gauss Prediction 11502 Too far from knee prediction skipping it; [2018-11-29 22:28:16.264] [alevinLog] [info] Learned InvCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324:2190,Load,Loading,2190,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324,1,['Load'],['Loading']
Performance,"wn away because of noisy Cellular barcodes.; [2019-06-04 15:58:27.594] [alevinLog] [info] Done populating Z matrix; [2019-06-04 15:58:27.594] [alevinLog] [warning] 0 Whitelisted Barcodes with 0 frequency; [2019-06-04 15:58:27.594] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [info] Total Unique barcodes found: 5; [2019-06-04 15:58:27.594] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 15:58:27.617] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 15:58:27.617] [alevinLog] [info] parsing read library format; [2019-06-04 15:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragments; hits: 0, hits per frag: 0. [2019-06-04 15:58:42.486] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2019-06-04 15:58:42.487] [jointLog] [info] Counted 0 total reads in the equ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:2463,Load,Loading,2463,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,1,['Load'],['Loading']
Performance,"x5YFP0_B07_R/index -p 6 -o /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/bcbiotx/tmpTest2/quant -1 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R1_Flox5YFP0_B07_R.trimmed.fastq.gz) -2 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mapp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:1356,Load,Loading,1356,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,1,['Load'],['Loading']
Performance,xReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843[A. [32mprocessed[31m 2000001 [32mfragments[0m; hits: 8846970; hits per frag: 4.55737[A. [32mprocessed[31m 2500021 [32mfragments[0m; hits: 11062734; hits per frag: 4.49592[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 13274990; hits per frag: 4.48667[A. [32mprocessed[31m 3500002 [32mfragments[0m; hits: 15430043; hits per frag: 4.48414[A. [32mprocessed[31m 4000004 [32mfragments[0m; hits: 17638270; hits per frag: 4.48376[A. [32mprocessed[31m 4500000 [32mfragments[0m; hits: 19856371; ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:24582,load,loading,24582,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['load'],['loading']
Performance,"ype five_prime_UTR; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	three_prime_utr	207479	207903	.	+	.	ID ""Bany_03723-RA:three_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype three_prime_UTR; transcript_id ""Bany_03723-RA"" ; ```. The log report I got:; ```; [2020-06-03 23:42:18.303] [jointLog] [info] setting maxHashResizeThreads to 36; [2020-06-03 23:42:18.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-03 23:42:18.303] [jointLog] [info] parsing read library format; [2020-06-03 23:42:18.303] [jointLog] [info] There is 1 library.; [2020-06-03 23:42:18.445] [jointLog] [info] Loading pufferfish index; [2020-06-03 23:42:18.446] [jointLog] [info] Loading dense pufferfish index.; [2020-06-03 23:42:18.906] [jointLog] [info] done; [2020-06-03 23:42:18.907] [jointLog] [info] Index contained 29,658 targets; [2020-06-03 23:42:18.922] [jointLog] [info] Number of decoys : 0; [2020-06-03 23:47:07.075] [jointLog] [info] Computed 96,808 rich equivalence classes for further processing; [2020-06-03 23:47:07.075] [jointLog] [info] Counted 22,215,758 total reads in the equivalence classes ; [2020-06-03 23:47:07.131] [jointLog] [warning] 0.00138398% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 1. [2020-06-03 23:47:07.131] [jointLog] [info] Number of mappings discarded because of alignment score : 50,180,647; [2020-06-03 23:47:07.131] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 5,461,169; [2020-06-03 23:47:07.131] [jo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/530:3963,Load,Loading,3963,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530,1,['Load'],['Loading']
Performance,"z, Trim/1-2-intestines-LDC4673.filtered.R2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC4673/lib_format_counts.json for details; ```. However，when I try old version (0.9.1) or latest version (1.4.0), I got a normal mapping rate (77.1074%):. ```; [2021-04-20 10:08:58.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-20 10:08:58.048] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-20 10:08:58.048] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-20 10:08:58.048] [jointLog] [info] parsing read library format; [2021-04-20 10:08:58.048] [jointLog] [info] There is 1 library.; [2021-04-20 10:08:58.145] [jointLog] [info] Loading pufferfish index; [2021-04-20 10:08:58.146] [jointLog] [info] Loading dense pufferfish index.; [2021-04-20 10:09:05.198] [jointLog] [info] done; [2021-04-20 10:09:05.198] [jointLog] [info] Index contained 77,653 targets; [2021-04-20 10:09:05.266] [jointLog] [info] Number of decoys : 0; [2021-04-20 10:09:05.902] [jointLog] [info] Automatically detected most likely library type as IU. [2021-04-20 10:11:39.181] [fileLog] [info]; At end of round 0. Observed 25525591 total fragments (25525591 in most recent round). [2021-04-20 10:11:39.181] [jointLog] [info] Computed 111,080 rich equivalence classes for further processing; [2021-04-20 10:11:39.181] [jointLog] [info] Counted 19,682,132 total reads in the equivalence classes; [2021-04-20 10:11:39.190] [jointLog] [warning] 0.00192356% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-20 10:11:39.190] [jointLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:4902,Load,Loading,4902,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['Load'],['Loading']
Performance,"{ /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:1579,Load,Loading,1579,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"{ salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading refe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:2993,Load,Loading,2993,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['Load'],['Loading']
Performance,}; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843[A. [32mprocessed[31m 2000001 [32mfragments[0m; hits: 8846970; hits per frag: 4.55737[A. [32mprocessed[31m 2500021 [32mfragment,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:24179,Load,Loading,24179,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['Load'],['Loading']
Performance,"}; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the follo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:3077,Load,Loading,3077,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['Load'],['Loading']
Performance,"}; \#\#\# [ mates2 ] => { R2.fastq.gz }; \#\#\# [ posBias ] => { }; \#\#\# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.84% zero probabil",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:1375,Load,Loading,1375,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,1,['Load'],['Loading']
Safety," (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:1127,recover,recoverOrphans,1127,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['recover'],['recoverOrphans']
Safety," **Screenshots** ; ### Default setting ; `salmon alevin -l ISR -1 ../clean/sample_S1_L001_R1_001.fastq -2 ../clean/sample_S1_L001_R2_001.fastq --chromiumV3 -i ../../dna/00.ref_genome/sample/salmon_index_allmRNA -p 40 -o test_alevin_allmRNA --tgMap ../../dna/00.ref_genome/sample/alltxp2gene.tsv`. > [2021-01-25 16:22:09.565] [alevinLog] [info] Found 43030 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); [2021-01-25 16:22:09.615] [alevinLog] [info] Filled with 43030 txp to gene entries; [2021-01-25 16:22:09.620] [alevinLog] [info] Found all transcripts to gene mappings; [2021-01-25 16:22:09.631] [alevinLog] [info] Processing barcodes files (if Present); [2021-01-25 16:26:35.067] [alevinLog] [info] Done barcode density calculation.; [2021-01-25 16:26:35.067] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-25 16:26:42.979] [alevinLog] [info] Knee found left boundary at 21; [2021-01-25 16:27:05.707] [alevinLog] [warning] Gauss Prediction 4969 Too far from knee prediction skipping it; [2021-01-25 16:27:05.707] [alevinLog] [info] Learned InvCov: 556.394 normfactor: 9159.58; [2021-01-25 16:27:05.707] [alevinLog] [info] Total 222(has 201 low confidence) barcodes; [2021-01-25 16:27:06.573] [alevinLog] [info] Done True Barcode Sampling; [2021-01-25 16:27:07.383] [alevinLog] [warning] Total **96.7029% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-25 16:27:07.412] [alevinLog] [info] Done populating Z matrix; [2021-01-25 16:27:07.414] [alevinLog] [info] Total 3667 CB got sequence corrected; [2021-01-25 16:27:07.414] [alevinLog] [info] Done indexing Barcodes; [2021-01-25 16:27:07.414] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-25 16:27:07.414] [alevinLog] [info] Used Barcodes except Whitelist: 3667; [2021-01-25 16:27:07.498] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-25 16:27:07.498] [alevinLog] [info] parsing read library format; [2021-01-25 16:30:54.542]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:3272,Predict,Prediction,3272,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,2,"['Predict', 'predict']","['Prediction', 'prediction']"
Safety," 0.0984302; [2016-01-02 00:08:58.048] [jointLog] [info] iteration = 300 | max rel diff. = 0.0774471; [2016-01-02 00:08:58.265] [jointLog] [info] iteration = 400 | max rel diff. = 0.0866256; [2016-01-02 00:08:58.472] [jointLog] [info] iteration 500, recomputing effective lengths; [2016-01-02 00:09:00.486] [jointLog] [info] iteration = 500 | max rel diff. = 0.0216284; [2016-01-02 00:09:00.696] [jointLog] [info] iteration = 600 | max rel diff. = 0.0269734; [2016-01-02 00:09:00.905] [jointLog] [info] iteration = 700 | max rel diff. = 0.0166003; [2016-01-02 00:09:01.113] [jointLog] [info] iteration = 800 | max rel diff. = 0.0136659; [2016-01-02 00:09:01.334] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114614; [2016-01-02 00:09:01.542] [jointLog] [info] iteration 1000, recomputing effective lengths; [2016-01-02 00:09:03.495] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0102234; [2016-01-02 00:09:03.716] [jointLog] [info] iteration = 1100 | max rel diff. = 0.0202324; [2016-01-02 00:09:03.929] [jointLog] [info] iteration = 1200 | max rel diff. = 0.010957; [2016-01-02 00:09:03.946] [jointLog] [info] iteration = 1209 | max rel diff. = 0.00996627; [2016-01-02 00:09:03.952] [jointLog] [info] Finished optimizer; [2016-01-02 00:09:03.952] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 00:09:04.141] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: /tmp/ERP009633_cell20_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/34:2833,detect,detection-comparison,2833,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34,2,['detect'],['detection-comparison']
Safety," 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54:46.141] [jointLog] [info] Counted 8925446 total reads in the equivalence classes ; [2023-03-07 06:54:46.282] [jointLog] [warning] 0.0015986% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-07 06:54:46.282] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 2762; [2023-03-07 06:54:46.290] [jointLog] [info] Mapping rate = 22.0189%. [2023-03-07 06:54:46.290] [jointLog] [info] finished quantifyLibrary(); [2023-03-07 06:54:46.290] [jointLog] [info] Starting optimizer; [2023-03-07 06:54:46.960] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:2678,detect,detected,2678,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['detect'],['detected']
Safety," 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 41232]; [New Thread 41236]; [New Thread 41235]; [New Thread 41234]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x0000003612832625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.41232"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. The SGE information shows that it basically reached 10.7 GB of RAM:. ```bash; $ qacct -j 9987275 -t 3; ==============================================================; qname shared.q; hostname compute-051.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test.gsk_phaseII; jobnumber 9987275; taskid 3; account sge; priority 0; qsub_time Wed Mar 8 11:37:17 2017; start_time Wed Mar 8 11:37:31 2017; end_time Wed Mar 8 11:37:36 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 5; ru_utime 0.368; ru_stime 3.680; ru_maxrss 537668; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 21951; ru_majflt 282; ru_nswap 0; ru_inblock 56; ru_oublock 1066296; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:25388,Abort,Aborted,25388,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['Abort'],['Aborted']
Safety," 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [Ne",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:1248,safe,safe,1248,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['safe'],['safe']
Safety," annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.org/packages/salmon) because conda triggers another bug.; I suspect that this is the cause of the bug. I tried to clean up my dependencies/packages but could not fix the bug. . Thank you for this great program! Cheers!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/965:1693,Abort,Aborted,1693,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965,1,['Abort'],['Aborted']
Safety," mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; `Linux 3.10.0-1160.6.1.el7.x86_64 #1 SMP Tue Nov 17 13:59:11 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`; LSB Version: :core-4.1-amd64:core-4.1-noarch ; Distributor ID: CentOS ; Description: CentOS Linux release 7.9.2009 (Core) ; Release: 7.9.2009 ; Codename: Core. **Additional context**; This is a wonderful feature, and makes the need for downstream analysis with `tximoprt` redundant. PLEASE HELP :); Attaching `head` of `quant.sf`, `quant.gene.sf`, `transcript_to_id_mm10` files. Identical transcript ID can be easily seen in both files.; THANK YOU; [transcript_to_id_mm10.head.txt](https://github.com/COMBINE-lab/salmon/files/5739701/transcript_to_id_mm10.head.txt); [quant.genes.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739703/quant.genes.head.sf.txt); [quant.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739704/quant.head.sf.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/607:2545,redund,redundant,2545,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607,1,['redund'],['redundant']
Safety," selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:2600,Detect,Detecting,2600,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['Detect'],['Detecting']
Safety," tool, I get the following error:. `[puff::index::jointLog] [critical] Observed a non-decoy sequence [LF1.1] after having already observed a decoy. However, it is required that any decoy target records appear, consecutively, at the end of the input fasta file. Please re-format your input file so that all decoy records appear contiguously at the end of the file, after all valid (non-decoy) records`. The LF1.1 is a transcript present in Ensembl's GTF, and it is therefore also present in the transcriptome FASTA that I generate with RSEM Prepare Reference. ; I am not sure if these ERCC contigs that I am adding are causing troubles, but these are essentially one transcript per one gene per one contig type of additions, i.e.; `ERCC-00002	ERCC	exon	1	1061	0.000000	+	.	gene_id ""ERCC-00002""; transcript_id ""ERCC-00002"";`. And since RSEM Prepare Reference sorts transcripts alphabetically in the transcriptome FASTA file, the LF1.1 came after the ERCC contigs, which is why I'm wondering whether the Salmon algorithm for detecting decoys must have had a say in this :). In any case, awesome job with the new Salmon versions, and thank you in advance for any help!. EDIT: I posted more details, but from a wrong account, so I'm adding this in the original comment as wel:; I tried removing the ERCC entries from the decoys.txt file, but I still get; `[puff::index::jointLog] [critical] Observed a non-decoy sequence [ERCC-00002] after having already observed a decoy. However, it is required that any decoy target records appear, consecutively, at the end of the input fasta file. Please re-format your input file so that all decoy records appear contiguously at the end of the file, after all valid (non-decoy) records; `; Which means that in my ERCC entries, the transcript ID and the contig name should probably differ, instead of both being named ERCC-00002, for example. ; Hm, I'll see what I can do now. If you guys have any comments still, thank you, but I believe I know what must be done now",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/481:3027,detect,detecting,3027,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/481,1,['detect'],['detecting']
Safety," upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-060/job_scripts/9987283: line 31: 1629 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gd",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:29716,Abort,Aborted,29716,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['Abort'],['Aborted']
Safety," }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { salmonquant }; Logs will be written to salmonquant/logs; [2023-01-29 16:02:11.267] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:02:11.308] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equiva",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:2622,detect,detected,2622,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['detect'],['detected']
Safety,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon (bulk mode). **Describe the bug**. For one of our 41 samples, salmon fails (quits, without any substantial output) when using the orphan recovery option (where Salmon attempts to try harder to pair up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:230,recover,recovery,230,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,2,['recover'],['recovery']
Safety,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Affects salmon (bulk mode) for sure. I don't know alevin. **Describe the bug**; totalCount_ is not initialized in Transcript constructors. In the vast majority of the cases it doesn't matter because the memory is initialized to 0 anyway, but for a very small fraction of the transcripts the totalCount gest initialized to some random value, which can lead to missed invocations of projectToPolytope in normalizeAlphas and writeAbundances. **To Reproduce**. Systematic. Effect might be more difficult to detect as you'd need a truth set. Dumping a trace of the totalCount_ might be easier. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.11.3 ans 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. N/A. compiled from scratch. * Which reference (e.g. transcriptome) was used?. * Which read files were used?. BAM input, generated by STAR, from proprietary data produced with Illumina instruments. * Which which program options were used?. --no-version-check --threads 1 --dumpEq --useEM --noErrorModel --noRichEqClasses --gcBias -l isr. **Expected behavior**. Accurate values for totalCount for all transcripts. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu 18.10, CentOs 7.5.1804. **Additional context**; Add any other context about the problem here. Attached patch for 0.13.1:. [Transcript.hpp.patch-0.13.1.txt](https://github.com/COMBINE-lab/salmon/files/3044728/Transcript.hpp.patch-0.13.1.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/355:589,detect,detect,589,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/355,1,['detect'],['detect']
Safety,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is related to salmon when used after umi tools deduplication. **Describe the bug**; Once deduplicated the bams with umi_tools (and previously sorted by coordinates) salmon gives the following warning: WARNING: Detected suspicious pair ---; The names are different:; read1 : XXXXXXXXX-YYYY:YYYY; read2 : XXXXXXXXX-ZZZZ:ZZZZ. **To Reproduce**; The used code is the following:. ""salmon_version"": ""1.10.1"",; ""targets"": ""../index/hg38/salmon/gencode.v45.transcripts.fa"",; ""libType"": ""A"",; ""seqBias"": [],; ""gcBias"": [],; ""posBias"": [],; ""threads"": ""16"",; ""dumpEq"": [],; ""numBootstraps"": ""50"",; ""alignments"": ""/media/storage/work/iiglesia/rnaseq/RESULTS/BAM_STAR_dedup/17932763_S28_Aligned_dedup.sorted.bam"",; ""output"": ""./aligned_salmon/17932763_S28"",; ""geneMap"": ""../index/hg38/salmon/mart_export.txt"",; ""gencode"": [],. When I have treid to use the same sample without deduplication and sorting salmon works good. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.v45.transcripts.fa; * Which read files were used? BAM files; * Which which program options were used? it can be seen above. **What I expect**; I want to know how could I use salmon after umi_tools or to account for UMI deduplication. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/930:299,Detect,Detected,299,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/930,1,['Detect'],['Detected']
Safety,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No; **Describe the bug**; Running salmon 0.11.3, quasi mode, with 192M of ram.; Salmon quasi mode aborted with following message:; processed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/304:184,abort,aborted,184,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304,2,"['abort', 'detect']","['aborted', 'detected']"
Safety,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/587:1100,detect,detected,1100,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587,1,['detect'],['detected']
Safety,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:223,recover,recoverOrphans,223,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,2,['recover'],['recoverOrphans']
Safety,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk); **Describe the bug**; I have a Illumina TruSeq Stranded Ribozero library and when I use salmon with -l A, it detects the libraries as either ISF or IU (for different indexes). The mapping rate is about 50-75% per index. However, as I understand it, Illumina TruSeq stranded libraries are supposed to be ISR? When I use -l ISR, i get much lower mapping rates so I'm a bit confused. Am I wrong about the library type for TruSeq Stranded, or is there a mistake in the Salmon docs? . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Latest (0.14.1); * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda, using a Snakemake workflow (ARMOR, from Mark Robinson's lab); * Which reference (e.g. transcriptome) was used?; Arabidopsis thaliana, from ensembl; * Which read files were used?; * Which which program options were used?; salmon (mapping-based) v0.14.1; [ program ] => salmon; [ command ] => quant; [ index ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/reference/SalmonIndex/Arabidopsis_thaliana }; [ libType ] => { ISR }; [ mates1 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R1.fastq.gz }; [ mates2 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R2.fastq.gz }; [ output ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/output/salmon/12-0-rve-30-3 }; [ numBootstraps ] => { 100 }; [ seqBias ] => { }; [ gcBias ] => { }; [ validateMappings ] => { }; [ ] => { o--fldMean }; [ ] => { 250 }; [ fldSD ] => { 25 }; [ threads ] => { 7 }. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version ; **Additional context**; Add any o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/393:210,detect,detects,210,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/393,1,['detect'],['detects']
Safety,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The issue existed in both bulk and single-cell mode. **Describe the bug**; When using Salmon to quantify non-redundant (NR) genes in metagenomic datasets, the generated output is missing a summary for nucleotide IDs that correspond to multiple sequences. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Merging quantifications with Salmon:; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; 2. Searching for a specific gene ID in the quantification file:; grep ""k141_1346622_1"" temp/salmon/L1EHI0900465--Q_S1_N6.quant/quant.sf; # Multiple lines are found for this gene ID; 3. Searching for the same gene ID in the resulting TPM file:; grep ""k141_1346622_1"" result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; #No results are found, which is unexpected. <img width=""1166"" alt=""截屏2024-01-30 21 56 23"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/b77e5aa4-aadc-4a17-bdde-b998ce14d72c"">; <img width=""1056"" alt=""截屏2024-01-30 21 55 28"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/877cfa9b-0484-4937-87b2-e987679e09e3"">. Specifically, please provide at least the following information:. * Which version of salmon was used? salmon 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon -y; * Which reference (e.g. transcriptome) was used? metagenome data; * Which read files were used? L1EHI0900465--Q_S1_N6.quant/; * Which which program options were used?; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM. **Expected behavior**; A clear and concise description of what you expected to happen.; I hope to keep all the gene IDs and for those who contains more than one line, take average values for each gene ID. . **Screenshots**; If applicable, add screenshots or terminal output to he",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/910:195,redund,redundant,195,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/910,1,['redund'],['redundant']
Safety,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; We have 60 samples made from very low RNA inputs (cell captures) so the libraries were made with Ovation Solo RNAseq kit from Tecan. 150 PE. One of the sample finished fine (but mapping rate 21%) but our nextflow pipeline crashed on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/668:749,recover,recoverOrphans,749,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668,1,['recover'],['recoverOrphans']
Safety,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; I installed Salmon 1.5.2 from binaries, and load it via the module environment (alter or set shell variables such as `PATH` to make the installation visible). The problem is that Salmon overrides the link to the C math standard library. . ```; # without Salmon in my PATH; ldd /home/eboileau/.miniconda3/envs/scNapBar-dev/bin/python3 ; libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1d2bd45000). # with Salmon in my PATH (loaded via module load salmon/1.5.2); libm.so.6 => /biosw/salmon/1.5.2/lib/libm.so.6 (0x00007f1fa67c0000) ; ```. The latter seem to be incompatible with the Python installation, and results in. ```; import numpy; ImportError: /biosw/salmon/1.5.2/lib/libm.so.6: symbol __get_cpu_features version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; ```. I do not understand why this is happening, and the question is why Salmon has it's own copy of *libm.so.6*?; Is this library different? . **To Reproduce**; Load salmon/1.5.2 via module environment. I am able to run both my python script and Salmon after deleting Salmon's own copy of *libm.so.6*.; Is this expected to alter Salmon's results in any way?. **Expected behavior**; Salmon does not modify the link to *libm.so.6*. **Desktop (please complete the following information):**; - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux; - salmon 1.5.2; - Python 3.7.6; - conda 4.9.2; - Modules Release 4.2.2 (2019-02-17). **Questions**; - Why Salmon has it's own copy of *libm.so.6*? Is it safe to delete it, and is this expected to alter Salmon's results in any way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/710:1634,safe,safe,1634,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710,1,['safe'],['safe']
Safety,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I used the default parameters to run salmon on mouse sample. But I got the warning:. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file:`. **To Reproduce**; `""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 10869138,; ""num_assigned_fragments"": 10869138,; ""num_frags_with_concordant_consistent_mappings"": 10212463,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1088473,; ""strand_mapping_bias"": 0.5258466052704426,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4842274,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 5370189,; ""SF"": 593930,; ""SR"": 494543,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0`. Specifically, please provide at least the following information:. * Which version of salmon was used? ; ""salmon_version"": ""0.14.1"". * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda. * Which reference (e.g. transcriptome) was used?; gencode mouse VM22. * Which read files were used?. Downloaded from sra（Just ordinary Illumina reads). * Which which program options were used?. ```; salmon quant -i $mm10_whole_index -l A \; -1 $fastq1 \; -2 $fastq2 \; -p 20 --validateMappings -o $output_whole; ```. **Expected behavior**; Why Strand bias is very high?. **Desktop (please complete the following information):**; Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/422:202,Detect,Detected,202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/422,1,['Detect'],['Detected']
Safety,"**salmon (bulk mode)**. **Describe the bug**; During salmon quant call, there is a segmentation fault . **To Reproduce**; Steps and data to reproduce the behavior:; * I am hardly able to recreate it myself, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:839,recover,recoverOrphans,839,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['recover'],['recoverOrphans']
Safety,", hits per frag: 0.429399[A. [32mprocessed[31m 20,500,000 [32mfragments[0m; hits: 8,800,288, hits per frag: 0.429726[A. [32mprocessed[31m 21,000,001 [32mfragments[0m; hits: 9,016,478, hits per frag: 0.429653[A. [32mprocessed[31m 21,500,000 [32mfragments[0m; hits: 9,229,756, hits per frag: 0.429727[A. [32mprocessed[31m 22,000,000 [32mfragments[0m; hits: 9,449,005, hits per frag: 0.429716[A. [32mprocessed[31m 22,500,001 [32mfragments[0m; hits: 9,665,567, hits per frag: 0.429693[A. [32mprocessed[31m 23,000,000 [32mfragments[0m; hits: 9,886,728, hits per frag: 0.430177[A. [32mprocessed[31m 23,500,000 [32mfragments[0m; hits: 10,104,758, hits per frag: 0.43008[A. [32mprocessed[31m 24,000,000 [32mfragments[0m; hits: 10,317,472, hits per frag: 0.4299[A. [32mprocessed[31m 24,500,000 [32mfragments[0m; hits: 10,534,359, hits per frag: 0.430157[A. [32mprocessed[31m 25,000,000 [32mfragments[0m; hits: 10,748,602, hits per frag: 0.430214[A. [32mprocessed[31m 25,500,000 [32mfragments[0m; hits: 10,958,978, hits per frag: 0.429905[A. [32mprocessed[31m 26,000,000 [32mfragments[0m; hits: 11,179,020, hits per frag: 0.430235[A. [32mprocessed[31m 26,500,000 [32mfragments[0m; hits: 11,394,635, hits per frag: 0.430031[A. [32mprocessed[31m 27,000,001 [32mfragments[0m; hits: 11,609,653, hits per frag: 0.43023[A. [32mprocessed[31m 27,500,000 [32mfragments[0m; hits: 11,825,601, hits per frag: 0.430128; salmon.standard/sample.standard.sh: line 20: 13916 Segmentation fault (core dumped) ……/miniconda3/envs/salmon1/bin/salmon quant -i ……/share/references/gencode/salmon_index --libType A -1 $read1 -2 $read2 -p 16 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output $outdir. ``` . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] HPC; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:9779,recover,recoverOrphans,9779,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['recover'],['recoverOrphans']
Safety,"-----------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i references/salmon/*ucsc.rmsk.salmon*/ --libType A -1 SRR14506785_output_forward_paired.fq.gz -2 SRR14506785_output_reverse_paired.fq.gz -p 8 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output SRR14506785.salmon.rmsk.out --writeUnmappedNames; ```. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 5.15.0-76-generic. **Additional context**; This is a very recent issue, it *seems* to be resolved by version 1.10 but I have no reads into where the issue may be occuring, or why it is so inconsistent.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:4733,detect,detected,4733,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,2,"['detect', 'recover']","['detected', 'recoverOrphans']"
Safety,"-16 16:57:16.558] [jointLog] [info] Finished optimizer; [2021-04-16 16:57:16.558] [jointLog] [info] writing output. [2021-04-16 16:57:16.681] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-16 16:57:16.775] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-16 16:57:16.775] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-16 16:57:16.911] [jointLog] [info] Aggregating expressions to gene level; [2021-04-16 16:57:17.077] [jointLog] [info] done; [2021-04-16 16:57:17.088] [jointLog] [warning] NOTE: Read Lib [[ Trim/1-2-intestines-LDC4673.filtered.R1.fq.gz, Trim/1-2-intestines-LDC4673.filtered.R2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC4673/lib_format_counts.json for details; ```. However，when I try old version (0.9.1) or latest version (1.4.0), I got a normal mapping rate (77.1074%):. ```; [2021-04-20 10:08:58.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-20 10:08:58.048] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-20 10:08:58.048] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-20 10:08:58.048] [jointLog] [info] parsing read library format; [2021-04-20 10:08:58.048] [jointLog] [info] There is 1 library.; [2021-04-20 10:08:58.145] [jointLog] [info] Loading pufferfish index; [2021-04-20 10:08:58.146] [jointLog] [info] Loading dense pufferfish index.; [2021-04-20 10:09:05.198] [joi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:3968,Detect,Detected,3968,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['Detect'],['Detected']
Safety,"-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:1870,recover,recoverOrphans,1870,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['recover'],['recoverOrphans']
Safety,"./salmon index -t Mus_musculus.GRCm38.cdna.all.norm.fasta -i GRCm38.cdna.all_index --type quasi -l 31. Dear Salmon list,. I am using the Salmon 0.8.1 binary for Mac OS X, Sierra, 10.12.8. I am trying to set up an mm10; mouse index. I downlaod the mouse cDNAs from Ensembl, and normlized the ends with galaxy.; I am running evelything in lib in case there are path issues.; Here is my directory:. c2b2afmd2:lib friedman$ ls; Mus_musculus.GRCm38.cdna.all.fa	libtbbmalloc_proxy.dylib; libtbb.dylib			salmon; libtbbmalloc.dylib. Here is my attemot to build an index:. c2b2afmd2:lib friedman$ ./salmon index -t Mus_musculus.GRCm38.cdna.all.norm.fasta -i GRCm38.cdna.all_index --type quasi -l 31; dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Applications/Salmon-0.8.2_macOX_10.12/lib/./salmon; Reason: image not found; Abort trap: 6. I would greatly appreciate any help that you might be able ot give. Thanks and best wishes,; Rich; Richard A. Friedman, PhD; Associate Research Scientist,; Biomedical Informatics Shared Resource; Herbert Irving Comprehensive Cancer Center (HICCC); Lecturer,; Department of Biomedical Informatics (DBMI); Room 825; Irving Cancer Research Center ; Columbia University Herbert and Florence Irving Medical Center; 1130 St. Nicholas Ave; New York, NY 10032; (212)851-4765 (voice); raf4@cumc.columbia.edu. http://www.columbia.edu/~raf4/index.html. “Will there still be ""Classics Illustrated” by the time I have children? I cannot; imagine raising kids without ""Classics Illustrated” .” -Rose Friedman, age 20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/215:845,Abort,Abort,845,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215,1,['Abort'],['Abort']
Safety,".030] [jointLog] [info] setting maxHashResizeThreads to 20; [2024-01-27 01:09:31.030] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-01-27 01:09:31.030] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-01-27 01:09:31.030] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-01-27 01:09:31.030] [jointLog] [info] parsing read library format; [2024-01-27 01:09:31.030] [jointLog] [info] There is 1 library.; [2024-01-27 01:09:31.032] [jointLog] [info] Loading pufferfish index; [2024-01-27 01:09:31.033] [jointLog] [info] Loading dense pufferfish index.; [2024-01-27 01:09:33.435] [jointLog] [info] done; [2024-01-27 01:09:33.508] [jointLog] [info] Index contained 252,048 targets; [2024-01-27 01:09:36.263] [jointLog] [info] Number of decoys : 0; [2024-01-27 01:09:41.237] [jointLog] [info] Automatically detected most likely library type as IU. [2024-01-27 01:10:28.189] [fileLog] [info] ; At end of round 0; ==================; Observed 3600210 total fragments (3600210 in most recent round). [2024-01-27 01:10:28.188] [jointLog] [info] Computed 179,584 rich equivalence classes for further processing; [2024-01-27 01:10:28.188] [jointLog] [info] Counted 446,871 total reads in the equivalence classes ; [2024-01-27 01:10:28.202] [jointLog] [warning] 0.197488% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2024-01-27 01:10:28.202] [jointLog] [info] Number of mappings discarded because of alignment score : 18,226,670; [2024-01-27 01:10:28.202] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 762,980; [2024-01-27 01:10:28.202] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2024-01-27",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/908:1394,detect,detected,1394,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908,1,['detect'],['detected']
Safety,".806405; [2021-05-20 11:35:04.117] [jointLog] [info] iteration = 400 | max rel diff. = 0.143529; [2021-05-20 11:35:04.611] [jointLog] [info] iteration = 500 | max rel diff. = 0.131881; [2021-05-20 11:35:05.124] [jointLog] [info] iteration = 600 | max rel diff. = 1.67827; [2021-05-20 11:35:05.631] [jointLog] [info] iteration = 700 | max rel diff. = 0.0151842; [2021-05-20 11:35:06.145] [jointLog] [info] iteration = 800 | max rel diff. = 0.135721; [2021-05-20 11:35:06.657] [jointLog] [info] iteration = 900 | max rel diff. = 0.0942774; [2021-05-20 11:35:06.882] [jointLog] [info] iteration = 945 | max rel diff. = 0.00880347; [2021-05-20 11:35:06.894] [jointLog] [info] Finished optimizer; [2021-05-20 11:35:06.894] [jointLog] [info] writing output . [2021-05-20 11:35:06.972] [jointLog] [warning] NOTE: Read Lib [[ /upload/uploads/files/public/1/Mice_A_batch2_1.fq.gz, /upload/uploads/files/public/1/Mice_A_batch2_2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /results/RNA-Seq/Mice_A_batch2/salmon_out/lib_format_counts.json for details. ```. I also run `STAR` alignment and `htseq-count` on the same sample to quantify expression at the gene level, where the alignment rate is high and quantification is ok:. ```; RNA Alignment Statistics for Mice_A_batch2. Started job on |	May 20 06:25:05; Started mapping on |	May 20 06:25:42; Finished on |	May 20 10:46:09; Mapping speed, Million of reads per hour |	37.44. Number of input reads |	162499486; Average input read length |	300; UNIQUE READS:; Uniquely mapped reads number |	141917701; Uniquely mapped reads % |	87.33%; Average mapped length |	298.28; Number of splices: Total |	128444547; Number of splices: Annotated (sjdb) |	127401836; Number of splices: GT/AG |	127633760; Number of splices: GC/AG |	629527; Number of splices: AT/AC |	35900; Number of splices: Non-canonical |	145360; Mismatch rate per base, % |	0.28%; Deletion rate per base |	0.01%; Deletion average length |	2.29; Insertion ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:7071,Detect,Detected,7071,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['Detect'],['Detected']
Safety,"022-05-13 03:02:19.507] [jointLog] [info] iteration = 400 | max rel diff. = 5.00889; [2022-05-13 03:02:20.812] [jointLog] [info] iteration = 500 | max rel diff. = 10.9087; [2022-05-13 03:02:22.073] [jointLog] [info] iteration = 600 | max rel diff. = 0.162723; [2022-05-13 03:02:23.316] [jointLog] [info] iteration = 700 | max rel diff. = 0.125884; [2022-05-13 03:02:24.647] [jointLog] [info] iteration = 800 | max rel diff. = 0.611449; [2022-05-13 03:02:26.020] [jointLog] [info] iteration = 900 | max rel diff. = 0.0687607; [2022-05-13 03:02:27.302] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.144642; [2022-05-13 03:02:28.620] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0139885; [2022-05-13 03:02:29.874] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.053712; [2022-05-13 03:02:31.161] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0312546; [2022-05-13 03:02:32.489] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.107944; [2022-05-13 03:02:32.656] [jointLog] [info] iteration = 1,414 | max rel diff. = 0.00665317; [2022-05-13 03:02:32.664] [jointLog] [info] Finished optimizer; [2022-05-13 03:02:32.665] [jointLog] [info] writing output . [2022-05-13 03:02:32.905] [jointLog] [warning] NOTE: Read Lib [[ /fastp_6BE_1.fq.gz, /fastp_6BE_2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: sample6BE.salmon/lib_format_counts.json for details. This is the lib_format_counts.json details . ""read_files"": ""[ /fastp_6BE_1.fq.gz, /fastp_6BE_2.fq.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 27069942,; ""num_assigned_fragments"": 27069942,; ""num_frags_with_concordant_consistent_mappings"": 25715904,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1666158,; ""strand_mapping_bias"": 0.0481568915485141,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1238398,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 24477506,; ""SF"": 981192,; ""SR"": 684966,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/775:3399,Detect,Detected,3399,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/775,1,['Detect'],['Detected']
Safety,"10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:4967,recover,recoverOrphans,4967,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['recover'],['recoverOrphans']
Safety,"14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quantitating the read1 file with; > salmon quant -i /ref/gencode.v43.transcripts/ -l ISR -r r1.fastq.gz -p 30 -o work/salmon_output. behaves as expected and prints this and proceeds. > [2023-08-17 22:21:17.619] [jointLog] [info] Computed 618403 rich equivalence classes for further processing; > [2023-08-17 22:21:17.619] [jointLog] [info] Counted 6085013 total reads in the equivalence classes; > [2023-08-17 22:21:17.632] [jointLog] [info] Number of mappings discarded because of alignment score : 166235099. I found a discussion about the initial implementation of splitseq here with [this](https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-985198050) comment from @rob-p. I copied the geometry parameters he mentioned for this command:. > salmon alevin -i /ref/gencode.v43.transcripts/ -l A -1 r2.fastq.gz -2 r1.fastq.gz -p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/867:1772,recover,recovering,1772,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867,1,['recover'],['recovering']
Safety,"21-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:2193,detect,detected,2193,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['detect'],['detected']
Safety,"4cfb0b230f58119448d1c82706f1c515f210cccaf4fdf7d"",; ""index_seq_hash512"": ""d683c5132cae8695500566a25eb95c0349427afe1664ac571160337850aa269b634ad444936bd6d35205597c4962636c8fadbcf6406ca409a159b65e5f53c59e"",; ""index_name_hash512"": ""e552bd7a70d98c20ff4cf07a83a5f25d2dafe4a78e3dff92348f3d566c9037ccde0de6d4040625ca065a7484dcb8d668c583822bf5138e1540f61685bc991290"",; ""index_decoy_seq_hash"": ""39d3837ea001def952e79d70003dbba0199cc859b32f26350abfa271a6741167"",; ""index_decoy_name_hash"": ""bd5cd185b9e3272a64108e64e2bc47bc0552046dba3ff53683edeafab750c9ab"",; ""num_bootstraps"": 10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings im",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:4412,recover,recoverOrphans,4412,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['recover'],['recoverOrphans']
Safety,"6-04 18:03:49.102] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 366,055; [2020-06-04 18:03:49.102] [jointLog] [info] Mapping rate = 56.3428%; ```. The mapping rates I got are ~50-65%...Here are some of the reasons for low mapping rates based on previous posts:. 1. rRNA contamination: In my case, rRNAs were removed during library construction, also I quantified rRNA contents in my trimmed reads, and it's very low (<5%).; 2. DNA contamination: This is possible, I got ~98% genome mapping rate using hisat2. But in fact, DNAs are removed in my RNA extraction process...and poly-T was used to select mRNAs during the library construction...; 3. Not using pre-mature transcripts so reads mapping to introns are discarded: I am not sure if this is a valid point since we usually quantify mature mRNAs, not pre-mature ones.; 4. Library type: my library was constructed in a stranded way. The program detected my libtype as ISR:; ```; {; ""read_files"": ""[ DS_1_HW_FM_1P.fq.gz, DS_1_HW_FM_2P.fq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 18651686,; ""num_assigned_fragments"": 18651686,; ""num_frags_with_concordant_consistent_mappings"": 17799536,; ""num_frags_with_inconsistent_or_orphan_mappings"": 864409,; ""strand_mapping_bias"": 0.0001987858838992702,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 3539,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17799536,; ""SF"": 419781,; ""SR"": 441089,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```; When I change the libtype to a broader category, such as IU, the mapping rates slightly increased from ~55% to 65%, also I got more counts in each transcript, but this introduced higher strand mapping bias (Appeared as a warning message). ; 5. many short reads: No... in my case, the majority of the reads are ~150bp. And I used k=31 (default).; 6. Read trimming: I trimmed the adaptors and low-quality bases from the ends. One thing I noticed in my FastQC report is that I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/533:1844,detect,detected,1844,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/533,1,['detect'],['detected']
Safety,"6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 75.428 ms; -----------------------------------------. [2021-09-20 16:22:03.730] [jointLog] [info] done; [2021-09-20 16:22:03.778] [jointLog] [info] Index contained 116,612 targets; [2021-09-20 16:22:03.892] [jointLog] [info] Number of decoys : 66; [2021-09-20 16:22:03.892] [jointLog] [info] First decoy index : 116,507 ; [2021-09-20 16:22:04.460] [jointLog] [info] Automatically detected most likely library type as U; processed 37,000,000 fragments; hits: 117,167,504; hits per frag: 3.16785. [2021-09-20 16:24:48.269] [jointLog] [info] Computed 309,226 rich equivalence classes for further processing; [2021-09-20 16:24:48.269] [jointLog] [info] Counted 34,252,402 total reads in the equivalence classes ; [2021-09-20 16:24:48.274] [jointLog] [info] Number of mappings discarded because of alignment score : 13,534,931; [2021-09-20 16:24:48.274] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 627,298; [2021-09-20 16:24:48.274] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 340,039; [2021-09-20 16:24:48.274] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0; [2021-09-20 16:24:48.274] [jointLog] [info] Mapping rate = 91.4927%. [2021-09-20 16:24:48.274] [jointLog] [info] finished quantifyLibrary(); [2021-09-20 16:24:48.279] [jointLog] [info] Starting opti",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:6197,detect,detected,6197,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['detect'],['detected']
Safety,"7922)]; [New Thread 0x7ffaf7262700 (LWP 27923)]; [New Thread 0x7ffa77261700 (LWP 27924)]; [New Thread 0x7ff9f7260700 (LWP 27925)]; [New Thread 0x7ff97725f700 (LWP 27926)]; [New Thread 0x7ff8f725e700 (LWP 27927)]; [New Thread 0x7ff87725d700 (LWP 27928)]; [New Thread 0x7ff7f725c700 (LWP 27929)]; [New Thread 0x7ff77725b700 (LWP 27930)]; [New Thread 0x7ff6f725a700 (LWP 27931)]; [New Thread 0x7ff677259700 (LWP 27932)]; [New Thread 0x7ff5f7258700 (LWP 27933)]; [Thread 0x7ffbf7264700 (LWP 27921) exited]; [Thread 0x7ffc77265700 (LWP 27920) exited]; [New Thread 0x7ff577257700 (LWP 27934)]; [New Thread 0x7ff4f7256700 (LWP 27935)]; [Thread 0x7ffb77263700 (LWP 27922) exited]; [Thread 0x7ffa77261700 (LWP 27924) exited]; [Thread 0x7ffaf7262700 (LWP 27923) exited]; [New Thread 0x7ff477255700 (LWP 27936)]; [Thread 0x7ff9f7260700 (LWP 27925) exited]; terminate called without an active exception; [Thread 0x7ff77725b700 (LWP 27930) exited]; [Thread 0x7ff8f725e700 (LWP 27927) exited]. Program received signal SIGABRT, Aborted.; [Switching to Thread 0x7ffcf97e7700 (LWP 27870)]; 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:3622,Abort,Aborted,3622,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['Abort'],['Aborted']
Safety,"8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 1629]; [New Thread 1707]; [New Thread 1708]; [New Thread 1709]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x00000037e2032625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.1629"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. and the SGE info:. ```bash; $ qacct -j 9987283 -t 2; ==============================================================; qname shared.q; hostname compute-060.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test2.gsk_phaseII; jobnumber 9987283; taskid 2; account sge; priority 0; qsub_time Wed Mar 8 11:53:12 2017; start_time Wed Mar 8 11:53:16 2017; end_time Wed Mar 8 11:53:40 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 24; ru_utime 0.302; ru_stime 21.395; ru_maxrss 533908; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 22035; ru_majflt 285; ru_nswap 0; ru_inblock 168; ru_oublock 1058880; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 1435; ru_nivcsw 107; cpu 21.697; mem 56.472; io 0.002; iow 0.000; maxvm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:31110,Abort,Aborted,31110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['Abort'],['Aborted']
Safety,"8.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-20 10:08:58.048] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-20 10:08:58.048] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-20 10:08:58.048] [jointLog] [info] parsing read library format; [2021-04-20 10:08:58.048] [jointLog] [info] There is 1 library.; [2021-04-20 10:08:58.145] [jointLog] [info] Loading pufferfish index; [2021-04-20 10:08:58.146] [jointLog] [info] Loading dense pufferfish index.; [2021-04-20 10:09:05.198] [jointLog] [info] done; [2021-04-20 10:09:05.198] [jointLog] [info] Index contained 77,653 targets; [2021-04-20 10:09:05.266] [jointLog] [info] Number of decoys : 0; [2021-04-20 10:09:05.902] [jointLog] [info] Automatically detected most likely library type as IU. [2021-04-20 10:11:39.181] [fileLog] [info]; At end of round 0. Observed 25525591 total fragments (25525591 in most recent round). [2021-04-20 10:11:39.181] [jointLog] [info] Computed 111,080 rich equivalence classes for further processing; [2021-04-20 10:11:39.181] [jointLog] [info] Counted 19,682,132 total reads in the equivalence classes; [2021-04-20 10:11:39.190] [jointLog] [warning] 0.00192356% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-20 10:11:39.190] [jointLog] [info] Number of mappings discarded because of alignment score : 17,018,803; [2021-04-20 10:11:39.190] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 1,750,387; [2021-04-20 10:11:39.190] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-04-20 10:11:39.190",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:5255,detect,detected,5255,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['detect'],['detected']
Safety,"; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 650 us; -----------------------------------------; [2021-05-20 10:53:56.156] [jointLog] [info] done; [2021-05-20 10:53:56.156] [jointLog] [info] Index contained 44,026 targets. [2021-05-20 10:53:58.080] [jointLog] [info] Number of decoys : 0; [2021-05-20 10:54:28.729] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-20 11:34:48.022] [jointLog] [info] Computed 145,552 rich equivalence classes for further processing; [2021-05-20 11:34:48.022] [jointLog] [info] Counted 10,027,482 total reads in the equivalence classes ; [2021-05-20 11:34:48.050] [jointLog] [info] Number of mappings discarded because of alignment score : 208,344,973; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 11,448,458; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 687,723; [2021-05-20 11:34:48.050] [jointLog] [info] Mapping rate = 6.17078%. [2021-05-20 11:34:48.050] [jointLog] [info] finished quantifyLibrary(); [2021-05-20 11:34:48.127] [jointLog] [info] Starting optimizer; [2021-05-20 11:34:48.220] [jo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:3552,detect,detected,3552,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['detect'],['detected']
Safety,"; [New Thread 0x7ff677259700 (LWP 27932)]; [New Thread 0x7ff5f7258700 (LWP 27933)]; [Thread 0x7ffbf7264700 (LWP 27921) exited]; [Thread 0x7ffc77265700 (LWP 27920) exited]; [New Thread 0x7ff577257700 (LWP 27934)]; [New Thread 0x7ff4f7256700 (LWP 27935)]; [Thread 0x7ffb77263700 (LWP 27922) exited]; [Thread 0x7ffa77261700 (LWP 27924) exited]; [Thread 0x7ffaf7262700 (LWP 27923) exited]; [New Thread 0x7ff477255700 (LWP 27936)]; [Thread 0x7ff9f7260700 (LWP 27925) exited]; terminate called without an active exception; [Thread 0x7ff77725b700 (LWP 27930) exited]; [Thread 0x7ff8f725e700 (LWP 27927) exited]. Program received signal SIGABRT, Aborted.; [Switching to Thread 0x7ffcf97e7700 (LWP 27870)]; 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:4005,abort,abort,4005,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['abort'],['abort']
Safety,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:4971,recover,recoverOrphans,4971,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['recover'],['recoverOrphans']
Safety,Aborted (core dumped) message at indexing step,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/795:0,Abort,Aborted,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795,1,['Abort'],['Aborted']
Safety,"Add [inDropv2 protocol](https://www.nature.com/articles/nprot.2016.154) to salmon alevin. To use this protocol pass the `--indropV2` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/inDrop.html). R1 is the biological read and R2 is the metadata read. Briefly, the reads have 8-11 bp barcode1, followed by a `W1` sequence which should be specified using `--w1` flag then 8bp barcode2 and 6 bp UMI sequence follows. . Summary of changes:; 1. `--indropV2` flag added to process indropV2 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the positions and avoid searching twice; 3. In case the barcode1 is less than 11bp, `A` is added after joining barcodes 1 and 2 to make the total length 19 bp; 4. If no exact match for w1 is found, a search for w1 with a hamming distance <=2 is performed. It was tested for correlation on run SRR7165069 from GEO submission [GSM3141960](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3141960).; Results:; ![image](https://user-images.githubusercontent.com/12998572/133622734-9b473318-fb39-421d-a322-b018f93ac139.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.3634 0.8981 0.9655 0.9307 0.9874 0.9976 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/703:680,avoid,avoid,680,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/703,1,['avoid'],['avoid']
Safety,"Add [sci-rna-seq3 protocol](https://www.nature.com/articles/s41586-019-0969-x) to salmon alevin. To use this protocol pass the `--sciseq3` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html). Briefly, the reads have 9-10 bp hairpin adaptor index, and 10bp reverse transcription index which together make the cell barcode of 19-20 bp in length; an 8 bp UMI which follows a 6bp anchor sequence CAGAGC. . Summary of changes:; 1. `--sciseq3` flag added to process sci-rna-seq3 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the position of anchor sequence and avoid searching twice; 3. In case the barcode is 19bp, `A` is added as the last nucleotide to make the cell barcodes length 20 bp for all barcodes. It was tested on data from the [Nature paper](https://www.nature.com/articles/s41586-019-0969-x). Correlation b/w the counts from the GEO submission [GSE119945](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE119945) and sum of spliced, unspliced reads with and without ambiguous counts using `usa` mode in alevin-fry gave reasonable looking correlations. ; Results for one of the fastq files:; ![image](https://user-images.githubusercontent.com/12998572/128923136-eefa8738-f87e-4f67-bba6-5cc1648ce194.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.4594 0.7805 0.8295 0.8253 0.8736 0.9943 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/695:703,avoid,avoid,703,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/695,1,['avoid'],['avoid']
Safety,Add debug mode to avoid segmentation faults.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/266:18,avoid,avoid,18,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/266,1,['avoid'],['avoid']
Safety,"Currently alevin requires a transcript to gene mapping file to be provided with the --tgMap flag. A similar file is required when computing gene level quantification downstream of Salmon. This file needs to exactly match the transcript IDs used when building the initial salmon index, furthermore, when building the initial index, a gtf file containing the transcript to gene mappings is typically provided. In order to ensure ideal mappings of transcripts to genes, it would be ideal if, when constructing the salmon index when a GTF file is provided, an additional tgMap file was automatically produced from the GTF and written to the index output directory that could then be automatically detected by alevin, and/or then manually passed to other downstream tools. Automatically generating this file, and thus allowing the --tgmap flag to become optional would ensure that the subsequent transcript to gene mappings were perfectly matched to the original quantification. This could additionally allow a future option for salmon to automatically produce gene level quantifications.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/595:693,detect,detected,693,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/595,1,['detect'],['detected']
Safety,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/562:1347,detect,detected,1347,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562,1,['detect'],['detected']
Safety,"Dear all,. I would say that salmon is so fast to report the TPM and read counts for each transcript or gene, and I always use salmon+tximport+edgeR to detect the differentially expressed genes. Because the edgeR can output the normalized read counts and tximport can output TPM for each gene based on the results generated by salmon, I asked the difference between TPM and log2(CPM). From following correlation plot, I found that the samples are clustered by different quantifications, TPM and CPM, but not by samples. Because my RNA-seq experiment contains 7 biological replicates in each of two conditions, I decide to identify differentially expressed genes by using Wilcoxon rank-sum test based on each gene’s TPM or CPM. Also, I can also retain the overlapped differentially expressed genes between edgeR and Wilcoxon rank-sum test. I would like to hear your suggestion. ```; y <- DGEList(counts=data, group=group, genes=genelength) # the genelength is generated by salmon+tximport for each sample ; keep <- filterByExpr(y); y <- y[keep,,keep.lib.sizes=FALSE]; y <- calcNormFactors(y); logcpm <- cpm(y, log=TRUE, prior.count=1); ```; [tpm_cpm_corr-spearman.pdf](https://github.com/COMBINE-lab/salmon/files/10067714/tpm_cpm_corr-spearman.pdf). Thank you in advance. Best regards,; Zheng zhuqing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/812:151,detect,detect,151,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/812,1,['detect'],['detect']
Safety,"Dear developer,. I am using salmon v1.2.1 to quantify the predicted genes of metagenome.; The salmon index for my dataset is very large. Here is the content of info.json:. > {; > ""index_version"": 4,; > ""reference_gfa"": [; > ""/media/bayegy/disk1/Projects/qianquan-zhangke/result/Assembly_out//salmon_index""; > ],; > ""sampling_type"": ""dense"",; > ""k"": 31,; > ""num_kmers"": 40027310776,; > ""num_contigs"": 1782853366,; > ""seq_length"": 93512911756,; > ""have_ref_seq"": true,; > ""have_edge_vec"": false,; > ""SeqHash"": ""34c8b30e5d42a0d4459fb24e44ecef46af39893984bf9613001e925a7b1308b7"",; > ""NameHash"": ""b503f6a369add974e996e5f42942882b50c2bf1419400420255d32a88fb61a18"",; > ""SeqHash512"": ""4b94376c390dd8e917d39dfbaed1092d9a661dbdb67635863f9a14b129948f1244929faf60f5b7c1d6fae142d87fb2c66455f49d0d3663f7498b275efad4ed93"",; > ""NameHash512"": ""46c31c9178b3290b2f57e9b682ea8eebe885ba9037e48cb6b385a0c70ce13e2b259400bc9bda4aca912c3b857edde7de41d11b1a7b9ccbe8b24df77808c22e59"",; > ""DecoySeqHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""DecoyNameHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""num_decoys"": 0,; > ""first_decoy_index"": 18446744073709551607,; > ""keep_duplicates"": false; > }. And the command I used:. `/home/bayegy/pipelines/metagenome/softwares/salmon-latest_linux_x86_64/bin/salmon quant --validateMappings -i /media/bayegy/disk1/Projects/qianquan-zhangke/result/Assembly_out//salmon_index -l A -p 90 --meta -1 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_1.fastq.gz -2 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_2.fastq.gz -o /media/bayegy/disk1/Projects/qianquan-zhangke/result/salmon_out//YGSC11.quant`. Sometimes, salmon would stay at the step of ""Starting optimizer"" for hours(10 hours at least). The CPU utilization is 100%, but the procedure never move forward. > [2020-06-04 12:06:12.254] [jointLog] [info] Mapping rate = 91.8009%; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/532:58,predict,predicted,58,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/532,1,['predict'],['predicted']
Safety,"Dear developers,. I noticed that salmon introduced the ""--ont"" option in version 1.5+ but this option is not valid anymore for the latest v1.6.0. So I was wondering the reason behind this. Also, say if I want to use v1.6.0 to analyze my ONT direct-RNA sequencing data, which options would you recommend regarding the following options: `--noErrorModel`,` --noLengthCorrection`, and `--libType`? Thanks!. ```; $ ./salmon-1.6.0_linux_x86_64/bin/salmon quant --ont ; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '--ont'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. $ ./salmon-1.5.2_linux_x86_64/bin/salmon quant --ont ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###exception : [the option '--libType' is required but missing]. Exiting. ```; Best,; Jia-Xing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/735:707,detect,detected,707,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/735,1,['detect'],['detected']
Safety,"Dear salmon support team,. I firstly assembled MAGs from my metagenome data, then predicted the ORF gene operons using the prodigal software to generate the corresponding prodigal predicted MAG *faa files. Now, I am using each MAG *fna fasta file to map on their corresponding prodigal predicted *faa protein sequences. **But, the TPM values in my quantification files - quant.sf are all as 0.**. So, could you give me some suggestions on this condition?. **Salmon command lines**; #index each MAG faa file; for f in ${quant_sf_dir}*faa; do ; fname=${f##*/}; fbase=${f##*.} ; index_dir=${f%.faa}; #mkdir -p ${index_dir}; #echo ${index_dir}; /services/tools/salmon/1.5.2/bin/salmon index -t ${f} -i ${index_dir}; done. #quantify each MAG fna using each corresponding MAG indexed faa file; for i in ${MAG_PATH}*.fasta; do; iname=${i##*/}; i_dir=${iname%.fasta}; index_dir=${quant_sf_dir}${i_dir}; /services/tools/salmon/1.5.2/bin/salmon quant -i ${index_dir} -l A \; -r ${i} \; **--minAssignedFrags 1 \**; -p 20 -o ${index_dir}_salmon_count > ${index_dir}.salmon.log 2>&1;; done. Best,. Bing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/792:82,predict,predicted,82,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/792,3,['predict'],['predicted']
Safety,"Dear salmon team and @k3yavi,. I am an happy user of alevin on scRNAseq data (10x). In some circumstances, I have to compare samples from very uneven sequencing depth (less than 100k reads per cell vs 1M reads per cell,), which naturally produces a huge ""batch effect"", some transcripts being impossible to detect at a lower sequencing depth. For 10x datasets, cellranger offers to compensate this kind of difference across datasets by subsampling, and I should tell it works very well. I tried this strategy before running alevin, by the use of python scripts subsampling the fastq files prior any alevin quasi-mapping. However, all my attempts failed, as all downstream analyses shown that this strategy didn't correct the batch effect at all with alevin (visualization on dimension reduction/UMAP show a huge difference between batches, while the cellranger subsampling method clearly corrects it). An important point is by default, the cellranger method corrects according to the amount of mapped reads between samples. So ideally, I should have to evaluate the difference in term of mapped reads to compute a subsampling coefficient (fraction of reads to keep). What correct alevin metrics should I use to estimate such a coefficient?. Considering the probalistic approach of alevin's transcript quantification, I am wondering if it could be any better way to normalize the samples to account for this kind of issue? Also, any option to subsample the reads (take a read into account under a certain probability) during alevin quantification would be of great help in my case. Thank you for your work and your time,; Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/305:307,detect,detect,307,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305,1,['detect'],['detect']
Safety,Detected a *potential* strand bias warning,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/659:0,Detect,Detected,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/659,1,['Detect'],['Detected']
Safety,"First off, thanks for the great tool!. I've been looking for a way to quantify the length of all recovered transcripts for single-cell RNA-Seq data. The salmon quant approach that generates a quant.sf is the equivalent of what I need. Since I can't specify UMI information with salmon quant, I was curious whether this output is available for alevin. Just can't seem to find anything online after scouring the web for several hours. . Thank you for any insight you can provide,; Aaron",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/693:97,recover,recovered,97,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/693,1,['recover'],['recovered']
Safety,"HI,; I using Salmon version1.2.1_l.; I have mate pairs for transcriptome mapping. ; `./bin/salmon quant -i /media/amit/Amit/Usr/new_salmon_index/ -l IU -1 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L3_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq -2 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L4_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L4_HK500HUMpybEAAKRAAPEI-530_2.fq -p 8 --validateMappings -o /media/amit/Amit/Usr/DNA12/fastq/DNA12.quant`. But salmon gives an error:; ```; The following errors were detected with the read files; ======================================================; ERROR: file [V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq] does not appear to exist!. ```; Kindly help. I have followed all the instructions noted here:; https://github.com/COMBINE-lab/salmon/issues/69. Regards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/737:537,detect,detected,537,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/737,1,['detect'],['detected']
Safety,Hello ; We are currently trying to use Salmon quant mode with BAM files that were generated from another lab's work. We have continued to get the error below and are unsure what the problem is. Our original command used the libtype A parameter which gave us a similar warning to the one below. We then sorted the BAM files by name using samtools sort -n and tried to run the command again and got the same error. We have used a myriad of different libtypes and continue to get the same error. We have a reference transcriptome generated from a de novo transcriptome assembly that the previous lab produced. WARNING: Detected suspicious pair --- ; The names are different:; read1 : D61655M1:276:D10YJACXX:3:1114:17825:17511; read2 : D61655M1:276:D10YJACXX:3:1114:17825:18115; The proper-pair statuses are inconsistent:; read1 [D61655M1:276:D10YJACXX:3:1114:17825:17511] : proper-pair; mapped; matemapped. read2 : [D61655M1:276:D10YJACXX:3:1114:17825:17511] : no proper-pair; mapped; matenot mapped. We have seen that others have had similar issue but haven't found a thread that mentions what the user did to remedy the problem. Any suggestions would be appreciated! We are using salmon V0.14.1.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/582:616,Detect,Detected,616,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/582,1,['Detect'],['Detected']
Safety,"Hello everyone! This is my first time analyzing RNAseq data and I am very much learning as I go while following a YouTube series (https://www.youtube.com/watch?v=butxOf_fxTY&t=217s&ab_channel=SimonCockell). Please excuse if I use wrong terminology in this post, I am very new to all of this and sometimes don't know what the right words are to describe what I am doing or trying to do (lol)!. With the fastq files of reads generated from my RNAseq experiment, I first ran FastQC. The quality of my data seemed to be fine as the per base sequence quality scores were 32+ and most of the other tests passed as well. Next, I built my index for Salmon using the fasta file from Gencode for the human transcriptome. Afterwards, I ran Salmon with the built index and had it automatically detect the library type. When the program was done aligning to the index, I saw that the file had a mapping rate of 40%. I guess what I'm asking is, is this an acceptable mapping rate or should I be concerned?? The reason I ask is because in the data I was working with while learning via the Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] Ther",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/571:782,detect,detect,782,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571,1,['detect'],['detect']
Safety,"Hello, . I have RNA-seq data for 3 runs under the same condition, and the data for each run was generated as single-end libraries using 3 lanes (100bp, 100bp and 50bp). After mapping using Salmon against the transcriptome and normalizing the counts using DESeq2, I found out that a control gene had a much higher level of deviation between runs. One of them was reported to have zero counts. . I ran Salmon for each library in that run and got the following results for that gene. Lib1 (50bp): GeneA 1859 1610.000 0.058387 6.313500; Lib2 (100bp): GeneA 1859 1610.000 0.086646 11.991785; Lib3 (100bp): GeneA 1859 1610.000 0.000000 0.000000; Lib1+Lib2+Lib3: GeneA 1859 1610.000 0.000000 0.000011. So I expected that Lib3 would have a problem. But when I ran bowite2 against the transcriptome, the raw counts for GeneA was 39 for Lib1, 21 for Lib2 and 24 for lib3, which looked normal. The number of reads was almost the same in each library, but the size of the library was 1/2 in Lib1 (50bp). . It was not clear to me why Samlon failed to detect GeneA in Lib3 even though the same parameters were used and also why in the combined library, the TPM and number of reads became 0 despite the counts of this gene in Lib1 and Lib2. How would I be able to improve the sensitivity (on the report, only 0.3% was reported to be smaller than K). for indexing and mapping, I used the default parameters: . salmon index -t Nbv5.1_TrPrm_NtCorrect.fasta Nbv5.1_TrPrm_NtCorrect_index; salmon quant -i ../../Database/Nbv5.1_TrPrm_NtCorrect_index -l U -r ../1-Transcriptome_Trimmed_Reads/QTCR002A_S5_L00T_R1_001_trimmed.fq.gz -p 12 -o QTCR002A_S5_L00T_R1_001_trimmed.against.Nbv5.1_TrPrm.out. Thanks,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/218:1038,detect,detect,1038,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218,1,['detect'],['detect']
Safety,"Hello, I am relatively new to bioinformatics/salmon. I am using the newest version of salmon (v1.10.0, downloaded executable). I created two decoy-aware transcriptomes using 1. a Trinity assembly created with 24 RNA-seq samples plus a published genome of the same species (an insect) and 2. a transcriptome compiled using Evigene into which I fed the same Trinity assembly, a MEGAHIT assembly (created with the same read files), and a previously published transcriptome from the same species, along with the same published genome of the same species as above. Running salmon with the two different indexes yields very different results using the same set of paired-end RNA-seq files. With the Trinity assembly-only-index, I get ""expected_format"": ""IU""; whereas with the Evigene index, I get ""expected_format"": ""ISR"". Why would this differ when the read files are exactly the same? Isn't the read file what is being looked at to automatically detect the library type? . For the Trinity index, here is an example from one sample:; ""strand_mapping_bias"": 0.5196075475175259; ; The same sample run with the Evigene index gave:; ""strand_mapping_bias"": 0.00013477965729161834. . For every sample run with the Trinity index, a warning ""Detected a *potential* strand bias > 1% in an unstranded protocol"" appeared, whereas this was very rare for samples run with the Evigene index, even though when using the latter, the strand-mapping_bias was FAR farther from the 0.50 ideal (it was always < 0.01). Why is this the case? I expected similar results using both indexes, because the read files used to create the two transcriptomes were largely the same, and both used Trinity as part (or all) of the transcriptome assembly process. . Thank you in advance for your insight. Holly Williams",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/840:942,detect,detect,942,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/840,2,"['Detect', 'detect']","['Detected', 'detect']"
Safety,"Hello, before writing further, I want to say that I have read through previous related open/closed issues but could not find a suitable answer. The problem: rather different mapping rates depending on library type. I am working with 150+ RNA-seq samples from two dozen tissues. I generated a novel, non-redunant transcriptome from these samples (which also includes the known annotation from ensembl) using ryuto. Following filtering of likely artifacts, predicting non-coding, and lowly expressed transcripts (identified via salmon v1.8.0), a _final_ transcriptome is generated. The selective alignment index (with decoys) is then used for a second and final round of quantification as. ```; salmon quant \; -p {threads} \; --seqBias \; --gcBias \; -i {input.sal_idx} \; -l A \; --numGibbsSamples 100 \; --dumpEq \; -1 {r1} \; -2 {r2} \; -o {params.out_dir}; ```. This is a rather heterogeneous collection of RNA-seq data with ~30% polyA selected and unstranded and ~70% rRNA-depleted and stranded so I expect some _interesting_ results along the way. Included in this collection are a handful of samples with both library preps and this is where I first noticed the problem above. For example, one sample has a polyA mapping rate of 84.01% and a ribo-dep of 46.67% (portion of each _meta_info.json_ below). Both of these however had STAR uniquely mapped reads >90%. Overall, the polyA samples have salmon mapping rates between ~75-90% while the ribo-dep at ~35-60%. I checked for rRNA contamination with RSeQC for a couple of the ribo-dep samples but did not observe anything significant to explain the decrease. I also want to note that these libraries were generated years apart and sequenced at different facilities so I am quite sure that is introducing a fair amount of variance. I guess I still I would have expected more similar mapping rates but apologies if this is the most obvious likely culprit!. My questions are; 1. What could be explaining this difference on the whole or between indi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/779:455,predict,predicting,455,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/779,1,['predict'],['predicting']
Safety,"Hello,. I am currently using Salmon v1.2.0 which was build from source and is run on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/524:948,recover,recoverOrphans,948,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/524,1,['recover'],['recoverOrphans']
Safety,"Hello,. I am using the recent downloaded executable for v1.1.0 and am using salmon (bulk-mode). Noticed one potential bug and have some general questions regarding bootstraps. 1. The potential bug I noticed was when I use `--numGibbsSamples` the logs/salmon_quant.log file is always blank. When I remove this flag and re-run the program the log file is correctly printed out. 2. Regarding Bootstraps:. I've been working with parameters to min/max my predicted estimates to quantified cDNA results that we have. Through this process I was not performing bootstraps and was just using the TPM results that were located within the `quants.sf` file and have been getting some good results, with R-squared values of ~0.98 for actual v. predicted plots. As a note, even after running hundreds of runs with the same parameters, the TPM values in the `quants.sf` file never really fluctuated that much between runs and were generally nearly identical. . However, I thought it would be best to bootstrap `--numBootstraps` each Salmon run and average the bootstraps to get more accurate results. After doing 1,000 bootstraps per sample I noticed that the TPM values I calculated from numbers of mapped reads in the `bootstraps.gz` fluctuated a lot more and overall brought my R-squared values down to ~0.87. (I used your ConvertBootstrapsToTSV.py script to get the read counts from the bootstrap file and then calculated the TPMs using the effective lengths from the `quants.sf` file. As looking through previous issues (#246) I was under the assumption that the bootstrap file only contained new mapped read estimates and the effective lengths should be the same for all bootstrap runs.) . My question is why do the TPM values in the `quants.sf` file not fluctuate as much (even after 100+ runs using the same parameters), while calculated TPM values from bootstraps of the same run are showing greater variance?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/466:450,predict,predicted,450,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/466,2,['predict'],['predicted']
Safety,"Hello,. I want to known if it's possible to view salmon quant.sf output in a browser ( IGV, JBROWSE) according to a fasta reference genome and gff file of predicted gene used for salmon mapping. Thanks in advance,; Regards,. Steven",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/900:155,predict,predicted,155,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/900,1,['predict'],['predicted']
Safety,"Hello,. I've been comparing Salmon (v 0.8.2) counts with those of traditional STAR/featureCounts and found one bizarre example. The unique aligned counts and the Salmon counts (rounded) for my 3 sets of 3 samples are:. ```; C_1 C_2 C_3 pl_C_4 pl_C_5 pl_C_6 CpG_7 CpG_8 CpG_9; STAR 0 1 1 70 31 41 2 0 0; Salmon 147 139 1 80 41 47 2 76 95; ```; From the STAR counts, it looks like this gene is only expressed in the middle group of 3 samples, But Salmon has given 4/6 other samples large numbers of counts. There is only one transcript for this gene, which produces RING finger protein (large gene family). The estimated lengths for the transcript are:. ```; C_1 C_2 C_3 pl_C_4 pl_C_5 pl_C_6 CpG_7 CpG_8 CpG_9 ; 250.0 250.0 17385.6 17381.2 17308.9 17356.8 17415.0 250.0 250.0; ```. So those 4/6 with large numbers of counts have very short estimated gene lengths, which I'm guessing is just shared sequence with other RING finger protein genes. The two samples that had only 1 and 2 unique reads must have had them in a place that led Salmon to estimate the proper long transcript length, and to prevent the EM algorithm from assigning multiply mapping reads to the shared 250 bp. The combination of ~100 reads plus very short length leads to huge, incorrect abundances for these 4 samples! This is the only example I can find in the whole data set, so it must be a weird combination of the transcript only being expressed at a low-level in one group plus a large gene family. Is there anyway this could be avoided by your algorithm?; Thanks,; Jenny",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/133:1505,avoid,avoided,1505,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/133,1,['avoid'],['avoided']
Safety,"Hello,; Thank you for developing this tool. I am trying to quantify transcript abundance using direct RNA seq reads after mapping with minimap2 to a transcriptome that I got using FLAIR and SQANTI tools. In this post, I am attaching a screenshot with the annotation file and the coverage file provided to IGV (coverage obtained by mapping to the genome). . ![image](https://user-images.githubusercontent.com/91305037/176149469-38b2bd94-3c21-4a33-8c4c-56d7590229bd.png). As we can see there are 4 overlapping transcripts. However, after running salmon only the longest transcript is detected (cf screenshot below). ![image](https://user-images.githubusercontent.com/91305037/176149696-c70d22b5-059b-493d-90f1-050d4c0ba276.png). The command line I used for minimap2 was: `minimap2 -ax map-ont sqanti_transcriptome.fasta reads.fastq > reads.sam -N 100`; The command line for salmon was `salmon quant -t sqanti_transcriptome.fasta -l A -a reads.bam -o reads_counts --ont --noErrorModel.`. How can I quantify all these overlapping transcripts ? ; Do I need to provide the files so that you can reproduce this?; Thank you in advance, ; Best regards.; Lan Anh. Edit: I also have another question concerning the library type. When using the automatic mode, SF library is used. But for ONT nanopore reads, since the read comes from the reverse strand, should it be SR? or because it can come from both strands, is it U?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/786:582,detect,detected,582,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/786,1,['detect'],['detected']
Safety,"Hello. I am analyzing Drop-Seq data with salmon alevin. I applied the tips given in this discussion (#506). ; When adding the ```--forceCells``` flag and setting it to 1000, the number of detected cells is 1499 or 1500 in all samples. ; I don't think this is normal behaviour, but I have no idea what is causing this. . Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/739:188,detect,detected,188,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/739,1,['detect'],['detected']
Safety,"Hello. I ran Alevin with the `--dumpBfh` flag. This resulted in ``bfh.txt`` present in the output. ; At first sight, this file shares similarities with the ``eq_classes.txt`` you obtain when running salmon with the ``--dumpEq`` flag. Could you explain the format of the file in more detail? I couldn't find in the documentation of Alevin. At the moment, I think that: . - The first line is the number of transcripts.; - The second line is the number of valid barcodes, i.e. the number of detected cells. ; - The third line is the number of equivalence classes; - The next lines, starting with ENSMUST in my case, are the transcripts. ; - The next lines, starting with ACGT and in my case 12 characters long, are the retrieved cellular barcodes. ; - ... (Here I don't know what I am looking at). Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/728:488,detect,detected,488,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/728,1,['detect'],['detected']
Safety,Hi @rob-p @k3yavi . I think it is best to have the below stated somewhere within the 1st para of the README at https://github.com/COMBINE-lab/salmon **_This will avoid lots of confusion for most users_** - as seen here https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614298125 . 3 possible ways in which salmon index can be created. - cDNA only index : salmon_index - https://combine-lab.github.io/salmon/getting_started/. - SA mashmap index: salmon_partial_sa_index - (regions of genome that have high sequence similarity to the transcriptome) - https://github.com/COMBINE-lab/SalmonTools/blob/master/README.md and using this script https://raw.githubusercontent.com/COMBINE-lab/SalmonTools/master/scripts/generateDecoyTranscriptome.sh. - SAF genome index: salmon_sa_index - (the full genome is used as decoy) - https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/509:162,avoid,avoid,162,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/509,1,['avoid'],['avoid']
Safety,"Hi Rob and team,. the geneMap option wasn't automatically detecting my gff file as a transcript->gene mapping in the correct format, instead treating it as a simple mapping and yielding interestingly a single result in `quant.gene.sf`, ""UTR"" (which lies in column 3 of the GFF; unclear to me why it didn't pull from column 2 instead, yielding gene names ""Ensembl"" and ""Havana""). Anyway, I found that Salmon is really only matching on the extension `.gtf` , **instead of `.gtf or .gff` as the help text indicates** :; ```; -g [ --geneMap ] arg File containing a mapping of; transcripts to genes. If this file is; provided Salmon will output both; quant.sf and quant.genes.sf files,; where the latter contains aggregated; gene-level abundance estimates. The; transcript to gene mapping should be; provided as either a GTF file, or a in; a simple tab-delimited format where; each line contains the name of a; transcript and the gene to which it; belongs separated by a tab. The; extension of the file is used to; determine how the file should be; parsed. Files ending in '.gtf' or; '.gff' are assumed to be in GTF format;; files with any other extension are; assumed to be in the simple format. ```; The offending comparison in `SalmonUtils.cpp` is here:; https://github.com/COMBINE-lab/salmon/blob/335c34b196205c6aebe4ddcc12c380eb47f5043a/src/SalmonUtils.cpp#L2241. While I have brought this to attention, it would be nice to also check for the extension `gff3` as well, since this is what Gencode supplies (and many people tend to append the `3` to the extension in practice). Kind regards and thanks for doing great science",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/114:58,detect,detecting,58,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/114,1,['detect'],['detecting']
Safety,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/675:1055,recover,recoverOrphans,1055,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675,1,['recover'],['recoverOrphans']
Safety,"Hi all,. Is there any suggestion/best practices on whether one should or should not use orphan recovery? My feeling is that it should be used in cases where the library quality maybe isn't the greatest, but i'm not sure about this. Thanks all!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/959:95,recover,recovery,95,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/959,1,['recover'],['recovery']
Safety,"Hi everyone,; Lately I was trying to use Salmon (v0.8.0) along with tximport to study a downloaded single-cell data on gene-level. And I came across something werid that I found almost 20k genes on average per cell, which is way higher than expected. Realistically, the scRNA-seq protocol I followed will only have a gene number detection of roughly 10k. I re-do the analysis with STAR + featurecounts and I observed a per-cell gene number of 6k on average. Just wonder which part of my code goes wrong. Attached please find my code for Salmon and subsequent R script for tximport. Any advice or suggestion will be much appreciated! I do love Salmon for its speed and convenience. Salmon index; #!/bin/bash. salmon index -t /home1/garyhe/workingdir/ref/gencode/gencode.v25.transcripts.ercc.fa -i /home1/garyhe/workingdir/ref/index/salmonindex/v25/19mer --gencode --type quasi -k 19. Salmon quant; #!/bin/bash. cd /home1/garyhe/workingdir/data/bjorklund2016ni/00_raw. for i in $(ls *.gz | cut -c 1-10 | uniq). do. salmon quant -i /home1/garyhe/workingdir/ref/index/salmonindex/v25/19mer \; -l U \; -r ${i}_1.fastq.gz \; --writeMappings=/home1/garyhe/workingdir/data/bjorklund2016ni/01_aligned/${i}.sam \; -o /home1/garyhe/workingdir/data/bjorklund2016ni/02_quant/${i}. Done. R script for tximport; #condense the ensemble transcript ID counts to gene ID counts; library(GenomicFeatures); txdb <- makeTxDbFromGFF(""./Sequencing_run/gencode.vM12.primary_assembly.annotation.ercc.gtf""); k <- keys(txdb, keytype = ""GENEID""); df <- select(txdb, keys = k, keytype = ""GENEID"", columns = ""TXNAME""); tx2gene <- df[, 2:1]; head(tx2gene). library(tximport); library(readr); dir <- ""./Sequencing_run/salmon_output/sc/""; list.files(dir); samples <- read.table(""./Sequencing_run/salmon_output/scsampleinfo.txt"", header=TRUE); samples; files <- file.path(dir, samples$Sample_ID, ""quant.sf""); names(files) <- paste0(samples$Sample_ID); names(files) <- gsub(""[:_:].*$"", """", names(files)). #gene-level; txi.salmon.g <- txi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/120:329,detect,detection,329,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120,1,['detect'],['detection']
Safety,"Hi salmon team,. Thank you for developing this useful tool! I used salmon (v1.9.0) to quantify transcript abundance using full-length cDNA reads (ONT) after mapping with minimap2 to a transcriptome (Ensembl, GRCh38.p13). The commands as follows:. ```; minimap2 -t 4 -ax map-ont -N 100 -p 0.99 Homo_sapiens.GRCh38.cdna.all.mmi sample_full_length.fa | samtools view -bS > sample_cdna.bam; salmon quant -p 4 --ont -l U -t Homo_sapiens.GRCh38.cdna.all.fa -a sample_cdna.bam -o salmon_quant -g TranscriptID_GeneID_from_cDNA_fasta.tsv; ```. I found that salmon with the ""--ont"" option has a tendency to assign reads to isoforms containing longer exons (especially at the 5' end), even if regions specific to the longer exons have no read coverage. In the following example, the expression abundance of TPI1-202 is obviously higher than TPI1-201 based on genome mapping coverage in IGV tools. <img width=""415"" alt=""image"" src=""https://user-images.githubusercontent.com/33354198/191897914-cb68c719-3971-4489-b970-5f2322d878aa.png"">. However, in salmon (with “--ont”) results, the average detected transcript abundance for TPI1-202, TPI1-201 and TPI1-210 were 84.339, 186.753 and 132.503 respectively, i.e., the abundance of TPI1-202 was much lower than TPI1-201. Salmon seems to overestimate the abundance of TPI1-201 and TPI1-210 which contain longer exons at the 5' end. Similar problems were also observed in many other genes. Meanwhile, using the “--noErrorModel” option instead of “--ont” does not show this behavior (but “--noErrorModel” has problematic quantifications in other cases). Could you help with this problem? Is there any specific considerations in the “--ont” mode that could explain this behavior, and how can I fix it?. Thanks in advance!. Ping",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/802:1080,detect,detected,1080,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/802,1,['detect'],['detected']
Safety,"Hi, . I'm new to RNA seq and trying to use Salmon to analyse my dataset. However, it gives an error when I try to run it after downloading the package: . ` ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon`. It gves the following error: . `dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/bin/./salmon; Reason: image not found; Abort trap: 6`. I would be grateful for your help. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/172:403,Abort,Abort,403,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172,1,['Abort'],['Abort']
Safety,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/854:1154,detect,detected,1154,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854,1,['detect'],['detected']
Safety,"Hi, ; just a quick check if it is normal for SALMON 1.3 to send > 100 Gb of output to the stdout, despite using the -quiet flag. The quant mode appears to be running smoothly.; A sample of the output at the end of file:; <img width=""960"" alt=""Screenshot 2020-10-15 14 23 42"" src=""https://user-images.githubusercontent.com/1333150/96084759-380a3680-0ef2-11eb-82ab-b5ea839c9113.png"">. My command is as follow:; /gpfsdata/apps/salmon-latest_linux_x86_64/bin/salmon quant \; -i /gpfshome/hockchuan/SALMON/GCF_900626175.2_cs10_index \; -l ISR \; -1 /gpfsdata/JangiLab/hockchuan/170302/2.Trimmomatic_output/clean_HEADBANDSTEM_1.fastq.gz \; -2 /gpfsdata/JangiLab/hockchuan/170302/2.Trimmomatic_output/clean_HEADBANDSTEM_2.fastq.gz \; --seqBias \; --gcBias \; --posBias \; --incompatPrior 0.0 \; --geneMap /gpfsdata/JangiLab/hockchuan/cs10_reference_genome/GCF_900626175.2_cs10_genomic.gtf \; --recoverOrphans \; --allowDovetail \; --threads $NSLOTS \; --dumpEq \; --minScoreFraction 0.65 \; --writeMappings /gpfshome/hockchuan/SALMON/MAP/HEADBANDSTEM \; --fldMean 250 \; --fldSD 25 \; --writeOrphanLinks \; --writeUnmappedNames \; --quiet \; -o /gpfshome/hockchuan/SALMON/HEADBANDSTEM_quant",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/573:887,recover,recoverOrphans,887,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/573,1,['recover'],['recoverOrphans']
Safety,"Hi, ; the output from the log is shown below. So apparently, everything went well, except for one minor issue... but my gene counts and my transcript count files are empty??; How is that possible; Cheers; Ashok; ```; [2017-07-18 17:14:11.438] [jointLog] [info] parsing read library format; [2017-07-18 17:14:11.438] [jointLog] [info] There is 1 library.; [2017-07-18 17:14:11.485] [jointLog] [info] Loading Quasi index; [2017-07-18 17:14:11.485] [jointLog] [info] Loading 32-bit quasi index; [2017-07-18 17:14:21.207] [jointLog] [info] done; [2017-07-18 17:14:21.207] [jointLog] [info] Index contained 107368 targets; [2017-07-18 17:14:22.320] [jointLog] [info] Automatically detected most likely library type as SF; [2017-07-18 17:22:52.788] [jointLog] [info] Computed 280679 rich equivalence classes for further processing; [2017-07-18 17:22:52.788] [jointLog] [info] Counted 27517563 total reads in the equivalence classes; [2017-07-18 17:22:52.850] [jointLog] [info] Mapping rate = 37.9965%. [2017-07-18 17:22:52.850] [jointLog] [info] finished quantifyLibrary(); [2017-07-18 17:22:52.853] [jointLog] [info] Starting optimizer; [2017-07-18 17:22:52.789] [fileLog] [info]; At end of round 0; ==================; Observed 72421398 total fragments (72421398 in most recent round). [2017-07-18 17:22:52.981] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2017-07-18 17:22:52.990] [jointLog] [info] iteration = 0 | max rel diff. = 9.36177; [2017-07-18 17:22:53.935] [jointLog] [info] iteration = 100 | max rel diff. = 0.0782409; [2017-07-18 17:22:54.889] [jointLog] [info] iteration = 200 | max rel diff. = 0.0347085; [2017-07-18 17:22:55.784] [jointLog] [info] iteration = 300 | max rel diff. = 0.0249461; [2017-07-18 17:22:56.790] [jointLog] [info] iteration = 400 | max rel diff. = 0.0188653; [2017-07-18 17:22:57.752] [jointLog] [info] iteration = 500 | max rel diff. = 0.0157419; [2017-07-18 17:22:58.688] [jointLog] [info] iteration = 600 | max rel diff. = 0.0128394; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/143:676,detect,detected,676,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/143,1,['detect'],['detected']
Safety,"Hi, I've been using salmon v1.0.0 to quantify bulk transcripts from fastqs using the genocde v32 reference. Ive used it successfully on several cohorts but on my most recent I received the following warning in my log file (I also attached the entire file):. [2021-05-10 20:51:46.936] [jointLog] [warning] NOTE: Read Lib [[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /gcloud-shared/sample/lib_format_counts.json for details. Here is also the lib_formats_count.json:; {; ""read_files"": ""[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 43142675,; ""num_assigned_fragments"": 43142675,; ""num_frags_with_concordant_consistent_mappings"": 36380775,; ""num_frags_with_inconsistent_or_orphan_mappings"": 7777480,; ""strand_mapping_bias"": 0.5172763911708863,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 18818916,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17561859,; ""SF"": 2219340,; ""SR"": 5558140,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Here is the salmon command I've been using:. salmon --no-version-check quant -i /gcloud-shared/reference -l A -1 ${FASTQR1} -2 ${FASTQR2} \; --validateMappings --seqBias --gcBias --posBias --threads $(nproc) -o /gcloud-shared/sample. The whole process still produces quants files, but having never received this warning with other sample cohorts I want to be sure it's not affecting the results. Any idea why I might be getting this? Am I using the wrong lib type?. Thanks!. [ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6479118/ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/659:381,Detect,Detected,381,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/659,1,['Detect'],['Detected']
Safety,"Hi, thanks in advance.; I previously used prodigal to predict the protein sequence of specific functional genes in a metagenomic data set. I was not sure if nucleic acid sequence (DNA) generated by prodigal can be used directly as input data for indexing.; Looking forward to your reply.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/697:54,predict,predict,54,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/697,1,['predict'],['predict']
Safety,"Hi,. I have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; C",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682:875,recover,recovery,875,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682,1,['recover'],['recovery']
Safety,"Hi,. I have run a RNAseq sample through Salmon with --l A option (library type); I was told regarding the in-house protocol to generate the library that ""The first read reads off the anti-sense strand, and the second reads off of the sense strand. From what I understand, the first read is reported as the sense strand, and the second read is reported as the anti-sense strand (as the reverse complement)"". i.e. similar to TruSeq (first read comes from anti-sense/reverse strand). That would translate into ISR according to http://salmon.readthedocs.io/en/latest/library_type.html. Yet from the Salmon quant log file = Automatically detected most likely library type as ISF.; If I run the same sample with -l ISF I get the warning:; Greater than 5% of the fragments disagreed with the provided library type; check the file: 2RD_1760_salmon_quant_ISF/lib_format_counts.json for details - ; which shows:; ""expected_format"": ""ISF"",; ""compatible_fragment_ratio"": 0.9281440552329109,; ""num_compatible_fragments"": 8223296,; ""num_assigned_fragments"": 8859935,; ""num_consistent_mappings"": 67110116,; ""num_inconsistent_mappings"": 13842824,; ""MSF"": 0,; ""OSF"": 120231,; ""ISF"": 67110116,; ""MSR"": 0,; ""OSR"": 12968,; ""ISR"": 11405988,; ""SF"": 1926077,; ""SR"": 353507,. I would be very grateful for a possible explanation. Thank you very much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/206:633,detect,detected,633,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/206,1,['detect'],['detected']
Safety,"Hi,. I read the preprinted Salmon paper but I couldn't understand the mathematics. Thus, I am not sure how NumReads and TPMs in the quantification file are generated, and my following questions might seem very naive. . My library is 3' selected. ([Sub-figure B] (http://www.rna-seqblog.com/for-model-species-the-3-rna-seq-method-might-more-accurately-detect-differential-expression/) ) Therefore, the number of fragments from each transcripts is not dependent on the length of the transcript. In theory, 1 transcript should only produce 1 fragment that originates from the 3' end. . Would there be any issue using Salmon to quantify a library like this? ; Should I use NumReads instead of TPM to measure transcript abundance, since I don't want my read counts to be normalized by length of transcript? ; If I am just comparing gene expression between samples, does it matter whether I use NumReads or TPM, since any normalization would cancel out when I calculate fold change?; Or should I use TPM with --posBias enabled to account for the 3' bias of my library? My concern about this approach is explained in a different [post](https://github.com/COMBINE-lab/salmon/issues/165). Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/166:351,detect,detect-differential-expression,351,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/166,1,['detect'],['detect-differential-expression']
Safety,"Hi,. I used merged genome + transcriptome file with Hisat2 to retrieve all reads in my samples, and then converted the bam files to R1. fastq, R2.fastq + singletons files. I then used Hisat2 with the three files and used the transcriptome fasta file to pull out reads which is now in bam format to be used in Salmon. When I tried using Salmon using the transcriptome fasta file and the bam file, I get this error:. WARNING: Detected suspicious pair --- ; 	The proper-pair statuses are inconsistent:; read1 [HWI-7001326F:36:C7J2GANXX:5:1104:13209:80405] : proper-pair; mapped; matemapped. read2 : [HWI-7001326F:36:C7J2GANXX:5:1104:13209:80405] : no proper-pair; mapped; matemapped. [2017-07-07 10:46:02.309] [jointLog] [warning] . ERROR: Found unpaired read in a paired-end library. The read was marked as unpaired in sequencing (not just unmapped).The two ends of a paired-end read should be adjacent. Don't know how to proceed; exiting!. I tried to sort the bam files using samtools sort -n but still I get the above error. Any advice please? Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/140:424,Detect,Detected,424,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140,1,['Detect'],['Detected']
Safety,"Hi,. This is not an issue, but I'm just looking advice on this problem I've been trying (with limited success) to tackle on my own for a while. First, I've been using salmon for years and I love all the updates that have come about recently. The new selective alignment mode is an amazing upgrade!. My general question here is how to quantify various truncated isoforms of the same transcript. I'm working in S. cerevisiae and I am not referring to isoform switching via alternative splicing, but various isoforms that are fully contained as a subset of a larger transcript sequence. Imagine a standard gene that gives rise to a 1000 bp transcript. Through alternative promoter usage or post-transcriptional processing, it can give rise a truncated form that is identical to the parent transcript, except only has sequence from bases 400 to 1000. I know this scenario is similar to detecting differential splice forms, and indeed when I see overlapping genes that nonetheless have some unique sequence, salmon does an excellent job at fractionally apportioning the reads. In this particular case, however, it seems that because all mappings to the truncated isoform also give perfect mappings to the longer isoform, even a single few reads mapping uniquely to the longer isoform is enough evidence for the salmon EM algorithm (I assume that's the relevant part?) to give *all* of the reads to the long isoform. To visualize the problem, I'm attaching an image of alignments over a transcript that is only expressed as a portion of the annotated parent transcript. If i encode the short and long forms as separate transcripts in salmon fasta index, all of the reads get assigned to the longer form with the options I've tried. My question then is whether there's a combination of salmon quant options that would optimize apportioning the reads better for this class of transcript, or whether it's simply not going to work given the underlying assumptions in the software?. Thanks a ton for any help,; J",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/514:882,detect,detecting,882,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514,1,['detect'],['detecting']
Safety,"Hi,. first of all congratulations on a great tool, the expansion to scRNA-seq analysis is especially appreciated!. I was wondering what the reason for setting an upper limit on the barcode length in alevin is - would longer barcodes affect the computation in some manner? We are working with barcodes of length 27, which are incompatible with the hardcoded upper barcode length limit [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). I manually raised the limit on a modified alevin version, and the final output looks as expected, so if there is no risk that I am unaware of, would you consider raising or removing the barcode length limit altogether?. Thank you for you help!. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Using the manual barcode and UMI specification with `--end`, `--barcodeLength`, and `--umiLength` fails for barcodes longer than 20 with the error message:; ```; Barcode length (27) was not in the required length range [1, 20].; ```; The barcode length upper limit is hardcoded [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). **To Reproduce**; In Salmon 1.0.0, run `salmon alevin [...] --end 5 --barcodeLength 27 --umiLength 8` (or any `barcodeLength` value above 20). * Which version of salmon was used? 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? not relevant; * Which read files were used? not relevant; * Which which program options were used? `--end 5 --barcodeLength 27 --umiLength 8`. **Expected behavior**; Ideally, barcode longer than 20 would be processed as normal. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Mac OS X; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/445:618,risk,risk,618,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/445,1,['risk'],['risk']
Safety,"Hi,. first of all, I really like using Salmon for RNAseq quantification. I have a very special problem. We are working with experimental conditions in which transposons get activated and highly expressed. This initially caused my RNAseq quantification to be wrong as transposon reads got assigned to genic transcripts. I can circumvent this problem mostly by adding the transposon transcripts into the index.; Still there are some regions that are 1:1 identical between transposons and genes that still cause problems. The gene in the examples is not expressed in the cells I use which is more or less what Salmon gives me for WT conditions. Still I get TPMs of >12 in my experimental conditions due to the heavy transposon deregulation. You can see this here in this chart where I overlay the mappings from salmon in WT and in the experimental knockout (KO):; ![image](https://user-images.githubusercontent.com/12491961/39418440-bfbca0f2-4c5a-11e8-8bde-f2da0cca2658.png). The only region covered is the transposon piece and the rest of the transcript is uncovered. . Is there any way to avoid such wrong quantification by some settings, or is it possible to mask such regions upstream?. Any help would be appreciated. . All the best and thank you,; Dominik",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/217:1088,avoid,avoid,1088,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/217,1,['avoid'],['avoid']
Safety,"Hi,; I am new to using salmon. I have tried quantifying one of my samples in both alignment and mapping-based modes. In both cases I get an error saying ""unrecognised option"" for various parts of the command (including both the ""-i"" and ""-t"" flags). Below is an example of my code and the error:. salmon quant -t References/Ensembl/Homo_sapiens.GRCh37.cdna.all.fa\; -l A\; -a bam_files/RNA_007_7669.Aligned.out.sort.com.bam\; -o salmon_quant_trial; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '-t'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. Do you know why flags such as -i and -t are not being recognized? I have tried using --index and --targets instead which hasn't helped. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/764:689,detect,detected,689,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/764,1,['detect'],['detected']
Safety,"Hi,; I get this error:. salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:526,Abort,Aborted,526,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['Abort'],['Aborted']
Safety,"Hi,; i met a problem when installing the index for salmon. The feedback suggests that ""server did not respond before timeout"". This problem is shown in the following picture.; I've already given it enough space for running, while it seems that it was stuck in the first step. And the index file only contains ""pre_indexing.log ref_indexing.log""; So could you please help me to solve this problem?; Thanks; ![image](https://user-images.githubusercontent.com/100278952/155299114-10a7e3b7-bf08-49aa-824d-48dcbaa1fd71.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/755:117,timeout,timeout,117,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/755,1,['timeout'],['timeout']
Safety,"I am using `salmon` for both creating index and quant using the latest version of salmon using the following commands:. 1- for indexing:. salmon index ; -t ""${fasta}"" ; -i index . 2- for quantification:. salmon quant ; --libType=U; --index $index ; -1 ${reads[0]} ; -2 ${reads[1]} ; -o $pair_id. But I am getting this error:. Command error:; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [the option '--index' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. This error is related to quant part. Do you know how I can fix the problem?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/746:602,detect,detected,602,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/746,1,['detect'],['detected']
Safety,"I recently upgraded to v0.9.1 and am analyzing 2x75 total RNA. The kit is stranded with the first read originating from the reverse strand, thus I specified the libType as ISR. Command used to invoke salmon quant:. ```; salmon quant -i /home/benjohnson/Documents/references/hg19/salmon/salmon_hg19 -1 $pair1 -2 $pair2 -o $SAMPLE --seqBias --gcBias -p 28 --useVBOpt --numBootstraps 100 -l ISR; ```. Output following invocation:. ```; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/benjohnson/Documents/references/hg19/salmon/salmon_hg19 }; ### [ mates1 ] => { GO537F1_L000_R1_001.fastq.gz }; ### [ mates2 ] => { GO537F1_L000_R2_001.fastq.gz }; ### [ output ] => { GO537F1 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ threads ] => { 28 }; ### [ useVBOpt ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { ISR }; ```. Warning received about strand bias in library:. ```; Detected a *potential* strand bias > 1% in an unstranded protocol check the file: GO537F1/lib_format_counts.json for details; ```. lib_format_counts.json output:. ```; {; ""read_files"": ""( GO537F1_L000_R1_001.fastq.gz, GO537F1_L000_R2_001.fastq.gz )"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 0.997983099568402,; ""num_compatible_fragments"": 18521739,; ""num_assigned_fragments"": 18559171,; ""num_consistent_mappings"": 44944769,; ""num_inconsistent_mappings"": 16315669,; ""strand_mapping_bias"": 0.97668914484798,; ""MSF"": 0,; ""OSF"": 3095,; ""ISF"": 1047701,; ""MSR"": 0,; ""OSR"": 139809,; ""ISR"": 43897068,; ""SF"": 3206477,; ""SR"": 12956987,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. I'm a bit confused as to whether this is normal behavior and not impacting output (I haven't necessarily investigated if this is the case) or if it is ignoring my ISR option. I've tried using -l as ISR; ""ISR"" and also with --libType ISR; ""ISR"" with the same output. . Thanks for your time!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/187:961,Detect,Detected,961,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/187,1,['Detect'],['Detected']
Safety,"I tend to benchmark new versions of software mostly to check how much better things get over time at solving our problems. My strategy for benchmarking is to look at correlation between spike-ins at known abundances and estimated expression by software. The latest version of Salmon (0.4.0) performs markedly worse than all the previous versions of Salmon on the same data. ![salmong-performance](https://cloud.githubusercontent.com/assets/668803/8134113/8ff1a4ae-1124-11e5-80d5-10022530ba99.png). For running parameters, here is the top part of one of the `quant.sf` files. ```; # salmon (smem-based) v0.4.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /nfs/research2/teichmann/reference/homo-sapiens/salmon/Homo_sapiens.GRCh38.78.cdna_ERCC }; # [ libType ] => { IU }; # [ threads ] => { 4 }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_2.fastq }; # [ output ] => { /tmp/SRP030617_HCT116_86_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/homo-sapiens/Homo_sapiens.GRCh38.78.cdna_ERCC.gene_map.txt }; # [ useVBOpt ] => { }; # [ mapping rate ] => { 48.8199% }; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/6:871,detect,detection-comparison,871,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6,2,['detect'],['detection-comparison']
Safety,"I was running some quantification on Google Compute Engine and a particular study repeatedly printed ""couldn't dequeue read chunk"" for 2.5 days. By the time I discovered it, over 300GB of Egress traffic (sending the message to my local computer) had accumulated. Cost me close to $100 between Google's egress charges and my ISPs bandwidth overage charges. It would be nice if the message didn't print so much. I'm now running Salmon commands with `timeout 1h` prefix to prevent this but might run into an issue with 1 hour not being long enough for all quantification runs.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/152:448,timeout,timeout,448,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152,1,['timeout'],['timeout']
Safety,"I'm looking at using Salmon on metatranscriptomes (environmental de novo assemblies). Our assemblies are typically very large, i.e. many millions of sequences. When scheduling jobs on my university's cluster (LSF), I'm required to set a memory limit. When salmon exceeds this limit, the job is killed, and I must restart the process. Is there a recommendation for predicting how much memory salmon will use to index/quant based on the size of the transcriptome? Could it be possible to set a memory limit for salmon so that it doesn't attempt to call more than is allocated?. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/97:364,predict,predicting,364,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/97,1,['predict'],['predicting']
Safety,"I'm quantifying reads from a Lexogen QuantSeq experiment, using `-l SF and --noLengthCorrection`. I just downloaded the latest release 0.9.0. Full command (using nu parallel); `salmon quant -i path_to_index -r {} -l SF --noLengthCorrection -o {.} -p 5`. Which gives the following settings information:; ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/wdecoster/databases/Homo_sapiens/hg38/transcriptome/GRCh38-full-transcriptome-index }; ### [ unmatedReads ] => { pt_d10046-11.fastq.gz }; ### [ libType ] => { SF }; ### [ noLengthCorrection ] => { }; ### [ output ] => { pt_d10046-11.fastq }; ### [ threads ] => { 5 }; ```. But I get the following warning for each sample:; `Detected a *potential* strand bias > 1% in an unstranded protocol check the file: samplename/lib_format_counts.json for details`. That file looks as below:. ```; {; ""read_files"": ""pt_d10040-14.fastq.gz"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 2836170,; ""num_assigned_fragments"": 2836170,; ""num_consistent_mappings"": 10375916,; ""num_inconsistent_mappings"": 0,; ""strand_mapping_bias"": 0.9229587055253724,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 9576542,; ""SR"": 799374,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. This suggests my libType SF is ignored?. (Less important: If you could make --libtype an alias for --libType that would be great, random internal capitalization is quite annoying imho)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/177:805,Detect,Detected,805,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/177,1,['Detect'],['Detected']
Safety,"I'm running salmon v.4 (downloaded and compiled today) on gencode v22 and got the following error:. Performing PCA decomposition; salmon: /home/merkija1/software/salmon-0.4.0/include/eigen3/Eigen/src/Core/Redux.h:202: static Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Derived, 3, 0>::run(const Derived&, const Func&) [with Func = Eigen::internal::scalar_sum_op<double>; Derived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar = double]: Assertion `size && ""you are using an empty matrix""' failed.; Aborted. The command I ran is:; salmon-0.4.0/src/salmon quant --index gencode.v22.index_0.4.0/ --mates1 <(gunzip -c r1_fq1.gz r1_fq2.gz --mates2 <(gunzip -c r2_fq1.gz r2_fq2.gz ) --output $OUTPUT_DIR --biasCorrect --threads 4 --geneMap gencode.v22.annotation.nochr.gtf --libType ""ISF"". If I remove the --biasCorrect flag, it runs without error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/5:621,Abort,Aborted,621,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5,1,['Abort'],['Aborted']
Safety,"I've found at least ~100 instances of identical RefSeq IDs that appear on more than one chromosome in the human genome reference. These are a mix of (I'm guessing) chrX/Y homologous genes, miRs, snoRNAs, and other long/short noncoding RNAs. This issue will also apply to genes appearing in genomic regions with sequence from multiple haplotypes (e.g. chr6_qbl_hap6, etc) since those also have identical RefSeq IDs. This is certainly bad practice for annotation purposes, but the consequence is that STAR effectively lumps the duplicates into one transcript model (e.g. 3 appearances of 68 bp miR means STAR annotates as one 204 bp gene), and salmon then finds a discrepancy during error modeling between the annotated and ""STAR-observed"" gene lengths, throwing a fatal error. One fix of course would be to remove duplicated sequences from the gene annotation prior to alignment with STAR, [or to have STAR deal with duplicated sequences differently](https://github.com/alexdobin/STAR/issues/482), but it might be nice to have some sort of check in place downstream as well to avoid failure.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/282:1076,avoid,avoid,1076,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282,1,['avoid'],['avoid']
Safety,ISSUE: Number of genes detected in a single cell,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/120:23,detect,detected,23,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120,1,['detect'],['detected']
Safety,Is it okay to use the assembled MAGs' *fna DNA reads to map on its corresponding prodigal predicted gene *faa protein sequences?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/792:90,predict,predicted,90,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/792,1,['predict'],['predicted']
Safety,"It would be nice to not have to know/specify the 10X chemistry (`gemcode`, `chromium`, and `chromiumV3`). Cell Ranger [does this](https://kb.10xgenomics.com/hc/en-us/articles/115003764132-How-does-cellranger-count-auto-detect-chemistry-) by checking the fraction of barcodes that overlap the whitelist for each version. Another possibility could be by just checking the total length of the BC+UMI ([v3](https://assets.ctfassets.net/an68im79xiti/51xGuiJhVKOeIIceW88gsQ/1db2c9b5c9283d183ff4599fb489a720/CG000183_ChromiumSingleCell3__v3_UG_Rev-A.pdf) is 16+12, [v2](https://assets.ctfassets.net/an68im79xiti/UhAMGmlaEMmYMaA4A4Uwa/d65ff7b9bb5e88c2bb9e15e58f280e18/CG00052_SingleCell3_ReagentKitv2UserGuide_RevE.pdf) is 16+10, [v1](https://assets.ctfassets.net/an68im79xiti/4z5JA3C67KOyCE2ucacCM6/d05ce5fa3dc4282f3da5ae7296f2645b/CG00022_GenomeReagentKitUserGuide_RevC.pdf) is 16+?).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/364:219,detect,detect-chemistry,219,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/364,1,['detect'],['detect-chemistry']
Safety,Libtype auto not detecting correct type?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/393:17,detect,detecting,17,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/393,1,['detect'],['detecting']
Safety,No bug - How to explain Salmon workflow simply ? (avoid mathematics-heavy explanation),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/926:50,avoid,avoid,50,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/926,2,['avoid'],['avoid']
Safety,"On the system I'm trying to install Salmon 0.4.2 on, downloading from `ftp://` is blocked for security reasons. Therefore, the automagic download the Jellyfish 2.1.3 source tarball fails. I tried adjusting the `CMakeLists.txt` files to use the latest Jellyfish 2.2.3 instead, but this leads to an issue with a Jellyfish include file not being found:. ```; checking whether we are using the GNU C compiler... In file included from /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/11:680,abort,aborted,680,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11,1,['abort'],['aborted']
Safety,Orphan recovery option in rare cases causes Salmon to quit abruptly without error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:7,recover,recovery,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['recover'],['recovery']
Safety,Salmon quant with --recoverOrphans fails without warning,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:20,recover,recoverOrphans,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,1,['recover'],['recoverOrphans']
Safety,Suggestions on --recoverOrphans,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/959:17,recover,recoverOrphans,17,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/959,1,['recover'],['recoverOrphans']
Safety,"The CMakeLists.txt refuses to handle anything except GNU and Clang compilers. It should be easy to support Intel as well since it understands most/all(?) GNU compiler flags. CMAKE will report the compiler type as ""Intel"" and [C++11 is supported from 14.0 and forward](https://software.intel.com/en-us/articles/c0x-features-supported-by-intel-c-compiler). My rough wip to get this building uses the following:. ```; diff --git a/CMakeLists.txt b/CMakeLists.txt; index c95f755..30f1223 100755; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -118,8 +118,30 @@ elseif (""${CMAKE_CXX_COMPILER_ID}"" MATCHES ""Clang""); else(); set (PTHREAD_LIB ""pthread""); endif(); +elseif (""${CMAKE_CXX_COMPILER_ID}"" MATCHES ""Intel""); + execute_process(; + COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE INTEL_VERSION); + if (NOT (INTEL_VERSION VERSION_GREATER 14.0 OR INTEL_VERSION VERSION_EQUAL 14.0)); + message(FATAL_ERROR ""${PROJECT_NAME} requires intel 14.0 or greater. Found ${INTEL_VERSION}""); + endif (); +; + set (INTEL TRUE); + set (PTHREAD_LIB ""pthread""); + set (CMAKE_CXX_FLAGS ""-pthread -funroll-loops -fPIC -fomit-frame-pointer -Ofast -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -std=c++11 -Wreturn-type -Werror=return-type""); +; + # If we're on Linux (i.e. not OSX) and we're using ; + # gcc, then set the -static-libstdc++ flag; + if (NOT APPLE) ; + set (CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -static-libstdc++""); + endif(); +; + set (WARNING_IGNORE_FLAGS ""${WARNING_IGNORE_FLAGS} -Wno-unused-local-typedefs""); + set (BOOST_TOOLSET ""intel""); + set (BOOST_CONFIGURE_TOOLSET ""--with-toolset=gcc""); + set (BCXX_FLAGS ""-std=c++11""); + set (BOOST_EXTRA_FLAGS toolset=gcc cxxflags=${BCXX_FLAGS}); else (); - message(FATAL_ERROR ""Your C++ compiler does not support C++11.""); + message(FATAL_ERROR ""Your C++ compiler (${CMAKE_CXX_COMPILER_ID}) does not support C++11.""); endif (). ## TODO: Figure out how to detect this automatically; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/9:1896,detect,detect,1896,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/9,1,['detect'],['detect']
Safety,"This came up in #336. When building a gencode-based index with `salmon index` without the `--gencode` flag, the index that is generated won't work when subsequently running e.g. `salmon alevin`. This can be a pain to figure out the mistake (missing `--gencode` flag). Perhaps some sort of quick grep of the index file name for `'gencode'` or within the file for multiple `'|'`s (used for gencode field separator but not ensembl) should be done to check if it's gencode followed by a warning/error if the --gencode flag is missing? Another possibility could be to just auto-detect if the index is gencode using the above tests, removing the need for the `--gencode` flag. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/366:573,detect,detect,573,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/366,1,['detect'],['detect']
Safety,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/276:479,timeout,timeout,479,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276,2,['timeout'],['timeout']
Safety,"Version Info Exception: server did not respond before timeout; Logs will be written to /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2/logs; [2023-06-19 16:31:27.810] [jointLog] [info] setting maxHashResizeThreads to 12; [2023-06-19 16:31:27.811] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2023-06-19 16:31:27.814] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-06-19 16:31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/lab",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/853:54,timeout,timeout,54,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853,1,['timeout'],['timeout']
Safety,"Wicked fast indeed! Are there any plans to extend salmon to also detect gene fusion events? There isn't a fast and accurate way to do that yet, only approaches requiring full alignments. Most often a base-perfect breakpoint isn't required, an estimate within a hash length is fine. We are a heavy user of bcbio and are also running the full STAR alignment just for gene fusions, which really sucks. Any ideas would be much appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/52:65,detect,detect,65,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52,1,['detect'],['detect']
Safety,[Alevin] Feature Request: auto detect 10X chemistry,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/364:31,detect,detect,31,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/364,1,['detect'],['detect']
Safety,"\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousands-of-live-salmon-fell-off-a-truck-in-oregon-and-into-a-creek/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:2580,recover,recoverOrphans,2580,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,4,['recover'],"['recover', 'recoverOrphans']"
Safety,"_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam"", fasta = ""a; ll_transcripts.fa"" . . .done; [2021-03-05 18:20:24.846] [jointLog] [info] replaced 1216 non-ACGT nucleotides with random nucleotides; processed 0 reads in current round[2021-03-05 18:20:25.180] [jointLog] [info] Automatically detected most likely library type as ISR; processed 3000000 reads in current round[2021-03-05 18:20:39.705] [jointLog] [info]; The alignment group queue pool has been exhausted. 7187672 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated; processed 12000000 reads in current round; processed 21000000 reads in current round; processed 29000000 reads in current round; processed 38000000 reads in current round; processed 47000000 reads in current round; processed 56000000 reads in current round; processed 57000000 reads in current round/var/spool/slurmd/job599153/slurm_script: line 102: 17542 Segmentation fault singularity exec --bind $TMPDIR:/tmp,/groups:/groups,/work:/work /groups/arcsingularity/salmon_1.4.0.sif salmon quant -t all_transcripts.fa -l A -p 10 -a $in_FILES -o $outdir.salmon_quant. Salmon does not quantify transcript expression. I would appreciate any suggestions.; Thanks, Ina",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/638:2338,detect,detected,2338,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638,1,['detect'],['detected']
Safety,"ading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 2.8044 ms; -----------------------------------------. [2023-11-30 09:37:51.026] [jointLog] [info] done; [2023-11-30 09:37:51.104] [jointLog] [info] Index contained 253166 targets; [2023-11-30 09:37:51.166] [jointLog] [info] Number of decoys : 194; [2023-11-30 09:37:51.166] [jointLog] [info] First decoy index : 252924 ; [2023-11-30 09:37:54.100] [jointLog] [info] Automatically detected most likely library type as ISR. [2023-11-30 09:38:33.382] [jointLog] [info] Thread saw mini-batch with a maximum of 3.76% zero probability fragments; [2023-11-30 09:38:33.406] [jointLog] [info] Computed 12939 rich equivalence classes for further processing; [2023-11-30 09:38:33.407] [jointLog] [info] Counted 268744 total reads in the equivalence classes ; [2023-11-30 09:38:33.414] [jointLog] [info] Number of mappings discarded because of alignment score : 148747; [2023-11-30 09:38:33.414] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 75092; [2023-11-30 09:38:33.414] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 67912; [2023-11-30 09:38:33.414] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 46918; [2023-11-30 09:38:33.436] [jointLog] [warning] Only 268744 fragments were mapped, but the number of burn-in fragments was set to ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:7995,detect,detected,7995,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['detect'],['detected']
Safety,"ads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] There is 1 library.; [2020-09-05 13:51:07.828] [jointLog] [info] Loading pufferfish index; [2020-09-05 13:51:07.876] [jointLog] [info] Loading dense pufferfish index.; [2020-09-05 13:51:49.487] [jointLog] [info] done; [2020-09-05 13:51:49.551] [jointLog] [info] Index contained 228,754 targets; [2020-09-05 13:51:50.523] [jointLog] [info] Number of decoys : 0; [2020-09-05 13:52:00.312] [jointLog] [info] Automatically detected most likely library type as SR; [2020-09-05 17:53:49.009] [jointLog] [info] Thread saw mini-batch with a maximum of 2.00% zero probability fragments; [2020-09-05 17:53:51.128] [jointLog] [info] Computed 344,342 rich equivalence classes for further processing; [2020-09-05 17:53:51.128] [jointLog] [info] Counted 20,897,706 total reads in the equivalence classes ; [2020-09-05 17:53:51.133] [jointLog] [info] Number of mappings discarded because of alignment score : 116,214,502; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 1,428,490; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0; [2020-09-05 17:53:51.133] [jointLog] [info] Mapping rate = 40.8004%. [2020-09-05 17:53:51.133] [jointLog] [info] finished quantifyLibr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/571:2416,detect,detected,2416,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571,1,['detect'],['detected']
Safety,"ads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing read library format; [2020-06-13 02:34:43.686] [jointLog] [info] There is 1 library.; [2020-06-13 02:34:43.738] [jointLog] [info] Loading pufferfish index; [2020-06-13 02:34:43.738] [jointLog] [info] Loading dense pufferfish index.; [2020-06-13 02:34:45.327] [jointLog] [info] done; [2020-06-13 02:34:45.327] [jointLog] [info] Index contained 117,135 targets; [2020-06-13 02:34:45.346] [jointLog] [info] Number of decoys : 0; [2020-06-13 02:35:35.911] [jointLog] [info] Automatically detected most likely library type as IU; [2020-06-13 06:56:12.646] [fileLog] [info] ; At end of round 0; ==================; Observed 28512328 total fragments (28512328 in most recent round). [2020-06-13 06:56:12.645] [jointLog] [info] Computed 348,024 rich equivalence classes for further processing; [2020-06-13 06:56:12.645] [jointLog] [info] Counted 12,990,838 total reads in the equivalence classes ; [2020-06-13 06:56:12.989] [jointLog] [warning] 0.0736383% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 1. [2020-06-13 06:56:12.989] [jointLog] [info] Number of mappings discarded because of alignment score : 19,645,245,772; [2020-06-13 06:56:12.989] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 2,436,564; [2020-06-13 06:56:12.989] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2020-06-13",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537:2486,detect,detected,2486,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537,1,['detect'],['detected']
Safety,"air<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion `table' failed. Aborted; ```. head of fasta file:. ```; >uc001aaa.3_intron_0_0_chr1_12228_f| chr1:12227-12612; GTAAGTAGTGCTTGTGCTCATCTCCTTGGCTGTGATACGTGGCCGGCCCTCGCTCCAGCAGCTGGACCCCTACCTGCCGTCTGCTGCCATCGGAGCCCAAAGCCGGGCTGTGACTGCTCAGACCAGCCGGCTGGAGGGAGGGGCTCAGCAGGTCTGGCTTTGGCCCTGGGAGAGCAGGTGGAAGATCAGGCAGGCCATCGCTGCCACAGAACCCAGTGGATTGGCCTAGGTGGGATCTCTGAGCTCAACAAGCCCTCTCTGGGTGGTAGGTGCAGAGACGGGAGGGGCAGAGCCGCAGGCACAGCCAAGAGGGCTGAAGAAATGGTAGAACGGAGCAGCTGGTGATGTGTGGGCCCACCGGCCCCAGGCTCCTGTCTCCCCCCAG; >uc001aaa.3_intron_1_0_chr1_12722_f| chr1:12721-13220; GTGAGAGGAGAGTAGACAGTGAGTGGGAGTGGCGTCGCCCCTAGGGCTCTACGGGGCCGGCGTCTCCTGTCTCCTGGAGAGGCTTCGATGCCCCTCCACACCCTCTTGATCTTCCCTGTGATGTCATCTGGAGCCCTGCTGCTTGCGGTGGCCTATAAAGCCTCCTAGTCTGGCTCCAAGGCCTGGCAGAGTCTTTCCCAGGGAAAGCTACAAGCAGCAAACAGTCTGCATGGGTCATCCCCTTCACTCCCAGCTCAGAGCCCAGGCCAGGGGCCCCCAAGAAAGGCTCTGGTGGAGAACCTGTGCATGAAGGCTGTCAACCAGTCCATAGGCAAGCCTGGCTGCCTCCAGCTGGGTCGACAGACAGGGGCTGGAGAAGGGGAGAAGAGGAAAGTGAGGTTGCCTGCCCTGTCTCCTACCTGAGGCTGAGGAAGGAGAAGGGGATGCACTGTTGGGGAGGCAGCTGTAA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/53:3175,Abort,Aborted,3175,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53,1,['Abort'],['Aborted']
Safety,automatic library type detection infers correct orientation but still includes other reads for quantification,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/489:23,detect,detection,23,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/489,1,['detect'],['detection']
Safety,"cessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:6687,avoid,avoid,6687,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,1,['avoid'],['avoid']
Safety,"d.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] [stderrLog] [info] Done loading index; [2019-08-27 11:44:23.916] [jointLog] [info] done; [2019-08-27 11:44:23.916] [jointLog] [info] Index contained 583,596 targets. processed 978,500,000 fragments; hits: 2,484,589,998, hits per frag: 2.53933terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted. ```. **Desktop (please complete the following information):**; - OS: RHEL 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/426:3601,Abort,Aborted,3601,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426,1,['Abort'],['Aborted']
Safety,"e upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-051/job_scripts/9987275: line 31: 41232 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:23981,Abort,Aborted,23981,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['Abort'],['Aborted']
Safety,"ecommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-17 07:46:19.488] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 0; [2023-03-17 07:46:19.488] [jointLog] [info] Mapping rate = 80.5964%. [2023-03-17 07:46:19.488] [jointLog] [info] finished quantifyLibrary(); [2023-03-17 07:46:19.489] [jointLog] [info] Starting optimizer; [2023-03-17 07:46:20.246] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-03-17 07:46:20.304] [jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:8301,detect,detected,8301,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['detect'],['detected']
Safety,"f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:3069,recover,recoverOrphans,3069,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['recover'],['recoverOrphans']
Safety,"g Salmon v1.2.0 which was build from source and is run on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. In addition, I am only using trimmed paired-end reads of 100bp. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/523:1012,recover,recoverOrphans,1012,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/523,1,['recover'],['recoverOrphans']
Safety,"g contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 21.142 ms; -----------------------------------------; [2024-11-01 05:14:22.991] [jointLog] [info] done; [2024-11-01 05:14:23.016] [jointLog] [info] Index contained 252,149 targets. [2024-11-01 05:14:24.607] [jointLog] [info] Number of decoys : 194; [2024-11-01 05:14:24.607] [jointLog] [info] First decoy index : 251,913 ; [2024-11-01 05:14:29.425] [jointLog] [info] Automatically detected most likely library type as ISR. [A. [32mprocessed[31m 500,000 [32mfragments[0m; hits: 216,939, hits per frag: 0.43692[A. [32mprocessed[31m 1,000,000 [32mfragments[0m; hits: 435,436, hits per frag: 0.442697[A. [32mprocessed[31m 1,500,000 [32mfragments[0m; hits: 654,611, hits per frag: 0.438092[A. [32mprocessed[31m 2,000,000 [32mfragments[0m; hits: 857,321, hits per frag: 0.431748[A. [32mprocessed[31m 2,500,000 [32mfragments[0m; hits: 1,074,298, hits per frag: 0.432761[A. [32mprocessed[31m 3,000,000 [32mfragments[0m; hits: 1,284,332, hits per frag: 0.42818[A. [32mprocessed[31m 3,500,000 [32mfragments[0m; hits: 1,498,233, hits per frag: 0.429293[A. [32mprocessed[31m 4,000,000 [32mfragments[0m; hits: 1,711,798, hits per frag: 0.430057[A. [32mprocessed[31m 4,500,000 [32mfragments[0m; hits: 1,922,074, hits per frag: 0.428288[A. [32mprocessed[31m 5,000,000 [32mfragments[0m; hits: 2,141,874, hits per frag: 0.429173[A. [32mprocessed[31m 5,500,000 [32mfragments[0m; hits: 2,357,668, hits ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:4507,detect,detected,4507,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['detect'],['detected']
Safety,"g] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.6252%. [2017-08-02 14:41:46.432] [jointLog] [info] finished quantifyLibrary(); [2017-08-02 14:41:46.446] [jointLog] [info] Starting optimizer; [2017-08-02 14:41:46.508] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-08-02 14:41:46.510] [jointLog] [info] iteration = 0 | max rel diff. = 2.50175; [2017-08-02 14:41:46.521] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) /home/ngs/programs/salmon/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i ""$path_dr_salmonindex_transcriptome_ercc"" -o ""$newfilename-salmon-quant"" -g ""$path_dr_gtf"" -l ""U"" -p 1 --fldMax 50 --fldMean 43 --seqBias --numBootstraps 10 -r <(zcat $1). ```; </details>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:3216,Abort,Aborted,3216,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['Abort'],['Aborted']
Safety,geneMap doesn't detect GFF3,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/114:16,detect,detect,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/114,1,['detect'],['detect']
Safety,"gth less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-12-24 17:32:57.126] [puff::index::jointLog] [critical] The decoy file contained the names of 52 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2021-12-24 17:32:57.224] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **Expected behavior**; I followed the instructions, I don't think I should be getting this error?; I don't understand why I have only 52 decoys (basically the whole genome), and why zero were matched in the reference file provided. . If I look in `gentrome.fa` I do find the decoys; ```; zgrep ""chr8"" /no_backup/indexes/salmon/mm10/gentrome.fa ; >chr8; ```; I do not want to retain duplicated transcripts so the `--keepDuplicates` flag is something I would want to avoid. **Desktop (please complete the following information):**. ```; uname -a; Linux ant-login6.linux.crg.es 3.10.0-514.16.1.el7.x86_64 #1 SMP Wed Apr 12 07:10:20 CDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 7.2 (Nitrogen); Release:	7.2; Codename:	Nitrogen; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731:4376,avoid,avoid,4376,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731,1,['avoid'],['avoid']
Safety,"hi, I am running Salmon-1.2.1 on my MacBook with Sierra 10.13.6. I try to run Salmon binary with terminal, and I get this error. How'd do solve this problem? . Last login: Sat May 2 23:14:08 on ttys007; /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; Maysons-MacBook-Air:~ maysonlin$ /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; dyld: Library not loaded: @rpath/libtbbmalloc.dylib; Referenced from: /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/bin/salmon; Reason: image not found; Abort trap: 6; logout; Saving session...; ...copying shared history...; ...saving history...truncating history files...; ...completed. [Process completed]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/517:544,Abort,Abort,544,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517,1,['Abort'],['Abort']
Safety,"installed (compiled, downloaded executable, through bioconda)? **package installation via Debian**; * Which reference (e.g. transcriptome) was used? **transcriptome**; * Which read files were used? **NovaSeq X Plus; read length 150bp x 2; untrimmed **; * Which which program options were used?. ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_${sampleName};; done; ```. Making Salmon less stringent:; ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --minScoreFraction 0.33 --recoverOrphans \; --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_MS0.33_${sampleName};; done; ```. **Expected behavior**. Documentation that has a good explanation of the parameters in the metadata file, sufficient to explain why Salmon mapping rates are different from other programs, and why it's common to see mapping rates below 80% (e.g. [here](https://github.com/COMBINE-lab/salmon/issues/661#issuecomment-850540604), where a mapping rate of 63% is apparently acceptable). Consider the following statistics (in `meta_info.json`):. ```; $ grep -A 7 'num_processed' mapped/salmon_MS*001_*/aux_info/meta*.json; ""num_processed"": 39191989,; ""num_mapped"": 16720284,; ""num_decoy_fragments"": 3376529,; ""num_dovetail_fragments"": 5188759,; ""num_fragments_filtered_vm"": 3487789,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 3046512,; ""percent_mapped"": 42.6625043194414,; ""call"": ""quant"",; ```. The numbers from `unmapped_names.txt` are as follows:. ```; $ awk '{print $2}' mapped/salmon_MS0.33_AG1232_001_MR1/aux_info/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/925:5881,recover,recoverOrphans,5881,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925,1,['recover'],['recoverOrphans']
Safety,"ions^M^Mprocessed 281000000 positions^M^Mprocessed 282000000 positions^M^Mprocessed 283000000 positions^M^Mprocessed 284000000 positions^M^Mprocessed 285000000 positions^M^Mprocessed 286000000 positions^M^Mprocessed 287000000 positions^M^Mprocessed 288000000 positions^M^Mprocessed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 12.6069s; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. It would be more interesting to see what filename is used for the index. Showing the ""basename"" of the index file is not very helpful. I would prefer to see the filename(s) on the beginning and end lines:. ```; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; ...; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromPacked] 20 iterations done. 164630980 characters processed.; [BWTIncConstructFromPacked",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:13262,predict,predicted,13262,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['predict'],['predicted']
Safety,"isabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:2497,Detect,Detecting,2497,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['Detect'],['Detecting']
Safety,"ise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:2225,recover,recoverOrphans,2225,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['recover'],['recoverOrphans']
Safety,libc++abi: terminating ; zsh: abort. I got this on Terminal while trying to run Salmon program.; I installed Salmon via conda so I have the 10.3,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/939:30,abort,abort,30,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/939,1,['abort'],['abort']
Safety,"mples that have worked with Cell Ranger. I recompiled the program with `-DCMAKE_BUILD_TYPE=Debug` and have attached the output and gdb backtrace. There is roughly 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:1159,safe,safe,1159,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['safe'],['safe']
Safety,"nd, as it's really just a shot in the dark and from my preliminary analysis of Salmon, different parameters can drastically change the proportions of the two versions). . As you can see below, I have tried some parameter settings that I thought would be helpful (particularly ```--quasiCoverage```). But again I could be wrong and would like to know your opinions in the matter. . These runs were all performed with this 'default' run: ; ```; salmon quant -i index -l A -1 reads_1.fq -2 reads_2.fq --validateMappings -p 20 --numPreAuxModelSamples 250 --numAuxModelSamples 1000 -o output ; ```; I changes the ```AuxModelSamples``` to low values as I was generally only mapping 6000 reads to the two transcripts in total, so I didn't think they were working at the default settings. Below is also a small chart of some of my runs (which included quasi-mapping and selective-alignment), but what you can get is that there is a large variance between parameters. Particularly ```--seqBias``` showed a dramatic drop in predicted T - 2 transcripts. ![image](https://user-images.githubusercontent.com/29610303/61421680-5899aa00-a8c5-11e9-8349-bd708316599d.png). Any suggestions onto parameters settings to help me with this narrow question?. Now onto some questions regarding some outputs. 1. I run into a segmentation fault (core dumped) when I try to run the experimental ```--posBias```. I am new to RNAseq, but I thought this might help with this particular RNAseq set as it was a PolyA tail selection and when mapping to the full genome there is an observed heavy mapping to exon 1 with decreased mapping over exon 2, 3 and 4. . 2. During my runs I have been using ```-l A``` as I will be using this method in my script so that Salmon can just select the best libtype based on the given sequence to help make my script less complex. However, I found something strange when I used ```-l A``` on my test sequence. I got a warning of >1% strand bias on the command line and in the lib_format_counts.json I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/401:2926,predict,predicted,2926,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401,1,['predict'],['predicted']
Safety,"nfo] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion table' failed.; Aborted; ```. I also checked the log file and it shows nothing except. ```; more indexing.log; [2016-03-17 10:41:34.655] [jointLog] [info] building index; ```. output:. ```; -rw-r--r-- 1 vdas DPT 59 Mar 17 10:41 indexing.log; -rw-r--r-- 1 vdas DPT 331863951 Mar 17 10:42 rsd.bin; -rw-r--r-- 1 vdas DPT 2654912013 Mar 17 10:43 txpInfo.bin; -rw-r--r-- 1 vdas DPT 21239292320 Mar 17 10:59 sa.bin; ```. So can you give me a workaround or inputs to solve this issue? Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/49:2879,Abort,Aborted,2879,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49,1,['Abort'],['Aborted']
Safety,"ng set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.84% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.00% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.92% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.84% zero probabi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:1967,detect,detected,1967,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,1,['detect'],['detected']
Safety,ngle-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ mates1 ] => { data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq }; ### [ mates2 ] => { data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq }; ### [ dropseq ] => { }; ### [ threads ] => { 10 }; ### [ output ] => { mSpT3 }; ### [ index ] => { mouse_cdna }; ### [ tgMap ] => { biomart.csv }. [2018-08-29 11:26:45.317] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-29 11:26:45.325] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 18 Million barcodes. [2018-08-29 11:28:11.683] [alevinLog] [info] Done barcode density calculation.; [2018-08-29 11:28:11.683] [alevinLog] [info] # Barcodes Used: 18693290 / 18712858.; [2018-08-29 11:28:17.405] [alevinLog] [info] Knee found left boundary at 2385 ; [2018-08-29 11:28:19.290] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-08-29 11:28:19.290] [alevinLog] [info] Learned InvCov: 568.346 normfactor: 688.271; [2018-08-29 11:28:19.290] [alevinLog] [info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [inf,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:2401,Predict,Prediction,2401,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,2,"['Predict', 'predict']","['Prediction', 'prediction']"
Safety,"ock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:06:31.513] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:06:31.513] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] . The alignment group queue pool has been exhausted. 1955 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:7635,detect,detected,7635,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['detect'],['detected']
Safety,"on fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:1207,recover,recoverOrphans,1207,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,2,['recover'],['recoverOrphans']
Safety,"ormat; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.432] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.469] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.513] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.582] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.605] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:2753,detect,detected,2753,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,1,['detect'],['detected']
Safety,"p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlac",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:1482,timeout,timeout,1482,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['timeout'],['timeout']
Safety,"patibility prior below threshold. Incompatible fragments will be ignored.; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-03-03 07:14:59.272] [jointLog] [info] parsing read library format; [2019-03-03 07:14:59.272] [jointLog] [info] There is 1 library.; [2019-03-03 07:14:59.329] [jointLog] [info] Loading Quasi index; [2019-03-03 07:14:59.329] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 07:15:12.564] [jointLog] [info] done; [2019-03-03 07:15:12.564] [jointLog] [info] Index contained 66,004 targets; [2019-03-03 07:15:14.824] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 07:16:36.263] [jointLog] [info] Thread saw mini-batch with a maximum of 89.90% zero probability fragments; [2019-03-03 07:16:36.295] [jointLog] [info] Thread saw mini-batch with a maximum of 89.70% zero probability fragments; [2019-03-03 07:16:36.305] [jointLog] [info] Thread saw mini-batch with a maximum of 88.36% zero probability fragments; [2019-03-03 07:16:36.311] [jointLog] [info] Thread saw mini-batch with a maximum of 90.16% zero probability fragments; [2019-03-03 07:16:36.341] [jointLog] [info] Thread saw mini-batch with a maximum of 26.54% zero probability fragments; [2019-03-03 07:16:36.391] [jointLog] [info] Computed 58,867 rich equivalence classes for further processing; [2019-03-03 07:16:36.391] [jointLog] [info] Counted 16,837,807 total reads in the equivalence classes; [2019-03-03 07:16:36.402] [jointLog] [warning] 0.00371007% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, conside",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:8405,detect,detected,8405,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['detect'],['detected']
Safety,q//sample.fastq }; ### [ mates1 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/CB_UMI//sample.fastq }; ### [ index ] => { /mnt/beegfs/alexmascension/STAR//hg38/salmon_index/ }; ### [ threads ] => { 40 }; ### [ output ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample }; ### [ end ] => { 5 }; ### [ barcodeLength ] => { 16 }; ### [ umiLength ] => { 10 }; ### [ dumpUmiGraph ] => { }; ### [ tgMap ] => { /mnt/beegfs/alexmascension/STAR//hg38/dict_transcript_gene.tsv }. [2019-06-23 18:08:02.553] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 107 Million barcodes. [2019-06-23 18:11:30.689] [alevinLog] [info] Done barcode density calculation.; [2019-06-23 18:11:30.689] [alevinLog] [info] # Barcodes Used: 105189924 / 107347363.; [2019-06-23 18:11:34.706] [alevinLog] [info] Knee found left boundary at 184 ; [2019-06-23 18:11:52.364] [alevinLog] [warning] Gauss Prediction 13594 Too far from knee prediction skipping it; [2019-06-23 18:11:52.364] [alevinLog] [info] Learned InvCov: 254.933 normfactor: 13034.5; [2019-06-23 18:11:52.364] [alevinLog] [info] Total 384(has 200 low confidence) barcodes; [2019-06-23 18:11:52.383] [alevinLog] [info] Done True Barcode Sampling; [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] Th,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:4058,Predict,Prediction,4058,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,2,"['Predict', 'predict']","['Prediction', 'prediction']"
Safety,"quences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during index ing. Further details can be found at https://salmon.readthedocs.io/en/latest/sal mon.html#preparing-transcriptome-indices-mapping-based-mode.; [2022-08-22 15:07:03.860] [jLog] [info] building index; out : transcripts_index; [2022-08-22 15:07:03.860] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers. [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Replaced 0 non-ATCG nuc leotides; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Clipped poly-A tails fr om 0 transcripts; wrote 0 cleaned references; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Filter size not provide d; estimating from number of distinct k-mers; [2022-08-22 15:07:03.866] [puff::index::jointLog] [info] ntHll estimated 47270 d istinct k-mers, setting filter size to 2^20; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1048576; Capacity = 2; Files:; transcripts_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1048576; Pass Filling Filtering; terminate called without an active exception; Aborted (core dumped). **To Reproduce**; Steps and data to reproduce the behavior:; salmon index -t contigs_for_salmon -i transcripts_index -k 31; my reads are paired end RNA-reads (rRNA REMOVED); My transcriptome is a 90 contigs resulted from reads assembly; Specifically, please provide at least the following information:. * Which version of salmon was used?; * ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?; 1.9.0 (latest). **Expected behavior**; use salmon index for Preparing transcriptome indices. **Desktop (please complete the following information):**; - OS: ubuntu 20.04.4 LTS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/795:1575,Abort,Aborted,1575,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795,1,['Abort'],['Aborted']
Safety,"reenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:2052,recover,recoverOrphans,2052,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['recover'],['recoverOrphans']
Safety,"roduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/677:1703,recover,recoverOrphans,1703,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677,1,['recover'],['recoverOrphans']
Safety,"roduce**; Using salmon v0.11.3, installed via conda; Reference index obtained from GENCODE mm10 assembly. Steps and data to reproduce the behavior:; salmon alevin -l ISR -1 neuron_10k_v3_S1_L001_R1_001.fastq.gz neuron_10k_v3_S1_L002_R1_001.fastq.gz -2 neuron_10k_v3_S1_L001_R2_001.fastq.gz neuron_10k_v3_S1_L002_R2_001.fastq.gz --chromium -i map_index -p 8 -o output_10 --tgMap txp2gene.tsv --dumpCsvCounts. **Shell output** ; [2018-11-29 22:24:41.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-29 22:24:41.283] [alevinLog] [info] Processing barcodes files (if Present). processed 178 Million barcodes. [2018-11-29 22:28:03.040] [alevinLog] [info] Done barcode density calculation.; [2018-11-29 22:28:03.040] [alevinLog] [info] # Barcodes Used: 178139795 / 178174830.; [2018-11-29 22:28:08.333] [alevinLog] [info] Knee found left boundary at 11347; [2018-11-29 22:28:16.264] [alevinLog] [warning] Gauss Prediction 11502 Too far from knee prediction skipping it; [2018-11-29 22:28:16.264] [alevinLog] [info] Learned InvCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324:1227,Predict,Prediction,1227,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324,2,"['Predict', 'predict']","['Prediction', 'prediction']"
Safety,s will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-12 21:01:31.330] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 141 Million barcodes. [2018-06-12 21:08:38.126] [alevinLog] [info] Done barcode density calculation.; [2018-06-12 21:08:38.126] [alevinLog] [info] # Barcodes Used: 140111660 / 141062078.; [2018-06-12 21:08:42.014] [alevinLog] [info] Knee found left boundary at 127 ; [2018-06-12 21:08:55.712] [alevinLog] [warning] Gauss Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237:2506,Predict,Prediction,2506,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237,2,"['Predict', 'predict']","['Prediction', 'prediction']"
Safety,"s/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52:41.666] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:52:41.668] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:52:42.565] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:52:43.137] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:52:43.276] [jointLog] [info] . The alignment group queue pool has been exhausted. 1759 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 25000000 reads in current roundSegmentation fault (core dumped). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:9747,detect,detected,9747,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['detect'],['detected']
Safety,"s; LOC_Os01g01010.1 3017 250 28.8836 527.392; LOC_Os01g01010.2 2218 250 1.84062 33.6083; LOC_Os01g01019.1 1127 250 0.0547668 1; LOC_Os01g01030.1 2464 250 4.43611 81; LOC_Os01g01040.4 1524 250 0.941635 17.1935; LOC_Os01g01040.1 2508 250 11.5632 211.135; LOC_Os01g01040.2 2482 250 8.02081 146.454; LOC_Os01g01040.3 2583 250 8.55554 156.218; LOC_Os01g01050.1 2039 250 17.2333 314.667. ### The counted total reads, observed total fragments, and the mapping rate is similar for all samples for both the raw-dat and the trimmed reads.; [2019-03-03 06:29:53.168] [jointLog] [info] parsing read library format; [2019-03-03 06:29:53.168] [jointLog] [info] There is 1 library.; [2019-03-03 06:29:53.224] [jointLog] [info] Loading Quasi index; [2019-03-03 06:29:53.224] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 06:30:02.239] [jointLog] [info] done; [2019-03-03 06:30:02.239] [jointLog] [info] Index contained 66153 targets; [2019-03-03 06:30:03.414] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 06:31:37.523] [fileLog] [info]; At end of round 0; ==================; Observed 18861231 total fragments (18861231 in most recent round). [2019-03-03 06:31:37.522] [jointLog] [info] Computed 48502 rich equivalence classes for further processing; [2019-03-03 06:31:37.522] [jointLog] [info] Counted 17308442 total reads in the equivalence classes; [2019-03-03 06:31:37.528] [jointLog] [info] Mapping rate = 91.7673%. [2019-03-03 06:31:37.528] [jointLog] [info] finished quantifyLibrary(). ### For version 0.12. This is similar across all samples:. Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250.000 30.539503 527.399; LOC_Os01g01010.2 2218 250.000 1.714089 29.601; LOC_Os01g01019.1 1127 250.000 0.057906 1.000; LOC_Os01g01030.1 2464 250.000 4.632473 80.000; LOC_Os01g01040.4 1524 250.000 0.842494 14.549; LOC_Os01g01040.1 2508 250.000 12.017881 207.542; LOC_Os01g01040.2 2482 250.000 8.005651 138.253; LOC_Os01g01040.3 2583 250.000 9.187142",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:6287,detect,detected,6287,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['detect'],['detected']
Safety,"same read files, but different most likely library type detected with different transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/840:56,detect,detected,56,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/840,1,['detect'],['detected']
Safety,"sh index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 325.83 us; -----------------------------------------; [2020-05-29 20:14:24.638] [jointLog] [info] done; [2020-05-29 20:14:24.638] [jointLog] [info] Index contained 57,190 targets; [2020-05-29 20:14:25.202] [jointLog] [info] Number of decoys : 0. processed 38,500,000 fragmentsntLog] [info] Automatically detected most likely library type as IU; hits: 40,221,178, hits per frag: 1.04508. **Desktop (please complete the following information):**; - OS:Ubuntu ; - Version 18.04. **Additional context**; Previously used salmon on this laptop and it was much much faster, that'ts the main reason I use salmon.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:4445,detect,detected,4445,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['detect'],['detected']
Safety,"single-cell mode)?**. Alevin. **Describe the bug**. Maybe more of a support request than a bug. . I've got some of what I suspect is lower-quality drop-seq data. Running Alevin with default parameters yields very low mapping rates, presumably because elbow-finding is failing. Here's the barcode rank plot, you can see why it's having trouble, you might see an elbow if you squint a bit. . ![Drop-seq](https://user-images.githubusercontent.com/5775915/57308423-3d006f00-70de-11e9-8c59-47e55d060035.png). I know from the source publication that we expect 278 cells in this case. . Supplying --expectCells yields the boundary error above. For this to work I need to break out the big guns and use --forceCells, yes? What I would really like is to try --expectCells first to allow Alevin to be a little bit intelligent, and if that fails to use --forceCells. Is that a sensible approach?. If so, could we a) have an informative error code on the boundary error above such that I can easily detect that error and re-submit with --forceCells, or b) if this is generically useful have a flag in Alevin to do it directly?. **To Reproduce**; Steps and data to reproduce the behavior:. - cDNA reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R2.fastq.gz; - barcode reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 12 }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362:1051,detect,detect,1051,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362,1,['detect'],['detect']
Safety,"tomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:12788,abort,abort,12788,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['abort'],['abort']
Safety,tput9/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ mates1 ] => { cDNA_Small_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { cDNA_Small_S1_L001_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 20 }; ### [ output ] => { alevin_output9 }; ### [ tgMap ] => { txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-06-30 22:10:28.044] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-30 22:10:28.048] [alevinLog] [info] Processing barcodes files (if Present). processed 17 Million barcodes. [2018-06-30 22:10:47.141] [alevinLog] [info] Done barcode density calculation.; [2018-06-30 22:10:47.141] [alevinLog] [info] # Barcodes Used: 17712582 / 17712585.; [2018-06-30 22:10:52.008] [alevinLog] [info] Knee found left boundary at 9447; [2018-06-30 22:10:52.498] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:1657,Predict,Prediction,1657,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,2,"['Predict', 'predict']","['Prediction', 'prediction']"
Safety,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:4454,safe,safe,4454,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['safe'],['safe']
Safety,"z --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins"": 4096,; ""mapping_type"": ""mapping"",; ""keep_duplicates"": false,; ""num_valid_targets"": 147493,; ""num_decoy_targets"": 61,; ""num_eq_classes"": 179681,; ""serialized_eq_classes"": false,; ""eq_class_properties"": [; ""range_factorized"",; ""gzipped""; ],; ""length_classes",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:2242,recover,recoverOrphans,2242,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['recover'],['recoverOrphans']
Security,"	maker	CDS	207304	207478	.	+	1	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	five_prime_utr	201136	201180	.	+	.	ID ""Bany_03723-RA:five_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype five_prime_UTR; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	three_prime_utr	207479	207903	.	+	.	ID ""Bany_03723-RA:three_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype three_prime_UTR; transcript_id ""Bany_03723-RA"" ; ```. The log report I got:; ```; [2020-06-03 23:42:18.303] [jointLog] [info] setting maxHashResizeThreads to 36; [2020-06-03 23:42:18.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-03 23:42:18.303] [jointLog] [info] parsing read library format; [2020-06-03 23:42:18.303] [jointLog] [info] There is 1 library.; [2020-06-03 23:42:18.445] [jointLog] [info] Loading pufferfish index; [2020-06-03 23:42:18.446] [jointLog] [info] Loading dense pufferfish index.; [2020-06-03 23:42:18.906] [jointLog] [info] done; [2020-06-03 23:42:18.907] [jointLog] [info] Index contained 29,658 targets; [2020-06-03 23:42:18.922] [jointLog] [info] Number of decoys : 0; [2020-06-03 23:47:07.075] [jointLog] [info] Computed 96,808 rich equivalence classes for further processing; [2020-06-03 23:47:07.075] [jointLog] [info] Counted 22,215,758 total reads in the equivalence classes ; [2020-06-03 23:47:07.131] [jointLog] [warning] 0.00138398% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size foun",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/530:3689,validat,validateMappings,3689,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530,1,['validat'],['validateMappings']
Security," ### [ mates1 ] => { IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/426:2250,validat,validateMappings,2250,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426,1,['validat'],['validateMappings']
Security," ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:6919,validat,validation,6919,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['validat'],['validation']
Security," (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:1080,validat,validateMappings,1080,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['validat'],['validateMappings']
Security," -p 12 was too much. 2. Since someone seemed to have a similar problem and would have tried changing the filter size next, I tried to change the filter size by adding --filterSize 2^39 (at the same time, I also added --keepDuplicates because I want to use the data to find differentially expressed isoforms later on). salmon index -t gentrome.fa.gz -d decoys.txt -p 6 --keepDuplicates --filterSize 2^39 -i salmon_index --gencode. However, this didn't work and got killed. . I thought it might be due to the --filterSize argument and changed it to 39 (because maybe the 2^ is assumed automatically and it needs only the number after ^ ). And this got killed, too:. salmon index -t gentrome.fa.gz -d decoys.txt -p 6 --filterSize 39 -i salmon_index --gencode. [2021-04-02 08:34:22.664] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotides; [2021-04-02 08:34:22.670] [puff::index::jointLog] [info] Clipped poly-A tails from 1,833 transcripts; wrote 233807 cleaned references; Threads = 6; Vertex length = 31; Hash functions = 5; Filter size = 549755813888; Capacity = 2; Files: ; salmon_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Killed. After that, I stopped experimenting and used the original code with only 6 threads. . salmon index -t gentrome.fa.gz -d decoys.txt -p 6 -i salmon_index --gencode. This seemed to be working fine and got to Round 0 without any problems.; It created the ""twopaco_tmp"" directory about 5 minutes after starting and created a ""bifurcations.bin"" inside this directory. However, 4 hours have passed, and neither the file nor the directory have any new modifications (and the file is still a staggering 0 bytes large). I also read that this will take quite a lot of memory, but there should be some TB left on the hard drive. I created a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/643:2447,Hash,Hash,2447,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643,1,['Hash'],['Hash']
Security," 16:06:46.615] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [info] Starting to make feature Matrix; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making regular featues; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making feature Matrix; [2019-01-29 16:06:46.871] [alevinLog] [info] Finished white listing; [2019-01-29 16:06:46.957] [alevinLog] [info] Finished optimizer; ```. ### no whitelist, expectCells 3000. ```; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minSc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:4545,validat,validateMappings,4545,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['validat'],['validateMappings']
Security," 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:3288,validat,validateMappings,3288,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['validat'],['validateMappings']
Security," => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:14883,validat,validateMappings,14883,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security," > ""seq_length"": 93512911756,; > ""have_ref_seq"": true,; > ""have_edge_vec"": false,; > ""SeqHash"": ""34c8b30e5d42a0d4459fb24e44ecef46af39893984bf9613001e925a7b1308b7"",; > ""NameHash"": ""b503f6a369add974e996e5f42942882b50c2bf1419400420255d32a88fb61a18"",; > ""SeqHash512"": ""4b94376c390dd8e917d39dfbaed1092d9a661dbdb67635863f9a14b129948f1244929faf60f5b7c1d6fae142d87fb2c66455f49d0d3663f7498b275efad4ed93"",; > ""NameHash512"": ""46c31c9178b3290b2f57e9b682ea8eebe885ba9037e48cb6b385a0c70ce13e2b259400bc9bda4aca912c3b857edde7de41d11b1a7b9ccbe8b24df77808c22e59"",; > ""DecoySeqHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""DecoyNameHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""num_decoys"": 0,; > ""first_decoy_index"": 18446744073709551607,; > ""keep_duplicates"": false; > }. And the command I used:. `/home/bayegy/pipelines/metagenome/softwares/salmon-latest_linux_x86_64/bin/salmon quant --validateMappings -i /media/bayegy/disk1/Projects/qianquan-zhangke/result/Assembly_out//salmon_index -l A -p 90 --meta -1 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_1.fastq.gz -2 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_2.fastq.gz -o /media/bayegy/disk1/Projects/qianquan-zhangke/result/salmon_out//YGSC11.quant`. Sometimes, salmon would stay at the step of ""Starting optimizer"" for hours(10 hours at least). The CPU utilization is 100%, but the procedure never move forward. > [2020-06-04 12:06:12.254] [jointLog] [info] Mapping rate = 91.8009%; > ; > [2020-06-04 12:06:12.254] [jointLog] [info] finished quantifyLibrary(); > [2020-06-04 12:06:12.254] [jointLog] [info] Starting optimizer. The funny thing is that salmon would pass this step in no time if I restart the procedure with same command. It is annoying that I have to check the log time to time to restart salmon when it get blocked. I wonder what is the possible reason for this and how can i st",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/532:1349,validat,validateMappings,1349,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/532,1,['validat'],['validateMappings']
Security," Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43.5974%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; -------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:3837,hash,hash,3837,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['hash'],['hash']
Security," Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished quantifyLibrary(); [2018-11-29 22:41:01.682] [alevinLog] [info] Starting optimizer. Analyzed 12346 cells (100% of all).; Skipped Barcodes are from High Confidence Region; Should not happen%. **Desktop (please complete the following information):**; - OS: macOS; - Version: 10.14.1. **Additional context**; This failure comes when analyzing data from the new 10X v3 chemistry. Initial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324:2667,hash,hash,2667,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324,1,['hash'],['hash']
Security," Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further processing; [2019-06-23 18:14:43.418] [jointLog] [info] Counted 5,043,781 total reads in the equivalence classes ; [2019-06-23 18:14:43.419] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-23 18:14:43.419] [jointLog] [warning] Found 494 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-06-23 18:14:43.419] [jointLog] [info] Mapping ra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:5622,hash,hash,5622,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['hash'],['hash']
Security," UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:2405,validat,validateMappings,2405,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['validat'],['validateMappings']
Security," Ubuntu server. here is my command as well as the STDOUT output:. ```; salmon quant -p 16 --biasCorrect --libType IU -i ~./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/65:1041,Hash,Hash,1041,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65,1,['Hash'],['Hash']
Security," [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468, hits per frag: 1.25316[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2492702, hits per frag: 1.24947[A. [32mprocessed[31m 2500000 [32mfragments[0m; hits: 3114558, hits per frag: 1.24832[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 3733674, hits per frag: 1.24664[A. [32mprocessed[31m 3500000 [32mfragments[0m; hits: 4356329, hits per frag: 1.24645[A. [32mprocessed[31m 4000000 [32mfragmen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:4034,hash,hash,4034,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['hash'],['hash']
Security," [info] Done indexing Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [info] Total Unique barcodes found: 5; [2019-06-04 15:58:27.594] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 15:58:27.617] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 15:58:27.617] [alevinLog] [info] parsing read library format; [2019-06-04 15:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragments; hits: 0, hits per frag: 0. [2019-06-04 15:58:42.486] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2019-06-04 15:58:42.487] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2019-06-04 15:58:42.487] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-04 15:58:42.508] [jointLog] [info] Mapping rate = 0%. [2019-06-04 15:58:42.508] [jointLog] [info]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:2731,hash,hash,2731,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,1,['hash'],['hash']
Security," [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [info] Index contained 58,086 targets; [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:5519,validat,validateMappings,5519,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['validat'],['validateMappings']
Security," [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR2173892/logs; [2021-07-16 11:47:01.807] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.807] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.807] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.807] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.807] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.807] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR1501367/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR1501367/quant.sf': No such file or directory",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:11059,validat,validateMappings,11059,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['validat'],['validateMappings']
Security," and built the index, which appeared to have executed successfully. Below is the trail of commands:. (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % conda install -c bioconda salmon. Building decoy aware index; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % grep ""^>"" ../rna_seq_trial/GRCh38.primary_assembly.genome.fa | cut -d "" "" -f -1 > decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % less decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % sed -i.bak -e 's/>//g' decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % cat ../rna_seq_trial/gencode.v43.transcripts.fa ../rna_seq_trial/GRCh38.primary_assembly.genome.fa > gentrome.fa; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. This results in successful building of the index. Then when I attempt a mapping based quantification for a paired end reads FW and RV, as below, I get therefor mentioned. salmon -i salmon_index -l A -1 $FW -2 $RV --validateMappings -o /Volumes/Ultra_Touch/malaria/Salmon/$FILEBASE/. The info.json file from the index folder has these contents:. {; ""index_version"": 4,; ""reference_gfa"": [; ""salmon_index""; ],; ""sampling_type"": ""dense"",; ""k"": 31,; ""num_kmers"": 2662886061,; ""num_contigs"": 37302977,; ""seq_length"": 3781975371,; ""have_ref_seq"": true,; ""have_edge_vec"": false,; ""SeqHash"": ""39d9ea9f308ee7e18cdb034c1d064c3a9722df115147533a2ec237fb7cecfca9"",; ""NameHash"": ""29a75bc06784c090e5e015d4a5a7e895b7b3d91c9855a10528ee0130377edf3d"",; ""SeqHash512"": ""4e84aa54ec0cb1dad420c66197d8a9485e913b0a60805f2d7e44ce71ad0521b8103cf94dad72e1530b05dc0d08f39e5d4b9225345d8e7ffc60cb5cf02fecadbd"",; ""NameHash512"": ""24684d713ef7ab8e5f3bb7b16203900f9695e938760961daa2fe3733d5385554d4c60d7edfbac88831d9c645154847ec77c11d4125d38fd76137706af399d481"",; ""DecoySeqHash"": ""b87b7a94564c31d78da407e60a0aeb310b2dbdb398e0ddb39392286aaf2fe88c"",; ""DecoyNameHash"": ""5fc84a462ccf4735efdc48604a520ee47e1319156c2a5c252f5daba1e99bb401"",; ""num_decoys"": 194,; ""first",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/851:1350,validat,validateMappings,1350,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/851,1,['validat'],['validateMappings']
Security," bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Can't find gene mapping for : PB.40054.21 w/ index 81766; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Txp to Gene Map not found for 52191 transcripts. Exiting; ```. What's wrong?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540:1488,validat,validateMappings,1488,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540,1,['validat'],['validateMappings']
Security," different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. In addition, I am only using trimmed paired-end reads of 100bp. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs, just the results of Gene C and Gene D varying for a reason I cannot pinpoint.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/523:1218,validat,validateMappings,1218,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/523,1,['validat'],['validateMappings']
Security," end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 0 | max rel diff. = 0.455425; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 50 | max rel diff. = ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/167:1423,hash,hash,1423,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167,1,['hash'],['hash']
Security," indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-11 16:34:30.116] [jointLog] [info] Mapping rate = 0%. [2018-09-11 16:34:30.116] [jointLog] [info] finished quantifyLibrary(); [2018-09-11 16:34:30.156] [alevinLog] [info] Starting optimizer; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:11519,hash,hash,11519,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['hash'],['hash']
Security," k-mers for 80000 transcripts^M^Mcounted k-mers for 90000 transcripts^M^Mcounted k-mers for 100000 transc; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Clipped poly-A tails from 28 transcripts; wrote 4224924 cleaned references; [2023-03-15 20:12:12.984] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2023-03-15 20:12:29.921] [puff::index::jointLog] [info] ntHll estimated 1872745301 distinct k-mers, setting filter size to 2^35; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 34359738368; Capacity = 2; Files:; illerney.index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:34359738368; Pass Filling Filtering; 1 297 695; 2 55 3; True junctions count = 5239944; False junctions count = 16749742; Hash table size = 21989686; Candidate marks count = 29916168; --------------------------------------------------------------------------------; Reallocating bifurcations time: 2; True marks count: 20234145; Edges construction time: 59; --------------------------------------------------------------------------------; Distinct junctions = 5239944. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 139; Max Junction ID: 12729038; seen.size():101832313 kmerInfo.size():12729039; approximateContigTotalLength: 1607258836; counters for complex kmers:; (prec>1 & succ>1)=133010 | (succ>1 & isStart)=7442 | (prec>1 & isEnd)=7516 | (isStart & isEnd)=2442; contig count: 11353512 element count: 2210067304 complex nodes: 150410; # of ones in rank vector: 11353511; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] S",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/837:2142,Hash,Hash,2142,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837,1,['Hash'],['Hash']
Security," libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_roo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:3557,validat,validateMappings,3557,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['validat'],['validateMappings']
Security," of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:3081,validat,validateMappings,3081,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['validat'],['validateMappings']
Security," processed 258000000 positions. processed 259000000 positions. processed 260000000 positions. processed 261000000 positions. processed 262000000 positions. processed 263000000 positions. processed 264000000 positions. processed 265000000 positions. processed 266000000 positions. processed 267000000 positions. processed 268000000 positions. processed 269000000 positions. processed 270000000 positions. processed 271000000 positions. processed 272000000 positions. processed 273000000 positions. processed 274000000 positions. processed 275000000 positions. processed 276000000 positions. processed 277000000 positions. processed 278000000 positions. processed 279000000 positions. processed 280000000 positions. processed 281000000 positions. processed 282000000 positions. processed 283000000 positions. processed 284000000 positions. processed 285000000 positions. processed 286000000 positions. processed 287000000 positions. processed 288000000 positions. processed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 7.61947s; [2018-08-16 19:47:14.359] [jLog] [info] done building index; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ###",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:22711,hash,hash,22711,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['hash'],['hash']
Security," salmon in a VM Linux instance. When I run salmon quant with the gcBias flag enabled, the run terminates halfway. . ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings --gcBias; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; ---------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:1034,validat,validateMappings,1034,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['validat'],['validateMappings']
Security," salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:6235,validat,validation,6235,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security," strange message in the log out file after Salmon indexing on a very small genome with my own generated transcriptome and decoy. I'm running Salmon v1.0.0 index on the transcriptome of Candida parapsilosis which has a small genome of 26mbp. I created the transcriptome using Cufflinks gffread on my reference genome fasta and gff3. I created the decoy by concatenating the whole genome to the transcriptome [as it was described in the manual](https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode). . I am running using the following options:. `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i cpar_salmon_index -k 31; `. After indexing using a kmer size threshold of -k 31, I see the following message in the log out file ""filter size not provided. ntHll estimated 12754610 distinct k-mers, setting filter size to 2^28."" . 2^28 seems very high compared to 31 bp set using -k 31. I'm also curious why, after setting a k size, it printed the message ""filter size not provided."". I've pasted a more complete snippet of the log out file text below. Does everything look like it's run successfully? I'm concerned since I am running on a small genome and with my own generated decoy and transcriptome. Does it look like this running as it should, or is there a bug that I should provide more details about?. > [puff::index::jointLog] [info] Filter size not provided; ; > estimating from number of distinct k-mers; > [puff::index::jointLog] [info] ntHll estimated 1275461; > 0 distinct k-mers, setting filter size to 2^28; > Threads = 12; > Vertex length = 31; > Hash functions = 5; > Filter size = 268435456; > Capacity = 2; > Files: ; > cpar_salmon_index/ref_k31_fixed.fa; > --------------------------------------------------------------------------------; > Round 0, 0:268435456; > Pass	Filling	Filtering; > 1	0	8	; > 2	4	0; > True junctions count = 18712; > False junctions count = 40617; > Hash table size = 59329; > Candidate marks count = 141326",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/510:1642,Hash,Hash,1642,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/510,2,['Hash'],['Hash']
Security," the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might be worthwhile to wait longer)? ; 4. Is what I'm doing correct to create an index file for running Salmon on human RNA-seq data that is supposed to ""end up"" in sleuth?; 5. Is there another way to create an index file that I can use as an index file to create input data for sleuth from RNA-seq data using Salmon (that might need less computational power)?. The last lines of the output are:. [2021-04-02 08:46:48.282] [puff::index::jointLog] [warning] Entry with header [ENST00000634174.1|ENSG00000282732.1|OTTHUMG00000191398.1|OTTHUMT00000487783.1|AC073539.7-201|AC073539.7|28|unprocessed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping). [2021-04-02 08:48:32.206] [puff::index::jointLog] [warning] Removed 833 transcripts that were sequence duplicates of indexed transcripts.; [2021-04-02 08:48:32.207] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-04-02 08:48:33.535] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotides; [2021-04-02 08:48:33.536] [puff::index::jointLog] [info] Clipped poly-A tails from 1,833 transcripts; wrote 233807 cleaned references; [2021-04-02 08:50:46.347] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2021-04-02 08:51:54.414] [puff::index::jointLog] [info] ntHll estimated 2628453213 distinct k-mers, setting filter size to 2^36; Threads = 6; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files: ; salmon_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:68719476736; Pass	Filling	Filtering. Thank you very much and happy Easter holidays :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/643:6063,Hash,Hash,6063,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643,1,['Hash'],['Hash']
Security," threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report.**. [2016-07-11 09:52:39.858] [jointLog] [info] Mapping rate = 0%. [2016-07-11 09:52:39.858] [jointLog] [info] finished quantifyLibrary(); [2016-07-11 09:52:39.858] [jointLog] [info] Starting optimizer; [2016-07-11 09:52:39.894] [jointLog] [info] Marked 0 weigh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/65:1429,hash,hash,1429,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65,1,['hash'],['hash']
Security," use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-17 07:46:19.488] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 0; [2023-03-17 07:46:19.488] [jointLog] [info] Mapping rate = 80.5964%",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:8046,hash,hash,8046,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['hash'],['hash']
Security," we have a custom reference based on g35. ; * Which read files were used?; * Which which program options were used?; * . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validate",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:2033,secur,secure-,2033,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['secur'],['secure-']
Security," — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-revie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:2962,secur,security-and-quality,2962,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['secur'],['security-and-quality']
Security,"""Bus error: 10"" or ""Segmentation fault: 11"" with version 0.10 and --validateMappings",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/228:68,validat,validateMappings,68,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228,1,['validat'],['validateMappings']
Security,"# salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries fi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:2455,validat,validateMappings,2455,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['validat'],['validateMappings']
Security,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:551,validat,validateMapping,551,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,1,['validat'],['validateMapping']
Security,"### [ index ] => { mouse_index1 }; ### [ libType ] => { IU }; ### [ mates1 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_1.trimmed.fastq.gz }; ### [ mates2 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_2.trimmed.fastq.gz }; ### [ threads ] => { 4 }; ### [ hitFilterPolicy ] => { BOTH }; ### [ biasSpeedSamp ] => { 10 }; ### [ output ] => { quants/13_quant }; ```. **Expected behavior**; Not to be so slow.... I've used salmon previously with some SRR datasets and it was very fast, this seems very strange to me . **Screenshots**; ```; [2020-06-13 02:34:43.686] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing read library format; [2020-06-13 02:34:43.686] [jointLog] [info] There is 1 library.; [2020-06-13 02:34:43.738] [jointLog] [info] Loading pufferfish index; [2020-06-13 02:34:43.738] [jointLog] [info] Loading dense pufferfish index.; [2020-06-13 02:34:45.327] [jointLog] [info] done; [2020-06-13 02:34:45.327] [jointLog] [info] Index contained 117,135 targets; [2020-06-13 02:34:45.346] [jointLog] [info] Number of decoys : 0; [2020-06-13 02:35:35.911] [jointLog] [info] Automatically detected most likely library type as IU; [2020-06-13 06:56:12.646] [fileLog] [info] ; At end of round 0; ==================; Observed 28512328 total fragments (28512328 in most recent round). [2020-06-13 06:56:12.645] [jointLog] [info] Computed 348,024 rich equivalence classes for further processing; [2020-06-13 06:56:12.645] [jointLog] [info] Counted 12,990,838 total reads in the",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537:1858,validat,validateMappings,1858,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537,1,['validat'],['validateMappings']
Security,"###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; ---------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:5796,validat,validateMappings,5796,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['validat'],['validateMappings']
Security,"**Describe the bug**; I followed every step of this tutorial to generate the index.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; Instead of using the mouse genomic data, I used the human data (https://www.gencodegenes.org/human/release_33lift37.html).; I invoked the indexing with the following command: ; **salmon index -t gentrome.fa.gz -d decoys.txt -p 8 -i salmon_index --gencode**; In the beginning everything seems to run smoothly, but a couple minutes in different error messages appear:; **error: Cant write to a temporary file**; **error: Cant read the input file**; followed by **Segmentation fault** and then the algorithm exits. ; Nonetheless a directory with different files regarding the indexing is beeing created.; However when I run; **salmon quant -i salmon_index/ -l A -1 ../../patients/patient001/fastq/S0012_1.fastq.gz -2 ../../patients/patient001/fastq/S0012_2.fastq.gz --validateMappings -o transcripts_quant**. it tells me that **The index version file salmon_index/versionInfo.json doesn't seem to exist**. **To Reproduce**; I installed salmon via bioconda, version 1.1.0. **Desktop (please complete the following information):**; Its running on CentOS 7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/503:923,validat,validateMappings,923,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503,1,['validat'],['validateMappings']
Security,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/496:739,checksum,checksum,739,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496,1,['checksum'],['checksum']
Security,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.4; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; ensembl releases 103 and 87; * Which read files were used?; fastq files; * Which which program options were used?; quant --validateMappings --numBootstraps 50 --gcBias --seqBias. **Expected behavior**; A clear and concise description of what you expected to happen.; We expected to get the similar TPMs for a recalculation of a cohort of RNAseq data with a newer ensembl fasta release, but they were far off. **Desktop (please complete the following information):**; - RHEL7. **Additional context**; We also attempted to create our own fasta files using stringtie and scallop, but ran into the same issue as stated above.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/653:613,validat,validateMappings,613,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653,1,['validat'],['validateMappings']
Security,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Alevin. **Describe the bug**. Exception thrown by Alevin because it was invoked improperly:. ```; Version Info: This is the most recent version of salmon.; Logs will be written to results/salmon/alevin/S1/logs; [2021-04-09 12:16:37.619] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-04-09 12:16:37.619] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-09 12:16:37.619] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-04-09 12:16:37.619] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-09 12:16:37.619] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ ma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:623,validat,validation,623,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,4,['validat'],"['validateMappings', 'validation']"
Security,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon (bulk mode). **Describe the bug**. For one of our 41 samples, salmon fails (quits, without any substantial output) when using the orphan recovery option (where Salmon attempts to try harder to pair up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:569,expose,exposes,569,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['expose'],['exposes']
Security,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin single-cell mode. **Describe the bug**; Hi, I bumped into a problem following this tutorial [https://combine-lab.github.io/alevin-tutorial/2018/output-format/](url) . It's the ""Reading Alevin’s bfh (big freaking hash) file"" section, where there are just 2 lines I should run. The problem is on the second line, ""parser.read_bfh()"" function. It throws me a `pandas.errors.ParserError: Error tokenizing data. C error: Expected 1 fields in line 110446, saw 20` . I tried diagnosing the problem and looked into the input bfh.txt file. The problem wasn't just line 110447, but many other lines that had more than 1 field. So the real question breaks down into: should the bfh.txt file have only 1 field per row (line)? If this is the case, then the input bfh.txt file is problematic. If not, then the parser function is problematic, as it should account for more than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/650:305,hash,hash,305,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650,1,['hash'],['hash']
Security,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin. **Describe the bug**; `Wrong barcode-end parameters`; `[2019-01-17 15:50:10.269] [jointLog] [error] wrong barcode-end parameters.; Please report this bug on Github`. **To Reproduce**; Steps and data to reproduce the behavior:; `./Software/salmon-0.12.0_linux_x86_64/bin/salmon alevin -l ISR ; -1 Data/Fastq/PBMC6_PolyTTrimmed.R2.fq.gz; -2 Data/Fastq/PBMC6_PolyTTrimmed.R1.fq.gz; --chromiumV3; --barcodeLength 11; --umiLength 12; --end 3; --debug; --validateMapping; --minScoreFraction 0.8; -p 10; -i Reference/GENCODE_v29_Human_SalmonIndex_0_12_0/; --tgMap Reference/GENCODE_v29_Human.genemap.txt; -o Quantifications/pbmc6_alevin_onecell_UMI12_3Prime/`. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.12.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloadable executable; * Which reference (e.g. transcriptome) was used? GENCODE V29; * Which read files were used? in house from 1CellBio data ; * Which which program options were used? see above command, but I suspect it's the `--end 3` causing issues. **Expected behavior**; No error to be thrown. **Screenshots**; NA. **Desktop (please complete the following information):**; - OS: RHEL ; - Version 7.3. **Additional context**; NA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/334:543,validat,validateMapping,543,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/334,1,['validat'],['validateMapping']
Security,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk. **Describe the bug**; A clear and concise description of what the bug is.; After building an index of the most recent build of the ensemble mouse genome (39) with salmon, running quant failed immediately. The output from the failed salmon quant is: . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mnt/home/oconn341/salmon/indexs/alt_long_index }; ### [ libType ] => { A }; ### [ mates1 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz }; ### [ mates2 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz }; ### [ output ] => { preprocs_fastq/ERAP1_EAE_2270_S4 }; ### [ validateMappings ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; Logs will be written to preprocs_fastq/ERAP1_EAE_2270_S4/logs; [2021-08-20 18:19:52.590] [jointLog] [info] setting maxHashResizeThreads to 40; [2021-08-20 18:19:52.590] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 18:19:52.590] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 18:19:52.590] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 18:19:52.590] [jointLog] [info] parsing read library format; [2021-08-20 18:19:52.590] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file mnt/home/oconn341/salmon/indexs/alt_long_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /mnt/home/oconn341/salmon/bin/salmon quant was invoked improperly.; For usage information, try /mnt/home/oconn341/salmon/bin/salmon quant --help; Exiting. However, the versionInfo.json file is in my index folder",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:818,validat,validateMappings,818,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['validat'],['validateMappings']
Security,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/587:202,validat,validateMappings,202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587,4,['validat'],"['validateMappigngs', 'validateMappings']"
Security,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/845:385,certificate,certificates,385,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845,1,['certificate'],['certificates']
Security,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; We have 60 samples made from very low RNA inputs (cell captures) so the libraries were made with Ovation Solo RNAseq kit from Tecan. 150 PE. One of the sample finished fine (but mapping rate 21%) but our nextflow pipeline crashed on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/668:730,validat,validateMappings,730,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668,1,['validat'],['validateMappings']
Security,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/ }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_1.fastq.gz }; ### [ mates2 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ output ] => { quants/SRR2557119_quant }; ### [ gcBias ] => { }; Logs will be written to quants/SRR2557119_quant/logs; [2020-12-13 19:07:51.508] [jointLog] [info] setting maxHashResizeThreads to 8; [2020-12-13 19:07:51.508] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-12-13 19:07:51.508] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-12-13 19:07:51.508] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2020-12-13 19:07:51.508] [jointLog] [info] parsing read library format; [2020-12-13 19:07:51.508] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/gencode_v36_decoy_salmon-1.4.0/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; ```. **To Reproduce**; Steps and data to reproduce the behavior:; Building the index:; 1. Download the transcript and the genome sequence of human, latest version; ```; wget http://ftp.ebi.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/603:715,validat,validateMappings,715,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603,1,['validat'],['validateMappings']
Security,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode); **Describe the bug**; I did a lot of independent RNAseq libs recently and all came out with the identical frag_length mean and sd (see below). This surprised me greatly as while the libraries looked consistent on a tapestation, I would not expect them to be this consistent down to >7 decimal places. Also it is unclear how I can access fld.gz to see the raw data. MultiQC only shows me one distribution (for ; ```Sample: Gam_0h_rep1A_RL5382_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_0h_rep2A_RL5383_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_0h_rep3A_RL5403_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep1_RL5385_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep2_RL5386_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep3_RL5406_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep1_RL5387_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep2_RL5388_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep3_RL5407_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep1_RL5384_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/948:436,access,access,436,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948,1,['access'],['access']
Security,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon . **Describe the bug**; I'm working with 15 samples, with ~5Gb total reads per sample (90,000,000 to 100,000,000 reads, ~75 bp reads). I've tried running these samples through the `nf-core/rnaseq` pipeline, but the pipeline took an age to run before dying at the `salmon quant` steps. Some samples finished in about 12 minutes. Others timed out after 8+ hours. - Successful log:. ```; [2023-02-22 16:33:49.782] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-22 16:33:49.782] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-22 16:33:49.782] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-22 16:33:49.782] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-22 16:33:49.782] [jointLog] [info] parsing read library format; [2023-02-22 16:33:49.783] [jointLog] [info] There is 1 library.; [2023-02-22 16:33:49.784] [jointLog] [info] Loading pufferfish index; [2023-02-22 16:33:49.784] [jointLog] [info] Loading dense pufferfish index.; [2023-02-22 16:34:17.987] [jointLog] [info] done; [2023-02-22 16:34:18.037] [jointLog] [info] Index contained 245549 targets; [2023-02-22 16:34:19.908] [jointLog] [info] Number of decoys : 194; [2023-02-22 16:34:19.908] [jointLog] [info] First decoy index : 245314 ; [2023-02-22 16:39:30.638] [jointLog] [info] Thread saw mini-batch with a maximum of 1.10% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2023-02-22 16:39:30.654] [jointLog] [info] Thread saw mini-batch with a maximum of 1.12% zero probability fragments; [2023-02-22 16:39",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:745,validat,validateMappings,745,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['validat'],['validateMappings']
Security,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon quant. **Describe the bug**; --gencode used with salmon quant does not result in correct handling of of multi-label headers in gencode reference files. Resulting in errors and failure to estimate counts when using gencode transcriptome for alignment. Now for every reference header error is output: ; ```; [2021-06-15 00:15:36.623] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment; ```. **To Reproduce**; Steps and data to reproduce the behavior:. align reads to transcriptome using minimap2 to generate BAM file. Use of salmon to estimate transcript counts using ONT specific flags. ```; salmon-1.5.1_linux_x86_64/bin/salmon quant --ont --gencode -p 4 -t Genome_files/gencode.vM24.transcripts.fa -l U -a Documents/Day2_03_DRS_pass.bam -o Documents/counts/Day2_03_DRS_pass; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary downloaded from github; * Which reference (e.g. transcriptome) was used? gencode.M24.transcriptome.fa; * Which read files were used? direct RNA sequences from MinION platform ; * Which which program options were used? see above. **Expected behavior**; Expect that salmon splits the header from gencode reference and takes first part of the header and uses in output files for transcript estimatation. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/671:550,access,access,550,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/671,1,['access'],['access']
Security,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I used the default parameters to run salmon on mouse sample. But I got the warning:. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file:`. **To Reproduce**; `""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 10869138,; ""num_assigned_fragments"": 10869138,; ""num_frags_with_concordant_consistent_mappings"": 10212463,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1088473,; ""strand_mapping_bias"": 0.5258466052704426,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4842274,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 5370189,; ""SF"": 593930,; ""SR"": 494543,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0`. Specifically, please provide at least the following information:. * Which version of salmon was used? ; ""salmon_version"": ""0.14.1"". * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda. * Which reference (e.g. transcriptome) was used?; gencode mouse VM22. * Which read files were used?. Downloaded from sra（Just ordinary Illumina reads). * Which which program options were used?. ```; salmon quant -i $mm10_whole_index -l A \; -1 $fastq1 \; -2 $fastq2 \; -p 20 --validateMappings -o $output_whole; ```. **Expected behavior**; Why Strand bias is very high?. **Desktop (please complete the following information):**; Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/422:1252,validat,validateMappings,1252,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/422,1,['validat'],['validateMappings']
Security,"**Salmon**. I'm using bioconda version of salmon in a VM Linux instance. When I run salmon quant with the gcBias flag enabled, the run terminates halfway. . ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings --gcBias; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:292,validat,validateMappings,292,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,2,['validat'],['validateMappings']
Security,"**To Reproduce**; Steps and data to reproduce the behavior:; 1. The command to build index:; threads=24; genome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.fna; transcriptome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_cds_from_genomic.rename.fna; index=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/index/salmon/RefSeq_index; grep ""^>"" ${genome} | cut -d "" "" -f 1 > ${index}/decoys.txt; sed -i.bak -e 's/>//g' ${index}/decoys.txt; cut -d ""_"" -f 1 ${transcriptome} > ${index}/salmon.cdna.fa; cat ${index}/salmon.cdna.fa ${genome} > ${index}/gentrome.fa.gz; salmon index -t ${index}/gentrome.fa.gz -d ${index}/decoys.txt -i ${index} -p $threads. 3. The command to get gene quantification:; salmon quant -p 30 -i /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/index/salmon/RefSeq_index -l IU -1 /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Quartet_RNAseq/Salmon/tmp/trimmed/D5_1_R1_trimmed.fq.gz -2 /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Quartet_RNAseq/Salmon/tmp/trimmed/D5_1_R2_trimmed.fq.gz --validateMappings --gcBias --seqBias -g /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.gtf -o /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Quartet_RNAseq/Salmon/results/salmon/D5_1. Specifically, please provide at least the following information:; salmon = 1.10.1; Installed through bioconda; genome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.fna; transcriptome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_cds_from_genomic.rename.fna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/937:2451,validat,validateMappings,2451,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/937,1,['validat'],['validateMappings']
Security,"**salmon (bulk mode)**. **Describe the bug**; During salmon quant call, there is a segmentation fault . **To Reproduce**; Steps and data to reproduce the behavior:; * I am hardly able to recreate it myself, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:798,validat,validateMappings,798,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['validat'],['validateMappings']
Security,*Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon. **Describe the bug**; Running on a machine with 256GB of RAM the index builds without error but quant fails. **To Reproduce**; The input transcript file is 425Mb and I'm using salmon 0.14.1. This command ran successfully to index:. `/usr/local/common/salmon-0.14.1/bin/salmon index -t Trinity.fasta -i transcripts_index -k 31 -p 12`. And this one failed:. `/usr/local/common/salmon-0.14.1/bin/salmon quant -i transcripts_index -l IU -1 IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq -2 IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq --validateMappings -p 12 --output salmon_out`. But here's the output:. ```; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { transcripts_index }; ### [ libType ] => { IU }; ### [ mates1 ] => { IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompati,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/426:983,validat,validateMappings,983,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426,1,['validat'],['validateMappings']
Security,", end=65536, func=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1756; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:8615,Hash,Hash,8615,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,2,['Hash'],['Hash']
Security,", features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:2739,validat,validateMappings,2739,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['validat'],['validateMappings']
Security,", hits per frag: 0.429399[A. [32mprocessed[31m 20,500,000 [32mfragments[0m; hits: 8,800,288, hits per frag: 0.429726[A. [32mprocessed[31m 21,000,001 [32mfragments[0m; hits: 9,016,478, hits per frag: 0.429653[A. [32mprocessed[31m 21,500,000 [32mfragments[0m; hits: 9,229,756, hits per frag: 0.429727[A. [32mprocessed[31m 22,000,000 [32mfragments[0m; hits: 9,449,005, hits per frag: 0.429716[A. [32mprocessed[31m 22,500,001 [32mfragments[0m; hits: 9,665,567, hits per frag: 0.429693[A. [32mprocessed[31m 23,000,000 [32mfragments[0m; hits: 9,886,728, hits per frag: 0.430177[A. [32mprocessed[31m 23,500,000 [32mfragments[0m; hits: 10,104,758, hits per frag: 0.43008[A. [32mprocessed[31m 24,000,000 [32mfragments[0m; hits: 10,317,472, hits per frag: 0.4299[A. [32mprocessed[31m 24,500,000 [32mfragments[0m; hits: 10,534,359, hits per frag: 0.430157[A. [32mprocessed[31m 25,000,000 [32mfragments[0m; hits: 10,748,602, hits per frag: 0.430214[A. [32mprocessed[31m 25,500,000 [32mfragments[0m; hits: 10,958,978, hits per frag: 0.429905[A. [32mprocessed[31m 26,000,000 [32mfragments[0m; hits: 11,179,020, hits per frag: 0.430235[A. [32mprocessed[31m 26,500,000 [32mfragments[0m; hits: 11,394,635, hits per frag: 0.430031[A. [32mprocessed[31m 27,000,001 [32mfragments[0m; hits: 11,609,653, hits per frag: 0.43023[A. [32mprocessed[31m 27,500,000 [32mfragments[0m; hits: 11,825,601, hits per frag: 0.430128; salmon.standard/sample.standard.sh: line 20: 13916 Segmentation fault (core dumped) ……/miniconda3/envs/salmon1/bin/salmon quant -i ……/share/references/gencode/salmon_index --libType A -1 $read1 -2 $read2 -p 16 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output $outdir. ``` . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] HPC; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:9741,validat,validateMappings,9741,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['validat'],['validateMappings']
Security,", this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:10577,Hash,Hash,10577,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['Hash'],['Hash']
Security,"-----------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i references/salmon/*ucsc.rmsk.salmon*/ --libType A -1 SRR14506785_output_forward_paired.fq.gz -2 SRR14506785_output_reverse_paired.fq.gz -p 8 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output SRR14506785.salmon.rmsk.out --writeUnmappedNames; ```. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 5.15.0-76-generic. **Additional context**; This is a very recent issue, it *seems* to be resolved by version 1.10 but I have no reads into where the issue may be occuring, or why it is so inconsistent.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:5119,validat,validateMappings,5119,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['validat'],['validateMappings']
Security,"--biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [info] finished quantifyLibrary(); [2016-06-21 10:05:13.894] [jointLog] [info] Starting optimizer; Segmentation fault (core dumped); ```. It runs fine when disabling `--useFSPD`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:1912,hash,hash,1912,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,1,['hash'],['hash']
Security,"-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.380] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.380] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.380] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.380] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501370_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501370 }; Logs will be written to salmonRes_SRR",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:2040,validat,validateMappings,2040,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['validat'],['validateMappings']
Security,"-16 11:47:01.380] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501370_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501370 }; Logs will be written to salmonRes_SRR1501370/logs; [2021-07-16 11:47:01.393] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.393] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.393] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.393] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.393] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.393] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501369_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501369 }; Logs will be written to salmonRes_SRR",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:3329,validat,validateMappings,3329,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['validat'],['validateMappings']
Security,"-16 11:47:01.387] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501372_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501372 }; Logs will be written to salmonRes_SRR1501372/logs; [2021-07-16 11:47:01.614] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.614] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.614] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.614] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.614] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.614] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501371_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501371 }; Logs will be written to salmonRes_SRR",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:5907,validat,validateMappings,5907,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['validat'],['validateMappings']
Security,"-16 11:47:01.393] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501369_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501369 }; Logs will be written to salmonRes_SRR1501369/logs; [2021-07-16 11:47:01.387] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.387] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.387] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.387] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.387] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.387] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501372_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501372 }; Logs will be written to salmonRes_SRR",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:4618,validat,validateMappings,4618,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['validat'],['validateMappings']
Security,"-16 11:47:01.610] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501373_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501373 }; Logs will be written to salmonRes_SRR1501373/logs; [2021-07-16 11:47:01.638] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.638] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.638] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.638] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.638] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.638] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173891_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173891 }; Logs will be written to salmonRes_SRR21",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:8485,validat,validateMappings,8485,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['validat'],['validateMappings']
Security,"-16 11:47:01.614] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501371_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501371 }; Logs will be written to salmonRes_SRR1501371/logs; [2021-07-16 11:47:01.610] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.610] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.610] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.610] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.610] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.610] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501373_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501373 }; Logs will be written to salmonRes_SRR",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:7196,validat,validateMappings,7196,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['validat'],['validateMappings']
Security,"-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:1790,validat,validateMappings,1790,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['validat'],['validateMappings']
Security,".196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion table' failed.; Aborted; ```. I also checked the log file and it shows nothing except. ```; more indexing.log; [2016-03-17 10:41:34.655] [jointLog] [info] building index; ```. output:. ```; -rw-r--r-- 1 vdas DPT 59 Mar 17 10:41 indexing.log; -rw-r--r-- 1 vdas DPT 331863951 Mar 17 10:42 rsd.bin; -rw-r--r-- 1 vdas DPT 2654912013 Mar 17 10:43 txpInfo.bin; -rw-r--r-- 1 vdas DPT 21239292320 Mar 17 10:59 sa.bi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/49:1710,Hash,HashFcn,1710,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49,4,['Hash'],['HashFcn']
Security,".sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; --------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:2303,validat,validateMappings,2303,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['validat'],['validateMappings']
Security,".trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] [stderrLog] [info] Done loading index; [2019-08-27 11:44:23.916] [jointLog] [info] done; [2019-08-27 11:44:23.916] [jointLog] [info] Index contained 583,596 target",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/426:2422,validat,validateMappings,2422,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426,1,['validat'],['validateMappings']
Security,".tsv --chromium --dumpFeatures --expectCells 15000 . What is most noticeable is that the Mapping rate increased by over 50% by just adding --expectCells 15000 to the code. ; Could you please help me understand why these differences and if the quality of the these new identified cells (over 20000) can be trusted for downstream analysis considering that thy were initially not called. Thank you. <img width=""327"" alt=""alevin 2"" src=""https://user-images.githubusercontent.com/38905650/151187756-6fdd58fa-d30e-4a19-b951-cd25acde7f51.PNG"">. Log file; [2022-01-26 12:55:04.037] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 12:55:04.037] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 12:55:04.037] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 12:55:04.037] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 12:55:04.037] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 12:55:04.037] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 12:55:04.037] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-01-26 13:09:14.959] [jointLog] [info] There is 1 library.; [2022-01-26 13:09:14.961] [jointLog] [info] Loading pufferfish index; [2022-01-26 13:09:14.962] [jointLog] [info] Loading dense pufferfish index.; [2022-01-26 13:09:19.753] [jointLog] [info] done; [2022-01-26 13:09:20.383] [jointLog] [info] Index contained 184,844 targets; [2022-01-26 13:09:20.563] [jointLog] [info] Number of decoys : 0; [2022-01-26 13:43:01.425] [join",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/742:3194,validat,validateMappings,3194,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742,1,['validat'],['validateMappings']
Security,"/All-H.m-reads/Trimmed/Sample_8-15/8-15_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_42-50_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-46-53_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-4-10_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_23-31/23-31_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P1_H.m_16-24_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-45-54_221020_L002_R1.fastq.gz""]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. script. #!/bin/bash; #SBATCH -p shared; #SBATCH -c 100; #SBATCH --mem=200G; #SBATCH --gres=tmp:300G; #SBATCH -t 36:00:00. module purge; module load bioinformatics; module load salmon/1.10.1. cd /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/. # Set the path to the Salmon index; salmon_index=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/salmon_index"". # Set the path to the directory containing all the FASTQ files; fastq_dir=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed"". # Use the find command to locate all R1 and R2 FASTQ files; r1_files=$(find ""$fastq_dir"" -name ""*1.fastq.gz""); r2_files=$(find ""$fastq_dir"" -name ""*2.fastq.gz""). # Loop through the found files; for i in ""${!r1_files[@]}""; do; r1_file=""${r1_files[i]}""; r2_file=""${r2_files[i]}"". # Extract the sample name; samp=$(basename ""$r1_file"" ""_1.fastq.gz""). # echo ""Processing sample ${samp}""; salmon quant -i salmon_index -l A -1 ""$r1_file"" -2 ""$r2_file"" -p 100 --validateMappings -o ""salmon_out/${samp}_quant""; done. thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:17070,validat,validateMappings,17070,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['validat'],['validateMappings']
Security,"/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:1403,validat,validation,1403,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:2712,secur,security,2712,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['secur'],['security']
Security,"/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:1821,hash,hash,1821,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['hash'],['hash']
Security,"/salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS X; ProductVersion:	10.11.3; BuildVersion:	15D21. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:2611,hash,hash,2611,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['hash'],['hash']
Security,"/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:2631,secur,security,2631,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['secur'],['security']
Security,"022-12-03 16:18:01.362] [alevinLog] [info] Total 1333800 BiDirected Edges.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLog] [info] setting maxHashResizeThreads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2022-12-03 15:43:11.767] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-12-03 15:43:11.767] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-12-03 15:58:24.389] [jointLog] [info] There is 1 library.; [2022-12-03 15:58:24.435] [jointLog] [info] Loading pufferfish index; [2022-12-03 15:58:24.454] [jointLog] [info] Loading dense pufferfish index.; [2022-12-03 15:58:26.905] [jointLog] [info] done; [2022-12-03 15:58:26.973] [jointLog] [info] Index contained 117,377 targets; [2022-12-03 15:58:2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/814:4454,validat,validation,4454,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814,1,['validat'],['validation']
Security,"05_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Log",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:14526,validat,validation,14526,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"07-16 11:47:01.638] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173891_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173891 }; Logs will be written to salmonRes_SRR2173891/logs; [2021-07-16 11:47:01.649] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.649] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.649] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.649] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR21",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:9772,validat,validateMappings,9772,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['validat'],['validateMappings']
Security,"1 & isStart)=7442 | (prec>1 & isEnd)=7516 | (isStart & isEnd)=2442; contig count: 11353512 element count: 2210067304 complex nodes: 150410; # of ones in rank vector: 11353511; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory illerney.index; size = 2210067304; -----------------------------------------; | Loading contigs | Time = 451.61 ms; -----------------------------------------; size = 2210067304; -----------------------------------------; | Loading contig boundaries | Time = 180.73 ms; -----------------------------------------; Number of ones: 11353511; Number of ones per inventory item: 512; Inventory entries filled: 22175; 11353511; [2023-03-15 20:35:13.921] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2023-03-15 20:35:13.997] [puff::index::jointLog] [info] contig count for validation: 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of Contigs : 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of numerical Contigs : 11,353,511; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] Total # of contig vec entries: 16,343,267; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] bits per offset entry 24; [2023-03-15 20:35:22.331] [puff::index::jointLog] [info] Done constructing the contig vector. 11353512; [2023-03-15 20:35:25.697] [puff::index::jointLog] [info] # segments = 11,353,511; [2023-03-15 20:35:25.697] [puff::index::jointLog] [info] total length = 2,210,067,304; [2023-03-15 20:35:28.518] [puff::index::jointLog] [info] Reading the reference files ...; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] positional integer width = 32; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] seqSize = 2,210,067,304; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] rankSize ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/837:3853,validat,validation,3853,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837,1,['validat'],['validation']
Security,"1 of 4] : counting k-mers; counted k-mers for 40000 transcripts; [2019-11-20 19:50:26.017] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2019-11-20 19:50:26.017] [puff::index::jointLog] [info] Clipped poly-A tails from 86 transcripts; wrote 41857 cleaned references; seqHash 256 : 53fb8234c46e608b5ffa1f70869f5705573b3f671f35cbc2490ac78dd90e917d; seqHash 512 : 87b7752997ca977ff56d02f69857a32f13b3c39a0a084c72feaa2c97e698b9b04d80a88c6755b97aede5604b89fdf66789a14f7976a89597a7832760a47e8919; nameHash 256 : 54e47ff5eb21b38ef24c8ffa3fc2a192ee5d9c0541bc6ee2da9414ecbd0f8c59; nameHash 512 : 163b337219cfd19b0c4c99cece12c2c2b760b3bf7e4686dbe633259c78552a56f2f015f18740a33c18e0f14c5f362997395c3168590f3ad80704071cabfab13a; [2019-11-20 19:50:26.273] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2019-11-20 19:50:27.059] [puff::index::jointLog] [info] ntHll estimated 34379504 distinct k-mers, setting filter size to 2^30; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1073741824; Capacity = 2; Files: ; utr_library/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1073741824; Pass	Filling	Filtering; 1	17	42	; 2	2	0; True junctions count = 102593; False junctions count = 122933; Hash table size = 225526; Candidate marks count = 1387640; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 1100523; Edges construction time: 13; --------------------------------------------------------------------------------; Distinct junctions = 102593. approximateContigTotalLength: 29519449; counters:; 13519 5 4 5; ERROR!! DOESN'T SUPPORT STRING LENGTH LONGER THAN 255. String length: 317; ```. And the `output_sequences.fa` is from `qapa fasta -f genome/hg38/hg38.fa /qapa/qapa_3utrs.gencode_V31.hg38.bed output_sequences.fa`. The bed file is the pre-compiled annotation file f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/451:1682,Hash,Hash,1682,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/451,1,['Hash'],['Hash']
Security,"1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [joint",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:1618,hash,hash,1618,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,1,['hash'],['hash']
Security,"10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:4808,validat,validateMappings,4808,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['validat'],['validateMappings']
Security,"12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => {",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:14491,validat,validateMappings,14491,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"2 with the following parameters (for a ParseBio run), reversing R1/R2 as per Avi's suggestion:; ```; salmon alevin -l ISR \; --expectCells 9000 \; --read-geometry 2[1-end] \; --umi-geometry 1[1-10] \; --bc-geometry 1[11-18,49-56,79-86] \; -2 R1.fastq.gz \; -1 R2_corrected.fastq.gz \; -i gencode_v36_transcripts_idx \; -p 8 \; -o SplitBio_SL2_alevin \; --tgMap gencode.v36.txt; ``` . I know that these libraries are stranded, but I doubt `ISR` is the correct architecture, especially given it's not true PE sequencing. Notably, running alevin this way gets me only a 4% mapping rate, and most of my cells get filtered out downstream due to having really low depth. . Below is my `salmon_quant.log`:; ```; [2021-08-20 12:29:32.343] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-08-20 12:29:32.343] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-08-20 13:19:51.055] [jointLog] [info] There is 1 library.; [2021-08-20 13:19:51.124] [jointLog] [info] Loading pufferfish index; [2021-08-20 13:19:51.125] [jointLog] [info] Loading dense pufferfish index.; [2021-08-20 13:19:53.706] [jointLog] [info] done; [2021-08-20 13:19:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699:3281,validat,validation,3281,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699,2,['validat'],"['validateMappings', 'validation']"
Security,"20-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-07-04 15:51:46.138] [jointLog] [info] parsing read library format; [2020-07-04 15:51:46.138] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/jl2e19/salmon_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /home/jl2e19/.conda/envs/SALMON/bin/salmon quant was invoked improperly.; For usage information, try /home/jl2e19/.conda/envs/SALMON/bin/salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:18231,validat,validateMappings,18231,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,3,['validat'],['validateMappings']
Security,"2021-08-20 18:06:13.744] [puff::index::jointLog] [info] finished populating pos vector; [2021-08-20 18:06:13.747] [puff::index::jointLog] [info] writing index components; [2021-08-20 18:06:13.876] [puff::index::jointLog] [info] finished writing dense pufferfish index; [2021-08-20 18:06:13.890] [jLog] [info] done building index; for info, total work write each : 2.331 total work inram from level 3 : 4.322 total work raw : 25.000 ; Bitarray 528992256 bits (100.00 %) (array + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see above. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:7568,validat,validateMappings,7568,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['validat'],['validateMappings']
Security,"22-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLog] [info] setting maxHashResizeThreads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2022-12-03 15:43:11.767] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-12-03 15:43:11.767] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-12-03 15:58:24.389] [jointLog] [info] There is 1 library.; [2022-12-03 15:58:24.435] [jointLog] [info] Loading pufferfish index; [2022-12-03 15:58:24.454] [jointLog] [info] Loading dense pufferfish index.; [2022-12-03 15:58:26.905] [jointLog] [info] done; [2022-12-03 15:58:26.973] [jointLog] [info] Index contained 117,377 targets; [2022-12-03 15:58:27.002] [jointLog] [info] Number of decoys : 0; [2022-12-03 16:17:44.963] [joint",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/814:4522,validat,validateMappings,4522,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814,1,['validat'],['validateMappings']
Security,"31 (perhaps after poly-A clipping); [2022-06-01 18:13:44.543] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.2], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping). [2022-06-01 18:14:47.999] [puff::index::jointLog] [warning] Removed 739 transcripts that were sequence duplicates of indexed transcripts.; [2022-06-01 18:14:47.999] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2022-06-01 18:14:47.999] [puff::index::jointLog] [info] Replaced 73,600,668 non-ATCG nucleotides; [2022-06-01 18:14:47.999] [puff::index::jointLog] [info] Clipped poly-A tails from 647 transcripts; wrote 116780 cleaned references; [2022-06-01 18:14:53.762] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2022-06-01 18:15:29.014] [puff::index::jointLog] [info] ntHll estimated 2268760823 distinct k-mers, setting filter size to 2^36; Threads = 60; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files: ; Mus_musculus.GRCm39_v1.8.0_decoy.index/ref_k31_fixed.fa. Round 0, 0:68719476736; Pass	Filling	Filtering; 1	104	79	; 2	75	5; True junctions count = 14895414; False junctions count = 1201318; Hash table size = 16096732; Candidate marks count = 337141231. Reallocating bifurcations time: 8; True marks count: 335754103; Edges construction time: 117. Distinct junctions = 14895414. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 21; Max Junction ID: 14896947; seen.size():119175585 kmerInfo.size():14896948; approximateContigTotalLength: 1087128541; counters for complex kmers:; (prec>1 & succ>1)=3126880 | (succ>1 & isStart)=773 | (prec>1 & isEnd)=671 | (isStart & isEnd)=30; contig count: 24974474 element count: 3020582944 complex nodes: 3128354; # of ones in rank vector: ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:11294,Hash,Hash,11294,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,1,['Hash'],['Hash']
Security,"31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/tgMap.tsv }; ### [ fldMean ] => { 250 }; ### [ fldSD ] => { 20 }; ### [ validateMappings ] => { }. [2023-06-19 16:31:27.949] [alevinLog] [info] Filled with 39363 txp to gene entries ; [2023-06-19 16:31:27.956] [alevinLog] [info] Found all transcripts to gene mappings; [2023-06-19 16:31:27.971] [alevinLog] [info] Processing barcodes files (if Present) . . [2023-06-19 16:31:28.595] [alevinLog] [info] Done barcode density calculation.; [2023-06-19 16:31:28.595] [alevinLog] [info] # Barcodes Used: 442596 / 442596.; [2023-06-19 16:31:28.601] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/853:2094,validat,validateMappings,2094,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853,1,['validat'],['validateMappings']
Security,"482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion `table' failed. Aborted; ```. head of fasta file:. ```; >uc001aaa.3_intron_0_0_chr1_12228_f| chr1:12227-12612; GTAAGTAGTGCTTGTGCTCATCTCCTTGGCTGTGATACGTGGCCGGCCCTCGCTCCAGCAGCTGGACCCCTACCTGCCGTCTGCTGCCATCGGAGCCCAAAGCCGGGCTGTGACTGCTCAGACCAGCCGGCTGGAGGGAGGGGCTCAGCAGGTCTGGCTTTGGCCCTGGGAGAGCAGGTGGAAGATCAGGCAGGCCATCGCTGCCACAGAACCCAGTGGATTGGCCTAGGTGGGATCTCTGAGCTCAACAAGCCCTCTCTGGGTGGTAGGTGCAGAGACGGGAGGGGCAGAGCCGC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/53:2006,Hash,HashFcn,2006,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53,4,['Hash'],['HashFcn']
Security,"585:41:CB64LANXX:1:1202:13646:88674; BFFF<FFFBFFB<FFFB<FFFBF//FFFFB<FFFF<F///FFFB/BF<//F<7//FBFBB/F<BF</F<FFFFFFFF<</<FFBFBFFBFF<FBBBBB; @D00585:40:CB7FUANXX:1:2113:18626:8045; ATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCATCTGCAGG; +D00585:40:CB7FUANXX:1:2113:18626:8045; FFFFFBFFFFFFFFFFFB/FBFFFFBFFFFFFFBBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFBFFFFFFFFFFFFFFFFFF<FFBFFBBBBB; ``` . This is the log of the analysis:; ```; Version Info: This is the most recent version of salmon.; Logs will be written to /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 18:08:01.805] [alevinLog] [info] Loading Header; [2019-06-23 18:08:01.807] [alevinLog] [info] Loading Transcript Info ; [2019-06-23 18:08:02.243] [alevinLog] [warning] Found {} transcripts with duplicate names; [2019-06-23 18:08:02.530] [alevinLog] [info] Found all transcripts to gene mappings; ### alevin (dscRNA-seq quantification) v0.14.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:1949,validat,validateMappings,1949,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['validat'],['validateMappings']
Security,"5983 221334; 0.00714905 1.09739e-06 0.000617623 71036.5; [2019-01-29 16:06:46.603] [alevinLog] [info] Starting white listing; [2019-01-29 16:06:46.615] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2019-01-29 16:06:46.615] [alevinLog] [info] Total 4000 barcodes found; [2019-01-29 16:06:46.615] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [info] Starting to make feature Matrix; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making regular featues; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making feature Matrix; [2019-01-29 16:06:46.871] [alevinLog] [info] Finished white listing; [2019-01-29 16:06:46.957] [alevinLog] [info] Finished optimizer; ```. ### no whitelist, expectCells 3000. ```; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells se",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:4233,validat,validateMappings,4233,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['validat'],['validateMappings']
Security,"6125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. **Desktop (please complete the following information):**. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. **Additional context**; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/317:2560,hash,hash,2560,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317,1,['hash'],['hash']
Security,"6:57:15.535] [jointLog] [info] Starting optimizer; [2021-04-16 16:57:15.564] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-04-16 16:57:15.568] [jointLog] [info] iteration = 0 | max rel diff. = 6.66952; [2021-04-16 16:57:16.080] [jointLog] [info] iteration = 100 | max rel diff. = 0.0161125; [2021-04-16 16:57:16.555] [jointLog] [info] iteration = 194 | max rel diff. = 0.000157223; [2021-04-16 16:57:16.558] [jointLog] [info] Finished optimizer; [2021-04-16 16:57:16.558] [jointLog] [info] writing output. [2021-04-16 16:57:16.681] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-16 16:57:16.775] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-16 16:57:16.775] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-16 16:57:16.911] [jointLog] [info] Aggregating expressions to gene level; [2021-04-16 16:57:17.077] [jointLog] [info] done; [2021-04-16 16:57:17.088] [jointLog] [warning] NOTE: Read Lib [[ Trim/1-2-intestines-LDC4673.filtered.R1.fq.gz, Trim/1-2-intestines-LDC4673.filtered.R2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC4673/lib_format_counts.json for details; ```. However，when I try old version (0.9.1) or latest version (1.4.0), I got a normal mapping rate (77.1074%):. ```; [2021-04-20 10:08:58.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-20 10:08:58.048] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:3580,expose,exposes,3580,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['expose'],['exposes']
Security,"7-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.269] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:17477,validat,validateMappings,17477,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,5,['validat'],"['validateMappings', 'validation']"
Security,"819 | (succ>1 & isStart)=419 | (prec>1 & isEnd)=421 | (isStart & isEnd)=30; contig count: 717834 element count: 122492815 complex nodes: 22689; # of ones in rank vector: 717833; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory indexs/alt_long_index; size = 122492815; -----------------------------------------; | Loading contigs | Time = 11.032 ms; -----------------------------------------; size = 122492815; -----------------------------------------; | Loading contig boundaries | Time = 5.8509 ms; -----------------------------------------; Number of ones: 717833; Number of ones per inventory item: 512; Inventory entries filled: 1403; 717833; [2021-08-20 18:05:53.775] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2021-08-20 18:05:53.780] [puff::index::jointLog] [info] contig count for validation: 717,833; [2021-08-20 18:05:53.943] [puff::index::jointLog] [info] Total # of Contigs : 717,833; [2021-08-20 18:05:53.944] [puff::index::jointLog] [info] Total # of numerical Contigs : 717,833; [2021-08-20 18:05:53.963] [puff::index::jointLog] [info] Total # of contig vec entries: 3,341,414; [2021-08-20 18:05:53.964] [puff::index::jointLog] [info] bits per offset entry 22; [2021-08-20 18:05:54.037] [puff::index::jointLog] [info] Done constructing the contig vector. 717834; [2021-08-20 18:05:54.564] [puff::index::jointLog] [info] # segments = 717,833; [2021-08-20 18:05:54.564] [puff::index::jointLog] [info] total length = 122,492,815; [2021-08-20 18:05:54.582] [puff::index::jointLog] [info] Reading the reference files ...; [2021-08-20 18:05:55.151] [puff::index::jointLog] [info] positional integer width = 27; [2021-08-20 18:05:55.151] [puff::index::jointLog] [info] seqSize = 122,492,815; [2021-08-20 18:05:55.152] [puff::index::jointLog] [info] rankSize = 122,492,815; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:5021,validat,validation,5021,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['validat'],['validation']
Security,"8:05:55.152] [puff::index::jointLog] [info] num keys = 100,957,825; [Building BooPHF] 100 % elapsed: 0 min 8 sec remaining: 0 min 0 sec; [2021-08-20 18:06:03.447] [puff::index::jointLog] [info] mphf size = 63.0608 MB; [2021-08-20 18:06:03.479] [puff::index::jointLog] [info] chunk size = 61,246,408; [2021-08-20 18:06:03.479] [puff::index::jointLog] [info] chunk 0 = [0, 61,246,408); [2021-08-20 18:06:03.479] [puff::index::jointLog] [info] chunk 1 = [61,246,408, 122,492,785); [2021-08-20 18:06:13.744] [puff::index::jointLog] [info] finished populating pos vector; [2021-08-20 18:06:13.747] [puff::index::jointLog] [info] writing index components; [2021-08-20 18:06:13.876] [puff::index::jointLog] [info] finished writing dense pufferfish index; [2021-08-20 18:06:13.890] [jLog] [info] done building index; for info, total work write each : 2.331 total work inram from level 3 : 4.322 total work raw : 25.000 ; Bitarray 528992256 bits (100.00 %) (array + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:7106,hash,hash,7106,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['hash'],['hash']
Security,"8dd90e917d; seqHash 512 : 87b7752997ca977ff56d02f69857a32f13b3c39a0a084c72feaa2c97e698b9b04d80a88c6755b97aede5604b89fdf66789a14f7976a89597a7832760a47e8919; nameHash 256 : 54e47ff5eb21b38ef24c8ffa3fc2a192ee5d9c0541bc6ee2da9414ecbd0f8c59; nameHash 512 : 163b337219cfd19b0c4c99cece12c2c2b760b3bf7e4686dbe633259c78552a56f2f015f18740a33c18e0f14c5f362997395c3168590f3ad80704071cabfab13a; [2019-11-20 19:50:26.273] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2019-11-20 19:50:27.059] [puff::index::jointLog] [info] ntHll estimated 34379504 distinct k-mers, setting filter size to 2^30; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1073741824; Capacity = 2; Files: ; utr_library/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1073741824; Pass	Filling	Filtering; 1	17	42	; 2	2	0; True junctions count = 102593; False junctions count = 122933; Hash table size = 225526; Candidate marks count = 1387640; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 1100523; Edges construction time: 13; --------------------------------------------------------------------------------; Distinct junctions = 102593. approximateContigTotalLength: 29519449; counters:; 13519 5 4 5; ERROR!! DOESN'T SUPPORT STRING LENGTH LONGER THAN 255. String length: 317; ```. And the `output_sequences.fa` is from `qapa fasta -f genome/hg38/hg38.fa /qapa/qapa_3utrs.gencode_V31.hg38.bed output_sequences.fa`. The bed file is the pre-compiled annotation file from QAPA. **To Reproduce**; Steps and data to reproduce the behavior:. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Ubuntu 18.04.2 LTS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/451:1990,Hash,Hash,1990,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/451,1,['Hash'],['Hash']
Security,"9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:6884,validat,validateMappings,6884,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['validat'],['validateMappings']
Security,": Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21 10:00:40.560] [jointLog] [info] Index contained 35448 targets. terminate called after throwing an instance of 'terminate called recursively; std::length_error'; ```. Best,; Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/210:1869,hash,hash,1869,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210,1,['hash'],['hash']
Security,":18:01.362] [alevinLog] [info] Total 17192510.00 UMI after deduplicating.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 1333800 BiDirected Edges.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLog] [info] setting maxHashResizeThreads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2022-12-03 15:43:11.767] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-12-03 15:43:11.767] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-12-03 15:58:24.389] [jointLog] [info] There is 1 library.; [2022-12-03 15:58:24.435] [jointLog] [info] Loading pufferfish index; [2022-12-03 15:58:24.454] [jointLog] [info] Loading dense pufferfish index.; [2022-12-03 15:58:26.905] [jointLog] [info] done; [2022-12-03 15:58:2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/814:4404,validat,validation,4404,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814,2,['validat'],"['validateMappings', 'validation']"
Security,"::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-08-20 18:04:11.410] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2021-08-20 18:04:11.410] [puff::index::jointLog] [info] Clipped poly-A tails from 647 transcripts; wrote 116708 cleaned references; [2021-08-20 18:04:17.164] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2021-08-20 18:04:19.369] [puff::index::jointLog] [info] ntHll estimated 100414800 distinct k-mers, setting filter size to 2^31; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 2147483648; Capacity = 2; Files: ; indexs/alt_long_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:2147483648; Pass	Filling	Filtering; 1	15	55	; 2	4	0; True junctions count = 472636; False junctions count = 799354; Hash table size = 1271990; Candidate marks count = 5149133; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 3362277; Edges construction time: 4; --------------------------------------------------------------------------------; Distinct junctions = 472636. allowedIn: 21; Max Junction ID: 563055; seen.size():4504449 kmerInfo.size():563056; approximateContigTotalLength: 72618120; counters for complex kmers:; (prec>1 & succ>1)=21819 | (succ>1 & isStart)=419 | (prec>1 & isEnd)=421 | (isStart & isEnd)=30; contig count: 717834 element count: 122492815 complex nodes: 22689; # of ones in rank vector: 717833; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory indexs/alt_long_index; size = 122492815; -----------------------------------------; | Loading contigs | Time = 11.032 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:3499,Hash,Hash,3499,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['Hash'],['Hash']
Security,"; ATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCATCTGCAGG; +D00585:40:CB7FUANXX:1:2113:18626:8045; FFFFFBFFFFFFFFFFFB/FBFFFFBFFFFFFFBBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFBFFFFFFFFFFFFFFFFFF<FFBFFBBBBB; ``` . This is the log of the analysis:; ```; Version Info: This is the most recent version of salmon.; Logs will be written to /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 18:08:01.805] [alevinLog] [info] Loading Header; [2019-06-23 18:08:01.807] [alevinLog] [info] Loading Transcript Info ; [2019-06-23 18:08:02.243] [alevinLog] [warning] Found {} transcripts with duplicate names; [2019-06-23 18:08:02.530] [alevinLog] [info] Found all transcripts to gene mappings; ### alevin (dscRNA-seq quantification) v0.14.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { U }; ### [ mates2 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/read_fastq//sample.fastq }; ### [ mates1 ] => { /mnt/beegfs",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:2111,validat,validateMappings,2111,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['validat'],['validateMappings']
Security,"; [2021-04-20 10:11:46.842] [jointLog] [info] iteration = 1,000 | max rel diff. = 2.40606; [2021-04-20 10:11:47.548] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.715333; [2021-04-20 10:11:48.250] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.181266; [2021-04-20 10:11:48.938] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.152511; [2021-04-20 10:11:49.636] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.11611; [2021-04-20 10:11:50.315] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.482892; [2021-04-20 10:11:51.013] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0388567; [2021-04-20 10:11:51.673] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.518366; [2021-04-20 10:11:52.333] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.117083; [2021-04-20 10:11:53.007] [jointLog] [info] iteration = 1,900 | max rel diff. = 0.306961; [2021-04-20 10:11:53.694] [jointLog] [info] iteration = 2,000 | max rel diff. = 0.078216; [2021-04-20 10:11:54.354] [jointLog] [info] iteration = 2,100 | max rel diff. = 1.17575; [2021-04-20 10:11:54.521] [jointLog] [info] iteration = 2,125 | max rel diff. = 0.00514978; [2021-04-20 10:11:54.541] [jointLog] [info] Finished optimizer; [2021-04-20 10:11:54.541] [jointLog] [info] writing output. [2021-04-20 10:11:54.750] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-20 10:11:54.845] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-20 10:11:54.846] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-20 10:11:55.040] [jointLog] [info] Aggregating expressions to gene level; [2021-04-20 10:11:55.126] [jointLog] [info] done; ````. So, are there some bugs in version 0.14.1 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:9281,expose,exposes,9281,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['expose'],['exposes']
Security,"; gunzip mm10tgMap.gz; ```. The index is surprisingly large, though, as compared to using `salmon index` on just the mm10 transcripts. In addition, when I try using it with `alevin`, it is returning the following error. ```; (base) Koens-MacBook-Pro:data koenvandenberge$ /Applications/salmon/bin/salmon alevin -l ISR \; > -1 SRR1853178_1.fq.gz \; > -2 SRR1853178_2.fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find gene mapping for : ENSMUST00000196221.1 w/ index 0; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Txp to Gene Map not found for 18446744073709551551 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/722:1440,validat,validateMappings,1440,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722,1,['validat'],['validateMappings']
Security,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:4570,secur,secure-,4570,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,3,"['secur', 'validat']","['secure-', 'validateMappings']"
Security,"A couple of operations in Salmon are determined by random numbers. For the purpose repeatability (in research or in automatic tests for packages using Salmon) it would be very useful to be able to set a seed for the random number generators. For example, we are using Salmon in a pipeline that generates HTML reports. In our tests we want to be sure that we control all sources of non-determinism and produce the very same report twice. This requires access to the seed. Would you be willing to accept a patch that changes all random number generation instances to first `getenv(""SALMON_RANDOM_SEED"")` and use that as the seed if provided? When `SALMON_RANDOM_SEED` is not provided the behaviour would be unchanged. (This relates to issue #102)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/185:451,access,access,451,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185,1,['access'],['access']
Security,"Alevin (single-cell mode):. After compiling from source, --celseq2 is still not recognized as a valid flag. . * salmon v0.11.3; * compiled from source ; * reference: gencode.v28.transcripts.fa ; * Default Mode. **Expected behavior**; Following compiling from source, the --celseq2 flag should work (see https://github.com/COMBINE-lab/salmon/issues/311) . - Ubuntu Linux; - Version: `uname -a`; Linux yaellab-rina 4.15.0-39-generic #42-Ubuntu SMP Tue Oct 23 15:48:01 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; `lsb_release -a`; LSB Version:	core-9.20170808ubuntu1-noarch:printing-9.20170808ubuntu1-noarch:security-9.20170808ubuntu1-noarch; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.1 LTS; Release:	18.04; Codename:	bionic",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/325:602,secur,security-,602,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325,1,['secur'],['security-']
Security,"Alevin: Problem with PyPI vpolo [""Reading Alevin’s bfh (big freaking hash) file"" section of Alevin tutorial]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/650:69,hash,hash,69,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650,1,['hash'],['hash']
Security,"Avi's suggestion:; ```; salmon alevin -l ISR \; --expectCells 9000 \; --read-geometry 2[1-end] \; --umi-geometry 1[1-10] \; --bc-geometry 1[11-18,49-56,79-86] \; -2 R1.fastq.gz \; -1 R2_corrected.fastq.gz \; -i gencode_v36_transcripts_idx \; -p 8 \; -o SplitBio_SL2_alevin \; --tgMap gencode.v36.txt; ``` . I know that these libraries are stranded, but I doubt `ISR` is the correct architecture, especially given it's not true PE sequencing. Notably, running alevin this way gets me only a 4% mapping rate, and most of my cells get filtered out downstream due to having really low depth. . Below is my `salmon_quant.log`:; ```; [2021-08-20 12:29:32.343] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-08-20 12:29:32.343] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-08-20 13:19:51.055] [jointLog] [info] There is 1 library.; [2021-08-20 13:19:51.124] [jointLog] [info] Loading pufferfish index; [2021-08-20 13:19:51.125] [jointLog] [info] Loading dense pufferfish index.; [2021-08-20 13:19:53.706] [jointLog] [info] done; [2021-08-20 13:19:53.706] [jointLog] [info] Index contained 231,288 targets; [2021-08-20 13:19:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699:3331,validat,validation,3331,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699,1,['validat'],['validation']
Security,"Compiled from source (https://github.com/COMBINE-lab/salmon/archive/v0.10.0.tar.gz) on OS X 10.13.4 (Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64). The error generally occurs in the first 2000000 fragments (tried with paired-end samples, either IU or ISR). \#\#\# salmon (mapping-based) v0.10.0; \#\#\# [ program ] => salmon; \#\#\# [ command ] => quant; \#\#\# [ index ] => { salmon010.index }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { L001_R1.fastq.gz }; \#\#\# [ mates2 ] => { L001_R2.fastq.gz }; \#\#\# [ validateMappings ] => { }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/228:578,validat,validateMappings,578,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228,1,['validat'],['validateMappings']
Security,"Dear Rob,. Would you please explain why large number of reads have been discarded due to alignment?. This is bulk RNAseq on mouse tissue. I tried fastp and trim galore for trimming the reads but they hardly make any difference from untrimmed reads. I used STAR for alignment initially and I got an alignment rate of 90% . This is my Salmon code; this is to generate the index:; salmon index -t Mus_musculus.GRCm38.cdna.all.fa -i transcripts_index; this is to run salmon:; salmon quant -i transcripts_index -l IU -1 fastp_6BE_1.fq.gz -2 fastp_6BE_2.fq.gz -o sample6BE.salmon ; --validateMappings --softclip. This is the salmon log; ==================; Observed 42829220 total fragments (42829220 in most recent round). [2022-05-13 03:02:14.185] [jointLog] [info] Computed 384,282 rich equivalence classes for further processing; [2022-05-13 03:02:14.185] [jointLog] [info] Counted 27,069,942 total reads in the equivalence classes ; [2022-05-13 03:02:14.202] [jointLog] [info] Number of mappings discarded because of alignment score : 262,747,517; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 2,776,678; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 1,099,008; [2022-05-13 03:02:14.202] [jointLog] [info] Mapping rate = 63.2044%. [2022-05-13 03:02:14.202] [jointLog] [info] finished quantifyLibrary(); [2022-05-13 03:02:14.226] [jointLog] [info] Starting optimizer; [2022-05-13 03:02:14.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2022-05-13 03:02:14.325] [jointLog] [info] iteration = 0 | max rel diff. = 10590.7; [2022-05-13 03:02:15.594] [jointLog] [info] iteration = 100 | max rel diff. = 16.0264; [2022-05-13 03:02:16.882] [jointLog] [info] iteration = 200 | max rel diff. = 7.7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/775:578,validat,validateMappings,578,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/775,1,['validat'],['validateMappings']
Security,"Dear Salmon Dev team,; I recently upgraded salmon 0.8.3 to 1.1.0.; I run the sample using libtype -IU.; For the new1.1.0, I used --validateMappings together with index built with genome decoys.; I noticed unusual amount of dovetail mapping being discarded. Here is the meta_info from the new version:; ```; ""num_processed"": 107275750,; ""num_mapped"": 50376830,; ""num_decoy_fragments"": 381872,; ""num_dovetail_fragments"": 55224702,; ""num_fragments_filtered_vm"": 47824323,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 1540436314,; ""percent_mapped"": 46.960128454007548,; ```; Meta info from v0.8.3:; ```; ""num_processed"": 107275750,; ""num_mapped"": 89940471,; ""percent_mapped"": 83.8404494958087,; ```; Again, they were ran on the same sample.; Please let me know if there is something wrong in my parameters. Or do you think this is a poor sample quality issue.; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/485:131,validat,validateMappings,131,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/485,1,['validat'],['validateMappings']
Security,"Dear Salmon Team, . Not sure if this message should go here or on the google group, sorry if it shouldn't go here. . I am trying to analyse meta-transcriptome RNAseq data to obtain genes expression from ""complex"" microbial samples (over a 100 strains of bacteria and fungi). I have over 500 millions reads so aligning these reads on references genomes would take forever... Salmon thus looks like a promising solution. . However, i am not sure Salmon is appropriate for meta-transcriptome data. Is there prerequisites if i want to use Salmon for that purpose ? What would be your recommended parameters ?. So far, since i have a reference genome (and thus the associated coding sequences) for all the strains i created a single Salmon Index (comprising all the strains cds) and ran the quantification tool on this index using these parameters: ; salmon quant -i index --libType A --validateMappings --seqBias --incompatPrior 0.0 -r input.fa -o output . I did not include gcbias correction so far because i am not sure it is appropriate in this case. Thanks for you help, . Nathan",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/350:882,validat,validateMappings,882,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/350,1,['validat'],['validateMappings']
Security,"Dear Salmon team,. I am trying to quantify allele specific expression using salmon, so I would like to use the unique counts to estimate confidence itervals of the allele unbalance. However, I get no unique counts in the ambig_info.tsv file, disabling the validateMappings option fixed it. I'm using Salmon v 12 and I do expect unique counts, since I have some reads aligning to variants, as determined by featureCounts on the output sam by this same salmon run. . Is this the expected behavior when one enables validateMappings? ; Can I just go without validating them? I noticed the results are very close when disabling this option. Salmon was run as follows using a default k=31 quasi index.; salmon quant --writeMappings=Z --no-version-check -p10 (--validateMappings) --seqBias --posBias -i X -l IU -1 P.fq.gz -2 Qq.fq.gz -o Test",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/347:256,validat,validateMappings,256,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/347,4,['validat'],"['validateMappings', 'validating']"
Security,"Dear all,. I am trying to analyze direct nanopore RNA sequencing data with salmon.; Now I seem to have problems with getting the command line properly:. I use:; salmon quant -i salmon_index -l r dmso_sham_4.fastq --validateMappings -o transcripts_quant. and get the following; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.10.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { salmon_index }; ### [ libType ] => { r }; ### [ ] => { dmso_sham_4.fastq }; ### [ validateMappings ] => { }; ### [ output ] => { transcripts_quant }; Logs will be written to transcripts_quant/logs; [2024-05-29 11:13:30.128] [jointLog] [info] setting maxHashResizeThreads to 24; Exception : [unknown library format string : R]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2024-05-29 11:13:30.128] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-29 11:13:30.128] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-29 11:13:30.128] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-29 11:13:30.128] [jointLog] [info] parsing read library format. So, as far I can see, being a bloody beginner, the error: Exception : [unknown library format string : R] somehow suggests that the small letter r in my command line is interpreted as a capital letter???; Or is there anything else wrong with my command?. Help would be appreciated. Thanks and best,; Matthias",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/933:215,validat,validateMappings,215,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/933,3,['validat'],['validateMappings']
Security,"Dear salmon team. I'm using salmon v1.3.0 and I've tried to ran the quantification using the command as is in the web page. ` salmon quant -i mus_musculus_index -l A -1 ../../output_paired_PVI18_1.fastq.gz -2 ../../output_paired_PVI18_2.fastq.gz -p 4 --validateMappings -o quants/`. but it give me the error . Exception : [unrecognised option '--validateMappings']. Exiting. at first look my line doesn't seems to be bad-formatted, so can you help me with the error please. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/563:253,validat,validateMappings,253,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/563,2,['validat'],['validateMappings']
Security,"Done indexing Barcodes; [2019-01-29 15:49:35.994] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-29 16:05:46.678] [jointLog] [info] Mapping rate = 20.1566%. [2019-01-29 16:05:46.678] [jointLog] [info] finished quantifyLibrary(); [2019-01-29 16:05:51.316] [alevinLog] [info] Starting optimizer. **Analyzed 4000 cells (100% of all).**; [2019-01-29 16:06:27.447] [alevinLog] [info] Total 20167967.00 UMI after deduplicating.;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:1844,hash,hash,1844,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['hash'],['hash']
Security,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/966:652,validat,validateMappings,652,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966,1,['validat'],['validateMappings']
Security,"E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 12 }; ### [ output ] => { ERR2744256_tmp }; ### [ tgMap ] => { transcript_to_gene.txt }; ### [ dumpFeatures ] => { }; ### [ expectCells ] => { 278 }. [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-05-07 14:40:36.500] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-05-07 14:40:36.511] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 8 Million barcodes; processed 17 Million barcodes; processed 25 Million barcodes; processed 34 Million barcodes; processed 42 Million barcodes; processed 51 Million barcodes; processed 59 Million barcodes; processed 67 Million barcodes; processed 76 Million barcodes; processed 84 Million barcodes; processed 93 Million barcodes; processed 101 Million barcodesdes; processed 109 Million barcodes; processed 118 Million barcodes; processed 126 Million barcodes; processed 134 Million barcodes; proce",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362:2423,validat,validateMappings,2423,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362,1,['validat'],['validateMappings']
Security,"FFFFBFFFFFFFBBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFBFFFFFFFFFFFFFFFFFF<FFBFFBBBBB; ``` . This is the log of the analysis:; ```; Version Info: This is the most recent version of salmon.; Logs will be written to /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 18:08:01.805] [alevinLog] [info] Loading Header; [2019-06-23 18:08:01.807] [alevinLog] [info] Loading Transcript Info ; [2019-06-23 18:08:02.243] [alevinLog] [warning] Found {} transcripts with duplicate names; [2019-06-23 18:08:02.530] [alevinLog] [info] Found all transcripts to gene mappings; ### alevin (dscRNA-seq quantification) v0.14.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { U }; ### [ mates2 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/read_fastq//sample.fastq }; ### [ mates1 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/CB_UMI//sample.fastq }; ### [ index ] => { /mnt/beegfs/alexmascension/STAR//hg38/salmon_index/ ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:2283,validat,validateMappings,2283,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['validat'],['validateMappings']
Security,"First time trying to use SALMON 1.5.2 (not bioconda) index with decoy.txt on Arabidopsis thaliana. I'm using AtRTD3 Transcriptome ""atRTD3_07082020.fasta"" (https://ics.hutton.ac.uk/atRTD/RTD3/ - username atrtd; password atrtd3-06092021) and the genome ""GWHBDNP00000000.1"" from https://ngdc.cncb.ac.cn/gwh/Assembly/21820/show. I followed the steps from (https://gist.github.com/k3yavi/a486647c35158a8296cec543ed9b526f) using this two files as follow:; ```; grep ""^>"" <(zcat GWHBDNP00000000.1.genome.fasta.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i -e 's/>//g' decoys.txt; cat atRTD3_07082020.fasta GWHBDNP00000000.1.genome.fasta.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode; ```. The index generation failed, creating a folder with only two files ""pre_indexing.log"" and ""ref_indexing.log""([pre_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515704/pre_indexing.log) and [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515701/ref_indexing.log)) . I recieved this error from the terminal:; ![Screenshot from 2021-11-10 17-24-24](https://user-images.githubusercontent.com/71443183/141187955-4601923f-001f-424a-969a-8ad346f2cf36.png). - OS: Ubuntu Linux; - Version 21.10. Thanks for this great software!!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/720:210,password,password,210,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/720,1,['password'],['password']
Security,"Fixes Dockerfile to be FROM ubuntu:16.04, fixes a checksum in CMakeLists.txt, and makes build_test.sh executable. I tested this by changing the Dockerfile to copy the code into the image rather than pulling the code directly from github so that I could test the changes I made. I then built the image and ran:; ```; $ docker run combinelab/salmon:0.8.2 salmon --version; version : 0.8.2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/158:50,checksum,checksum,50,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/158,1,['checksum'],['checksum']
Security,"HI,; I using Salmon version1.2.1_l.; I have mate pairs for transcriptome mapping. ; `./bin/salmon quant -i /media/amit/Amit/Usr/new_salmon_index/ -l IU -1 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L3_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq -2 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L4_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L4_HK500HUMpybEAAKRAAPEI-530_2.fq -p 8 --validateMappings -o /media/amit/Amit/Usr/DNA12/fastq/DNA12.quant`. But salmon gives an error:; ```; The following errors were detected with the read files; ======================================================; ERROR: file [V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq] does not appear to exist!. ```; Kindly help. I have followed all the instructions noted here:; https://github.com/COMBINE-lab/salmon/issues/69. Regards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/737:411,validat,validateMappings,411,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/737,1,['validat'],['validateMappings']
Security,"Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:1064,validat,validateMappings,1064,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,1,['validat'],['validateMappings']
Security,"Hello Bob, ; I am trying to implement Salmon 1.5.3 and I have problems running the quant mode. I succeed to prepare the index using decoy protocol and I am trying reads quantification mode.; I; used this command line:; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant -i salmon_index -l ISF -1 rawDataPE/ERR3537668_1.fastq.gz -2 rawDataPE/ERR3537668_2.fastq.gz --validateMappings -o transcripts_quant_test. and I got this message error:; Exception : [std::bad_alloc]; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant was invoked improperly.; For usage information, try ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant --help; Exiting. Would you have any idea why I got this message error? Could you please help me to solve this problem?; Best ; Luciana",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/717:363,validat,validateMappings,363,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/717,1,['validat'],['validateMappings']
Security,"Hello! I am having some difficulty quantifying RNAseq data with salmon in mapping-based mode. I have been struggling with this for a few days and would be very grateful for any advice on how to move forward. Thank you in advance. Here is my command:; ```; #!/bin/bash -l ; #SBATCH -J male_salmon_map; #SBATCH -t 700:00:00; #SBATCH -p high; #SBATCH --cpus-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/ve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:577,validat,validateMappings,577,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"Hello!. I am very new to using Salmon and apologise if this issue has arisen elsewhere! I'm just looking to ensure I'm not doing anything sketchy before progressing with some RNASeq analysis following transcript quantification... Salmon version: v1.2.1; Index: Hg38 salmon_sa_index sourced from https://refgenomes.databio.org/#hg38. I have run Salmon on whole transcriptome RNASeq data as follows:; `salmon quant -i ${index} -l ISR -1 ${sampleR1} -2 ${sampleR2} \; --gcBias \; --validateMappings \; --writeMappings \; --writeUnmappedNames \; -o ${quants}/${rundate}_Salmon/${rundate}_${runid}_${indexpair}_quant`. Upon importing `quant.sf`files into R with `tximeta` and executing the function `summarizeToGene()` for` DESeq2` analysis I've been checking the validity of my top hits and have run into some confusion surrounding how to best handle counts assigned to an excessive number of alternate haplotypes/patches for some genes. These features have differing Ensembl gene IDs (but identical gene names) and are evidently not duplicate sequences as they have not been collapsed by salmon and differ in length. Gene counts are dispersed across different combinations of these haplotypes across samples, which isn't very amenable to gene level differential expression analysis. The KIR locus (which is notoriously confusing and full of differing gene content haplotypes) is of particular interest to us and influenced precisely by this issue. As shown below, there are 34 versions of _KIR3DL2_ assigned gene counts across our samples:. `> rowRanges(gse)[grep(""KIR3DL2"", rowRanges(gse)$gene_name)]`; [KIR3DL2.txt](https://github.com/COMBINE-lab/salmon/files/4883051/KIR3DL2.txt). The salmon counts look like this:; `assays(gse)$counts[grep(""KIR3DL2"", rowRanges(gse)$symbol),][,1:5]`; [counts.txt](https://github.com/COMBINE-lab/salmon/files/4883045/counts.txt). There are around 500 other genes in which this occurs also (including all KIRs and HLAs), with no clear ""dominant"" haplotype to which the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/544:479,validat,validateMappings,479,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/544,1,['validat'],['validateMappings']
Security,"Hello, I am using salmon for an RNAseq experiment but I m getting very low mapping rate (0.03%!) and a strong strand bias (0.96). It never happened before and I can not understand the cause. I have already used FastQC to check the quality and it is good. It happens also with all the other samples (N=6) the service sent to us for the same RNAseq experiment. At the moment I m afraid the service did a mistake or could this problem be related to the library type? . This is the command I ran:; ```; salmon quant -i /somewhere/in/the/server/index/salmon -l A -1 /somewhere/in/the/server/fastq/sample1_1.fq.gz -2 /somewhere/in/the/server/fastq/sample1_2.fq.gz -p 10 --seqBias --gcBias --validateMapping -o /somewhere/in/the/server/salmon; ```. lib_format_counts.json:; ```; {; ""read_files"": [; ""/somewhere/in/the/server/fastq/sample1_1.fq.gz"",; ""/somewhere/in/the/server/fastq/sample1_2.fq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 6520,; ""num_assigned_fragments"": 6520,; ""num_frags_with_concordant_consistent_mappings"": 2126,; ""num_frags_with_inconsistent_or_orphan_mappings"": 4704,; ""strand_mapping_bias"": 0.964722483537159,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 75,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 2051,; ""SF"": 1436,; ""SR"": 3268,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. few lines from salmon_quant.log:; ```; Only 6520 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. Mapping rate = 0.0301431%; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/679:685,validat,validateMapping,685,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/679,1,['validat'],['validateMapping']
Security,"Hello,. I am currently using Salmon v1.2.0 which was build from source and is run on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/524:920,validat,validateMappings,920,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/524,1,['validat'],['validateMappings']
Security,"Hello,. I have a 10x scRNA-seq dataset I would like to run Alevin on, with bootstrapping. I am working on a cluster and submitting my script (I'll paste it below) with a Slurm scheduler. My issue is that the job runs for a couple of seconds, then gives me this massive “core” output - that is encrypted someway and I can’t read - and then an empty log and an empty alevin.log, so I don’t even have anything to use for troubleshooting. ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al; total 47106; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 4 amonaco_m hpc-ag-zinzen 4096 Mar 2 11:47 ..; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 alevin; -rw------- 1 amonaco_m hpc-ag-zinzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/636:293,encrypt,encrypted,293,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636,1,['encrypt'],['encrypted']
Security,"Hello,. I use salmon to analyse my metatranscriptomic data. In my results I found, some very high TPM but this TPM have already a very small EffectiveLength. Because of this very small EffectiveLength, the TPM are very high (and less reproducible between my replicates). How to analyse this TPM ? It's possible to remove this bias with a salmon argument ? . command line : ; ```bash; salmon quant -i {input.salmon_index} -l A -1 {input.fastq_1} -2 {input.fastq_2} --validateMappings -o {params.output_dir} --meta -p {threads} --seqBias --gcBias; ```. Exemple of Top3 TPM on a sample : ; ```; Name	Length	EffectiveLength	TPM	NumReads; lcl|NC_001136.10_cds_NP_010562.1_1187	168	8.000	27437.393774	1808.000; lcl|NC_001145.3_cds_NP_013978.1_4507	180	13.000	80351.033367	8604.000; lcl|NC_001137.3_cds_NP_010898.1_1506	132	1.000	85468.695651	704.000; ```. Thanks,. Steven",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/921:466,validat,validateMappings,466,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/921,1,['validat'],['validateMappings']
Security,"Hello,. My lab is in the process of testing out Salmon and potentially switching to it from traditional aligners. With a traditional aligner, we use picard's MarkDuplicates to remove PCR duplicates. Is there a way to remove PCR duplicates with Salmon? I tried using --writeMappings to generate a BAM and feed that into picard, but I just get a SAM validation error: ""Not primary alignment flag should not be set for unmapped read."". Best,; Brian",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/136:348,validat,validation,348,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136,1,['validat'],['validation']
Security,"Hello,; I'm trying to run the docker image on a cluster to quantify fastq files using the mapping mode. ; I'm using it with singularity ( already used it on another cluster and it worked perfectly). Here the command:; singularity exec docker://combinelab/salmon:latest salmon quant --validateMappings -l A -p ${threads} -o ./salmon_map -i ${salmon_index} -1 ${file_1} -2 ${file_2}. And the error:; salmon: error while loading shared libraries: libtbbmalloc.so.2: cannot open shared object file: No such file or directory. I suspect that it's missing inside the image and that in the other cluster it was running because it was taking the one outside the image ( the cluster where it worked had lots of libraries and softwares available, in this other you need to load the modules). Cheers; Claudio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/447:284,validat,validateMappings,284,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/447,1,['validat'],['validateMappings']
Security,"Hello,; Thanks for developing Salmon. I recently had a look at the `--dumpEQ` option, and found that all equivalence classes had this curious pattern, I am wondering why could that be:; ```; // EC line from eq_classes.txt; 14 46954 46966 46968 46970 46971 46975 46976 0 0 0 0 0 0 0 28; ```; Here the line reports 14 ECs with a TCC of 28. However, it seems that the last 7 zeros should not be there. Similar lines can be found with ones instead, or even mixes of 0, 1 and 2's. Line a single trailing 5 are also very common. To illustrate, here are some other examples:; ```; 12 37568 108918 108919 108924 108931 131734 0 1 1 1 1 0 1. 16 98091 98097 104688 104689 104694 127677 153862 153865 0 0 0 0 0 0 2 2 3. 2 141075 5 1 ; 2 95598 5 4 ; 2 172834 5 158; ```. Here is how I ran salmon (most path have been removed for clarity):; ```; ./generateDecoyTranscriptome.sh -j 20 -g Homo_sapiens.GRCh38.dna.primary_assembly.fa -t Homo_sapiens.GRCh38.cdna.all.fa -a Homo_sapiens.GRCh38.97.chr.gtf -b <bed_path>bedtools -m <mash_path>mashmap -o <index_path>salmon. ${SALMON} index -t gentrome.fa -d decoys.txt -k 31 -i transcripts_index. ${SALMON} quant -p 8 -i ${SALMON_INDEX} -l U -r ${SAMPLE_ID}.fastq --validateMappings -o transcripts_quant; ```. Salmon was compiled on ubuntu 16.04 x86_64; version=0.14.1. Reference file come from ensembl.; ```; ftp://ftp.ensembl.org/pub/current_gtf/homo_sapiens/Homo_sapiens.GRCh38.97.chr.gtf.gz; ftp://ftp.ensembl.org/pub/current_fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; ftp://ftp.ensembl.org/pub/current_fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; ```; Read file is SRX2830419_1 (fastq). Please let me know what you think.; Thanks; [eq_classes.txt](https://github.com/COMBINE-lab/salmon/files/3407037/eq_classes.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/402:1196,validat,validateMappings,1196,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/402,1,['validat'],['validateMappings']
Security,"Hello,; We have fastq files from an Illumina stranded human mRNA library (QC ok), sequenced on novaseq X in paired end (QC ok). But when we align with salmon, we only have 50% of reads aligned. Illumina certifies that they manage to align them with their tools at 72%, but we cannot reproduce with salmon1.10.2 installed with bioconda. We used the code:; salmon quant -i human_index -l ISR -1 Fastq/R1 -2 Fastq/R2 -p 8 --validateMappings -o SALMON_OUT. If anyone can help us increase this alignment %.; Thank you for your help.; Cecile",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/905:421,validat,validateMappings,421,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/905,1,['validat'],['validateMappings']
Security,Hi . Is there any way to suppress the version checking during start-up phase?; As we have here firewalls with blocks the connection. Kind regards,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/106:95,firewall,firewalls,95,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/106,1,['firewall'],['firewalls']
Security,"Hi @rob-p . I have a dataset with about 30 samples or so, in some cases salmon quant (1.2.0) runs fine, with some samples I get the error below. I am using the same command (changing it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/512:398,validat,validateMappings,398,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512,2,['validat'],['validateMappings']
Security,"Hi @rob-p @k3yavi . I am using salmon v1.0.0 and I am using the SAF method to quantify SE QuantSeq reads (Lexogen FWD) using these command line parameters. `salmon quant --threads 16 --noLengthCorrection --validateMappings --numBootstraps 100 -l SF -i <path_to_SAF_Gentrome_Index> -r <SE_READ_1.fq> -o <salmon_SE_READ_1>`. What I observe: 75% reads map to the decoys and 25% to the actual transcripts. I am unable to fathom why this is happening? . Any suggestions as to what could be going wrong?. For now, I ended up using just the transcriptome for indexing and then salmon quant using the same parameters described above. . [However, it bothers me that I am getting the above results despite using the SAF method as suggested in the salmon docs](https://salmon.readthedocs.io/en/latest/salmon.html) - did I get anything wrong with my parameters?. > Finally, we recommend using selective alignment with a decoy-aware transcriptome, to mitigate potential spurious mapping of reads that actually arise from some unannotated genomic locus that is sequence-similar to an annotated transcriptome.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/449:206,validat,validateMappings,206,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/449,1,['validat'],['validateMappings']
Security,"Hi Rob,. I have two quick questions about salmon:. (1) For paired-end reads, does it make any difference in running salmon whether or not the defline of the sequence in input fastq files has read id appended (as 'accession.spot.readid')?; In fastq-dump, if we use the “-I” option, the defline of the sequence in one file has read id appended as “xxx.1” and the other as “xxx.2”. For example:; In file_1.fastq, a sequence has its defline:; `@ERR1586786.1.1 1 length=125`; In file_2.fastq, the corresponding paired sequence has its defline:; `@ERR1586786.1.2 1 length=125`. If we do not use the “-I” option, in both file_1.fastq and file_2.fastq, the two paired sequences have the same defline:; `@ERR1586786.1 1 length=125`. So I was wondering whether or not these two situations make any difference in running salmon? In other words, does salmon have any requirements on this (since many tools require read id appended for paired-end reads)?. (2) I found that each time running salmon on the same sequence file, the results (the quant.sf file) have some differences. Is this an expected behavior?. I am using the version: salmon 0.9.1. Thank you very much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/478:213,access,accession,213,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/478,1,['access'],['accession']
Security,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/675:1033,validat,validateMappings,1033,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675,2,['validat'],['validateMappings']
Security,"Hi `COMBINE-lab/salmon`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential secu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:283,secur,security,283,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['secur'],['security']
Security,"Hi all, ; I have a dataset with 40 samples, which I aligned to a reference transcriptome using HISAT2. I then quantified these using salmon using the alignment mode, with a command like this:. `salmon quant -t referencetranscriptome.fa -l U -a alignment.bam -o path/to/out/dir/`. Here referencetranscriptome.fa is constant for all 40 samples, and the same reference I indexed for use with HISAT. Upon rereading the documentation, I understand that this is wrong?. > Say that you’ve prepared your alignments using your favorite aligner and the results are in the file aln.bam, and assume that the sequence of the transcriptome you want to quantify is in the file transcripts.fa. This makes it seem like for each run of salmon in alignment mode, I should use a different transcriptome. For instance, something like this:. `salmon quant -t transcriptome1A.fa -l U -a 1A.bam -o /path/to/out/dir`. So question 1: Is this the right approach?. When I noticed this, I tried to run the above command, which gave me an error like this:. > Please provide a reference FASTA file that includes all targets present in the BAM header If you have access to the genome FASTA and GTF used for alignment consider generating a transcriptome fasta using a command like: gffread -w output.fa -g genome.fa genome.gtf. A post on Biostars with the same error had the issue that the references were difference (genome and transcriptome), which is not the case for me. Additionally, I tried running gffread as suggested by the salmon error, which doesn't work at all because it wants to pull gene names (?) from my gff file, but my first column has chromosome numbers, while my gene names are in the 9th column. The command was:. `gffread -w transcript1A.fa -g referencetranscriptome.fa referenceannotation.gff`. So question 2 : Is gffread the right step here? If so, what should I be using to have it run properly?. Thanks in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/740:1131,access,access,1131,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/740,1,['access'],['access']
Security,"Hi salmon team!. This is my first time trying out generating an index with a decoy (and doing this on an AWS environment, rather than a local HPC cluster) using salmon 1.5.1. I followed the instructions outlined here: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; But, I got stuck at Round 0:. ![image](https://user-images.githubusercontent.com/7998935/126198587-2e726611-69a4-436c-8236-a2d5de0432c4.png). I assume that maxing out the CPUs here may be the problem? Here, I used an Ubuntu Server (18.01) with 64GB and 8CPUs. I've also tried launching a cluster, giving myself access to up to 50 such machines. But, I still get stuck at the same stage. I would appreciate any advice to get around this issue!. Here are the steps I followed:. conda create -n salmon salmon; conda activate salmon. wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_38/gencode.v38.transcripts.fa.gz; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_38/GRCh38.primary_assembly.genome.fa.gz. grep ""^>"" <(gunzip -c GRCh38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat gencode.v38.transcripts.fa.gz GRCh38.primary_assembly.genome.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon.gencode.v38_transcript_index –gencode",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/687:602,access,access,602,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/687,1,['access'],['access']
Security,"Hi there, I'am using a old version (0.14.1) of salmon and often get a low mapping rate of my samples. This time I got the lowest ratio ever, 0.0417748%. . ```; [2021-04-16 16:40:11.804] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ig; nored.; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly; specified, it is being set to 0.65; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorizati; on. rangeFactorizationBins is being set to 4; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting cons; ensusSlack to 0.2.; [2021-04-16 16:40:11.804] [jointLog] [info] parsing read library format; [2021-04-16 16:40:11.804] [jointLog] [info] There is 1 library.; [2021-04-16 16:40:11.898] [jointLog] [info] Loading Quasi index; [2021-04-16 16:40:11.898] [jointLog] [info] Loading 32-bit quasi index; [2021-04-16 16:40:17.838] [jointLog] [info] done; [2021-04-16 16:40:17.838] [jointLog] [info] Index contained 77,654 targets; [2021-04-16 16:57:15.485] [fileLog] [info]; At end of round 0. Observed 25613538 total fragments (25613538 in most recent round). [2021-04-16 16:57:15.485] [jointLog] [info] Computed 1,663 rich equivalence classes for further processing; [2021-04-16 16:57:15.485] [jointLog] [info] Counted 10,700 total reads in the equivalence classes; [2021-04-16 16:57:15.488] [jointLog] [warning] 0.00162414% of fragments were shorter than the k used to build the index (21).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-16 16:57:15.488] [jointLog] [info] Number of mappings discarded because of alignment score : 86,602; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 124,571; [2021-04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:350,validat,validateMappings,350,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,3,['validat'],['validateMappings']
Security,"Hi there, I'm wondering how to view the *.gz files (e.g. fld and biases files) in the ""aux_info"" folder after running Salmon. It doesn't look straightforward to me on how to explore the contents of these files. After unzip the .gz files, they are still not in human readable format. Is another tool required to access these files? Any suggestions are appreciated. Guan.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/438:311,access,access,311,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/438,1,['access'],['access']
Security,"Hi there, new to experimental RNAseq analysis. Have used ""clean"" example datasets and felt like salmon would be suitable for my analysis. However, using paired-end libraries from Illumina (I have tried trimmed and non-trimmed reads) I am getting the following error when running: salmon quant -i salmon_index/ --libType A -1 151_R1.fastq.gz -2 151_R2.fastq.gz --validateMappings -o 151_quant: . ""Found no concordant and consistent mappings. If this is a paired-end library, are you sure the reads are properly paired? check the file: 151_quant/lib_format_counts.json for details"". When I go to this file, I see: ""num_frags_with_consistent_mappings"": 0,. Given that the reads from illumina come in lanes, I did merge those files (R1 with R1 files and R2 with R2) but running salmon quant on the non-merged files produces the same error. These reads have been mapped to a reference genome for which my lab has used for many analyses, I am not sure what the issue could be. Any ideas would be greatly appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/869:362,validat,validateMappings,362,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/869,1,['validat'],['validateMappings']
Security,"Hi there,. I'm a newcomer here.; Salmon source was downloaded and extracted, new folder ""build"" has created, 'cmake ..' has also be done to confirm the feasibility of installation.; However, When I run the code ""sudo make"", it returns a error regarding downloading the package tbb-2019_U8, here is the report. ```; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; tbb-2019_U8.tgz did not match expected SHA256! Exiting.; CMakeFiles/libtbb.dir/build.make:107: recipe for target 'libtbb-prefix/src/libtbb-stamp/libtbb-download' failed; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; CMakeFiles/Makefile2:253: recipe for target 'CMakeFiles/libtbb.dir/all' failed; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; Makefile:179: recipe for target 'all' failed; make: *** [all] Error 2; ```; it seems the requirement isn't met and the threshold should be modified?; appreciate any help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/497:371,checksum,checksum,371,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497,1,['checksum'],['checksum']
Security,"Hi, . Thank you for helping me with my issue. I'm not sure if the mapping rate so low is reasonable in this case: the fastq files (R1 and R2) were generated reservely from the bam files. I tried both Hg38 and Hg19 for this dataset (only bam files available to me, which were aligned by Hg19 genome), and I got similarly low mapping rate. . The salmon log is like this:; ```; [2024-01-27 01:09:31.030] [jointLog] [info] setting maxHashResizeThreads to 20; [2024-01-27 01:09:31.030] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-01-27 01:09:31.030] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-01-27 01:09:31.030] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-01-27 01:09:31.030] [jointLog] [info] parsing read library format; [2024-01-27 01:09:31.030] [jointLog] [info] There is 1 library.; [2024-01-27 01:09:31.032] [jointLog] [info] Loading pufferfish index; [2024-01-27 01:09:31.033] [jointLog] [info] Loading dense pufferfish index.; [2024-01-27 01:09:33.435] [jointLog] [info] done; [2024-01-27 01:09:33.508] [jointLog] [info] Index contained 252,048 targets; [2024-01-27 01:09:36.263] [jointLog] [info] Number of decoys : 0; [2024-01-27 01:09:41.237] [jointLog] [info] Automatically detected most likely library type as IU. [2024-01-27 01:10:28.189] [fileLog] [info] ; At end of round 0; ==================; Observed 3600210 total fragments (3600210 in most recent round). [2024-01-27 01:10:28.188] [jointLog] [info] Computed 179,584 rich equivalence classes for further processing; [2024-01-27 01:10:28.188] [jointLog] [info] Counted 446,871 total reads in the equivalence classes ; [2024-01-27 01:10:28.202] [jointLog] [warning] 0.197488% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/908:643,validat,validateMappings,643,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908,1,['validat'],['validateMappings']
Security,"Hi, ; How to align metagenomic reads obtained from MetaBAT-generated MAGs to metatranscriptomic reads in order to calculate the Transcripts Per Million (TPM) for these MAGs.; $ salmon index -i transcripts_index -k 31 --gencode -p 8 -t /home/MBR02_0-5cm.6.fa; $ salmon quant -i transcripts_index -l A -1 /home/transcriptom/PCBR/PCBR_p_r1.fastq -2 /home/transcriptom/PCBR/PCBR_p_r2.fastq --validateMappings -o transcripts_quant. This is my code, but it’s doing the opposite of what I expected because it calculates the TPM as if the genome were a single entity.I’m not sure if the genome.fa file should be used as the index.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/956:388,validat,validateMappings,388,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/956,1,['validat'],['validateMappings']
Security,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/854:375,validat,validateMappings,375,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854,2,['validat'],['validateMappings']
Security,"Hi, ; This is my first time posting here. I have been trying to get Salmon to work for the past few days but kept running into the same issue (shown below). Any help or tips would be greatly appreciated!. **This bug/issue is primarily related to salmon in bulk mode.**. **Bug/issue Description**; I'm trying to use Salmon with precomputed indecies that I downloaded from the refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)), but when I pass in the index and my `.fastq.gz` files into Salmon I am encountering an error (shown below). . **To Reproduce**. - Used Salmon version 1.2.1; - Downloaded the index (aka the reference transcriptome from refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)).; - Attempted to pass in trimmed .fastq.gz files (the files were trimmed using the FASTQC quality control pipeline) using the following command. > `salmon quant -i default -l A -1 <(gunzip -c <path to .fastq.gz file>) -2 <(gunzip -c <path to .fastq.gz file>) --validateMappings -o salmon_output`. - Received error shown below. ![image](https://user-images.githubusercontent.com/67990244/126880016-0c556d6f-a4f6-4a4b-9906-29d9fc06e00d.png). **Expected behavior**; I expected this program to run normally and generate the quantification output files. . **Desktop (please complete the following information):**; - OS: RedHat Linux Enterprise; - More information in screenshot below; ![image](https://user-images.githubusercontent.com/67990244/126880058-d03a8247-7eea-4108-b2c2-0566ff2c975f.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/690:1119,validat,validateMappings,1119,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/690,1,['validat'],['validateMappings']
Security,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/518:461,validat,validateMappings,461,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518,3,['validat'],['validateMappings']
Security,"Hi, I've been using salmon v1.0.0 to quantify bulk transcripts from fastqs using the genocde v32 reference. Ive used it successfully on several cohorts but on my most recent I received the following warning in my log file (I also attached the entire file):. [2021-05-10 20:51:46.936] [jointLog] [warning] NOTE: Read Lib [[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /gcloud-shared/sample/lib_format_counts.json for details. Here is also the lib_formats_count.json:; {; ""read_files"": ""[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 43142675,; ""num_assigned_fragments"": 43142675,; ""num_frags_with_concordant_consistent_mappings"": 36380775,; ""num_frags_with_inconsistent_or_orphan_mappings"": 7777480,; ""strand_mapping_bias"": 0.5172763911708863,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 18818916,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17561859,; ""SF"": 2219340,; ""SR"": 5558140,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Here is the salmon command I've been using:. salmon --no-version-check quant -i /gcloud-shared/reference -l A -1 ${FASTQR1} -2 ${FASTQR2} \; --validateMappings --seqBias --gcBias --posBias --threads $(nproc) -o /gcloud-shared/sample. The whole process still produces quants files, but having never received this warning with other sample cohorts I want to be sure it's not affecting the results. Any idea why I might be getting this? Am I using the wrong lib type?. Thanks!. [ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6479118/ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/659:1237,validat,validateMappings,1237,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/659,1,['validat'],['validateMappings']
Security,"Hi, this is following on from our discussion in Bioconductor Slack (channel `#singlecell-queries`) from a few weeks ago. Thanks again for the update to propagate cellular barcode and UMI tags in the alevin generated BAM/SAM (with the `--writeMappings` flag). We have been testing this out, and have been able to access all this information by parsing through the SAM file. However in the end our plan to use this with [Vireo](https://vireosnp.readthedocs.io/en/latest/index.html) and [cellSNP](https://github.com/single-cell-genetics/cellSNP) for genetic demultiplexing of samples didn't really work out, mainly because `alevin` generates a transcriptomic BAM, and `cellSNP` expects a genomic BAM and VCF. I tried a few different options for getting this to work, including (i) attempting to convert to a genomic BAM using [sam-xlate](https://github.com/mozack/ubu/wiki) (which didn't seem to work because `sam-xlate` is designed to convert in the other direction), and (ii) converting the VCF to transcriptomic coordinates, as suggested [here](https://github.com/single-cell-genetics/cellSNP/issues/14) by the `Vireo`/`cellSNP` authors (the VCF conversion seemed to work, but `cellSNP` still didn't match it to the BAM properly). For now, I think we are going to go back to using `Cell Ranger` in our pipeline, since this did work with `Vireo`/`cellSNP`, although was of course much slower than `alevin` and has issues with multi-mapping reads. If you have any other ideas please let me know too. However I also wanted to suggest that if there is any interest on your end in developing some sort of conversion tool (transcriptomic BAM -> genomic BAM) for `alevin` outputs, then I think this would be super useful for people, especially if these genetic demultiplexing tools become more widely used. (We have been getting very good demultiplexing performance with `Cell Ranger` + `Vireo`/`cellSNP`, and are planning to release some of our code as a small `Snakemake` pipeline for others to use, so if ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/550:312,access,access,312,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/550,1,['access'],['access']
Security,"Hi,. I have been running salmon v1.4.0 on 324 samples. In 8 samples I did not get any quantification and the process ended with a warning like "".....salmon was only able to assign 0 fragments to transcripts in the index...."". The command line I used is as follow (I simplified the paths and file names):; salmon quant -p 20 -i Salmon_Index -l A --seqBias --gcBias --biasSpeedSamp -1 $FASTQ1.R1.fastq.gz -2 $FASTQ2.R2.fastq.gz -o $outDIR --validateMappings. These same 8 samples were processed with HISAT2 and the overall alignment rate was above 80%. I attached the log file for one of the 8 runs; [logFile.txt](https://github.com/COMBINE-lab/salmon/files/5846381/logFile.txt). Do you have any suggestions ? do you need more info ?. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/616:439,validat,validateMappings,439,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/616,1,['validat'],['validateMappings']
Security,"Hi,. I have had success using Salmon and Alevin after the hash-resize-hotfix issues. However, when I try to compile the latest commit I get an error for an undeclared error. I have tried searching through the external dependencies for the definition of `rapmap::utils::ChainStatus` but I cannot find it. Thanks!. ```; [ 6%] Built target libbwa; [ 12%] Built target libtbb; [ 19%] Built target libcereal; [ 26%] Built target libdivsufsort; [ 32%] Built target libstadenio; [ 38%] Built target libspdlog; [ 45%] Built target libgff; [ 47%] Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:58,hash,hash-resize-hotfix,58,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,1,['hash'],['hash-resize-hotfix']
Security,"Hi,. I just wanted to check if I'm following the documentation correctly. I have created a decoy-aware index and want to run salmon (v0.14.1) with the following options:. `salmon quant --dumpEq --validateMappings --rangeFactorizationBins 4 -l A -i $index --seqBias --gcBias -p 40 --geneMap $genemap -o $1.quants.25 -1 $read1 -2 $read2`. I am confused as to whether the documentation (https://salmon.readthedocs.io/en/latest/salmon.html) is recommending to combine ""--validateMappings"" with ""--mimicBT2"" or ""--mimicStrictBT2"" or not. Secondly, selective mapping is now highly recommended in conjunction with a decoy-aware transcriptome in the first note, but a later note states: . ""For the time being, if you wish to quantify using quasi-mapping, you should not build a decoy-augmented index."". Given the above command should I go back to a non-decoy aware transcriptome? . Thank you for any help and clarifications!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/399:196,validat,validateMappings,196,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/399,2,['validat'],['validateMappings']
Security,"Hi,. I recently used STAR and Salmon to quantify RNA expression from FASTQ files. When using Salmon, I was achieving good alignment rates of around 70%, but getting dismal STAR alignment rates of 1%-20% (both using GENCODE v38 references). Further inspection of my STAR log files shows most reads were being unmapped because they were too short. From STAR github issues I discovered that my FASTQ files were scrambled (confirmed with [validatefastq](https://github.com/biopet/validatefastq) tool), and the read headers were not properly sorted. This meant that the reads in the `R1` file did not necessarily correspond to the reads in the `R2` file (this was confirmed by BLASTing some of the reads and seeing they corresponded to different loci). . After discovering my FASTQs were scrambled, I was surprised that Salmon still had such high alignment rates yet STAR did not. I was wondering how exactly Salmon handles input FASTQs with mismatched reads. Is there some fix that Salmon applies to match reads with their corresponding sequence ID, thus explaining the high alignment rate? Are the results from Salmon on my bad input FASTQs complete gibberish and should be discarded, or are they somehow still valid? Is there any defined behavior that Salmon should follow when it encounters improperly sorted input FASTQs?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/777:435,validat,validatefastq,435,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/777,2,['validat'],['validatefastq']
Security,"Hi,. I wanted to quantify reads sequenced with a Oxford Nanopore MinION using salmon 0.12.0. With activated --validateMappings option mapping rates were below 1% (mapping them to the human genome using minimap2 gave me ~95% mapping rates).; When I didn't set the --validateMappings flag I got ~8% and with activated --validateMappings and very low --minScoreFraction (0.01) I could achieve at most 18% mapping rates. --fldMean was set to 800 in each case (according to the mean read lenghts reported by NanoPlot).; Is there a possibility to improve the mapping rates on these noisy long reads?. Regards,; Markus",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/376:110,validat,validateMappings,110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/376,3,['validat'],['validateMappings']
Security,"Hi,. I was hoping to run salmon quantification for my RNAseq data, which will then be analysed using sleuth. While most samples worked, for some samples sleuth complained that there are Na/NaN values when summarizing the bootstraps. Is it possible to remove Na/NaN values from salmon results, or prevent Na/NaN values from being generated in salmon? Please check below for my script to run salmon. Any assistance would be greatly appreciated. salmon quant -i index -l A -1 R1_clean.fastq.gz -2 R2_clean.fastq.gz -p 48 --validateMappings --numBootstraps 1000 --seqBias -o quants_sample",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/529:520,validat,validateMappings,520,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/529,1,['validat'],['validateMappings']
Security,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:304,validat,validateMappings,304,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,3,['validat'],['validateMappings']
Security,"Hi,. We (@emilyburke, @andrewejaffe and me) can successfully run salmon using 1 core in the SGE-managed cluster we have access to. The problem is that for some reason we have to request a lot of memory, thus reducing the number of jobs we can run simultaneously and increasing the overall time it takes to process datasets. . I see in https://github.com/COMBINE-lab/salmon/issues/97 that you suggest using `--perfectHash` and a newer `salmon` version, which we haven't tried and might end up being the solution. Here is the bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:120,access,access,120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['access'],['access']
Security,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/66:1160,Hash,Hash,1160,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"Hi,; I am used to work with RNA-seq data sets from human or mouse (thus well-annotated organisms), for which I always use Salmon.; Now a colleague of mine asked whether I could help him with analyzing a data set obtained from a non-model organism (A) for which even no reference transcriptome is available. I therefore would like to map the reads to the transcriptome of the closest species (B) available in ENSEMBL. [It basically resembles the situation mentioned [here](https://www.biostars.org/p/253396/) at the BioStars forum, but then at the transcriptome level]. . I started by running Salmon using the settings I normally use for mouse, but the the percentage of mapped reads is extremely low, i.e varying between 0.5-2%. That it would be lower than usual I expected, but not this low....; Because I cannot easily see the forest for the trees, I would appreciate if some suggestions could be given that in effect 'relax' the criteria for mapping, eventually resulting in an increased mapping%. Thanks!; G. My code/arguments:; Input: 150 bp paired-end RNA-seq data.; Average number of reads per sample: ~22M. Transcriptome index file is 'decoyed'; generated with default settings (k=31). Salmon arguments:; ```; /home/guidoh/SALMON/salmon-latest_linux_x86_64/bin/salmon quant -i ./Lotgi1_combined_index \; 	--libType A \; 	--seqBias \; 	--gcBias \; 	--biasSpeedSamp 5 \; 	--validateMappings \; 	--numGibbsSamples 20 \; 	-1 ${F1} \; 	-2 ${R1} \; 	-o ${salmonsubdir}$fn4; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/403:1380,validat,validateMappings,1380,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/403,1,['validat'],['validateMappings']
Security,"Hi,; I just installed salmon using conda. I tried to execute the sample test that comes on the main page: https://combine-lab.github.io/salmon/getting_started/. When I try to run the quantification code; #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 --validateMappings -o quants/${samp}_quant; done ; even though the files are there, in the data directory, the tool seems to not recognize the fastq files and pops the following error for every DRR0161xx_x.fastq.gz file:; ERROR: file [DRR016140_2.fastq.gz] does not appear to exist!. ]; salmon quant was invoked improperly. Is this some common error or is it a new bug?; Thanks in advance for any response/suggestion on how to proceed here",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/963:416,validat,validateMappings,416,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963,1,['validat'],['validateMappings']
Security,"Hi. I have a general question pertaining to quantifying QuantSeq data and comparing Salmon vs the alignment methods recommended by Lexogen (Star/Bowtie followed by htseq to get read counts per gene). Has anyone compared the 2 methods - would be very interested to know the findings. [I happen to see this issue which is still stated as ""Open""](https://github.com/COMBINE-lab/salmon/issues/108) - probably it should be marked as Closed?. . Based on the above issue and also [this issue](https://github.com/COMBINE-lab/salmon/issues/177), I assume using `--noLengthCorrection` would be the recommended way to use Salmon for quantifying QuantSeq data - is that right?. In general, I am planning to use Salmon this way:. 1. index the transcriptome; 2. `salmon quant -i {input.index} -l A -1 {input.R1} -2 {input.R2} -o {output} --noLengthCorrection --validateMappings --gcBias --seqBias --posBias`. While using Salmon for quantification, are there any subtleties to be aware of based on the QuantSeq protocol (FWD vs REV) ?. Please advise. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/365:847,validat,validateMappings,847,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/365,1,['validat'],['validateMappings']
Security,"I am analyzing single cell RNAseq with10x chemistry.; I have my own transcriptome from long read sequencing and followed all the steps, prepare metadata, make the gentrome.fasta, indexing, using bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] E",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540:1013,validat,validation,1013,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540,2,['validat'],"['validateMappings', 'validation']"
Security,"I am interested to run your tool: Salmon. It is a great and easy tool to use. I encounter this error by using:; ```; ./bin/salmon quant -t output.fa -g hgTables.gtf -l IU -a ../../pipeline/rna_seq/all_chr1/merged.bam -p 20 -o salmon_quant; ```. Error:; ```; [2017-04-11 12:33:40.420] [jointLog] [critical] Transcript chr1 appeared in the BAM header, but was not in the provided FASTA file; [2017-04-11 12:33:40.420] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment ; consider generating a transcriptome fasta using a command like: ; gffread -w output.fa -g genome.fa genome.gtf; you can find the gffread utility at (http://ccb.jhu.edu/software/stringtie/gff.shtml); ```. I generated output.fa using gffreads from hg19.fa and gtf . In the output.fa, it is annotated in terms of gene ids, but there is chr1 in BAM. I am not sure how can I make them to talk to each other?. Could you please tell me how can I fix it?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/131:541,access,access,541,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131,1,['access'],['access']
Security,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/914:663,validat,validateMappings,663,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914,4,['validat'],"['validateMappings', 'validation']"
Security,"I am trying to quantify some rna sequences with Salmon. Instead of creating my own index, I downloaded a pre-build version from here: [http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4](url) suggested in the salmon doc. I downloaded the file: `salmon_partial_sa_index:default` which is under my scope of research. Then, I just run the following command: `salmon quant -i default -l A -1 P10_1.fq.gz -2 P10_2.fq.gz --validateMappings -o transcripts_quant`, where `default` is the name of the folder resulting after the decompression of the salmon pre-build index, and `P10_1.fq.gz -2 P10_2.fq.gz` are paired reads of rna. I get this error: **rapidjson internal assertion failure: IsObject()**. I read a thread where a user performed a re-build. But since I am new to this filed I don't know what FASTA file I could use to do it. It's worth mentioning that I am working on a remote server and I downloaded the pre-build index directly on it, using `wget`. Some screenshot of what the `default` folder contains:. <img width=""806"" alt=""Schermata 2023-07-27 alle 14 42 59"" src=""https://github.com/COMBINE-lab/salmon/assets/81829336/e0bda06a-f344-4836-9e27-8e2de6a10265"">",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/862:463,validat,validateMappings,463,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862,1,['validat'],['validateMappings']
Security,"I am trying to use Salmon and am being returned the following error. Any help here? . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501367_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501367 }; Logs will be written to salmonRes_SRR1501367/logs; [2021-07-16 11:47:01.372] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.372] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.372] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.372] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.372] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:751,validat,validateMappings,751,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['validat'],['validateMappings']
Security,"I am using salmon v1.0.0 that was compiled using bioconda. I downloaded fastq files from GEO, built an index using salmon index, but am getting 0 mappings. . #Downloading data; wget -o test.fastq.gz s3://sra-pub-src-5/SRR*******/test.fastq.gz. #building the salmon index from gencode [using vM22 for consistency]; salmon index -t gencode.vM22.transcripts.fa.gz -i gencode.vM22.transcripts --gencode. #running salmon quant; salmon quant -l A -i gencode.vM22.transcripts -r test.fastq.gz -o ~/Test1/ --gcBias --validateMappings --numGibbsSamples 20. The output .sf files have 0 TPMs and 0 fragment reads for all outputs and I am attaching a screenshot of the log file. . The reference genome and sequencing file is from the same organism. . ![Screen Shot 2022-10-06 at 3 53 32 PM](https://user-images.githubusercontent.com/108241225/194406132-61d5a5ce-a429-4b04-9fab-e4586dea9020.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/804:509,validat,validateMappings,509,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/804,1,['validat'],['validateMappings']
Security,"I am using v1.2.1. The command I used:; `salmon quant -i BANY_transcript_index -p 36 --libType IU -g BANY_v2.gtf -1 ${i}_1P.fq.gz -2 ${i}_2P.fq.gz --validateMappings -o ${i}.quant`. There's NO quant.gene.sf file generated...only the quant.sf. The gtf file I used:; ```; Bany_Scaf1	maker	gene	201136	207903	.	+	.	Alias ""maker-Bany_Scaf1-snap-gene-2.23""; Dbxref ""InterPro:IPR019774"" ""Pfam:PF00351""; ID Bany_03723; Name Bany_03723; Ontology_term ""GO:0016714"" ""GO:0055114""; gene_id Bany_03723; Bany_Scaf1	maker	transcript	201136	207903	.	+	.	Alias ""maker-Bany_Scaf1-snap-gene-2.23-mRNA-1""; Dbxref ""InterPro:IPR019774"" ""Pfam:PF00351""; ID ""Bany_03723-RA""; Name ""Bany_03723-RA""; Ontology_term ""GO:0016714"" ""GO:0055114""; Parent Bany_03723; _AED ""0.06""; _QI ""45|1|1|1|1|1|7|425|530""; _eAED ""0.06""; gene_id Bany_03723; original_biotype mrna; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	exon	201136	201304	.	+	.	ID ""Bany_03723-RA:1""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	exon	202687	202770	.	+	.	ID ""Bany_03723-RA:2""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	exon	202886	202921	.	+	.	ID ""Bany_03723-RA:3""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	exon	203004	203820	.	+	.	ID ""Bany_03723-RA:4""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	exon	206097	206223	.	+	.	ID ""Bany_03723-RA:5""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	exon	206649	206878	.	+	.	ID ""Bany_03723-RA:6""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	exon	207304	207903	.	+	.	ID ""Bany_03723-RA:7""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	CDS	201181	201304	.	+	0	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/530:149,validat,validateMappings,149,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530,1,['validat'],['validateMappings']
Security,"I am working with C. griseus bulk RNAseq, and when using quant mode, the aux_info folder is empty. My understanding was that this folder shouldn't be empty. However, it is empty for every sample. I am using GCF_000223135.1 genome downloaded using NCBI datasets like this:; `datasets download genome accession GCF_000223135.1 --include gff3,rna,cds,protein,genome,seq-report`; I have tried indexing with and without decoy with similar results.; Is this normal?; EDIT: ; I tried using a different genome from here (https://ftp.ensembl.org/pub/release-112/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICRH-1.0.dna_sm.toplevel.fa.gz) and it produces a non-empty aux_info folder.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/955:299,access,accession,299,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/955,1,['access'],['accession']
Security,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/37:774,Hash,Hash,774,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"I have been trying to use the salmon docker container available on docker hub. When I run salmon quant I am able to load all of the files and start the program, but I get a killed message while loading hash. I get an empty log file and empty folders created after the container is killed. **To Reproduce**; I run the following command to run the container:; `docker run -v /Users/caz3so/workspaces/salmon_docker:/temp -w /temp -ti combinelab/salmon`. The following is the output:; <img width=""1389"" alt=""screenshot 2018-06-27 11 15 56"" src=""https://user-images.githubusercontent.com/31480706/41983246-8296bb76-79fb-11e8-9710-c38ec051b7e7.png"">. **Expected behavior**; I have salmon installed on my machine and was able to run these files with no problem. It is only when I am using the docker container, so it could be a docker related problem. . **Desktop (please complete the following information):**; I am using a 2017 Macbook pro with 16 GB 2133 MHz LPDDR3 memory and a 2.8 GHz Intel Core i7 processor.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/243:202,hash,hash,202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243,1,['hash'],['hash']
Security,"I have been using salmon index command as: ; `salmon index --type quasi -k 31 --perfectHash `. If I am interested in using the SA method, my understanding from the command line help text `salmon index -h ` is that _perfectHash is only for the quasi method_ and cannot be used if I am using the SA method. Is my understanding correct?. Also, [the online documentation](https://salmon.readthedocs.io/en/latest/salmon.html) does not pull out any mention of the `--perfectHash` argument. Another question/suggestion for the online documentation page - [as referenced in this issue](https://github.com/COMBINE-lab/salmon/issues/399), on first glance, it is confusing as to whether one has to combine ""--validateMappings"" with ""--mimicBT2"" or ""--mimicStrictBT2"". I know @rob-p has addressed it in the github issue tracker, but it would be better to update the online documentation to clarify this **and also give scenarios** in which mimicBT2 or mimicStictBT2 should be used,. https://github.com/COMBINE-lab/salmon/issues/399",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/405:698,validat,validateMappings,698,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/405,1,['validat'],['validateMappings']
Security,"I know this problem was reported previously. I checked all the answers and I can see there are many reasons for this. In my case, I have a 'high number of mappings discarded because of alignment score'. I created the index using mature transcripts (without introns and genome decoy). The command I used to perform quantification:. ```; salmon quant -i BANY_transcript_index -p 36 --libType A -g BANY_v2.gtf -1 ${i}_1P.fq.gz -2 ${i}_2P.fq.gz --validateMappings -o ${i}.quant. ```; The mapping rate I got. ```; [2020-06-04 18:03:49.102] [jointLog] [info] Number of mappings discarded because of alignment score : 57,476,847; [2020-06-04 18:03:49.102] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 4,980,029; [2020-06-04 18:03:49.102] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2020-06-04 18:03:49.102] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 366,055; [2020-06-04 18:03:49.102] [jointLog] [info] Mapping rate = 56.3428%; ```. The mapping rates I got are ~50-65%...Here are some of the reasons for low mapping rates based on previous posts:. 1. rRNA contamination: In my case, rRNAs were removed during library construction, also I quantified rRNA contents in my trimmed reads, and it's very low (<5%).; 2. DNA contamination: This is possible, I got ~98% genome mapping rate using hisat2. But in fact, DNAs are removed in my RNA extraction process...and poly-T was used to select mRNAs during the library construction...; 3. Not using pre-mature transcripts so reads mapping to introns are discarded: I am not sure if this is a valid point since we usually quantify mature mRNAs, not pre-mature ones.; 4. Library type: my library was constructed in a stranded way. The program detected my libtype as ISR:; ```; {; ""read_files"": ""[ DS_1_HW_FM_1P.fq.gz, DS_1_HW_FM_2P.fq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/533:443,validat,validateMappings,443,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/533,1,['validat'],['validateMappings']
Security,I noticed that for some reason salmon does not convert transcript ids to gene ids.; Here is the command that I run:; ```; salmon --no-version-check quant -i /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/446511232/GRCh38.p13_ensembl_101 --geneMap /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-2062771642/Homo_sapiens.GRCh38.101.gtf --numBootstraps 128 --threads 3 -l A --seqBias --gcBias --validateMappings --writeUnmappedNames -o quant_GSE113798_GSE113801_GSM3119577_SRR7075087 \; -1 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_1.fastq_cleaned.fastq.gz -2 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_2.fastq_cleaned.fastq.gz; ```; I also enclose the results. Even though I use Ensembl Human GTF ( i.e. ftp://ftp.ensembl.org/pub/release-101/gtf/homo_sapiens/Homo_sapiens.GRCh38.101.gtf.gz ) it gives me transcript ids in quant.genes.sf output; [quant.zip](https://github.com/COMBINE-lab/salmon/files/5632824/quant.zip); [Downloads.tar.gz](https://github.com/COMBINE-lab/salmon/files/5632828/Downloads.tar.gz),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/598:618,validat,validateMappings,618,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/598,1,['validat'],['validateMappings']
Security,"I noticed that the quantification of my reads took a very long time (>10h). I generated the index in accordance with these instructions:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; (I used the human genome hg19). I am using CentOs 7 and I have access to 16GB of RAM and to 8 threads. Here are some informations about the run:; ""salmon_version"": ""1.2.0"",; ""index"": ""04_genome_data/salmon_index/salmon_index/"",; ""gcBias"": [],; ""threads"": ""8"",; ""libType"": ""A"",; ""mates1"": ""02_rawreads//Adenocarcinoma/patient001/fastq/S0216_1.fastq.gz"",; ""mates2"": ""02_rawreads//Adenocarcinoma/patient001/fastq/S0216_2.fastq.gz"",; ""validateMappings"": [],; ""output"": ""03_DEG/salmon//Adenocarcinoma/patient001"",; ""auxDir"": ""aux_info"". ""num_bootstraps"": 0,; ""num_processed"": 19848610,; ""num_mapped"": 11112281,; ""num_decoy_fragments"": 1953200,; ""num_dovetail_fragments"": 33267,; ""num_fragments_filtered_vm"": 2134945,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 26561460,; ""percent_mapped"": 55.98518485677335,; ""call"": ""quant"",; ""start_time"": ""Wed Apr 22 12:53:21 2020"",; ""end_time"": ""Thu Apr 23 00:14:34 2020""`. Is there something obvious I am doing wrong or do you have an idea why it takes so long? . Furthermore, I was wondering if a mapping rate of 56% is considered ""okay""? ; I didnt trim any reads, because the quality score was high throughout all bases. Any help is appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/516:274,access,access,274,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/516,2,"['access', 'validat']","['access', 'validateMappings']"
Security,"I recently quantified a set of RNA-seq samples using both Salmon and RSEM to eventually do differential isoform analysis. When the overlap of significant isoforms was rather low -- even though the only difference was whether the TPM values were from Salmon or RSEM -- I started comparing the TPM values and saw something strange. After taking the log2 of the TPM values, I generated [these](https://drive.google.com/drive/folders/1eLDVPoNS_pRaOkFqQHY9l1DDDUovIho3?usp=sharing) plots. TPM values for salmon are from `quant.sf` files and for RSEM, `*.isoforms.results` files. . The there three very consistent commonalities between these plots:. 1. There seems to be a large number of transcripts with zero expression in one but not the other.; 2. There seems to be a set of isoforms that is more highly expressed in Salmon across all plots. ; 3. The bulk of reads that are close to the diagonal line are mostly concentrated on the RSEM side. And the details of the runs:. **RSEM v1.3.2 commands:**. indexing:. - rsem-prepare-reference --gtf gencode.vM25.annotation.gtf --star --star-path /appl/soft/bio/star/gcc_9.1.0/2.7.2a/bin -p 8 --star-sjdboverhang 83 GRCm38.primary_assembly.genome.fa rsem_indx_gencode/rsem_ref. quant:. - rsem-calculate-expression -p 8 --strandedness forward --star --star-path /appl/soft/bio/star/gcc_9.1.0/2.7.2a/bin --star-gzipped-read-file input_file.fq.gz rsem_indx_gencode/rsem_ref output/path. **salmon v1.4.0 commands:**. indexing:. - used entire genome as decoy sequence, decoy file made following instructions from: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ (except that latest M25 release was used). - salmon index -t gentrome.fa.gz -d decoys.txt -i salmon_index --keepDuplicates --gencode -p 12. quant:. - salmon quant -i salmon_index -l A -r /path/to/input.fq.gz -g gencode.vM25.annotation.gtf -p 4 --validateMappings -o path/to/output. Any idea what could be going on here?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/612:1867,validat,validateMappings,1867,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/612,1,['validat'],['validateMappings']
Security,"I used Salmon to map 150x2 bp untrimmed reads to a custom TRC index that I created for an shRNA library. The results appear to be accurate for the most part, although there are minor discrepancies, but I'm wondering if using Salmon for this is appropriate. Should I be changing any particular settings or should I be using an aligner like BWA or Bowtie2?. Thank you for your aligner as I've used it successfully numerous times with RNA-Seq data!. Here is some example code:; `salmon quant -i trc2_index -l A -1 fastq_r1.fastq.gz -2 fastq_r2.fastq.gz --validateMappings --gcBias -p 24 -o salmon_output`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/585:552,validat,validateMappings,552,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/585,1,['validat'],['validateMappings']
Security,"I'm planning on using your wonderful Salmon tool v0.12.0 for generating TPM counts with a view to quantifying relative abundance of certain bacterial antibiotic resistance genes in my shotgun (human gut) metagenomes. So as to ensure strict mappings to the genes of interest, I would like to set the value of the flag '--minScoreFraction' to 0.90. Since its a metagenome with a truck-load of genes from several microbes, I plan to quantify only those genes that show >=90% identity at the nucleotide-level to the known antibiotic resistance genes (of interest). My question here really is whether setting the flag minScoreFraction to 0.90 achieves anything close to what I've in mind? Below is the full command line I used for Salmon-based quantification of the tetracycline resistance gene tetW. salmon quant --meta -i amr_indices/tetW_index -l A -1 Corr_clean_phiclean_10_8_L001_R1_001.fastq.gz -2 Corr_clean_phiclean_10_8_L001_R2_001.fastq.gz -o 10_tetW_test_quant --mimicStrictBT2 --validateMappings --minScoreFraction=0.90. I would highly appreciate any feedback from you in this regard. Many thanks in advance for your time.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/330:986,validat,validateMappings,986,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/330,1,['validat'],['validateMappings']
Security,"I've been running Salmon on some data from accession SRP034543. For some it works fine, but some there is segmentation fault when using the `--useFSPD`. For an example run where it fails, have a look at accession SRR2048254. Here is the command I ran along with output. ```; $ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa \; > -l IU \; > -1 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:43,access,accession,43,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,2,['access'],['accession']
Security,"I've built Salmon 0.9.1 (packaged it for GNU Guix) and experience a couple of errors. The first one is that running ""salmon quant"" without any further argument segfaults. That's likely because of the custom argument parsing code, which doesn't check bounds. It accesses argv2[1] even though that might not exist. (I've built it with GCC 5 and various versions of Boost. I've also unbundled all bundled libraries and made packages for them, but this should not affect the behaviour at all.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/184:261,access,accesses,261,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/184,1,['access'],['accesses']
Security,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/913:253,validat,validateMappings,253,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913,5,['validat'],['validateMappings']
Security,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/419:284,validat,validateMappings,284,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419,2,"['hash', 'validat']","['hash', 'validateMappings']"
Security,No unique counts with validateMappings,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/347:22,validat,validateMappings,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/347,1,['validat'],['validateMappings']
Security,"On the system I'm trying to install Salmon 0.4.2 on, downloading from `ftp://` is blocked for security reasons. Therefore, the automagic download the Jellyfish 2.1.3 source tarball fails. I tried adjusting the `CMakeLists.txt` files to use the latest Jellyfish 2.2.3 instead, but this leads to an issue with a Jellyfish include file not being found:. ```; checking whether we are using the GNU C compiler... In file included from /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/11:94,secur,security,94,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11,1,['secur'],['security']
Security,Performing download step for 'libtbb'; tbb-2017_U3.tgz: FAILED; sha256sum: WARNING: 1 of 1 computed checksum did NOT match; tbb-2017_U3.tgz did not match expected SHA256! Exiting.; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make: *** [all] Error 2; -----------------------------------------------------------; command used; cmake -DBOOST_INCLUDEDIR=/local/genome/packages/boost/1.57.0/include/ -DBOOST_LIBRARYDIR=/local/genome/packages/boost/1.57.0/lib/ -DCMAKE_INSTALL_PREFIX=/local/genome/packages/salmon/0.8.2. ------------------------------------------------------------------------; boost/1.57.0 ; gcc/4.9.4,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/153:100,checksum,checksum,100,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/153,1,['checksum'],['checksum']
Security,Possible out of bounds access when alignment softclip co-incides with transcript boundary,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/231:23,access,access,23,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231,1,['access'],['access']
Security,"Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34.791] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2017-03-14 12:10:36.701] [jointLog] [warning] Entry with header [734bf21190b56e1ed4c8d7093c340df1fc6266bd80ed60ebc0ae0f4e9343c3a4], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 420000 transcripts[2017-03-14 12:10:56.697] [jointLog] [warning] Entry with header [0c9d699aa70741734115dadd8175a44a013ad4122a3af7952e3b38e9593da047], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 11130000 transcripts[2017-03-14 12:20:15.975] [jointLog] [warning] Entry with header [9067b76fbcadd65a043ddff42dccfbd201e1b7ab5307ce7712d6301e32923ff1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-03-14 12:20:15.975] [jointLog] [warning] Entry with header [98095e437f311b64c902b3ec0c2d0310d626e1d74e7ad46c0cae049006296647], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 16260000 transcriptsElapsed time: 840.275s. Replaced 257168 non-ATCG nucleotides; Clipped poly-A tails from 11 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 15.7997s; Writing sequence data to file . . . done; Elapsed time: 140.642s; [info] Building 64-bit suffix array (length of generalized text is 15197332366 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 1040.1s; done; Elapsed time: 5084.83s; processed 15197000000 positions; khash had 3470062382 keys; saving hash to disk . . . done; Elapsed time: 713.385s; [2017-03-14 15:50:05.359] [jLog] [info] done building index; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129:4053,hash,hash,4053,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129,1,['hash'],['hash']
Security,"Sorry, me (#228) again...; While most of my samples seem to work on linux, I got an exception for one of them:. Version Info: This is the most recent version of Salmon.; \#\#\# salmon (mapping-based) v0.10.0; \#\#\# [ program ] => salmon; \#\#\# [ command ] => quant; \#\#\# [ index ] => { salmon010.index.all_combined }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { R1.fastq.gz }; \#\#\# [ mates2 ] => { R2.fastq.gz }; \#\#\# [ posBias ] => { }; \#\#\# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:544,validat,validateMappings,544,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,2,['validat'],['validateMappings']
Security,"Thank you for this helpful software. . I'm looking to look at the raw fastq reads for transcripts that came up as differentially expressed after quantification with Salmon. Is there a good way to link the original reads back with the estimated counts from Salmon for each transcriptional variant of a particular gene? Ideally I'd want to find all the reads that were thought to be most-likely aligned to each variant (or the likelihood that each read was aligned to each variant). For instance, I ran salmon as follows:; ```bash; salmon quant -i $S_IDX -l A \; -1 $IN_FQ1 -2 $IN_FQ2 \; -p $CORES \; --validateMappings \; --numGibbsSamples 20 \; --gcBias \; --no-version-check \; -o $SALMON_FOLD \; --writeMappings | samtools view -Sb - > $PREFIX""salmon_pseudobam.bam""; ```. However, I'm afraid I don't understand the format of the resulting peudosam file. Is it described anywhere in the documentation? I don't see anything [here](https://salmon.readthedocs.io/en/latest/file_formats.html#fileformats), for instance. What do the flags and qualities represent?. More importantly, is there a way to filter the pseudobam files to find the reads corresponding to the counts/NumReads in the `quant.sf` output file? Do the normal samtools quality and flag filters work to subset e.g. uniquely-mapped reads, or do those concepts not really apply to these pseudobams?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/528:601,validat,validateMappings,601,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/528,1,['validat'],['validateMappings']
Security,"The result of `salmon quant` (quasi-mapping + SA) for the same paired-end read input differs when run with `--libType A` versus `--libType ISF`, even though Salmon correctly infers that the library orientation is ISF when run with `--libType A` . In particular, the sum of the _NumReads_ column from `quant.sf` is greater for the `--libType A` result than for the `--libType ISF` result. Upon inspection, I discovered that this is because even when `--libType A` correctly infers that the orientation is ISF, it still uses the ~4500 reads (< 1%) that were in orientation ISR. I interpreted the `--libType A` flag to mean that `salmon` automatically infers the library orientation to be type _X_, then that means it will only use reads that are compatible with library orientation _X_ in the quantification. Was that the intention of `--libType A` ?. -----------------------------------------. The two commands being compared:. `salmon quant --libType A --seqBias --gcBias --discardOrphansQuasi --validateMappings -1 mate1.fq -2 mate2.fq -g gene_map.tsv -p 8 -o /path/to/out -i /path/to/index`. versus . `salmon quant --libType ISF --seqBias --gcBias --discardOrphansQuasi --validateMappings -1 mate1.fq -2 mate2.fq -g gene_map.tsv -p 8 -o /path/to/out -i /path/to/index`. They are exactly the same except for the value provided to `--libType`. -----------------------------------------. **Relevant results when run with --libType A**. `$ datamash -H sum 5 < quant.sf`; **> 917202.01**. `$ cat lib_format_counts.json`. > {; > ""read_files"": ""[ /path/to/mate1.fastq.gz, /path/to/mate2.fastq.gz]"",; > ""expected_format"": ""ISF"",; > ""compatible_fragment_ratio"": 1.0,; **> ""num_compatible_fragments"": 917202,**; > ""num_assigned_fragments"": 917202,; **> ""num_frags_with_concordant_consistent_mappings"": 912759,**; **> ""num_frags_with_inconsistent_or_orphan_mappings"": 4557,**; > ""strand_mapping_bias"": 0.995032246248839,; > ""MSF"": 0,; > ""OSF"": 0,; **> ""ISF"": 912759,**; > ""MSR"": 0,; > ""OSR"": 0,; **> ""ISR"": 455",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/489:996,validat,validateMappings,996,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/489,1,['validat'],['validateMappings']
Security,Trying to generate salmon indexes in WSL with Ubuntu 22.04.01 LTS either hangs after the contig count for validation step or throws a segmentation fault. . Using Salmon 1.9 installed through bioconda; Custom annotation of S. cerevisiae R64-3-1 downloaded from SGD. The whole genome was appended as a decoy,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/829:106,validat,validation,106,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/829,1,['validat'],['validation']
Security,"Version Info Exception: server did not respond before timeout; Logs will be written to /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2/logs; [2023-06-19 16:31:27.810] [jointLog] [info] setting maxHashResizeThreads to 12; [2023-06-19 16:31:27.811] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2023-06-19 16:31:27.814] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-06-19 16:31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/lab",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/853:407,validat,validation,407,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853,4,['validat'],"['validateMappings', 'validation']"
Security,"We noticed recently that doing quantification multiple times (using exact same settings) on the same file using salmon v0.99.0 resulted in some transcripts having different read number values (NumReads column) across different runs. . What seems to happen is that for the transcripts that differ across runs, one value will be zero, and the other will be non-zero (I recall seeing ~30 and ~75). We only looked at one biological replicate, but didn't see any examples in which multiple runs would produce more than two values (it's either zero or another number, but never _another_ number). The total number of transcripts for which this was happening was fewer than 10. . We tried specifying that the quantification be done on one CPU core, thinking that perhaps the discrepancy was coming from multithreading somehow, but we observed the same phenomenon. . `salmon quant -i salmon_index_noThread_2 -l A -r input_file.fq.gz -g Mus_musculus.GRCm38.100.gtf --validateMappings -o out/fq_quant`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/613:958,validat,validateMappings,958,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/613,1,['validat'],['validateMappings']
Security,"Wicked fast indeed! Are there any plans to extend salmon to also detect gene fusion events? There isn't a fast and accurate way to do that yet, only approaches requiring full alignments. Most often a base-perfect breakpoint isn't required, an estimate within a hash length is fine. We are a heavy user of bcbio and are also running the full STAR alignment just for gene fusions, which really sucks. Any ideas would be much appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/52:261,hash,hash,261,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52,1,['hash'],['hash']
Security,"XX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468, hits per frag: 1.25316[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2492702, hits per frag: 1.24947[A. [32mprocessed[31m 2500000 [32mfragments[0m; hits: 3114558, hits per frag: 1.24832[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 3733674, hits per frag: 1.24664[A. [32mprocessed[31m 3500000 [32mfragments[0m; hits: 4356329, hits per frag: 1.24645[A. [32mprocessed[31m 4000000 [32mfragments[0m; hits: 4978863, hits per frag: 1.24627[A. [32mprocessed[31m 4500000 [32mfragm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:4123,hash,hash,4123,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['hash'],['hash']
Security,"[info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2019-01-29 16:06:46.615] [alevinLog] [info] Total 4000 barcodes found; [2019-01-29 16:06:46.615] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [info] Starting to make feature Matrix; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making regular featues; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making feature Matrix; [2019-01-29 16:06:46.871] [alevinLog] [info] Finished white listing; [2019-01-29 16:06:46.957] [alevinLog] [info] Finished optimizer; ```. ### no whitelist, expectCells 3000. ```; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:4395,validat,validateMappings,4395,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['validat'],['validateMappings']
Security,"] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:15901,validat,validation,15901,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:1997,secur,security,1997,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['secur'],['security']
Security,"_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -p 16 --tgMap txp2gene_BM.tsv --chromium --dumpFeatures --expectCells 15000 . What is most noticeable is that the Mapping rate increased by over 50% by just adding --expectCells 15000 to the code. ; Could you please help me understand why these differences and if the quality of the these new identified cells (over 20000) can be trusted for downstream analysis considering that thy were initially not called. Thank you. <img width=""327"" alt=""alevin 2"" src=""https://user-images.githubusercontent.com/38905650/151187756-6fdd58fa-d30e-4a19-b951-cd25acde7f51.PNG"">. Log file; [2022-01-26 12:55:04.037] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 12:55:04.037] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 12:55:04.037] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 12:55:04.037] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 12:55:04.037] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 12:55:04.037] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 12:55:04.037] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-01-26 13:09:14.959] [jointLog] [info] There is 1 library.; [2022-01-26 13:09:14.961] [jointLog] [info] Loading pufferfish index; [2022-01-26 13:09:14.962] [jointLog] [info] Loading dense pufferfish index.; [2022-01-26 13:09:19.753] [jointLog] [info] done; [2022-01-26 13:09:20.383] [jointLog] [info] Index contained 184,844 targets; [2022-01-26 13:09:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/742:3126,validat,validation,3126,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742,1,['validat'],['validation']
Security,"_2.fastq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:1976,validat,validation,1976,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['validat'],['validation']
Security,"_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_38-45_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_8-15/8-15_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_23-31/23-31_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_43-52_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-45-54_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_39-47_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-5-11_221020_L002_R2.fastq.gz }; ### [ threads ] => { 100 }; ### [ validateMappings ] => { }; ### [ output ] => { salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant }; Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:9208,validat,validateMappings,9208,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['validat'],['validateMappings']
Security,"_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.6252%. [2017-08-02 14:41:46.432] [jointLog] [info] finished quantifyLibrary(); [2017-08-02 14:41:46.446] [jointLog] [info] Starting optimizer; [2017-08-02 14:41:46.508] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-08-02 14:41:46.510] [jointLog] [info] iteration = 0 | max rel diff. = 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:1608,hash,hash,1608,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['hash'],['hash']
Security,"```. [rancher@rancher ~]$ docker pull combinelab/salmon; Using default tag: latest; latest: Pulling from combinelab/salmon; Digest: sha256:2d09e1113f5bf1aa6be9354b9c8be556a059bbb3cdc46067080894b6ebb2a983; Status: Image is up to date for combinelab/salmon:latest; [rancher@rancher ~]$ salmon; -bash: salmon: command not found; [rancher@rancher ~]$ docker run salmon; Unable to find image 'salmon:latest' locally; docker: Error response from daemon: repository salmon not found: does not exist or no pull access.; See 'docker run --help'.; [rancher@rancher ~]$ docker run combinelab/salmon; [rancher@rancher ~]$ docker run combinelab/salmon -h; container_linux.go:247: starting container process caused ""exec: \""-h\"": executable file not found in $PATH""; docker: Error response from daemon: oci runtime error: container_linux.go:247: starting container process caused ""exec: \""-h\"": executable file not found in $PATH"". ```. I've tried looking at the Docker documenation, but it's way over my head for just running a command line app. How do I use this thing?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/164:503,access,access,503,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/164,1,['access'],['access']
Security,"anscript's forward strand, with matches starting within the first five nucleotides (and not match PhiX174). **To Reproduce**. Using Salmon v1.4.0, installed via Debian / apt:. $ salmon alevin -l ISR -1 INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; ...; [etc.]. **Desktop**. - OS: Debian Linux; - Version: Linux elegans 5.6.0-1-amd64 #1 SMP Debian 5.6.7-1 (2020-04-29) x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bullseye/sid; Release: unstable; Codename: sid. **Additional context**. This is my first run with BD Rhapsody data (and our own single cell data, for that matter). We're currently using SevenBrid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/628:2997,validat,validateMappings,2997,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628,1,['validat'],['validateMappings']
Security,"ant --meta`. The log file:; ```{shell}; $cat lib_format_counts.json ; {; ""read_files"": [; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_1.fastq.gz"",; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_2.fastq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:1783,validat,validateMappings,1783,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['validat'],['validateMappings']
Security,arcodes; [2018-07-19 18:26:13.334] [alevinLog] [info] Total 54879 white-listed Barcodes; [2018-07-19 18:26:18.285] [alevinLog] [info] Done populating Z matrix; [2018-07-19 18:26:18.300] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch; ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:5483,hash,hash,5483,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['hash'],['hash']
Security,"ast they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the pipeline uses for Salmon, but I didn't find anything special there.; And secondly, I wonder if Salmon has somehow problems with the chloroplast genome (super small, polycistronic and monocistronic units, partially small genes, high expression levels)? I know there are publications where Salmon has been used for chloroplast read counts, but I haven't found any information about their parameters. I would be super happy if you guys could help me here. I could also just work with FeatureCounts, but I would like to understand my problems. All the best; Floria",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/798:1546,validat,validate,1546,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798,1,['validat'],['validate']
Security,"astq SRR493376_1.fastq SRR493377_1.fastq -2 SRR493372_2.fastq SRR493373_2.fastq SRR493374_2.fastq SRR493375_2.fastq SRR493376_2.fastq SRR493377_2.fastq --validateMappings --minAssignedFrags 1 -o transcripts_quant`. I then tried different transcriptome files for building indices. I built the index using the following transcriptome respectively: (1) another decoy-aware transcriptome with GRCh38.p13.genome.fa.gz and gencode.v40.transcripts.fa.gz from Gencode using the same tutorial above (2) gencode.v40.transcripts.fa.gz from Gencode only (3) Homo_sapiens.GRCh38.cdna.all.fa.gz from Ensembl ; But I still received the same warning and 0 fragments mapped results. Below is one of the log file (they all look similar):. > [2022-04-15 23:47:55.696] [jointLog] [info] setting maxHashResizeThreads to 48 ; [2022-04-15 23:47:55.696] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored. ; [2022-04-15 23:47:55.696] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65 ; [2022-04-15 23:47:55.696] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35. ; [2022-04-15 23:47:55.696] [jointLog] [info] parsing read library format ; [2022-04-15 23:47:55.696] [jointLog] [info] There is 1 library. ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading pufferfish index ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading dense pufferfish index. ; [2022-04-15 23:49:52.320] [jointLog] [info] done ; [2022-04-15 23:49:52.320] [jointLog] [info] Index contained 245,900 targets ; [2022-04-15 23:49:52.424] [jointLog] [info] Number of decoys : 639 ; [2022-04-15 23:49:52.424] [jointLog] [info] First decoy index : 245,261 ; [2022-04-15 23:50:13.651] [jointLog] [warning] salmon was only able to assign 0 fragments to transcripts in the index, but the minimum number of required assigned fragments (--minAssignedFrags) was 3. This could be indicative of a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/768:2392,validat,validateMappings,2392,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/768,1,['validat'],['validateMappings']
Security,"astqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [202",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:2849,secur,secure-,2849,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['secur'],['secure-']
Security,"barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [info] Index contained 58,086 targets; [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-28 21:40:30.446] [jointLog] [info] Mapping rate = 37.2969%. [2019-01-28 21:40:30.446] [jointLog] [in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:5831,validat,validateMappings,5831,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['validat'],['validateMappings']
Security,"be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:5454,validat,validateMappings,5454,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"bi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R2.fastq.gz; - barcode reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 12 }; ### [ output ] => { ERR2744256_tmp }; ### [ tgMap ] => { transcript_to_gene.txt }; ### [ dumpFeatures ] => { }; ### [ expectCells ] => { 278 }. [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-05-07 14:40:36.500] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-05-07 14:40:36.511] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 8 Million barcodes; processed 17 Million barcodes; processed 25 Million barcodes; processed 34 Million barcodes; processed 42 Million barcodes; processed 51 Million barcodes; processed 59 Million barcodes; processed 67 Million barcodes; processed 76 Million barcodes; processed 84 Million barcodes; processed 93 Million barc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362:2261,validat,validateMappings,2261,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362,1,['validat'],['validateMappings']
Security,"bitQC). I remembered I have analyzed it successfully by former version salmon, but now I couldn't make it work for this version. ```; salmon quant \; 		-i $indexdir \; 		-l A \; 		-1 $workdir/fastq/$line"".read1.fq"" \; 		-2 $workdir/fastq/$line"".read2.fq"" \; 		-p 44 \; 		-o $workdir/salmon_out/quant_out/$line \; 		-g $gtfpath \; 		--numGibbsSamples 50 \; 		--auxDir aux_info \; 		--seqBias --gcBias -d --posBias --hardFilter --discardOrphansQuasi --writeUnmappedNames && echo salmon $line Done!. [2021-05-19 18:46:25.303] [jointLog] [info] setting maxHashResizeThreads to 44; [2021-05-19 18:46:25.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-19 18:46:25.303] [jointLog] [info] You specified --dumpEqWeights, which implies --dumpEq; that option has been enabled.; [2021-05-19 18:46:25.303] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:1178,validat,validation,1178,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['validat'],['validation']
Security,"bout the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:2623,secur,secure-,2623,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['secur'],['secure-']
Security,"but now I couldn't make it work for this version. ```; salmon quant \; 		-i $indexdir \; 		-l A \; 		-1 $workdir/fastq/$line"".read1.fq"" \; 		-2 $workdir/fastq/$line"".read2.fq"" \; 		-p 44 \; 		-o $workdir/salmon_out/quant_out/$line \; 		-g $gtfpath \; 		--numGibbsSamples 50 \; 		--auxDir aux_info \; 		--seqBias --gcBias -d --posBias --hardFilter --discardOrphansQuasi --writeUnmappedNames && echo salmon $line Done!. [2021-05-19 18:46:25.303] [jointLog] [info] setting maxHashResizeThreads to 44; [2021-05-19 18:46:25.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-19 18:46:25.303] [jointLog] [info] You specified --dumpEqWeights, which implies --dumpEq; that option has been enabled.; [2021-05-19 18:46:25.303] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:1246,validat,validateMappings,1246,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['validat'],['validateMappings']
Security,"cessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:6380,hash,hash,6380,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,1,['hash'],['hash']
Security,"ch appreciated. thank you. ; determining read length; Trimming reads; This is cutadapt 4.2 with Python 3.10.8; Command line parameters: -m 30 -u 18 -u -17 -o ./subset_SRR12820270_trimmed.fq subset_SRR12820270.fastq; Processing single-end reads on 1 core ...; Finished in 99.186 s (2.870 µs/read; 20.90 M reads/minute). === Summary ===. Total reads processed: 34,554,336. == Read fate breakdown ==; Reads that were too short: 778,286 (2.3%); Reads written (passing filters): 33,776,050 (97.7%). Total basepairs processed: 2,555,642,890 bp; Total written (filtered): 1,335,316,421 bp (52.2%); Salmon; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//default }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR12820270_trimmed.fq }; ### [ output ] => { salmonRes_SRR12820270 }; Logs will be written to salmonRes_SRR12820270/logs; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant --help; Exiting.; [2023-02-27 15:21:11.968] [jointLog] [info] setting maxHashResizeThreads to 5; [2023-02-27 15:21:11.968] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-27 15:21:11.969] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-27 15:21:11.970] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-27 15:21:11.970] [jointLog] [info] parsing read library format; [2023-02-27 15:21:11.971] [jointLog] [info] There is 1 library.; ./salmonRes_SRR12820270/quant.sf ; Error in geneIndexList[[i]] : subscript out of bounds",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/833:1694,validat,validateMappings,1694,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833,1,['validat'],['validateMappings']
Security,"classes for further processing; [2019-03-03 06:31:37.522] [jointLog] [info] Counted 17308442 total reads in the equivalence classes; [2019-03-03 06:31:37.528] [jointLog] [info] Mapping rate = 91.7673%. [2019-03-03 06:31:37.528] [jointLog] [info] finished quantifyLibrary(). ### For version 0.12. This is similar across all samples:. Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250.000 30.539503 527.399; LOC_Os01g01010.2 2218 250.000 1.714089 29.601; LOC_Os01g01019.1 1127 250.000 0.057906 1.000; LOC_Os01g01030.1 2464 250.000 4.632473 80.000; LOC_Os01g01040.4 1524 250.000 0.842494 14.549; LOC_Os01g01040.1 2508 250.000 12.017881 207.542; LOC_Os01g01040.2 2482 250.000 8.005651 138.253; LOC_Os01g01040.3 2583 250.000 9.187142 158.656; LOC_Os01g01050.1 2039 250.000 21.476314 370.883. [2019-03-03 07:14:59.272] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-03-03 07:14:59.272] [jointLog] [info] parsing read library format; [2019-03-03 07:14:59.272] [jointLog] [info] There is 1 library.; [2019-03-03 07:14:59.329] [jointLog] [info] Loading Quasi index; [2019-03-03 07:14:59.329] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 07:15:12.564] [jointLog] [info] done; [2019-03-03 07:15:12.564] [jointLog] [info] Index contained 66,004 targets; [2019-03-03 07:15:14.824] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 07:16:36.263] [jointLog] [info] Thread saw mini-batch with a maximum of 89.90% zero probability f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:7547,validat,validateMappings,7547,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['validat'],['validateMappings']
Security,"ctFromPacked] 70 iterations done. 438888868 characters processed.; [BWTIncConstructFromPacked] 80 iterations done. 476860644 characters processed.; [BWTIncConstructFromPacked] 90 iterations done. 510606036 characters processed.; [BWTIncConstructFromPacked] 100 iterations done. 540594980 characters processed.; [BWTIncConstructFromPacked] 110 iterations done. 567245236 characters processed.; [BWTIncConstructFromPacked] 120 iterations done. 590928020 characters processed.; [bwa_index] 279.06 seconds elapse.; [bwa_index] Update BWT... 1.72 sec; [bwa_index] Pack forward-only FASTA... 1.90 sec; [bwa_index] Construct SA from BWT and Occ... 59.56 sec; [2018-06-25 19:34:53.084] [jLog] [info] done building index; ```. Doh, something unexpected from the logs, isn't it?. ```; $ ls -latr ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all; total 8374704; drwx------. 3 mmokrejs mmokrejs 4096 Jun 25 19:25 ..; -rw-r--r--. 1 mmokrejs mmokrejs 36158409 Jun 25 19:26 rsd.bin; -rw-r--r--. 1 mmokrejs mmokrejs 423777 Jun 25 19:26 duplicate_clusters.tsv; -rw-r--r--. 1 mmokrejs mmokrejs 294997212 Jun 25 19:26 txpInfo.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1157068836 Jun 25 19:26 sa.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1779709484 Jun 25 19:29 hash.bin; -rw-r--r--. 1 mmokrejs mmokrejs 75 Jun 25 19:29 refInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 9816 Jun 25 19:29 quasi_index.log; -rw-r--r--. 1 mmokrejs mmokrejs 666 Jun 25 19:29 header.json; -rw-r--r--. 1 mmokrejs mmokrejs 304768324 Jun 25 19:33 bwaidx.bwt; -rw-r--r--. 1 mmokrejs mmokrejs 76192062 Jun 25 19:33 bwaidx.pac; -rw-r--r--. 1 mmokrejs mmokrejs 50007825 Jun 25 19:33 bwaidx.ann; -rw-r--r--. 1 mmokrejs mmokrejs 89 Jun 25 19:33 bwaidx.amb; drwxr-xr-x. 2 mmokrejs mmokrejs 4096 Jun 25 19:34 .; -rw-r--r--. 1 mmokrejs mmokrejs 95 Jun 25 19:34 versionInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 115 Jun 25 19:34 indexing.log; -rw-r--r--. 1 mmokrejs mmokrejs 4876291928 Jun 25 19:34 bwaidx.sa; $; ```. Hope this helps.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:15835,hash,hash,15835,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['hash'],['hash']
Security,"d, not all), which were trimmed by [rabbitQC](https://github.com/ZekunYin/RabbitQC). I remembered I have analyzed it successfully by former version salmon, but now I couldn't make it work for this version. ```; salmon quant \; 		-i $indexdir \; 		-l A \; 		-1 $workdir/fastq/$line"".read1.fq"" \; 		-2 $workdir/fastq/$line"".read2.fq"" \; 		-p 44 \; 		-o $workdir/salmon_out/quant_out/$line \; 		-g $gtfpath \; 		--numGibbsSamples 50 \; 		--auxDir aux_info \; 		--seqBias --gcBias -d --posBias --hardFilter --discardOrphansQuasi --writeUnmappedNames && echo salmon $line Done!. [2021-05-19 18:46:25.303] [jointLog] [info] setting maxHashResizeThreads to 44; [2021-05-19 18:46:25.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-19 18:46:25.303] [jointLog] [info] You specified --dumpEqWeights, which implies --dumpEq; that option has been enabled.; [2021-05-19 18:46:25.303] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:1128,validat,validation,1128,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,2,['validat'],"['validateMappings', 'validation']"
Security,"d.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] [stderrLog] [info] Done loading index; [2019-08-27 11:44:23.916] [jointLog] [info] done; [2019-08-27 11:44:23.916] [jointLog] [info] Index contained 583,596 targets. processed 978,500,000 fragments; hits: 2,484,589,998, hits per frag: 2.53933terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted. ```. **Desktop (please complete the following information):**; - OS: RHEL 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/426:3238,hash,hash,3238,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426,1,['hash'],['hash']
Security,"dateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:1561,validat,validation,1561,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"dex -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory ent",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:1226,validat,validateMappings,1226,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,1,['validat'],['validateMappings']
Security,"dex for Salmon using the fasta file from Gencode for the human transcriptome. Afterwards, I ran Salmon with the built index and had it automatically detect the library type. When the program was done aligning to the index, I saw that the file had a mapping rate of 40%. I guess what I'm asking is, is this an acceptable mapping rate or should I be concerned?? The reason I ask is because in the data I was working with while learning via the Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] There is 1 library.; [2020-09-05 13:51:07.828] [jointLog] [info] Loading pufferfish index; [2020-09-05 13:51:07.876] [jointLog] [info] Loading dense pufferfish index.; [2020-09-05 13:51:49.487] [jointLog] [info] done; [2020-09-05 13:51:49.551] [jointLog] [info] Index contained 228,754 targets; [2020-09-05 13:51:50.523] [jointLog] [info] Number of decoys : 0; [2020-09-05 13:52:00.312] [jointLog] [info] Automatically detected most likely library type as SR; [2020-09-05 17:53:49.009] [jointLog] [info] Thread saw mini-batch with a maximum of 2.00% zero probability fragments; [2020-09-05 17:53:51.128] [jointLog] [info] Computed 344,34",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/571:1626,validat,validateMappings,1626,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571,1,['validat'],['validateMappings']
Security,"dex is being built witho ut any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during index ing. Further details can be found at https://salmon.readthedocs.io/en/latest/sal mon.html#preparing-transcriptome-indices-mapping-based-mode.; [2022-08-22 15:07:03.860] [jLog] [info] building index; out : transcripts_index; [2022-08-22 15:07:03.860] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers. [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Replaced 0 non-ATCG nuc leotides; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Clipped poly-A tails fr om 0 transcripts; wrote 0 cleaned references; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Filter size not provide d; estimating from number of distinct k-mers; [2022-08-22 15:07:03.866] [puff::index::jointLog] [info] ntHll estimated 47270 d istinct k-mers, setting filter size to 2^20; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1048576; Capacity = 2; Files:; transcripts_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1048576; Pass Filling Filtering; terminate called without an active exception; Aborted (core dumped). **To Reproduce**; Steps and data to reproduce the behavior:; salmon index -t contigs_for_salmon -i transcripts_index -k 31; my reads are paired end RNA-reads (rRNA REMOVED); My transcriptome is a 90 contigs resulted from reads assembly; Specifically, please provide at least the following information:. * Which version of salmon was used?; * ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?; 1.9.0 (latest). **Expected behavior**; use salmon index for Preparing transcriptome indices. **Desktop (please complete the following in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/795:1302,Hash,Hash,1302,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795,1,['Hash'],['Hash']
Security,"e identified CLS3. R2 reads are transcript-only, and are expected to match a transcript's forward strand, with matches starting within the first five nucleotides (and not match PhiX174). **To Reproduce**. Using Salmon v1.4.0, installed via Debian / apt:. $ salmon alevin -l ISR -1 INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; ...; [etc.]. **Desktop**. - OS: Debian Linux; - Version: Linux elegans 5.6.0-1-amd64 #1 SMP Debian 5.6.7-1 (2020-04-29) x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bullseye/sid; Release: unstable; Codename: sid. **Additional context**. This is my first run with BD Rhapsody data (",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/628:2929,validat,validation,2929,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628,1,['validat'],['validation']
Security,"e ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:15120,validat,validateMappings,15120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"e ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:2233,validat,validateMappings,2233,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"e ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:3844,validat,validateMappings,3844,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"e ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:7065,validat,validateMappings,7065,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"e ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:8676,validat,validateMappings,8676,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"e ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:10287,validat,validateMappings,10287,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"e ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:11898,validat,validateMappings,11898,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"e ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping va",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:13509,validat,validateMappings,13509,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"e ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:16731,validat,validateMappings,16731,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"e my own transcriptome from long read sequencing and followed all the steps, prepare metadata, make the gentrome.fasta, indexing, using bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Can't find gene mapping for : PB.40054.21 w/ index 81",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540:1063,validat,validation,1063,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540,1,['validat'],['validation']
Security,"eads, i.e R1, R2, and R3. I understand the R3 reads are the sample index reads. Do I need to use this R3 as input for alevin quantification, since alevin only accepts two read at a time, i.e R1, R2. Additionally, I used R1 and R2 for the alevin quantification using the code;; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 F379_R1.fastq -2 F379_R2.fastq -o alevin_combinedRun -p 16 --tgMap txp2gene_BM.tsv --chromiumV3 --dumpFeatures . This resulted in 233 cells indicated in the figure below with Mapping rate less than 6%.; <img width=""473"" alt=""Alevin"" src=""https://user-images.githubusercontent.com/38905650/151156881-da620d2e-3e9a-41fc-acce-ef2722788424.PNG"">; log file; 2022-01-26 11:52:30.149] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 11:52:30.149] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 11:52:30.149] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 11:52:30.149] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 11:52:30.149] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 cells with Mapping rate = 58.3421%; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 SRR12148226_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/742:1207,validat,validation,1207,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742,2,['validat'],"['validateMappings', 'validation']"
Security,"een.size():119175585 kmerInfo.size():14896948; approximateContigTotalLength: 1087128541; counters for complex kmers:; (prec>1 & succ>1)=3126880 | (succ>1 & isStart)=773 | (prec>1 & isEnd)=671 | (isStart & isEnd)=30; contig count: 24974474 element count: 3020582944 complex nodes: 3128354; # of ones in rank vector: 24974473; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory Mus_musculus.GRCm39_v1.8.0_decoy.index; size = 3020582944. | Loading contigs | Time = 469.49 ms. size = 3020582944. | Loading contig boundaries | Time = 242.8 ms. Number of ones: 24974473; Number of ones per inventory item: 512; Inventory entries filled: 48779; 24974473; [2022-06-01 18:28:15.208] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2022-06-01 18:28:15.619] [puff::index::jointLog] [info] contig count for validation: 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of Contigs : 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of numerical Contigs : 24,974,473; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] Total # of contig vec entries: 345,523,986; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] bits per offset entry 29; [2022-06-01 18:28:53.341] [puff::index::jointLog] [info] Done constructing the contig vector. 24974474; [2022-06-01 18:29:07.368] [puff::index::jointLog] [info] # segments = 24,974,473; [2022-06-01 18:29:07.368] [puff::index::jointLog] [info] total length = 3,020,582,944; [2022-06-01 18:29:07.850] [puff::index::jointLog] [info] Reading the reference files ...; [2022-06-01 18:29:20.813] [puff::index::jointLog] [info] positional integer width = 32; [2022-06-01 18:29:20.813] [puff::index::jointLog] [info] seqSize = 3,020,582,944; [2022-06-01 18:29:20.813] [puff::index::jointLog] [info] rankSize",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:12953,validat,validation,12953,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,1,['validat'],['validation']
Security,"ence.genomes_kike/GRCh38/gencode/tr2g.tsv"",; ""auxDir"": ""aux_info""; }; cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz, Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 360423666,; ""num_assigned_fragments"": 360423666,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1760256573,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ``` . For the classic pseudoalignment - Salmon quant. ```console; cat cmd_info.json ; {; ""salmon_version"": ""1.4.0"",; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_pseudoalignment_salmon"",; ""libType"": ""ISR"",; ""threads"": ""32"",; ""unmatedReads"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""output"": ""salmon_quant_pseudoalignment"",; ""validateMappings"": [],; ""writeMappings"": [],; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz ]"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 457240786,; ""num_assigned_fragments"": 457240786,; ""num_frags_with_concordant_consistent_mappings"": 512358332,; ""num_frags_with_inconsistent_or_orphan_mappings"": 0,; ""strand_mapping_bias"": 0.8456024971991673,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 433251485,; ""SR"": 79106847,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```; For the selective alignment- Salmon alevin. ```console; cat cmd_info.json ; {; ""salmon_version"": ""1.4.0"",; ""libType"": ""ISR"",; ""mates1"": ""Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz"",; ""mates2"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""chromiumV3"": [],; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_selective_alignment_index_salmon"",; ""threads"": ""8"",; ""outp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/702:2326,validat,validateMappings,2326,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/702,1,['validat'],['validateMappings']
Security,"environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deploy",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:2292,secur,security,2292,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['secur'],['security']
Security,"epare metadata, make the gentrome.fasta, indexing, using bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Can't find gene mapping for : PB.40054.21 w/ index 81766; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Txp to Gene Map not f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540:1131,validat,validateMappings,1131,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540,1,['validat'],['validateMappings']
Security,"ernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred ov",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:2787,secur,security,2787,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['secur'],['security']
Security,es/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further processin; g; [2016-12-13 12:46:51.776] [jointLog] [info] Counted 16265961 total reads in the equivalence classes . [2016-12-13 12:46:51.786] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 12:46:51.786] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 12:46:51.786] [jointLog] [info] Starting optimizer; [2016-12-13 12:46:51.867] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 12:46:51.877] [jointLog] [inf,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111:2027,hash,hash,2027,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111,1,['hash'],['hash']
Security,"eta-information) link for Salmon suggests, ""Most of the information recorded in this file should be self-descriptive"", but this is not the case for me. **To Reproduce**; Steps and data to reproduce the behavior:. 1. Map reads; 2. Observe consistent mapping rates below 80%. Specifically, please provide at least the following information:. * Which version of salmon was used? **salmon (selective-alignment-based) v1.10.2**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **package installation via Debian**; * Which reference (e.g. transcriptome) was used? **transcriptome**; * Which read files were used? **NovaSeq X Plus; read length 150bp x 2; untrimmed **; * Which which program options were used?. ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_${sampleName};; done; ```. Making Salmon less stringent:; ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --minScoreFraction 0.33 --recoverOrphans \; --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_MS0.33_${sampleName};; done; ```. **Expected behavior**. Documentation that has a good explanation of the parameters in the metadata file, sufficient to explain why Salmon mapping rates are different from other programs, and why it's common to see mapping rates below 80% (e.g. [here](https://github.com/COMBINE-lab/salmon/issues/661#issuecomment-850540604), where a mapping rate of 63% is apparently acceptable). Consider the following statistics (in `meta_info.json`):. ```; $ grep -A 7 'num_processed' mapped/salmon_MS*",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/925:5417,validat,validateMappings,5417,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925,1,['validat'],['validateMappings']
Security,"evin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 SRR12148226_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -p 16 --tgMap txp2gene_BM.tsv --chromium --dumpFeatures --expectCells 15000 . What is most noticeable is that the Mapping rate increased by over 50% by just adding --expectCells 15000 to the code. ; Could you please help me understand why these differences and if the quality of the these new identified cells (over 20000) can be trusted for downstream analysis considering that thy were initially not called. Thank you. <img width=""327"" alt=""alevin 2"" src=""https://user-images.githubusercontent.com/38905650/151187756-6fdd58fa-d30e-4a19-b951-cd25acde7f51.PNG"">. Log file; [2022-01-26 12:55:04.037] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 12:55:04.037] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 12:55:04.037] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 12:55:04.037] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 12:55:04.037] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 12:55:04.037] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 12:55:04.037] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-01-26 13:09:14.959] [jointLog] [info] There is 1 library.; [2022-01-26 13:09:14.961] [jointLog] [info] Loading pufferfish index; [2022-01-26 13:09:14.962] [jointLog] [info] Loading dense pufferfish index.; [2022-01-26 13:09:19.753] [jointLog] [info] done; [2022-01-26 13:09:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/742:3076,validat,validation,3076,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742,2,['validat'],"['validateMappings', 'validation']"
Security,"ex contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; ---------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:3998,validat,validateMappings,3998,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['validat'],['validateMappings']
Security,"f genome.fa genome_index; # mapping; hisat2 -x genome_index -U sample.fastq.gz --rna-strandness R -p 8 -S sample.sam; ```; And the mapping rate is ~80%, please see below; ```; 22033243 reads; of these:; 22033243 (100.00%) were unpaired; of these:; 4263277 (19.35%) aligned 0 times; 11743820 (53.30%) aligned exactly 1 time; 6026146 (27.35%) aligned >1 times; 80.65% overall alignment rate; ```; This is expected because the the RNAseq data was generated from a variety that different from the one used for transcriptome and genome assembly. Then I indexed the transcriptome without the decoy sequence and quantified the same RNAseq sample using this index as below; ```; salmon index -t transcriptome.fa -p 8 -i salmon_index_v2 -k 31 --keepDuplicates; salmon quant -i salmon_index_v2 -l A \; -r sample.fastq.gz -p 8 --validateMappings --fldMean 200 --fldSD 30 \; --seqBias -o quants_v2; ```; And this time the mapping rate is ~89%, please see below; ```; ""num_processed"": 22033243,; ""num_mapped"": 19826611,; ""num_decoy_fragments"": 0,; ""num_dovetail_fragments"": 0,; ""num_fragments_filtered_vm"": 209109,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 53549316,; ""percent_mapped"": 89.98498768429141; ```; I found this is very confusing because I thought the mapping rate of Salmon should be lower than Hisat2 given the transcriptome can 100% map back to the genome. I thought it might has something to do with the highly duplicated transcriptome. I can see that there are `918827` reads were assigned to the decoy sequence in the first case, but it is only `918827 / 22033243 *100 = 4.1%` , but the mapping rate was `~20%` higher without the decoy sequence compare with using decoys. Could you please give some possible reasons, and should I use the index without decoy sequence?. Another thing that I don't understand is where I can find the number of unmapped reads. For example in the first case, the mapping rate is `15597853 / 22033243 *100 = 70.79%`, so I assume there should be `220332",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/633:2426,validat,validateMappings,2426,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/633,1,['validat'],['validateMappings']
Security,"f that would help. (https://github.com/COMBINE-lab/salmon/issues/527). ```; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mouse_index1 }; ### [ libType ] => { IU }; ### [ mates1 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_1.trimmed.fastq.gz }; ### [ mates2 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_2.trimmed.fastq.gz }; ### [ threads ] => { 4 }; ### [ hitFilterPolicy ] => { BOTH }; ### [ biasSpeedSamp ] => { 10 }; ### [ output ] => { quants/13_quant }; ```. **Expected behavior**; Not to be so slow.... I've used salmon previously with some SRR datasets and it was very fast, this seems very strange to me . **Screenshots**; ```; [2020-06-13 02:34:43.686] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing read library format; [2020-06-13 02:34:43.686] [jointLog] [info] There is 1 library.; [2020-06-13 02:34:43.738] [jointLog] [info] Loading pufferfish index; [2020-06-13 02:34:43.738] [jointLog] [info] Loading dense pufferfish index.; [2020-06-13 02:34:45.327] [jointLog] [info] done; [2020-06-13 02:34:45.327] [jointLog] [info] Index contained 117,135 targets; [2020-06-13 02:34:45.346] [jointLog] [info] Number of decoys : 0; [2020-06-13 02:35:35.911] [jointLog] [info] Automatically detected most likely library type as IU; [2020-06-13 06:56:12.646] [fileLog] [info] ; At end of round 0; ==================; Observed 28512328 total fragments (28512328 in most recent round). [2020-06-13 06:56:12.645] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537:1696,validat,validateMappings,1696,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537,1,['validat'],['validateMappings']
Security,"f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:3100,validat,validateMappings,3100,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['validat'],['validateMappings']
Security,"f::index::jointLog] [warning] Removed 739 transcripts that were sequence duplicates of indexed transcripts.; [2022-06-01 18:14:47.999] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2022-06-01 18:14:47.999] [puff::index::jointLog] [info] Replaced 73,600,668 non-ATCG nucleotides; [2022-06-01 18:14:47.999] [puff::index::jointLog] [info] Clipped poly-A tails from 647 transcripts; wrote 116780 cleaned references; [2022-06-01 18:14:53.762] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2022-06-01 18:15:29.014] [puff::index::jointLog] [info] ntHll estimated 2268760823 distinct k-mers, setting filter size to 2^36; Threads = 60; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files: ; Mus_musculus.GRCm39_v1.8.0_decoy.index/ref_k31_fixed.fa. Round 0, 0:68719476736; Pass	Filling	Filtering; 1	104	79	; 2	75	5; True junctions count = 14895414; False junctions count = 1201318; Hash table size = 16096732; Candidate marks count = 337141231. Reallocating bifurcations time: 8; True marks count: 335754103; Edges construction time: 117. Distinct junctions = 14895414. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 21; Max Junction ID: 14896947; seen.size():119175585 kmerInfo.size():14896948; approximateContigTotalLength: 1087128541; counters for complex kmers:; (prec>1 & succ>1)=3126880 | (succ>1 & isStart)=773 | (prec>1 & isEnd)=671 | (isStart & isEnd)=30; contig count: 24974474 element count: 3020582944 complex nodes: 3128354; # of ones in rank vector: 24974473; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory Mus_musculus.GRCm39_v1.8.0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:11554,Hash,Hash,11554,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,1,['Hash'],['Hash']
Security,"f; [2020-07-04 15:10:22.800] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-07-04 15:11:07.094] [puff::index::jointLog] [info] ntHll estimated 2630714644 distinct k-mers, setting filter size to 2^36; error: Can't open a temporary file; error: Can't read the input file; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory /scratch/jl2e19/salmon_index; size = 0; -----------------------------------------; | Loading contigs | Time = 84.402 us; -----------------------------------------; size = 0; -----------------------------------------; | Loading contig boundaries | Time = 30.909 us; -----------------------------------------; Number of ones: 0; Number of ones per inventory item: 512; Inventory entries filled: 1; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info]; Total # of segments we have position for : 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] total contig vec entries 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] bits per offset entry 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] there were 0 equivalence classes; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:16769,validat,validation,16769,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,1,['validat'],['validation']
Security,"fastq.gz 12_CTTGTA_L002_R1_004.fastq.gz 12_CTTGTA_L002_R1_005.fastq.gz 12_CTTGTA_L002_R1_006.fastq.gz 12_CTTGTA_L002_R1_007.fastq.gz 12_CTTGTA_L002_R1_008.fastq.gz 12_CTTGTA_L002_R1_009.fastq.gz 12_CTTGTA_L002_R1_010.fastq.gz }; ### [ mates2 ] => { 12_CTTGTA_L001_R2_001.fastq.gz 12_CTTGTA_L001_R2_002.fastq.gz 12_CTTGTA_L001_R2_003.fastq.gz 12_CTTGTA_L001_R2_004.fastq.gz 12_CTTGTA_L001_R2_005.fastq.gz 12_CTTGTA_L001_R2_006.fastq.gz 12_CTTGTA_L001_R2_007.fastq.gz 12_CTTGTA_L001_R2_008.fastq.gz 12_CTTGTA_L001_R2_009.fastq.gz 12_CTTGTA_L001_R2_010.fastq.gz 12_CTTGTA_L002_R2_001.fastq.gz 12_CTTGTA_L002_R2_002.fastq.gz 12_CTTGTA_L002_R2_003.fastq.gz 12_CTTGTA_L002_R2_004.fastq.gz 12_CTTGTA_L002_R2_005.fastq.gz 12_CTTGTA_L002_R2_006.fastq.gz 12_CTTGTA_L002_R2_007.fastq.gz 12_CTTGTA_L002_R2_008.fastq.gz 12_CTTGTA_L002_R2_009.fastq.gz 12_CTTGTA_L002_R2_010.fastq.gz }; ### [ threads ] => { 8 }; ### [ celseq2 ] => { }; ### [ numCellBootstraps ] => { 100 }; ### [ dumpCsvCounts ] => { }; ### [ output ] => { alevin_outputSingleLibrary/quantSC }; ### [ tgMap ] => { gencode.primary_assembly.v29.tsv }; ### [ whitelist ] => { my_barcode.tsv }. [2018-12-11 10:23:56.120] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-12-11 10:23:56.120] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2018-12-11 10:23:56.120] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-12-11 10:23:56.120] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2018-12-11 10:23:56.120] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2018-12-11 10:23:56.126] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 32 Million barcodes; ```. any help or advice would be appreciated :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/329:2703,validat,validateMappings,2703,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329,3,['validat'],['validateMappings']
Security,"ference.genomes_kike/GRCh38/gencode/tr2g.tsv"",; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz, Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 351484244,; ""num_assigned_fragments"": 351484244,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1727876200,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. For the selective alignment - Salmon quant. ```console; cat cmd_info.json ; {; ""salmon_version"": ""1.4.0"",; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_selective_alignment_index_salmon"",; ""libType"": ""ISR"",; ""threads"": ""32"",; ""unmatedReads"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""output"": ""salmon_quant"",; ""validateMappings"": [],; ""writeMappings"": [],; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz ]"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 387129150,; ""num_assigned_fragments"": 387129150,; ""num_frags_with_concordant_consistent_mappings"": 399519815,; ""num_frags_with_inconsistent_or_orphan_mappings"": 0,; ""strand_mapping_bias"": 0.9389489029474045,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 375128692,; ""SR"": 24391123,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Download executable; * Which reference (e.g. transcriptome) was used?; GENCODE hg38; * Which read files were used?; 10x scRNA-seq files. Any insight about why are these differences in the mapped fragments happening wo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/702:4398,validat,validateMappings,4398,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/702,1,['validat'],['validateMappings']
Security,"fo] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.06% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.64% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 9.94% zero probability fragments; [2018-06-3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:3090,hash,hash,3090,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,1,['hash'],['hash']
Security,"g Salmon v1.2.0 which was build from source and is run on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. In addition, I am only using trimmed paired-end reads of 100bp. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/523:984,validat,validateMappings,984,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/523,1,['validat'],['validateMappings']
Security,"g it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Why does it say `salmon quant was invoked improperly`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/512:1295,validat,validateMappings,1295,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512,2,['validat'],['validateMappings']
Security,"g reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; ------------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:3670,validat,validateMappings,3670,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['validat'],['validateMappings']
Security,"g warning and 0 hits and 0 TPM in my quant.sf file. > [2022-04-15 23:50:13.651] [jointLog] [warning] salmon was only able to assign 0 fragments to transcripts in the index, but the minimum number of required assigned fragments (--minAssignedFrags) was 31. This could be indicative of a mismatch between the reference and sample, or a very bad sample. You can change the --minAssignedFrags parameter to force salmon to quantify with fewer assigned fragments (must have at least 1). I then lower the k-mer length and tried setting --minAssignedFrags to 5, 3, 1 but always got the same warning and results. And here is my command for quantification (but I changed --minAssignedFrags parameter several times):. `salmon quant -i ../ref/salmon_index -l IU -1 SRR493372_1.fastq SRR493373_1.fastq SRR493374_1.fastq SRR493375_1.fastq SRR493376_1.fastq SRR493377_1.fastq -2 SRR493372_2.fastq SRR493373_2.fastq SRR493374_2.fastq SRR493375_2.fastq SRR493376_2.fastq SRR493377_2.fastq --validateMappings --minAssignedFrags 1 -o transcripts_quant`. I then tried different transcriptome files for building indices. I built the index using the following transcriptome respectively: (1) another decoy-aware transcriptome with GRCh38.p13.genome.fa.gz and gencode.v40.transcripts.fa.gz from Gencode using the same tutorial above (2) gencode.v40.transcripts.fa.gz from Gencode only (3) Homo_sapiens.GRCh38.cdna.all.fa.gz from Ensembl ; But I still received the same warning and 0 fragments mapped results. Below is one of the log file (they all look similar):. > [2022-04-15 23:47:55.696] [jointLog] [info] setting maxHashResizeThreads to 48 ; [2022-04-15 23:47:55.696] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored. ; [2022-04-15 23:47:55.696] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65 ; [2022-04-15 23:47:55.696] [jointLog] [info] Setting consensusSlack to selective",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/768:1553,validat,validateMappings,1553,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/768,1,['validat'],['validateMappings']
Security,"g/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias. **Steps and data to reproduce the behavior: for version 0.12**; module load Cufflinks/2.2.1; gffread MSU7_all.gff3 -g all.chrs.fasta -w MSU7_newtranscript.fasta. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.12.0-IGB-gcc-8.2.0. salmon index -t ~/data/genome/MSU7_newtranscript.fasta -i ~/data/genome/MSU7new_transcript.index --type quasi -k 31. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13 Salmon/0.11.3-IGB-gcc-4.9.4; Salmon/0.9.1-IGB-gcc-4.9.4 Salmon/0.12.0-IGB-gcc-8.2.0 (D). * How was salmon installed (compiled, downloaded executable, through bioconda)?; through the biocluster in the University. * Which reference (e.g. transcriptome) was used?; converted the genomic fa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:3576,validat,validateMappings,3576,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['validat'],['validateMappings']
Security,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:3029,secur,security,3029,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['secur'],['security']
Security,"h_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep3_RL5410_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep1_RL5392_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep2_RL5393_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep3_RL5411_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep1_RL5389_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep2_RL5408_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep3_RL5409_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.10.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Binary; * Which reference (e.g. transcriptome) was used?; Moss (Physco) v6.1 that I had generated ; * Which read files were used?; ; * Which which program options were used?; `-l A -p 16 --validateMappings --numBootstraps 100 --seqBias --gcBias`. **Expected behavior**; A clear and concise description of what you expected to happen. **Desktop (please complete the following information):**; - OS: Linux server: Rocky Linux release 8.5 (Green Obsidian); - Version Rocky Linux release 8.5 (Green Obsidian)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/948:3276,validat,validateMappings,3276,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948,1,['validat'],['validateMappings']
Security,"he bug is.**; So I am aligning reads against Arabidopsis Thaliana, using Araport 11 annotation. I usually had 20 M reads aligned within an hour or 2. I am aligning a 46M reads library and it has been running for 20 hours using 4 threads of my humble i5-3210M and is barely on 38.5M, after 20 hours! Index was constructed with default kmer size and no decoys. I have had this problem with other libraries since upgraded from V1.0.0, . **To Reproduce**; I guess just try to align stuff against araport11, this particular problem comes with any fq.gz. It will take hours and hours and hours to align. **Specifically, please provide at least the following information:**. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:1239,validat,validateMappings,1239,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['validat'],['validateMappings']
Security,"he index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:2979,validat,validateMappings,2979,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"he index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:4590,validat,validateMappings,4590,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"he index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:7811,validat,validateMappings,7811,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"he index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:9422,validat,validateMappings,9422,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"he index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:11033,validat,validateMappings,11033,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"he index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:12644,validat,validateMappings,12644,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/54:1154,Hash,Hash,1154,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"hough Salmon correctly infers that the library orientation is ISF when run with `--libType A` . In particular, the sum of the _NumReads_ column from `quant.sf` is greater for the `--libType A` result than for the `--libType ISF` result. Upon inspection, I discovered that this is because even when `--libType A` correctly infers that the orientation is ISF, it still uses the ~4500 reads (< 1%) that were in orientation ISR. I interpreted the `--libType A` flag to mean that `salmon` automatically infers the library orientation to be type _X_, then that means it will only use reads that are compatible with library orientation _X_ in the quantification. Was that the intention of `--libType A` ?. -----------------------------------------. The two commands being compared:. `salmon quant --libType A --seqBias --gcBias --discardOrphansQuasi --validateMappings -1 mate1.fq -2 mate2.fq -g gene_map.tsv -p 8 -o /path/to/out -i /path/to/index`. versus . `salmon quant --libType ISF --seqBias --gcBias --discardOrphansQuasi --validateMappings -1 mate1.fq -2 mate2.fq -g gene_map.tsv -p 8 -o /path/to/out -i /path/to/index`. They are exactly the same except for the value provided to `--libType`. -----------------------------------------. **Relevant results when run with --libType A**. `$ datamash -H sum 5 < quant.sf`; **> 917202.01**. `$ cat lib_format_counts.json`. > {; > ""read_files"": ""[ /path/to/mate1.fastq.gz, /path/to/mate2.fastq.gz]"",; > ""expected_format"": ""ISF"",; > ""compatible_fragment_ratio"": 1.0,; **> ""num_compatible_fragments"": 917202,**; > ""num_assigned_fragments"": 917202,; **> ""num_frags_with_concordant_consistent_mappings"": 912759,**; **> ""num_frags_with_inconsistent_or_orphan_mappings"": 4557,**; > ""strand_mapping_bias"": 0.995032246248839,; > ""MSF"": 0,; > ""OSF"": 0,; **> ""ISF"": 912759,**; > ""MSR"": 0,; > ""OSR"": 0,; **> ""ISR"": 4557,**; > ""SF"": 0,; > ""SR"": 0,; > ""MU"": 0,; > ""OU"": 0,; > ""IU"": 0,; > ""U"": 0; > }. **Relevant results when run with --libType ISF**. `$ datamash -H sum ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/489:1174,validat,validateMappings,1174,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/489,1,['validat'],['validateMappings']
Security,"ill use the generateDecoyTranscriptome.sh method as listed here - https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh (and this requires the gff file, mashmap and bedtools software). 3. SA and SAF both require genome. Can I still use `salmon index` on the transcriptome file without using genome files? Based on the release notes quoted (copy/pasted) below, I am worried about the phrase `""mapping without selective alignment is disabled""`). . Salmon v1.0 release notes state: . > changes since v.014.1; > In this release of salmon, selective-alignment is enabled by default (and, in fact, mapping without selective-alignemnt is disabled). We may explore, in the future, ways to allow disabling selecive-alignment under the new mapping approach, but at this point, it is always enabled.; > ; ; 4. Page 18 of your preprint pdf states that you used ""salmon v0.15.0 for quasi-mapping"" - so I am assuming I have to keep 2 versions of salmon in my system if I have to do both quasi-mapping and SA/SAF?. 5. Page 19 of your preprint pdf states you used `--mimicBT2 and --useEM for SA and SAF` quantification methods. Is this the recommendation while using SA and SAF methods? ; From salmon v01.4.1 with SA method, I have all along used the default `VBEM `and `--validateMappings` based on info in [SalmonReadTheDocs](https://salmon.readthedocs.io/en/latest/salmon.html#validatemappings) . > Enables selective alignment of the sequencing reads when mapping them to the transcriptome. This can improve both the sensitivity and specificity of mapping and, as a result, can improve quantification accuracy. 6. Related to Q5 above - I assume you used `--mimicBT2 and --useEM for SA and SAF` methods so that you can compare to RSEM. Have you used the defaults for salmon quant for SA and SAF - or in other words, how does SA/SAF results compare against other methods listed in the preprint when you **_do not use_** the `--mimicBT2 and --useEM` options. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/442:1906,validat,validateMappings,1906,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/442,2,['validat'],"['validateMappings', 'validatemappings']"
Security,"immed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq --validateMappings -p 12 --output salmon_out`. But here's the output:. ```; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { transcripts_index }; ### [ libType ] => { IU }; ### [ mates1 ] => { IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/426:1771,validat,validateMappings,1771,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426,1,['validat'],['validateMappings']
Security,"improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-act",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:1475,secur,security,1475,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['secur'],['security']
Security,"info] edgeVecSize = 0; [2021-08-20 18:05:55.152] [puff::index::jointLog] [info] num keys = 100,957,825; [Building BooPHF] 100 % elapsed: 0 min 8 sec remaining: 0 min 0 sec; [2021-08-20 18:06:03.447] [puff::index::jointLog] [info] mphf size = 63.0608 MB; [2021-08-20 18:06:03.479] [puff::index::jointLog] [info] chunk size = 61,246,408; [2021-08-20 18:06:03.479] [puff::index::jointLog] [info] chunk 0 = [0, 61,246,408); [2021-08-20 18:06:03.479] [puff::index::jointLog] [info] chunk 1 = [61,246,408, 122,492,785); [2021-08-20 18:06:13.744] [puff::index::jointLog] [info] finished populating pos vector; [2021-08-20 18:06:13.747] [puff::index::jointLog] [info] writing index components; [2021-08-20 18:06:13.876] [puff::index::jointLog] [info] finished writing dense pufferfish index; [2021-08-20 18:06:13.890] [jLog] [info] done building index; for info, total work write each : 2.331 total work inram from level 3 : 4.322 total work raw : 25.000 ; Bitarray 528992256 bits (100.00 %) (array + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:7072,hash,hash,7072,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['hash'],['hash']
Security,"info] iteration = 1800 | max rel diff. = 0.127739; [2023-02-22 16:42:32.868] [jointLog] [info] iteration = 1900 | max rel diff. = 0.042789; [2023-02-22 16:42:36.215] [jointLog] [info] iteration = 2000 | max rel diff. = 0.0303234; [2023-02-22 16:42:39.544] [jointLog] [info] iteration = 2100 | max rel diff. = 0.0413186; [2023-02-22 16:42:40.309] [jointLog] [info] iteration = 2124 | max rel diff. = 0.00863591; [2023-02-22 16:42:40.317] [jointLog] [info] Finished optimizer; [2023-02-22 16:42:40.317] [jointLog] [info] writing output . [2023-02-22 16:42:40.556] [jointLog] [info] Computing gene-level abundance estimates; [2023-02-22 16:45:41.884] [jointLog] [info] There were 246511 transcripts mapping to 61552 genes; [2023-02-22 16:45:41.884] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2023-02-22 16:45:42.113] [jointLog] [info] Aggregating expressions to gene level; [2023-02-22 16:45:42.215] [jointLog] [info] done; ```. - Unsuccessful log:. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ geneMap ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/Homo_sapiens.GRCh38.106.gtf }; ### [ threads ] => { 6 }; ### [ libType ] => { ISR }; ### [ index ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/salmon }; ### [ mates1 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_1_val_1.fq.gz }; ### [ mates2 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:7401,expose,exposes,7401,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['expose'],['exposes']
Security,"io.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/tgMap; gunzip mm10tgMap.gz; ```. The index is surprisingly large, though, as compared to using `salmon index` on just the mm10 transcripts. In addition, when I try using it with `alevin`, it is returning the following error. ```; (base) Koens-MacBook-Pro:data koenvandenberge$ /Applications/salmon/bin/salmon alevin -l ISR \; > -1 SRR1853178_1.fq.gz \; > -2 SRR1853178_2.fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find gene mapping for : ENSMUST00000196221.1 w/ index 0; [2021-11-14 21:21:46.937]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/722:1372,validat,validation,1372,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722,1,['validat'],['validation']
Security,"ions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:2112,hash,hash,2112,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['hash'],['hash']
Security,"is is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/ }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_1.fastq.gz }; ### [ mates2 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ output ] => { quants/SRR2557119_quant }; ### [ gcBias ] => { }; Logs will be written to quants/SRR2557119_quant/logs; [2020-12-13 19:07:51.508] [jointLog] [info] setting maxHashResizeThreads to 8; [2020-12-13 19:07:51.508] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-12-13 19:07:51.508] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-12-13 19:07:51.508] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2020-12-13 19:07:51.508] [jointLog] [info] parsing read library format; [2020-12-13 19:07:51.508] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/gencode_v36_decoy_salmon-1.4.0/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; ```. **To Reproduce**; Steps and data to reproduce the behavior:; Building the index:; 1. Download the transcript and the genome sequence of human, latest version; ```; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_36/GRCh38.primary_assembly.genome.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/G",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/603:1133,validat,validateMappings,1133,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603,1,['validat'],['validateMappings']
Security,"ise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:2242,validat,validateMappings,2242,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['validat'],['validateMappings']
Security,"led process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; --------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:5380,validat,validateMappings,5380,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['validat'],['validateMappings']
Security,"lem is that we currently do not have an idea of what proportion of these two versions of the gene should actually exist in the RNAseq data I have (which we didn't perform but just grabbed a random sample from GenBank to test with). My adviser wants to first try and test it computationally first and then verify it in the lab (which is somewhat backwards in my mind, as it's really just a shot in the dark and from my preliminary analysis of Salmon, different parameters can drastically change the proportions of the two versions). . As you can see below, I have tried some parameter settings that I thought would be helpful (particularly ```--quasiCoverage```). But again I could be wrong and would like to know your opinions in the matter. . These runs were all performed with this 'default' run: ; ```; salmon quant -i index -l A -1 reads_1.fq -2 reads_2.fq --validateMappings -p 20 --numPreAuxModelSamples 250 --numAuxModelSamples 1000 -o output ; ```; I changes the ```AuxModelSamples``` to low values as I was generally only mapping 6000 reads to the two transcripts in total, so I didn't think they were working at the default settings. Below is also a small chart of some of my runs (which included quasi-mapping and selective-alignment), but what you can get is that there is a large variance between parameters. Particularly ```--seqBias``` showed a dramatic drop in predicted T - 2 transcripts. ![image](https://user-images.githubusercontent.com/29610303/61421680-5899aa00-a8c5-11e9-8349-bd708316599d.png). Any suggestions onto parameters settings to help me with this narrow question?. Now onto some questions regarding some outputs. 1. I run into a segmentation fault (core dumped) when I try to run the experimental ```--posBias```. I am new to RNAseq, but I thought this might help with this particular RNAseq set as it was a PolyA tail selection and when mapping to the full genome there is an observed heavy mapping to exon 1 with decreased mapping over exon 2, 3 and 4. . 2. During m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/401:2412,validat,validateMappings,2412,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401,1,['validat'],['validateMappings']
Security,"lentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:1459,Hash,Hash,1459,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,1,['Hash'],['Hash']
Security,"lerney.index; [2023-03-15 20:10:48.990] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; ^M^Mcounted k-mers for 10000 transcripts^M^Mcounted k-mers for 20000 transcripts^M^Mcounted k-mers for 30000 transcripts^M^Mcounted k-mers for 40000 transcripts^M^Mcounted k-mers for 50000 transcripts^M^Mcounted k-mers for 60000 transcripts^M^Mcounted k-mers for 70000 transcripts^M^Mcounted k-mers for 80000 transcripts^M^Mcounted k-mers for 90000 transcripts^M^Mcounted k-mers for 100000 transc; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Clipped poly-A tails from 28 transcripts; wrote 4224924 cleaned references; [2023-03-15 20:12:12.984] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2023-03-15 20:12:29.921] [puff::index::jointLog] [info] ntHll estimated 1872745301 distinct k-mers, setting filter size to 2^35; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 34359738368; Capacity = 2; Files:; illerney.index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:34359738368; Pass Filling Filtering; 1 297 695; 2 55 3; True junctions count = 5239944; False junctions count = 16749742; Hash table size = 21989686; Candidate marks count = 29916168; --------------------------------------------------------------------------------; Reallocating bifurcations time: 2; True marks count: 20234145; Edges construction time: 59; --------------------------------------------------------------------------------; Distinct junctions = 5239944. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 139; Max Junction ID: 12729038; seen.size():101832313 kmerInfo.size():12729039; approximateContigTotalLength: 1607258836; counte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/837:1825,Hash,Hash,1825,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837,1,['Hash'],['Hash']
Security,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:9194,Hash,Hash,9194,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['Hash'],['Hash']
Security,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:11156,Hash,Hash,11156,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,2,['Hash'],['Hash']
Security,"low. The Salmon version I used is `salmon 1.2.1`, and the species I am working on is a hexaploid plant. The transcriptome is highly duplicated from BUSCO result, and can be 100% mapped back to the genome. . I indexed the transcriptome using the full genome as the decoy sequence at the first place, and quantified one RNAseq sample. The code I used is in below; ```; # generate decoy sequence id; grep ""^>"" genome.fa | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. # combine transcriptome and genome; cat transcriptome.fa genome.fa > gen_trom.fa. # index the transcriptome using whole genome as decoy sequence; salmon index -t gen_trom.fa -d decoys.txt -p 12 -i salmon_index -k 31 --gencode --keepDuplicates. # quantification; salmon quant -i salmon_index -l A \; -r sample.fastq.gz -p 8 --validateMappings --fldMean 200 --fldSD 30 \; --seqBias -o quants; ```; And the mapping rate is about 70%, please see below; ```; ""num_bootstraps"": 0,; ""num_processed"": 22033243,; ""num_mapped"": 15597853,; ""num_decoy_fragments"": 918827,; ""num_dovetail_fragments"": 0,; ""num_fragments_filtered_vm"": 998490,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 8898919,; ""percent_mapped"": 70.7923613423589; ```; The mapping rate is lower than I expected, and then I used Hisat2 to align the sample to the genome. The code is below; ```; # build genome index; hisat2-build -p 8 -f genome.fa genome_index; # mapping; hisat2 -x genome_index -U sample.fastq.gz --rna-strandness R -p 8 -S sample.sam; ```; And the mapping rate is ~80%, please see below; ```; 22033243 reads; of these:; 22033243 (100.00%) were unpaired; of these:; 4263277 (19.35%) aligned 0 times; 11743820 (53.30%) aligned exactly 1 time; 6026146 (27.35%) aligned >1 times; 80.65% overall alignment rate; ```; This is expected because the the RNAseq data was generated from a variety that different from the one used for transcriptome and genome assembly. Then I indexed the transcriptome without the decoy sequence and quantifi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/633:1029,validat,validateMappings,1029,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/633,1,['validat'],['validateMappings']
Security,"ly accepts two read at a time, i.e R1, R2. Additionally, I used R1 and R2 for the alevin quantification using the code;; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 F379_R1.fastq -2 F379_R2.fastq -o alevin_combinedRun -p 16 --tgMap txp2gene_BM.tsv --chromiumV3 --dumpFeatures . This resulted in 233 cells indicated in the figure below with Mapping rate less than 6%.; <img width=""473"" alt=""Alevin"" src=""https://user-images.githubusercontent.com/38905650/151156881-da620d2e-3e9a-41fc-acce-ef2722788424.PNG"">; log file; 2022-01-26 11:52:30.149] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 11:52:30.149] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 11:52:30.149] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 11:52:30.149] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 11:52:30.149] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 cells with Mapping rate = 58.3421%; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 SRR12148226_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -p 16 --tgMap txp2gene_BM.tsv --chromium --dumpFeatures --expectCells 15000 . What is most noticeable is that the Mapping rate increased by over 50% by just ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/742:1325,validat,validateMappings,1325,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742,1,['validat'],['validateMappings']
Security,"m options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 libra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:1917,validat,validateMappings,1917,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['validat'],['validateMappings']
Security,"m to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:6200,validat,validateMappings,6200,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"ml""; shell:; """"""; grep ""^>"" {input.ref} | cut -d "" "" -f 1 > {output.decoy}; sed -i.bak -e 's/>//g' {output.decoy}; cat {input.tcp} {input.ref} > {output.gent}; """""". rule salmon_index:; input:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; output:; directory(""results/salmon/index""); conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon index -p {threads} -t {input.gent} -d {input.decoy} -i {output}; """""". if config[""salmon""][""mapping_mode""]:; rule salmon_quant_mapping:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon/index""; output:; directory(""results/salmon/quant/{smp}_salmon_quant""),; mappings=""results/salmon/quant/{smp}_salmon_quant/{smp}_salmon_mappings""; log:; 		""results/salmon/logs/{smp}.salmon.log""; conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames --writeMappings={output.mappings} -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ SFA method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73188783-62605d80-40f1-11ea-87ef-e16050f94e60.png). </p>; </details>. <details><summary>cmd_info.json (SFA)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant"",; """": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""writeMappings"": """,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/479:2020,validat,validateMappings,2020,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479,1,['validat'],['validateMappings']
Security,"mon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk); **Describe the bug**; I have a Illumina TruSeq Stranded Ribozero library and when I use salmon with -l A, it detects the libraries as either ISF or IU (for different indexes). The mapping rate is about 50-75% per index. However, as I understand it, Illumina TruSeq stranded libraries are supposed to be ISR? When I use -l ISR, i get much lower mapping rates so I'm a bit confused. Am I wrong about the library type for TruSeq Stranded, or is there a mistake in the Salmon docs? . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Latest (0.14.1); * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda, using a Snakemake workflow (ARMOR, from Mark Robinson's lab); * Which reference (e.g. transcriptome) was used?; Arabidopsis thaliana, from ensembl; * Which read files were used?; * Which which program options were used?; salmon (mapping-based) v0.14.1; [ program ] => salmon; [ command ] => quant; [ index ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/reference/SalmonIndex/Arabidopsis_thaliana }; [ libType ] => { ISR }; [ mates1 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R1.fastq.gz }; [ mates2 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R2.fastq.gz }; [ output ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/output/salmon/12-0-rve-30-3 }; [ numBootstraps ] => { 100 }; [ seqBias ] => { }; [ gcBias ] => { }; [ validateMappings ] => { }; [ ] => { o--fldMean }; [ ] => { 250 }; [ fldSD ] => { 25 }; [ threads ] => { 7 }. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version ; **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/393:1591,validat,validateMappings,1591,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/393,1,['validat'],['validateMappings']
Security,"mon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"",; * Which reference (e.g. transcriptome) was used?; we have a custom reference based on g35. ; * Which read files were used?; * Which which program options were used?; * . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:1827,secur,secure-,1827,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['secur'],['secure-']
Security,"mples that have worked with Cell Ranger. I recompiled the program with `-DCMAKE_BUILD_TYPE=Debug` and have attached the output and gdb backtrace. There is roughly 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:1116,secur,security,1116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['secur'],['security']
Security,"n of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got tha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:1006,validat,validateMappings,1006,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,1,['validat'],['validateMappings']
Security,"n of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:14684,validat,validation,14684,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"n on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs, just the results of Gene C and Gene D varying for a reason I cannot pinpoint.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/524:1154,validat,validateMappings,1154,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/524,1,['validat'],['validateMappings']
Security,"n_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.432] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.469] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragmen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:2431,hash,hash,2431,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,1,['hash'],['hash']
Security,"ndex; gunzip mm10SalmonIndex.gz. wget -O mm10tgMap.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/tgMap; gunzip mm10tgMap.gz; ```. The index is surprisingly large, though, as compared to using `salmon index` on just the mm10 transcripts. In addition, when I try using it with `alevin`, it is returning the following error. ```; (base) Koens-MacBook-Pro:data koenvandenberge$ /Applications/salmon/bin/salmon alevin -l ISR \; > -1 SRR1853178_1.fq.gz \; > -2 SRR1853178_2.fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/722:1322,validat,validation,1322,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722,2,['validat'],"['validateMappings', 'validation']"
Security,"ndexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15:45:46.199] [jointLog] [info] Mapping rate = 60.9633%. [2018-12-05 15:45:46.199] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 15:45:47.617] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-05 15:47:14.597] [alevinLog] [info] Total 1870793 UMI after deduplicating.; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:7587,hash,hash,7587,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['hash'],['hash']
Security,"ndexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:13099,hash,hash,13099,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['hash'],['hash']
Security,"ne indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, eventually outputting the following after processing the reads:. ```; [2018-07-24 10:56:20.712] [jointLog] [info] Computed 9968 rich equivalence classes for further processing; [2018-07-24 10:56:20.712] [jointLog] [info] Counted 2785976 total reads in the equivalence classes; [2018-07-24 10:56:20.729] [jointLog] [warning] Only 2785976 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-24 10:56:20.729] [jointLog] [war",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/258:3296,hash,hash,3296,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258,1,['hash'],['hash']
Security,"nebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-co",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:3921,checksum,checksum,3921,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['checksum'],['checksum']
Security,"ng on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:15866,validat,validateMappings,15866,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"ngyong/BinningMappingRateLow/9998_1.fastq.gz"",; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_2.fastq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:1818,validat,validation,1818,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['validat'],['validation']
Security,"nput.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames --writeMappings={output.mappings} -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ SFA method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73188783-62605d80-40f1-11ea-87ef-e16050f94e60.png). </p>; </details>. <details><summary>cmd_info.json (SFA)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant"",; """": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""writeMappings"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""threads"": ""20"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. <details><summary>Salmon run w/ quasi mapping method</summary>; <p>. ```python; rule salmon_index_test:; input:; tcp = TRANSCRIPTS; output:; directory(""results/salmon_test/index""); priority:1; log:; ""results/salmon_test/logs/index.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon index -p {threads} -t {input.tcp} -i {output}; """""". rule salmon_quant_test:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon_test/index""; output:; directory(""results/salmon_test/quant/{smp}_salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/479:2952,validat,validateMappings,2952,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479,1,['validat'],['validateMappings']
Security,"nt ; ### [ geneMap ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/Homo_sapiens.GRCh38.106.gtf }; ### [ threads ] => { 6 }; ### [ libType ] => { ISR }; ### [ index ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/salmon }; ### [ mates1 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_1_val_1.fq.gz }; ### [ mates2 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; --------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:8805,validat,validateMappings,8805,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['validat'],['validateMappings']
Security,"ntLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux 0f0e43816679 6.4.16-linuxkit. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:3557,hash,hash,3557,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,2,"['hash', 'validat']","['hash', 'validateMappings']"
Security,"ntergenic_comb/{gtdb_species}_clustered_intergenic_seq_names.txt""); output: ""outputs/gtdb_genomes_salmon_index/{gtdb_species}/info.json""; threads: 1; params: index_dir = lambda wildcards: ""outputs/gtdb_genomes_salmon_index/"" + wildcards.gtdb_species; resources:; mem_mb=16000,; tmpdir=TMPDIR; conda: ""envs/salmon.yml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:3906,validat,validateMappings,3906,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['validat'],['validateMappings']
Security,"ny_03723-RA"" ; Bany_Scaf1	maker	CDS	206649	206878	.	+	0	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	CDS	207304	207478	.	+	1	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	five_prime_utr	201136	201180	.	+	.	ID ""Bany_03723-RA:five_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype five_prime_UTR; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	three_prime_utr	207479	207903	.	+	.	ID ""Bany_03723-RA:three_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype three_prime_UTR; transcript_id ""Bany_03723-RA"" ; ```. The log report I got:; ```; [2020-06-03 23:42:18.303] [jointLog] [info] setting maxHashResizeThreads to 36; [2020-06-03 23:42:18.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-03 23:42:18.303] [jointLog] [info] parsing read library format; [2020-06-03 23:42:18.303] [jointLog] [info] There is 1 library.; [2020-06-03 23:42:18.445] [jointLog] [info] Loading pufferfish index; [2020-06-03 23:42:18.446] [jointLog] [info] Loading dense pufferfish index.; [2020-06-03 23:42:18.906] [jointLog] [info] done; [2020-06-03 23:42:18.907] [jointLog] [info] Index contained 29,658 targets; [2020-06-03 23:42:18.922] [jointLog] [info] Number of decoys : 0; [2020-06-03 23:47:07.075] [jointLog] [info] Computed 96,808 rich equivalence classes for further processing; [2020-06-03 23:47:07.075] [jointLog] [info] Counted 22,215,758 total reads in the equivalence classes ; [2020-06-03 23:47:07.131] [jointLog] [warning] 0.00138398% of fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/530:3527,validat,validateMappings,3527,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530,1,['validat'],['validateMappings']
Security,"o align. **Specifically, please provide at least the following information:**. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:1742,validat,validateMappings,1742,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['validat'],['validateMappings']
Security,"oading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * Which version of salmon was used? 1.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Github release tarball; * Which reference (e.g. transcriptome) was used?; Gencode v32, with additional elements representing genic introns and intergenic spaces.; * Which read files were used?; NCBI SRA run accession GSM2392582; * Which which program options were used?; --no-version-check --libType ISR --threads 4 --seqBias --gcBias --useVBOpt. **Expected behavior**; I expected index loading to complete successfully.; **Desktop (please complete the following information):**; - OS: CentOS6. **Additional context**; I've uploaded the index file archive [here](https://www.icloud.com/iclouddrive/00DWWhkSucg2BTWLuFswSHwvQ#rapmap_issue_8_index) and the transcripts fasta file [here](https://www.icloud.com/iclouddrive/0oCdFG64TJe0IlvkYyIUZRfSQ#rapmap_issue_8_transcripts).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:2999,access,accession,2999,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,1,['access'],['accession']
Security,"ogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""threads"": ""20"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. <details><summary>Salmon run w/ quasi mapping method</summary>; <p>. ```python; rule salmon_index_test:; input:; tcp = TRANSCRIPTS; output:; directory(""results/salmon_test/index""); priority:1; log:; ""results/salmon_test/logs/index.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon index -p {threads} -t {input.tcp} -i {output}; """""". rule salmon_quant_test:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon_test/index""; output:; directory(""results/salmon_test/quant/{smp}_salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon_test/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon_test/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_test_quant"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""threads"": ""30"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. I have also run kallisto on same dataset to compare the results:. <details><summary>Mapping results",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/479:4067,validat,validateMappings,4067,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479,1,['validat'],['validateMappings']
Security,"ogs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.84% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:1712,hash,hash,1712,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,1,['hash'],['hash']
Security,"ome/MSU7new_transcript.index --type quasi -k 31. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13 Salmon/0.11.3-IGB-gcc-4.9.4; Salmon/0.9.1-IGB-gcc-4.9.4 Salmon/0.12.0-IGB-gcc-8.2.0 (D). * How was salmon installed (compiled, downloaded executable, through bioconda)?; through the biocluster in the University. * Which reference (e.g. transcriptome) was used?; converted the genomic fasta file to transcriptomic fasta file (described above); ; * Which read files were used?; the raw sequencing reads and the trimmed reads from the paired-end data. * Which which program options were used?; described above. **Expected behavior**; A clear and concise description of what you expected to happen. I've used the quassi mapping of Salmon using different versions several times and I expect to get different mapping rate per sample. I also expect to get different values of the parameters in the quant.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:4092,validat,validateMappings,4092,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['validat'],['validateMappings']
Security,"ometry 2[1-end] \; --umi-geometry 1[1-10] \; --bc-geometry 1[11-18,49-56,79-86] \; -2 R1.fastq.gz \; -1 R2_corrected.fastq.gz \; -i gencode_v36_transcripts_idx \; -p 8 \; -o SplitBio_SL2_alevin \; --tgMap gencode.v36.txt; ``` . I know that these libraries are stranded, but I doubt `ISR` is the correct architecture, especially given it's not true PE sequencing. Notably, running alevin this way gets me only a 4% mapping rate, and most of my cells get filtered out downstream due to having really low depth. . Below is my `salmon_quant.log`:; ```; [2021-08-20 12:29:32.343] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-08-20 12:29:32.343] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-08-20 13:19:51.055] [jointLog] [info] There is 1 library.; [2021-08-20 13:19:51.124] [jointLog] [info] Loading pufferfish index; [2021-08-20 13:19:51.125] [jointLog] [info] Loading dense pufferfish index.; [2021-08-20 13:19:53.706] [jointLog] [info] done; [2021-08-20 13:19:53.706] [jointLog] [info] Index contained 231,288 targets; [2021-08-20 13:19:53.777] [jointLog] [info] Number of decoys : 0; [2021-08-20 16:03:00.061] [join",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699:3399,validat,validateMappings,3399,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699,1,['validat'],['validateMappings']
Security,"on fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:1185,validat,validateMappings,1185,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,1,['validat'],['validateMappings']
Security,"onsistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54:46.141] [jointLog] [info] Counted 8925446 total reads in the equivalence classes ; [2023-03-07 06:54:46.282] [jointLog] [warning] 0.0015986% of fragments were shorter than the k u",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:2175,validat,validateMappings,2175,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['validat'],['validateMappings']
Security,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:1760,validat,validateMappings,1760,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:3371,validat,validateMappings,3371,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:4982,validat,validateMappings,4982,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:6592,validat,validateMappings,6592,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:8203,validat,validateMappings,8203,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:9814,validat,validateMappings,9814,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:11425,validat,validateMappings,11425,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:13036,validat,validateMappings,13036,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:16258,validat,validateMappings,16258,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"ot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:963,secur,security,963,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['secur'],['security']
Security,"ow for most of the transcripts:. `salmon quant --no-version-check -p 20 -i /library/salmon_mm10 -l A --seqBias --gcBias -1 Mice_A_batch2_1.fq.gz -2 Mice_A_batch2_2.fq.gz -o salmon_out`. ```; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 20 }; ### [ index ] => { /library/salmon_mm10 }; ### [ libType ] => { A }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ mates1 ] => { /upload/uploads/files/public/1/Mice_A_batch2_1.fq.gz }; ### [ mates2 ] => { /upload/uploads/files/public/1/Mice_A_batch2_2.fq.gz }; ### [ output ] => { /results/RNA-Seq/Mice_A_batch2/salmon_out }; Logs will be written to /results/RNA-Seq/Mice_A_batch2/salmon_out/logs; [2021-05-20 10:53:54.759] [jointLog] [info] setting maxHashResizeThreads to 20; [2021-05-20 10:53:54.760] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-20 10:53:54.760] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:1225,validat,validateMappings,1225,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['validat'],['validateMappings']
Security,"pected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:2293,validat,validateMappings,2293,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['validat'],['validateMappings']
Security,"quant failed immediately. The output from the failed salmon quant is: . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mnt/home/oconn341/salmon/indexs/alt_long_index }; ### [ libType ] => { A }; ### [ mates1 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz }; ### [ mates2 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz }; ### [ output ] => { preprocs_fastq/ERAP1_EAE_2270_S4 }; ### [ validateMappings ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; Logs will be written to preprocs_fastq/ERAP1_EAE_2270_S4/logs; [2021-08-20 18:19:52.590] [jointLog] [info] setting maxHashResizeThreads to 40; [2021-08-20 18:19:52.590] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 18:19:52.590] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 18:19:52.590] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 18:19:52.590] [jointLog] [info] parsing read library format; [2021-08-20 18:19:52.590] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file mnt/home/oconn341/salmon/indexs/alt_long_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /mnt/home/oconn341/salmon/bin/salmon quant was invoked improperly.; For usage information, try /mnt/home/oconn341/salmon/bin/salmon quant --help; Exiting. However, the versionInfo.json file is in my index folder, it only takes up 126 bits. I have tried generating index's w/ various k-mer lengths, w/ and w/o full genome decoy's, and allocating anywhere from 8-40Gb of RAM to the process. . I am not sure if my indexes are failing to generate. I get no output messaging saying they ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:1264,validat,validateMappings,1264,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['validat'],['validateMappings']
Security,"r repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:2184,Secur,Security,2184,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['Secur'],['Security']
Security,"r up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/sal",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:1234,validat,validateMappings,1234,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['validat'],['validateMappings']
Security,"reenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:1972,validat,validateMappings,1972,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['validat'],['validateMappings']
Security,"res and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; --------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:2529,validat,validateMappings,2529,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['validat'],['validateMappings']
Security,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:3172,validat,validation,3172,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:4783,validat,validation,4783,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:6393,validat,validation,6393,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:8004,validat,validation,8004,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:9615,validat,validation,9615,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:11226,validat,validation,11226,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:12837,validat,validation,12837,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:16059,validat,validation,16059,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"roduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/677:1723,validat,validateMappings,1723,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677,1,['validat'],['validateMappings']
Security,"s Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] Loading Transcript Info ; [2018-06-12 21:08:56.675] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-12 21:08:56.724] [stderrLog] [info] There were 36191 set bits in the bit array; [2018-06-12 21:08:56.729] [stderrLog] [info] Computing transcript lengths; [2018-06-12 21:08:56.729] [stderrLog] [info] Waiting to finish loading hash; [2018-06-12 21:08:58.508] [jointLog] [info] done; [2018-06-12 21:08:58.508] [jointLog] [info] Index contained 36191 targets; [2018-06-12 21:08:58.508] [stderrLog] [info] Done loading index. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; hits: 169917, hits per frag: 0.0489674[2018-06-12 21:09:22.500] [jointLog] [error] umi indexing of jellyfish failing.; Please report on github; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237:3944,hash,hash,3944,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237,1,['hash'],['hash']
Security,"s of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:3602,secur,security,3602,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['secur'],['security']
Security,"s. Do I need to use this R3 as input for alevin quantification, since alevin only accepts two read at a time, i.e R1, R2. Additionally, I used R1 and R2 for the alevin quantification using the code;; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 F379_R1.fastq -2 F379_R2.fastq -o alevin_combinedRun -p 16 --tgMap txp2gene_BM.tsv --chromiumV3 --dumpFeatures . This resulted in 233 cells indicated in the figure below with Mapping rate less than 6%.; <img width=""473"" alt=""Alevin"" src=""https://user-images.githubusercontent.com/38905650/151156881-da620d2e-3e9a-41fc-acce-ef2722788424.PNG"">; log file; 2022-01-26 11:52:30.149] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 11:52:30.149] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 11:52:30.149] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 11:52:30.149] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 11:52:30.149] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 cells with Mapping rate = 58.3421%; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 SRR12148226_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -p 16 --tgMap txp2gene_BM.tsv --chromium --dumpFeatures --expectCells 15000 . ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/742:1257,validat,validation,1257,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742,1,['validat'],['validation']
Security,"s/Trimmed/P2-45-54_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_39-47_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-5-11_221020_L002_R2.fastq.gz }; ### [ threads ] => { 100 }; ### [ validateMappings ] => { }; ### [ output ] => { salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant }; Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; --------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:9657,validat,validateMappings,9657,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['validat'],['validateMappings']
Security,"s://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:7276,validat,validateMappings,7276,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['validat'],['validateMappings']
Security,"salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-16 16:57:16.911] [jointLog] [info] Aggregating expressions to gene level; [2021-04-16 16:57:17.077] [jointLog] [info] done; [2021-04-16 16:57:17.088] [jointLog] [warning] NOTE: Read Lib [[ Trim/1-2-intestines-LDC4673.filtered.R1.fq.gz, Trim/1-2-intestines-LDC4673.filtered.R2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC4673/lib_format_counts.json for details; ```. However，when I try old version (0.9.1) or latest version (1.4.0), I got a normal mapping rate (77.1074%):. ```; [2021-04-20 10:08:58.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-20 10:08:58.048] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-20 10:08:58.048] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-20 10:08:58.048] [jointLog] [info] parsing read library format; [2021-04-20 10:08:58.048] [jointLog] [info] There is 1 library.; [2021-04-20 10:08:58.145] [jointLog] [info] Loading pufferfish index; [2021-04-20 10:08:58.146] [jointLog] [info] Loading dense pufferfish index.; [2021-04-20 10:09:05.198] [jointLog] [info] done; [2021-04-20 10:09:05.198] [jointLog] [info] Index contained 77,653 targets; [2021-04-20 10:09:05.266] [jointLog] [info] Number of decoys : 0; [2021-04-20 10:09:05.902] [jointLog] [info] Automatically detected most likely library type as IU. [2021-04-20 10:11:39.181] [fileLog] [info]; At end of round 0. Observed 25525591 total fragments (25525591 in most recent round). [2021-04-20 10:11:39.181] [jointLog] [info] Computed 111,080 rich equivalence classes f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:4505,validat,validateMappings,4505,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['validat'],['validateMappings']
Security,salmon docker failing while loading hash,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/243:36,hash,hash,36,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243,1,['hash'],['hash']
Security,"salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:3014,validat,validation,3014,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:4625,validat,validation,4625,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:7846,validat,validation,7846,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:9457,validat,validation,9457,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:11068,validat,validation,11068,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:12679,validat,validation,12679,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validation']
Security,"salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon_test/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon_test/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_test_quant"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""threads"": ""30"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. I have also run kallisto on same dataset to compare the results:. <details><summary>Mapping results from kallisto</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189235-0d711700-40f2-11ea-8952-1ca309554efd.png). </p>; </details>. As you can see there is quite a bit difference between two methods. Results from quasi mapping method look much similar to kallisto results. On the other hand, SAF method gave different results with lower mapping rates. My question is should one always trust the results from SAF method for downstream analysis since it supposed to give much accurate results? Is it usually normal to see this much differences between two methods (according to your [preprint](http://dx.doi.org/10.1101/657874) their correlation rate seems to be very high)? Might this lower mapping rate seen with SAF me",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/479:4836,validat,validateMappings,4836,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479,1,['validat'],['validateMappings']
Security,"sh quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. Desktop (please complete the following information):. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. Additional context; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318:2564,hash,hash,2564,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318,1,['hash'],['hash']
Security,"sing a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `un",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/304:1477,hash,hash,1477,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304,1,['hash'],['hash']
Security,small typo in --validateMappings description,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/338:16,validat,validateMappings,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/338,1,['validat'],['validateMappings']
Security,"so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda, official install order code; * Which reference (e.g. transcriptome) was used?; Arabidopsis (not important for the issue); * Which read files were used?; Arabidopsis (not important for the issue); * Which which program options were used?; Default. **Expected behavior**; I just want it work. **Screenshots**; <img width=""868"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/83922432/3913fbea-a0a7-4fb4-8aa1-4efef8b0990b"">. **Desktop (please complete the following information):**; - OS: Windows 11 => WSL => Ubuntu 22.04.4 LTS (GNU/Linux 5.10.16.3-microsoft-standard-WSL2 x86_64)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/927:1610,validat,validateMappings,1610,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927,1,['validat'],['validateMappings']
Security,"ss all samples:. Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250.000 30.539503 527.399; LOC_Os01g01010.2 2218 250.000 1.714089 29.601; LOC_Os01g01019.1 1127 250.000 0.057906 1.000; LOC_Os01g01030.1 2464 250.000 4.632473 80.000; LOC_Os01g01040.4 1524 250.000 0.842494 14.549; LOC_Os01g01040.1 2508 250.000 12.017881 207.542; LOC_Os01g01040.2 2482 250.000 8.005651 138.253; LOC_Os01g01040.3 2583 250.000 9.187142 158.656; LOC_Os01g01050.1 2039 250.000 21.476314 370.883. [2019-03-03 07:14:59.272] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-03-03 07:14:59.272] [jointLog] [info] parsing read library format; [2019-03-03 07:14:59.272] [jointLog] [info] There is 1 library.; [2019-03-03 07:14:59.329] [jointLog] [info] Loading Quasi index; [2019-03-03 07:14:59.329] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 07:15:12.564] [jointLog] [info] done; [2019-03-03 07:15:12.564] [jointLog] [info] Index contained 66,004 targets; [2019-03-03 07:15:14.824] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 07:16:36.263] [jointLog] [info] Thread saw mini-batch with a maximum of 89.90% zero probability fragments; [2019-03-03 07:16:36.295] [jointLog] [info] Thread saw mini-batch with a maximum of 89.70% zero probability fragments; [2019-03-03 07:16:36.305] [jointLog] [info] Thread saw mini-batch with a maximum of 88.36% zero probability fragments; [2019-03-03 07:16:36.311] [jointLog] [info] Thread saw mini-batch w",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:7859,validat,validateMappings,7859,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['validat'],['validateMappings']
Security,"tLog] [info] Mapping rate = 91.7673%. [2019-03-03 06:31:37.528] [jointLog] [info] finished quantifyLibrary(). ### For version 0.12. This is similar across all samples:. Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250.000 30.539503 527.399; LOC_Os01g01010.2 2218 250.000 1.714089 29.601; LOC_Os01g01019.1 1127 250.000 0.057906 1.000; LOC_Os01g01030.1 2464 250.000 4.632473 80.000; LOC_Os01g01040.4 1524 250.000 0.842494 14.549; LOC_Os01g01040.1 2508 250.000 12.017881 207.542; LOC_Os01g01040.2 2482 250.000 8.005651 138.253; LOC_Os01g01040.3 2583 250.000 9.187142 158.656; LOC_Os01g01050.1 2039 250.000 21.476314 370.883. [2019-03-03 07:14:59.272] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-03-03 07:14:59.272] [jointLog] [info] parsing read library format; [2019-03-03 07:14:59.272] [jointLog] [info] There is 1 library.; [2019-03-03 07:14:59.329] [jointLog] [info] Loading Quasi index; [2019-03-03 07:14:59.329] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 07:15:12.564] [jointLog] [info] done; [2019-03-03 07:15:12.564] [jointLog] [info] Index contained 66,004 targets; [2019-03-03 07:15:14.824] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 07:16:36.263] [jointLog] [info] Thread saw mini-batch with a maximum of 89.90% zero probability fragments; [2019-03-03 07:16:36.295] [jointLog] [info] Thread saw mini-batch with a maximum of 89.70% zero probability fragments; [2019-03-03 07:16:36.305] [jointLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:7709,validat,validateMappings,7709,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['validat'],['validateMappings']
Security,"tains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:2567,validat,validateMappings,2567,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['validat'],['validateMappings']
Security,"the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a transcript's forward strand, with matches starting within the first five nucleotides (and not match PhiX174). **To Reproduce**. Using Salmon v1.4.0, installed via Debian / apt:. $ salmon alevin -l ISR -1 INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; ...; [etc.]. **Desktop**. - OS: Debian Linux; - Version: Linux elegans 5.6.0-1-amd64 #1 SMP Debian 5.6.7-1 (2020-04-29) x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bullseye/sid; Release: unstable; Codena",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/628:2879,validat,validation,2879,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628,2,['validat'],"['validateMappings', 'validation']"
Security,tions^M^Mprocessed 231000000 positions^M^Mprocessed 232000000 positions^M^Mprocessed 233000000 positions^M^Mprocessed 234000000 positions^M^Mprocessed 235000000 positions^M^Mprocessed 236000000 positions^M^Mprocessed 237000000 positions^M^Mprocessed 238000000 positions^M^Mprocessed 239000000 positions^M^Mprocessed 240000000 positions^M^Mprocessed 241000000 positions^M^Mprocessed 242000000 positions^M^Mprocessed 243000000 positions^M^Mprocessed 244000000 positions^M^Mprocessed 245000000 positions^M^Mprocessed 246000000 positions^M^Mprocessed 247000000 positions^M^Mprocessed 248000000 positions^M^Mprocessed 249000000 positions^M^Mprocessed 250000000 positions^M^Mprocessed 251000000 positions^M^Mprocessed 252000000 positions^M^Mprocessed 253000000 positions^M^Mprocessed 254000000 positions^M^Mprocessed 255000000 positions^M^Mprocessed 256000000 positions^M^Mprocessed 257000000 positions^M^Mprocessed 258000000 positions^M^Mprocessed 259000000 positions^M^Mprocessed 260000000 positions^M^Mprocessed 261000000 positions^M^Mprocessed 262000000 positions^M^Mprocessed 263000000 positions^M^Mprocessed 264000000 positions^M^Mprocessed 265000000 positions^M^Mprocessed 266000000 positions^M^Mprocessed 267000000 positions^M^Mprocessed 268000000 positions^M^Mprocessed 269000000 positions^M^Mprocessed 270000000 positions^M^Mprocessed 271000000 positions^M^Mprocessed 272000000 positions^M^Mprocessed 273000000 positions^M^Mprocessed 274000000 positions^M^Mprocessed 275000000 positions^M^Mprocessed 276000000 positions^M^Mprocessed 277000000 positions^M^Mprocessed 278000000 positions^M^Mprocessed 279000000 positions^M^Mprocessed 280000000 positions^M^Mprocessed 281000000 positions^M^Mprocessed 282000000 positions^M^Mprocessed 283000000 positions^M^Mprocessed 284000000 positions^M^Mprocessed 285000000 positions^M^Mprocessed 286000000 positions^M^Mprocessed 287000000 positions^M^Mprocessed 288000000 positions^M^Mprocessed 289000000 positions; khash had 109134690 keys; saving hash to disk .,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:12592,hash,hash,12592,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['hash'],['hash']
Security,"to the process. . I am not sure if my indexes are failing to generate. I get no output messaging saying they failed. . Here is the output from my last index build attempt w/o decoy's. Run time in the order of 15min or so:. [2021-08-20 18:04:11.408] [puff::index::jointLog] [warning] Removed 739 transcripts that were sequence duplicates of indexed transcripts.; [2021-08-20 18:04:11.408] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-08-20 18:04:11.410] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2021-08-20 18:04:11.410] [puff::index::jointLog] [info] Clipped poly-A tails from 647 transcripts; wrote 116708 cleaned references; [2021-08-20 18:04:17.164] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2021-08-20 18:04:19.369] [puff::index::jointLog] [info] ntHll estimated 100414800 distinct k-mers, setting filter size to 2^31; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 2147483648; Capacity = 2; Files: ; indexs/alt_long_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:2147483648; Pass	Filling	Filtering; 1	15	55	; 2	4	0; True junctions count = 472636; False junctions count = 799354; Hash table size = 1271990; Candidate marks count = 5149133; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 3362277; Edges construction time: 4; --------------------------------------------------------------------------------; Distinct junctions = 472636. allowedIn: 21; Max Junction ID: 563055; seen.size():4504449 kmerInfo.size():563056; approximateContigTotalLength: 72618120; counters for complex kmers:; (prec>1 & succ>1)=21819 | (succ>1 & isStart)=419 | (prec>1 & isEnd)=421 | (isStart & isEnd)=30; contig count: 717834 element count: 122492815 complex nodes: 22689; # of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:3181,Hash,Hash,3181,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['Hash'],['Hash']
Security,"transcripts.fa.gz; gunzip GRCh38.primary_assembly.genome.fa.gz; ```; 3. following the instruction for building a SAF salmon index (https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ https://salmon.readthedocs.io/en/latest/salmon.html#what-s-this-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index with only the gencode.v36.transcripts.fa.gz, and the mapping rate for my fastq files were 42-55%, which i think is quite lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/603:3209,validat,validateMappings,3209,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603,1,['validat'],['validateMappings']
Security,"ug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; Segmentation fault error when running salmon quant. **To Reproduce**; Steps and data to reproduce the behavior:; Inconsistent behaviour, sometimes quant.sf files are generated, sometimes not. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] =",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:987,validat,validateMappings,987,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['validat'],['validateMappings']
Security,undefined reference to boost::program_options::validate,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/46:47,validat,validate,47,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46,1,['validat'],['validate']
Security,unrecognised option '--validateMappings',MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/563:23,validat,validateMappings,23,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/563,1,['validat'],['validateMappings']
Security,"ures, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] D",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:7077,validat,validation,7077,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['validat'],['validation']
Security,"us-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:1368,validat,validateMappings,1368,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['validat'],['validateMappings']
Security,"vailable at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; ---------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:2671,validat,validateMappings,2671,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['validat'],['validateMappings']
Security,"value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [info] Index contained 58,086 targets; [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please rep",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:5681,validat,validateMappings,5681,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['validat'],['validateMappings']
Security,"version of salmon was used? **salmon (selective-alignment-based) v1.10.2**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **package installation via Debian**; * Which reference (e.g. transcriptome) was used? **transcriptome**; * Which read files were used? **NovaSeq X Plus; read length 150bp x 2; untrimmed **; * Which which program options were used?. ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_${sampleName};; done; ```. Making Salmon less stringent:; ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --minScoreFraction 0.33 --recoverOrphans \; --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_MS0.33_${sampleName};; done; ```. **Expected behavior**. Documentation that has a good explanation of the parameters in the metadata file, sufficient to explain why Salmon mapping rates are different from other programs, and why it's common to see mapping rates below 80% (e.g. [here](https://github.com/COMBINE-lab/salmon/issues/661#issuecomment-850540604), where a mapping rate of 63% is apparently acceptable). Consider the following statistics (in `meta_info.json`):. ```; $ grep -A 7 'num_processed' mapped/salmon_MS*001_*/aux_info/meta*.json; ""num_processed"": 39191989,; ""num_mapped"": 16720284,; ""num_decoy_fragments"": 3376529,; ""num_dovetail_fragments"": 5188759,; ""num_fragments_filtered_vm"": 3487789,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 3046512,; ""percent_mapped"": 42.6625043194414,; ""call"": ""quant"",; ```. The numbers from `unmapped_name",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/925:5782,validat,validateMappings,5782,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925,1,['validat'],['validateMappings']
Security,"version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { transcripts_index }; ### [ libType ] => { IU }; ### [ mates1 ] => { IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [201",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/426:2088,validat,validateMappings,2088,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426,1,['validat'],['validateMappings']
Security,"warnings in the form of '[warning] len : *, but txp.RefLenght : *' appeared in the running log.; How did this occurred? Will this affect the quantification?; salmon version : v1.0.0; reference genome: ensembl GRCh38 release 96; ****gentrome and decoy generating command:****; grep ""^>"" $home/Ensembl_human_v96/Homo_sapiens.GRCh38.dna.primary_assembly.fa | cut -d "" "" -f 1 > decoys_new.txt; sed -i.bak -e 's/>//g' decoys_new.txt; cat $home/Ensembl_human_v96/Homo_sapiens.GRCh38_v96.cdna.all.fa $home/Ensembl_human_v96/Homo_sapiens.GRCh38.dna.primary_assembly.fa > $home/Ensembl_human_v96/gentrome.fa.gz; ; ****salmon index command:****; salmon index -t $home/Ensembl_human_v96/gentrome.fa.gz -d ; $home/Ensembl_human_v96/decoys.txt -p 12 -i ${home}/NGS/salmon_index_human_v96. ****salmon quant command:****; 	salmon quant -i ${home_path}/NGS/salmon_index_human_v96 -l A \; 	-1 ${fastq1} -2 ${fastq2} --validateMappings -p 12 --gcBias \; 	-o $count_path/${sample_name} ; ![image](https://user-images.githubusercontent.com/51859749/69779623-8f70bc80-11e3-11ea-9c94-6be4b9819d28.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/457:901,validat,validateMappings,901,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/457,1,['validat'],['validateMappings']
Security,xReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843[A. [32mprocessed[31m 2000001 [32mfragments[0m; hits: 8846970; hits per frag: 4.55737[A. [32mprocessed[31m 2500021 [32mfragments[0m; hits: 11062734; hits per frag: 4.49592[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 13274990; hits per frag: 4.48667[A. [32mprocessed[31m 3500002 [32mfragments[0m; hits: 15430043; hits per frag: 4.48414[A. [32mprocessed[31m 4000004 [32mfragments[0m; hits: 17638270; hits per frag: 4.48376[A. [32mprocessed[31m 4500000 [32mfragments[0m; hits: 19856371; ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:24590,hash,hash,24590,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['hash'],['hash']
Security,"xt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 12 }; ### [ output ] => { ERR2744256_tmp }; ### [ tgMap ] => { transcript_to_gene.txt }; ### [ dumpFeatures ] => { }; ### [ expectCells ] => { 278 }. [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-05-07 14:40:36.500] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-05-07 14:40:36.511] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 8 Million barcodes; processed 17 Million barcodes; processed 25 Million barcodes; processed 34 Million barcodes; processed 42 Million barcodes; processed 51 Million barcodes; processed 59 Million barcodes; processed 67 Million barcodes; processed 76 Million barcodes; processed 84 Million barcodes; processed 93 Million barcodes; processed 101 Million barcodesdes; processed 109 Million barcodes; processed 118 Million barcodes; processed 126 Million barcodes; processed 134 Million barcodes; processed 143 Million barcodesodes; processed 148 Million barcodes. [2019-05-07 14:42:18.567] [alevinLog] [info] Done barcode density calculation.; [2019-05-07 14:42:18",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362:2595,validat,validateMappings,2595,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362,1,['validat'],['validateMappings']
Security,"y type. When the program was done aligning to the index, I saw that the file had a mapping rate of 40%. I guess what I'm asking is, is this an acceptable mapping rate or should I be concerned?? The reason I ask is because in the data I was working with while learning via the Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] There is 1 library.; [2020-09-05 13:51:07.828] [jointLog] [info] Loading pufferfish index; [2020-09-05 13:51:07.876] [jointLog] [info] Loading dense pufferfish index.; [2020-09-05 13:51:49.487] [jointLog] [info] done; [2020-09-05 13:51:49.551] [jointLog] [info] Index contained 228,754 targets; [2020-09-05 13:51:50.523] [jointLog] [info] Number of decoys : 0; [2020-09-05 13:52:00.312] [jointLog] [info] Automatically detected most likely library type as SR; [2020-09-05 17:53:49.009] [jointLog] [info] Thread saw mini-batch with a maximum of 2.00% zero probability fragments; [2020-09-05 17:53:51.128] [jointLog] [info] Computed 344,342 rich equivalence classes for further processing; [2020-09-05 17:53:51.128] [jointLog] [info] Counted 20,897,706 total reads in the equivalence classes ; [2020-09-0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/571:1788,validat,validateMappings,1788,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571,1,['validat'],['validateMappings']
Security,"z --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins"": 4096,; ""mapping_type"": ""mapping"",; ""keep_duplicates"": false,; ""num_valid_targets"": 147493,; ""num_decoy_targets"": 61,; ""num_eq_classes"": 179681,; ""serialized_eq_classes"": false,; ""eq_class_properties"": [; ""range_factorized"",; ""gzipped""; ],; ""length_classes",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:2167,validat,validateMappings,2167,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['validat'],['validateMappings']
Security,"|19|IG_D_gene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:19.833] [jointLog] [warning] Entry with header [ENST00000604838.1_1|ENSG00000270185.1_2|OTTHUMG00000184585.2_2|OTTHUMT00000468915.2_1|IGHD1OR15-1B-201|IGHD1OR15-1B|17|IG_D_gene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:28.813] [jointLog] [warning] Entry with header [ENST00000579054.1_1|ENSG00000266416.1_3|OTTHUMG00000179204.1_3|OTTHUMT00000445280.1_1|AC130289.2-201|AC130289.2|28|processed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:32.075] [jointLog] [warning] Entry with header [ENST00000634174.1_1|ENSG00000282732.1_3|OTTHUMG00000191398.1_3|OTTHUMT00000487783.1_1|AC073539.7-201|AC073539.7|28|unprocessed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); Elapsed time: 59.38s. [2017-11-28 16:52:36.527] [jointLog] [warning] Removed 939 transcripts that were sequence duplicates of indexed transcripts.; [2017-11-28 16:52:36.527] [jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; Replaced 1 non-ATCG nucleotides; Clipped poly-A tails from 1555 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.0308857s; Writing sequence data to file . . . done; Elapsed time: 0.368073s; [info] Building 32-bit suffix array (length of generalized text is 300120034); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 1.2529s; done; Elapsed time: 91.367s; processed 300000000 positions; khash had 128912443 keys; saving hash to disk . . . done; Elapsed time: 10.1643s. **Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!**. [2017-11-28 16:59:48.161] [jLog] [info] done building index; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/176:12121,hash,hash,12121,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/176,1,['hash'],['hash']
Testability," ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:23825,Log,Logs,23825,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['Log'],['Logs']
Testability," #8: 0x00000000004e0f04 salmon`void cereal::save<bool&>(ar=0x00007fffffff4990, t=0x00007fffffff44f8) at json.hpp:944:5; frame #9: 0x00000000004e0ea5 salmon`cereal::JSONOutputArchive& cereal::OutputArchive<cereal::JSONOutputArchive, 0u>::processImpl<cereal::NameValuePair<bool&>, (this=0x00007fffffff4990, t=0x00007fffffff44f8)0>(cereal::NameValuePair<bool&> const&) at cereal.hpp:505:9; frame #10: 0x00000000004e0e49 salmon`void cereal::OutputArchive<cereal::JSONOutputArchive, 0u>::process<cereal::NameValuePair<bool&> >(this=0x00007fffffff4990, head=0x00007fffffff44f8) at cereal.hpp:417:15; frame #11: 0x0000000000483895 salmon`cereal::JSONOutputArchive& cereal::OutputArchive<cereal::JSONOutputArchive, 0u>::operator(this=0x00007fffffff4990, args=0x00007fffffff44f8)<cereal::NameValuePair<bool&> >(cereal::NameValuePair<bool&>&&) at cereal.hpp:311:15; frame #12: 0x0000000000569d2b salmon`fixFasta(parser=0x00000008018dd000, decoyNames=0x00007fffffff66c8, keepDuplicates=false, k=31, sepStr="" \t"", expect_transcriptome=true, iomutex=0x00007fffffff5f80, log=<unavailable>, outFile=<unavailable>, refIdExtensions=size=40811, shortRefs=size=1) at FixFasta.cpp:456:5; frame #13: 0x000000000056d58f salmon`fixFastaMain(args=size=7, refIdExtension=size=40811, shortRefs=size=1, log=<unavailable>, hasFeatures=false) at FixFasta.cpp:684:16 ; frame #14: 0x0000000000471f33 salmon`pufferfishIndex(indexOpts=0x00007fffffffdcd8) at PufferfishIndexer.cpp:429:17; frame #15: 0x0000000000983a5c salmon`salmonIndex(int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) [inlined] SalmonIndex::buildPuffIndex_(this=<unavailable>, indexDir=(m_pathname = ""athal_index""), idxOpt=<unavailable>) at SalmonIndex.hpp:111:15; frame #16: 0x0000000000983a32 salmon`salmonIndex(int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) [inlined] SalmonIndex::build(this=<unavailable>, indexDir=(m_pathname = ""athal_index""), idxOpt=<unavailable>) a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/725:4639,log,log,4639,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/725,1,['log'],['log']
Testability," ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:28276,log,logs,28276,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['log'],['logs']
Testability," 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:7945,log,log,7945,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['log'],['log']
Testability," 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ salmon version; Version Info: This is the most recent version of salmon.; salmon v1.4.0. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index : create a salmon index; quant : quantify a sa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/636:1950,log,log,1950,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636,1,['log'],['log']
Testability," => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:14845,test,testing,14845,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['test'],['testing']
Testability," I index the bins using the default kmer(31), and the length of reads is PE150. And the following is the command I use:; `salmon quant -i assembly_index/ -l A -1 9998_1.fastq.gz -2 9998_2.fastq.gz -p 100 -o 9998.quant --meta`. The log file:; ```{shell}; $cat lib_format_counts.json ; {; ""read_files"": [; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_1.fastq.gz"",; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_2.fastq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:1540,log,log,1540,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['log'],['log']
Testability," Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.; [2021-04-09 12:16:37.728] [alevinLog] [info] # Barcodes Used: 4000 / 4000.; [2021-04-09 12:16:37.729] [alevinLog] [info] Knee found left boundary at 102; [2021-04-09 12:16:37.862] [alevinLog] [info] Gauss Corrected Boundary at 52; [2021-04-09 12:16:37.862] [alevinLog] [info] Learned InvCov: 419.096 normfactor: 100.648; [2021-04-09 12:16:37.862] [alevinLog] [info] Total 195(has 201 low confidence) barcodes; [2021-04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:2241,test,tests,2241,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['test'],['tests']
Testability," [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [info] Index contained 58,086",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:5326,log,log,5326,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['log'],['log']
Testability," actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq -p 20 -o /home/user/data_store/TEST/test_sample/processed/ --seqBias --gcBias --dumpEq --writeUnmappedNames; ```. **Expected behavior**; This happened while I was modifying the tests for running salmon. I'm guessing that my code isn't quite right yet so something going wrong isn't quite unexpected. However I would have expected an error to come out of Salmon rather than producing JSON which is invalid. **Desktop (please complete the following information):**. Our exact environment for running this is described here:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/dockerfiles/Dockerfile.salmon. The base image is `ubuntu:16.04`. **Additional context**; Here is the contents of `lib_format_counts.json` file (github won't let me upload it):; ```; {; ""read_files"": ""( /home/user/data_store/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/279:1829,TEST,TEST,1829,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279,1,['TEST'],['TEST']
Testability," annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.org/packages/salmon) because conda triggers another bug.; I suspect that this is the cause of the bug. I tried to clean up my dependencies/packages but could not fix the bug. . Thank you for this great program! Cheers!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/965:1289,log,log,1289,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965,4,"['Assert', 'log']","['Assertion', 'log']"
Testability," available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:23858,log,logs,23858,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['log'],['logs']
Testability," cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings.; ```. is emitted in yellow. Yellow on white is nearly impossible to read. The rest of the text is black (as it should be). If the final command is instead:. ```; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant >/tmp/sq.log 2>&1. ```. There are no embedded control codes in the sq.log file. Changing the terminal to white text on black background also results in that line being colored yellow. Yellow on black is easy enough to read. I understand that normally this is run in a script and not interactively, but some highlight color other than yellow should be used on light backgrounds. Yellow may result in some way from default settings on CentOS 8, but I have no recollection of having seen another application do this in the several months I have been using this machine. Honestly, I do not see any real advantage in coloring the text at all since the lines are already marked with [info] or [warning] tags, so turning off whatever this coloring is would be fine, I think, for most people.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/541:2947,log,log,2947,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541,2,['log'],['log']
Testability," max rel diff. = 0.0152222; [00m[1m[2017-03-07 17:26:12.037] [jointLog] [info] iteration = 900 | max rel diff. = 0.0129215; [00m[1m[2017-03-07 17:26:59.294] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0111141; [00m[1m[2017-03-07 17:27:42.086] [jointLog] [info] iteration = 1080 | max rel diff. = 0.00971233; [00m[1m[2017-03-07 17:27:42.099] [jointLog] [info] Finished optimizer; [00m[1m[2017-03-07 17:27:42.099] [jointLog] [info] writing output . [00m[33m[1m[2017-03-07 17:27:42.729] [jointLog] [warning] NOTE: Read Lib [( /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz, /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz )] :. Greater than 5% of the fragments disagreed with the provided library type; check the file: /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/lib_format_counts.json for details. [00m**** Job ends ****; Tue Mar 7 17:27:45 EST 2017; ```. The log looks ok to us. Using `qacct` (an SGE command) I can check the memory it used, and it used ~9 GB of RAM:. ```bash; $ qacct -j 9958683 -t 3; ==============================================================; qname shared.q; hostname compute-068.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-txQuant-alzheimer.gsk_phaseII; jobnumber 9958683; taskid 3; account sge; priority 0; qsub_time Mon Mar 6 23:18:58 2017; start_time Mon Mar 6 23:19:12 2017; end_time Tue Mar 7 17:27:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:20045,log,log,20045,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['log'],['log']
Testability," message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings.; ```. is emitted in yellow. Yellow on white is nearly impossibl",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/541:1718,log,log,1718,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541,1,['log'],['log']
Testability," much appreciated. thank you. ; determining read length; Trimming reads; This is cutadapt 4.2 with Python 3.10.8; Command line parameters: -m 30 -u 18 -u -17 -o ./subset_SRR12820270_trimmed.fq subset_SRR12820270.fastq; Processing single-end reads on 1 core ...; Finished in 99.186 s (2.870 µs/read; 20.90 M reads/minute). === Summary ===. Total reads processed: 34,554,336. == Read fate breakdown ==; Reads that were too short: 778,286 (2.3%); Reads written (passing filters): 33,776,050 (97.7%). Total basepairs processed: 2,555,642,890 bp; Total written (filtered): 1,335,316,421 bp (52.2%); Salmon; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//default }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR12820270_trimmed.fq }; ### [ output ] => { salmonRes_SRR12820270 }; Logs will be written to salmonRes_SRR12820270/logs; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant --help; Exiting.; [2023-02-27 15:21:11.968] [jointLog] [info] setting maxHashResizeThreads to 5; [2023-02-27 15:21:11.968] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-27 15:21:11.969] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-27 15:21:11.970] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-27 15:21:11.970] [jointLog] [info] parsing read library format; [2023-02-27 15:21:11.971] [jointLog] [info] There is 1 library.; ./salmonRes_SRR12820270/quant.sf ; Error in geneIndexList[[i]] : subscript out of boun",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/833:1086,Log,Logs,1086,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833,2,"['Log', 'log']","['Logs', 'logs']"
Testability," of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-09 12:16:37.619] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:1756,test,tests,1756,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['test'],['tests']
Testability," rel diff. = 0.0303234; [2023-02-22 16:42:39.544] [jointLog] [info] iteration = 2100 | max rel diff. = 0.0413186; [2023-02-22 16:42:40.309] [jointLog] [info] iteration = 2124 | max rel diff. = 0.00863591; [2023-02-22 16:42:40.317] [jointLog] [info] Finished optimizer; [2023-02-22 16:42:40.317] [jointLog] [info] writing output . [2023-02-22 16:42:40.556] [jointLog] [info] Computing gene-level abundance estimates; [2023-02-22 16:45:41.884] [jointLog] [info] There were 246511 transcripts mapping to 61552 genes; [2023-02-22 16:45:41.884] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2023-02-22 16:45:42.113] [jointLog] [info] Aggregating expressions to gene level; [2023-02-22 16:45:42.215] [jointLog] [info] done; ```. - Unsuccessful log:. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ geneMap ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/Homo_sapiens.GRCh38.106.gtf }; ### [ threads ] => { 6 }; ### [ libType ] => { ISR }; ### [ index ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/salmon }; ### [ mates1 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_1_val_1.fq.gz }; ### [ mates2 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:7646,log,log,7646,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['log'],['log']
Testability," salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can send you the salmon_quant.log or any other file that would be useful. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OS CentOS 7.8; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/668:2026,log,log,2026,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668,1,['log'],['log']
Testability," strange message in the log out file after Salmon indexing on a very small genome with my own generated transcriptome and decoy. I'm running Salmon v1.0.0 index on the transcriptome of Candida parapsilosis which has a small genome of 26mbp. I created the transcriptome using Cufflinks gffread on my reference genome fasta and gff3. I created the decoy by concatenating the whole genome to the transcriptome [as it was described in the manual](https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode). . I am running using the following options:. `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i cpar_salmon_index -k 31; `. After indexing using a kmer size threshold of -k 31, I see the following message in the log out file ""filter size not provided. ntHll estimated 12754610 distinct k-mers, setting filter size to 2^28."" . 2^28 seems very high compared to 31 bp set using -k 31. I'm also curious why, after setting a k size, it printed the message ""filter size not provided."". I've pasted a more complete snippet of the log out file text below. Does everything look like it's run successfully? I'm concerned since I am running on a small genome and with my own generated decoy and transcriptome. Does it look like this running as it should, or is there a bug that I should provide more details about?. > [puff::index::jointLog] [info] Filter size not provided; ; > estimating from number of distinct k-mers; > [puff::index::jointLog] [info] ntHll estimated 1275461; > 0 distinct k-mers, setting filter size to 2^28; > Threads = 12; > Vertex length = 31; > Hash functions = 5; > Filter size = 268435456; > Capacity = 2; > Files: ; > cpar_salmon_index/ref_k31_fixed.fa; > --------------------------------------------------------------------------------; > Round 0, 0:268435456; > Pass	Filling	Filtering; > 1	0	8	; > 2	4	0; > True junctions count = 18712; > False junctions count = 40617; > Hash table size = 59329; > Candidate marks count = 141326",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/510:1106,log,log,1106,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/510,1,['log'],['log']
Testability," this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43.5974%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; ------------------------------------------------------------; Sender: LSF System <lsf@ebi5-164>; Subject: Job 9248384: <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> in cluster <EBI> Exited. Job <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> was submitted from host <ebi-login-001> by user <mahogny> in cluster <EBI>.; Job was executed on host(s) <10*ebi5-164>, in queue <research-rh7>, as user <mahogny> in cluster <EBI>.; </homes/mahogny> was used as the home directory.; </homes/mahogny/common/data/henrikson_celsee_20180825> was used as the working directory.; Started at Wed Aug 29 11:26:42 2018; Results reported at Wed Aug 29 11:33:22 2018. Your job looked like:. ------------------------------------------------------------; # LSBATCH: User input; ./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv; ------------------------------------------------------------. Exited with exit code 1. Resource usage summary:. CPU time : 306.36 sec.; Max Memory : 4490 MB; Average Memory : 2219.44 MB; Total Requested Memory : 30000.00 MB; Delta Memory : 25510.00 MB; (Delta: the difference",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:5490,log,login-,5490,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['log'],['login-']
Testability," used? salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant output.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Server Response: Not Found; # salmon (alignment-based) v1.10.2; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ threads ] => { 24 }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { U }; # [ alignments ] => { 007_D14_transcript.bam 007_D1_transcript.bam 014_D14_transcript.bam 014_D1_transcript.bam 069_D14_transcript.bam 069_D1_transcript.bam 127_D14_transcript.bam 127_D1_transcript.bam 36S_D14_transcript.bam 36S_D1_transcript.bam SCTI_D14_transcript.bam SCTI_D1_transcript.bam SCTI_D1_2000ng_transcript.bam ioGLUT_D7_transcript.bam ioMGL_D10_transcript.bam }; # [ output ] => { /scratch/prj/ppn_microglia_mod/directrna/salmon/transcripts_quant }; Logs will be written to /scratch/prj/ppn_microglia_mod/directrna/salmon/transcripts_quant/logs; [2024-04-09 18:22:04.559] [jointLog] [info] setting maxHashResizeThreads to 24; [2024-04-09 18:22:04.559] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2024-04-09 18:22:04.563] [jointLog] [info] numQuantThreads = 18; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""007_D14_transcript.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa"" . . .done. processed 0 reads in current round[2024-04-09 18:22:15.424] [jointLog] [info] replaced 4 non-ACGT nucleotides with random nucleotides; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [join",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:2042,Log,Logs,2042,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,2,"['Log', 'log']","['Logs', 'logs']"
Testability," were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 18:26:13.307] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 18:26:13.334] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 18:26:13.334] [alevinLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:3479,Log,Logs,3479,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,2,"['Log', 'log']","['Logs', 'logs']"
Testability," {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordan",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:4327,log,log,4327,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['log'],['log']
Testability," …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; ----------------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:1982,Log,Logs,1982,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['Log'],['Logs']
Testability," │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins"": 4096,; ""mapping_type"": ""mapping"",; ""keep_duplicates"": false,; ""num_valid_targets"": 147493,; ""num_decoy_targets"": 61,; ""num_eq_classes"": 179681,; ""serialized_eq_classes"": false,; ""eq_class_properties"": [; ""range_factorized"",; ""gzipped""; ],; ""length_classes"": [; 496,; 768,; 1403,; 2707,; 100404; ],; ""index_seq_hash"": ""c0bf1b46db288bdf947208ef6410a0ced47fa770ab5284a1b231d958b283728b"",; ""index_name_hash"": ""db38822bce0fbc9a64cfb0b230f58119448d1c82706f1c515f210cccaf4fdf7d"",; ""index_seq_hash512"": ""d683c5132cae8695500566a25",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:2508,log,logs,2508,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['log'],['logs']
Testability,"# tl;dr; - `salmon alevin` returns an error if the cell barcode length is > 31 base pairs; - This blocks me from using `salmon alevin` for a novel scRNA-seq chemistry that has a 34 base pair cell barcode.; - Previously the `salmon alevin` maximum cell barcode length was increased from 20 base pairs to 31 base pairs. https://github.com/COMBINE-lab/salmon/discussions/629; - Could you please increase the maximum cell barcode length again?; - Or provide guidance on how I should do this in my own fork of salmon?. # Summary. This bug primarily related to alevin (single-cell mode). **Describe the bug**. **To Reproduce**; ```; salmon alevin; -i /path/to/salmon_index ; -p 16 ; -l ISR; --read-geometry 2[1-100] ; --bc-geometry 1[1-34] ; --umi-geometry 1[35-44] ; --sketch ; -1 /path/to/r1.fastq ; -2 /path/to/r2.fastqs; -o /output/path ; --tgMap /path/to/t2g.tsv; ```. Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Salmon version`v1.10.1`; * How was salmon installed? -> Compiled; * Encountered this error when running a feature barcoding analysis following this tutorial https://combine-lab.github.io/alevin-fry-tutorials/2021/af-feature-bc/. **Expected behavior**; Salmon alevin does not error out when the cell barcode length is 34 base pairs. **Screenshots**; Error log; `[2024-06-17 22:00:25.466] [alevinLog] [error] Barcode length (34) was not in the required length range [1, 31].`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/943:1334,log,log,1334,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943,1,['log'],['log']
Testability,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:693,Log,Logs,693,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,2,"['Log', 'log']","['Logs', 'logs']"
Testability,); * Which read files were used? Either the [CD14+ Monocytes from the 10x v1 paper](http://s3-us-west-2.amazonaws.com/10x.files/samples/cell-exp/1.1.0/cd14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures. TEMPDIR is /tmp/tmp.lLLibfwH4G; Running command [salmon alevin -l ISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures -1 /tmp/tmp.lLLibfwH4G/p1.fa -2 /tmp/tmp.lLLibfwH4G/p2.fa -r ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/rea,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:1758,log,log,1758,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['log'],['log']
Testability,"** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:28238,log,log,28238,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['log'],['log']
Testability,"***; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:3120,Log,Logs,3120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/496:239,log,log,239,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496,1,['log'],['log']
Testability,**Describe the bug**; When I index the transcriptome duplicates with non-atgc characters are not identified as duplicates which leads to issues during quantification. **To Reproduce**. using salmon v1.10.0; salmon index -p 12 -t testtranscriptome.fa -i nodecoy_salmon_index --keepDuplicates. Only GeneB is in the resulting duplicate_clusters.tsv; This is the transcriptome (both genes are duplicates of one another one GeneA contains non-atgc characters). >GeneB_L; ATAACTACCTTCACACCGGCAACCATTTTGTTTACGAAGCTACAGTACTTGACGGTCAGCAGCAGCTCAT; TTTCAACATGGCGTCGAGATATGCTGCGAGAGTGCTGTGGAATTTTACAGCTCTTAGAAGTGCGAAAACA; CGACATTTACTCAAACGAATATCTCCTCTGAGCAATTTTAGGGATTTTCCTTATTCAAGTGACTTTTTTC; GTAGCTCAGCGCGTTTTGTTTGTGACAATTCAGCTGCGAAAAGTGCTCAACTCGGAAAACTAGACGTTGA; GAAGTTCCACTTGATATACACGTGCAGGGTTTGCAATACAAGGTCGAGGAAAACAATCTCAAAGCAGGCA; TACCATCATGGTGTTGTTATCGTTAAGTGTCCAGGATGTAGTAACAATCACCTCATTGCTGATAATCTTG; GATGGTTTTATAATGACAAGAGAAATATCGAAGACATTCTTGAGGAAAAGGGCGAAAAAGTCACCAAGAA; TGTAACAGAAGAGTTAACTTTAGAAGTTTTGGCAGACAAAATTAAGGAATGATGGATCCTTTGTAAAGAT; TATGGGTAAATTTTGGAGCTACATTTTGTGTACACTAAATCAATTATACTAAATATTTCAAAAAACTGTC; ATCAAGGTGACAATGGTGTCTGTTTATTGCAATATTGGTTGTGCCATGGCATACCAAAAGTTCCGAGACA; AGAATGTTGCAGATGCGCAGGAAAATTATGGTTTAATTTTGAGCAAAATGCAAGTGAACTTTGGAACAAT; AACAAATAATCAATGTGCTTACTATAAACTGTGAAATGTGTGCACTTAAAGTTATAAAGGTTGGAAGTGA; CATATTACTCTCCCTGTAAAGACTATGTATTTGTCAGTAAGTGACATTAATGAATCATCATGGTAAGTCA; TTCCTCTACAAATAATATTGGAAGATTTGATATTTTGTACTGTTTAATCTTCATGTTATGAAGTTGACAA; TCAAAATTAGTTTTCATAATTAGACAAGTTTTTAAATGTTGCTTTCAAAATCCCCATGTTTTTTCTGTTT; TGCTTGGAAGCCTGTGAAGCAGAGAAACGTCTTCAATTCATGATGTTGTGTGCAATCTAATATCCCTCAA; GTGATTGTAGCAACCCTGGAAAAAGACATGAATTGAATAAATTAGGTAATACCTCATTTAACAGAACATA; AAGTGAG. >GeneB_R; ATAACTACCTTCACACCGGCAACCATTTTGTTTACGAAGCTACAGTACTTGACGGTCAGCAGCAGCTCAT; TTTCAACATGGCGTCGAGATATGCTGCGAGAGTGCTGTGGAATTTTACAGCTCTTAGAAGTGCGAAAACA; CGACATTTACTCAAACGAATATCTCCTCTGAGCAATTTTAGGGATTTTCCTTATTCAAGTGACTTTTTTC; GTAGCTCAGCGCGTTTTGTTTGTGACAATTCAGCTGCGAAAAGTGCTCAACTCGGAAAACTAGACGTTGA; GAAG,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/935:229,test,testtranscriptome,229,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/935,1,['test'],['testtranscriptome']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/453:1285,log,log,1285,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453,2,['log'],['log']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Alevin. **Describe the bug**. Exception thrown by Alevin because it was invoked improperly:. ```; Version Info: This is the most recent version of salmon.; Logs will be written to results/salmon/alevin/S1/logs; [2021-04-09 12:16:37.619] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-04-09 12:16:37.619] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-09 12:16:37.619] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-04-09 12:16:37.619] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-09 12:16:37.619] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ ma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:242,Log,Logs,242,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Alevin. **Describe the bug**. When running alevin in `--rad` mode, the the `cmd_info.json` file is not output (and/or has very limited information). **To Reproduce**. I am working with version 1.5.1 of salmon, run with the following command:; ```; salmon alevin \; -l ISR \; --chromiumV3 \; -1 read1.fastq.gz -2 read2.fastq.gz \; -i splici_index \; --tgMap splici.tx2gene.tsv \; -o test_align \; --rad ; ```. **Expected behavior**; Without the `--rad` flag, there is a `cmd_info.json` file with the expected fields:; ```; {; ""salmon_version"": ""1.5.1"",; ""libType"": ""ISR"",; ""chromiumV3"": [],; ""mates1"": ""read1.fastq.gz"",; ""mates2"": ""read2.fastq.gz"",; ""index"": ""splici_index"",; ""tgMap"": ""splici.tx2gene.tsv"",; ""output"": ""test"",; ""threads"": ""2"",; ""auxDir"": ""aux_info""; }; ```. I would expect an output file with the same information (roughly) when `salmon alevin` is invoked with `--rad`, to aid in tracking file provenance. In prior versions (<= 1.4.0), there was a `cmd.json` file in `--rad` mode, but the contents were only:; ```; {; ""auxDir"": ""aux_info"", ; ""salmon_version"": ""1.4.0"" ; }; ```. (As a side note, the `aux_info` directory is empty in this case, but this may be expected). **Desktop (please complete the following information):**; - OS: OSX; - Version ; ```; ProductName:	macOS; ProductVersion:	11.4; BuildVersion:	20F71; ```. Also run using the biocontainers docker images, with the same result. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/688:804,test,test,804,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/688,1,['test'],['test']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin-fry. **Describe the bug**; A clear and concise description of what the bug is.; The new updates to the `cmd_info.json` file result in an extra `:` at the end of `""salmon_version:""` inside the quotes. This results in the json file being read in with the header of that entry being `salmon_version:` when it should be `salmon_version`. . Note that this was found when running `salmon alevin` in the `--rad` or `--justAlign` mode and we have not tested if this is also the case when running only `salmon alevin`. . **To Reproduce**; Steps and data to reproduce the behavior:; We ran alevin-fry v0.4.1 starting with `salmon alevin` using `--rad` on single-cell data in the salmon biocontainer and that led to the `cmd_info.json` file being output with the extra `:` on salmon_version. . The biocontainer that we used was: quay.io/biocontainers/salmon:1.5.2--h84f40af_0 . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; used the biocontainer ; * Which reference (e.g. transcriptome) was used?; used the splici index following the alevin-fry tutorial ; * Which read files were used?; * Which which program options were used?; ```; salmon alevin -l ISR --chromiumV3 --dumpFeatures --rad; ```. **Expected behavior**; A clear and concise description of what you expected to happen.; We would expect that the extra `:` would not be included to be consistent with previous versions of salmon. ; <img width=""325"" alt=""Screen Shot 2021-07-29 at 12 35 38 PM"" src=""https://user-images.githubusercontent.com/54039191/127538599-206d5e71-cb7a-4a82-8064-4e92e12ee892.png"">. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/691:536,test,tested,536,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/691,1,['test'],['tested']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both likely.; **Describe the bug**; Trying to build the new pufferfish index format, I receive a memory allocation error near the end of the index build process. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.99.0 beta1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded from Github release; * Which reference (e.g. transcriptome) was used?; gencode v25 with some ""extra"" stuff added - mainly introns for each unprocessed transcript.; * Which read files were used?; None; * Which which program options were used?; -p 8 (though I've used the default as well). **Expected behavior**; I expected the indexing process to complete. **Screenshots**; [pisces_bug.log](https://github.com/COMBINE-lab/salmon/files/3692191/pisces_bug.log). **Desktop (please complete the following information):**; - OS: Linux; - Version RHEL7; **Additional context**. I'm attempting to build an index that's quite large, and am very excited to try the new pufferfish graph-based index. Please let me know how I can help out - if it would be useful I can try to build the index using your standalone library as well.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/432:904,log,log,904,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432,2,['log'],['log']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk mode. **Describe the bug**; We uses salmon with ver 0.8 in the beginning, later on we found that it could updated to the latest version. Then after we updated it through conda, the quantify amount was reduced from 200+ to 39. **To Reproduce**; `salmon index -t test.transcripts.fa -i test_index --type puff -k 31 ; salmon quant -l A -i test_index -g annotation.gtf -r test.ccs.fq.gz -z -o test > test.sam`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.8.1 to 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; through bioconda ; * Which reference (e.g. transcriptome) was used?; transcriptome. **Expected behavior**; what is the different between these two versions? We expected that the result would not have such different like this. And we don't know which one is more accurate. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/47863838/85987901-de542e00-ba20-11ea-916a-fe90ca18586f.png). ![image](https://user-images.githubusercontent.com/47863838/85986442-d4c9c680-ba1e-11ea-9b98-140559ee0149.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu Linux.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/542:352,test,test,352,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/542,4,['test'],['test']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk. **Describe the bug**; A clear and concise description of what the bug is.; After building an index of the most recent build of the ensemble mouse genome (39) with salmon, running quant failed immediately. The output from the failed salmon quant is: . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mnt/home/oconn341/salmon/indexs/alt_long_index }; ### [ libType ] => { A }; ### [ mates1 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz }; ### [ mates2 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz }; ### [ output ] => { preprocs_fastq/ERAP1_EAE_2270_S4 }; ### [ validateMappings ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; Logs will be written to preprocs_fastq/ERAP1_EAE_2270_S4/logs; [2021-08-20 18:19:52.590] [jointLog] [info] setting maxHashResizeThreads to 40; [2021-08-20 18:19:52.590] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 18:19:52.590] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 18:19:52.590] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 18:19:52.590] [jointLog] [info] parsing read library format; [2021-08-20 18:19:52.590] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file mnt/home/oconn341/salmon/indexs/alt_long_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /mnt/home/oconn341/salmon/bin/salmon quant was invoked improperly.; For usage information, try /mnt/home/oconn341/salmon/bin/salmon quant --help; Exiting. However, the versionInfo.json file is in my index folder",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:933,Log,Logs,933,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Either. **Describe the bug**; This is really a feature request -- apologies if it shouldn't go here. Bowtie and similar tools (e.g. STAR) can use memory mapping or shared memory for the genome index. This has a nice benefit: in scenarios where N Bowtie processes simultaneously aligning to the same index on the same system, the index memory footprint is incurred once (not N times). I may soon be running many simultaneous `salmon quant` processes on the sam system, all quantifying with respect to the same (human) transcriptome index. The memory footprint is around 3GB, which adds up when there are many `salmon quants`s. I don't expect to have lots of free RAM on this system, since other simultaneously-running processes will be aligning and incurring a much larger footprint (but using shared memory). If salmon used memory mapping or shared memory for the index, I basically wouldn't have to worry about the peak memory footprint breaking the budget. Hence the request!. **To Reproduce**; Steps and data to reproduce the behavior:. * I looked in the issues and in the documentation for Salmon 0.11.3 and couldn't find any indication this is supported.; * I ran a bunch of simultaneous `salmon quant`s w/r/t the same index on a Linux system. Running `top` showed a very low number in the `SHR` column for those processes (with a high number, ~3GB, in the `RES` column), consistent with their not using shared memory or memory mapping. **Expected behavior**; A good way to test if it's working is to run simultaneous processes w/ same index and check the `SHR` column in `top`. If it's working, that should should be some large size. **Screenshots**; N/A. **Desktop (please complete the following information):**; I'm mainly interested in seeing this feature for Linux, but it's great if it works elsewhere too. Some of these mechanisms are more portable than others. **Additional context**; N/A",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/335:1565,test,test,1565,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/335,1,['test'],['test']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is a question related to both salmon and alevin. **Describe the bug**; Hey,. First, thanks a lot for creating and maintaining Salmon!! It is super useful!!. I have run alevin with some scRNA-seq data from 10x (so R1 is the BC +UMI and R2 is the RNA sequence) and by evaluating the logs and the lib_format_counts.json file I can see that there are ~360M of mapped fragments. However, if I run salmon quant in the R2 fastq.gz file I see that ~450M of fragments are now mapping. I do not understand from where are these differences coming.... I can still find differences (reduced though) when using the selective alignment as indicated here: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. **To Reproduce**; Steps and data to reproduce the behavior:. For the classic pseudoalignment - Salmon alevin. ```console; cat cmd_info.json; {; ""salmon_version"": ""1.4.0"",; ""libType"": ""ISR"",; ""mates1"": ""Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz"",; ""mates2"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""chromiumV3"": [],; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_pseudoalignment_salmon"",; ""threads"": ""8"",; ""output"": ""alevin_pseudoalignment_output"",; ""tgMap"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/tr2g.tsv"",; ""auxDir"": ""aux_info""; }; cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz, Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 360423666,; ""num_assigned_fragments"": 360423666,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1760256573,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ``` . For the classic pseudoalignment - Salmon ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/702:370,log,logs,370,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/702,1,['log'],['logs']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is in alevin, single-cell mode. **Describe the bug**; The log shows that there are at least 50% percent reads has been thrown away, and the mapping rate was between 18.7%-19.1%. **To Reproduce**; Steps and data to reproduce the behavior:; Reference was indexed using transcripts without decoy, and command line parameters are described below; The genome was not published so I can't share with you that, and I'm sorry with that. Specifically, please provide at least the following information:; * Which version of salmon was used? ; salmon 1.4.0. * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Bioconda. * Which reference (e.g. transcriptome) was used? ; The reference genome is sequenced by ourselves, and it's a plant. Reference was indexed using transcripts without decoy. * Which read files were used?; my reads layout is paired end 150bp; Will the 150bp reads affect the pipeline, and if it will, how can I make it to 28bp R1 and 91bp R2, which is identical to cellranger makefastq output.; > R1: ; @A00582:424:HJYLGDSXY:3:1101:1090:1000 1:N:0:ACCGGCTC; TAACCAGGTCGAGTGAGTATTTAAGGCGCGCGGCGCACCAACGCACTCCCAACAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; > +; FFFFFFFFFFFFFFFFFFFFFFFFFFFF,,:,,FF:,,,::FF,,:F,,,,,,F:,,,:,::FF::::::,FFF:F:FF:FFFFFFF::FF::FF,F:F:FF:F,FFFF,:FF,FFFFF:,FF:::FF:FFF:FF:FF:FFFFFFFFFF:; > R2:; @A00582:424:HJYLGDSXY:3:1101:1090:1000 2:N:0:ACCGGCTC; NCCTAGAAGCAGCCACCCTTGAAAGAGTGCGTAATAGCTCACTGATCGAGCGCTCTTGCGCCGAAGATGAACGGGGCTAAGCGATCTGCCGAAGCTGTGGGATGTAAAAATACATCGGTAGGGGAGCGTTCCGCCTTAGAGAGAAGCCTC; > +; #FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFF::FFFFFFFFFF:FFFFFFFFFFFFF:FFFFFF:FFFFFFF:. * Which which program options were used?; `salmon alevin -l ISR -1 ../clean/sample_S1_L001_R1_001.fastq -2 ../clean/sample_S1_L001_R2_001.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:147,log,log,147,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,1,['log'],['log']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:748,log,logs,748,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,2,['log'],['logs']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon index; **Describe the bug**; Hi,; I have tried a big reference file before and It was succesfully created. Now, I am getting the following error. My index file is relatively big, ~2G. I could not solve the problem. I also increased CPU to 36. Log:; ````; [2023-03-15 20:10:48.957] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-15 20:10:48.968] [jLog] [info] building index; out : illerney.index; [2023-03-15 20:10:48.990] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; ^M^Mcounted k-mers for 10000 transcripts^M^Mcounted k-mers for 20000 transcripts^M^Mcounted k-mers for 30000 transcripts^M^Mcounted k-mers for 40000 transcripts^M^Mcounted k-mers for 50000 transcripts^M^Mcounted k-mers for 60000 transcripts^M^Mcounted k-mers for 70000 transcripts^M^Mcounted k-mers for 80000 transcripts^M^Mcounted k-mers for 90000 transcripts^M^Mcounted k-mers for 100000 transc; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Clipped poly-A tails from 28 transcripts; wrote 4224924 cleaned references; [2023-03-15 20:12:12.984] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2023-03-15 20:12:29.921] [puff::index::jointLog] [info] ntHll estimated 1872745301 distinct k-mers, setting filter size to 2^35; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 34359738368; Capacity = 2; Files:; illerney.index/ref_k31_fixed.fa; --------------------------------------------------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/837:336,Log,Log,336,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837,1,['Log'],['Log']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Only `u` (unmapped) reads are labelled in the `aux_info/unmapped.txt` file, even when the log file indicates that many fragments were discarded because they are best-mapped to decoys. . **To Reproduce**. This GitHub repository details the motivation and full workflow of my pipeline: https://github.com/greenelab/2022-microberna/. To get the read files, I ran:; ```; rule rnaseq_sample_download:; output:; reads=""outputs/rnaseq_fastp/{sra}.fq.gz"",; json = ""outputs/rnaseq_fastp/{sra}.fastp.json"",; html = ""outputs/rnaseq_fastp/{sra}.fastp.html""; params: tmp_base = lambda wildcards: ""inputs/tmp_raw/"" + wildcards.sra; threads: 1; resources:; mem_mb=8000; run:; row = m.loc[m['experiment_accession'] == wildcards.sra]; fastqs = row['fastq_ftp'].values[0]; fastqs = fastqs.split("";""); if len(fastqs) == 1:; # single end data; download and stream directly to fastp for trimming.; fastq = fastqs[0]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + "".fastq.gz""):; shell(""wget -O {params.tmp_base}.fastq.gz ftp://{fastq}""). shell(""fastp -i {params.tmp_base}.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + "".fastq.gz""). else:; # paired end data; download both files, interleave, and then remove files; fastq_1 = fastqs[0]; fastq_2 = fastqs[1]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + ""_1.fastq.gz""):; shell(""wget -O {params.tmp_base}_1.fastq.gz ftp://{fastq_1}""). if not os.path.exists(params.tmp_base + ""_2.fastq.gz""):; shell(""wget -O {params.tmp_base}_2.fastq.gz ftp://{fastq_2}""). shell(""fastp -i {params.tmp_base}_1.fastq.gz -I {params.tmp_base}_2.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:206,log,log,206,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['log'],['log']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/845:121,test,test,121,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845,9,"['log', 'test']","['log', 'test', 'tests']"
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The bug is related to building the index by combining genome and transcriptome reference. **Describe the bug**; [salmon_index.err.log](https://github.com/COMBINE-lab/salmon/files/3801633/salmon_index.err.log). **To Reproduce**; Steps and data to reproduce the behavior: Reproducing the [Selective Alignment](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) tutorial. * Which version of salmon was used?; 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded Linux executable from GitHub; * Which reference (e.g. transcriptome) was used?; gencode.vM23.transcripts.fa.gz and GRCm38.primary_assembly.genome.fa.gz; * Which which program options were used?; `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index`. **Desktop (please complete the following information):**; - OS: Linux; - Version: Ubuntu 16.04. **Additional context**; When installed via bioconda the salmon index command finishes with no error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/441:216,log,log,216,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/441,2,['log'],['log']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:318,log,log,318,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['log'],['log']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; When using the `--whitelist` flag the option `--dumpCsvCounts` does not seem to work. **To Reproduce**; Salmon version 0.13.1 from Bioconda. `salmon alevin -l ISR -i ../salmon/index/ -1 R1_file -2 R2_file -o out_dir/ --tgMap ../salmon/txp2gene.tsv -p 20 --chromium --whitelist whitelist.txt --dumpFeatures --dumpCsvCounts`. I have a very problematic sample where the knee autodetection fails (way too high cell number). So I created a whitelist of the 5000 most frequent entries of the filtered_cb_frequency.txt. It seems to work as expected, but the quants_mat.csv is not created, which I need for further downstream analysis (Seurat). The quant_mat.gz is created though, is there a way to manually create a .csv from this file (it seems to be binary).; Thanks. P.S.: The alevin logs seem to contain some non-standard characters when the number of ""Barcodes used"" should be printed (maybe because of the colour highlighting?). **Expected behavior**; quants_mat.csv of the whitelisted cells should be created. **Logs**; ```; [2019-05-17 07:28:11.279] [alevinLog] [info] Processing barcodes files (if Present) . ; [2019-05-17 07:39:15.712] [alevinLog] [info] Done barcode density calculation.; [2019-05-17 07:39:15.712] [alevinLog] [info] # Barcodes Used: [32m346967519[0m / [31m347069857[0m.; [2019-05-17 07:39:15.731] [alevinLog] [info] Done importing white-list Barcodes; [2019-05-17 07:39:15.732] [alevinLog] [info] Total 4000 white-listed Barcodes; [2019-05-17 07:39:16.050] [alevinLog] [info] Done populating Z matrix; [2019-05-17 07:39:16.112] [alevinLog] [info] Done indexing Barcodes; [2019-05-17 07:39:16.112] [alevinLog] [info] Total Unique barcodes found: 3968995; [2019-05-17 07:39:16.112] [alevinLog] [info] Used Barcodes except Whitelist: 80709; [2019-05-17 07:39:16.858] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-05-17 07:39:16.868] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/363:896,log,logs,896,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/363,1,['log'],['logs']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; A clear and concise description of what the bug is.; I am running the following command on some sci-rna-seq3 samples and it seems to not work as expected. ; `salmon alevin -i af_splici/dm6_splici_idx/ -l ISR -1 data/SRR17122012_1.fastq -2 data/SRR17122012_2.fastq -o SRR17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/813:688,assert,assertion,688,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813,1,['assert'],['assertion']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; We have 60 samples made from very low RNA inputs (cell captures) so the libraries were made with Ovation Solo RNAseq kit from Tecan. 150 PE. One of the sample finished fine (but mapping rate 21%) but our nextflow pipeline crashed on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/668:388,test,tested,388,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668,1,['test'],['tested']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/ }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_1.fastq.gz }; ### [ mates2 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ output ] => { quants/SRR2557119_quant }; ### [ gcBias ] => { }; Logs will be written to quants/SRR2557119_quant/logs; [2020-12-13 19:07:51.508] [jointLog] [info] setting maxHashResizeThreads to 8; [2020-12-13 19:07:51.508] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-12-13 19:07:51.508] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-12-13 19:07:51.508] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2020-12-13 19:07:51.508] [jointLog] [info] parsing read library format; [2020-12-13 19:07:51.508] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/gencode_v36_decoy_salmon-1.4.0/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; ```. **To Reproduce**; Steps and data to reproduce the behavior:; Building the index:; 1. Download the transcript and the genome sequence of human, latest version; ```; wget http://ftp.ebi.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/603:812,Log,Logs,812,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode) . **Describe the bug**; salmon fails to map gene to transcript id despite given GTF or tx2id file as properly required.; I also used `grep` on both tx2id file and quant.sf file and both contain the transcript IDs tested. **To Reproduce**; 1. Create index decoys; Followed the steps in [tutorial](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment) ; 2. Create index; `salmon1.4.0/salmon-latest_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode -p 40`; 3. Run ; `salmon1.4.0/salmon-latest_linux_x86_64/bin/salmon quant -l A -1 <(zcat S1_1.fastq) -2 <(zcat S1_2.fastq) -o output -i salmon_index -g transcript_to_id_mm10`. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary; * Which reference (e.g. transcriptome) was used? mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/607:318,test,tested,318,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607,1,['test'],['tested']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon . **Describe the bug**; I'm working with 15 samples, with ~5Gb total reads per sample (90,000,000 to 100,000,000 reads, ~75 bp reads). I've tried running these samples through the `nf-core/rnaseq` pipeline, but the pipeline took an age to run before dying at the `salmon quant` steps. Some samples finished in about 12 minutes. Others timed out after 8+ hours. - Successful log:. ```; [2023-02-22 16:33:49.782] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-22 16:33:49.782] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-22 16:33:49.782] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-22 16:33:49.782] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-22 16:33:49.782] [jointLog] [info] parsing read library format; [2023-02-22 16:33:49.783] [jointLog] [info] There is 1 library.; [2023-02-22 16:33:49.784] [jointLog] [info] Loading pufferfish index; [2023-02-22 16:33:49.784] [jointLog] [info] Loading dense pufferfish index.; [2023-02-22 16:34:17.987] [jointLog] [info] done; [2023-02-22 16:34:18.037] [jointLog] [info] Index contained 245549 targets; [2023-02-22 16:34:19.908] [jointLog] [info] Number of decoys : 194; [2023-02-22 16:34:19.908] [jointLog] [info] First decoy index : 245314 ; [2023-02-22 16:39:30.638] [jointLog] [info] Thread saw mini-batch with a maximum of 1.10% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2023-02-22 16:39:30.654] [jointLog] [info] Thread saw mini-batch with a maximum of 1.12% zero probability fragments; [2023-02-22 16:39",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:467,log,log,467,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['log'],['log']
Testability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; When loading a pufferfish index using salmon v1.0 I encounter errors. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>64",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:430,log,log,430,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,1,['log'],['log']
Testability,"**Salmon**. I'm using bioconda version of salmon in a VM Linux instance. When I run salmon quant with the gcBias flag enabled, the run terminates halfway. . ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings --gcBias; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:733,Log,Logs,733,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,2,"['Log', 'log']","['Logs', 'logs']"
Testability,**The bug is primarily related to salmon (bulk mode)**. **Describe the bug**; After building salmon it segfaults with the example file shipped with the source tarball. The problem is described in detail in the [Debian bug tracking system](https://bugs.debian.org/1028713). While the Debian bug is against version 1.9.0 I can perfectly reproduce the issue with a recent download of version 1.10.0. **To Reproduce**; Steps and data to reproduce the behavior:. Download [your release tarball](https://github.com/COMBINE-lab/salmon/archive/refs/tags/v1.10.0.tar.gz). $ tar xaf v1.10.0.tar.gz; $ cd salmon-1.10.0; # build on Debian testing system; $ cmake -DCMAKE_BUILD_TYPE=Release -DUSE_SHARED_LIBS=TRUE -DBZIP2_LIBRARIES=-lbz2 -DBZIP2_INCLUDE_DIR=/usr/include -DLIBLZMA_INCLUDE_DIR=/usr/include/ -DLIBLZMA_LIBRARY=lzma -DCMAKE_MODULE_PATH=/usr/share/cmake/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not man,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835:627,test,testing,627,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835,1,['test'],['testing']
Testability,"**The bug is primarily related to salmon (bulk mode)**; **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v0.14.1; # [ program ] => salmon ; # [ command ] => quant ; # [ libType ] => { U }; # [ alignments ] => { Analysis/Quantification/OJ33.sam }; # [ targets ] => { Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas }; # [ output ] => { Analysis/Quantification/OJ33 }; # [ noErrorModel ] => { }; # [ writeUnmappedNames ] => { }; Logs will be written to Analysis/Quantification/OJ33/logs; [2019-08-13 11:13:43.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2019-08-13 11:13:43.563] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Analysis/Quantification/OJ33.sam"", fasta = ""Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas"" . . .done; [2019-08-13 11:13:46.239] [jointLog] [info] replaced 1 non-ACGT nucleotides with random nucleotides. processed 2000000 reads in current roundSegmentation fault (core dumped); ```; # To Reproduce; **Which version of salmon was used?**; salmon 0.14.1; **How was salmon installed (compiled, downloaded executable, through bioconda)?**; downloaded executable; **Which reference was used?**; custom, transcriptom derived from nanopore long-reads using Pinfish pipeline; **Which read files were used?**; SAM file returned by minimap2 (nanopore long reads); **Which which program options were used?**; `salmon quant -l U -a Analysis/Quantification/OJ33.sam -t Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas -o Analysis/Quantification/OJ33 --noErrorModel --writeUnmappedNames > Analysis/Quantification/OJ33.log`; **Desktop (please complete the following information):**; x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/414:506,Log,Logs,506,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414,3,"['Log', 'log']","['Logs', 'log', 'logs']"
Testability,", with bootstrapping. I am working on a cluster and submitting my script (I'll paste it below) with a Slurm scheduler. My issue is that the job runs for a couple of seconds, then gives me this massive “core” output - that is encrypted someway and I can’t read - and then an empty log and an empty alevin.log, so I don’t even have anything to use for troubleshooting. ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al; total 47106; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 4 amonaco_m hpc-ag-zinzen 4096 Mar 2 11:47 ..; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 alevin; -rw------- 1 amonaco_m hpc-ag-zinzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/636:1064,log,log,1064,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636,1,['log'],['log']
Testability,"-00004.tx.bam -p 8 -o salmon_aln --useVBOpt --incompatPrior 0. The end of log file looks like:. 1008 Completed first pass through the alignment file.; 1009 Total # of mapped reads : 53203073; 1010 # of uniquely mapped reads : 14377795; 1011 # ambiguously mapped reads : 38825278; 1012; 1013; 1014; 1015 [2016-08-19 14:45:45.648] [fileLog] [info] quantification processed 53203073 fragments so far; 1016; 1017 [2016-08-19 14:45:45.982] [jointLog] [info] Computed 292761 rich equivalence classes for further processing; 1018 [2016-08-19 14:45:45.982] [jointLog] [info] Counted 53203073 total reads in the equivalence classes; 1019 [2016-08-19 14:45:45.983] [jointLog] [info] starting optimizer; 1020 [2016-08-19 14:45:48.932] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate. I tried dropping the --useVBOpt and it only outputs ""nan"". I also tried --useVBOpt in quasi-mapping base mode.; salmon quant -i /hpc/grid/shared/ngsdb/annotation/gencode/salmon_0.6.1_v24/ -l ISR -1 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz -2 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz -p 8 -o salmon --useVBOpt --incompatPrior 0; That worked fine. More on the bam file:; it was generated by STAR with write alignments to transcriptome option. STAR --genomeDir /hpc/grid/shared/ngsdb/STAR/GRCh38_gencode24_100 --readFilesIn /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz --readFilesCommand zcat --runThreadN 8 --alignSJDBoverhangMin 1 --outFilterScoreMinOverLread 0.90 --outFilterMatchNminOverLread 0.90 --outFilterMis matchNoverLmax 0.05 --quantMode TranscriptomeSAM --alignEndsType EndToEnd --alignIntronMax 1000000 --outSAMtype BAM SortedByCoordinate;. The bam file worked with salmon 0.6.1 in alignment mode without --incompatPrior 0, (--useVBOpt was not an option in alignment based mode)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/78:1204,test,test,1204,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/78,4,['test'],['test']
Testability,"-52 to form a 27-base cell label; - Extract subsequence 53-60 as the UMI . > **UMI** By design, the UMI is a string of eight randomers immediately downstream of CLS3. If the CLSs have perfect matches or base substitutions, the UMI sequence is at position 53–60. For reads with insertions or deletions within the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a transcript's forward strand, with matches starting within the first five nucleotides (and not match PhiX174). **To Reproduce**. Using Salmon v1.4.0, installed via Debian / apt:. $ salmon alevin -l ISR -1 INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/628:2508,Log,Logs,2508,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"-ACTTCACT_lane-002-chunk-000.fastq.gz; read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: This is the most recent version of Salmon.; [2018-09-11 16:28:53.145] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ../../alevin_15_pc/logs; ### salmon (single-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz }; ### [ mates2 ] => { read-RA_si-ACTTCACT_lane-001-chunk-001.fastq.gz read-RA_si-ACTTCACT_lane",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:5637,log,logs,5637,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['log'],['logs']
Testability,"-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.; [2021-04-09 12:16:37.728] [alevinLog] [info] # Barcodes Used: 4000 / 4000.; [2021-04-09 12:16:37.729] [alevinLog] [info] Knee found left boundary at 102; [2021-04-09 12:16:37.862] [alevinLog] [info] Gauss Corrected Boundary at 52; [2021-04-09 12:16:37.862] [alevinLog] [info] Learned In",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:2109,test,tests,2109,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['test'],['tests']
Testability,".196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion table' failed.; Aborted; ```. I also checked the log file and it shows nothing except. ```; more indexing.log; [2016-03-17 10:41:34.655] [jointLog] [info] building index; ```. output:. ```; -rw-r--r-- 1 vdas DPT 59 Mar 17 10:41 indexing.log; -rw-r--r-- 1 vdas DPT 331863951 Mar 17 10:42 rsd.bin; -rw-r--r-- 1 vdas DPT 2654912013 Mar 17 10:43 txpInfo.bin; -rw-r--r-- 1 vdas DPT 21239292320 Mar 17 10:59 sa.bi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/49:2853,Assert,Assertion,2853,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49,1,['Assert'],['Assertion']
Testability,".fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_8-15/8-15_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_23-31/23-31_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_43-52_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-45-54_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_39-47_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-5-11_221020_L002_R2.fastq.gz }; ### [ threads ] => { 100 }; ### [ validateMappings ] => { }; ### [ output ] => { salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant }; Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; ------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:9308,Log,Logs,9308,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['Log'],['Logs']
Testability,".g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordant, which causes counts to look very...odd. See [this preprint](https://www.biorxiv.org/content/10.1101/2022.01.24.477642v1) for more details on that phenomenon. I'm trying to use the decoys as a first step in identifying reads that map to intergenic sequences, where reads might span two coding domain sequences, or land in the",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:4654,log,log,4654,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['log'],['log']
Testability,".gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-12-05 15:10:07.252] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ../hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ dumpFeatures ] => { }; ### [ mates1 ] => { /tmp/tmp.lLLibfwH4G/p1.fa }; ### [ mates2 ] => { /tmp/tmp.lLLibfwH4G/p2.fa }; ### [ unmatedReads ] => { ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-00",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:3723,Log,Logs,3723,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Log'],['Logs']
Testability,"//cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{out_data}/ref/idx/rank.bin"",; ""{out_data}/ref/idx/refAccumLengths.bin"",; ""{out_data}/ref/idx/ref_indexing.log"",; ""{out_data}/ref/idx/reflengths.bin"",; ""{out_data}/ref/idx/refseq.bin"",; ""{out_data}/ref/idx/seq.bin"",; ""{out_data}/ref/idx/versionInfo.json""; params:; job_name = ""build_idx"",; memory = ""select[mem>64] rusage[mem=64]"",; out_dir = ""{out_data}/ref/idx""; log:; ""logs/build_idx.out""; threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:2694,log,log,2694,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,2,['log'],"['log', 'logs']"
Testability,"/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`].",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/290:1742,test,testing,1742,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290,1,['test'],['testing']
Testability,"0057; Number of splices: GC/AG | 286461; Number of splices: AT/AC | 27717; Number of splices: Non-canonical | 119967; Mismatch rate per base, % | 0.34%; Deletion rate per base | 0.03%; Deletion average length | 1.95; Insertion rate per base | 0.02%; Insertion average length | 1.57; MULTI-MAPPING READS:; Number of reads mapped to multiple loci | 5982273; % of reads mapped to multiple loci | 7.86%; Number of reads mapped to too many loci | 138709; % of reads mapped to too many loci | 0.18%; UNMAPPED READS:; % of reads unmapped: too many mismatches | 0.00%; % of reads unmapped: too short | 9.42%; % of reads unmapped: other | 0.63%; CHIMERIC READS:; Number of chimeric reads | 482178; % of chimeric reads | 0.63%; ```. salmon is 1.3.0 in both cases, the command is the same but the libtype:; ```bash; salmon \; quant \; -l ISF \; -p 16 \; -t /path/to/transcriptome/hg38.fa \; -o /path/to/sample; -a /path/to/sample.transcriptome.bam; --numBootstraps 30; ```. salmon logs:; `-l A`; ```; Completed first pass through the alignment file.; Total # of mapped reads : 30,418,756; # of uniquely mapped reads : 8,515,057; # ambiguously mapped reads : 21,903,699; [2021-06-07 21:04:54.872] [jointLog] [info] Computed 430,852 rich equivalence classes for further processing; [2021-06-07 21:04:54.872] [jointLog] [info] Counted 29,620,334 total reads in the equivalence classes; [2021-06-07 21:04:54.873] [jointLog] [info] starting optimizer; [2021-06-07 21:04:55.023] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-06-07 21:04:55.040] [jointLog] [info] iteration = 0 | max rel diff. = 5827.81; [2021-06-07 21:04:54.620] [fileLog] [info] quantification processed 30,418,756 fragments so far; [2021-06-07 21:04:56.705] [jointLog] [info] iteration = 100 | max rel diff. = 20.953; [2021-06-07 21:04:58.369] [jointLog] [info] iteration = 200 | max rel diff. = 8.08439; [2021-06-07 21:05:00.033] [jointLog] [info] iteration = 300 | max rel diff. = 20.0975; [2021-06-07 21:05:01.696]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/669:1932,log,logs,1932,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669,1,['log'],['logs']
Testability,"03 16:17:47.714] [alevinLog] [info] Starting optimizer. [2022-12-03 16:17:47.868] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:17:47.868] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 17192510.00 UMI after deduplicating.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 1333800 BiDirected Edges.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLog] [info] setting maxHashResizeThreads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2022-12-03 15:43:11.767] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-12-03 15:43:11.767] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensus",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/814:4069,log,log,4069,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814,1,['log'],['log']
Testability,"03723-RA"" ; Bany_Scaf1	maker	CDS	203004	203820	.	+	2	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	CDS	206097	206223	.	+	1	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	CDS	206649	206878	.	+	0	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	CDS	207304	207478	.	+	1	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	five_prime_utr	201136	201180	.	+	.	ID ""Bany_03723-RA:five_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype five_prime_UTR; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	three_prime_utr	207479	207903	.	+	.	ID ""Bany_03723-RA:three_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype three_prime_UTR; transcript_id ""Bany_03723-RA"" ; ```. The log report I got:; ```; [2020-06-03 23:42:18.303] [jointLog] [info] setting maxHashResizeThreads to 36; [2020-06-03 23:42:18.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-03 23:42:18.303] [jointLog] [info] parsing read library format; [2020-06-03 23:42:18.303] [jointLog] [info] There is 1 library.; [2020-06-03 23:42:18.445] [jointLog] [info] Loading pufferfish index; [2020-06-03 23:42:18.446] [jointLog] [info] Loading dense pufferfish index.; [2020-06-03 23:42:18.906] [jointLog] [info] done; [2020-06-03 23:42:18.907] [jointLog] [info] Index contained 29,658 targets; [2020-06-03 23:42:18.922] [jointLog] [info] Number of decoys : ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/530:3235,log,log,3235,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530,1,['log'],['log']
Testability,"10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:5065,Log,Logs,5065,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"1_001.fastq.gz Sample1_S1_L004_R1_001.fastq.gz; Sample1_S1_L002_I1_001.fastq.gz Sample1_S1_L003_R1_001.fastq.gz Sample1_S1_L004_R2_001.fastq.gz; ```. I generated single I1, R1 and R2 files by concatenating fastq.gz files across lanes; for instance, Sample1_S1_L001_R1_001.fastq.gz + Sample1_S1_L002_R1_001.fastq.gz + Sample1_S1_L003_R1_001.fastq.gz + Sample1_S1_L004_R1_001.fastq.gz -> Single_S1_L001_R1_001.fastq.gz . I indexed my transcriptome by salmon, and I used Alevin using the indexed transcriptome. I used the following command:. ```; salmon alevin -l ISR \; -1 ""Single_S1_L001_R1_001.fastq.gz"" \; -2 ""Single_S1_L001_R2_001.fastq.gz"" \; --chromiumV3 \; -i $my_index \; -p 48 \; -o outputfolder \; --tgMap $my_tgmap \; --expectCells 10000 \; --forceCells 10000; ```. However, my mapping rate is only ~5%. I used cell ranger on the same data and the same transcriptome; the mapping rate is ~95%.; Is there any bug on Alevin? How can I improve the mapping rate?. Thank you!. ```; Alevin log:; [2022-12-03 15:43:12.004] [alevinLog] [info] Found 117342 transcripts(+0 decoys, +35 short and +0 duplicate names in the index); [2022-12-03 15:43:12.072] [alevinLog] [info] Filled with 117377 txp to gene entries; [2022-12-03 15:43:12.083] [alevinLog] [info] Found all transcripts to gene mappings; [2022-12-03 15:43:12.097] [alevinLog] [info] Processing barcodes files (if Present). [2022-12-03 15:58:16.214] [alevinLog] [info] Done barcode density calculation.; [2022-12-03 15:58:16.214] [alevinLog] [info] # Barcodes Used: [32m639154757[0m / [31m639154757[0m.; [2022-12-03 15:58:20.629] [alevinLog] [info] Total [32m5461[0m(has [32m1000[0m low confidence) barcodes; [2022-12-03 15:58:21.139] [alevinLog] [info] Done True Barcode Sampling; [2022-12-03 15:58:23.597] [alevinLog] [warning] Total 56.2839% reads will be thrown away because of noisy Cellular barcodes.; [2022-12-03 15:58:23.987] [alevinLog] [info] Done populating Z matrix; [2022-12-03 15:58:24.080] [alevinLog] [info] Total 188093 CB g",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/814:1629,log,log,1629,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814,1,['log'],['log']
Testability,"20-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-07-04 15:51:46.138] [jointLog] [info] parsing read library format; [2020-07-04 15:51:46.138] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/jl2e19/salmon_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /home/jl2e19/.conda/envs/SALMON/bin/salmon quant was invoked improperly.; For usage information, try /home/jl2e19/.conda/envs/SALMON/bin/salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:18336,Log,Logs,18336,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"2023-03-07 06:55:01.780] [jointLog] [info] iteration = 400 | max rel diff. = 0.0247299; [2023-03-07 06:55:05.539] [jointLog] [info] iteration = 500 | max rel diff. = 0.0189304; [2023-03-07 06:55:09.278] [jointLog] [info] iteration = 600 | max rel diff. = 0.017332; [2023-03-07 06:55:13.044] [jointLog] [info] iteration = 700 | max rel diff. = 0.013562; [2023-03-07 06:55:16.780] [jointLog] [info] iteration = 800 | max rel diff. = 0.0118759; [2023-03-07 06:55:20.542] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114777; [2023-03-07 06:55:24.213] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0100626; [2023-03-07 06:55:24.977] [jointLog] [info] iteration = 1022 | max rel diff. = 0.00967998; [2023-03-07 06:55:25.088] [jointLog] [info] Finished optimizer; [2023-03-07 06:55:25.088] [jointLog] [info] writing output ; ```; And the quality control report by `fastp` ; [fastp_report.pdf](https://github.com/COMBINE-lab/salmon/files/10999908/fastp_report.pdf). The log of `bowtie2`:; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:5095,log,log,5095,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['log'],['log']
Testability,"2:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.; [2021-04-09 12:16:37.728] [alevinLog] [info] # Barcodes Used: 4000 / 4000.; [2021-04-09 12:16:37.729] [alevinLog] [info] Knee found left boundary at 102; [2021-04-09 12:16:37.862] [alevinLog] [info] Gauss Corrected Bound",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:2043,test,tests,2043,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['test'],['tests']
Testability,"30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 cells with Mapping rate = 58.3421%; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 SRR12148226_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -p 16 --tgMap txp2gene_BM.tsv --chromium --dumpFeatures --expectCells 15000 . What is most noticeable is that the Mapping rate increased by over 50% by just adding --expectCells 15000 to the code. ; Could you please help me understand why these differences and if the quality of the these new identified cells (over 20000) can be trusted for downstream analysis considering that thy were initially not called. Thank you. <img width=""327"" alt=""alevin 2"" src=""https://user-images.githubusercontent.com/38905650/151187756-6fdd58fa-d30e-4a19-b951-cd25acde7f51.PNG"">. Log file; [2022-01-26 12:55:04.037] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 12:55:04.037] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 12:55:04.037] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 12:55:04.037] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 12:55:04.037] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 12:55:04.037] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 12:55:04.037] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/742:2739,Log,Log,2739,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742,1,['Log'],['Log']
Testability,"3_S66_R1_001Aligned.out.bam leaf_infe_t3_rep1_S43_R1_001Aligned.out.bam leaf_infe_t3_rep3_S67_R1_001Aligned.out.bam leaf_infe_t4_rep1_S44_R1_001Aligned.out.bam leaf_infe_t4_rep3_S68_R1_001Aligned.out.bam leaf_infe_t5_rep1_S45_R1_001Aligned.out.bam leaf_infe_t5_rep3_S69_R1_001Aligned.out.bam leaf_infe_t6_rep1_S46_R1_001Aligned.out.bam leaf_infe_t6_rep3_S70_R1_001Aligned.out.bam leaf_mock_t1_rep1_S35_R1_001Aligned.out.bam leaf_mock_t1_rep3_S59_R1_001Aligned.out.bam leaf_mock_t2_rep1_S36_R1_001Aligned.out.bam leaf_mock_t2_rep3_S60_R1_001Aligned.out.bam leaf_mock_t3_rep1_S37_R1_001Aligned.out.bam leaf_mock_t3_rep3_S61_R1_001Aligned.out.bam leaf_mock_t4_rep1_S38_R1_001Aligned.out.bam leaf_mock_t4_rep3_S62_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:06:31.513] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:06:31.513] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] . The alignment group queue pool has been exhaus",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:6762,log,logs,6762,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['log'],['logs']
Testability,"482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion `table' failed. Aborted; ```. head of fasta file:. ```; >uc001aaa.3_intron_0_0_chr1_12228_f| chr1:12227-12612; GTAAGTAGTGCTTGTGCTCATCTCCTTGGCTGTGATACGTGGCCGGCCCTCGCTCCAGCAGCTGGACCCCTACCTGCCGTCTGCTGCCATCGGAGCCCAAAGCCGGGCTGTGACTGCTCAGACCAGCCGGCTGGAGGGAGGGGCTCAGCAGGTCTGGCTTTGGCCCTGGGAGAGCAGGTGGAAGATCAGGCAGGCCATCGCTGCCACAGAACCCAGTGGATTGGCCTAGGTGGGATCTCTGAGCTCAACAAGCCCTCTCTGGGTGGTAGGTGCAGAGACGGGAGGGGCAGAGCCGC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/53:3149,Assert,Assertion,3149,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53,1,['Assert'],['Assertion']
Testability,"5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cmaking Salmon, it will always complain about an outdated version, having it opened or not won't make any difference. I'm also attaching the log files generated by Salmon:. CMakeCache.txt => https://pastebin.com/shdCpDde; CMakeLists.txt => https://pastebin.com/16AeRnyL. Also, while installing Boost, I got this:. > ; > The following directory should be added to linker library paths:; > ; > /mnt/d8e73111-db5e-4011-87aa-e4d64fb8c1e9/DATA/Software/boost/boost_1_70_0/stage/lib. What could the problem be? Why can't it recognise the right version? Did I mess up with anything? Thanks in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/388:2139,log,log,2139,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388,1,['log'],['log']
Testability,"68; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 21951; ru_majflt 282; ru_nswap 0; ru_inblock 56; ru_oublock 1066296; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:27160,log,logs,27160,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['log'],['logs']
Testability,"7-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.269] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:17831,test,testing,17831,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['test'],['testing']
Testability,": 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done making feature Matrix; Exception : [vector]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **To Reproduce**. I have uploaded the files used and a script to run a reproducible example:. https://www.dropbox.com/sh/ksn45n73bazp0rc/AABlsbkG-SLyKJN4DBO7zQ-va?dl=0. * Which version of salmon was used? 1.4.0; * How was salmon installed? bioconda. **Expected behavior**. Alevin should run to completion, with no errors. **Desktop :**; - OS: OSX; - Version: ProductName=Mac OS X, ProductVersion=10.15.7, BuildVersion=19H524. **Additional context**. The files are from a small test dataset - the reads have been subsampled and the genome reference sequence and annotation was filtered for the X chromosome. The index file was generated using the method describe here: https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:7955,test,test,7955,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['test'],['test']
Testability,"://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Addi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:1502,test,tested,1502,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,1,['test'],['tested']
Testability,"@@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been co",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/541:1602,log,log,1602,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541,1,['log'],['log']
Testability,A PR noting the differences in my approach to #269.; The one that I think needs addressing is in `writeFastq` (https://github.com/COMBINE-lab/salmon/compare/develop...PeteHaitch:develop?expand=1#diff-bf2f37cd9ea77a5c454a5bd860a924ee); without some change to this the `UMI` and `CB` are incorrectly extracted for CEL-Seq2. ; I simply commented out the original lines and modified it as needed for CEL-Seq2 in order to test my modified version.; I guess some sort of protocol-specific conditional is needed here. The remainder are minor/cosmetic choices of variable names (please feel free to ignore!).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/285:417,test,test,417,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/285,1,['test'],['test']
Testability,"A couple of operations in Salmon are determined by random numbers. For the purpose repeatability (in research or in automatic tests for packages using Salmon) it would be very useful to be able to set a seed for the random number generators. For example, we are using Salmon in a pipeline that generates HTML reports. In our tests we want to be sure that we control all sources of non-determinism and produce the very same report twice. This requires access to the seed. Would you be willing to accept a patch that changes all random number generation instances to first `getenv(""SALMON_RANDOM_SEED"")` and use that as the seed if provided? When `SALMON_RANDOM_SEED` is not provided the behaviour would be unchanged. (This relates to issue #102)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/185:126,test,tests,126,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185,2,['test'],['tests']
Testability,"ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""writeMappings"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""threads"": ""20"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. <details><summary>Salmon run w/ quasi mapping method</summary>; <p>. ```python; rule salmon_index_test:; input:; tcp = TRANSCRIPTS; output:; directory(""results/salmon_test/index""); priority:1; log:; ""results/salmon_test/logs/index.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon index -p {threads} -t {input.tcp} -i {output}; """""". rule salmon_quant_test:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon_test/index""; output:; directory(""results/salmon_test/quant/{smp}_salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon_test/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon_test/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_test_quant"",; ""val",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/479:3878,log,log,3878,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479,2,['log'],"['log', 'logs']"
Testability,"Add [inDropv2 protocol](https://www.nature.com/articles/nprot.2016.154) to salmon alevin. To use this protocol pass the `--indropV2` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/inDrop.html). R1 is the biological read and R2 is the metadata read. Briefly, the reads have 8-11 bp barcode1, followed by a `W1` sequence which should be specified using `--w1` flag then 8bp barcode2 and 6 bp UMI sequence follows. . Summary of changes:; 1. `--indropV2` flag added to process indropV2 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the positions and avoid searching twice; 3. In case the barcode1 is less than 11bp, `A` is added after joining barcodes 1 and 2 to make the total length 19 bp; 4. If no exact match for w1 is found, a search for w1 with a hamming distance <=2 is performed. It was tested for correlation on run SRR7165069 from GEO submission [GSM3141960](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3141960).; Results:; ![image](https://user-images.githubusercontent.com/12998572/133622734-9b473318-fb39-421d-a322-b018f93ac139.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.3634 0.8981 0.9655 0.9307 0.9874 0.9976 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/703:925,test,tested,925,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/703,1,['test'],['tested']
Testability,"Add [sci-rna-seq3 protocol](https://www.nature.com/articles/s41586-019-0969-x) to salmon alevin. To use this protocol pass the `--sciseq3` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html). Briefly, the reads have 9-10 bp hairpin adaptor index, and 10bp reverse transcription index which together make the cell barcode of 19-20 bp in length; an 8 bp UMI which follows a 6bp anchor sequence CAGAGC. . Summary of changes:; 1. `--sciseq3` flag added to process sci-rna-seq3 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the position of anchor sequence and avoid searching twice; 3. In case the barcode is 19bp, `A` is added as the last nucleotide to make the cell barcodes length 20 bp for all barcodes. It was tested on data from the [Nature paper](https://www.nature.com/articles/s41586-019-0969-x). Correlation b/w the counts from the GEO submission [GSE119945](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE119945) and sum of spliced, unspliced reads with and without ambiguous counts using `usa` mode in alevin-fry gave reasonable looking correlations. ; Results for one of the fastq files:; ![image](https://user-images.githubusercontent.com/12998572/128923136-eefa8738-f87e-4f67-bba6-5cc1648ce194.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.4594 0.7805 0.8295 0.8253 0.8736 0.9943 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/695:858,test,tested,858,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/695,1,['test'],['tested']
Testability,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/99:600,test,test,600,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99,3,"['log', 'test']","['log', 'test']"
Testability,"After generating issue #48, I took the recommendation of switching to the standard EM algorithm, but I'm having further problems. However, I don't think the problem was with the Variational EM algorithm, but an issue with how the dataset is behaving. . This is with the same dataset as before (single end, rRNA-depleted, second-strand protocol, extreme depth of 170M+ reads). I have the options --useFSPD and --biasCorrect turned on with library type ""SF""; the full call is . ```; salmon quant -i $SALMON_DIR -l SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT \; --numBootstraps 100 --useFSPD --geneMap $GENES \; --biasCorrect -p 59; ```. I had attempted to use wasabi and run sleuth, but I got an error where the number of transcripts passing the initial filter was ""NA"". I then discovered that for four samples, many of the transcripts had ""-nan"" generated for the ""NumReads"" column, and this led to all of them having ""-nan"" for the TPM column. One sample had ~100 that failed, but the other three had a variable 106K-109K out of 176K total transcripts fail. No warning or error was thrown during the quantifying or EM optimization steps, so I don't know what happened. Interesting, I should note that the NaNs are only generated when both biasCorrect and useFSPD are turned on. NaNs are not generated when I use only one or neither option. (this was only tested with one sample though). If you have immediate suggestions, that would be great. Otherwise, I can work on generating a test dataset.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/50:1351,test,tested,1351,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50,2,['test'],"['test', 'tested']"
Testability,"As suggested by Nick Schurch, we should be writing non-error output (including simple logging and informative messages) to stdout rather than stderr.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/55:86,log,logging,86,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55,1,['log'],['logging']
Testability,"Ch38.103.gtf; where the two genome files (fa and gtf) were used with STAR. ; When running Salmon with this fasta file, I get the following output and error message:. Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.4.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { all_transcripts.fa }; # [ libType ] => { A }; # [ threads ] => { 10 }; # [ alignments ] => { /groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Sal; mon/4010760_5_mono_S58_L002_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L003_R1_001.fastq_AT; _QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L004_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.b; am }; # [ output ] => { 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam"", fasta = ""a; ll_transcripts.fa"" . . .done; [2021-03-05 18:20:24.846] [jointLog] [info] replaced 1216 non-ACGT nucleotides with random nucleotides; processed 0 reads in current round[2021-03-05 18:20:25.180] [jointLog] [info] Automatically detected most likely library type as ISR; processed ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/638:1373,Log,Logs,1373,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638,1,['Log'],['Logs']
Testability,"Compilation of salmon fails under MX Linux 17, and I suspect this is related to pthreads. ```; $ cat /home/bli/src/salmon/CMakeFiles/CMakeError.log ; Determining if the pthread_create exist failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dc0cd/fast""; /usr/bin/make -f CMakeFiles/cmTC_dc0cd.dir/build.make CMakeFiles/cmTC_dc0cd.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o; /usr/bin/cc -o CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o -c /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; Linking C executable cmTC_dc0cd; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dc0cd.dir/link.txt --verbose=1; /usr/bin/cc CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o -o cmTC_dc0cd -rdynamic ; CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o: In function `main':; CheckSymbolExists.c:(.text+0x1b): undefined reference to `pthread_create'; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dc0cd.dir/build.make:97: recipe for target 'cmTC_dc0cd' failed; make[1]: *** [cmTC_dc0cd] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dc0cd/fast' failed; make: *** [cmTC_dc0cd/fast] Error 2. File /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c:; /* */; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMak",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/207:144,log,log,144,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207,1,['log'],['log']
Testability,"Currently on develop branch, there is a build error. https://travis-ci.org/COMBINE-lab/salmon/builds/418288039; https://api.travis-ci.org/v3/job/415232259/log.txt. ```; cd /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0 && CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc toolset=gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/COMBINE-lab/salmon/external/install/include -L/home/travis/build/COMBINE-lab/salmon/external/install/lib"" link=static install. g++: error: unrecognized command line option ‘-std=c++14’; ```. I suspect the `g++` (Not `g++-N`) is wrongly used for to build boost.; As a result, the old version `g++` version 4.8 does not support `-std=c++14`. Maybe. https://www.boost.org/doc/libs/1_66_0/more/getting_started/unix-variants.html; https://stackoverflow.com/questions/5346454/building-boost-with-different-gcc-version. Maybe below kind of process is necessary if CC=gcc-N. ```; $ echo ""using gcc : 7 : /usr/bin/g++-7 ; "" >> tools/build/src/user-config.jam; $ ./bootstrap.sh ...; $ ./b2 --toolset=gcc-7 ...; ```. Here is my work to fix the issue.; Still working in progress.; But you can imagine how I am trying to fix it. I am not familiar with the `cmake`.; https://github.com/junaruga/salmon/commit/6cb73098155f0e776d4eb68bc639f3d761dd8963. If possible, I want you to fix this issue :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/275:155,log,log,155,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275,1,['log'],['log']
Testability,"Dear Rob,. Would you please explain why large number of reads have been discarded due to alignment?. This is bulk RNAseq on mouse tissue. I tried fastp and trim galore for trimming the reads but they hardly make any difference from untrimmed reads. I used STAR for alignment initially and I got an alignment rate of 90% . This is my Salmon code; this is to generate the index:; salmon index -t Mus_musculus.GRCm38.cdna.all.fa -i transcripts_index; this is to run salmon:; salmon quant -i transcripts_index -l IU -1 fastp_6BE_1.fq.gz -2 fastp_6BE_2.fq.gz -o sample6BE.salmon ; --validateMappings --softclip. This is the salmon log; ==================; Observed 42829220 total fragments (42829220 in most recent round). [2022-05-13 03:02:14.185] [jointLog] [info] Computed 384,282 rich equivalence classes for further processing; [2022-05-13 03:02:14.185] [jointLog] [info] Counted 27,069,942 total reads in the equivalence classes ; [2022-05-13 03:02:14.202] [jointLog] [info] Number of mappings discarded because of alignment score : 262,747,517; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 2,776,678; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 1,099,008; [2022-05-13 03:02:14.202] [jointLog] [info] Mapping rate = 63.2044%. [2022-05-13 03:02:14.202] [jointLog] [info] finished quantifyLibrary(); [2022-05-13 03:02:14.226] [jointLog] [info] Starting optimizer; [2022-05-13 03:02:14.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2022-05-13 03:02:14.325] [jointLog] [info] iteration = 0 | max rel diff. = 10590.7; [2022-05-13 03:02:15.594] [jointLog] [info] iteration = 100 | max rel diff. = 16.0264; [2022-05-13 03:02:16.882] [jointLog] [info] iteration = 200 | max rel diff. = 7.7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/775:626,log,log,626,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/775,1,['log'],['log']
Testability,"Dear Salmon team,. I am trying to quantify allele specific expression using salmon, so I would like to use the unique counts to estimate confidence itervals of the allele unbalance. However, I get no unique counts in the ambig_info.tsv file, disabling the validateMappings option fixed it. I'm using Salmon v 12 and I do expect unique counts, since I have some reads aligning to variants, as determined by featureCounts on the output sam by this same salmon run. . Is this the expected behavior when one enables validateMappings? ; Can I just go without validating them? I noticed the results are very close when disabling this option. Salmon was run as follows using a default k=31 quasi index.; salmon quant --writeMappings=Z --no-version-check -p10 (--validateMappings) --seqBias --posBias -i X -l IU -1 P.fq.gz -2 Qq.fq.gz -o Test",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/347:830,Test,Test,830,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/347,1,['Test'],['Test']
Testability,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/562:739,test,tested,739,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562,1,['test'],['tested']
Testability,"Dear all,. I am trying to analyze direct nanopore RNA sequencing data with salmon.; Now I seem to have problems with getting the command line properly:. I use:; salmon quant -i salmon_index -l r dmso_sham_4.fastq --validateMappings -o transcripts_quant. and get the following; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.10.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { salmon_index }; ### [ libType ] => { r }; ### [ ] => { dmso_sham_4.fastq }; ### [ validateMappings ] => { }; ### [ output ] => { transcripts_quant }; Logs will be written to transcripts_quant/logs; [2024-05-29 11:13:30.128] [jointLog] [info] setting maxHashResizeThreads to 24; Exception : [unknown library format string : R]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2024-05-29 11:13:30.128] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-29 11:13:30.128] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-29 11:13:30.128] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-29 11:13:30.128] [jointLog] [info] parsing read library format. So, as far I can see, being a bloody beginner, the error: Exception : [unknown library format string : R] somehow suggests that the small letter r in my command line is interpreted as a capital letter???; Or is there anything else wrong with my command?. Help would be appreciated. Thanks and best,; Matthias",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/933:583,Log,Logs,583,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/933,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"Dear all,. I would say that salmon is so fast to report the TPM and read counts for each transcript or gene, and I always use salmon+tximport+edgeR to detect the differentially expressed genes. Because the edgeR can output the normalized read counts and tximport can output TPM for each gene based on the results generated by salmon, I asked the difference between TPM and log2(CPM). From following correlation plot, I found that the samples are clustered by different quantifications, TPM and CPM, but not by samples. Because my RNA-seq experiment contains 7 biological replicates in each of two conditions, I decide to identify differentially expressed genes by using Wilcoxon rank-sum test based on each gene’s TPM or CPM. Also, I can also retain the overlapped differentially expressed genes between edgeR and Wilcoxon rank-sum test. I would like to hear your suggestion. ```; y <- DGEList(counts=data, group=group, genes=genelength) # the genelength is generated by salmon+tximport for each sample ; keep <- filterByExpr(y); y <- y[keep,,keep.lib.sizes=FALSE]; y <- calcNormFactors(y); logcpm <- cpm(y, log=TRUE, prior.count=1); ```; [tpm_cpm_corr-spearman.pdf](https://github.com/COMBINE-lab/salmon/files/10067714/tpm_cpm_corr-spearman.pdf). Thank you in advance. Best regards,; Zheng zhuqing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/812:688,test,test,688,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/812,4,"['log', 'test']","['log', 'logcpm', 'test']"
Testability,"Dear salmon authors,. While I was using **salmon (v0.11.0, downloaded executable, on a Ubuntu Linux** server) to process a **single-end RNA-seq library**, it reported the following error message:. ""**[ERROR] Transcript IDs are not in sorted order; please report this bug on GitHub!**"" . Actually I found it reports this error message for over tens of millions of times through greping the log file. And the command line I applied to invoke salmon was like this:. ""**salmon quant -i mySalmonIndexFile(FMD based/transcriptome) -l A -r myLibrary.fastq -p 8**"". It looks like this is something about single-end reads processing, since I arbitrarily picked up another pair-end library, which works prefectly fine with command line ""-1 PE_library_1.fastq -2 PE_library_2.fastq"", however, when I deliberately provide only one end of the library with ""-r PE_library_1/2.fastq"", exactly the same error was recurred immediately. Curiously, salmon could still accomplish the whole procedure and generate the results file with the aformentioned error reported. But I' m worried about its reliability in this situation. I' m wondering if you have any clues about this issue. With many thanks ahead!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/265:389,log,log,389,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265,1,['log'],['log']
Testability,"Dear salmon project. I have a proposal. Right now, the Travis CI test has 1 case for gcc-7.; I thought if we could add and remove test cases easily such as latest version gcc-8, minimal support version gcc-5, clang, and Mac OSX, we would be happy to contribute the source code. Look at the RNA Sequence tool: Trinity's case. [1][2]; The structure of the `.travis.yml` is to add the test cases easily. It has gcc-N and Mac OSX case.; And I prepared it for this salmon project.; I would like to send pull-request soon after now. [1] https://travis-ci.org/trinityrnaseq/trinityrnaseq; [2] https://github.com/trinityrnaseq/trinityrnaseq/blob/master/.travis.yml",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/272:65,test,test,65,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/272,3,['test'],['test']
Testability,"Dear salmon support team,. I firstly assembled MAGs from my metagenome data, then predicted the ORF gene operons using the prodigal software to generate the corresponding prodigal predicted MAG *faa files. Now, I am using each MAG *fna fasta file to map on their corresponding prodigal predicted *faa protein sequences. **But, the TPM values in my quantification files - quant.sf are all as 0.**. So, could you give me some suggestions on this condition?. **Salmon command lines**; #index each MAG faa file; for f in ${quant_sf_dir}*faa; do ; fname=${f##*/}; fbase=${f##*.} ; index_dir=${f%.faa}; #mkdir -p ${index_dir}; #echo ${index_dir}; /services/tools/salmon/1.5.2/bin/salmon index -t ${f} -i ${index_dir}; done. #quantify each MAG fna using each corresponding MAG indexed faa file; for i in ${MAG_PATH}*.fasta; do; iname=${i##*/}; i_dir=${iname%.fasta}; index_dir=${quant_sf_dir}${i_dir}; /services/tools/salmon/1.5.2/bin/salmon quant -i ${index_dir} -l A \; -r ${i} \; **--minAssignedFrags 1 \**; -p 20 -o ${index_dir}_salmon_count > ${index_dir}.salmon.log 2>&1;; done. Best,. Bing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/792:1061,log,log,1061,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/792,1,['log'],['log']
Testability,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/966:1034,test,test,1034,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966,1,['test'],['test']
Testability,"E info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-060/job_scripts/9987283: line 31: 1629 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:29350,Log,Logs,29350,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"EASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:2878,test,tests,2878,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['test'],['tests']
Testability,Exception : [rapidjson internal assertion failure: IsObject()],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/518:32,assert,assertion,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518,1,['assert'],['assertion']
Testability,"First time trying to use SALMON 1.5.2 (not bioconda) index with decoy.txt on Arabidopsis thaliana. I'm using AtRTD3 Transcriptome ""atRTD3_07082020.fasta"" (https://ics.hutton.ac.uk/atRTD/RTD3/ - username atrtd; password atrtd3-06092021) and the genome ""GWHBDNP00000000.1"" from https://ngdc.cncb.ac.cn/gwh/Assembly/21820/show. I followed the steps from (https://gist.github.com/k3yavi/a486647c35158a8296cec543ed9b526f) using this two files as follow:; ```; grep ""^>"" <(zcat GWHBDNP00000000.1.genome.fasta.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i -e 's/>//g' decoys.txt; cat atRTD3_07082020.fasta GWHBDNP00000000.1.genome.fasta.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode; ```. The index generation failed, creating a folder with only two files ""pre_indexing.log"" and ""ref_indexing.log""([pre_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515704/pre_indexing.log) and [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515701/ref_indexing.log)) . I recieved this error from the terminal:; ![Screenshot from 2021-11-10 17-24-24](https://user-images.githubusercontent.com/71443183/141187955-4601923f-001f-424a-969a-8ad346f2cf36.png). - OS: Ubuntu Linux; - Version 21.10. Thanks for this great software!!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/720:812,log,log,812,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/720,6,['log'],['log']
Testability,"Fixes Dockerfile to be FROM ubuntu:16.04, fixes a checksum in CMakeLists.txt, and makes build_test.sh executable. I tested this by changing the Dockerfile to copy the code into the image rather than pulling the code directly from github so that I could test the changes I made. I then built the image and ran:; ```; $ docker run combinelab/salmon:0.8.2 salmon --version; version : 0.8.2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/158:116,test,tested,116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/158,2,['test'],"['test', 'tested']"
Testability,"Greetings,. When trying to debug test failure, I ended up with an incomplete error messages which turned out to stem from a typo in the variable name, so I took the liberty to make the whole message a bit more verbose to help with the present and future debugging. I thought you might be interested.; Have a nice day, :); Étienne.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/810:33,test,test,33,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810,1,['test'],['test']
Testability,"Greetings. Under Centos 6.9, using cmake-3.13.2, gcc 7.3 and 1.68.0, the salmon-1.30 build fails at the make step.; The command make -j8 fails with:. ```; [100%] Linking CXX executable salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd32): warning: the use of `tempnam' is dangerous, better use `mkstemp'; ../external/pufferfish/src/libpuffer.a(PufferfishIndexer.cpp.o): In function `std::shared_ptr<spdlog::logger> spdlog::details::registry_t<std::mutex>::create<__gnu_cxx::__normal_iterat; or<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > >(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&)':; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x73): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::al; locator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEER",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/570:506,log,logger,506,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/570,1,['log'],['logger']
Testability,"Hello @rob-p !. Thanks for developing and maintaining salmon!. When running salmon in [bcbio](https://github.com/bcbio/bcbio-nextgen/) ; we are observing a slight difference in total counts when using automatic strandedness (-l A) and (-l ISF). Everything else is the same: data, STAR versions, STAR alignments (we are using STAR alignment quantification mode). The difference (sum over NumReads column in quant.sf) is 400 counts / 30mln:; - -l A: 29,620,300; - -l ISF: 29,619,900; It affects 628 genes out of 58,735. The maximum difference is 311 counts for a gene. STAR alignment log is the same:; ```; Mapping speed, Million of reads per hour | 157.61 ; Number of input reads | 76133470; Average input read length | 271; UNIQUE READS:; Uniquely mapped reads number | 62201102; Uniquely mapped reads % | 81.70%; Average mapped length | 271.68; Number of splices: Total | 29864202; Number of splices: Annotated (sjdb) | 29762114; Number of splices: GT/AG | 29430057; Number of splices: GC/AG | 286461; Number of splices: AT/AC | 27717; Number of splices: Non-canonical | 119967; Mismatch rate per base, % | 0.34%; Deletion rate per base | 0.03%; Deletion average length | 1.95; Insertion rate per base | 0.02%; Insertion average length | 1.57; MULTI-MAPPING READS:; Number of reads mapped to multiple loci | 5982273; % of reads mapped to multiple loci | 7.86%; Number of reads mapped to too many loci | 138709; % of reads mapped to too many loci | 0.18%; UNMAPPED READS:; % of reads unmapped: too many mismatches | 0.00%; % of reads unmapped: too short | 9.42%; % of reads unmapped: other | 0.63%; CHIMERIC READS:; Number of chimeric reads | 482178; % of chimeric reads | 0.63%; ```. salmon is 1.3.0 in both cases, the command is the same but the libtype:; ```bash; salmon \; quant \; -l ISF \; -p 16 \; -t /path/to/transcriptome/hg38.fa \; -o /path/to/sample; -a /path/to/sample.transcriptome.bam; --numBootstraps 30; ```. salmon logs:; `-l A`; ```; Completed first pass through the alignment file.;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/669:582,log,log,582,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669,1,['log'],['log']
Testability,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/331:641,log,log,641,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331,2,['log'],['log']
Testability,"Hello everyone! This is my first time analyzing RNAseq data and I am very much learning as I go while following a YouTube series (https://www.youtube.com/watch?v=butxOf_fxTY&t=217s&ab_channel=SimonCockell). Please excuse if I use wrong terminology in this post, I am very new to all of this and sometimes don't know what the right words are to describe what I am doing or trying to do (lol)!. With the fastq files of reads generated from my RNAseq experiment, I first ran FastQC. The quality of my data seemed to be fine as the per base sequence quality scores were 32+ and most of the other tests passed as well. Next, I built my index for Salmon using the fasta file from Gencode for the human transcriptome. Afterwards, I ran Salmon with the built index and had it automatically detect the library type. When the program was done aligning to the index, I saw that the file had a mapping rate of 40%. I guess what I'm asking is, is this an acceptable mapping rate or should I be concerned?? The reason I ask is because in the data I was working with while learning via the Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] Ther",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/571:592,test,tests,592,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571,1,['test'],['tests']
Testability,"Hello salmon team and @k3yavi,; I would like to have an idea of the sequencing saturation in my samples (10x) based on the alevin UMI deduplication default algorithm (that is, the fraction of duplicated reads from unique transcripts that are sequenced at least 2 times). I use this as a quality metrics to evaluate if the sequencing depth is adequate and the amount of information I could be missing. Also, I would like to play with the different deduplication options in alevin and use it as a comparison point.; I have not been able to find informations in the logs that could help me to compute the seq sat, and I am not sure about the terms used in the output. Could you point me in the right direction?; Best wishes.; (salmon 0.11.1, python 3.6.5 with pip, centOS 7)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/267:563,log,logs,563,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/267,1,['log'],['logs']
Testability,"Hello to all,. I have a question about salmon and more precisely the alignment part.; I use salmon on BAM files of RNAseq data and the problem is that I don't really know what to use as <LIBTYPE>. I used -l A to get the automatic library but the ""meta_info.json"" it gives me:. ```; ""salmon_version"": ""1.4.0"",; ""samp_type"": ""none"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""MU""; ],. ```. ""MU"" but what puzzles me is that my datas are IlluminaTruSeq Stranded. ""MU"" is used for unstranded then it's a little weird.... I tested every libraries and MU gives me the better percentage with 60% of mapping, the other ISF, IU, ISR give less than 10-20% maximum. Is there a problem to use MU on stranded knowing that it is salmon who chose automatically ? Especially since this is what gives me the best results... Thanks for your . Kisekya",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/676:558,test,tested,558,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/676,1,['test'],['tested']
Testability,"Hello! Thank you for developing these amazing tools.; My laboratory is implementing scCUT&TAG-pro (like CITE-seq but for CUT&TAG rather than RNA-seq) using chromium v2 10X library prep. This means, that we have features (ADTs) with a library prep different than from CITE-seq. . I have seen in your documentation ([https://combine-lab.github.io/alevin-tutorial/2020/alevin-features/](https://combine-lab.github.io/alevin-tutorial/2020/alevin-features/)) that to map features using salmon alevin you need to use the flag `--citeseq` together with `--featureLength `and` --featureStart. ` Does this assume that the barcode is 16bp long and the UMI 12bp long? In my case, I have a cell barcode of 16 and a UMI of 10. . I have also seen that to specify the length I can specify the read geometry (`--bc-geometry 1[1-16] --umi-geometry 1[17-26] --read-geometry 2[1-15]`). However, if I try to use these flags, I would need to specify `--tgMap`, however, I cannot find anywhere in your documentation that specifies how to handle this flag when mapping features. Could you please help me with this?. Finally, I done a first run using the following command:; `salmon alevin -l ISR -iadt_index -1 1.fastq.gz -2 2.fastq.gz -p 20 --citeseq --featureStart 0 --featureLength 15`; And in the log file i got the following warning:; **[2023-09-22 17:09:36.774] [jointLog] [warning] Found 41405334 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large** This number means that I am losing 22% of my reads. I have checked and exactly this percentage of the UMI sequences in my reads start with an N, however I do not understand why. Do you have any idea why this could be? . Thank you!; Andrea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/875:1278,log,log,1278,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/875,1,['log'],['log']
Testability,"Hello!. We are currently using Salmon as part of a very large data processing system. We need to continuously test the end-to-end functionality of our system, which includes a Salmon execution. Unfortunately, this increases our build time from 5 minutes to an hour and a half. It'd be really, really excellent if we could have a way to _simulate_ a Salmon run to verify the correct installation of Salmon and the Salmon-compatible collection of our input data without actually having to do the full Salmon run. Is there any chance you'd consider adding a `--dry-run` argument to run Salmon without actually running the big crunch? Ideally this could also output some dummy results files, but it doesn't have to if you don't like that. Thoughts?. Related: https://github.com/data-refinery/data-refinery/issues/106",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/189:110,test,test,110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/189,1,['test'],['test']
Testability,"Hello, . while setting ressources for alevin test using: https://combine-lab.github.io/alevin-tutorial/2018/setting-up-resources/. generation of mapping file txp2gene.tsv using given instruction is broken:. ```; c6builder:salmon/1.3.0 > wget -q ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_31/gencode.v31.primary_assembly.annotation.gtf.gz; c6builder:salmon/1.3.0 > bioawk -c gff '$feature==""transcript"" {print $group}' <(gunzip -c gencode.v31.primary_assembly.annotation.gtf.gz) | awk -F ' ' '{print substr($4,2,length($4)-3) ""\t"" substr($2,2,length($2)-3)}' - > txp2gene.tsv; /mount/gensoft2/exe/bioawk/1.0/bin/bioawk: illegal field $(), name ""group""; input record number 7, file /proc/self/fd/14; source line number 1; ```. https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-496251814 point to bioawk modification that allows to generate `txp2gene.tsv`. please update docs !. regards. Eric",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/584:45,test,test,45,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/584,1,['test'],['test']
Testability,"Hello, I am using salmon for an RNAseq experiment but I m getting very low mapping rate (0.03%!) and a strong strand bias (0.96). It never happened before and I can not understand the cause. I have already used FastQC to check the quality and it is good. It happens also with all the other samples (N=6) the service sent to us for the same RNAseq experiment. At the moment I m afraid the service did a mistake or could this problem be related to the library type? . This is the command I ran:; ```; salmon quant -i /somewhere/in/the/server/index/salmon -l A -1 /somewhere/in/the/server/fastq/sample1_1.fq.gz -2 /somewhere/in/the/server/fastq/sample1_2.fq.gz -p 10 --seqBias --gcBias --validateMapping -o /somewhere/in/the/server/salmon; ```. lib_format_counts.json:; ```; {; ""read_files"": [; ""/somewhere/in/the/server/fastq/sample1_1.fq.gz"",; ""/somewhere/in/the/server/fastq/sample1_2.fq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 6520,; ""num_assigned_fragments"": 6520,; ""num_frags_with_concordant_consistent_mappings"": 2126,; ""num_frags_with_inconsistent_or_orphan_mappings"": 4704,; ""strand_mapping_bias"": 0.964722483537159,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 75,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 2051,; ""SF"": 1436,; ""SR"": 3268,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. few lines from salmon_quant.log:; ```; Only 6520 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. Mapping rate = 0.0301431%; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/679:1352,log,log,1352,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/679,1,['log'],['log']
Testability,"Hello, I'm trying to install Salmon on my CentOS 7 system, as suggested here:; https://salmon.readthedocs.io/en/latest/building.html#installation. I decided to get the cmake `-DFETCH_BOOST=TRUE` option, in spite of having installed Boost. ; I get this error (here is the full log):. `cmake -DFETCH_BOOST=TRUE`. > Salmon requires g++ 5.2 or greater. https://pastebin.com/UmVJw0Ae. This is particularly odd.; I have installed a recent GCC version and even rebuilt Boost after it... As you can see, if I type . > gcc --version; > g++ --version. By root and user, I always get... > gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/388:276,log,log,276,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388,1,['log'],['log']
Testability,"Hello,. Hoping you can help troubleshoot a salmon quant failure. We're running V0.9.1. BAM files are transcriptome aligned using OSA aligner. The program is calling out a malformed key:pair? The salmon_quant.log is blank. > ./bin/salmon quant -t transcripts.fa -l A -a A549_S1_001.bam -o A549_S1_quant &; [1] 10291; us1salxngst01> Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ; ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/222:208,log,log,208,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222,3,"['Log', 'log']","['Logs', 'log', 'logs']"
Testability,"Hello,. I am doing my best to get the pigx-rnaseq workflow to install locally. Sadly, pigx' test routines bail out with a complaint on a missing sa.bin file as part of the files that are created by `salmon index`. I had tried salmon 1.2 and salmon 1.3 - no sa.bin, also not in your source tree. I placed this as an issue [here](https://github.com/BIMSBbioinfo/pigx_rnaseq/issues/78) and besides grepping through your source tree did some reading also on https://salmon.readthedocs.io . Still, I have no indiation about a missing option or so or if that file was only created in an earlier version. Did I miss this somewhere? Otherwise please kindly consider to explain as part of your documentation what files are to be expected in the index folder. Many thanks and regards,; Steffen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/553:92,test,test,92,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/553,1,['test'],['test']
Testability,"Hello,. I am having a problem with an inconsistent segmentation fault: 11. Please see below. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I've only worked in salmon mode. **Describe the bug**; Following the tutorial procedure exactly, I'm experiencing seemingly random segmentation fault: 11 warnings on some alignments but not others. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. Salmon was installed yesterday through the getting started tutorial using the conda install method. The sample data downloaded fine using the provided scripts, and the index creation seemed normal. When I went to run the program (with the options given in the tutorial), 10 of the 16 alignments failed with a segmentation fault: 11 warning. Attached is a screen shot of the warning on one of the failed alignments. the quant.sf files of the successful alignments seem normal, and the files do not exist in the faulted samples. . To test repeatability, I deleted all of the quant files, and ran the program again. Again, most samples failed, and the samples that did not we different from the first run. **Expected behavior**; I expected all of the tutorial samples to produce quant.sf files successfully. **Desktop (please complete the following information):**; - OSX 10.13.3. Thank you,; Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/295:1036,test,test,1036,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295,1,['test'],['test']
Testability,"Hello,. I am using the recent downloaded executable for v1.1.0 and am using salmon (bulk-mode). Noticed one potential bug and have some general questions regarding bootstraps. 1. The potential bug I noticed was when I use `--numGibbsSamples` the logs/salmon_quant.log file is always blank. When I remove this flag and re-run the program the log file is correctly printed out. 2. Regarding Bootstraps:. I've been working with parameters to min/max my predicted estimates to quantified cDNA results that we have. Through this process I was not performing bootstraps and was just using the TPM results that were located within the `quants.sf` file and have been getting some good results, with R-squared values of ~0.98 for actual v. predicted plots. As a note, even after running hundreds of runs with the same parameters, the TPM values in the `quants.sf` file never really fluctuated that much between runs and were generally nearly identical. . However, I thought it would be best to bootstrap `--numBootstraps` each Salmon run and average the bootstraps to get more accurate results. After doing 1,000 bootstraps per sample I noticed that the TPM values I calculated from numbers of mapped reads in the `bootstraps.gz` fluctuated a lot more and overall brought my R-squared values down to ~0.87. (I used your ConvertBootstrapsToTSV.py script to get the read counts from the bootstrap file and then calculated the TPMs using the effective lengths from the `quants.sf` file. As looking through previous issues (#246) I was under the assumption that the bootstrap file only contained new mapped read estimates and the effective lengths should be the same for all bootstrap runs.) . My question is why do the TPM values in the `quants.sf` file not fluctuate as much (even after 100+ runs using the same parameters), while calculated TPM values from bootstraps of the same run are showing greater variance?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/466:246,log,logs,246,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/466,3,['log'],"['log', 'logs']"
Testability,"Hello,. I have a 10x scRNA-seq dataset I would like to run Alevin on, with bootstrapping. I am working on a cluster and submitting my script (I'll paste it below) with a Slurm scheduler. My issue is that the job runs for a couple of seconds, then gives me this massive “core” output - that is encrypted someway and I can’t read - and then an empty log and an empty alevin.log, so I don’t even have anything to use for troubleshooting. ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al; total 47106; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 4 amonaco_m hpc-ag-zinzen 4096 Mar 2 11:47 ..; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 alevin; -rw------- 1 amonaco_m hpc-ag-zinzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/636:348,log,log,348,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636,3,['log'],"['log', 'logs']"
Testability,"Hello,. I tried creating a salmon index for bos taurus but was not successful. I created the decoy file using:. grep ""^>"" <(gunzip -c Bos_taurus.ARS-UCD1.2.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. When i try to index using ; salmon index -t bos_taurus_gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode ; OR; salmon index -t Bos_taurus.ARS-UCD1.2.cdna.all.fa.gz -i bos_taurus_107_index --decoys decoys.txt -k 31. I get an error. The last two lines of the log file are. [puff::index::jointLog] [critical] The decoy file contained the names of 2211 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1. What is happening and how can i solve this issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/788:511,log,log,511,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/788,1,['log'],['log']
Testability,"Hello,. My lab is in the process of testing out Salmon and potentially switching to it from traditional aligners. With a traditional aligner, we use picard's MarkDuplicates to remove PCR duplicates. Is there a way to remove PCR duplicates with Salmon? I tried using --writeMappings to generate a BAM and feed that into picard, but I just get a SAM validation error: ""Not primary alignment flag should not be set for unmapped read."". Best,; Brian",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/136:36,test,testing,36,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136,1,['test'],['testing']
Testability,"Hello,. This is the first time I am using Salmon and tried following up all steps but got 0 fragments mapped.. . 1) copied unzip Salmon-0.8.2_linux_x86_64 into folder in server; 2) exported path: export PATH=$PATH:/.../.../Salmon-0.8.2_linux_x86_64/bin/; 3) built index: salmon index -t salmon.index.human.052617.tar -i human_index; 4) now I want to preform quantification on fastq files (only one end of paired end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/167:530,Log,Logs,530,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"Hello,; I'm trying to compile salmon into arm64 linux system, but I'm getting the error bellow:; ```; ...; Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /usr/lib/aarch64-linux-gnu/libtbbmalloc_proxy.so;/usr/lib/aarch64-linux-gnu/libtbbmalloc.so;/usr/lib/aarch64-linux-gnu/libtbb.so;/usr/lib/aarch64-linux-gnu/libtbb.so; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon-0.14.2/build; [ 34%] Completed 'libtbb'; [ 39%] Built target libtbb; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. ```. How to fix this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/433:413,log,log,413,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/433,1,['log'],['log']
Testability,"Hello,; salmon 0.11.1, on CentOS 7.; Tested with install from precompiled binaires, and from bioconda/conda 4.5.9. (1) salmon -h is fine, but salmon [command] -h takes lots of time, and ends up with; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. It could be related to any bad local proxy settings. Is there any way to skip the upgrade information lookup as a command-line option ?. (2) segmentation error with alevin; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /path/to/sample_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { /path/to/sample_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 14:31:41.793] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 14:31:41.810] [alevinLog] [info] Processing barcodes files (if Present) ; processed 109 Million barcodes; segmentation error (core dumped). No any other logs available, programs stopped. Best,; juugii.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/264:37,Test,Tested,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264,2,"['Test', 'log']","['Tested', 'logs']"
Testability,"Hello. I am analyzing Drop-Seq data with salmon alevin. I applied the tips given in this discussion (#506). ; However, to me the mapping rates (found in ""salmon_quant.log"") are rather low. On average, the mapping rate is only 23 % with a standard deviation of 9 % when running salmon alevin with default parameters. ; When setting ```--expectCells``` or ```--forceCells```, these numbers change to 23 % (sd: 5%) and 26 % (sd: 6%). Are these mapping rates what you expect for Drop-Seq data? It is my first time analyzing Drop-Seq data, so I have no reference. ; Is this low mapping rate problematic? . Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/738:167,log,log,167,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/738,1,['log'],['log']
Testability,Here's a gist of the logs:; https://gist.github.com/sjackman/8b0c2be77efeb9507ca3#file-02-make-L4938,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/46:21,log,logs,21,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46,1,['log'],['logs']
Testability,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/139:710,log,log,710,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139,2,['log'],['log']
Testability,"Hey, . First, thanks a lot for implementing Alevin for the analysis of scRNA-seq, it is super useful. I would like to open the file ```alevin/quants_tier_mat.gz``` but I am not being able to do it. . When I try to follow the parser instructions [here](https://github.com/k3yavi/vpolo/blob/242b519ea47eae1cce14bb3bafb736a1f3ad7d40/vpolo/alevin/parser.py) I am facing this error when importing sce:; ```; ImportError: cannot import name 'sce' from partially initialized module 'sce' (most likely due to a circular import) (/home/egonie/.local/lib/python3.8/site-packages/sce/__init__.py); ```. I have already imported```vpolo``` which I have installed with: ; ```; pip3 install vpolo; ```. Also I have tested the R library ```fishpond```with the function; ```; fishpond::readEDS(numOfGenes = num.genes, numOfOriginalCells = num.cells, countMatFilename = tier.file, tierImport = T); ```; Which outputs this message:; ```; Error in validObject(x) : ; invalid class ""dgCMatrix"" object: all row indices must be between 0 and nrow-1; ```. Any insight that helps in reading Alevin tiers file would be much appreciated. Thanks in advance and sorry for the inconveniences. Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/596:700,test,tested,700,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/596,1,['test'],['tested']
Testability,"Hey, I ran into couple of more typos in the --help documentation.; In Salmon Quant Reads mode, the option --writeUnmappedNames says the the file created is named unmapped.txt, while it is actually named unmapped_names.txt; In Salmon Quant Alignment mode, the option --sampleUnaligned says the un-aligned reads are also written to the file ""posSample.bam"", I suppose a 't' is missing there?; Also, when I ran Salmon Quant with Alignment mode, the output auxiliary directory was still named just 'aux' instead of 'aux_info' per the newest change log. ; Sorry if I'm bothering with these pesky details, I though it might help when clearing the documentation a bit.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/81:544,log,log,544,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/81,1,['log'],['log']
Testability,"Hi :). I was already successfully using Salmon before, but unfortunately a storage node of the computing cluster I am using crashed and now I am running into trouble re-installing it. . I downloaded ""salmon-master.zip"", unzipped it and changed into the salmon-master folder. Further, I ran the following command:. > cmake -DCMAKE_INSTALL_PREFIX=/scratch/hpc-prf-ptma2/ptma2001/salmon-master -DFETCH_BOOST=TRUE. The configuration starts, but finally runs into the following error:. > -- Configuring done; > CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; > Please set them or make sure they are set and tested correctly in the CMake files:; > CURL_LIBRARY; > linked by target ""salmon"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > linked by target ""unitTests"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly. Would you have an idea how I could circumnavigate that issue?. Thanks a lot in advance for your time and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/729:648,test,tested,648,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/729,1,['test'],['tested']
Testability,"Hi @rob-p ! I try to install Salmon on macOS M1 Max with hombrew (brewsci) ; but I guess the formula is the UNIX one on it. I got :. ```; Benjamin@macbook-pro ~ % brew install salmon ; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v1.3.0.tar.gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/787:515,Log,Logs,515,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787,2,"['Log', 'log']","['Logs', 'log']"
Testability,"Hi @rob-p . A question: Can salmon be made available for ARM based arch?. Context: [AWS has recently launched instances with ARM based processors](https://aws.amazon.com/ec2/instance-types/r6/#:~:text=Amazon%20EC2%20R6g%20instances%20are,real%20time%20big%20data%20analytics.) which claim to have better performance. I would like to test/use salmon workflows with ARM based instances. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/556:333,test,test,333,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/556,1,['test'],['test']
Testability,"Hi @rob-p . I have a dataset with about 30 samples or so, in some cases salmon quant (1.2.0) runs fine, with some samples I get the error below. I am using the same command (changing it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/512:982,Log,Logs,982,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"Hi All,. I downloaded the Salmon index as well as `tgMap` from refgenie for the mm10 genome using the following. ```; ## get index and tgmap from refgenie; wget -O mm10SalmonIndex.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/salmon_sa_index; gunzip mm10SalmonIndex.gz. wget -O mm10tgMap.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/tgMap; gunzip mm10tgMap.gz; ```. The index is surprisingly large, though, as compared to using `salmon index` on just the mm10 transcripts. In addition, when I try using it with `alevin`, it is returning the following error. ```; (base) Koens-MacBook-Pro:data koenvandenberge$ /Applications/salmon/bin/salmon alevin -l ISR \; > -1 SRR1853178_1.fq.gz \; > -2 SRR1853178_2.fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/722:951,Log,Logs,951,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"Hi Rob,. I took a shot at adding a CONDA_BUILD flag to make it work with conda builds rather than editing the CMakeLists.txt with sed in the build script. I tested it and it seems to work, but it could use a review by someone who has used cmake before. It might be that editing with sed is a cleaner solution, getting the flags in the right place made the CMakeLists.txt file a little ugly. Totally happy to do either solution.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/92:157,test,tested,157,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/92,1,['test'],['tested']
Testability,"Hi Rob,. I'm testing Salmon 0.6.0 in read-based mode and it seems awesome, fast and accurate. Moreover, it's very well documented, which I really appreciate. My question is about the library type specification. In the libFormatCounts.txt file, library type as well as consistent and inconsistent mappings are correctly reported. However, transcript TPM and NumReads in quant.sf file are the same regardless of the library type specified when playing with different library types combinations. I would expect Salmon to take only into account the consistent mappings for the quantification. I'm specifying the -l parameter before the -1 and -2 parameters. . I'm pretty sure that I'm missing something. I would really appreciate if you could shed light on this issue. Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/67:13,test,testing,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/67,1,['test'],['testing']
Testability,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/675:838,log,logs,838,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675,6,['log'],"['log', 'logs']"
Testability,"Hi all,. I just wanted to provide this space to start a discussion and get feedback about what people believe to be the most sensible _default_ settings for Salmon (in different modes). We're happy to discuss any suggestions, but can start with some specific questions. Here is the most basic. Right now, Salmon has an ""opt-in"" philosophy. That is, a default run starts with the most basic features, and users opt-in to anything that has non-trivial cost (e.g. gibbs sampling, bias correction, and even things that have close to trivial cost but may not always be useful like dumping the equivalence classes to disk). Perhaps some of these defaults should be re-considered, or perhaps this philosophy makes sense as long as the ""opt-in"" behavior is made clear? It's worth noting that one current benefit of this ""opt-in"" mentality is that defaults are more _consistent_ among data-types. For example, GC-bias modeling for single-end libraries is still a feature in testing (on the develop branch), and so could not reasonably be made default at the current time.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/109:965,test,testing,965,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/109,1,['test'],['testing']
Testability,"Hi all. I have been working with the raw fastq files from [this study](https://www.ncbi.nlm.nih.gov/Traces/study/?acc=PRJNA590042&o=acc_s%3Aa), and tried to map them using `Alevin`. following `fastq-dump` I generated the barcode fastq files using `umi-tools`, this is a 3' PE Chromium scRNASeq, so I used; ```; umi_tools extract \; --stdin=GSE140511/fastq_files/SRR10480618_1.fastq.gz \; --stdout GSE140511/fastq_files/SRR10480618_BC_1.fastq.gz \; --read2-in GSE140511/fastq_files/SRR10480618_2.fastq.gz \; --read2-out GSE140511/fastq_files/SRR10480618_BC_2.fastq.gz \; --bc-pattern=CCCCCCCCCCCCCCCCNNNNNNNNNN \; --log=processed_SRR10480618.log; ```. following this step I then ran it on Alevin with ; ```; salmon alevin \; -l ISR \; -1 GSE140511/fastq_files/SRR10480618_BC_1.fastq.gz GSE140511/fastq_files/SRR10480618_BC_2.fastq.gz \; -2 GSE140511/fastq_files/SRR10480618_1.fastq.gz GSE140511/fastq_files/SRR10480618_2.fastq.gz \; --chromium \; -i /data/shared/seb_temp/Mm_index \; -p 32 \; -o /home/seb/shared/seb_temp/GSE140511/salmon_alevin_output/SRR10480618 \; --tgMap /home/seb/shared/seb_temp/txp2gene_SB.tsv; ```. my `txp2gene` file looks like this; ```; ENSMUST00000178537.2 ENSMUSG00000095668.2; ENSMUST00000178862.2 ENSMUSG00000094569.2; ENSMUST00000196221.2 ENSMUSG00000096749.3; ENSMUST00000179664.2 ENSMUSG00000096749.3; ENSMUST00000177564.2 ENSMUSG00000096176.2; ENSMUST00000179520.2 ENSMUSG00000094028.2; ENSMUST00000179883.2 ENSMUSG00000094552.2; ENSMUST00000195858.2 ENSMUSG00000096420.3; ENSMUST00000179932.2 ENSMUSG00000096420.3; ENSMUST00000180001.2 ENSMUSG00000095656.2; ```; and I generated it using the gtf file created by indexing the genome. however, when `salmon alevin` finishes its run, I get a mapping rate of 3% or less, and no errors are generated. I then tried to pass the barcodes that are published in GEO for this sample as `whitelist` adding the following argument; `--whitelist GSM4173504_WT_1_barcodes.tsv`; but here the mapping rate goes down to 0%!!. I am not",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/763:615,log,log,615,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/763,2,['log'],['log']
Testability,"Hi everyone,. I am using the salmon to calculate bins' abundance in metagenomic data. When I used Salmon map the reads to the bins, I only got ~20% mapping rate. And I have mapped the reads back to the bins using bowtie2, I got ~80% mapping rate; Besides, I also used the PE reads as two SE reads and input them into Salmon separately`salmon -i index -r read1`; Both reads could get ~80% mapping rate. I have tested many parameters that may affect the mapping rate, but it still can not be improved. If anyone could pull me out, I would appreciate it. . I index the bins using the default kmer(31), and the length of reads is PE150. And the following is the command I use:; `salmon quant -i assembly_index/ -l A -1 9998_1.fastq.gz -2 9998_2.fastq.gz -p 100 -o 9998.quant --meta`. The log file:; ```{shell}; $cat lib_format_counts.json ; {; ""read_files"": [; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_1.fastq.gz"",; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_2.fastq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:409,test,tested,409,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,2,"['log', 'test']","['log', 'tested']"
Testability,"Hi folks,. I'm trying to run DebianSqueeze Salmon v0.4.2 with some issue in the 'quant' step. Here is the skinny:; - ERCC + latest human ensembl transcriptome; - Index builds fine -- no apparent issues; - Quant step fails with the following output:. ``` bash; LD_LIBRARY_PATH=~/software/SalmonBeta-0.4.2_DebianSqueeze/lib; ~/software/SalmonBeta-0.4.2_DebianSqueeze/bin/salmon quant -i index/hs_ens_ercc.sidx --libType IU --output output/salmon -1 reads_1.fastq -2 reads_2.fastq; Version Info: This is the most recent version of Salmon.; # salmon (smem-based) v0.4.2; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { index/hs_ens_ercc.sidx }; # [ libType ] => { IU }; # [ output ] => { output/salmon }; # [ mates1 ] => { reads_1.fastq }; # [ mates2 ] => { reads_2.fastq }; Logs will be written to output/salmon/logs; there is 1 lib; [2015-08-23 21:58:57.438] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading index/hs_ens_ercc.sidx/bwaidx.amb; ```. I've provided a reproducible and self-contained Snakefile that only depends on the binaries being dumped in `~/software` and the reads_*fastq below. Let me know if there is anything I can do to help. Thanks a bunch!. Harold. ---. ``` python; ercc_fa = 'index/ERCC.fa'; ens_fa = 'index/Homo_sapiens.GRCh38.cdna.all.fa'; ens_ercc_fa = 'index/hs_ens_ercc.fa'; ens_ercc_sidx = 'index/hs_ens_ercc.sidx'. SALMON_PRE = '~/software/SalmonBeta-0.4.2_DebianSqueeze'; SALMON = 'LD_LIBRARY_PATH={0}/lib; {0}/bin/salmon'.format(SALMON_PRE). rule all:; input:; ens_ercc_fa,; ens_ercc_sidx,; 'output/salmon/quant.sf'. rule download_ens:; output:; ens_fa; params:; dl = 'ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule download_ercc:; output:; ercc_fa; params:; dl = 'http://bio.math.berkeley.edu/kallisto/transcriptomes/ERCC.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule merge_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/12:789,Log,Logs,789,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/12,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"Hi there, . I've being using salmon for a while but have started noticing this sometimes in my outputs, both during indexing and quantification. What does it mean? Is it an issue? It will really bulk out the log. . Thanks,. Dan",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/632:208,log,log,208,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/632,1,['log'],['log']
Testability,"Hi!. I'm trying to tidy up some of the strandedness analysis in nf-core/rnaseq, and have gone down the rabbit hole a little bit, hoping you can shortcut things for me. . nf-core/rnaseq's test profile runs Salmon on subsampled FASTQ files and uses Salmon to infer the strandedness, by extracting the `library_types` from a meta_info.json. . In an example run (~50k reads) this is unstranded (`IU`), but I'm having trouble reconciling with what I see in the corresponding `lib_format_counts.json`:. ```; {; ""read_files"": ""[ WT_REP2.subsampled_R1.fastq.gz, WT_REP2.subsampled_R2.fastq.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 39909,; ""num_assigned_fragments"": 39909,; ""num_frags_with_concordant_consistent_mappings"": 41509,; ""num_frags_with_inconsistent_or_orphan_mappings"": 3363,; ""strand_mapping_bias"": 0.11922715555662628,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4949,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 36560,; ""SF"": 1754,; ""SR"": 1609,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Is it possible for me to do my own inference of `IU` from those numbers, or does it happen elsewhere? Is there a minimum number of reads/ mappings required to make this assessment, such that 'IU' is just a default? . I'm hoping to derive my own logic, so that we can harmonise it with the calculations we make from RSeQC's output, for example. I've been poking through [LibraryTypeDetector](https://github.com/COMBINE-lab/salmon/blob/master/include/LibraryTypeDetector.hpp) without much joy, if I replicate that logic in Python I get 'ISR', not 'IU'.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/938:187,test,test,187,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/938,3,"['log', 'test']","['logic', 'test']"
Testability,"Hi!; Thank you for making salmon. Great work!. my command line is ; salmon quant -t /hpc/grid/shared/ngsdb/fasta/gencode.v24.transcripts.no_annotation.fa -l ISR -a RC-140808-00004.tx.bam -p 8 -o salmon_aln --useVBOpt --incompatPrior 0. The end of log file looks like:. 1008 Completed first pass through the alignment file.; 1009 Total # of mapped reads : 53203073; 1010 # of uniquely mapped reads : 14377795; 1011 # ambiguously mapped reads : 38825278; 1012; 1013; 1014; 1015 [2016-08-19 14:45:45.648] [fileLog] [info] quantification processed 53203073 fragments so far; 1016; 1017 [2016-08-19 14:45:45.982] [jointLog] [info] Computed 292761 rich equivalence classes for further processing; 1018 [2016-08-19 14:45:45.982] [jointLog] [info] Counted 53203073 total reads in the equivalence classes; 1019 [2016-08-19 14:45:45.983] [jointLog] [info] starting optimizer; 1020 [2016-08-19 14:45:48.932] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate. I tried dropping the --useVBOpt and it only outputs ""nan"". I also tried --useVBOpt in quasi-mapping base mode.; salmon quant -i /hpc/grid/shared/ngsdb/annotation/gencode/salmon_0.6.1_v24/ -l ISR -1 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz -2 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz -p 8 -o salmon --useVBOpt --incompatPrior 0; That worked fine. More on the bam file:; it was generated by STAR with write alignments to transcriptome option. STAR --genomeDir /hpc/grid/shared/ngsdb/STAR/GRCh38_gencode24_100 --readFilesIn /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz --readFilesCommand zcat --runThreadN 8 --alignSJDBoverhangMin 1 --outFilterScoreMinOverLread 0.90 --outFilterMatchNminOverLread 0.90 --outFilterMis matchNoverLmax 0.05 --quantMode TranscriptomeSAM --alignEndsType EndToEnd --alignIntronMax 1000000 --o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/78:247,log,log,247,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/78,1,['log'],['log']
Testability,"Hi!; This is probably not a question for the github, but I wasn't sure where to post; (please redirect me, and I'll happily remove it). I had one small question related to the paper; https://www.biorxiv.org/content/10.1101/657874v1. When performing the benchmarking of all different approaches, the parameters used when testing STAR+Salmon are listed of course. It's mentioned that the parameters of STAR are meant to be kept the same as RSEM uses them in order to get the actual proper comparisons.; All the parameters do look the same, except for one; --sjdbScore; In your paper, this param is not being used, which means that the default value of 2 is active.; RSEM, however, sets this to 1. . I'm not sure if this will affect the results in any major way though, so I just wanted to check if there was maybe a reason behind leaving this value to 2 in the paper. The --sjdbScore value scores alignments with annotated junctions higher over unspliced alignments. ; I'm not even actually sure why RSEM lowers this to 1. ; I was trying to replicate some of your benchmarking, and I was just curious about this one if you have any info that can help out. And again, I probably don't need to mention it anymore, but awesome job with the Salmon! Thanks once more for the awesome software!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/490:253,benchmark,benchmarking,253,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/490,3,"['benchmark', 'test']","['benchmarking', 'testing']"
Testability,"Hi, . I am using **salmon (v0.13.1)** to quantity RNA-seq data from two biological replicates. After running some exploratory data analyses, I observed a large discrepancy between the two replicates regarding the gene-wise distribution of read counts. The scatterplot below shows the log-read counts from these two biological replicates:. ![salmon v0.13.1 - Scatterplot](https://user-images.githubusercontent.com/26856909/58559326-dcea7d80-81f0-11e9-851a-db28b96b981e.png). After looking at these results, I checked the salmon log output and saw that the number of uniquely mapped reads for the second replicate had several trailing zeros added to it:. <img width=""358"" alt=""salmon v0.13.1 - Output"" src=""https://user-images.githubusercontent.com/26856909/58560225-b1689280-81f2-11e9-9d69-513a93fa47c5.png"">. *I have reproduced this analysis with both versions of salmon v0.12.0 and v0.9.1 and got pretty much the same results*. I would not expect to see such a huge difference between these two biological replicates and the number of uniquely mapped reads being greater than the total number of reads seemed odd to me. I have used the same pipeline to process other RNA-seq data and never had any issues like this so far. Any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/368:284,log,log-read,284,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/368,2,['log'],"['log', 'log-read']"
Testability,"Hi, . I'm trying to quantify the expression of some samples derived from mouse. I'm using the latest version of Salmon with the E90 Ensemble reference cDNA with an index built using k=31 (and all default parameters). I map these samples using the following command:. $SALMON quant -i $INDEX -l IU -p 16 --numGibbsSamples 1000 --seqBias --gcBias --posBias --useVBOpt --biasSpeedSamp 5 -1 pair_1.fastq.gz -2 pair_2.fastq.gz -o $PREFIX. When I run this I get mapping rates ranging between 31 - 44 %. I have checked for contamination and this was negative. I have tried different k-mer sizes (reads are ~ 80 nt in length), and the results don't change much. I decided to benchmark this with STAR+RSEM and the same version of the mouse genome from Ensembl as follows:. $RSEM --seed 1786 --star --star-path $STAR --num-threads $CPU --star-gzipped-read-file --paired-end pair_1.fastq.gz pair_2.fastq.gz $INDEX $PREFIX. When I look at the mapping rates with samtools flagstats I get mapping rates between 88 - 94 %. . Do you have any ideas on why I am observing these differences? Am I doing something wrong? . Looking forward to hearing from you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/212:667,benchmark,benchmark,667,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/212,1,['benchmark'],['benchmark']
Testability,"Hi, . Running much of anything in command line is new to me. I ran the line below without success. . > ./bin/salmon quant -t transcripts.fa -l OSR -a myseq.bam -o salmon_quant. I keep getting the error below and am not sure why. . > [jointLog] [critical] Note: Alignment-free mapping (i.e. mapping without subsequent selective-alignment) has not yet been throughly tested under the pufferfish-based index and using the pufferfish-based mapping strategies. Thus, disabling of selective-alignment is not currently allowed. We may, potentially explore re-enabling this option in future versions of salmon. I am betting this is something really simple. I'd appreciate any help... Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/511:365,test,tested,365,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/511,1,['test'],['tested']
Testability,"Hi, . Thank you for helping me with my issue. I'm not sure if the mapping rate so low is reasonable in this case: the fastq files (R1 and R2) were generated reservely from the bam files. I tried both Hg38 and Hg19 for this dataset (only bam files available to me, which were aligned by Hg19 genome), and I got similarly low mapping rate. . The salmon log is like this:; ```; [2024-01-27 01:09:31.030] [jointLog] [info] setting maxHashResizeThreads to 20; [2024-01-27 01:09:31.030] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-01-27 01:09:31.030] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-01-27 01:09:31.030] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-01-27 01:09:31.030] [jointLog] [info] parsing read library format; [2024-01-27 01:09:31.030] [jointLog] [info] There is 1 library.; [2024-01-27 01:09:31.032] [jointLog] [info] Loading pufferfish index; [2024-01-27 01:09:31.033] [jointLog] [info] Loading dense pufferfish index.; [2024-01-27 01:09:33.435] [jointLog] [info] done; [2024-01-27 01:09:33.508] [jointLog] [info] Index contained 252,048 targets; [2024-01-27 01:09:36.263] [jointLog] [info] Number of decoys : 0; [2024-01-27 01:09:41.237] [jointLog] [info] Automatically detected most likely library type as IU. [2024-01-27 01:10:28.189] [fileLog] [info] ; At end of round 0; ==================; Observed 3600210 total fragments (3600210 in most recent round). [2024-01-27 01:10:28.188] [jointLog] [info] Computed 179,584 rich equivalence classes for further processing; [2024-01-27 01:10:28.188] [jointLog] [info] Counted 446,871 total reads in the equivalence classes ; [2024-01-27 01:10:28.202] [jointLog] [warning] 0.197488% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/908:351,log,log,351,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908,1,['log'],['log']
Testability,"Hi, ; I am new to bioinformatics and scRNAseq.; I am working on a scRNAseq dataset i downloaded from GEO. Downloading the SRA file with fastq-dump --split-files resulted in 3 reads, i.e R1, R2, and R3. I understand the R3 reads are the sample index reads. Do I need to use this R3 as input for alevin quantification, since alevin only accepts two read at a time, i.e R1, R2. Additionally, I used R1 and R2 for the alevin quantification using the code;; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 F379_R1.fastq -2 F379_R2.fastq -o alevin_combinedRun -p 16 --tgMap txp2gene_BM.tsv --chromiumV3 --dumpFeatures . This resulted in 233 cells indicated in the figure below with Mapping rate less than 6%.; <img width=""473"" alt=""Alevin"" src=""https://user-images.githubusercontent.com/38905650/151156881-da620d2e-3e9a-41fc-acce-ef2722788424.PNG"">; log file; 2022-01-26 11:52:30.149] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 11:52:30.149] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 11:52:30.149] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 11:52:30.149] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 11:52:30.149] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/742:871,log,log,871,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742,1,['log'],['log']
Testability,"Hi, ; I've been trying to run alevin for single cell data. I've been using test data and the salmon alevin command seems to work right until the end, and then the core is dumped just as counts are in the csv format. I've also tried running it without --dumpCsvCounts and this also results in a segmentation fault. . What I was running:; salmon alevin -l ISR -1 ./hgmm_100_S1_L002_001.fastq.1.gz -2 ./hgmm_100_S1_L002_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index -p 10 -o salmon.dir/hgmm_100_S1_L002_001 --tgMap transcript2geneMap.tsv --dumpCsvCounts. Final part of output:; Analyzed 287 cells (100% of all).; [2019-01-25 11:14:44.509] [alevinLog] [info] Total 46729.00 UMI after deduplicating.; [2019-01-25 11:14:44.509] [alevinLog] [warning] Skipped 63 barcodes due to No mapped read; [2019-01-25 11:14:44.529] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-25 11:14:44.561] [alevinLog] [info] Starting Import of the gene count matrix of size 224x19879.; [2019-01-25 11:14:44.576] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-25 11:14:45.067] [alevinLog] [info] Done Importing gene count matrix for dimension 224x19879; [2019-01-25 11:14:45.770] [alevinLog] [info] Starting dumping cell v gene counts in csv format; Segmentation fault (core dumped) . I am running version 0.12.0 of salmon, installed via bioconda. I have also allocated 30GB of memory for the job, so this isn't a memory issue.; I have seen other users having similar issues using salmon quant having installed salmon through conda and the suggestions have been to install from binaries. This is not an option as salmon needs to be run easily using a conda environment. ; Has any headway been made into fixing the bioconda build?. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337:75,test,test,75,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337,1,['test'],['test']
Testability,"Hi, ; the output from the log is shown below. So apparently, everything went well, except for one minor issue... but my gene counts and my transcript count files are empty??; How is that possible; Cheers; Ashok; ```; [2017-07-18 17:14:11.438] [jointLog] [info] parsing read library format; [2017-07-18 17:14:11.438] [jointLog] [info] There is 1 library.; [2017-07-18 17:14:11.485] [jointLog] [info] Loading Quasi index; [2017-07-18 17:14:11.485] [jointLog] [info] Loading 32-bit quasi index; [2017-07-18 17:14:21.207] [jointLog] [info] done; [2017-07-18 17:14:21.207] [jointLog] [info] Index contained 107368 targets; [2017-07-18 17:14:22.320] [jointLog] [info] Automatically detected most likely library type as SF; [2017-07-18 17:22:52.788] [jointLog] [info] Computed 280679 rich equivalence classes for further processing; [2017-07-18 17:22:52.788] [jointLog] [info] Counted 27517563 total reads in the equivalence classes; [2017-07-18 17:22:52.850] [jointLog] [info] Mapping rate = 37.9965%. [2017-07-18 17:22:52.850] [jointLog] [info] finished quantifyLibrary(); [2017-07-18 17:22:52.853] [jointLog] [info] Starting optimizer; [2017-07-18 17:22:52.789] [fileLog] [info]; At end of round 0; ==================; Observed 72421398 total fragments (72421398 in most recent round). [2017-07-18 17:22:52.981] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2017-07-18 17:22:52.990] [jointLog] [info] iteration = 0 | max rel diff. = 9.36177; [2017-07-18 17:22:53.935] [jointLog] [info] iteration = 100 | max rel diff. = 0.0782409; [2017-07-18 17:22:54.889] [jointLog] [info] iteration = 200 | max rel diff. = 0.0347085; [2017-07-18 17:22:55.784] [jointLog] [info] iteration = 300 | max rel diff. = 0.0249461; [2017-07-18 17:22:56.790] [jointLog] [info] iteration = 400 | max rel diff. = 0.0188653; [2017-07-18 17:22:57.752] [jointLog] [info] iteration = 500 | max rel diff. = 0.0157419; [2017-07-18 17:22:58.688] [jointLog] [info] iteration = 600 | max rel diff. = 0.0128394; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/143:26,log,log,26,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/143,1,['log'],['log']
Testability,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/518:1121,assert,assertion,1121,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518,1,['assert'],['assertion']
Testability,"Hi, I like salmon for RNA-Seq quantification. To better quantify my data, I have some questions.; I compared the number of reads in quant.sf file with the unique counts and ambiguous counts in ambig_info.tsv. Some final estimation are similar to the sum of unique+ambiguous, some closed to unique, and some closed to ambiguous. I want to know how did you estimate the final counts to combine the unique and ambiguous counts?; For the unstranded library, did you use the same algorithm to estimate the final counts as the stranded library? I test some sequences for unstranded library, the estimation for reverse complement sequence is same. Is there a better way to estimate the transcripts anti-overlapping with another one in unstranded library?. Thanks,; Jing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/492:541,test,test,541,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/492,1,['test'],['test']
Testability,"Hi, I'm trying to use Alevin on a 10X v2 chemistry dataset, and after the preprocessing stpe I get the following error:; ```; Analyzed 1137 cells (11% of all).; ERROR: cell doesn't have any read count; ```; I tried looking at the documentation and previous tickets, but didn't find anything mentioning this issue. Is there any suggestion on how to address it?. The full terminal output is below. Thanks. ```; salmon alevin -lISR -1 cDNA_Small_S1_L001_R1_001.fastq.gz -2 cDNA_Small_S1_L001_R2_001.fastq.gz --chromium -i index -p 20 -o alevin_output9 --tgMap txp2gene.tsv --dumpCsvCounts; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output9/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ mates1 ] => { cDNA_Small_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { cDNA_Small_S1_L001_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 20 }; ### [ output ] => { alevin_output9 }; ### [ tgMap ] => { txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-06-30 22:10:28.044] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-30 22:10:28.048] [alevinLog] [info] Processing barcodes files (if Present). processed 17 Million barcodes. [2018-06-30 22:10:47.141] [alevinLog] [info] Done barcode density calculation.; [2018-06-30 22:10:47.141] [alevinLog] [info] # Barcodes Used: 17712582 / 17712585.; [2018-06-30 22:10:52.008] [alevinLog] [info] Knee found left boundary at 9447; [2018-06-30 22:10:52.498] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:645,Log,Logs,645,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"Hi, I've been using salmon v1.0.0 to quantify bulk transcripts from fastqs using the genocde v32 reference. Ive used it successfully on several cohorts but on my most recent I received the following warning in my log file (I also attached the entire file):. [2021-05-10 20:51:46.936] [jointLog] [warning] NOTE: Read Lib [[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /gcloud-shared/sample/lib_format_counts.json for details. Here is also the lib_formats_count.json:; {; ""read_files"": ""[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 43142675,; ""num_assigned_fragments"": 43142675,; ""num_frags_with_concordant_consistent_mappings"": 36380775,; ""num_frags_with_inconsistent_or_orphan_mappings"": 7777480,; ""strand_mapping_bias"": 0.5172763911708863,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 18818916,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17561859,; ""SF"": 2219340,; ""SR"": 5558140,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Here is the salmon command I've been using:. salmon --no-version-check quant -i /gcloud-shared/reference -l A -1 ${FASTQR1} -2 ${FASTQR2} \; --validateMappings --seqBias --gcBias --posBias --threads $(nproc) -o /gcloud-shared/sample. The whole process still produces quants files, but having never received this warning with other sample cohorts I want to be sure it's not affecting the results. Any idea why I might be getting this? Am I using the wrong lib type?. Thanks!. [ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6479118/ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/659:213,log,log,213,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/659,3,['log'],['log']
Testability,"Hi, this is following on from our discussion in Bioconductor Slack (channel `#singlecell-queries`) from a few weeks ago. Thanks again for the update to propagate cellular barcode and UMI tags in the alevin generated BAM/SAM (with the `--writeMappings` flag). We have been testing this out, and have been able to access all this information by parsing through the SAM file. However in the end our plan to use this with [Vireo](https://vireosnp.readthedocs.io/en/latest/index.html) and [cellSNP](https://github.com/single-cell-genetics/cellSNP) for genetic demultiplexing of samples didn't really work out, mainly because `alevin` generates a transcriptomic BAM, and `cellSNP` expects a genomic BAM and VCF. I tried a few different options for getting this to work, including (i) attempting to convert to a genomic BAM using [sam-xlate](https://github.com/mozack/ubu/wiki) (which didn't seem to work because `sam-xlate` is designed to convert in the other direction), and (ii) converting the VCF to transcriptomic coordinates, as suggested [here](https://github.com/single-cell-genetics/cellSNP/issues/14) by the `Vireo`/`cellSNP` authors (the VCF conversion seemed to work, but `cellSNP` still didn't match it to the BAM properly). For now, I think we are going to go back to using `Cell Ranger` in our pipeline, since this did work with `Vireo`/`cellSNP`, although was of course much slower than `alevin` and has issues with multi-mapping reads. If you have any other ideas please let me know too. However I also wanted to suggest that if there is any interest on your end in developing some sort of conversion tool (transcriptomic BAM -> genomic BAM) for `alevin` outputs, then I think this would be super useful for people, especially if these genetic demultiplexing tools become more widely used. (We have been getting very good demultiplexing performance with `Cell Ranger` + `Vireo`/`cellSNP`, and are planning to release some of our code as a small `Snakemake` pipeline for others to use, so if ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/550:272,test,testing,272,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/550,1,['test'],['testing']
Testability,"Hi, who's concerning,; I was using alevin to run on a PBMC 10xv3 dataset.; Here is my script,; salmon alevin -lISR -1 $fastq1 -2 $fastq2 --chromiumV3 -i $work_p/salmon_index_human -p 12 -o output --tgMap $data_p/test12.tsv --keepCBFraction 1. I kept all CB to make sure I can use emptyDrops. Also, here this index is SAF index followed by your tutorial. Then I got the error message like:; [alevin.log](https://github.com/COMBINE-lab/salmon/files/7035475/alevin.log). Is there any suggestion on how to solve this?; Cheers,; Chloe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/698:398,log,log,398,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/698,2,['log'],['log']
Testability,"Hi,. I am running salom 0.6.0 on a Ubuntu server. here is my command as well as the STDOUT output:. ```; salmon quant -p 16 --biasCorrect --libType IU -i ~./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/65:691,Log,Logs,691,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"Hi,. I am running the latest version of Salmon 0.8.2 and I am getting the following error. I did remake the transcript index with the new version of salmon. I get no errors when i compile or run the ""make test"". . Logs will be written to salmon_output_A9039/logs; [2017-05-08 08:59:23.370] [jointLog] [info] parsing read library format; [2017-05-08 08:59:23.370] [jointLog] [info] There is 1 library.; [2017-05-08 08:59:23.395] [stderrLog] [error] Encountered exception [JSON Parsing failed - provided NVP (SeqHash) not found] when loading index.; [2017-05-08 08:59:23.395] [stderrLog] [error] The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version. Using boost 1.64, Clang 3.9, on a linux box. Any help will be appreciated. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/135:205,test,test,205,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135,3,"['Log', 'log', 'test']","['Logs', 'logs', 'test']"
Testability,"Hi,. I am testing Alevin, and would like to compare against Cell Ranger on my data set. While primary mapping statistics indicate more reads mapped, I would like to compare the results in the final analysis, in Seurat. Many steps rely on HGNC Gene symbols as opposed to Ensemble IDs. ### What is the best way to convert ensembl IDs to gene symbol in Alevin?. Alevin (aligned as in this [gist](https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001#file-alevin-default-ipynb), imported to R in this [tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/)) returns ensembl IDs in format like ""ENSG00000215910.7"". ```R; require(""fishpond""); require(""tximport""); ; files <- file.path(""[...]/alevin/quants_mat.gz""); file.exists(files); txi <- tximport(files, type=""alevin"");; rownames( txi$counts); ``` . I am currently converting these using biomart with suboptimal adaptations:. ```R; BiocManager::install(""biomaRt""); require('biomaRt'); mart <- useDataset(""hsapiens_gene_ensembl"", useMart(""ensembl"")); genes <- rownames(txi$counts); df$id <- NA; meta.genes <- getBM(attributes = c(""ensembl_gene_id"",""external_gene_name"", ""description""), ; values = genes, mart = mart ); ```; Manual adaptations:. 1. I trim IDs after dot (""ENSG00000215910.7"" → ""ENSG00000215910”); 2. I remove NA values (not all trimmed gene IDs are found in biomaRt); 3. I add up counts of genes (per ENS.ID) with the same gene symbol, e.g. “Y_RNA” or “HSPA14”. ```R; g.LookUp = meta.genes[,2]; names(g.LookUp) = meta.genes[,1]; ; # 1. Trim; ensembl_ID.simple =str_split_fixed(genes,pattern = '\\.', n=2)[,1]; ; genes.converted = g.LookUp[ensembl_ID.simple]; any.duplicated(genes.converted); ; # ...etc; ```. Is there a better way to convert IDs, possibly implemented in Alevin / Salmon?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/448:10,test,testing,10,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/448,1,['test'],['testing']
Testability,"Hi,. I am trying to use alevin and alevin-fry to process a mixing experiment with human and mouse cells and generate a plot comparing the amount of UMIs assigned to each species per cell. Since I am using the newer workflow with alevin-fry, I am generating a RAD file with salmon alevin then processing with alevin-fry. For the species-mixed data, I generated a concatenated reference with both mouse and human transcripts to do one alignment on the data. . Starting from ~210m raw reads, I get 139m aligned, and 59m of those are uniquely mapped according to salmon_quant.log. When running alevin-fry, I use the `--resolution trivial` flag to force quantification by uniquely mapped reads alone. However, this procedure does not seem to work, as over 90% of reads map to mouse even though the two species should have been mixed evenly. Do I need to approach this in a different way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/715:572,log,log,572,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/715,1,['log'],['log']
Testability,"Hi,. I did refactoring for `.travis.yml`.; This pull-request is for develop branch. * Aligned with 2 spaces indent.; * Removed tailing space.; * Removed old commended out lines on bottom area.; We can check past modification with `git log -p .travis.yml`.; So, I think we can remove the comment lines.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/292:235,log,log,235,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/292,1,['log'],['log']
Testability,"Hi,. I have been running salmon v1.4.0 on 324 samples. In 8 samples I did not get any quantification and the process ended with a warning like "".....salmon was only able to assign 0 fragments to transcripts in the index...."". The command line I used is as follow (I simplified the paths and file names):; salmon quant -p 20 -i Salmon_Index -l A --seqBias --gcBias --biasSpeedSamp -1 $FASTQ1.R1.fastq.gz -2 $FASTQ2.R2.fastq.gz -o $outDIR --validateMappings. These same 8 samples were processed with HISAT2 and the overall alignment rate was above 80%. I attached the log file for one of the 8 runs; [logFile.txt](https://github.com/COMBINE-lab/salmon/files/5846381/logFile.txt). Do you have any suggestions ? do you need more info ?. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/616:566,log,log,566,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/616,3,['log'],"['log', 'logFile']"
Testability,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/898:781,log,logs,781,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898,2,['log'],"['log', 'logs']"
Testability,"Hi,. I have run a RNAseq sample through Salmon with --l A option (library type); I was told regarding the in-house protocol to generate the library that ""The first read reads off the anti-sense strand, and the second reads off of the sense strand. From what I understand, the first read is reported as the sense strand, and the second read is reported as the anti-sense strand (as the reverse complement)"". i.e. similar to TruSeq (first read comes from anti-sense/reverse strand). That would translate into ISR according to http://salmon.readthedocs.io/en/latest/library_type.html. Yet from the Salmon quant log file = Automatically detected most likely library type as ISF.; If I run the same sample with -l ISF I get the warning:; Greater than 5% of the fragments disagreed with the provided library type; check the file: 2RD_1760_salmon_quant_ISF/lib_format_counts.json for details - ; which shows:; ""expected_format"": ""ISF"",; ""compatible_fragment_ratio"": 0.9281440552329109,; ""num_compatible_fragments"": 8223296,; ""num_assigned_fragments"": 8859935,; ""num_consistent_mappings"": 67110116,; ""num_inconsistent_mappings"": 13842824,; ""MSF"": 0,; ""OSF"": 120231,; ""ISF"": 67110116,; ""MSR"": 0,; ""OSR"": 12968,; ""ISR"": 11405988,; ""SF"": 1926077,; ""SR"": 353507,. I would be very grateful for a possible explanation. Thank you very much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/206:608,log,log,608,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/206,1,['log'],['log']
Testability,"Hi,. I have the problem that salmon quant exits with a segfault when more than one BAM file is provided. ; If the BAM files are provided one at a time, no error or segfault happens and salmon wickedly fast quantificates the transcripts. The first used BAM files where shuffled (with samtools bamshuf) as recommended in the docs. To exclude an error on my side I did:; - try unshuffled BAM files --> Segfault; - try older Salmon Version (7.2) --> Segfault; - build Salmon from source --> Segfault; - use different transcriptdata (see below) --> Segfault. The segfault happens after all reads (in all files) are processed:; `processed 48000000 reads in current roundSegmentation fault`. ### Example workflow:. Get the read data from [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?run=ERR1433122) for example with SRA Toolkit:; `vdb-dump -f fastq --gzip --output-file test.fastq.gz ERR1433122`. Then use STAR:. First build a genome index for the reference transcriptset from [here](https://ics.hutton.ac.uk/atRTD/) and the [TAIR10 genome](https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files); You probably have to rename the chromosomes either in the .gtf or .fas file, to have consistent names. `STAR --runThreadN 4 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles TAIR10_chr_all_edited.fas --sjdbGTFfile AtRTD2_19April2016.gtf --sjdbOverhang 100`. Then map:. `STAR --runThreadN 4 --genomeDir genome_index --readFilesCommand zcat --readFilesIn test.fastq.gz --sjdbOverhang 100 --sjdbGTFfile AtRTD2_19April2016.gtf --outFileNamePrefix mapping/ --quantMode TranscriptomeSAM`. and make a .fa file from the genome and the .gtf with:; `gffread -w gff_merged.fa -g TAIR10_chr_all_edited.fas AtRTD2_19April2016.gtf`. Now make a copy of the ""Aligned.toTranscriptome.out.bam"" (for the sake of simplicity) and try; `salmon quant -l A -a Aligned.toTranscriptome.out.bam Aligned.toTranscriptome.out_copy.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/145:875,test,test,875,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145,1,['test'],['test']
Testability,"Hi,. I recently used STAR and Salmon to quantify RNA expression from FASTQ files. When using Salmon, I was achieving good alignment rates of around 70%, but getting dismal STAR alignment rates of 1%-20% (both using GENCODE v38 references). Further inspection of my STAR log files shows most reads were being unmapped because they were too short. From STAR github issues I discovered that my FASTQ files were scrambled (confirmed with [validatefastq](https://github.com/biopet/validatefastq) tool), and the read headers were not properly sorted. This meant that the reads in the `R1` file did not necessarily correspond to the reads in the `R2` file (this was confirmed by BLASTing some of the reads and seeing they corresponded to different loci). . After discovering my FASTQs were scrambled, I was surprised that Salmon still had such high alignment rates yet STAR did not. I was wondering how exactly Salmon handles input FASTQs with mismatched reads. Is there some fix that Salmon applies to match reads with their corresponding sequence ID, thus explaining the high alignment rate? Are the results from Salmon on my bad input FASTQs complete gibberish and should be discarded, or are they somehow still valid? Is there any defined behavior that Salmon should follow when it encounters improperly sorted input FASTQs?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/777:270,log,log,270,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/777,1,['log'],['log']
Testability,"Hi,. I try to follow Alevin tutorial on 'How to Use alevin with Seurat' and have an issue with tximport(). I found this step is extremely **slow**. For **quants_mat.gz** file with **4.7M** in size, it took **12** minutes to finish. Is this common for alevin generated single cell data? . Thanks!; Lei. ## Test data: 10x 1k_PMBC_v2; ### Intel(R) Xeon(R) CPU E5-2698 v3 @ 2.30GHz; ## alevin.log; [2019-07-18 14:13:59.692] [alevinLog] [info] Loading Header; [2019-07-18 14:13:59.692] [alevinLog] [info] Loading Transcript Info; [2019-07-18 14:14:00.014] [alevinLog] [info] Found all transcripts to gene mappings; [2019-07-18 14:14:00.023] [alevinLog] [info] Processing barcodes files (if Present); [2019-07-18 14:15:51.124] [alevinLog] [info] Done barcode density calculation.; [2019-07-18 14:15:51.124] [alevinLog] [info] # Barcodes Used: 76866957 76921082.; [2019-07-18 14:15:51.553] [alevinLog] [info] Done importing white-list Barcodes; [2019-07-18 14:15:51.853] [alevinLog] [warning] Skipping 575996 Barcodes as no read was mapped; [2019-07-18 14:15:52.078] [alevinLog] [info] Total 161284 white-listed Barcodes; [2019-07-18 14:15:52.259] [alevinLog] [info] Total 5.95793% reads will be thrown away because of noisy Cellular barcodes.; [2019-07-18 14:15:58.709] [alevinLog] [info] Done populating Z matrix; [2019-07-18 14:15:58.741] [alevinLog] [info] Total 56814 CB got sequence corrected; [2019-07-18 14:15:58.750] [alevinLog] [info] Done indexing Barcodes; [2019-07-18 14:15:58.750] [alevinLog] [info] Total Unique barcodes found: 687531; [2019-07-18 14:15:58.750] [alevinLog] [info] Used Barcodes except Whitelist: 44516; [2019-07-18 14:15:58.973] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2019-07-18 14:15:58.973] [alevinLog] [info] parsing read library format; [2019-07-18 14:24:27.923] [alevinLog] [info] Starting optimizer; [2019-07-18 14:24:28.655] [alevinLog] [warning] 24 mitorna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.655] [al",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/404:305,Test,Test,305,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404,2,"['Test', 'log']","['Test', 'log']"
Testability,"Hi,. I'm having issues getting alevin to work on dropseq data after following the tutorial for setting it up. I am using the following command to run it:. salmon alevin -l ISR -1 SRR6054189.sra_1.fastq -2 SRR6054189.sra_2.fastq --dropseq -i ~/Documents/CordBlood/data/index_15 -p 10 -o ~/Documents/CordBlood/data/alevin_out --tgMap ~/Documents/CordBlood/data/txp2gene.tsv --dumpCsvCounts. and eventually get; ""Incorrect call for umi extract"". Here's the full output:. ```; salmon alevin -l ISR -1 SRR6054189.sra_1.fastq -2 SRR6054189.sra_2.fastq --dropseq -i ~/Documents/CordBlood/data/index_15 -p 4 -o ~/Documents/CordBlood/data/alevin4p_out_combined --tgMap ~/Documents/CordBlood/data/txp2gene.tsv --dumpCsvCounts; Version Info: This is the most recent version of Salmon.; Logs will be written to ~/Documents/CordBlood/data/alevin4p_out_combined/logs; ### salmon (single-cell-based) v0.11.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6054189.sra_1.fastq }; ### [ mates2 ] => { SRR6054189.sra_2.fastq }; ### [ dropseq ] => { }; ### [ index ] => {~/Documents/CordBlood/data/index_15 }; ### [ threads ] => { 4 }; ### [ output ] => {~/Documents/CordBlood/data/alevin4p_out_combined }; ### [ tgMap ] => {~/Documents/CordBlood/data/txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-07-26 11:15:08.510] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-26 11:15:08.524] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 471 Million barcodes. [2018-07-26 11:25:20.231] [alevinLog] [info] Done barcode density calculation.; [2018-07-26 11:25:20.231] [alevinLog] [info] # Barcodes Used: 470701906 / 471465434.; [2018-07-26 11:25:30.228] [alevinLog] [info] Knee found left boundary at 202 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Gauss Corrected Boundary at 22 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Learned InvCov: 1044.2 normfactor: 295.23",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/258:775,Log,Logs,775,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"Hi,. I'm running into an issue with quant and hope you could help. Get this error message saying my index/versionInfo.json does not seem to exist (screenshot attached). I have single end reads spread across 5 fastq files per sample. Just trying to run one sample as a test before looping it. . I have tried building an index both with Salmon v 0.8.1 using a conda install as well as salmon v0.9.1 installing directly the binary on a linux computing cluster. . I've attached a screenshot of the indexing process (it boots me out at the end but I cant tell from the outputs if it was cut short, last thing it notes is writing sequence data to the file). I've also attached a screenshot of the generated index folder contents. The index is the most recent Ensembl FASTA cDNA download for mouse. I tried indexing a transcripts FASTA file from Gencode as well and am running into the same issue, so dont think its the specific reference. The reference transcript files are 54 and 56mb respectively, so no issues downloading and transferring to our cluster. . Any thoughts are much appreciated! Thanks!. Paul. ![screen shot 2018-02-12 at 15 37 54](https://user-images.githubusercontent.com/23369975/36214991-d3b453ec-1178-11e8-8331-d641a334c47b.png); ![screen shot 2018-02-12 at 12 41 33](https://user-images.githubusercontent.com/23369975/36214993-d3bf729a-1178-11e8-9c78-38158e423b9b.png); ![screen shot 2018-02-12 at 15 33 53](https://user-images.githubusercontent.com/23369975/36214994-d3cb52cc-1178-11e8-9f74-6cfd554ccb0a.png); ![screen shot 2018-02-12 at 15 35 16](https://user-images.githubusercontent.com/23369975/36214995-d3d50376-1178-11e8-81c3-90de0a347763.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/197:268,test,test,268,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197,1,['test'],['test']
Testability,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:251,test,testData,251,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,6,"['Log', 'log', 'test']","['Logs', 'logs', 'testData']"
Testability,"Hi,. We (@emilyburke, @andrewejaffe and me) can successfully run salmon using 1 core in the SGE-managed cluster we have access to. The problem is that for some reason we have to request a lot of memory, thus reducing the number of jobs we can run simultaneously and increasing the overall time it takes to process datasets. . I see in https://github.com/COMBINE-lab/salmon/issues/97 that you suggest using `--perfectHash` and a newer `salmon` version, which we haven't tried and might end up being the solution. Here is the bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:729,log,logs,729,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,2,['log'],['logs']
Testability,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/250:66,test,test,66,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250,7,"['Test', 'log', 'test']","['Test', 'log', 'logs', 'test', 'tests']"
Testability,"Hi,; I am having trouble with salmon on linux, I downloaded salmon through bioconda and was following your ""GETTING STARTED"" tutorial, followed the code exactly and it all worked fine except I am not getting the quant.sf file for any of the samples. I also tried it on my own mRNA fastq files and the same thing happened. I am able to get all the other files like the log in its own directory. The log files are empty though so I was not able to get any information as to what is wrong. I am not getting any errors either so I don't really know where to start looking.; Any help you can give would be much appreciated.; Thank you,; Tj.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/239:368,log,log,368,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239,2,['log'],['log']
Testability,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/66:129,log,log,129,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66,3,"['Log', 'log']","['Logs', 'log', 'logs']"
Testability,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/252:1451,log,log,1451,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252,1,['log'],['log']
Testability,"Hi,; I get this error:. salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:414,Assert,Assertion,414,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,3,"['Assert', 'Log', 'log']","['Assertion', 'Logs', 'logs']"
Testability,"Hi,; I just installed salmon using conda. I tried to execute the sample test that comes on the main page: https://combine-lab.github.io/salmon/getting_started/. When I try to run the quantification code; #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 --validateMappings -o quants/${samp}_quant; done ; even though the files are there, in the data directory, the tool seems to not recognize the fastq files and pops the following error for every DRR0161xx_x.fastq.gz file:; ERROR: file [DRR016140_2.fastq.gz] does not appear to exist!. ]; salmon quant was invoked improperly. Is this some common error or is it a new bug?; Thanks in advance for any response/suggestion on how to proceed here",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/963:72,test,test,72,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963,1,['test'],['test']
Testability,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/112:1523,test,test,1523,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112,3,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/339:413,test,test,413,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339,1,['test'],['test']
Testability,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/420:443,test,test,443,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420,10,['test'],['test']
Testability,"Hi,; I've ran Alevin and generated an alevinQC report. The initial whitelist contains 5261 cells and the final whitelist contains 4340 cells. ; filtered_cb_frequency.txt contains 5261 cells and whitelist.txt contains 4240 cells.; AlevinQC states that ""Once the initial set of whitelisted cell barcodes is defined, Alevin goes through the remaining cell barcodes. If a cell barcode is similar enough to a whitelisted cell barcode, it will be corrected and the reads will be added to those of the whitelisted one.""; However my final counts matrix contains 5621 cells, the number from the initial whitelist. ; Shouldn't my final counts matrix contain 4340 cells after the correction has taken place?; I'm running:; ```; salmon alevin -l ISR -1 test.fastq.1.gz -2 test.fastq.2.gz --chromium -i geneset.dir/geneset_all.salmon.index -p 16 -o salmon.dir/test; --tgMap t2gmap.tsv --dumpFeatures --dumpUmiGraph; ```. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/428:741,test,test,741,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/428,3,['test'],['test']
Testability,"Hi,; i met a problem when installing the index for salmon. The feedback suggests that ""server did not respond before timeout"". This problem is shown in the following picture.; I've already given it enough space for running, while it seems that it was stuck in the first step. And the index file only contains ""pre_indexing.log ref_indexing.log""; So could you please help me to solve this problem?; Thanks; ![image](https://user-images.githubusercontent.com/100278952/155299114-10a7e3b7-bf08-49aa-824d-48dcbaa1fd71.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/755:323,log,log,323,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/755,2,['log'],['log']
Testability,"Hi,; it seems that --writeUnmappedNames option doesn't work for `salmon alevin` (both R1 and R2 reads were used), while `salmon quant` with the same dataset (only R2 reads were used since R1 contains barcodes) reports unmapped read names correctly. The `alevin` reports all the reads in the dataset as unmapped, while `quant` gets only the fraction of them (the size of that fraction the same as reported in log). `salmon version: 1.1.0`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/501:408,log,log,408,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/501,1,['log'],['log']
Testability,"I am analyzing single cell RNAseq with10x chemistry.; I have my own transcriptome from long read sequencing and followed all the steps, prepare metadata, make the gentrome.fasta, indexing, using bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] E",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540:633,Log,Logs,633,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:749,log,log,749,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['log'],['log']
Testability,"I am running `salmon v1.4.0` on my total RNA samples to get isoform expressions. The library consists of mRNA + lncRNA.; The **mapping rate** is extremely lower than expected: **6%** and as a result TPM values are either 0 or very low for most of the transcripts:. `salmon quant --no-version-check -p 20 -i /library/salmon_mm10 -l A --seqBias --gcBias -1 Mice_A_batch2_1.fq.gz -2 Mice_A_batch2_2.fq.gz -o salmon_out`. ```; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 20 }; ### [ index ] => { /library/salmon_mm10 }; ### [ libType ] => { A }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ mates1 ] => { /upload/uploads/files/public/1/Mice_A_batch2_1.fq.gz }; ### [ mates2 ] => { /upload/uploads/files/public/1/Mice_A_batch2_2.fq.gz }; ### [ output ] => { /results/RNA-Seq/Mice_A_batch2/salmon_out }; Logs will be written to /results/RNA-Seq/Mice_A_batch2/salmon_out/logs; [2021-05-20 10:53:54.759] [jointLog] [info] setting maxHashResizeThreads to 20; [2021-05-20 10:53:54.760] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-20 10:53:54.760] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:885,Log,Logs,885,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/914:375,Log,Logs,375,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914,3,"['Log', 'log', 'test']","['Logs', 'logs', 'testing']"
Testability,"I am trying to quantify my reads with salmon quant (v. 1.8.0) and I'm getting an error saying ""SAM file says target Vcev1_p0.Chr07.17417.mRNA has length 2346, but the FASTA file contains a sequence of length [2348 or 2347]"". Do you know what is the issue?. `./salmon-1.8.0_linux_x86_64/bin/salmon quant -l A -a ./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam -t ./vcae1.4.cds.fa -o ./Rev5-2.quant`. Version Info: This is the most recent version of salmon.; salmon (alignment-based) v1.8.0; [ program ] => salmon; [ command ] => quant; [ libType ] => { A }; [ alignments ] => { ./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam }; [ targets ] => {./vcae1.4.cds.fa }; [ output ] => { ./Rev5-2.quant }; Logs will be written to /h./Rev5-2.quant/logs; [2022-06-21 22:56:14.963] [jointLog] [info] setting maxHashResizeThreads to 8; [2022-06-21 22:56:14.963] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; [2022-06-21 22:56:15.015] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam"", fasta = ""./vcae1.4.cds.fa"" . . . **SAM file says target Vcev1_p0.Chr07.17417.mRNA has length 2346, but the FASTA file contains a sequence of length [2348 or 2347]**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/785:708,Log,Logs,708,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/785,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"I am trying to quantify some rna sequences with Salmon. Instead of creating my own index, I downloaded a pre-build version from here: [http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4](url) suggested in the salmon doc. I downloaded the file: `salmon_partial_sa_index:default` which is under my scope of research. Then, I just run the following command: `salmon quant -i default -l A -1 P10_1.fq.gz -2 P10_2.fq.gz --validateMappings -o transcripts_quant`, where `default` is the name of the folder resulting after the decompression of the salmon pre-build index, and `P10_1.fq.gz -2 P10_2.fq.gz` are paired reads of rna. I get this error: **rapidjson internal assertion failure: IsObject()**. I read a thread where a user performed a re-build. But since I am new to this filed I don't know what FASTA file I could use to do it. It's worth mentioning that I am working on a remote server and I downloaded the pre-build index directly on it, using `wget`. Some screenshot of what the `default` folder contains:. <img width=""806"" alt=""Schermata 2023-07-27 alle 14 42 59"" src=""https://github.com/COMBINE-lab/salmon/assets/81829336/e0bda06a-f344-4836-9e27-8e2de6a10265"">",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/862:707,assert,assertion,707,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862,1,['assert'],['assertion']
Testability,"I am trying to test salmon ver 0.7.2 using commandline:. salmon index -t test-data/transcripts.fasta -i output --type quasi -k 31 --threads 4 --sasamp 1; salmon quant -l IU -index output -1 test-data/reads_1.fastq -2 test-data/reads_2.fastq -o output_quant. the .sf file is not reproducible, any clue???",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/102:15,test,test,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102,4,['test'],"['test', 'test-data']"
Testability,"I am trying to use Salmon and am being returned the following error. Any help here? . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501367_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501367 }; Logs will be written to salmonRes_SRR1501367/logs; [2021-07-16 11:47:01.372] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.372] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.372] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.372] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.372] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:433,Log,Logs,433,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"I am using salmon v1.0.0 that was compiled using bioconda. I downloaded fastq files from GEO, built an index using salmon index, but am getting 0 mappings. . #Downloading data; wget -o test.fastq.gz s3://sra-pub-src-5/SRR*******/test.fastq.gz. #building the salmon index from gencode [using vM22 for consistency]; salmon index -t gencode.vM22.transcripts.fa.gz -i gencode.vM22.transcripts --gencode. #running salmon quant; salmon quant -l A -i gencode.vM22.transcripts -r test.fastq.gz -o ~/Test1/ --gcBias --validateMappings --numGibbsSamples 20. The output .sf files have 0 TPMs and 0 fragment reads for all outputs and I am attaching a screenshot of the log file. . The reference genome and sequencing file is from the same organism. . ![Screen Shot 2022-10-06 at 3 53 32 PM](https://user-images.githubusercontent.com/108241225/194406132-61d5a5ce-a429-4b04-9fab-e4586dea9020.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/804:185,test,test,185,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/804,4,"['log', 'test']","['log', 'test']"
Testability,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/204:52,test,test,52,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204,9,"['Test', 'assert', 'log', 'test']","['Test', 'Testing', 'assertions', 'log', 'test', 'tests']"
Testability,"I had a fasta file with an space at the end of a sequence line. This caused salmon to fail, somewhat quietly (no output files are produced). It would be nice to report the specific problem with the input or position of the failing line, ... log:. <pre>; Logs will be written to output_dir/logs; there is 1 lib; [2015-10-09 15:47:13.170] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading ./current_index/bwaidx.amb; </pre>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/22:241,log,log,241,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22,3,"['Log', 'log']","['Logs', 'log', 'logs']"
Testability,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/37:434,Log,Logs,434,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37,2,"['Log', 'log']","['Logs', 'log']"
Testability,"I have been trying to use the salmon docker container available on docker hub. When I run salmon quant I am able to load all of the files and start the program, but I get a killed message while loading hash. I get an empty log file and empty folders created after the container is killed. **To Reproduce**; I run the following command to run the container:; `docker run -v /Users/caz3so/workspaces/salmon_docker:/temp -w /temp -ti combinelab/salmon`. The following is the output:; <img width=""1389"" alt=""screenshot 2018-06-27 11 15 56"" src=""https://user-images.githubusercontent.com/31480706/41983246-8296bb76-79fb-11e8-9710-c38ec051b7e7.png"">. **Expected behavior**; I have salmon installed on my machine and was able to run these files with no problem. It is only when I am using the docker container, so it could be a docker related problem. . **Desktop (please complete the following information):**; I am using a 2017 Macbook pro with 16 GB 2133 MHz LPDDR3 memory and a 2.8 GHz Intel Core i7 processor.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/243:223,log,log,223,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243,1,['log'],['log']
Testability,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/387:1051,Log,Logs,1051,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"I have tried running Alevin with a few samples and everytime the program reaches 6M reads it crashes. I have tried this with a number of samples that have worked with Cell Ranger. I recompiled the program with `-DCMAKE_BUILD_TYPE=Debug` and have attached the output and gdb backtrace. There is roughly 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:341,test,testing,341,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['test'],['testing']
Testability,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/315:153,test,test,153,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315,12,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"I ran salmon alevin 0.14.0 with a custom transcriptome reference and the following options: --chromium --dumpFeatures --dumpMtx --whitelist mylist.txt. Everything ran through OK. However, when I tried to load the .mtx file with readMM() in R, I got the error: ; ` Error: readMM(): column values 'j' are not in 1:nc `. When I tried to read directly the binary file into a matrix, there's a warning:; ```; counts <- readBin(quants_mat.gz, what = 'numeric', n = length(genes)*length(cells)); close.connection(quants_mat.gz); Warning message:; In matrix(data = counts, nrow = length(cells), ncol = length(genes), :; data length [391335] is not a sub-multiple or multiple of the number of rows [4942]; ```; It seems like there's issue with the dimensions; [out.zip](https://github.com/COMBINE-lab/salmon/files/3296080/out.zip); of the output matrix. I've attached my log file as well as my output files (both .mtx and binary). Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/380:862,log,log,862,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/380,1,['log'],['log']
Testability,"I recently ran Salmon by quasi-mapping-based mode and when I checked the salmon_quant.log file, saw that mapping rate was around ~%65-68 for all of the samples. Do you have any suggestions to improve the mapping rate? I used ""--libType A"" to to infer the library type info and got a warning that ""Greater than 5% of the fragments disagreed with the provided library typ"", but I guess this is not an issue. This is an example for one of the ""lib_format_counts.json"" files: . ```; {; ""read_files"": ""( /mnt/dznehomes/homes/simonj/RNAseq_pipeline/frontal_data/samples/Trimmed_FASTQ_files/00116_GFM_R1_trimmed.fastq.gz, /mnt/dznehomes/homes/simonj/RNAseq_pipeline/frontal_data/samples/Trimmed_FASTQ_files/00116_GFM_R2_trimmed.fastq.gz )"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 0.9241470144855659,; ""num_compatible_fragments"": 34584460,; ""num_assigned_fragments"": 37423115,; ""num_consistent_mappings"": 334748580,; ""num_inconsistent_mappings"": 28046150,; ""MSF"": 0,; ""OSF"": 32448,; ""ISF"": 20518131,; ""MSR"": 0,; ""OSR"": 487250,; ""ISR"": 334748580,; ""SF"": 1833525,; ""SR"": 5088606,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/160:86,log,log,86,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/160,1,['log'],['log']
Testability,"I tend to benchmark new versions of software mostly to check how much better things get over time at solving our problems. My strategy for benchmarking is to look at correlation between spike-ins at known abundances and estimated expression by software. The latest version of Salmon (0.4.0) performs markedly worse than all the previous versions of Salmon on the same data. ![salmong-performance](https://cloud.githubusercontent.com/assets/668803/8134113/8ff1a4ae-1124-11e5-80d5-10022530ba99.png). For running parameters, here is the top part of one of the `quant.sf` files. ```; # salmon (smem-based) v0.4.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /nfs/research2/teichmann/reference/homo-sapiens/salmon/Homo_sapiens.GRCh38.78.cdna_ERCC }; # [ libType ] => { IU }; # [ threads ] => { 4 }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_2.fastq }; # [ output ] => { /tmp/SRP030617_HCT116_86_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/homo-sapiens/Homo_sapiens.GRCh38.78.cdna_ERCC.gene_map.txt }; # [ useVBOpt ] => { }; # [ mapping rate ] => { 48.8199% }; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/6:10,benchmark,benchmark,10,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6,2,['benchmark'],"['benchmark', 'benchmarking']"
Testability,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/209:940,Log,Logs,940,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"I was attempting to create an index for mapping of transcripts using the full chicken (Gallus gallus) genome from Ensembl. No errors appeared, but the ref_indexing.log stated ""Replaced 9,788,221 non-ATCG nucleotides"" which seems rather high compared to some of the numbers I've seen from gencode-derived indices. This is my first time making an index, so I don't know where to begin troubleshooting. What ""non-ATCG nucleotides"" are being replaced here, and what are they being replaced with? Could Salmon be reading metadata in transcript headers as nucleotide sequences? Why would it do that? Am I just being paranoid?. Here's my code. Note that chicken does not have a ""transcriptome"" file, so I concatenated the cdna and ncrna files ahead of the full genome. I've also attached the ref_indexing.log file.; ```. SALMON_BIN=/data/homezvol1/fweghors/chickscripts/salmon-1.8.0_linux_x86_64/bin/salmon; grep ""^>"" <(gunzip -c Gallus_gallus.GRCg6a.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat Gallus_gallus.GRCg6a.cdna.all.fa.gz Gallus_gallus.GRCg6a.ncrna.fa.gz Gallus_gallus.GRCg6a.dna.toplevel.fa.gz > gentrome.fa.gz. gunzip gentrome.fa.gz. $SALMON_BIN index -t gentrome.fa -d decoys.txt -p 13 -i salmon_index; ```. [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/8375551/ref_indexing.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/766:164,log,log,164,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/766,4,['log'],['log']
Testability,"I'm running salmon v.4 (downloaded and compiled today) on gencode v22 and got the following error:. Performing PCA decomposition; salmon: /home/merkija1/software/salmon-0.4.0/include/eigen3/Eigen/src/Core/Redux.h:202: static Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Derived, 3, 0>::run(const Derived&, const Func&) [with Func = Eigen::internal::scalar_sum_op<double>; Derived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar = double]: Assertion `size && ""you are using an empty matrix""' failed.; Aborted. The command I ran is:; salmon-0.4.0/src/salmon quant --index gencode.v22.index_0.4.0/ --mates1 <(gunzip -c r1_fq1.gz r1_fq2.gz --mates2 <(gunzip -c r2_fq1.gz r2_fq2.gz ) --output $OUTPUT_DIR --biasCorrect --threads 4 --geneMap gencode.v22.annotation.nochr.gtf --libType ""ISF"". If I remove the --biasCorrect flag, it runs without error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/5:560,Assert,Assertion,560,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5,1,['Assert'],['Assertion']
Testability,"I'm trying to process the 10X 1.3 Million Brain Cells from E18 Mice dataset using Alevin with compiled salmon version 0.12.0 using the gencode.vM19.pc_transcripts.fa.gz as reference (https://support.10xgenomics.com/single-cell-gene-expression/datasets/1.3.0/1M_neurons). The chemistry used is the 10x-v2. I have divided the fastqs into the 133 libraries and I'm trying to run Alevin per library fastqs (~140 r1 fastqs per library). The dataset has been processed with the longranger demux program, which outputs one fastq with both the UMI+barcode and read-sequence. I have divided the fastqs so that it corresponds to the input of Alevin (i.e. the UMI+barcode in one fastq and the read-sequence in the other). However it seems that Alevin gets stuck on processing the barcodes, no error code is produced it just doesn't seem to do anything anymore with just ""processed X Million barcodes"" printed on the screen. Are you aware of such a problem with many fastq files or is there something that I'm not taking into account? Is there a limit how many files can be used as an input? I tested Alevin with 60 fastqs (120 in total r1+r2 fastqs) and it ran through but with more than 60 fastqs it seems to get stuck on processing the barcodes. If it is not possible to run all the library related fastqs, do you recommend running them in smaller batches and then combining the resulting count matrices?. Command used: salmon alevin -l ISR -1 R1_fastqs -2 R2_fastqs --chromium -i index -p 20 -o alevin_output --tgMap txp2gene_mouse.tsv --dumpCsvCounts --whitelist barcode_whitelist.txt --minScoreFraction 0.7. The barcode whitelist was gotten from the HDF5 file which has the original data in a filtered matrix format (it has been run through the cellranger).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/333:1082,test,tested,1082,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/333,1,['test'],['tested']
Testability,"I'm trying to use salmon v1.0.0 to merge a bunch of bulk quant files successfully also run with salmon. However, salmon can't seem to find the quant files, even though farther down in the log it lists the quant file within the same directory in memory:. [critical] The sample directory /gcloud-shared/quants/A653_388/quant.sf either doesn't exist, or doesn't contain a quant.sf file; ...yet... /gcloud-shared/quants/A653_388:; total 9.9M; drwxr-xr-x 2 root root 4.0K May 20 16:11 aux_info; -rw-r--r-- 1 root root 349 May 20 16:11 cmd_info.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 libParams; -rw-r--r-- 1 root root 588 May 20 16:11 lib_format_counts.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 logs; -rw-r--r-- 1 root root 9.8M May 20 16:11 quant.sf. Here's a shorter version of my command :; salmon --no-version-check quantmerge --quants /gcloud-shared/quants/A653_388 /gcloud-shared/quants/A653_242 --names sample1 sample2 --column numreads --genes -o /gcloud-shared/merge/ukbec_gene_numreads.sf. Any idea what might be happening? I'll also attach the logs and quant file from the sample in case thats helpful. [ukbec_logs_salmon_quantmerge5.txt](https://github.com/COMBINE-lab/salmon/files/6517777/ukbec_logs_salmon_quantmerge5.txt). [ukbec_quants_gencode_32_filtered_A653_388_quant.txt](https://github.com/COMBINE-lab/salmon/files/6517782/ukbec_quants_gencode_32_filtered_A653_388_quant.txt); [ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6517784/ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/662:188,log,log,188,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/662,5,['log'],"['log', 'logs']"
Testability,I've been trying to understand this readout as mine seems abnormally low.; I want to understand it well enough to be sure that the low readout is indicative of and how I can test hypotheses.; Currently my hits per frag is 0.0170477 using mapping-based mode against the human transcripts from https://www.gencodegenes.org/human/. The sample was expected to have a high amount of human RNA and if I'm interpereting this correctly this means that a small minority of reads were mappable to that transcriptome. I'm sorry to open a thread about this but I didn't see it explained in the Docs or any other discussions.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/558:174,test,test,174,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/558,1,['test'],['test']
Testability,"I've been using 0.7.1 without problems until today.; I'm trying to index the transcriptome (made with gffread) of human GRCh37 from archived Ensembl 60. The process has been running for hours, with no messages beyond this:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; [2016-11-04 13:45:38.583] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers. ```. This is all there is in the index.log. `[2016-11-04 13:45:38.583] [jLog] [info] building index`. None of me previous indexes have taken so long, especially not in total silence. So I'm guessing it gets stuck somewhere, but where? Why?. I know there is a newer version, but getting our busy sysadmin to install things takes time and I didn;t see anything critical for my usage case listed in the release notes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/100:624,log,log,624,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100,1,['log'],['log']
Testability,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/913:586,Log,Logs,586,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913,3,"['Log', 'assert', 'log']","['Logs', 'assertion', 'logs']"
Testability,"I've just been testing Salmon using Illumina TruSeq stranded (dUTP) libraries. Using either `ISF` (correct libType) or `ISR` I get a **ton** of messages like this:. ```; expected = Library format { type: }; paired end, relative orientation:inwardexpected = Library format { type:paired end, relative orientation:Library format { type:paired end, relative orientation:inwardpaired endinward, strandedness:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; (sense, antisense)expected = , strandedness:(sense, antisense), strandedness:(sense, antisense) }; observed = }; Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:observed = Library format { type: }; paired endLibrary format { type:paired end, relative orientation:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:observed = inward, strandedness:(antisense, sense) }; (antisense, sense) }paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense)expected = Library format { type:Library format { type:; }paired endpaired endexpected = Library format { type:paired end, relative orientation:; , relative orientation:inwardinward, strandedness:(sense, antisense)observed = , strandedness:(antisense, sense) }; }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }expected = Library format { type:, relative orientation:Library format { type:paired end; ```. and so on... It seems that the [`LibraryFormat` class](https://github.com/COMBINE-lab/salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/16:15,test,testing,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16,1,['test'],['testing']
Testability,"I've switched to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/54:798,Log,Logs,798,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"In CMakeLists.txt, `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` is used to determine whether to use LLVM's C++ stdlib - libc++, or the system's own GNU one (libstdc++). Unfortunately, those distros do not ship with that library (per the clip below) - and yet the test succeeds - yielding failure later in the build process due to lots of missing header files.; ```; [rocky@ip-10-11-36-33 ~]$ cat >test.cpp; #include <iostream>. int main() {; std::cout << ""Helloworld"";; }; [rocky@ip-10-11-36-33 ~]$ clang++ -stdlib=libc++ test.cpp ; test.cpp:1:10: fatal error: 'iostream' file not found; 1 | #include <iostream>; | ^~~~~~~~~~; 1 error generated.; ```. The cause is that CMake's `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` test which is used in Salmon only tests if the compiler accepts the flag (the test code it uses doesn't have any includes - just `main() {return 0;}`) rather than if it works. I don't know the whys behind the missing library - the library is available on OS/X for example - however it seems this behaviour should be changed for now on Linux platforms.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/969:272,test,test,272,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/969,7,['test'],"['test', 'tests']"
Testability,"Is there a way to compile Salmon to a 32-bit architecture by any chance? I ask because I'd like to have single-cell tutorials on sandbox.bio v2 that use Salmon. But to power the platform, I'm running a 32-bit/i686 Debian OS in the browser 😬. When I try to compile it in a [i386/debian:bookworm-20230904-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/872:129,sandbox,sandbox,129,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872,1,['sandbox'],['sandbox']
Testability,"Just wanted to put an opinion in. I am currently using Salmon v1.1.0 and noticed that `--posBias` wasn't listed in the help messages, but I found it in your read the docs. I tested it out and it made a significant improvement in my calculations. I know it is considered ""experimental"", but it helped in my research and will publish that I used it when we get the manuscript out. Also, do you think you could give a brief explanation on what `--forgettingFactor` is doing and how it could be affecting quantification calculations?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/474:174,test,tested,174,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/474,1,['test'],['tested']
Testability,"LE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ outpu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:2024,log,log,2024,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['log'],['log']
Testability,Make test failed,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/315:5,test,test,5,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315,1,['test'],['test']
Testability,Make test fails on Ubuntu 16,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/250:5,test,test,5,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250,1,['test'],['test']
Testability,"Mar 2 11:47 ..; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 alevin; -rw------- 1 amonaco_m hpc-ag-zinzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/636:1655,log,log,1655,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636,2,['log'],['log']
Testability,"OS: ubuntu 16.04; Salmon was installed using conda. Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /work/yu_liu/resource/salmon_gencodev28_index/ }; ### [ libType ] => { U }; ### [ unmatedReads ] => { /work/yu_liu/NEPC_david/data_source/Output.Fastqs/HS_1-1_S1_R1_001.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { /scratch/yu_liu/HS_1-1_quant }; Logs will be written to /scratch/yu_liu/HS_1-1_quant/logs; [2018-07-13 20:04:48.086] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-13 20:04:48.086] [jointLog] [info] parsing read library format; [2018-07-13 20:04:48.086] [jointLog] [info] There is 1 library.; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/251:479,Log,Logs,479,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251,3,"['Log', 'assert', 'log']","['Logs', 'assertion', 'logs']"
Testability,"Our lab makes heavy use of Salmon. Its a great tool we use it almost daily. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; While digging through the log files to try and figure out why some of our biologic samples have low mapping rates I discovered a warning. . [2021-06-22 12:39:41.282] [jointLog] [warning] Only 1920342 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2021-06-22 12:39:41.282] [jointLog] [info] Mapping rate = 55.5444%. about half of our samples have over 90% mapping rates. . Any idea what this warning means?. **To Reproduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skip",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/677:218,log,log,218,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677,1,['log'],['log']
Testability,"PCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-051/job_scripts/9987275: line 31: 41232 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:23615,Log,Logs,23615,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,2,"['Log', 'log']","['Logs', 'logs']"
Testability,RapidJSON Logs Error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/322:10,Log,Logs,10,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322,1,['Log'],['Logs']
Testability,"Running Salmon-0.7.2_linux_x86_64 with --writeMappings=map.out and it crashes with:. Exception : [boost::filesystem::create_directory: No such file or directory]. When I run without a file name, it outputs to stdout, but it also outputs messages such as:; ESC[1m[2016-09-14 11:06:07.550] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:06:07.550] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:06:08.300] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:06:08.300] [jointLog] [info] Loading 32-bit quasi index; So the output is not a clean .sam file. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --writeMappings=map.out --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/90:719,test,test,719,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90,1,['test'],['test']
Testability,"Salmon 0.9.1. ```; 2018-11-28 17:07:26,833 i-0656458112d739fa6 data_refinery_workers.processors.utils ERROR [failure_reason: Shell call to salmon failed because: ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_408895/SRR4051017_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_408895/SRR4051017_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_408895/SRR4051017_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_408895/SRR4051017_output/logs; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Is this a ""working"" sample that just fails because of a problem with the logger?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/322:777,Log,Logs,777,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322,4,"['Log', 'assert', 'log']","['Logs', 'assertion', 'logger', 'logs']"
Testability,"Salmon version: 0.13.1 (installed via pre-compiled binary). I used salmon to quantify some samples and wanted to use the `quantmerge` command to produce a combined table. However, the merged table I got as output only contained 17 lines (of 52228 in the quant.genes.sf files). I was able to identify that the problem was related somehow to the ""Name"" column itself, although I didn't find any obvious pattern for failure. For example, if I rename all the genes to simply ""1"", ""2"", ... and then `quantmerge`, I get a properly combined table with all samples/genes. Looking back at the ""original"" data with the gene names, I find that the truncated merged table consistently/always truncates immediately *after* processing some gene names. For example, the 16th gene name in my ""quant.genes.sf"" table happens to be ""Erdr1"". If this line is moved to the top of that file, then the merged table will truncate at 2 (the header counting for one of those, obviously). Unfortunately, it's not just ""Erdr1"". If that line is moved to the end of the file, or deleted entirely, there is another failure at gene ""Gm28674"", which happens to be the 19th gene. And so on for a very large number of names (I gave up after removing ~30 one at a time). I've now tested with a few different samples and with a number of randomly selected subsets of the original quant files and the behavior is consistent. I can't figure out what the pattern is, but ""Erdr1"", ""Gm28674"", and all the other genes I discovered with my ad-hoc process above, always cause `quantmerge` to truncate the output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/356:1243,test,tested,1243,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/356,1,['test'],['tested']
Testability,Salmon: rapidjson internal assertion failure: IsObject(),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/862:27,assert,assertion,27,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862,1,['assert'],['assertion']
Testability,"Seeing lots of these - any ideas? v0.9.1. ```; ERROR [processor_job: 399381] [pipeline_applied: SALMON] [no_retry: False] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/MUS_MUSCULUS/short }; ### [ mates1 ] => { /home/user/data_store/processor_job_399381/ERR1680104_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_399381/ERR1680104_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_399381/ERR1680104_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_399381/ERR1680104_output/logs; [2018-11-28 17:08:09.121] [jointLog] [info] parsing read library format; [2018-11-28 17:08:09.121] [jointLog] [info] There is 1 library.; [2018-11-28 17:08:09.165] [stderrLog] [info] Loading Suffix Array; [2018-11-28 17:08:09.165] [jointLog] [info] Loading Quasi index; [2018-11-28 17:08:09.165] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 879238456 bytes from input stream! Read 851443704]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.]: Processor job failed!; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/321:771,Log,Logs,771,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"Slack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [info] Index contained 58,086 targets; [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-28 21:40:30.446] [jointLog] [info] Mapping rate = 37.2969%. [2019-01-28 21:40:30.446] [jointLog] [info] finished quantifyLibrary(). cat alevin/alevin.log; [2019-01-28 21:02:08.496] [alevinLog] [info] Processing barcodes files (if Present). [2019-01-28 21:07:56.106] [alevinLog] [info] Done barcode density calculation.; [2019-01-28 21:07:56.106] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-28 21:07:57.808] [alevinLog] [info] Done importing white-list Barcodes; [2019-01-28 21:07:58.273] [alevinLog] [warning] Skipping 290359 Barcodes with 0 reads; Assuming this is the required behavior.; [2019-01-28 21:07:58.517] [alevinLog] [info] Total 446921 white-listed Barcodes; [2019-01-28 21:09:02.029] [alevinLog] [info] Done populating Z matrix; [2019-01-28 21:09:02.331] [alevinLog] [info] Done indexing Barcodes; [2019-01-28 21:09:02.331] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-28 21:09:02.331] [alevinLog] [info] Used Barcodes except Whitelist: 168781; [2019-01-28 21:09:02.559] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-28 21:09:02.559] [alevinLog] [info] parsing read librar",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:6892,log,log,6892,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['log'],['log']
Testability,"Sorry, me (#228) again...; While most of my samples seem to work on linux, I got an exception for one of them:. Version Info: This is the most recent version of Salmon.; \#\#\# salmon (mapping-based) v0.10.0; \#\#\# [ program ] => salmon; \#\#\# [ command ] => quant; \#\#\# [ index ] => { salmon010.index.all_combined }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { R1.fastq.gz }; \#\#\# [ mates2 ] => { R2.fastq.gz }; \#\#\# [ posBias ] => { }; \#\#\# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:636,Log,Logs,636,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"TCACT_lane-001-chunk-001.fastq.gz; read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz; read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: This is the most recent version of Salmon.; [2018-09-11 16:28:53.145] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ../../alevin_15_pc/logs; ### salmon (single-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz }; ### [ mates2 ] => { read-RA_si-ACTTCACT_lane-001",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:5594,Log,Logs,5594,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['Log'],['Logs']
Testability,"TGAAGAAAGG; +D00585:41:CB64LANXX:1:1202:13646:88674; BBBBBFFFFFFFFFFFF<FFFBF//<; @D00585:40:CB7FUANXX:1:2113:18626:8045; TGGGCGTTCTTGCATTCCTGGAACCT; +D00585:40:CB7FUANXX:1:2113:18626:8045; BBBBBFFFFFFFFFFFF<FBFFFFFF; ``` . And an extract of the reads fastq:; ```; @D00585:41:CB64LANXX:1:1202:13646:88674; TCTGTTCATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCAT; +D00585:41:CB64LANXX:1:1202:13646:88674; BFFF<FFFBFFB<FFFB<FFFBF//FFFFB<FFFF<F///FFFB/BF<//F<7//FBFBB/F<BF</F<FFFFFFFF<</<FFBFBFFBFF<FBBBBB; @D00585:40:CB7FUANXX:1:2113:18626:8045; ATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCATCTGCAGG; +D00585:40:CB7FUANXX:1:2113:18626:8045; FFFFFBFFFFFFFFFFFB/FBFFFFBFFFFFFFBBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFBFFFFFFFFFFFFFFFFFF<FFBFFBBBBB; ``` . This is the log of the analysis:; ```; Version Info: This is the most recent version of salmon.; Logs will be written to /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:1476,Log,Logs,1476,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,2,"['Log', 'log']","['Logs', 'logs']"
Testability,Testing problem: test 1 fails,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/204:0,Test,Testing,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204,2,"['Test', 'test']","['Testing', 'test']"
Testability,"The ability to guess RNAseq library format is very useful when quantifying numerous heterogeneous data sets. I tested Salmon's ability to guess library format using a public SRA dataset (PRJNA543304; PMID: 31216476). This dataset was generated using a paired-end stranded protocol (TruSeq Stranded Total RNA Library Prep Kit, Illumina, Cat. 20020597). Based on my understanding, the library format using Salmon's notation would be ISR. Briefly, with the help of several R packages (GenomicRanges, Biostrings, and rtracklayer) I generated my own FASTA file using the human genome sequence and exon annotations both from Ensembl. I extracted the sequences of both mature transcripts and their premature precursors. I was sure to get the reverse complement sequences of genes on the minus strand. I generated an index from this FASTA file without decoys (salmon index -k 31) and quantified the FASTQ files using the following sample code:. ```; # Shuffle FASTQ files; paste <(cat SRR9071838_1.fastq) <(cat SRR9071838_2.fastq) | paste - - - - | shuf --random-source=SRR9071838_1.fastq | \; awk -F '\t' -v std=""$SLURM_TMPDIR"" '{ OFS=""\n""; print $1,$3,$5,$7 > (std ""/SRR9071838_1.fastq""); print $2,$4,$6,$8 > (std ""/SRR9071838_2.fastq"") }'. # Quantify; ./software/salmon-1.4.0_linux_x86_64/bin/salmon quant -i ./shared_data/annotations/Salmon/noDecoys \; -o ./Salmon_out_final_shuf_a_noDecoys/SRR9071838 -l A -p 8 \; -1 $SLURM_TMPDIR/SRR9071838_1.fastq -2 $SLURM_TMPDIR/SRR9071838_2.fastq; ```; I then briefed over the resulting lib_format_counts.json files and noticed that in all but one case, Salmon inferred that the library format is IU, not the expected ISR. Here is a summary:. ```; > salmon.guess.auto; read_files expected_format compatible_fragment_ratio num_compatible_fragments num_assigned_fragments num_frags_with_concordant_consistent_mappings; 1: [SRR9071838_1.fastq, SRR9071838_2.fastq] IU 1.0 46378505 46378505 55523877; 2: [SRR9071839_1.fastq, SRR9071839_2.fastq] ISR 1.0 50070023 50070023",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/655:111,test,tested,111,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/655,1,['test'],['tested']
Testability,"The documentation states. >If your alignments for the sample you want to quantify appear in multiple .bam/.sam files, then you can simply provide the Salmon -a parameter with a (space-separated) list of these files. But I somehow can't get that to work. I have two bam files, each of them with (different) STAR alignments to the same reference. When I pass either one of them, salmon works just fine, e.g. with the following commands:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run1/Aligned.toTranscriptome.out.bam; # or; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run2/Aligned.toTranscriptome.out.bam; ```; But when I try to pass both of them, I get the following error:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf) -a run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fasta }; # [ libType ] => { IU }; # [ threads ] => { 2 }; # [ output ] => { sample1/quantitation }; # [ alignments ] => { run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam }; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; Logs will be written to quantitation/logs; numQuantThreads = 2; parseThreads = 2; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""run1/Aligned.toTranscriptome.out.bam"", fasta = ""transcripts.fasta"" . . .replaced 0 non-ACGT nucleotides with random nucleotides; done. processed 0 reads in current roundSegmentation fault (core dumped); ```. The `Checking that provided alignment files have consistent headers . . . done` line seems to indicate that both bam files were recognized and that the headers matched. . Any hints on what might be going on?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/104:1355,Log,Logs,1355,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"This 'bug' is related to the funcionality. When attempting to quantify reads using the form, salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o SalmQuant_out, I get the error from the title of this post (screenshot below). * Salmon v 1.5.1 (downloaded executable) used to quantify transcriptome from two fastq files, R1 and R2, containing the same number of sequences. Executed as follows:; * salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o SalmQuant_out. **Expected behavior**; I expected a quant.sf file. Instead I; ![Screen Shot 2021-09-07 at 3 25 26 PM](https://user-images.githubusercontent.com/50889111/132418472-1bca6641-008e-4a9e-aae5-e0b61f771fd4.png); got the error in the title, and in the salmon_quant.log file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version: 18.04.1 . Any insight and help getting that quantification file is greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/700:737,log,log,737,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/700,1,['log'],['log']
Testability,"This PR addresses issue #699. To use the protocol, pass the `--splitseqV2` or `--splitseqV1` flag. To test the implementation correlation analysis was done on [data](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE137941) submitted with the [article](https://www.sciencedirect.com/science/article/pii/S1934590920300552). Thanks @jeremymsimon for pointing to the data. Here are the results of correlation b/w the alevin output and published counts. This test run was done as mentioned in [here](https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-988185505). ![image](https://user-images.githubusercontent.com/12998572/145128352-6efe899a-ea06-49bf-9223-24ad4ba70223.png). ```; > summary(cr); Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.2966 0.7128 0.8690 0.8163 0.9448 0.9963 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/726:102,test,test,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/726,2,['test'],['test']
Testability,"This PR introduces a new feature that will allow users to specify custom single cell protocols and use with alevin. Custom Geometry (--custom-geo) should be used when:; 1. Barcode or umi have variable lengths; 2. There is known fixed sequence in the reads; 3. There is some sequence to be excluded; From the input peglib spec it creates a regex. Boost regex library is used to parse the reads. Apart from small tests on multiple outlier cases, it was tested on a sci-RNA-seq3 sample SRR7827207 for speed. For this the spec is `--custom-geo 1{b[9-10]f[CAGAGC]u[8]b[10]}2{r}`. It says:; - Read 1 starts with barcode of variable length 9-10 bp, followed by; - A fixed sequence CAGAGC, then; - A umi of length 8, and lastly; - barcode of length 10.; - The second read is all biological. The barcodes are concatenated in the output and a padding sequence is added to make the length as max length + 1. The extra base is added so that we don't introduce spurious matches in barcode. For example, if the barcodes have length 3-4 bp and the two barcodes are `ATG` and `ATGA`, after padding they will be `ATGAC` and `ATGAA` resp. Adding just `A` to shorter barcode would result in a spurious match. . Since `--custom-geo` uses regex, it is slower than protocol specific flag. The time with 8 threads on a large Ubuntu 20 machine:. 1. Using `--sciseq3`:; ```; real 1m0.425s; user 7m21.501s; sys 0m2.964s; ```; 2. Using `--custom-geo`; ```; real 1m39.887s; user 11m55.602s; sys 0m6.839s; ```; Notably, it is about 66% slower. However, it allows support for almost all current and future protocols. . There will be a tutorial shortly on how and when to use this and how is it different from other flags such as `--umi-geometry`, `--read-geometry` and `--bc-geomtery`. There is scope of speed improvement in the future along with integration of all custom geometry processing protocols.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/734:411,test,tests,411,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734,2,['test'],"['tested', 'tests']"
Testability,"This came up in #336. When building a gencode-based index with `salmon index` without the `--gencode` flag, the index that is generated won't work when subsequently running e.g. `salmon alevin`. This can be a pain to figure out the mistake (missing `--gencode` flag). Perhaps some sort of quick grep of the index file name for `'gencode'` or within the file for multiple `'|'`s (used for gencode field separator but not ensembl) should be done to check if it's gencode followed by a warning/error if the --gencode flag is missing? Another possibility could be to just auto-detect if the index is gencode using the above tests, removing the need for the `--gencode` flag. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/366:620,test,tests,620,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/366,1,['test'],['tests']
Testability,"This is a question related to a strange message in the log out file after Salmon indexing on a very small genome with my own generated transcriptome and decoy. I'm running Salmon v1.0.0 index on the transcriptome of Candida parapsilosis which has a small genome of 26mbp. I created the transcriptome using Cufflinks gffread on my reference genome fasta and gff3. I created the decoy by concatenating the whole genome to the transcriptome [as it was described in the manual](https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode). . I am running using the following options:. `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i cpar_salmon_index -k 31; `. After indexing using a kmer size threshold of -k 31, I see the following message in the log out file ""filter size not provided. ntHll estimated 12754610 distinct k-mers, setting filter size to 2^28."" . 2^28 seems very high compared to 31 bp set using -k 31. I'm also curious why, after setting a k size, it printed the message ""filter size not provided."". I've pasted a more complete snippet of the log out file text below. Does everything look like it's run successfully? I'm concerned since I am running on a small genome and with my own generated decoy and transcriptome. Does it look like this running as it should, or is there a bug that I should provide more details about?. > [puff::index::jointLog] [info] Filter size not provided; ; > estimating from number of distinct k-mers; > [puff::index::jointLog] [info] ntHll estimated 1275461; > 0 distinct k-mers, setting filter size to 2^28; > Threads = 12; > Vertex length = 31; > Hash functions = 5; > Filter size = 268435456; > Capacity = 2; > Files: ; > cpar_salmon_index/ref_k31_fixed.fa; > --------------------------------------------------------------------------------; > Round 0, 0:268435456; > Pass	Filling	Filtering; > 1	0	8	; > 2	4	0; > True junctions count = 18712; > False junctions count = 40617; > Hash table size = 59329; > ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/510:55,log,log,55,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/510,2,['log'],['log']
Testability,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/455:390,log,logger,390,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455,2,['log'],['logger']
Testability,"This is not a bug but more of a question. I've run Salmon in alignment mode with transcriptome BAM file generated by STAR. The BAM file contains no unaligned reads. My question is there are often a small number of reads that were not assigned to any rich equivalence class. I am trying to understand what these reads are. I notice that this only happens when the input is paired-end reads. I suspect maybe the unassigned reads are dovetail paired end reads, but I don't know. The `--allowDovetail` option is not available in alignment mode. Here is an excerpt of the log:; ```; Completed first pass through the alignment file.; Total # of mapped reads : 6205189; # of uniquely mapped reads : 1718004; # ambiguously mapped reads : 4487185. [2024-08-14 18:21:52.491] [jointLog] [info] Computed 350358 rich equivalence classes for further processing; [2024-08-14 18:21:52.491] [jointLog] [info] Counted 6192944 total reads in the equivalence classes; ```; As you can see 6192944 out of 6205189 reads were assigned to rich equivalence classes.; It would be nice to know what the excluded reads are, and/or if there are options to rescue these reads, similar to `--allowDovetail`.; This is Salmon version 1.10.3, but I also ran older version, which generated same results.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/952:567,log,log,567,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/952,1,['log'],['log']
Testability,"This is related to https://github.com/COMBINE-lab/salmon/issues/272. * Now there are 2 test cases on Travis CI, adding one case.; * Added code for speed up such as `git - depth: 1`, `make -j 4`.; * Refactoring. Removed tailing spaces. Notes:; * I added `gcc-5`'s case as maybe it is minimal support version of gcc for this project.; * I want to replace current case `gcc-7` to latest version `gcc-8` if you like.; * Total running time (""Ran for"" on the Travis page.) becomes faster than current situation. In my repository, total running time is ""15 min 11 sec"", seeing current master branch's test is around 17 min+. See [1]; * Removed `travis_wait`. Without the command, the default behavior is ""when a long running command or compile step regularly takes longer than 10 minutes without producing any output"". [2] I have not faced the situation when I did debug. ; * There are commented out area at the bottom of `.travis.yml`. However as we can run `git log -p .travis.yml` to check past modification, shall we remove the commented out ""whitelist"" area?. [1] https://travis-ci.org/junaruga/salmon/builds/417976633; [2] https://docs.travis-ci.com/user/common-build-problems/#build-times-out-because-no-output-was-received",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/273:87,test,test,87,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/273,3,"['log', 'test']","['log', 'test']"
Testability,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/276:455,test,test,455,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276,9,"['Test', 'log', 'test']","['Test', 'log', 'logic', 'test']"
Testability,"Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; |",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:5488,Log,Logs,5488,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"Type A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:2029,log,logs,2029,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['log'],['logs']
Testability,"URE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as well. Kind regards, Andreas.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835:2410,test,testing,2410,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835,7,"['log', 'test']","['log', 'logs', 'test', 'testing']"
Testability,Unit tests with `make test` not finding `libtbb.so.12`,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/845:5,test,tests,5,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845,2,['test'],"['test', 'tests']"
Testability,Update .travis.yml to add test case easily.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/273:26,test,test,26,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/273,1,['test'],['test']
Testability,"Version 0.7.1 seems to refer to ""SF"" libtype as just ""F"". Maybe this is an abbreviation done on purpose since ""F"" alone necessarily implies ""stranded"" but I think that can be confusing. Moreover, in lib_format_counts.json file, both ""F"" and ""SF"" are listed, but only ""F"" gets counts whereas ""SF"" is 0. ""F"" is not recognized as a valid library type for the parameter `-l`, only ""SF"" is (as expected). I haven't tested it but the same probably happens with ""R"" and ""SR"".",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/82:410,test,tested,410,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/82,1,['test'],['tested']
Testability,Version 1.5.2 downloaded binary for linux system from GitHub. Judging but the length of the log output I do not think this applies to all alignments but certainly some alignments give the example output:. ```; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891 - align length 4731) has no trained error model; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891) has no trained clipping model; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891) has no trained clipping model; ```. Code to run salmon quant mode:; ```; salmon-1.5.2_linux_x86_64/bin/salmon quant -p 4 --ont -t Genome_files/gencode.v37.transcripts.fa -l SF -a /analysisdata/rawseq/fastq/SHARED/000081/Interactome_project_ONT-CAGE/iPSC_rep1/run1/alignment/Fantom6_iPSC_rep1_run1_pass_transcriptome.bam -o /analysisdata/rawseq/fastq/SHARED/000081/Interactome_project_ONT-CAGE/iPSC_rep1/run1/salmon_quant; ```. Was wondering if I can ignore these errors?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/701:92,log,log,92,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701,1,['log'],['log']
Testability,"Version Info Exception: server did not respond before timeout; Logs will be written to /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2/logs; [2023-06-19 16:31:27.810] [jointLog] [info] setting maxHashResizeThreads to 12; [2023-06-19 16:31:27.811] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2023-06-19 16:31:27.814] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-06-19 16:31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/lab",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/853:63,Log,Logs,63,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"We have a partly assembled genome with some almost identical gene modes which can be either allele or paralogs. Usually there are only a few nuclear tide differences between them. We expected Salmon return similar expression levels for these similar genes. However, it came out one gene had normal counts(in my case it was roughly 12,000 mapping reads) and another gene got zero in mapping read counts. I guess Salmon re-assigned read counts between highly similarly genes based on estimated mapping quality. In addition, the same gene model would get significantly different counts across runs due to the re-assignment, which made thing worse. I also tested RSEM and found the similar problem. I noticed the RSEM set the column #5 (mapping quality) in BAM from upstream mapping pipeline which might be reason for this issue. The third software I tried is eXpress which assigns mapping counts evenly between similar genes. . My suggestion is to allow users to switch off the re-assignment between similar genes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/107:652,test,tested,652,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107,1,['test'],['tested']
Testability,"We use Salmon a lot in my lab. It's a great tool. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I am running salmon quant using dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"", i.e. salmon (selective-alignment-based) v1.4.0. **Describe the bug**; When I run salmon I exits with an error code of 137. any idea what this means? I also noticed that the output directory is not created. **To Reproduce**; I am running the container on app.terra.bio, unfortunately, I can not share the workspace because the data is from identifiable human subjects. Bellow, I include the log file showing how I ran salmon. I think the bug may have something to do with the run time environment. Know what salmon exit codes mean would really help me figure out where my bug is. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"",; * Which reference (e.g. transcriptome) was used?; we have a custom reference based on g35. ; * Which read files were used?; * Which which program options were used?; * . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:618,log,log,618,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['log'],['log']
Testability,"We were given some test data - ~400,000 150 PE on two samples from a MiSeq run on a mosquito. They wanted to know recommended sequencing depth and whether they needed 150 PE or if they could get away with 100 SE. There is a decent-ish genome and transcriptome for the species (https://www.ncbi.nlm.nih.gov/genome/?term=aedes+albopictus), so we ran the 150 PE and artificially created 100 SE from R1 through our pipeline, which includes STAR plus Salmon. The STAR results were expected: 100 SE had ~40% mulitmapping / ~48% unique in genes and 150 BP improved to ~30% multimapping / ~57% unique in genes. Surprisingly, Salmon showed the opposite: 100 SE had a ~70% mapping rate while 150 PE has only a ~57% mapping rate. . We thought at first that Salmon maybe wasn't counting fragments if both ends didn't map but the answer in issue #31 says Salmon should be counting single-end mapped towards quantification. The first line in the salmon_quant.log file says ""Fragment incompatibility prior below threshold. Incompatible fragments will be ignored."" I couldn't find much in salmon quant --help-reads about fragment priors and then I found it was in pretty much all salmon_quant.logs we have, so that may not be the problem. We also thought the trouble may have something to do with the small number of fragments, so we ran through some mouse 150 PE + artificial 100 SE, that had 40M reads and also subsampled to 400K reads, but the salmon mapping rates were pretty much the same (~75%) regardless of type/length of reads or sequencing depth. So what do you think could be going on? I am worried that Salmon's ""better"" mapping percentage of 100 SE is not accurately measuring expression. We didn't test 150 SE because that is not a sequencing option with NovaSeq, but we could try it if you think it would help to figure out what is going on. Thanks,; Jenny",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/349:19,test,test,19,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/349,4,"['log', 'test']","['log', 'logs', 'test']"
Testability,"When using the -z option to obtain a SAM file and using that same SAM file as an input for a quantification, the following error is thrown:. ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.1.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { ../../gencode.v32.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { sal.bam }; # [ output ] => { salsal }; Logs will be written to salsal/logs; [2019-12-20 16:29:27.435] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 4; [2019-12-20 16:29:27.723] [jointLog] [info] numQuantThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""sal.bam"", fasta = ""../../gencode.v32.transcripts.fa"" . . . SAM file says target ENST00000481276.1|ENSG00000189339.12|OTTHUMG00000078639.4|OTTHUMT00000171590.1|SLC35E2B-202|SLC35E2B|2199|retained_intron| has length 2184, but the FASTA file contains a sequence of length [2200 or 2199]; ```. For this transcript the correct length is indeed 2199. The same error occurs when using a RapMap-produced SAM. OS is Ubuntu 18.04, salmon version 1.1.0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/465:430,Log,Logs,430,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/465,2,"['Log', 'log']","['Logs', 'logs']"
Testability,While Bioconda is working on resolving the issue for osx deployment of salmon (>v10.2). the following binary can be used for osx based testing of Salmon/Alevin. Note: The code has been compiled on Osx High Sierra (v 10.13.2) and can potentially create problem with other versions of osx.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/260:135,test,testing,135,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260,1,['test'],['testing']
Testability,"[BWTIncConstructFromPacked] 40 iterations done. 293988548 characters processed.; [BWTIncConstructFromPacked] 50 iterations done. 348084948 characters processed.; [BWTIncConstructFromPacked] 60 iterations done. 396161956 characters processed.; [BWTIncConstructFromPacked] 70 iterations done. 438888868 characters processed.; [BWTIncConstructFromPacked] 80 iterations done. 476860644 characters processed.; [BWTIncConstructFromPacked] 90 iterations done. 510606036 characters processed.; [BWTIncConstructFromPacked] 100 iterations done. 540594980 characters processed.; [BWTIncConstructFromPacked] 110 iterations done. 567245236 characters processed.; [BWTIncConstructFromPacked] 120 iterations done. 590928020 characters processed.; [bwa_index] 279.06 seconds elapse.; [bwa_index] Update BWT... 1.72 sec; [bwa_index] Pack forward-only FASTA... 1.90 sec; [bwa_index] Construct SA from BWT and Occ... 59.56 sec; [2018-06-25 19:34:53.084] [jLog] [info] done building index; ```. Doh, something unexpected from the logs, isn't it?. ```; $ ls -latr ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all; total 8374704; drwx------. 3 mmokrejs mmokrejs 4096 Jun 25 19:25 ..; -rw-r--r--. 1 mmokrejs mmokrejs 36158409 Jun 25 19:26 rsd.bin; -rw-r--r--. 1 mmokrejs mmokrejs 423777 Jun 25 19:26 duplicate_clusters.tsv; -rw-r--r--. 1 mmokrejs mmokrejs 294997212 Jun 25 19:26 txpInfo.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1157068836 Jun 25 19:26 sa.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1779709484 Jun 25 19:29 hash.bin; -rw-r--r--. 1 mmokrejs mmokrejs 75 Jun 25 19:29 refInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 9816 Jun 25 19:29 quasi_index.log; -rw-r--r--. 1 mmokrejs mmokrejs 666 Jun 25 19:29 header.json; -rw-r--r--. 1 mmokrejs mmokrejs 304768324 Jun 25 19:33 bwaidx.bwt; -rw-r--r--. 1 mmokrejs mmokrejs 76192062 Jun 25 19:33 bwaidx.pac; -rw-r--r--. 1 mmokrejs mmokrejs 50007825 Jun 25 19:33 bwaidx.ann; -rw-r--r--. 1 mmokrejs mmokrejs 89 Jun 25 19:33 bwaidx.amb; drwxr-xr-x. 2 mm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:15321,log,logs,15321,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['log'],['logs']
Testability,[Proposal] Travis CI to add test case easily,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/272:28,test,test,28,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/272,1,['test'],['test']
Testability,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.372] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.372] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.380] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.380] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.380] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.380] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:1722,Log,Logs,1722,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.380] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.380] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.380] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501370_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501370 }; Logs will be written to salmonRes_SRR1501370/logs; [2021-07-16 11:47:01.393] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.393] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.393] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.393] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.393] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.393] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:3011,Log,Logs,3011,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.387] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.387] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.387] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501372_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501372 }; Logs will be written to salmonRes_SRR1501372/logs; [2021-07-16 11:47:01.614] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.614] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.614] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.614] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.614] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.614] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:5589,Log,Logs,5589,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.393] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.393] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.393] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501369_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501369 }; Logs will be written to salmonRes_SRR1501369/logs; [2021-07-16 11:47:01.387] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.387] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.387] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.387] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.387] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.387] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:4300,Log,Logs,4300,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.610] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.610] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.610] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501373_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501373 }; Logs will be written to salmonRes_SRR1501373/logs; [2021-07-16 11:47:01.638] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.638] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.638] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.638] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.638] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.638] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:8167,Log,Logs,8167,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.614] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.614] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.614] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501371_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501371 }; Logs will be written to salmonRes_SRR1501371/logs; [2021-07-16 11:47:01.610] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.610] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.610] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.610] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.610] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.610] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:6878,Log,Logs,6878,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"[info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.; [2021-04-09 12:16:37.728] [alevinLog] [info] # Barcodes Used: 4000 / 4000.; [2021-04-09 12:16:37.729] [alevinLog] [info] Knee found left boundary at 102; [2021-04-09 12:16:37.862] [alevinLog] [info] Gauss Corrected Boundary at 52; [2021-04-09 12:16:37.862] [alevinLog] [info] Learned InvCov: 419.096 normfactor: 100.648; [2021-04-09 12:16:37.862] [alev",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:2175,test,tests,2175,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['test'],['tests']
Testability,"\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousands-of-live-salmon-fell-off-a-truck-in-oregon-and-into-a-creek/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:2754,log,log,2754,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,2,['log'],['log']
Testability,"] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15:45:46.199] [jointLog] [info] Mapping rate = 60.9633%. [2018-12-05 15:45:46.199] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 15:45:47.617] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-05 15:47:14.597] [alevinLog] [info] Total 1870793 UMI after deduplicating.; [2018-12-05 15:47:14.693] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 15:47:18.921] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. PBMC 3k shell log:; ```; ~/software/salmon/scripts/v1_10x/run.sh salmon alevin -lISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv. TEMPDIR is /tmp/tmp.WnzMm7GQBO; Running command [salmon alevin -lISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv -1 /tmp/tmp.WnzMm7GQBO/p1.fa -2 /tmp/tmp.WnzMm7GQBO/p2.fa -r pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-002-chunk-000.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:8878,log,log,8878,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['log'],['log']
Testability,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.638] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.638] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.638] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173891_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173891 }; Logs will be written to salmonRes_SRR2173891/logs; [2021-07-16 11:47:01.649] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.649] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.649] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.649] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:9454,Log,Logs,9454,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.649] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR2173892/logs; [2021-07-16 11:47:01.807] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.807] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.807] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.807] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.807] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.807] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR1501367/quant.sf ; Error in file(file, ""rt"") : cannot ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:10741,Log,Logs,10741,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. should be reported regardless of other arguments given.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:2367,test,tests,2367,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,1,['test'],['tests']
Testability,"` flag the option `--dumpCsvCounts` does not seem to work. **To Reproduce**; Salmon version 0.13.1 from Bioconda. `salmon alevin -l ISR -i ../salmon/index/ -1 R1_file -2 R2_file -o out_dir/ --tgMap ../salmon/txp2gene.tsv -p 20 --chromium --whitelist whitelist.txt --dumpFeatures --dumpCsvCounts`. I have a very problematic sample where the knee autodetection fails (way too high cell number). So I created a whitelist of the 5000 most frequent entries of the filtered_cb_frequency.txt. It seems to work as expected, but the quants_mat.csv is not created, which I need for further downstream analysis (Seurat). The quant_mat.gz is created though, is there a way to manually create a .csv from this file (it seems to be binary).; Thanks. P.S.: The alevin logs seem to contain some non-standard characters when the number of ""Barcodes used"" should be printed (maybe because of the colour highlighting?). **Expected behavior**; quants_mat.csv of the whitelisted cells should be created. **Logs**; ```; [2019-05-17 07:28:11.279] [alevinLog] [info] Processing barcodes files (if Present) . ; [2019-05-17 07:39:15.712] [alevinLog] [info] Done barcode density calculation.; [2019-05-17 07:39:15.712] [alevinLog] [info] # Barcodes Used: [32m346967519[0m / [31m347069857[0m.; [2019-05-17 07:39:15.731] [alevinLog] [info] Done importing white-list Barcodes; [2019-05-17 07:39:15.732] [alevinLog] [info] Total 4000 white-listed Barcodes; [2019-05-17 07:39:16.050] [alevinLog] [info] Done populating Z matrix; [2019-05-17 07:39:16.112] [alevinLog] [info] Done indexing Barcodes; [2019-05-17 07:39:16.112] [alevinLog] [info] Total Unique barcodes found: 3968995; [2019-05-17 07:39:16.112] [alevinLog] [info] Used Barcodes except Whitelist: 80709; [2019-05-17 07:39:16.858] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-05-17 07:39:16.868] [alevinLog] [info] parsing read library format; [2019-05-17 08:05:24.319] [alevinLog] [info] Starting optimizer. [2019-05-17 08:06:06.627] [ale",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/363:1128,Log,Logs,1128,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/363,1,['Log'],['Logs']
Testability,"```bash; $ qacct -j 9958683 -t 3; ==============================================================; qname shared.q; hostname compute-068.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-txQuant-alzheimer.gsk_phaseII; jobnumber 9958683; taskid 3; account sge; priority 0; qsub_time Mon Mar 6 23:18:58 2017; start_time Mon Mar 6 23:19:12 2017; end_time Tue Mar 7 17:27:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:21081,test,test,21081,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['test'],['test']
Testability,"a)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Load",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:2020,log,logs,2020,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['log'],['logs']
Testability,"able | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --geneMap Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + genome as a 'gentrome'; * Which read files were used? newly sequenced bulk RNAseq reads. **Expected behavior**; All samples with similar numbers of reads using the same index to finish in roughly the same amount of time. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following informa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:10769,log,logfile,10769,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['log'],['logfile']
Testability,"aded executable, through bioconda)?. From our dockerfile:; ```; # Install Salmon; ENV SALMON_VERSION 0.9.1; RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # Create soft link `/usr/local/bin/salmon` that points to the actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq -p 20 -o /home/user/data_store/TEST/test_sample/processed/ --seqBias --gcBias --dumpEq --writeUnmappedNames; ```. **Expected behavior**; This happened while I was modifying the tests for running salmon. I'm guessing that my code isn't quite right yet so something going wrong isn't quite unexpected. However I would have expected an error to come out of Salmon rather than producing JSON which is invalid. **Desktop (please complete the following inf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/279:1450,test,test-assets,1450,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279,1,['test'],['test-assets']
Testability,"ads:. `minimap2 -ax splice:hq -uf ref.fa reads.fq > aln.sam`. This approach seems to employ a splicing aware algorithm against a genomic reference, using canonical splicing signals to help map the transcripts. However, this method doesn't seem to be applicable to Salmon given the requirement that the reads are aligned directly to the transcriptome (hence the need to account for splicing with '_-ac splice_' is lost). An alternative approach I've seen (i.e., the one used in ONT's own DGE [pipeline](https://github.com/nanoporetech/pipeline-transcriptome-de)) is to use minimap2 to align to the transcriptome reference but to retain a large number of secondary mappings (-N 100 in minimap2):. `minimap2 -ax map-ont -N 100 transcriptome.fa reads.fq`. This makes more sense in terms of the _-ax_ preset used, but I guess I'm just wondering then what the optimal input for Salmon would be in order to get the most accurate count data? I know secondary mappings are important for the algorithm to calculate uncertainty / maximum likelihood, but is there an recommend number of these to retain? The logic behind allowing for a high number of secondary alignments when using a transcriptome reference is to account for the high similarity among isoforms. From a high-level view I could see how this might be problematic though, depending on how Salmon actually uses the alternate mappings (i.e., is it just for the statistics or does it affect the counts as well?). . I've also seen groups toying with adjusting the _-p_ setting in minimap2 which sets the minimal ratio of the secondary to primary alignment score that is allowed in order to report the secondary mapping. Surveying the forums and discussion boards, values of _-N_ ranging from the default of 5 to 100 and of _-p_ ranging from 0 to 1, (i.e., anything) seem to be acceptable. Given this ambiguity, I figured going to the 'source' and asking the creators what Salmon actually wants might be beneficial, so if yall have done any testing or ha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/790:1765,log,logic,1765,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790,1,['log'],['logic']
Testability,"alevin (single-cell mode). **Describe the bug**; Getting error "" Size of the feature file doesn't match"" in the log file while starting to make feature Matrix. Latest version of Salmon was used",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/407:112,log,log,112,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/407,1,['log'],['log']
Testability,"alevin (single-cell mode). **Describe the bug**; I receive the following ERROR: Txp to Gene Map not found for 102926 transcripts. **To Reproduce**; /usr/local/bin/salmon alevin -lISR -1 cells_CTTGTA_L001_R1_001.fastq.gz -2 cells_CTTGTA_L001_R2_001.fastq.gz --celseq2 -i AlevinIndex/ -p 8 -o alevin_output --tgMap gencode.primary_assembly.tsv. Specifically, please provide at least the following information:. * v0.12.0, compiled ; * FASTA file labeled ""Transcript sequences"" from https://www.gencodegenes.org/human/ ; * GTF file labeled ""Comprehensive gene annotation - PRI"" from https://www.gencodegenes.org/human/. **Expected behavior**; To receive the following files in the output dir; quants_mat.gz – Compressed count matrix.; quants_mat_cols.txt – Column Header (Gene-ids) of the matrix.; quants_mat_rows.txt – Row Index (CB-ids) of the matrix. [alevin.log](https://github.com/COMBINE-lab/salmon/files/2638932/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2638934/salmon_quant.log). The tgMap was created using `tximport` in R; ```; library(tximport); gtf <- paste0(local_path, ""/gencode.v29.annotation.gtf""); txdb <- makeTxDbFromGFF(gtf); txdf <- select(txdb, keys(txdb, ""GENEID""), ""TXNAME"", ""GENEID"") . txdf_switch <- data.frame(txdf$TXNAME, txdf$GENEID) #in order to switch the order TXNAME and GENEID apppear. write_tsv(txdf_switch, paste0(local_path, ""/gencode_annot/gencode.primary_assembly.v29.tsv""), col_names = FALSE). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/326:859,log,log,859,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326,4,['log'],['log']
Testability,"alevin (single-cell mode). I am trying to run alevin using a space separated list of (20) files as input. The fastq files we received from sequencing, were separated arbitrarily to keep them at about ~200 MB a file, but they are all the same sample and I wish to treat them as one library. There is no error produced, but it has been running for ~15 hours, and the log files are blank. As a side note, running each ""pair"" works just fine. . v0.12.1; compiled from source ; OS - Ubuntu Linux, x86_64 x86_64 x86_64 GNU/Linux. Alevin is supposed to be able to run with multiple read files, as specified here: https://github.com/COMBINE-lab/salmon/blob/master/doc/source/salmon.rst#providing-multiple-read-files-to-salmon. ```; Logs will be written to /alevin_outputSingleLibrary/quantSC/logs; ### alevin (dscRNA-seq quantification) v0.12.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { AlevinIndex/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { 12_CTTGTA_L001_R1_001.fastq.gz 12_CTTGTA_L001_R1_002.fastq.gz 12_CTTGTA_L001_R1_003.fastq.gz 12_CTTGTA_L001_R1_004.fastq.gz 12_CTTGTA_L001_R1_005.fastq.gz 12_CTTGTA_L001_R1_006.fastq.gz 12_CTTGTA_L001_R1_007.fastq.gz 12_CTTGTA_L001_R1_008.fastq.gz 12_CTTGTA_L001_R1_009.fastq.gz 12_CTTGTA_L001_R1_010.fastq.gz 12_CTTGTA_L002_R1_001.fastq.gz 12_CTTGTA_L002_R1_002.fastq.gz 12_CTTGTA_L002_R1_003.fastq.gz 12_CTTGTA_L002_R1_004.fastq.gz 12_CTTGTA_L002_R1_005.fastq.gz 12_CTTGTA_L002_R1_006.fastq.gz 12_CTTGTA_L002_R1_007.fastq.gz 12_CTTGTA_L002_R1_008.fastq.gz 12_CTTGTA_L002_R1_009.fastq.gz 12_CTTGTA_L002_R1_010.fastq.gz }; ### [ mates2 ] => { 12_CTTGTA_L001_R2_001.fastq.gz 12_CTTGTA_L001_R2_002.fastq.gz 12_CTTGTA_L001_R2_003.fastq.gz 12_CTTGTA_L001_R2_004.fastq.gz 12_CTTGTA_L001_R2_005.fastq.gz 12_CTTGTA_L001_R2_006.fastq.gz 12_CTTGTA_L001_R2_007.fastq.gz 12_CTTGTA_L001_R2_008.fastq.gz 12_CTTGTA_L001_R2_009.fastq.gz 12_CTTGTA_L001_R2_010.fastq.gz 12_CTTGTA_L002_R2_001.fastq.gz 12_CTTGTA_L002_R2_002.fastq.gz 12_CTTGTA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/329:365,log,log,365,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329,3,"['Log', 'log']","['Logs', 'log', 'logs']"
Testability,"almon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many pair",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:4309,log,logs,4309,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['log'],['logs']
Testability,"apping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:15592,Log,Logs,15592,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Log'],['Logs']
Testability,"ash; $ qacct -j 9987275 -t 3; ==============================================================; qname shared.q; hostname compute-051.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test.gsk_phaseII; jobnumber 9987275; taskid 3; account sge; priority 0; qsub_time Wed Mar 8 11:37:17 2017; start_time Wed Mar 8 11:37:31 2017; end_time Wed Mar 8 11:37:36 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 5; ru_utime 0.368; ru_stime 3.680; ru_maxrss 537668; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 21951; ru_majflt 282; ru_nswap 0; ru_inblock 56; ru_oublock 1066296; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.mani",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:26563,test,tests,26563,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['test'],['tests']
Testability,"big_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins"": 4096,; ""mapping_type"": ""mapping"",; ""keep_duplicates"": false,; ""num_valid_targets"": 147493,; ""num_decoy_targets"": 61,; ""num_eq_classes"": 179681,; ""serialized_eq_classes"": false,; ""eq_class_properties"": [; ""range_factorized"",; ""gzipped""; ],; ""length_classes"": [; 496,; 768,; 1403,; 2707,; 100404; ],; ""index_seq_hash"": ""c0bf1b46db288bdf947208ef6410a0ced47fa770ab5284a1b231d958b283728b"",; ""index_name_hash"": ""db38822bce0fbc9a64cfb0b230f58119448d1c82706f1c515f210ccc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:2436,log,log,2436,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['log'],['log']
Testability,"biomart, and also generated a ENSMUST to ENSMUSG biomart.csv mapping file. Log is below. Since this is our first attempt at dropseq I also pulled out the first R1 and R2 sequences, in case these are somehow informative:. R1:; CAGGAGTGGATTTAGTCCTT; CGCGGAAGATGAGCATTATG; TTTCGTGCCGCCCTCCCTCG; ACAGCGACAAGGCTACCTCA; AATAGGGTCAACGATTAGAG; CGGATGGTTCCCAGCTGCCT; ACATTTCCGCGGTAGGGGGG; GTGGCAAGATTTAATATCCG. R2:; GAATANNNNNNNNNNNNNNNNNNNNAAGGATAACAGTTTCCAGTAC; GGACATTGGTCANCNNGCAGACACGGGTCAATGCGGCAAAAAACAA; GCAACNNNNNNNNNNNNNNNNNNNNGACNAGCGGGCTCACCATAAT; GNGTGNNNNNNNNNNNNNNNNNNNNCGANGTGATTTCTGCCCAGTG; CCCGACTGTNCTNNNNAAGGTCAGCAGTTCAAATCCCAGCAACCAC no hits found; GAGTGNNNNNNNNNNNNNNNCNNNGGCGGTTAGTGCTGAGAGTGCG; GCATACTGGTTGNCNNGCTGAAGTTTAAGGGCCTGGTTTTTTGAAA Cdv3 or Ncoa; GCACCCNANNNCNNNNCCGNAGNTCTGAAGATCAAATCACAGCAAA. ============================; ============================; ============================. Version Info: This is the most recent version of Salmon.; Logs will be written to mSpT3/logs; ### salmon (single-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ mates1 ] => { data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq }; ### [ mates2 ] => { data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq }; ### [ dropseq ] => { }; ### [ threads ] => { 10 }; ### [ output ] => { mSpT3 }; ### [ index ] => { mouse_cdna }; ### [ tgMap ] => { biomart.csv }. [2018-08-29 11:26:45.317] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-29 11:26:45.325] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 18 Million barcodes. [2018-08-29 11:28:11.683] [alevinLog] [info] Done barcode density calculation.; [2018-08-29 11:28:11.683] [alevinLog] [info] # Barcodes Used: 18693290 / 18712858.; [2018-08-29 11:28:17.405] [alevinLog] [info] Knee found left boundary at 2385 ; [2018-08-29 11:28:19.290] [alevinLog] [warning] Gauss Predi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:1372,Log,Logs,1372,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"c-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ salmon version; Version Info: This is the most recent version of salmon.; salmon v1.4.0. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index : create a salmon index; quant : quantify a sample; alevin : single cell analysis;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/636:1977,log,logs,1977,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636,1,['log'],['logs']
Testability,"ce sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [2021-04-09 12:16:42.800] [jointLog] [info] Counted 135 total reads in the equivalence classes; [2021-04-09 12:16:42.801] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done makin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:6318,Log,Log,6318,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['Log'],['Log']
Testability,"cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon quant is leading to segmentation fault when `--skipQuant` flag is set. The behavior may be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; #",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:1037,Log,Logs,1037,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Log'],['Logs']
Testability,"cession SRP034543. For some it works fine, but some there is segmentation fault when using the `--useFSPD`. For an example run where it fails, have a look at accession SRR2048254. Here is the command I ran along with output. ```; $ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa \; > -l IU \; > -1 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] D",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:1102,Log,Logs,1102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"cluding `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) was used? Human reference (GRCh38) (from the alevin-fry tutori",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:3879,log,log,3879,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['log'],['log']
Testability,cmake/TestSalmonQuasi.cmake: more verbose test failure messages.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/810:6,Test,TestSalmonQuasi,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810,2,"['Test', 'test']","['TestSalmonQuasi', 'test']"
Testability,"ctFromPacked] 70 iterations done. 438888868 characters processed.; [BWTIncConstructFromPacked] 80 iterations done. 476860644 characters processed.; [BWTIncConstructFromPacked] 90 iterations done. 510606036 characters processed.; [BWTIncConstructFromPacked] 100 iterations done. 540594980 characters processed.; [BWTIncConstructFromPacked] 110 iterations done. 567245236 characters processed.; [BWTIncConstructFromPacked] 120 iterations done. 590928020 characters processed.; [bwa_index] 279.06 seconds elapse.; [bwa_index] Update BWT... 1.72 sec; [bwa_index] Pack forward-only FASTA... 1.90 sec; [bwa_index] Construct SA from BWT and Occ... 59.56 sec; [2018-06-25 19:34:53.084] [jLog] [info] done building index; ```. Doh, something unexpected from the logs, isn't it?. ```; $ ls -latr ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all; total 8374704; drwx------. 3 mmokrejs mmokrejs 4096 Jun 25 19:25 ..; -rw-r--r--. 1 mmokrejs mmokrejs 36158409 Jun 25 19:26 rsd.bin; -rw-r--r--. 1 mmokrejs mmokrejs 423777 Jun 25 19:26 duplicate_clusters.tsv; -rw-r--r--. 1 mmokrejs mmokrejs 294997212 Jun 25 19:26 txpInfo.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1157068836 Jun 25 19:26 sa.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1779709484 Jun 25 19:29 hash.bin; -rw-r--r--. 1 mmokrejs mmokrejs 75 Jun 25 19:29 refInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 9816 Jun 25 19:29 quasi_index.log; -rw-r--r--. 1 mmokrejs mmokrejs 666 Jun 25 19:29 header.json; -rw-r--r--. 1 mmokrejs mmokrejs 304768324 Jun 25 19:33 bwaidx.bwt; -rw-r--r--. 1 mmokrejs mmokrejs 76192062 Jun 25 19:33 bwaidx.pac; -rw-r--r--. 1 mmokrejs mmokrejs 50007825 Jun 25 19:33 bwaidx.ann; -rw-r--r--. 1 mmokrejs mmokrejs 89 Jun 25 19:33 bwaidx.amb; drwxr-xr-x. 2 mmokrejs mmokrejs 4096 Jun 25 19:34 .; -rw-r--r--. 1 mmokrejs mmokrejs 95 Jun 25 19:34 versionInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 115 Jun 25 19:34 indexing.log; -rw-r--r--. 1 mmokrejs mmokrejs 4876291928 Jun 25 19:34 bwaidx.sa; $; ```. Hope this helps.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:15969,log,log,15969,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,2,['log'],['log']
Testability,"d 254gb. lsb_release -a; ```; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 6.4 (Carbon); Release:	6.4; Codename:	Carbon; ```. Do you have any idea what can be the causing the error?. Thanks. We are using the precompiled salmon bin and running it with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog] [info] Loading Suffix Array ; [2017-03-15 12:19:05.982] [stderrLog] [info] Loading Transcript Info ; Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129:1516,Log,Logs,1516,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129,1,['Log'],['Logs']
Testability,"d concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:2179,Log,Logs,2179,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"d exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Su",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:6641,log,logs,6641,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['log'],['logs']
Testability,"d slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) was used? Human reference (GRCh38) (from the alevin-fry tutorial [here](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz)); * Which read files were used? See attached subsampled sub_R1.fastq.gz and sub_R2.fastq.gz fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:4156,log,log,4156,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,2,['log'],"['log', 'logs']"
Testability,d14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures. TEMPDIR is /tmp/tmp.lLLibfwH4G; Running command [salmon alevin -l ISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures -1 /tmp/tmp.lLLibfwH4G/p1.fa -2 /tmp/tmp.lLLibfwH4G/p2.fa -r ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:1909,test,test,1909,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['test'],['test']
Testability,"e got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq -p 20 -o /home/user/data_store/TEST/test_sample/processed/ --seqBias --gcBias --dumpEq --writeUnmappedNames; ```. **Expected behavior**; This happened while I was modifying the tests for running salmon. I'm guessing that my code isn't quite right yet so something going wrong isn't quite unexpected. However I would have expected an error to come out of Salmon rather than producing JSON which is invalid. **Desktop (please complete the following information):**. Our exact environment for running this is described here:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/dockerfiles/Dockerfile.salmon. The base image is `ubuntu:16.04`. **Additional context**; Here is the contents of `lib_format_counts.json` file (github won't let me upload it):; ```; {; ""read_files"": ""( /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq, /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq )"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 184,; ""num_assigned_fragments"": 184,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/279:2035,TEST,TEST,2035,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279,1,['TEST'],['TEST']
Testability,"e step6-txQuant-alzheimer.gsk_phaseII; jobnumber 9958683; taskid 3; account sge; priority 0; qsub_time Mon Mar 6 23:18:58 2017; start_time Mon Mar 6 23:19:12 2017; end_time Tue Mar 7 17:27:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:21380,log,logs,21380,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['log'],['logs']
Testability,"eads.fq > aln.sam`. This approach seems to employ a splicing aware algorithm against a genomic reference, using canonical splicing signals to help map the transcripts. However, this method doesn't seem to be applicable to Salmon given the requirement that the reads are aligned directly to the transcriptome (hence the need to account for splicing with '_-ac splice_' is lost). An alternative approach I've seen (i.e., the one used in ONT's own DGE [pipeline](https://github.com/nanoporetech/pipeline-transcriptome-de)) is to use minimap2 to align to the transcriptome reference but to retain a large number of secondary mappings (-N 100 in minimap2):. `minimap2 -ax map-ont -N 100 transcriptome.fa reads.fq`. This makes more sense in terms of the _-ax_ preset used, but I guess I'm just wondering then what the optimal input for Salmon would be in order to get the most accurate count data? I know secondary mappings are important for the algorithm to calculate uncertainty / maximum likelihood, but is there an recommend number of these to retain? The logic behind allowing for a high number of secondary alignments when using a transcriptome reference is to account for the high similarity among isoforms. From a high-level view I could see how this might be problematic though, depending on how Salmon actually uses the alternate mappings (i.e., is it just for the statistics or does it affect the counts as well?). . I've also seen groups toying with adjusting the _-p_ setting in minimap2 which sets the minimal ratio of the secondary to primary alignment score that is allowed in order to report the secondary mapping. Surveying the forums and discussion boards, values of _-N_ ranging from the default of 5 to 100 and of _-p_ ranging from 0 to 1, (i.e., anything) seem to be acceptable. Given this ambiguity, I figured going to the 'source' and asking the creators what Salmon actually wants might be beneficial, so if yall have done any testing or have recommendations I'd very appreciative.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/790:2657,test,testing,2657,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790,1,['test'],['testing']
Testability,"ebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq -p 20 -o /home/user/data_store/TEST/test_sample/processed/ --seqBias --gcBias --dumpEq --writeUnmappedNames; ```. **Expected behavior**; This happened while I was modifying the tests for running salmon. I'm guessing that my code isn't quite right yet so something going wrong isn't quite unexpected. However I would have expected an error to come out of Salmon rather than producing JSON which is invalid. **Desktop (please complete the following information):**. Our exact environment for running this is described here:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/dockerfiles/Dockerfile.salmon. The base image is `ubuntu:16.04`. **Additional context**; Here is the contents of `lib_format_counts.json` file (github won't let me upload it):; ```; {; ""read_files"": ""( /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq, /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq )"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 184,; ""num_assigned_fragments"": 184,; ""num_consistent_mappings"": 0,; ""num_inconsistent_mappings"": 255,; ""strand_mapping_bias"": NaN,; ""MSF"": ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/279:2181,test,tests,2181,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279,1,['test'],['tests']
Testability,"echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:22490,log,log,22490,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['log'],['log']
Testability,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:2736,log,logs,2736,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['log'],['logs']
Testability,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] Ther",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:4347,log,logs,4347,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['log'],['logs']
Testability,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:7568,log,logs,7568,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['log'],['logs']
Testability,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:9179,log,logs,9179,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['log'],['logs']
Testability,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:10790,log,logs,10790,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['log'],['logs']
Testability,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:12401,log,logs,12401,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['log'],['logs']
Testability,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.08",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:14012,log,logs,14012,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['log'],['logs']
Testability,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.26",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:17234,log,logs,17234,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['log'],['logs']
Testability,"ed, it is being set to 0.65; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:5308,log,logs,5308,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['log'],['logs']
Testability,"een struggling with this for a few days and would be very grateful for any advice on how to move forward. Thank you in advance. Here is my command:; ```; #!/bin/bash -l ; #SBATCH -J male_salmon_map; #SBATCH -t 700:00:00; #SBATCH -p high; #SBATCH --cpus-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:1094,Log,Logs,1094,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Log'],['Logs']
Testability,"ep1_S42_R1_001Aligned.out.bam leaf_infe_t2_rep3_S66_R1_001Aligned.out.bam leaf_infe_t3_rep1_S43_R1_001Aligned.out.bam leaf_infe_t3_rep3_S67_R1_001Aligned.out.bam leaf_infe_t4_rep1_S44_R1_001Aligned.out.bam leaf_infe_t4_rep3_S68_R1_001Aligned.out.bam leaf_infe_t5_rep1_S45_R1_001Aligned.out.bam leaf_infe_t5_rep3_S69_R1_001Aligned.out.bam leaf_infe_t6_rep1_S46_R1_001Aligned.out.bam leaf_infe_t6_rep3_S70_R1_001Aligned.out.bam leaf_mock_t1_rep1_S35_R1_001Aligned.out.bam leaf_mock_t1_rep3_S59_R1_001Aligned.out.bam leaf_mock_t2_rep1_S36_R1_001Aligned.out.bam leaf_mock_t2_rep3_S60_R1_001Aligned.out.bam leaf_mock_t3_rep1_S37_R1_001Aligned.out.bam leaf_mock_t3_rep3_S61_R1_001Aligned.out.bam leaf_mock_t4_rep1_S38_R1_001Aligned.out.bam leaf_mock_t4_rep3_S62_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:06:31.513] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:06:31.513] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] .",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:6718,Log,Logs,6718,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['Log'],['Logs']
Testability,eproduce**. * Salmon version: Release v0.11.3; * Installed from: Compiled. I also followed the instructions from the [alevin tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) to compile the `scripts/v1_10x/wrapper.cpp` file; * Reference transcriptome: [Homo_sapiens.GRCh37.cdna.all.fa](ftp://ftp.ensembl.org/pub/grch37/release-83/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh37.cdna.all.fa.gz); * Which read files were used? Either the [CD14+ Monocytes from the 10x v1 paper](http://s3-us-west-2.amazonaws.com/10x.files/samples/cell-exp/1.1.0/cd14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures. TEMPDIR is /tmp/tmp.lLLibfwH4G; Running command [salmon alevin -l ISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures -1 /tmp/tmp.lLLibfwH4G/p1.fa -2 /tmp/tmp.lLLibfwH4G/p2.fa -r ./fastqs/flowc,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:1341,test,test,1341,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['test'],['test']
Testability,"eq"": true,; > ""have_edge_vec"": false,; > ""SeqHash"": ""34c8b30e5d42a0d4459fb24e44ecef46af39893984bf9613001e925a7b1308b7"",; > ""NameHash"": ""b503f6a369add974e996e5f42942882b50c2bf1419400420255d32a88fb61a18"",; > ""SeqHash512"": ""4b94376c390dd8e917d39dfbaed1092d9a661dbdb67635863f9a14b129948f1244929faf60f5b7c1d6fae142d87fb2c66455f49d0d3663f7498b275efad4ed93"",; > ""NameHash512"": ""46c31c9178b3290b2f57e9b682ea8eebe885ba9037e48cb6b385a0c70ce13e2b259400bc9bda4aca912c3b857edde7de41d11b1a7b9ccbe8b24df77808c22e59"",; > ""DecoySeqHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""DecoyNameHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""num_decoys"": 0,; > ""first_decoy_index"": 18446744073709551607,; > ""keep_duplicates"": false; > }. And the command I used:. `/home/bayegy/pipelines/metagenome/softwares/salmon-latest_linux_x86_64/bin/salmon quant --validateMappings -i /media/bayegy/disk1/Projects/qianquan-zhangke/result/Assembly_out//salmon_index -l A -p 90 --meta -1 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_1.fastq.gz -2 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_2.fastq.gz -o /media/bayegy/disk1/Projects/qianquan-zhangke/result/salmon_out//YGSC11.quant`. Sometimes, salmon would stay at the step of ""Starting optimizer"" for hours(10 hours at least). The CPU utilization is 100%, but the procedure never move forward. > [2020-06-04 12:06:12.254] [jointLog] [info] Mapping rate = 91.8009%; > ; > [2020-06-04 12:06:12.254] [jointLog] [info] finished quantifyLibrary(); > [2020-06-04 12:06:12.254] [jointLog] [info] Starting optimizer. The funny thing is that salmon would pass this step in no time if I restart the procedure with same command. It is annoying that I have to check the log time to time to restart salmon when it get blocked. I wonder what is the possible reason for this and how can i stop this from happening again. . Many thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/532:2294,log,log,2294,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/532,1,['log'],['log']
Testability,"es where the data come from and how I invoked salmon. * Which read files were used?. See above. * Which which program options were used?. I used the bash script from ; https://combine-lab.github.io/salmon/getting_started/. **Expected behavior**. I expected an output indicating successful quantification. **Screenshots**. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/317:1648,Log,Logs,1648,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"essImpl<cereal::NameValuePair<bool&>, (this=0x00007fffffff4990, t=0x00007fffffff44f8)0>(cereal::NameValuePair<bool&> const&) at cereal.hpp:505:9; frame #10: 0x00000000004e0e49 salmon`void cereal::OutputArchive<cereal::JSONOutputArchive, 0u>::process<cereal::NameValuePair<bool&> >(this=0x00007fffffff4990, head=0x00007fffffff44f8) at cereal.hpp:417:15; frame #11: 0x0000000000483895 salmon`cereal::JSONOutputArchive& cereal::OutputArchive<cereal::JSONOutputArchive, 0u>::operator(this=0x00007fffffff4990, args=0x00007fffffff44f8)<cereal::NameValuePair<bool&> >(cereal::NameValuePair<bool&>&&) at cereal.hpp:311:15; frame #12: 0x0000000000569d2b salmon`fixFasta(parser=0x00000008018dd000, decoyNames=0x00007fffffff66c8, keepDuplicates=false, k=31, sepStr="" \t"", expect_transcriptome=true, iomutex=0x00007fffffff5f80, log=<unavailable>, outFile=<unavailable>, refIdExtensions=size=40811, shortRefs=size=1) at FixFasta.cpp:456:5; frame #13: 0x000000000056d58f salmon`fixFastaMain(args=size=7, refIdExtension=size=40811, shortRefs=size=1, log=<unavailable>, hasFeatures=false) at FixFasta.cpp:684:16 ; frame #14: 0x0000000000471f33 salmon`pufferfishIndex(indexOpts=0x00007fffffffdcd8) at PufferfishIndexer.cpp:429:17; frame #15: 0x0000000000983a5c salmon`salmonIndex(int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) [inlined] SalmonIndex::buildPuffIndex_(this=<unavailable>, indexDir=(m_pathname = ""athal_index""), idxOpt=<unavailable>) at SalmonIndex.hpp:111:15; frame #16: 0x0000000000983a32 salmon`salmonIndex(int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) [inlined] SalmonIndex::build(this=<unavailable>, indexDir=(m_pathname = ""athal_index""), idxOpt=<unavailable>) at SalmonIndex.hpp:76; frame #17: 0x00000000009839c3 salmon`salmonIndex(argc=<unavailable>, argv=<unavailable>, (null)=<unavailable>) at BuildSalmonIndex.cpp:236; frame #18: 0x000000000097a673 salmon`main [inlined] std::__1::__function::__val",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/725:4858,log,log,4858,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/725,1,['log'],['log']
Testability,"f range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.; [2021-04-09 12:16:37.728] [alevinLog] [info] # Barcodes Used: 400",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:1888,test,tests,1888,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['test'],['tests']
Testability,"fasta file, I get the following output and error message:. Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.4.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { all_transcripts.fa }; # [ libType ] => { A }; # [ threads ] => { 10 }; # [ alignments ] => { /groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Sal; mon/4010760_5_mono_S58_L002_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L003_R1_001.fastq_AT; _QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L004_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.b; am }; # [ output ] => { 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam"", fasta = ""a; ll_transcripts.fa"" . . .done; [2021-03-05 18:20:24.846] [jointLog] [info] replaced 1216 non-ACGT nucleotides with random nucleotides; processed 0 reads in current round[2021-03-05 18:20:25.180] [jointLog] [info] Automatically detected most likely library type as ISR; processed 3000000 reads in current round[2021-03-05 18:20:39.705] [jointLog] [info]; The alignment group queue pool h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/638:1490,log,logs,1490,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638,1,['log'],['logs']
Testability,"fferent RNAseq experiments). So to make it quick I am only passing two transcripts to Salmon (T - 1, and T - 2) for version 1 and 2 of the transcript, where version 2 has the 2nd exon (of 4 total exons) removed. . Now I know Salmon was created to map reads to a large number of transcripts across the whole genome, but I believe it still should be possible to narrow down the view to only 1 gene with 2 versions. I believe I just need to set the parameters right, but I also want to set the parameters in a general way so that my script can work across different species with different input RNAseq data. The other problem is that we currently do not have an idea of what proportion of these two versions of the gene should actually exist in the RNAseq data I have (which we didn't perform but just grabbed a random sample from GenBank to test with). My adviser wants to first try and test it computationally first and then verify it in the lab (which is somewhat backwards in my mind, as it's really just a shot in the dark and from my preliminary analysis of Salmon, different parameters can drastically change the proportions of the two versions). . As you can see below, I have tried some parameter settings that I thought would be helpful (particularly ```--quasiCoverage```). But again I could be wrong and would like to know your opinions in the matter. . These runs were all performed with this 'default' run: ; ```; salmon quant -i index -l A -1 reads_1.fq -2 reads_2.fq --validateMappings -p 20 --numPreAuxModelSamples 250 --numAuxModelSamples 1000 -o output ; ```; I changes the ```AuxModelSamples``` to low values as I was generally only mapping 6000 reads to the two transcripts in total, so I didn't think they were working at the default settings. Below is also a small chart of some of my runs (which included quasi-mapping and selective-alignment), but what you can get is that there is a large variance between parameters. Particularly ```--seqBias``` showed a dramatic drop in pred",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/401:1815,test,test,1815,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401,1,['test'],['test']
Testability,"g reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; ------------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:3697,Log,Logs,3697,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"g] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.6252%. [2017-08-02 14:41:46.432] [jointLog] [info] finished quantifyLibrary(); [2017-08-02 14:41:46.446] [jointLog] [info] Starting optimizer; [2017-08-02 14:41:46.508] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-08-02 14:41:46.510] [jointLog] [info] iteration = 0 | max rel diff. = 2.50175; [2017-08-02 14:41:46.521] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) /home/ngs/programs/salmon/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i ""$path_dr_salmonindex_transcriptome_ercc"" -o ""$newfilename-salmon-quant"" -g ""$path_dr_gtf"" -l ""U"" -p 1 --fldMax 50 --fldMean 43 --seqBias --numBootstraps 10 -r <(zcat $1). ```; </details>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:3104,Assert,Assertion,3104,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['Assert'],['Assertion']
Testability,"gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:3249,Log,Logs,3249,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['Log'],['Logs']
Testability,"github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. Which read files were used?; See above. Which which program options were used?; I used the bash script from; https://combine-lab.github.io/salmon/getting_started/. Expected behavior. I expected an output indicating successful quantification. Screenshots. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318:1654,Log,Logs,1654,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HTTPerror . and by building from source and I don't understand how to do it from the website . How can I do it on macOS Monterey M1 Max chip ? . thanks a lot for you help in advance . Since it's the v 1.3.0 is it possible to update the brew formula to 1.9.0 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/787:1717,log,log,1717,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787,2,['log'],['log']
Testability,"h a cryptic error message, maybe you can help me sort this out.; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21 10:00:40.560] [jointLog] [info] Index contained 35448 targets. terminate called after throwing a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/210:1035,Log,Logs,1035,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"h read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins""",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:1966,log,log,1966,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['log'],['log']
Testability,"have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; Charles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682:1334,test,testing,1334,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682,1,['test'],['testing']
Testability,"he transcripts. The first used BAM files where shuffled (with samtools bamshuf) as recommended in the docs. To exclude an error on my side I did:; - try unshuffled BAM files --> Segfault; - try older Salmon Version (7.2) --> Segfault; - build Salmon from source --> Segfault; - use different transcriptdata (see below) --> Segfault. The segfault happens after all reads (in all files) are processed:; `processed 48000000 reads in current roundSegmentation fault`. ### Example workflow:. Get the read data from [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?run=ERR1433122) for example with SRA Toolkit:; `vdb-dump -f fastq --gzip --output-file test.fastq.gz ERR1433122`. Then use STAR:. First build a genome index for the reference transcriptset from [here](https://ics.hutton.ac.uk/atRTD/) and the [TAIR10 genome](https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files); You probably have to rename the chromosomes either in the .gtf or .fas file, to have consistent names. `STAR --runThreadN 4 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles TAIR10_chr_all_edited.fas --sjdbGTFfile AtRTD2_19April2016.gtf --sjdbOverhang 100`. Then map:. `STAR --runThreadN 4 --genomeDir genome_index --readFilesCommand zcat --readFilesIn test.fastq.gz --sjdbOverhang 100 --sjdbGTFfile AtRTD2_19April2016.gtf --outFileNamePrefix mapping/ --quantMode TranscriptomeSAM`. and make a .fa file from the genome and the .gtf with:; `gffread -w gff_merged.fa -g TAIR10_chr_all_edited.fas AtRTD2_19April2016.gtf`. Now make a copy of the ""Aligned.toTranscriptome.out.bam"" (for the sake of simplicity) and try; `salmon quant -l A -a Aligned.toTranscriptome.out.bam Aligned.toTranscriptome.out_copy.bam -t gff_merged.fa -o ./out/`. Then the above mentioned segfault happens. The only workaround I found is to merge the BAM files of the replicates with ""samtools merge"". Any idea why the segfault appears?. Cheers,; Tobi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/145:1553,test,test,1553,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145,1,['test'],['test']
Testability,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/54:1731,log,log,1731,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54,4,['log'],"['log', 'logs']"
Testability,"hi, I am running Salmon-1.2.1 on my MacBook with Sierra 10.13.6. I try to run Salmon binary with terminal, and I get this error. How'd do solve this problem? . Last login: Sat May 2 23:14:08 on ttys007; /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; Maysons-MacBook-Air:~ maysonlin$ /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; dyld: Library not loaded: @rpath/libtbbmalloc.dylib; Referenced from: /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/bin/salmon; Reason: image not found; Abort trap: 6; logout; Saving session...; ...copying shared history...; ...saving history...truncating history files...; ...completed. [Process completed]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/517:165,log,login,165,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517,2,['log'],"['login', 'logout']"
Testability,"his (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:5926,Log,Logs,5926,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Log'],['Logs']
Testability,https://travis-ci.org/Homebrew/homebrew-science/jobs/114404533#L1110-L1115. ```; /bin/sh ../libtool --tag=CC --mode=compile /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: 'lzma.h' file not found; #include <lzma.h>; ^; 1 error generated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/45:342,test,test,342,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45,1,['test'],['test']
Testability,"immed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq --validateMappings -p 12 --output salmon_out`. But here's the output:. ```; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { transcripts_index }; ### [ libType ] => { IU }; ### [ mates1 ] => { IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/426:1859,Log,Logs,1859,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"ion of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; ---------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:2204,Log,Logs,2204,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['Log'],['Logs']
Testability,"ion"": ""1.1.0"",; ""index"": ""results/salmon/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant"",; """": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""writeMappings"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""threads"": ""20"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. <details><summary>Salmon run w/ quasi mapping method</summary>; <p>. ```python; rule salmon_index_test:; input:; tcp = TRANSCRIPTS; output:; directory(""results/salmon_test/index""); priority:1; log:; ""results/salmon_test/logs/index.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon index -p {threads} -t {input.tcp} -i {output}; """""". rule salmon_quant_test:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon_test/index""; output:; directory(""results/salmon_test/quant/{smp}_salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/479:3487,log,log,3487,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479,2,['log'],"['log', 'logs']"
Testability,"ionBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; --------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:3284,log,logs,3284,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['log'],['logs']
Testability,"ipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; |",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:2363,Log,Logs,2363,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:2705,Log,Logs,2705,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Log'],['Logs']
Testability,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:4316,Log,Logs,4316,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Log'],['Logs']
Testability,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:7537,Log,Logs,7537,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Log'],['Logs']
Testability,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:9148,Log,Logs,9148,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Log'],['Logs']
Testability,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:10759,Log,Logs,10759,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Log'],['Logs']
Testability,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:12370,Log,Logs,12370,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Log'],['Logs']
Testability,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read libra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:13981,Log,Logs,13981,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Log'],['Logs']
Testability,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read libra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:17203,Log,Logs,17203,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Log'],['Logs']
Testability,"isabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:2487,log,log,2487,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['log'],['log']
Testability,"jobnumber 9958683; taskid 3; account sge; priority 0; qsub_time Mon Mar 6 23:18:58 2017; start_time Mon Mar 6 23:19:12 2017; end_time Tue Mar 7 17:27:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:21419,log,logs,21419,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['log'],['logs']
Testability,"l -c bioconda salmon; Arabidopsis Thaliana reference genome was used - TAIR10_chr_all.fas - from here: https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files. 3.; Alignment was done using STAR. 4.; See command below for options used. 5.; Linux login01 3.10.0-1160.el7.x86_64 #1 SMP Mon Oct 19 16:18:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. 6. Output, for success case, one file only. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam -o salmonquant; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { salmonquant }; Logs will be written to salmonquant/logs; [2023-01-29 16:02:11.267] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:02:11.308] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment gro",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:1753,Log,Logs,1753,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-12-05 15:10:07.252] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ../hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ dumpFeatures ] => { }; ### [ mates1 ] => { /tmp/tmp.lLLibfwH4G/p1.fa }; ### [ mates2 ] => { /tmp/tmp.lLLibfwH4G/p2.fa }; ### [ unmatedReads ] => { ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/rea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:3755,test,test,3755,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,2,"['log', 'test']","['logs', 'test']"
Testability,"le. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; ------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:2256,log,logs,2256,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['log'],['logs']
Testability,"ligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:6602,Log,Logs,6602,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['Log'],['Logs']
Testability,"lmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd797e8700 (LWP 27869)]; [New Thread 0x7ffcf97e7700 (LWP 27870)]; [2018-06-08 11:55:47.387] [alevinLog] [info] Processing barcodes files (if Present). processed 6 Million barcodes[New Thread 0x7ffc77265700 (LWP 27920)]; [New Thread 0x7ffbf7264700 (LWP 27921)]; [New Thread 0x7ffb77263700 (LWP 27922)]; [New Thread 0x7ffaf7262700 (LWP 27923)]; [New Thread 0x7ffa77261700 (LWP 27924)]; [New Thread 0x7ff",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:1640,Log,Logs,1640,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"loaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:1745,log,logs,1745,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['log'],['logs']
Testability,log(CPM) and TPM are so different,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/812:0,log,log,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/812,1,['log'],['log']
Testability,"mary>Salmon run w/ SFA method</summary>; <p>. ```python; rule salmon_meta:; input:; ref= REFERENCE,; tcp= TRANSCRIPTS; output:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; bak=""results/salmon/decoy/decoys.txt.bak""; conda:; ""../envs/salmon.yaml""; shell:; """"""; grep ""^>"" {input.ref} | cut -d "" "" -f 1 > {output.decoy}; sed -i.bak -e 's/>//g' {output.decoy}; cat {input.tcp} {input.ref} > {output.gent}; """""". rule salmon_index:; input:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; output:; directory(""results/salmon/index""); conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon index -p {threads} -t {input.gent} -d {input.decoy} -i {output}; """""". if config[""salmon""][""mapping_mode""]:; rule salmon_quant_mapping:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon/index""; output:; directory(""results/salmon/quant/{smp}_salmon_quant""),; mappings=""results/salmon/quant/{smp}_salmon_quant/{smp}_salmon_mappings""; log:; 		""results/salmon/logs/{smp}.salmon.log""; conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames --writeMappings={output.mappings} -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ SFA method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73188783-62605d80-40f1-11ea-87ef-e16050f94e60.png). </p>; </details>. <details><summary>cmd_info.json (SFA)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogae",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/479:1839,log,log,1839,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479,2,['log'],"['log', 'logs']"
Testability,"me 0.368; ru_stime 3.680; ru_maxrss 537668; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 21951; ru_majflt 282; ru_nswap 0; ru_inblock 56; ru_oublock 1066296; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:27120,log,logs,27120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['log'],['logs']
Testability,"med/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant"",; """": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""writeMappings"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""threads"": ""20"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. <details><summary>Salmon run w/ quasi mapping method</summary>; <p>. ```python; rule salmon_index_test:; input:; tcp = TRANSCRIPTS; output:; directory(""results/salmon_test/index""); priority:1; log:; ""results/salmon_test/logs/index.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon index -p {threads} -t {input.tcp} -i {output}; """""". rule salmon_quant_test:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon_test/index""; output:; directory(""results/salmon_test/quant/{smp}_salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon_test/index"",; ""libType"":",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/479:3525,log,log,3525,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479,1,['log'],['log']
Testability,"med/Sample_8-15/8-15_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_23-31/23-31_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_43-52_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-45-54_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_39-47_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-5-11_221020_L002_R2.fastq.gz }; ### [ threads ] => { 100 }; ### [ validateMappings ] => { }; ### [ output ] => { salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant }; Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:9382,log,logs,9382,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['log'],['logs']
Testability,"metimes don't know what the right words are to describe what I am doing or trying to do (lol)!. With the fastq files of reads generated from my RNAseq experiment, I first ran FastQC. The quality of my data seemed to be fine as the per base sequence quality scores were 32+ and most of the other tests passed as well. Next, I built my index for Salmon using the fasta file from Gencode for the human transcriptome. Afterwards, I ran Salmon with the built index and had it automatically detect the library type. When the program was done aligning to the index, I saw that the file had a mapping rate of 40%. I guess what I'm asking is, is this an acceptable mapping rate or should I be concerned?? The reason I ask is because in the data I was working with while learning via the Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] There is 1 library.; [2020-09-05 13:51:07.828] [jointLog] [info] Loading pufferfish index; [2020-09-05 13:51:07.876] [jointLog] [info] Loading dense pufferfish index.; [2020-09-05 13:51:49.487] [jointLog] [info] done; [2020-09-05 13:51:49.551] [jointLog] [info] Index contained 228,754 targets; [2020",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/571:1325,log,logs,1325,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571,1,['log'],['logs']
Testability,"ml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Bec",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:4284,log,logs,4284,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['log'],['logs']
Testability,"mon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:1943,Log,Logs,1943,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['Log'],['Logs']
Testability,"n installed (compiled, downloaded executable, through bioconda)?; Installed with bioconda; * Which reference (e.g. transcriptome) was used? ; This transcriptome: https://drive.google.com/open?id=1XcsFUxJM6XaYEKh9BYdUoAyJSlWJLIiW. ; It's a mouse transcriptome with 3 additional transcripts at the end; * Which read files were used?; * Which which program options were used?; `salmon alevin -lISR -1 ./H2_S5_L003_R1_001.fastq.gz -2 H2_S5_L003_R2_001.fastq.gz --chromium -i salmon_index -p 8 -o alevin_output --tgMap txp2gene.tsv`. **Desktop (please complete the following information):**; - OS: CentOS; - Version:; Linux login1 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.3.1611 (Core); Release: 7.3.1611; Codename: Core. **Additional context**; ```; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-12 21:01:31.330] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 141 Million barcodes. [2018-06-12 21:08:38.126] [alevinLog] [info] Done barcode density calculation.; [2018-06-12 21:08:38.126] [alevinLog] [info] # Barcodes Used: 140111660 / 141062078.; [2018-06-12 21:08:42.014] [alevinLog] [info] Knee found left boundary at 127 ; [2018-06-12 21:08:55.712] [alevinLog] [warning] Gauss Prediction 12274 Too far from knee prediction skipping it;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237:1526,Log,Logs,1526,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"ncluded quasi-mapping and selective-alignment), but what you can get is that there is a large variance between parameters. Particularly ```--seqBias``` showed a dramatic drop in predicted T - 2 transcripts. ![image](https://user-images.githubusercontent.com/29610303/61421680-5899aa00-a8c5-11e9-8349-bd708316599d.png). Any suggestions onto parameters settings to help me with this narrow question?. Now onto some questions regarding some outputs. 1. I run into a segmentation fault (core dumped) when I try to run the experimental ```--posBias```. I am new to RNAseq, but I thought this might help with this particular RNAseq set as it was a PolyA tail selection and when mapping to the full genome there is an observed heavy mapping to exon 1 with decreased mapping over exon 2, 3 and 4. . 2. During my runs I have been using ```-l A``` as I will be using this method in my script so that Salmon can just select the best libtype based on the given sequence to help make my script less complex. However, I found something strange when I used ```-l A``` on my test sequence. I got a warning of >1% strand bias on the command line and in the lib_format_counts.json I see that Salmon selected ""IU"" which I believe to be the correct libtype as well, but got this:; ```; {; ""read_files"": [; ""/data/wyka/vamsi/SRR1174205_1_paired.fastq"",; ""/data/wyka/vamsi/SRR1174205_2_paired.fastq""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 5549,; ""num_assigned_fragments"": 5549,; ""num_frags_with_concordant_consistent_mappings"": 4190,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1359,; ""strand_mapping_bias"": 0.45441527446300719,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 2286,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1904,; ""SF"": 547,; ""SR"": 812,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```; When my strand mapping was 0.45 (which to be honest I am not sure how bad that actually is), but I noticed that my reads were mapped with the ISF, ISR, SF, and SR libtypes. Is that normal?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/401:3807,test,test,3807,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401,1,['test'],['test']
Testability,"nd tried setting --minAssignedFrags to 5, 3, 1 but always got the same warning and results. And here is my command for quantification (but I changed --minAssignedFrags parameter several times):. `salmon quant -i ../ref/salmon_index -l IU -1 SRR493372_1.fastq SRR493373_1.fastq SRR493374_1.fastq SRR493375_1.fastq SRR493376_1.fastq SRR493377_1.fastq -2 SRR493372_2.fastq SRR493373_2.fastq SRR493374_2.fastq SRR493375_2.fastq SRR493376_2.fastq SRR493377_2.fastq --validateMappings --minAssignedFrags 1 -o transcripts_quant`. I then tried different transcriptome files for building indices. I built the index using the following transcriptome respectively: (1) another decoy-aware transcriptome with GRCh38.p13.genome.fa.gz and gencode.v40.transcripts.fa.gz from Gencode using the same tutorial above (2) gencode.v40.transcripts.fa.gz from Gencode only (3) Homo_sapiens.GRCh38.cdna.all.fa.gz from Ensembl ; But I still received the same warning and 0 fragments mapped results. Below is one of the log file (they all look similar):. > [2022-04-15 23:47:55.696] [jointLog] [info] setting maxHashResizeThreads to 48 ; [2022-04-15 23:47:55.696] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored. ; [2022-04-15 23:47:55.696] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65 ; [2022-04-15 23:47:55.696] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35. ; [2022-04-15 23:47:55.696] [jointLog] [info] parsing read library format ; [2022-04-15 23:47:55.696] [jointLog] [info] There is 1 library. ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading pufferfish index ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading dense pufferfish index. ; [2022-04-15 23:49:52.320] [jointLog] [info] done ; [2022-04-15 23:49:52.320] [jointLog] [info] Index contained 245,900 targets ; [2022-04-15 23:49:52.424] [jointLog] [info] Number of decoys : 63",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/768:2085,log,log,2085,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/768,1,['log'],['log']
Testability,"ne is split into two version by exon skipping and is not alternatively spliced. I also want to make this process fast as the idea would be to look for differences in the proportions of gene versions that are created based on a large databases of RNAseq data (easily 200+ different RNAseq experiments). So to make it quick I am only passing two transcripts to Salmon (T - 1, and T - 2) for version 1 and 2 of the transcript, where version 2 has the 2nd exon (of 4 total exons) removed. . Now I know Salmon was created to map reads to a large number of transcripts across the whole genome, but I believe it still should be possible to narrow down the view to only 1 gene with 2 versions. I believe I just need to set the parameters right, but I also want to set the parameters in a general way so that my script can work across different species with different input RNAseq data. The other problem is that we currently do not have an idea of what proportion of these two versions of the gene should actually exist in the RNAseq data I have (which we didn't perform but just grabbed a random sample from GenBank to test with). My adviser wants to first try and test it computationally first and then verify it in the lab (which is somewhat backwards in my mind, as it's really just a shot in the dark and from my preliminary analysis of Salmon, different parameters can drastically change the proportions of the two versions). . As you can see below, I have tried some parameter settings that I thought would be helpful (particularly ```--quasiCoverage```). But again I could be wrong and would like to know your opinions in the matter. . These runs were all performed with this 'default' run: ; ```; salmon quant -i index -l A -1 reads_1.fq -2 reads_2.fq --validateMappings -p 20 --numPreAuxModelSamples 250 --numAuxModelSamples 1000 -o output ; ```; I changes the ```AuxModelSamples``` to low values as I was generally only mapping 6000 reads to the two transcripts in total, so I didn't think they we",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/401:1769,test,test,1769,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401,1,['test'],['test']
Testability,"ned_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-11-04 16:49:44.699] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""combined_BC01_aligned.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa"" . . .done. processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2152693 Bus error (core dumped); ```. Any advice on this would be highly appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/898:1705,Log,Logs,1705,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"nfo] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion table' failed.; Aborted; ```. I also checked the log file and it shows nothing except. ```; more indexing.log; [2016-03-17 10:41:34.655] [jointLog] [info] building index; ```. output:. ```; -rw-r--r-- 1 vdas DPT 59 Mar 17 10:41 indexing.log; -rw-r--r-- 1 vdas DPT 331863951 Mar 17 10:42 rsd.bin; -rw-r--r-- 1 vdas DPT 2654912013 Mar 17 10:43 txpInfo.bin; -rw-r--r-- 1 vdas DPT 21239292320 Mar 17 10:59 sa.bin; ```. So can you give me a workaround or inputs to solve this issue? Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/49:2912,log,log,2912,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49,3,['log'],['log']
Testability,ng-based) v0.11.1 and was installed through bioconda.; The command being run is:. ```; salmon quant -i /data2/csijcs/hg38/hg38.transcriptome.index -l A \; -1 ${dir}/${samp}/${samp}_R1_001.fastq.gz \; -2 ${dir}/${samp}/${samp}_R2_001.fastq.gz \; -p 16 -o ${dir}/salmon_quants/${samp}; ```. The output is:; ```; Processing sample PBMC_AML_BM_001; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:1447,Log,Logs,1447,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"ng. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{out_data}/ref/idx/rank.bin"",; ""{out_data}/ref/idx/refAccumLengths.bin"",; ""{out_data}/ref/idx/ref_indexing.log"",; ""{out_data}/ref/idx/reflengths.bin"",; ""{out_data}/ref/idx/refseq.bin"",; ""{out_data}/ref/idx/seq.bin"",; ""{out_data}/ref/idx/versionInfo.json""; params:; job_name = ""build_idx"",; memory = ""select[mem>64] rusage[mem=64]"",; out_dir = ""{out_data}/ref/idx""; log:; ""logs/build_idx.out""; threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:2436,log,log,2436,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['log'],['log']
Testability,"nning this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:3861,log,logs,3861,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['log'],['logs']
Testability,"noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 6.4 (Carbon); Release:	6.4; Codename:	Carbon; ```. Do you have any idea what can be the causing the error?. Thanks. We are using the precompiled salmon bin and running it with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog] [info] Loading Suffix Array ; [2017-03-15 12:19:05.982] [stderrLog] [info] Loading Transcript Info ; Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34.791] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129:1550,log,logs,1550,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129,1,['log'],['logs']
Testability,"nyone could pull me out, I would appreciate it. . I index the bins using the default kmer(31), and the length of reads is PE150. And the following is the command I use:; `salmon quant -i assembly_index/ -l A -1 9998_1.fastq.gz -2 9998_2.fastq.gz -p 100 -o 9998.quant --meta`. The log file:; ```{shell}; $cat lib_format_counts.json ; {; ""read_files"": [; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_1.fastq.gz"",; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_2.fastq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:1477,log,log,1477,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,2,['log'],"['log', 'logs']"
Testability,"ode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:1939,log,logs,1939,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['log'],['logs']
Testability,"on linux, binary download of salmon: salmon-0.11.2-linux_x86_64. Trying to process some Drop-seq data. Command:. ./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv. Where I have downloaded the cdna as FASTA from biomart, and also generated a ENSMUST to ENSMUSG biomart.csv mapping file. Log is below. Since this is our first attempt at dropseq I also pulled out the first R1 and R2 sequences, in case these are somehow informative:. R1:; CAGGAGTGGATTTAGTCCTT; CGCGGAAGATGAGCATTATG; TTTCGTGCCGCCCTCCCTCG; ACAGCGACAAGGCTACCTCA; AATAGGGTCAACGATTAGAG; CGGATGGTTCCCAGCTGCCT; ACATTTCCGCGGTAGGGGGG; GTGGCAAGATTTAATATCCG. R2:; GAATANNNNNNNNNNNNNNNNNNNNAAGGATAACAGTTTCCAGTAC; GGACATTGGTCANCNNGCAGACACGGGTCAATGCGGCAAAAAACAA; GCAACNNNNNNNNNNNNNNNNNNNNGACNAGCGGGCTCACCATAAT; GNGTGNNNNNNNNNNNNNNNNNNNNCGANGTGATTTCTGCCCAGTG; CCCGACTGTNCTNNNNAAGGTCAGCAGTTCAAATCCCAGCAACCAC no hits found; GAGTGNNNNNNNNNNNNNNNCNNNGGCGGTTAGTGCTGAGAGTGCG; GCATACTGGTTGNCNNGCTGAAGTTTAAGGGCCTGGTTTTTTGAAA Cdv3 or Ncoa; GCACCCNANNNCNNNNCCGNAGNTCTGAAGATCAAATCACAGCAAA. ============================; ============================; ============================. Version Info: This is the most recent version of Salmon.; Logs will be written to mSpT3/logs; ### salmon (single-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ mates1 ] => { data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq }; ### [ mates2 ] => { data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq }; ### [ dropseq ] => { }; ### [ threads ] => { 10 }; ### [ output ] => { mSpT3 }; ### [ index ] => { mouse_cdna }; ### [ tgMap ] => { biomart.csv }. [2018-08-29 11:26:45.317] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-29 11:26",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:481,Log,Log,481,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['Log'],['Log']
Testability,"on_mappings"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""writeMappings"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""threads"": ""20"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. <details><summary>Salmon run w/ quasi mapping method</summary>; <p>. ```python; rule salmon_index_test:; input:; tcp = TRANSCRIPTS; output:; directory(""results/salmon_test/index""); priority:1; log:; ""results/salmon_test/logs/index.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon index -p {threads} -t {input.tcp} -i {output}; """""". rule salmon_quant_test:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon_test/index""; output:; directory(""results/salmon_test/quant/{smp}_salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon_test/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon_test/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_test_quant"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""threads"": ""30"",; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/479:3928,log,log,3928,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479,1,['log'],['log']
Testability,"onsistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54:46.141] [jointLog] [info] Counted 8925446 total reads in the equivalence classes ; [2023-03-07 06:54:46.282] [jointLog] [warning] 0.0015986% of fragments were shorter than the k u",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:2137,test,testing,2137,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['test'],['testing']
Testability,"or**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:3295,test,tested,3295,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['test'],['tested']
Testability,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:1722,test,testing,1722,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['test'],['testing']
Testability,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:3333,test,testing,3333,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['test'],['testing']
Testability,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:4944,test,testing,4944,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['test'],['testing']
Testability,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:6554,test,testing,6554,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['test'],['testing']
Testability,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:8165,test,testing,8165,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['test'],['testing']
Testability,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:9776,test,testing,9776,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['test'],['testing']
Testability,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:11387,test,testing,11387,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['test'],['testing']
Testability,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:12998,test,testing,12998,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['test'],['testing']
Testability,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:16220,test,testing,16220,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['test'],['testing']
Testability,"p:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481dac12ac8cffd6d5d924699c5ad7e04.). Adjusting the fetchRapMap.sh script to use the SVER and EXPECTED_SHA256SUM variables back to their values in commit COMBINE-lab/salmon@cf07385f2164698eda5b9869dd4865fec747840d, then re-running the script, and recompiling produces no errors, and the tests all run. Hope that helps, and thanks for all your work in developing Salmon!. Best regards,; Patrick Reilly",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/418:2282,test,tests,2282,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418,1,['test'],['tests']
Testability,"piled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordant, which causes counts to look very...odd. See [this preprint](https://www.biorxiv.org/content/10.1101/2022.01.24.477642v1) for more details on that phenomenon. I'm trying to use the decoys as a first step in identifying reads that map to interg",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:4636,log,logs,4636,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['log'],['logs']
Testability,"please provide at least the following information:. * Which version of salmon was used?. 0.9.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. From our dockerfile:; ```; # Install Salmon; ENV SALMON_VERSION 0.9.1; RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # Create soft link `/usr/local/bin/salmon` that points to the actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq -p 20 -o /home/user/data_store/TEST/test_sample/processed/ --seqBias --gcBias --dumpEq --writeUnmappedNames; ```. **Expected behavior**; This happened while I was modifying the tests for running salmon. I'm guessing that my code isn't quite right yet so something going wrong isn't quite unexpected. However I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/279:1296,test,test-assets,1296,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279,1,['test'],['test-assets']
Testability,"poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps and installed the binary releases of ""salmon"" 1.1.0 then 0.41.1 from GitHub in /usr/local. Did stand-alone tests with sample data from the GitHub binary release.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/500:3519,test,tests,3519,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500,1,['test'],['tests']
Testability,"processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52:41.666] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:52:41.668] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:52:42.565] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:52:43.137] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:52:43.276] [jointLog] [info] . The alignment group queue pool has been exhaus",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:8874,log,logs,8874,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['log'],['logs']
Testability,pts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv. TEMPDIR is /tmp/tmp.WnzMm7GQBO; Running command [salmon alevin -lISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv -1 /tmp/tmp.WnzMm7GQBO/p1.fa -2 /tmp/tmp.WnzMm7GQBO/p2.fa -r pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-002-chunk-000.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; Logs will be written to alevin_output/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { ../hg_transcriptome/tx2gene.tsv }; ### [ mates1 ] => { /tmp/tmp.WnzMm7GQBO/p1.fa }; ### [ mates2 ] => { /tmp/tmp.WnzMm7GQBO/p2.fa }; ### [ unmatedReads ] => { pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-002-chunk-000.fastq.gz }. [2018-12-05 16:30:15.406] [jointLog] [info] Fra,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:9954,Log,Logs,9954,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"q) (in perl because I'm old-school) that does this and allows for mismatches within 1 hamming distance. I'm sure someone could port this to python, rust, or C/C++ and speed this step up substantially, but it seems to work fine. The next step is to run alevin. I've done so using salmon v1.5.2 with the following parameters (for a ParseBio run), reversing R1/R2 as per Avi's suggestion:; ```; salmon alevin -l ISR \; --expectCells 9000 \; --read-geometry 2[1-end] \; --umi-geometry 1[1-10] \; --bc-geometry 1[11-18,49-56,79-86] \; -2 R1.fastq.gz \; -1 R2_corrected.fastq.gz \; -i gencode_v36_transcripts_idx \; -p 8 \; -o SplitBio_SL2_alevin \; --tgMap gencode.v36.txt; ``` . I know that these libraries are stranded, but I doubt `ISR` is the correct architecture, especially given it's not true PE sequencing. Notably, running alevin this way gets me only a 4% mapping rate, and most of my cells get filtered out downstream due to having really low depth. . Below is my `salmon_quant.log`:; ```; [2021-08-20 12:29:32.343] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-08-20 12:29:32.343] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699:2943,log,log,2943,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699,1,['log'],['log']
Testability,q_files/SRR2454059.fq.gz --threads 8 --libType ISF --seqBias --gcBias --useVBOpt --dumpEq --dumpEqWeights --geneMap /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt --output salmon_quant/hg38.analysisSet_knownGene/SRR2454059 --auxDir aux_info --numGibbsSamples 100; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { fastq_files/SRR2454059.fq.gz }; ### [ threads ] => { 8 }; ### [ libType ] => { ISF }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [inf,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111:1220,Log,Logs,1220,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111,1,['Log'],['Logs']
Testability,"r 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERRO",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:2632,test,test,2632,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['test'],['test']
Testability,rapidjson internal assertion failure: IsObject(),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/251:19,assert,assertion,19,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251,2,['assert'],['assertion']
Testability,"re:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins"": 4096,; ""mapping_type"": ""mapping"",; ""keep_duplicates"": false,; ""num_valid_targets"": 147493,; ""num_decoy_targets"": 61,; ""num_eq_classes"": 179681,; ""serialized_eq_classes"": false,; ""eq_class_properties"": [; ""range_factorized"",; ""gzipped""; ],; ""length_classes"": [; 496,; 768,; 1403,; 2707,; 100404; ],; ""index_seq_hash"": ""c0bf1b46db288bdf947208ef6410a0ced47fa770ab5284a1b231d958b283728b"",; ""index_name_hash"": ""db38822bce0f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:2413,log,logs,2413,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['log'],['logs']
Testability,"rease in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:15623,log,logs,15623,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['log'],['logs']
Testability,"rence transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordant, which causes counts to look very...odd. See [this preprint](https://www.biorxiv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:4473,log,logs,4473,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['log'],['logs']
Testability,"revious (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{out_data}/ref/idx/rank.bin"",; ""{out_data}/ref/idx/refAccumLengths.bin"",; ""{out_data}/ref/idx/ref_indexing.log"",; ""{out_data}/ref/idx/reflengths.bin"",; ""{out_data}/ref/idx/refseq.bin"",; ""{out_data}/ref/idx/seq.bin"",; ""{out_data}/ref/idx/versionInfo.json""; params:; job_name = ""build_idx"",; memory = ""select[mem>64] rusage[mem=64]"",; out_dir = ""{out_data}/ref/idx""; log:; ""logs/build_idx.out""; threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rul",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:2321,log,log,2321,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['log'],['log']
Testability,"ring aggregation.; [2023-02-22 16:45:42.113] [jointLog] [info] Aggregating expressions to gene level; [2023-02-22 16:45:42.215] [jointLog] [info] done; ```. - Unsuccessful log:. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ geneMap ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/Homo_sapiens.GRCh38.106.gtf }; ### [ threads ] => { 6 }; ### [ libType ] => { ISR }; ### [ index ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/salmon }; ### [ mates1 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_1_val_1.fq.gz }; ### [ mates2 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:8499,Log,Logs,8499,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"rom untrimmed files:; ```; wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR436/001/ERR4363141/ERR4363141.fastq.gz; ```. I generated the transcriptome by annotating all publicly available genomes for my species (*Faecalibacterium prausnitzii_C*). Using these annotations, I cut out coding domain sequences and nc/r/tRNAs and clustered the sequences at 95% identity. Then, I took the complement of these sequences (all the left over intergenic stuff) and designated these as decoys. . I indexed the transcriptome with:; ```; rule index_transcriptome:; input:; seqs=ancient(""outputs/gtdb_genomes_salmon_ref/{gtdb_species}.fa""),; decoys=ancient(""outputs/gtdb_genomes_intergenic_comb/{gtdb_species}_clustered_intergenic_seq_names.txt""); output: ""outputs/gtdb_genomes_salmon_index/{gtdb_species}/info.json""; threads: 1; params: index_dir = lambda wildcards: ""outputs/gtdb_genomes_salmon_index/"" + wildcards.gtdb_species; resources:; mem_mb=16000,; tmpdir=TMPDIR; conda: ""envs/salmon.yml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:3241,benchmark,benchmark,3241,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,2,['benchmark'],"['benchmark', 'benchmarks']"
Testability,"rt_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/290:1662,test,testing,1662,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290,1,['test'],['testing']
Testability,"s -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordant, which causes counts to look very...odd. See [this preprint](https://www.biorxiv.org/content/10.1101/2022.01.24.477642v1) for more details on that phenomenon. I'm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:4491,log,log,4491,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['log'],['log']
Testability,"s configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:1988,log,logically,1988,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['log'],['logically']
Testability,"s for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake_Coding_Style; [2]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/276:1021,log,logic,1021,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276,1,['log'],['logic']
Testability,"s to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ; Output of `uname -a`:; ```; Linux amc-bodhi 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux; ```. Output of `lsb_release -a`:; ```; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.4.1708 (Core) ; Release:	7.4.1708; Codename:	Core; ```. **Additional context**; Add any other context about the problem here. I have attached subsampled fastq files for one of my samples as an example:; [sub_R1.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331798/sub_R1.fastq.gz); [sub_R2.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331799/sub_R2.fastq.gz). This is the error log after attempting to run the map reads step, which indicates an issue with the index build:; [B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331816/B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt). This is the error log after building the index, which seems to have run successfully (though maybe I am missing something):; [build_idx.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331817/build_idx.out.err.txt). This is the versionInfo.json file that is successfully generated after building the index, but that can't be found when mapping reads:; [versionInfo.txt](https://github.com/COMBINE-lab/salmon/files/7331818/versionInfo.txt). Thank you so much for any help/insight you might have! I appreciate it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:6593,log,log,6593,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,2,['log'],['log']
Testability,"s used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:1689,Log,Logs,1689,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['Log'],['Logs']
Testability,"s.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins"": 4096,; ""mapping_type"": ""mapping"",; ""keep_duplicates"": false,; ""num_valid_targets"": 147493,; ""num_decoy_targets"": 61,; ""num_eq_classes"": 179681,; ""serialized_eq_classes"": false,; ""eq_class_properties"": [; ""range_factorized"",; ""gzipped""; ],; ""length_classes"": [; 496,; 768,; 1403,; 2707,; 100404; ],; ""index_seq_hash"": ""c0bf1b46db288bdf947208ef6410a0ced47fa770ab5284a1b231d958b283728b"",; ""index_name_hash"": ""db38822bce0fbc9a64cfb0b230f58119448d1c82706f1c515f210cccaf4fdf7d"",; ""index_seq_hash512"": ""d683c5132cae8695500566a25eb95c0349427afe1664ac571160337850aa269b634a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:2526,log,log,2526,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['log'],['log']
Testability,"s://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:7238,test,testing,7238,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['test'],['testing']
Testability,"salmon version 1.5.1; Running with the following keystrokes:; salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o salmonoutput (screenshot attached as ""command""). It keeps throwing the attached error message (as log).; Ive verified the R1 and R2 have the same number of entries using grep to count the number of ""@"" symbols. These match. The lines of each file are the same as well. (screenshot also attached as ""size""); ![Command](https://user-images.githubusercontent.com/50889111/134416661-77de22d1-5fc4-4b89-a21d-940948fdc4b8.png); ![Size](https://user-images.githubusercontent.com/50889111/134416664-21c6373f-57be-4c8d-b917-68aa16262f57.png); <img width=""1314"" alt=""Log"" src=""https://user-images.githubusercontent.com/50889111/134416666-5dcf3843-ef06-45b1-bb77-6c2dbae9e6e4.png"">. I'm not sure what to do from here; Please help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/709:221,log,log,221,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/709,2,"['Log', 'log']","['Log', 'log']"
Testability,"salmon_test.gsk_phaseII; jobnumber 9987275; taskid 3; account sge; priority 0; qsub_time Wed Mar 8 11:37:17 2017; start_time Wed Mar 8 11:37:31 2017; end_time Wed Mar 8 11:37:36 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 5; ru_utime 0.368; ru_stime 3.680; ru_maxrss 537668; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 21951; ru_majflt 282; ru_nswap 0; ru_inblock 56; ru_oublock 1066296; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:26799,test,tests,26799,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['test'],['tests']
Testability,"set to 0.65; [2021-04-09 12:16:37.619] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:1822,test,tests,1822,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['test'],['tests']
Testability,set:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures. TEMPDIR is /tmp/tmp.lLLibfwH4G; Running command [salmon alevin -l ISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures -1 /tmp/tmp.lLLibfwH4G/p1.fa -2 /tmp/tmp.lLLibfwH4G/p2.fa -r ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/fl,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:2154,test,test,2154,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['test'],['test']
Testability,"sh had 109134690 keys; saving hash to disk . . . done; Elapsed time: 12.6069s; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. It would be more interesting to see what filename is used for the index. Showing the ""basename"" of the index file is not very helpful. I would prefer to see the filename(s) on the beginning and end lines:. ```; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; ...; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromPacked] 20 iterations done. 164630980 characters processed.; [BWTIncConstructFromPacked] 30 iterations done. 233119636 characters processed.; [BWTIncConstructFromPacked] 40 iterations done. 293988548 characters processed.; [BWTIncConstructFromPacked] 50 iterations done. 348084948 characters processed.; [BWTIncConstructFromPacked] 60 iterations done. 396161956 characters processed.; [BWTIncC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:13534,log,logs,13534,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['log'],['logs']
Testability,"si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-12-05 15:10:07.252] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ../hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ dumpFeatures ] => { }; ### [ mates1 ] => { /tmp/tmp.lLLibfwH4G/p1.fa }; ### [ mates2 ] => { /tmp/tmp.lLLibfwH4G/p2.fa }; ### [ unmatedReads ] => { ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz ./fastqs/flowc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:4027,test,test,4027,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['test'],['test']
Testability,"species}/info.json""; threads: 1; params: index_dir = lambda wildcards: ""outputs/gtdb_genomes_salmon_index/"" + wildcards.gtdb_species; resources:; mem_mb=16000,; tmpdir=TMPDIR; conda: ""envs/salmon.yml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:4019,log,log,4019,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['log'],['log']
Testability,"ted data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:5957,log,logs,5957,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['log'],['logs']
Testability,"tem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings.; ```. is emitted in ye",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/541:1645,log,log,1645,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541,2,"['log', 'test']","['log', 'test']"
Testability,"the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2021-06-22 12:39:41.282] [jointLog] [info] Mapping rate = 55.5444%. about half of our samples have over 90% mapping rates. . Any idea what this warning means?. **To Reproduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotatio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/677:1418,test,test,1418,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677,1,['test'],['test']
Testability,"the pool. No new fragments will be allocated. processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52:41.666] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:52:41.668] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:52:42.565] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:52:43.137] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:52:43.276] [jointLog] [info] .",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:8830,Log,Logs,8830,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['Log'],['Logs']
Testability,"threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:3697,log,log,3697,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['log'],['log']
Testability,"tion = 400 | max rel diff. = 0.0247299; [2023-03-07 06:55:05.539] [jointLog] [info] iteration = 500 | max rel diff. = 0.0189304; [2023-03-07 06:55:09.278] [jointLog] [info] iteration = 600 | max rel diff. = 0.017332; [2023-03-07 06:55:13.044] [jointLog] [info] iteration = 700 | max rel diff. = 0.013562; [2023-03-07 06:55:16.780] [jointLog] [info] iteration = 800 | max rel diff. = 0.0118759; [2023-03-07 06:55:20.542] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114777; [2023-03-07 06:55:24.213] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0100626; [2023-03-07 06:55:24.977] [jointLog] [info] iteration = 1022 | max rel diff. = 0.00967998; [2023-03-07 06:55:25.088] [jointLog] [info] Finished optimizer; [2023-03-07 06:55:25.088] [jointLog] [info] writing output ; ```; And the quality control report by `fastp` ; [fastp_report.pdf](https://github.com/COMBINE-lab/salmon/files/10999908/fastp_report.pdf). The log of `bowtie2`:; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earlies",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:5139,log,log,5139,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['log'],['log']
Testability,"tput:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; bak=""results/salmon/decoy/decoys.txt.bak""; conda:; ""../envs/salmon.yaml""; shell:; """"""; grep ""^>"" {input.ref} | cut -d "" "" -f 1 > {output.decoy}; sed -i.bak -e 's/>//g' {output.decoy}; cat {input.tcp} {input.ref} > {output.gent}; """""". rule salmon_index:; input:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; output:; directory(""results/salmon/index""); conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon index -p {threads} -t {input.gent} -d {input.decoy} -i {output}; """""". if config[""salmon""][""mapping_mode""]:; rule salmon_quant_mapping:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon/index""; output:; directory(""results/salmon/quant/{smp}_salmon_quant""),; mappings=""results/salmon/quant/{smp}_salmon_quant/{smp}_salmon_mappings""; log:; 		""results/salmon/logs/{smp}.salmon.log""; conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames --writeMappings={output.mappings} -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ SFA method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73188783-62605d80-40f1-11ea-87ef-e16050f94e60.png). </p>; </details>. <details><summary>cmd_info.json (SFA)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant"",; """": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_R",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/479:1881,log,log,1881,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479,1,['log'],['log']
Testability,"transcript_gene.tsv`. Here is an extract of CB+UMI fastq:; ```; @D00585:41:CB64LANXX:1:1202:13646:88674; ACATCAGTCCCTCAGTTGAAGAAAGG; +D00585:41:CB64LANXX:1:1202:13646:88674; BBBBBFFFFFFFFFFFF<FFFBF//<; @D00585:40:CB7FUANXX:1:2113:18626:8045; TGGGCGTTCTTGCATTCCTGGAACCT; +D00585:40:CB7FUANXX:1:2113:18626:8045; BBBBBFFFFFFFFFFFF<FBFFFFFF; ``` . And an extract of the reads fastq:; ```; @D00585:41:CB64LANXX:1:1202:13646:88674; TCTGTTCATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCAT; +D00585:41:CB64LANXX:1:1202:13646:88674; BFFF<FFFBFFB<FFFB<FFFBF//FFFFB<FFFF<F///FFFB/BF<//F<7//FBFBB/F<BF</F<FFFFFFFF<</<FFBFBFFBFF<FBBBBB; @D00585:40:CB7FUANXX:1:2113:18626:8045; ATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCATCTGCAGG; +D00585:40:CB7FUANXX:1:2113:18626:8045; FFFFFBFFFFFFFFFFFB/FBFFFFBFFFFFFFBBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFBFFFFFFFFFFFFFFFFFF<FFBFFBBBBB; ``` . This is the log of the analysis:; ```; Version Info: This is the most recent version of salmon.; Logs will be written to /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using de",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:1391,log,log,1391,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['log'],['log']
Testability,"try_t<std::mutex>::create<__gnu_cxx::__normal_iterat; or<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > >(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&)':; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x73): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::al; locator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x24e): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger,; std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; collect2: error: ld returned 1 exit status; make[2]: *** [src/salmon] Error 1; make[1]: *** ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/570:1747,log,logger,1747,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/570,2,['log'],['logger']
Testability,ts --geneMap /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt --output salmon_quant/hg38.analysisSet_knownGene/SRR2454059 --auxDir aux_info --numGibbsSamples 100; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { fastq_files/SRR2454059.fq.gz }; ### [ threads ] => { 8 }; ### [ libType ] => { ISF }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias corr,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111:1295,log,logs,1295,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111,1,['log'],['logs']
Testability,"unction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.; [2021-04-09 12:16:37.728] [alevinLog] [info] # Barcodes Used: 4000 / 4000.; [2021-04-09 12:16:37.729] [alevinLog] [info] Knee found",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:1954,test,tests,1954,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['test'],['tests']
Testability,"w days and would be very grateful for any advice on how to move forward. Thank you in advance. Here is my command:; ```; #!/bin/bash -l ; #SBATCH -J male_salmon_map; #SBATCH -t 700:00:00; #SBATCH -p high; #SBATCH --cpus-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:1125,log,logs,1125,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['log'],['logs']
Testability,"warnings in the form of '[warning] len : *, but txp.RefLenght : *' appeared in the running log.; How did this occurred? Will this affect the quantification?; salmon version : v1.0.0; reference genome: ensembl GRCh38 release 96; ****gentrome and decoy generating command:****; grep ""^>"" $home/Ensembl_human_v96/Homo_sapiens.GRCh38.dna.primary_assembly.fa | cut -d "" "" -f 1 > decoys_new.txt; sed -i.bak -e 's/>//g' decoys_new.txt; cat $home/Ensembl_human_v96/Homo_sapiens.GRCh38_v96.cdna.all.fa $home/Ensembl_human_v96/Homo_sapiens.GRCh38.dna.primary_assembly.fa > $home/Ensembl_human_v96/gentrome.fa.gz; ; ****salmon index command:****; salmon index -t $home/Ensembl_human_v96/gentrome.fa.gz -d ; $home/Ensembl_human_v96/decoys.txt -p 12 -i ${home}/NGS/salmon_index_human_v96. ****salmon quant command:****; 	salmon quant -i ${home_path}/NGS/salmon_index_human_v96 -l A \; 	-1 ${fastq1} -2 ${fastq2} --validateMappings -p 12 --gcBias \; 	-o $count_path/${sample_name} ; ![image](https://user-images.githubusercontent.com/51859749/69779623-8f70bc80-11e3-11ea-9c94-6be4b9819d28.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/457:91,log,log,91,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/457,1,['log'],['log']
Testability,"when I run cmake I get: . Cannot find source file:; [...]salmon-0.9.1/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx; CMake Error at src/CMakeLists.txt:120 (add_executable):; Cannot find source file:; [...]/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx. Apart from that the build tries to download libgff, although libgf-dev is installed - it fails because it requires curl, which is not installed - i.e. that should also be tested for. System: Debian GNU/Linux (unstable), amd64 . Best, ; Gert",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/181:609,test,tested,609,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181,1,['test'],['tested']
Testability,"z }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog] [info] Loading Suffix Array ; [2017-03-15 12:19:05.982] [stderrLog] [info] Loading Transcript Info ; Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34.791] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2017-03-14 12:10:36.701] [jointLog] [warning] Entry with header [734bf21190b56e1ed4c8d7093c340df1fc6266bd80ed60ebc0ae0f4e9343c3a4], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 420000 transcripts[2017-03-14 12:10:56.697] [jointLog] [warning] Entry with header [0c9d699aa70741734115dadd8175a44a013ad4122a3af7952e3b38e9593da047], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 11130000 transcripts[2017-03-14 12:20:15.975] [jointLog] [warning] Entry with header [9067b76fbcadd65a043ddff42dccfbd201e1b7ab5307ce7712d6301e32923ff1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129:2298,log,log,2298,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129,1,['log'],['log']
Usability," ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - $ lsb_release -a; bash: lsb_release: command not found...; (base) [aedavids@mustard bin]$ uname -a ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/677:2553,clear,clear,2553,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677,1,['clear'],['clear']
Usability," -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) was used? Human reference (GRCh38) (from the alevin-fry tutorial [here](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz)); * Which read files were used? See attached subsampled sub_R1.fastq.gz and sub_R2.fastq.gz from one sample as representative reads.; * Which which program options were used? See above snakemake rule code for program options, which closely follow the options used in the alevin-fry tutorial. **Expected behavior**; A clear and concise description of what you expected to happen. I expected my reads to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ; Output of `uname -a`:; ```; Linux amc-bodhi 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux; ```. Output of `lsb_release -a`:; ```; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.4.1708 (Core) ; Release:	7.4.1708; Codename:	Core; ```. **Additional context**; Add any other context about the problem h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:5299,clear,clear,5299,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['clear'],['clear']
Usability," > salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salmon quant"" command. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 2 pictures: a segmentation fault screenshot and a gdb backtrack screenshot in ""**To Reproduce**"" section. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] : CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; - ""lsb_release -a""; LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:2942,clear,clear,2942,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['clear'],['clear']
Usability," be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:1246,clear,clear,1246,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['clear'],['clear']
Usability," corrected; [2021-01-25 16:27:07.414] [alevinLog] [info] Done indexing Barcodes; [2021-01-25 16:27:07.414] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-25 16:27:07.414] [alevinLog] [info] Used Barcodes except Whitelist: 3667; [2021-01-25 16:27:07.498] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-25 16:27:07.498] [alevinLog] [info] parsing read library format; [2021-01-25 16:30:54.542] [alevinLog] [info] Starting optimizer; [2021-01-25 16:30:54.782] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:54.782] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 1350278.00 UMI after deduplicating.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 30909 BiDirected Edges.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 8817 UniDirected Edges.; [2021-01-25 16:30:55.969] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-01-25 16:30:56.294] [alevinLog] [warning] Num High confidence barcodes too less 20 < 90.Can't performing whitelisting; Skipping; [2021-01-25 16:30:56.297] [alevinLog] [info] Finished optimizer. ### with `--exceptCells 7000`; > [2021-01-21 09:24:45.891] [alevinLog] [info] Found 43030 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); [2021-01-21 09:24:45.942] [alevinLog] [info] Filled with 43030 txp to gene entries; [2021-01-21 09:24:45.947] [alevinLog] [info] Found all transcripts to gene mappings; [2021-01-21 09:24:45.967] [alevinLog] [info] Processing barcodes files (if Present); [2021-01-21 09:33:35.885] [alevinLog] [info] Done barcode density calculation.; [2021-01-21 09:33:35.885] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-21 09:33:37.337] [alevinLog] [info] Total 10016(has 1000 low confidence) barcodes; [2021-01-21 09:33:38.202] [alevinLog] [info] Done True Barcode Sampling; [2021-01-21 09:33:39.13",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:4848,Clear,Clearing,4848,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,1,['Clear'],['Clearing']
Usability," error when running salmon quant. **To Reproduce**; Steps and data to reproduce the behavior:; Inconsistent behaviour, sometimes quant.sf files are generated, sometimes not. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:1182,clear,clear,1182,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['clear'],['clear']
Usability," in a way how the reference transcriptome is interpreted. I did this by using bulk ATAC data from both species, calling peaks with MACS2, and then using this peak set (BED format) to extract strain- and species-corrected sequences (fasta) to use as a reference. _**My questions/issues**_:; Considering the basic Alevin invocation:; `salmon alevin -l ISR -1 cb.fastq.gz -2 reads.fastq.gz --chromiumV3 -i salmon_index_directory [--whitelist barcodes.tsv] -p 10 -o alevin_output`; ; `-1 cb.fastq.gz` —> these should be CB+UMI reads, but in 10X ATAC there are no UMIs, so this would only be a 16bp CB. I'm afraid this would be a major issue considering how Alevin relies on UMI whitelisting. Would it help if I already provide a list of filtered whitelisted CB, as provided by Cell Ranger? I have this from a quality control alignment to only one parental species. `--chromiumV3 `—> If I understand correctly, this tells the program to search for the first X bases of cb.fastq.gz as CB, and the first Y bases of it as UMI (as per [this ](https://github.com/COMBINE-lab/salmon/issues/369) thread). So technically one could swap --chromiumV3 for --end 5 --barcodeLength X --umiLength Y and set this manually? But again, what if I only have CBs?. `-2 reads.fastq.gz` —> I understand this is meant for 10X scRNA-seq - which only has insert information on read2, but in 10X scATAC both insert read1 and read2 contain information on open chromatin. I reckon this is the major head scratcher for me, whether it is possible to use Alevin on scATAC at all. Should I merge the fastq read files into a single “reads.fastq.gz”? Or should I treat them as independent (but with the same CBs) and run something along the lines of: `salmon alevin -l ISR -1 cb.fastq.gz cb.fastq.gz -2 read1.fastq.gz read2.fastq.gz` (…etc)? Or maybe there is a way I am not aware of that Alevin can handle paired-end data?. Thank you in advance and I hope I have been detailed and clear enough. Please ask for more details where needed :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/611:2621,clear,clear,2621,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/611,1,['clear'],['clear']
Usability," is my first time analyzing RNAseq data and I am very much learning as I go while following a YouTube series (https://www.youtube.com/watch?v=butxOf_fxTY&t=217s&ab_channel=SimonCockell). Please excuse if I use wrong terminology in this post, I am very new to all of this and sometimes don't know what the right words are to describe what I am doing or trying to do (lol)!. With the fastq files of reads generated from my RNAseq experiment, I first ran FastQC. The quality of my data seemed to be fine as the per base sequence quality scores were 32+ and most of the other tests passed as well. Next, I built my index for Salmon using the fasta file from Gencode for the human transcriptome. Afterwards, I ran Salmon with the built index and had it automatically detect the library type. When the program was done aligning to the index, I saw that the file had a mapping rate of 40%. I guess what I'm asking is, is this an acceptable mapping rate or should I be concerned?? The reason I ask is because in the data I was working with while learning via the Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] There is 1 library.; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/571:1058,learn,learning,1058,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571,1,['learn'],['learning']
Usability," not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the screenshot in the zipped folder.; 2) Attaching the screenshot of the contents in the folder containing the indexed file. The versionInfo.json file is present in that folder. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux 3.10.0-957.el7.x86_64 x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux compute-106.cm.cluster 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. lsb-release:. LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Descriptio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/561:2420,clear,clear,2420,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561,1,['clear'],['clear']
Usability," worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:26:07.451] [jointLog] [warning] Entry with header [ENST00000634174.1], had length less than the k-mer length ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:1200,clear,clearer,1200,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['clear'],['clearer']
Usability,"# tl;dr; - `salmon alevin` returns an error if the cell barcode length is > 31 base pairs; - This blocks me from using `salmon alevin` for a novel scRNA-seq chemistry that has a 34 base pair cell barcode.; - Previously the `salmon alevin` maximum cell barcode length was increased from 20 base pairs to 31 base pairs. https://github.com/COMBINE-lab/salmon/discussions/629; - Could you please increase the maximum cell barcode length again?; - Or provide guidance on how I should do this in my own fork of salmon?. # Summary. This bug primarily related to alevin (single-cell mode). **Describe the bug**. **To Reproduce**; ```; salmon alevin; -i /path/to/salmon_index ; -p 16 ; -l ISR; --read-geometry 2[1-100] ; --bc-geometry 1[1-34] ; --umi-geometry 1[35-44] ; --sketch ; -1 /path/to/r1.fastq ; -2 /path/to/r2.fastqs; -o /output/path ; --tgMap /path/to/t2g.tsv; ```. Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Salmon version`v1.10.1`; * How was salmon installed? -> Compiled; * Encountered this error when running a feature barcoding analysis following this tutorial https://combine-lab.github.io/alevin-fry-tutorials/2021/af-feature-bc/. **Expected behavior**; Salmon alevin does not error out when the cell barcode length is 34 base pairs. **Screenshots**; Error log; `[2024-06-17 22:00:25.466] [alevinLog] [error] Barcode length (34) was not in the required length range [1, 31].`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/943:454,guid,guidance,454,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943,1,['guid'],['guidance']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/320:110,clear,clear,110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320,6,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.4; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; ensembl releases 103 and 87; * Which read files were used?; fastq files; * Which which program options were used?; quant --validateMappings --numBootstraps 50 --gcBias --seqBias. **Expected behavior**; A clear and concise description of what you expected to happen.; We expected to get the similar TPMs for a recalculation of a cohort of RNAseq data with a newer ensembl fasta release, but they were far off. **Desktop (please complete the following information):**; - RHEL7. **Additional context**; We also attempted to create our own fasta files using stringtie and scallop, but ran into the same issue as stated above.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/653:110,clear,clear,110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653,2,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I am getting this error : Two references with the same name but different sequences: XR_001465382.2_LOC4; 21118_-. We require that all input records have a unique name up to the first whitespace character. But when I try to create a histogram of that reference it only shows 1 sequence with that name: ; grep 'XR_001465383.2_LOC421108' galGal6.gene+cluster+repBase+tRNA.fa.nodup | sort | uniq -c | awk '{printf(""%s\t%s\n"", $1, $2)}'; 1 >XR_001465383.2_LOC421108_-. **To Reproduce**; This is the code I used ; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa.nodup -i SalmonIndexNodup -k 31. Specifically, please provide at least the following information:. * Which version of salmon was used?; I used v1.5.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Yes; * Which reference (e.g. transcriptome) was used?; Mouse (mm10); * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/683:1069,clear,clear,1069,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/683,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I can't run ""Quantifying in mapping-based mode"" in Salmon 1.8.0 for reads single-end.; Im not sure if the ""--libType"" (-l) argument is right...; The menssage that appear is ""Segmentation fault"" and the run finish. (following Screenshots). **To Reproduce**; Im executing the following command: salmon quant -i index -l A -r ../fastq_zip/SRR16620521.fastq.gz -o ../salmon_quant/. The ""index"" is my directory with my transciptome data and ""SRR16620521.fastq.gz"" is my file single-end. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.8.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon=1.8.0; * Which reference (e.g. transcriptome) was used? Sviridis_500_v2.1.transcript_primaryTranscriptOnly.fa.gz (Setaria viridis transciptome from Phytozome); * Which read files were used? SRR16620521.fastq.gz; * Which which program options were used? . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/87829929/236075390-07846634-fa21-4146-8a21-673947510a84.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/847:1080,clear,clear,1080,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/847,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed latest version of salmon through git clone for trinityrnaseq. When i run trinity using a command ""perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G' I am getting a message to install salmon. kindly give me a solution for this. **To Reproduce**; Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G. ______ ____ ____ ____ ____ ______ __ __; | || \ | || \ | || || | |; | || D ) | | | _ | | | | || | |; |_| |_|| / | | | | | | | |_| |_|| ~ |; | | | \ | | | | | | | | | |___, |; | | | . \ | | | | | | | | | | |; |__| |__|\_||____||__|__||____| |__| |____/. Trinity-v2.8.5. Left read files: $VAR1 = [; 'reads_1.fq'; ];; Right read files: $VAR1 = [; 'reads_2.fq'; ];; Trinity version: Trinity-v2.8.5; ** NOTE: Latest version of Trinity is v2.8.6, and can be obtained at:; 	https://github.com/trinityrnaseq/trinityrnaseq/releases. Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870.; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ ^C. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version18.04. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/452:741,clear,clear,741,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/453:384,clear,clear,384,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. The bug is primarily related to salmon, but I am using salmon to build an index for use with alevin-fry per the [alevin-fry tutorial](https://combine-lab.github.io/alevin-fry-tutorials/2021/improving-txome-specificity/). . **Describe the bug**; A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:333,clear,clear,333,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon (bulk mode) latest binary (1.8.0) from github. **Describe the bug**; A clear and concise description of what the bug is. core dumped crash on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:164,clear,clear,164,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; A clear and concise description of what the bug is. Running `salmon index` on a HPC cluster (called from a trinity perl script). After a while salmon is only idling. In the stderr I see:. ```; Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; ```. The problem seems to be the available memory. On HPC systems one usually needs to specify a max amount of memory which is enforced (e.g. with ulimit). . If I give more memory to the job salmon finishes. . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. Salmon 1.1 installed through conda. I guess any data will do to reproduce as long as the memory limitations ar small enough. **Expected behavior**; A clear and concise description of what you expected to happen. Would be good if salmon would exit with a better error message and a non-zero exit code in such a case. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. CentOS 7. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/484:118,clear,clear,118,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/484,2,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin-fry. **Describe the bug**; A clear and concise description of what the bug is.; The new updates to the `cmd_info.json` file result in an extra `:` at the end of `""salmon_version:""` inside the quotes. This results in the json file being read in with the header of that entry being `salmon_version:` when it should be `salmon_version`. . Note that this was found when running `salmon alevin` in the `--rad` or `--justAlign` mode and we have not tested if this is also the case when running only `salmon alevin`. . **To Reproduce**; Steps and data to reproduce the behavior:; We ran alevin-fry v0.4.1 starting with `salmon alevin` using `--rad` on single-cell data in the salmon biocontainer and that led to the `cmd_info.json` file being output with the extra `:` on salmon_version. . The biocontainer that we used was: quay.io/biocontainers/salmon:1.5.2--h84f40af_0 . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; used the biocontainer ; * Which reference (e.g. transcriptome) was used?; used the splici index following the alevin-fry tutorial ; * Which read files were used?; * Which which program options were used?; ```; salmon alevin -l ISR --chromiumV3 --dumpFeatures --rad; ```. **Expected behavior**; A clear and concise description of what you expected to happen.; We would expect that the extra `:` would not be included to be consistent with previous versions of salmon. ; <img width=""325"" alt=""Screen Shot 2021-07-29 at 12 35 38 PM"" src=""https://user-images.githubusercontent.com/54039191/127538599-206d5e71-cb7a-4a82-8064-4e92e12ee892.png"">. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/691:122,clear,clear,122,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/691,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin; **Describe the bug**; A clear and concise description of what the bug is.; Reanalyzing published Drop-Seq data the alevin analysis results in drastically fewer barcodes accepted than the published dataset. Published dataset contains 3000 CBs for the specific sample (authors report that 70% of [these] putative cells from WT mice met QC criteria), alevin result contains 459 CBs.; A similar highly abbreviated CB result was obtained with reanalysis of SRR8889412. **To Reproduce**; Steps and data to reproduce the behavior:. Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; Publication: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6925218/#; Specific Sample: https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3720936. Alevin was run using no special parameters with the --dropseq flags. The only significant protocol deviation was in index construction (see below). Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Salmon was run in stock docker container; * Which reference (e.g. transcriptome) was used?; Full decoy Index generated on Gencode M25 per Alevin Velocity tutorial with a k=17 (dataset has 50bp R2 Reads); Introns were extracted with 49bp flanking sequence. ; ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.annotation.gtf.gz. * Which read files were used?; Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; * Which which program options were used?; --dropseq -l ISR. **Expected behavior**; A clear and concise description of what you expected to happen.; Cell calls should be ballpark similar to published result (3000 original vs. 459 alevin). **Tar of Alevin Output directory**; [WT01_P7_WT_Cerebellum_alevin.output.tar.gz](https://github.com/COMBINE-lab/salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/625:118,clear,clear,118,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/625,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both. **Describe the bug**; When viewing http://salmon.readthedocs.io/en/latest/index.html, the page header described Salmon 0.8.1. Is the documentation out of date, or is that simply not an updated version number?. **To Reproduce**; View http://salmon.readthedocs.io/en/latest/index.html. **Expected behavior**; Salmon 0.11.0 is the latest release, thus I expected the latest version of the documentation to reflect that.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/259:263,simpl,simply,263,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/259,1,['simpl'],['simply']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk. **Describe the bug**; A clear and concise description of what the bug is.; After building an index of the most recent build of the ensemble mouse genome (39) with salmon, running quant failed immediately. The output from the failed salmon quant is: . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mnt/home/oconn341/salmon/indexs/alt_long_index }; ### [ libType ] => { A }; ### [ mates1 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz }; ### [ mates2 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz }; ### [ output ] => { preprocs_fastq/ERAP1_EAE_2270_S4 }; ### [ validateMappings ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; Logs will be written to preprocs_fastq/ERAP1_EAE_2270_S4/logs; [2021-08-20 18:19:52.590] [jointLog] [info] setting maxHashResizeThreads to 40; [2021-08-20 18:19:52.590] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 18:19:52.590] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 18:19:52.590] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 18:19:52.590] [jointLog] [info] parsing read library format; [2021-08-20 18:19:52.590] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file mnt/home/oconn341/salmon/indexs/alt_long_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /mnt/home/oconn341/salmon/bin/salmon quant was invoked improperly.; For usage information, try /mnt/home/oconn341/salmon/bin/salmon quant --help; Exiting. However, the versionInfo.json file is in my index folder",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:116,clear,clear,116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Related to Salmon. **Describe the bug**; my transcript file has a total of 119032 records:. [gao@bio reference]$ grep -c "">"" GRCm38.vM11.transcripts.ercc.Tg.fa; 119032. However, my salmon output has 117509 records:; [gao@bio KM25_salmon_quant.originalData.k21]$ wc -l quant.sf; 117509 quant.sf. How should I explain this?; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? ; I used salmon 0.13.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed on HPC; * Which reference (e.g. transcriptome) was used?; Mouse transcriptome; * Which read files were used?; RNAseq files; * Which which program options were used?; command line:. salmon quant -p 8 -i /data/Re-analysis/SalmonRun/reference/GRCm38.vM11.transcripts.ercc.Tg.fa.k21.index -g /data/Re-analysis/Salmon-Run/reference/tx2gene.gencode.v27.tabbed.csv --seqBias --gcBias -l A -1 read1.fastq.gz -2 read2.fastq.gz -o /data/Re-analysis/Salmon-Run/quant-output-co; rrected/KM25_salmon_quant.originalData.k21. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; HPC computing cluster; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/378:1223,clear,clear,1223,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/378,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Running make inside build after doing ""cmake"" against the source directory. . **Describe the bug**; A clear and concise description of what the bug is.; Unable to compile this file with gcc-4.9.2 and cmake 3.11.1; **To Reproduce**; Steps and data to reproduce the behavior:; Following steps as specified in guide. Assigning prefix to point to different installation directory and have tried passing in boost location and telling cmake to fetch boost but both result with the same error. . Specifically, please provide at least the following information:; `[ 91%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalcul",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:188,clear,clear,188,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,2,"['clear', 'guid']","['clear', 'guide']"
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/587:131,clear,clear,131,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587,2,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:130,clear,clear,130,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; A clear and concise description of what the bug is.; I am running the following command on some sci-rna-seq3 samples and it seems to not work as expected. ; `salmon alevin -i af_splici/dm6_splici_idx/ -l ISR -1 data/SRR17122012_1.fastq -2 data/SRR17122012_2.fastq -o SRR17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/813:118,clear,clear,118,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; I got reasonable cell barcode when I worked with 10X cellranger, I just got very few cell barcode when I use alevin. I don't have problem with 10X V3 data when I use alevin. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; ![image](https://github.com/user-attachments/assets/287e4955-ca55-4767-99a8-299c100b667f). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/949:683,clear,clear,683,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/949,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:121,clear,clear,121,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk; **Describe the bug**; A clear and concise description of what the bug is.; Version Info: This is the most recent version of salmon.; [2022-08-22 15:07:03.859] [jLog] [warning] The salmon index is being built witho ut any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during index ing. Further details can be found at https://salmon.readthedocs.io/en/latest/sal mon.html#preparing-transcriptome-indices-mapping-based-mode.; [2022-08-22 15:07:03.860] [jLog] [info] building index; out : transcripts_index; [2022-08-22 15:07:03.860] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers. [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Replaced 0 non-ATCG nuc leotides; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Clipped poly-A tails fr om 0 transcripts; wrote 0 cleaned references; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Filter size not provide d; estimating from number of distinct k-mers; [2022-08-22 15:07:03.866] [puff::index::jointLog] [info] ntHll estimated 47270 d istinct k-mers, setting filter size to 2^20; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1048576; Capacity = 2; Files:; transcripts_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1048576; Pass Filling Filtering; terminate called without an active exception; Aborted (core dumped). **To Reproduce**; Steps and data to reproduce the behavior:; salmon index -t contigs_for_salmon -i transcripts_index -k 31; my reads are paired end RNA-reads (rRNA REMOVED); My transcriptome is a 90 contigs resulted from reads assembly; Specifically, please provide at least the following information:. * Which version of salmon was used?; * ; * How was salmon installed (compiled, downloaded executable",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/795:116,clear,clear,116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (buik mode). **Describe the bug**; A clear and concise description of what the bug is.; I compiled the code (salmon v1.4.0) and produced the executable. Then when I try to ""salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode"" (transcriptome and genome from your tutorial: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoy",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:130,clear,clear,130,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; Segmentation fault error when running salmon quant. **To Reproduce**; Steps and data to reproduce the behavior:; Inconsistent behaviour, sometimes quant.sf files are generated, sometimes not. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:130,clear,clear,130,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon(bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; While setting -DCMAKE_BUILD_TYPE=Debug, ; ""make"" command failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:129,clear,clear,129,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; A clear and concise description of what the bug is. I had an older version of salmon that works (v0.8.2) that I believe was not compiled with Bioconda. I am now trying to get the latest version through Bioconda and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:118,clear,clear,118,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; It appears that when I run the quant command it gets up to the ""loading dense pufferfish index"" but stop after loading positions. So I think that it isn't even getting to the quantification step because it doesn't finish loading the index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; *v.1.5.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * through bioconda; * Which reference (e.g. transcriptome) was used?; * ; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen.; I would expect it to continue to ""loading reference sequence"" etc., then display done and continue with the quantification; **Screenshots**; ![image](https://user-images.githubusercontent.com/85455566/120937098-82d2fb80-c6d9-11eb-9aea-a2935ccc1e50.png). **Desktop (please complete the following information):**; Ubuntu Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; I'm pretty new to linux and salmono it is likely that my problem is due to some simple misunderstanding of how the program works, but any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/667:118,clear,clear,118,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667,3,"['clear', 'simpl']","['clear', 'simple']"
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; The cDNA fasta file contains 176241 ENSTs,but the result file only contains 166667 ENSTs.; **To Reproduce**; Steps and data to reproduce the behavior:; The steps and data are as follows. ; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.9.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used? ; Homo_sapiens.GRCh38.cdna.all.fa obtained from Ensembl release 83; * Which read files were used? ; GSE41009; * Which which program options were used? ; Building index: salmon index -t filepath/Homo_sapiens.GRCh38.cdna.all.fa -i V83-homo_index --type quasi -k 31; Quantification: salmon quant -p 50 -i filepath/V83-homo_index -l IU -1 ESC-SRR574820_1.fastq ESC-SRR574821_1.fastq -2 ESC-SRR574820_2.fastq ESC-SRR574821_2.fastq -o ESC-quantification. **Expected behavior**; A clear and concise description of what you expected to happen.; The result file should contain all the ENSTs existed in cDNA fasta file.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; uname -a; Linux mn1 2.6.32-431.29.2.2.ky3.1.x86_64 #1 SMP Thu Sep 25 10:15:09 CST 2014 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	NeoKylin; Description:	NeoKylin release 3.2 (Carambola); Release:	3.2; Codename:	Carambola; **Additional context**; Add any other context about the prob",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/255:118,clear,clear,118,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon 1.1.0 and 1.0.0 core-dump when attempting to build an index under Ubuntu 18.04 LTS; **To Reproduce**; Steps and data to reproduce the behavior:; ```; root@firefly:/usr/local/src/salmon# salmon-1.1.0_linux_x86_6/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: This is the most recent version of salmon.; [2020-04-07 21:11:41.237] [jLog] [info] building index; out : index; [2020-04-07 21:11:41.240] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; Illegal instruction (core dumped). root@firefly:/usr/local/src/salmon# salmon-0.14.1_linux_x86_64/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; [2020-04-07 21:12:14.575] [jLog] [info] building index; [2020-04-07 21:12:14.580] [jointLog] [info] [Step 1 of 4] : counting k-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit su",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/500:118,clear,clear,118,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon quant is leading to segmentation fault when `--skipQuant` flag is set. The behavior may be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:118,clear,clear,118,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I was trying to do salmon quant on multiple bam files together but got the error.; <img width=""1209"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/30546732/45cad092-de37-4e00-a873-6ea46254efbd"">. **To Reproduce**; Steps and data to reproduce the behavior:; `salmon quant -t /Reference/GRCm39_Gencode/GRCm39.fa --libType A --ont -a ./bamfiles/*.bam -o ./salmon_bulk`; Specifically, please provide at least the following information:. * Which version of salmon was used?; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/920:833,clear,clear,833,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/920,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; is been running like an order of magnitude slower than when I last used it ; **A clear and concise description of what the bug is.**; So I am aligning reads against Arabidopsis Thaliana, using Araport 11 annotation. I usually had 20 M reads aligned within an hour or 2. I am aligning a 46M reads library and it has been running for 20 hours using 4 threads of my humble i5-3210M and is barely on 38.5M, after 20 hours! Index was constructed with default kmer size and no decoys. I have had this problem with other libraries since upgraded from V1.0.0, . **To Reproduce**; I guess just try to align stuff against araport11, this particular problem comes with any fq.gz. It will take hours and hours and hours to align. **Specifically, please provide at least the following information:**. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:197,clear,clear,197,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['clear'],['clear']
Usability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; yes; **Describe the bug**; A clear and concise description of what the bug is.; I was going though the tutorial https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/; using Alevin and scVelo. The filtering with ; scv.pp.filter_genes(adata, min_shared_counts = 30). gives the error bellow. Any advice?; **Error**; R[write to console]: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. R[write to console]: In addition: ; R[write to console]: Warning message:. R[write to console]: call dbDisconnect() when finished working with a connection . ---------------------------------------------------------------------------; RRuntimeError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 168 if reductor:; --> 169 rv = reductor(4); 170 else:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/sexp.py in __getstate__(self); 123 self.__sexp__._cdata,; --> 124 globalenv.__sexp__._cdata); 125 ). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following ex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:115,clear,clear,115,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['clear'],['clear']
Usability,"**salmon (bulk mode)**. **Describe the bug**; During salmon quant call, there is a segmentation fault . **To Reproduce**; Steps and data to reproduce the behavior:; * I am hardly able to recreate it myself, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:937,clear,clear,937,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['clear'],['clear']
Usability,"**tl;dr**: 3-tag sequencing methods for bulk RNA samples contain known sample indices and UMIs and thus resembles sc-RNA-seq read formats. Do you have a recommendation on how to use Salmon and / or Alevin to quantify gene expression for this data type?. Congratulations on the recent [alevin preprint](https://www.biorxiv.org/content/early/2018/10/24/335000)! The new algorithm to deduplicate UMIs looks awesome. I am wondering if you had a recommendation on how to leverage it for 3' tag sequencing of bulk samples. There are a number of protocols that focus on the 3' ends of transcripts to allow for cheap quantification of gene expression, e.g. - [BRB-seq](https://www.biorxiv.org/content/early/2018/01/30/256594); - [Drug-seq](https://www.nature.com/articles/s41467-018-06500-x); - [Quant-seq](https://www.lexogen.com/quantseq-3mrna-sequencing/). These methods combine conventional (known) sample-indices to label samples (or wells) with unique molecular identifiers (UMIs). (I found [one question on this topic](https://github.com/COMBINE-lab/salmon/issues/108) in the salmon issue tracker from back in 2016). Here is the Drug-seq approach, for example:. ![Drug-seq](https://media.springernature.com/lw900/springer-static/image/art%3A10.1038%2Fs41467-018-06500-x/MediaObjects/41467_2018_6500_Fig1_HTML.png). The resulting read data resembles that of single-cell approaches and requires deduplication of UMIs and quantification based on reads with a strong 3' bias. It seems analysis of this data could benefit a lot from the algorithms implemented in Alevin. Can this data be analyzed with Salmon and / or Alevin? Are there any pitfalls that I should be aware off?. Many thanks for any feedback - and thanks again for making these great tools available to the community.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/306:1692,feedback,feedback,1692,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306,1,['feedback'],['feedback']
Usability,"-colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousand",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:2024,clear,clear,2024,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,1,['clear'],['clear']
Usability,". For this to work I need to break out the big guns and use --forceCells, yes? What I would really like is to try --expectCells first to allow Alevin to be a little bit intelligent, and if that fails to use --forceCells. Is that a sensible approach?. If so, could we a) have an informative error code on the boundary error above such that I can easily detect that error and re-submit with --forceCells, or b) if this is generically useful have a flag in Alevin to do it directly?. **To Reproduce**; Steps and data to reproduce the behavior:. - cDNA reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R2.fastq.gz; - barcode reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 12 }; ### [ output ] => { ERR2744256_tmp }; ### [ tgMap ] => { transcript_to_gene.txt }; ### [ dumpFeatures ] => { }; ### [ expectCells ] => { 278 }. [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-05-07 14",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362:1682,clear,clear,1682,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362,1,['clear'],['clear']
Usability,".1 1 length=36; CTGATCCTCGAGAGCACTCACAGAGTTTTTTGTTTT; +SRR6327122.1 1 length=36; AAFFFJJJJJJJJJJJJJJJJJJJJJ7-----A<-<; And; `$ zcat SRR6327122_2.fastq.gz |head -n 4`; @SRR6327122.1 1 length=88; CGGCCACAAGATCGCCTTTTTATCCCTCGCCCAGAGCACCCCCCGACCCCACATCCCCTGCTTCACGGCCCCCCTCGCGGCCTACCCG; +SRR6327122.1 1 length=88; --7-<7----7---77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatib",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:3067,clear,clear,3067,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['clear'],['clear']
Usability,"/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/290:2359,clear,clear,2359,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290,1,['clear'],['clear']
Usability,/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz }. [2018-12-05 15:10:07.288] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-12-05 15:10:07.288] [jointLog] [warning] You seem to have passed in both un-paired reads and paired-end reads. It is not currently possible to quantify hybrid library types in salmon.; [2018-12-05 15:10:07.298] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 267 Million barcodes. [2018-12-05 15:12:18.914] [alevinLog] [info] Done barcode density calculation.; [2018-12-05 15:12:18.914] [alevinLog] [info] # Barcodes Used: 267451749 / 267548197.; [2018-12-05 15:12:25.126] [alevinLog] [info] Knee found left boundary at 11954 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-12-05 15:12:27.371] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-05 15:12:27.494] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 15:12:27.880] [alevinLog] [info] Done populating Z matrix; [2018-12-05 15:12:27.952] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [i,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:6245,Learn,Learned,6245,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Learn'],['Learned']
Usability,"021-04-09 12:16:42.801] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done making feature Matrix; Exception : [vector]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **To Reproduce**. I have uploaded the files used and a script to run a reproducible example:. https://www.dropbox.com/sh/ksn45n73bazp0rc/AABlsbkG-SLyKJN4DBO7zQ-va?dl=0. * Which version of salmon was used? 1.4.0; * How was salmon installed? bioconda. **Expected behavior**. Alevin should run to completion, with no errors. **Desktop :**; - OS: OSX; - Version: ProductName=Mac OS X, ProductVersion=10.15.7, BuildVersion=19H524. **Additional context**. The files are from a small test dataset - the reads have been subsampled and the genome reference sequence and annotation was filtered for the X chromosome. The index file was",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:7096,Clear,Clearing,7096,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['Clear'],['Clearing']
Usability,"09-20 22:30:12.334] [alevinLog] [info] Total Unique barcodes found: 675135; [2021-09-20 22:30:12.334] [alevinLog] [info] Used Barcodes except Whitelist: 7515; [2021-09-20 22:30:13.043] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-09-20 22:30:13.044] [alevinLog] [info] parsing read library format; [2021-09-20 22:33:09.346] [alevinLog] [info] Starting optimizer. [2021-09-20 22:33:09.516] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.516] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 46357.00 UMI after deduplicating.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 2930 BiDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 3804 UniDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [warning] Skipped 21 barcodes due to No mapped read; [2021-09-20 22:33:09.579] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-09-20 22:33:09.590] [alevinLog] [warning] Num Low confidence barcodes too less 186 < 200.Can't performing whitelisting; Skipping; [2021-09-20 22:33:09.591] [alevinLog] [info] Finished optimizer. ```; Then I tried setting `--keepCBFraction 1`. This does decrease the total number of reads being thrown away. However, mapping percentage is still low as compared to what I was getting from CellRanger (27%). I thought that since Alevin takes into consideration the multi mapping reads, the mapping percentage will likely increase because when we ran STAR on this data we found a lot of multi mapping reads. ```bash; nohup ./salmon alevin -l ISR -1 S1_L003_R1_001.fastq.gz -2 S1_L003_R2_001.fastq.gz --chromiumV3 -i ~/salmon_selective/salmon_index/ -p 20 -o ~/salmon_selective/9NT_keepCBfraction --keepCBFraction 1 --tgMap ~/salmon_selective/txgene_p3d7.txt &. [2021-09-21 00:11:13.532] [alevinLog] [info] Total 1.97665% reads will be thrown away because of noisy Ce",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/706:4568,Clear,Clearing,4568,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/706,1,['Clear'],['Clearing']
Usability,"33:39.994] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-21 09:33:39.994] [alevinLog] [info] Used Barcodes except Whitelist: 34503; [2021-01-21 09:33:40.718] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-21 09:33:40.718] [alevinLog] [info] parsing read library format; [2021-01-21 09:48:11.430] [alevinLog] [info] Starting optimizer; [2021-01-21 09:48:12.160] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-01-21 09:48:12.160] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 19031525.00 UMI after deduplicating.; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 454402 BiDirected Edges.; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 113688 UniDirected Edges.; [2021-01-21 09:48:36.288] [alevinLog] [warning] Skipped 44 barcodes due to No mapped read; [2021-01-21 09:48:36.307] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-01-21 09:48:41.314] [alevinLog] [info] Starting white listing of 9971 cells; [2021-01-21 09:48:41.314] [alevinLog] [info] Starting to make feature Matrix; [2021-01-21 09:48:41.337] [alevinLog] [info] Done making feature Matrix; [2021-01-21 09:48:41.557] [alevinLog] [info] Finished white listing; [2021-01-21 09:48:41.580] [alevinLog] [info] Finished optimizer. > {; ""total_reads"": 188934609,; ""reads_with_N"": 0,; ""noisy_cb_reads"": 98310747,; ""noisy_umi_reads"": 16600,; ""used_reads"": 90607262,; ""mapping_rate"": 18.89108045842464,; ""reads_in_eqclasses"": 35691789,; ""total_cbs"": 3896665,; ""used_cbs"": 44518,; ""initial_whitelist"": 9015,; ""low_conf_cbs"": 1000,; ""num_features"": 5,; ""no_read_mapping_cbs"": 44,; ""final_num_cbs"": 6765,; ""deduplicated_umis"": 19031525,; ""mean_umis_per_cell"": 2813,; ""mean_genes_per_cell"": 1315; }. ### My best result with `--exceptCells 30000`; > ...; [2021-01-23 11:07:52.910] [alevinLog] [info] Done barcode density calculation.; [2021",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:7195,Clear,Clearing,7195,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,1,['Clear'],['Clearing']
Usability,"4.0. **Describe the bug**; When I run salmon I exits with an error code of 137. any idea what this means? I also noticed that the output directory is not created. **To Reproduce**; I am running the container on app.terra.bio, unfortunately, I can not share the workspace because the data is from identifiable human subjects. Bellow, I include the log file showing how I ran salmon. I think the bug may have something to do with the run time environment. Know what salmon exit codes mean would really help me figure out where my bug is. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"",; * Which reference (e.g. transcriptome) was used?; we have a custom reference based on g35. ; * Which read files were used?; * Which which program options were used?; * . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --se",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:1254,clear,clear,1254,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['clear'],['clear']
Usability,"40] [alevinLog] [info] Finished optimizer; > `. I also tried . `salmon alevin -l ISR --chromium --featureStart 19 --featureLength 21 --tgMap guide_to_gene.tsv`. But I get the following output. > `; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-03 13:47:17.330] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-03 13:47:17.336] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > processed 52 Million barcodes; > ; > [2020-06-03 13:48:30.047] [alevinLog] [info] Done barcode density calculation.; > [2020-06-03 13:48:30.047] [alevinLog] [info] # Barcodes Used: 52200250 / 52200250.; > [2020-06-03 13:48:33.285] [alevinLog] [info] Knee found left boundary at 1174 ; > [2020-06-03 13:48:34.501] [alevinLog] [info] Gauss Corrected Boundary at 148 ; > [2020-06-03 13:48:34.501] [alevinLog] [info] Learned InvCov: 985.935 normfactor: 763.254; > [2020-06-03 13:48:34.501] [alevinLog] [info] Total 349(has 201 low confidence) barcodes; > [2020-06-03 13:48:35.369] [alevinLog] [info] Done True Barcode Sampling; > [2020-06-03 13:48:35.441] [alevinLog] [warning] Total 73.3629% reads will be thrown away because of noisy Cellular barcodes.; > [2020-06-03 13:48:35.454] [alevinLog] [info] Done populating Z matrix; > [2020-06-03 13:48:35.455] [alevinLog] [info] Total 4286 CB got sequence corrected; > [2020-06-03 13:48:35.455] [alevinLog] [info] Done indexing Barcodes; > [2020-06-03 13:48:35.455] [alevinLog] [info] Total Unique barcodes found: 604589; > [2020-06-03 13:48:35.455] [alevinLog] [info] Used Barcodes except Whitelist: 4282; > [2020-06-03 13:48:35.558] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ...; > processed 52 Million fragments; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:49:37.892] [jointLog] [info] Computed 0 rich equivalence classes for furt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531:4731,Learn,Learned,4731,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531,1,['Learn'],['Learned']
Usability,"41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [2021-04-09 12:16:42.800] [jointLog] [info] Counted 135 total reads in the equivalence classes; [2021-04-09 12:16:42.801] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done making feature Matrix; Exception : [vector]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **To Reproduce**. I have uploaded the files used and a script to run a reproducible example:. https://www.dropbox.com/sh/ksn45n73bazp0rc/AABlsbkG-SLyKJN4DBO7zQ-va?dl=0. * Which version of salmon was used? 1.4.0; * How was salmon installe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:6711,usab,usable,6711,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['usab'],['usable']
Usability,"8dd90e917d; seqHash 512 : 87b7752997ca977ff56d02f69857a32f13b3c39a0a084c72feaa2c97e698b9b04d80a88c6755b97aede5604b89fdf66789a14f7976a89597a7832760a47e8919; nameHash 256 : 54e47ff5eb21b38ef24c8ffa3fc2a192ee5d9c0541bc6ee2da9414ecbd0f8c59; nameHash 512 : 163b337219cfd19b0c4c99cece12c2c2b760b3bf7e4686dbe633259c78552a56f2f015f18740a33c18e0f14c5f362997395c3168590f3ad80704071cabfab13a; [2019-11-20 19:50:26.273] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2019-11-20 19:50:27.059] [puff::index::jointLog] [info] ntHll estimated 34379504 distinct k-mers, setting filter size to 2^30; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1073741824; Capacity = 2; Files: ; utr_library/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1073741824; Pass	Filling	Filtering; 1	17	42	; 2	2	0; True junctions count = 102593; False junctions count = 122933; Hash table size = 225526; Candidate marks count = 1387640; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 1100523; Edges construction time: 13; --------------------------------------------------------------------------------; Distinct junctions = 102593. approximateContigTotalLength: 29519449; counters:; 13519 5 4 5; ERROR!! DOESN'T SUPPORT STRING LENGTH LONGER THAN 255. String length: 317; ```. And the `output_sequences.fa` is from `qapa fasta -f genome/hg38/hg38.fa /qapa/qapa_3utrs.gencode_V31.hg38.bed output_sequences.fa`. The bed file is the pre-compiled annotation file from QAPA. **To Reproduce**; Steps and data to reproduce the behavior:. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Ubuntu 18.04.2 LTS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/451:2756,clear,clear,2756,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/451,1,['clear'],['clear']
Usability,":35.455] [alevinLog] [info] Total Unique barcodes found: 604589; > [2020-06-03 13:48:35.455] [alevinLog] [info] Used Barcodes except Whitelist: 4282; > [2020-06-03 13:48:35.558] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ...; > processed 52 Million fragments; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:49:37.892] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2020-06-03 13:49:37.892] [jointLog] [info] Counted 0 total reads in the equivalence classes ; > [2020-06-03 13:49:37.893] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2020-06-03 13:49:37.893] [jointLog] [warning] Found 370 reads with `N` in the UMI sequence and ignored the reads.; > Please report on github if this number is too large; > [2020-06-03 13:49:37.893] [jointLog] [info] Mapping rate = 0%; > ; > [2020-06-03 13:49:37.893] [jointLog] [info] finished quantifyLibrary(); > [2020-06-03 13:49:37.899] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:49:38.613] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:49:38.613] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:49:38.614] [alevinLog] [warning] Skipped 348 barcodes due to No mapped read; > [2020-06-03 13:49:38.614] [alevinLog] [info] Clearing EqMap; Might take some time.; > [2020-06-03 13:49:38.620] [alevinLog] [warning] Num Low confidence barcodes too less 1 < 200.Can't performing whitelisting; Skipping; > [2020-06-03 13:49:38.620] [alevinLog] [info] Finished optimizer; > Floating point exception (core dumped); > `. Any suggestions on how to get this working are highly appreciated!. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531:6955,Clear,Clearing,6955,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531,1,['Clear'],['Clearing']
Usability,; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ mates1 ] => { cDNA_Small_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { cDNA_Small_S1_L001_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 20 }; ### [ output ] => { alevin_output9 }; ### [ tgMap ] => { txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-06-30 22:10:28.044] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-30 22:10:28.048] [alevinLog] [info] Processing barcodes files (if Present). processed 17 Million barcodes. [2018-06-30 22:10:47.141] [alevinLog] [info] Done barcode density calculation.; [2018-06-30 22:10:47.141] [alevinLog] [info] # Barcodes Used: 17712582 / 17712585.; [2018-06-30 22:10:52.008] [alevinLog] [info] Knee found left boundary at 9447; [2018-06-30 22:10:52.498] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] L,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:1757,Learn,Learned,1757,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,1,['Learn'],['Learned']
Usability,; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-12 21:01:31.330] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 141 Million barcodes. [2018-06-12 21:08:38.126] [alevinLog] [info] Done barcode density calculation.; [2018-06-12 21:08:38.126] [alevinLog] [info] # Barcodes Used: 140111660 / 141062078.; [2018-06-12 21:08:42.014] [alevinLog] [info] Knee found left boundary at 127 ; [2018-06-12 21:08:55.712] [alevinLog] [warning] Gauss Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] L,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237:2610,Learn,Learned,2610,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237,1,['Learn'],['Learned']
Usability,"; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [2021-04-09 12:16:42.800] [jointLog] [info] Counted 135 total reads in the equivalence classes; [2021-04-09 12:16:42.801] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done making feature Matrix; Exception : [vector]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **To Reproduce**. I have uploaded the files use",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:6521,usab,usable,6521,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['usab'],['usable']
Usability,"; The new updates to the `cmd_info.json` file result in an extra `:` at the end of `""salmon_version:""` inside the quotes. This results in the json file being read in with the header of that entry being `salmon_version:` when it should be `salmon_version`. . Note that this was found when running `salmon alevin` in the `--rad` or `--justAlign` mode and we have not tested if this is also the case when running only `salmon alevin`. . **To Reproduce**; Steps and data to reproduce the behavior:; We ran alevin-fry v0.4.1 starting with `salmon alevin` using `--rad` on single-cell data in the salmon biocontainer and that led to the `cmd_info.json` file being output with the extra `:` on salmon_version. . The biocontainer that we used was: quay.io/biocontainers/salmon:1.5.2--h84f40af_0 . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; used the biocontainer ; * Which reference (e.g. transcriptome) was used?; used the splici index following the alevin-fry tutorial ; * Which read files were used?; * Which which program options were used?; ```; salmon alevin -l ISR --chromiumV3 --dumpFeatures --rad; ```. **Expected behavior**; A clear and concise description of what you expected to happen.; We would expect that the extra `:` would not be included to be consistent with previous versions of salmon. ; <img width=""325"" alt=""Screen Shot 2021-07-29 at 12 35 38 PM"" src=""https://user-images.githubusercontent.com/54039191/127538599-206d5e71-cb7a-4a82-8064-4e92e12ee892.png"">. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/691:1447,clear,clear,1447,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/691,1,['clear'],['clear']
Usability,A PR noting the differences in my approach to #269.; The one that I think needs addressing is in `writeFastq` (https://github.com/COMBINE-lab/salmon/compare/develop...PeteHaitch:develop?expand=1#diff-bf2f37cd9ea77a5c454a5bd860a924ee); without some change to this the `UMI` and `CB` are incorrectly extracted for CEL-Seq2. ; I simply commented out the original lines and modified it as needed for CEL-Seq2 in order to test my modified version.; I guess some sort of protocol-specific conditional is needed here. The remainder are minor/cosmetic choices of variable names (please feel free to ignore!).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/285:326,simpl,simply,326,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/285,1,['simpl'],['simply']
Usability,A simple question about strand bias,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/762:2,simpl,simple,2,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/762,2,['simpl'],['simple']
Usability,"As suggested by Nick Schurch, we should be writing non-error output (including simple logging and informative messages) to stdout rather than stderr.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/55:79,simpl,simple,79,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55,1,['simpl'],['simple']
Usability,"Asked from a colleague claiming it was better to use ""correct"" values (ie, given by the RNASeq platform) for fragment length distribution, I tried to use this option. However, I did not understood a few thing about them in the documentation, and could not figure out the answer from the code...; The documentation states that these options give the mean and standard deviation of a truncated normal variable used to model the distribution. However, it is not clear if they correspond of the (µ, sigma) parameters of the Gaussian that _will_ be truncated (as is usually given) or _after_ truncation, as is easy to estimate by sample mean and sample standard deviation. These values may be quite different, I guess, if truncation is indeed important.; From the code, I found that the values are stored in the fragLenDistMean and fragLenDistPriorSD slots of the SalmonOpts, and that their default values are 200 and 80. However, I could not find any place where these slots were used again (a grep on all .cpp files in src did not found any result except the lines in SalmonQuantify.cpp and SalmonQuantifyAlignments.cpp that seem to parse the command line options:; ` (; ""fldMean"",; po::value<size_t>(&(sopt.fragLenDistPriorMean))->default_value(200),; ""The mean used in the fragment length distribution prior""); (; ""fldSD"",; po::value<size_t>(&(sopt.fragLenDistPriorSD))->default_value(80),; ""The standard deviation used in the fragment length distribution ""; ""prior""); `; However, I do not use C++ so I may have missed something in the role of the `po` namespace.; Could you give any hint of where these values are used, so I can understand what is there exact meaning?; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/127:459,clear,clear,459,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127,1,['clear'],['clear']
Usability,Broken linked files cause salmon indexing to pause (indefinitely) without throwing an error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/134:45,pause,pause,45,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134,2,['pause'],['pause']
Usability,"Can we use genome as a reference instead of using transcriptome, and can you please tell me how can we use Salmon output to check alternative splicing events. Your feedback will be highly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/161:164,feedback,feedback,164,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/161,1,['feedback'],['feedback']
Usability,"Currently the indexer has a --gencode flag to handle the composite fasta headers in GENCODE transcript fasta files and `split the transcript name at the first '|' character`. However, the alignment-based mode doesn't use an index, and the current behavior is to read the fasta headers from -t verbatim. So, if I run the STAR aligner with the standard workflow using GENCODE files as index, the Aligned.toTranscriptome.out.bam output would already be aligned to the transcriptome, with the RNAME fields set in the same way `salmon index --gencode`, for example:. `ST-J00106:110:H5NY5BBXX:3:2211:22495:7240 99 ENSMUST00000195335.1 799 60 76M = 945 222 CTCAGTAGGAAGATTATAACTAATACTCCCCCATCAAACAGTTTTAAGGACAGAAGAGAACAAAGCATGTAAAGTG <AFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJFFJA<AFJJFFA NH:i:1 HI:i:1 RG:Z:160212_ST-J00106_0110.3`. As a result, Salmon won't quantify anything if I run Salmon in the Alignment-based mode with the official GENCODE transcripts.fa, for example, `salmon quant -l IU -a Aligned.toTranscriptome.out.bam -o $OUTPUT_DIR -t gencode.vM9.pc_transcripts.fa -g gencode.vM9.annotation.gtf` since the RNAME and the FASTA headers don't match, causing a large number of messages like `WARNING: Transcript ENSMUST00000082421.1|ENSMUSG00000064370.1|-|-|mt-Cytb-201|mt-Cytb|1144|CDS:1-1144| appears in the reference but did not appear in the BAM`. Similarly, the gene quantification mode won't work either, since the names in -t and -g will never match. While for the immediate need I can just trim the fasta headers from the GENCODE transctipts.fa using a simple script, it must be an oversight that the same functionality is provided in quasi-alignment mode only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/95:1587,simpl,simple,1587,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/95,1,['simpl'],['simple']
Usability,"Currently, the default (and only) behavior of Salmon when aggregating from the transcript to gene level is to return transcripts with no corresponding gene in the `GTF` or 2-column format file as their own gene. In some cases, it would be desirable, instead, to simply filter out or ""drop"" such transcripts from the gene-level output. We should add a flag to optionally enable this behavior. Feature requested by @demis001.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/124:262,simpl,simply,262,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/124,1,['simpl'],['simply']
Usability,"Dear Dr. Patro,. First of all, my apologies as I want to make it clear that I have just posted this same question on Bioconductor community as well in a hope to get a quick reply. . I have put great amount of effort to find out answer to this question on internet. Couldn't find it anywhere (bioconductor, biostars, seqanswers, github etc.). I have 3 replicates for each sample and one of the replicates from each sample is single-end and other two are paired-end as SE and PE were processed at different facilities (I know I have to do batch correction in downstream analysis). Now I want to use transcript level abundance from quant.sf file which I derived for each replicates using Salmon's quasi-mapping pipeline (used appropriate flags for SE and PE reads). All these (SE & PE) reads are strand specific. . My question is, can I use quant.sf directly from these replicates for downstream DE analysis using tximport or do SE or PE requires separate kind of processing before I can use them together as replicates for downstream analysis. I am planning to use limma-voom for my DE analysis. Thank you so much for your time and apologies if the question was answered already.; Sandip Darji",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/156:65,clear,clear,65,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/156,1,['clear'],['clear']
Usability,"Dear `salmon` developers,. We are using salmon at ONT for quantifying transcripts from alignments of cDNA reads to transcriptomes on a regular basis and in [some](https://github.com/nanoporetech/pipeline-transcriptome-de) of our pipelines.; Transcriptomic aligments of long reads generate less multimapping reads than short reads (depeneding on the structure of the transcriptome), however we would prefer not to ignore them during quantification in order to make maximal use of the data.; However, since the error model was built for short reads, until now we have used the tool with the error model turned off (`--noErrorModel`), which is not optimal. Would it be possible to add a simple error model suitable for long read alignments? We propose something like the following for calculating the likelihood of an alignment:. - The likelihood of the aligment would be calculated based on the empirical distributions (or a normal fit) of edit distances conditioned on the length of the alignment. We could provide you with this information if needed.; - The likelihood of left and right soft or hard clipped sequences would be calculated as a function of their length (such as (1/x)^z, where the parameter z can be tuned based on real datasets). A more complicated model could be build taking into account the error profile of the long reads. It might be overkill though. I had a look at the source code and it seems to me that it might not be hard to implement it, however I am lacking the intimate knowledge of the codebase to do it easily.; Let me know if you would be interested in adding this feature. If yes, we could evaluate the change in the quality of estimates on real datasets. Best regards,; Botond Sipos",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/519:684,simpl,simple,684,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519,1,['simpl'],['simple']
Usability,"Dear salmon team and @k3yavi,. I am an happy user of alevin on scRNAseq data (10x). In some circumstances, I have to compare samples from very uneven sequencing depth (less than 100k reads per cell vs 1M reads per cell,), which naturally produces a huge ""batch effect"", some transcripts being impossible to detect at a lower sequencing depth. For 10x datasets, cellranger offers to compensate this kind of difference across datasets by subsampling, and I should tell it works very well. I tried this strategy before running alevin, by the use of python scripts subsampling the fastq files prior any alevin quasi-mapping. However, all my attempts failed, as all downstream analyses shown that this strategy didn't correct the batch effect at all with alevin (visualization on dimension reduction/UMAP show a huge difference between batches, while the cellranger subsampling method clearly corrects it). An important point is by default, the cellranger method corrects according to the amount of mapped reads between samples. So ideally, I should have to evaluate the difference in term of mapped reads to compute a subsampling coefficient (fraction of reads to keep). What correct alevin metrics should I use to estimate such a coefficient?. Considering the probalistic approach of alevin's transcript quantification, I am wondering if it could be any better way to normalize the samples to account for this kind of issue? Also, any option to subsample the reads (take a read into account under a certain probability) during alevin quantification would be of great help in my case. Thank you for your work and your time,; Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/305:880,clear,clearly,880,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305,1,['clear'],['clearly']
Usability,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/966:708,simpl,simple,708,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966,1,['simpl'],['simple']
Usability,"From the `alevin-fry` repo (by @fransua). ```; Hi,; I cannot find clear help on read_geometry. There are a couple of examples but they do not seem to work for me and I am struggling to change them.; Specifically I have several questions:. what does the ""read_geometry"" refers to? I saw that it is usually set to ""2[1-end]"", but why only read 2, and when does the whole read is not a read?. what is the pattern of inclusion exclusion? 1-10 starts at the first nucleotide but includes the ninth or the tenth too?. How does alevin-fry deals with unexact position, for instance in my case the cell tag can start anywhere between position 85 and 115 because of a variable polyA before. thanks. ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/816:66,clear,clear,66,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/816,1,['clear'],['clear']
Usability,Full length cDNA distribution as a guide to abundances?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/56:35,guid,guide,35,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/56,2,['guid'],['guide']
Usability,"Good Afternoon,. I hope this message finds you well. . I am having a hard time running salmon version 0.14.1 downloaded via bioconda. I am trying to count my reads using alignment-based mode. Whenever I run the program, I get similar error messages to [issue 104](https://github.com/COMBINE-lab/salmon/issues/104). Here is the command I am running:. salmon quant -t trimmed_fasta/SRR1810204_1.trim.fastq -l A -a results/bam_files/SRR1810204_1.trim.fastq.bam -o salmon_test. trimmed_fasta/SRR1810204_1.trim.fastq is a fastq sample that I've obtained following trimmomatic and contains the forward strands of the data. . results/bam_files/SRR1810204_1.trim.fastq.bam is the bam file following bwa alignment of the fastq file here and its reverse strand to a reference database. . Could the issue be that I am not using both forward and reverse strands in the target argument for salmon since they were both used to generate the alignment file? I tried to look at the docs for guidance on the best course of action, and I had a hard time finding info. All help would be very much appreciated. All the best,; Craig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/520:974,guid,guidance,974,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/520,1,['guid'],['guidance']
Usability,Guidance on Minimap2 Settings for Quantification of ONT Reads in Alignment Mode,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/790:0,Guid,Guidance,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790,1,['Guid'],['Guidance']
Usability,"HI, ; Maybe this is not the best place to ask this, I am aware. But as the minds behind Salmon I guess is going to be the best possible answer. ; I realised the quantification using salmon with genecode transcriptome on 94 paired-end fastq patient samples. ; I get the gene-sumarised TPM using Tximeta. ; I used then EdgeR to normalice these TPM (stored as gse) with . ```; y <- makeDGEList(gse); y <- calcNormFactors(y); norm.counts.TMM <- cpm(y); ```. My question is, is TPM already ""ready-to-use"" for comparison between samples (gene1 across the 94 samples) ? or the TPM values are only comparables between the same sample (i.e. gene 1 vs gen 10 in sample 1). is the way `(makeDGElist, calcNormFactors, cpm)` the way to normalise salmon output? . I try for several weeks to found it in different forums, (even I read some of the Rob answers to this kind of questions...) but still not clear about the right procedure. Kindest regards!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/557:888,clear,clear,888,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/557,1,['clear'],['clear']
Usability,"Hello dear Salmon developers,; First of all - thank you very much for your effort in supporting Oxford Nanopore reads! I've been Salmon for quantification of ONT sequencing experiments, and recently I decided to dive deeper into how it produces counts for ONT data. The release with initial ONT support (v1.5.1) states that counts should be 100 for all transcripts because at that time it was not clear how EffectiveLength should be computed. However, now (when using release v1.10.1) Salmon produces some meaningful count estimates. I tried to figure out the algorithm by looking at the code, but failed... ; Is there a place where you have the said algorithm documented, or if not, could you please explain how is it implemented?; Thank you in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/924:397,clear,clear,397,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/924,1,['clear'],['clear']
Usability,"Hello everyone! This is my first time analyzing RNAseq data and I am very much learning as I go while following a YouTube series (https://www.youtube.com/watch?v=butxOf_fxTY&t=217s&ab_channel=SimonCockell). Please excuse if I use wrong terminology in this post, I am very new to all of this and sometimes don't know what the right words are to describe what I am doing or trying to do (lol)!. With the fastq files of reads generated from my RNAseq experiment, I first ran FastQC. The quality of my data seemed to be fine as the per base sequence quality scores were 32+ and most of the other tests passed as well. Next, I built my index for Salmon using the fasta file from Gencode for the human transcriptome. Afterwards, I ran Salmon with the built index and had it automatically detect the library type. When the program was done aligning to the index, I saw that the file had a mapping rate of 40%. I guess what I'm asking is, is this an acceptable mapping rate or should I be concerned?? The reason I ask is because in the data I was working with while learning via the Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] Ther",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/571:79,learn,learning,79,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571,1,['learn'],['learning']
Usability,"Hello there,. first off thank you so much for this program: I've been using salmon for roughly a year now and surely won't go back to any other quantification method.; However, I have questions regarding one of my current analyses (sorry if this is the wrong place to ask!). . How well would salmon cope with quantification when using a _de novo_ transcriptome of a polyploid non-model species as reference?. The goal is to find candidate genes via differential gene expression analyses. Since our non-model species is closely related to a model species, we'd simply like to:. - use salmon for quantification; - annotate using the closely related model proteome; - aggregate counts using tximport ; - find DEGs with DESeq2. . So far, the results seem plausible. But I would love to hear an opinion on this: are there things to watch out for with this approach?. Best wishes and stay healthy,. Lukas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/618:560,simpl,simply,560,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/618,1,['simpl'],['simply']
Usability,"Hello, . I have RNA-seq data for 3 runs under the same condition, and the data for each run was generated as single-end libraries using 3 lanes (100bp, 100bp and 50bp). After mapping using Salmon against the transcriptome and normalizing the counts using DESeq2, I found out that a control gene had a much higher level of deviation between runs. One of them was reported to have zero counts. . I ran Salmon for each library in that run and got the following results for that gene. Lib1 (50bp): GeneA 1859 1610.000 0.058387 6.313500; Lib2 (100bp): GeneA 1859 1610.000 0.086646 11.991785; Lib3 (100bp): GeneA 1859 1610.000 0.000000 0.000000; Lib1+Lib2+Lib3: GeneA 1859 1610.000 0.000000 0.000011. So I expected that Lib3 would have a problem. But when I ran bowite2 against the transcriptome, the raw counts for GeneA was 39 for Lib1, 21 for Lib2 and 24 for lib3, which looked normal. The number of reads was almost the same in each library, but the size of the library was 1/2 in Lib1 (50bp). . It was not clear to me why Samlon failed to detect GeneA in Lib3 even though the same parameters were used and also why in the combined library, the TPM and number of reads became 0 despite the counts of this gene in Lib1 and Lib2. How would I be able to improve the sensitivity (on the report, only 0.3% was reported to be smaller than K). for indexing and mapping, I used the default parameters: . salmon index -t Nbv5.1_TrPrm_NtCorrect.fasta Nbv5.1_TrPrm_NtCorrect_index; salmon quant -i ../../Database/Nbv5.1_TrPrm_NtCorrect_index -l U -r ../1-Transcriptome_Trimmed_Reads/QTCR002A_S5_L00T_R1_001_trimmed.fq.gz -p 12 -o QTCR002A_S5_L00T_R1_001_trimmed.against.Nbv5.1_TrPrm.out. Thanks,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/218:1005,clear,clear,1005,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218,1,['clear'],['clear']
Usability,"Hello, . While running the quantifications of my samples while quasi-mapping, the resulting created quant folders remain empty following the shell script is done running. An example of this would be from the ""Getting Started"" tab: . #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 -o quants/${samp}_quant; done . Once this is done, the created folders are empty, whereas I would expect them to continue to quant files. Of note, I do sometimes get complete quantification of one or two samples (again, referring to the A.thaliana example used in the ""Getting Started"" tab. My, albeit limited, experience might suggest that my case might be a matter of number of threads used/made available. I would appreciate any feed back/confirmation on this. As a reference, I was initially running this on a quad core (3.1 GHz Intel Core i7) MacBook Pro. Thank you for taking the time to consider this, most likely, simple issue",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/302:1065,simpl,simple,1065,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/302,1,['simpl'],['simple']
Usability,"Hello, I'm debugging a salmon install problem with conda. I don't have time to double check, but it looks something like:. * if you install salmon 1.1.0, you get a version of tbb, 2021.1.1, from conda-forge ; * if you then try to upgrade to salmon 1.4.0, you actually want to get a different version of tbb from defaults, but the version pinning doesn't require it so it sticks with conda-forge; * if you force `tbb==2020.3` for salmon 1.4.0, things work; * if you don't, you get `salmon: error while loading shared libraries: libtbb.so.2: cannot open shared object file: No such file or directory`. The error shows up with:; `tbb 2021.1.1 h4bd325d_0 conda-forge`. and the functioning version of tbb seems to be:; `tbb 2020.3 hfd86e86_0 defaults`. I don't have time to chase this down further at the moment, but hopefully this will be sufficiently clear for me to figure it out later :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/637:848,clear,clear,848,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/637,1,['clear'],['clear']
Usability,"Hello,. I have some questions about functions within the software and mainly I am seeking some advice on parameter setting as I believe the developers might have a better idea of how to tackle this problem I am working with. To start, I am helping my adviser with this as a side project so I have limited knowledge on the topic and I also have limited knowledge on RNAseq as I mostly deal with full genomes. Lastly, I also do know that this research question is very narrow and I believe the concept can be done by Salmon, but this is where I would need your feedback. . The idea is to look for the number of reads that map to two versions of a gene. The gene is split into two version by exon skipping and is not alternatively spliced. I also want to make this process fast as the idea would be to look for differences in the proportions of gene versions that are created based on a large databases of RNAseq data (easily 200+ different RNAseq experiments). So to make it quick I am only passing two transcripts to Salmon (T - 1, and T - 2) for version 1 and 2 of the transcript, where version 2 has the 2nd exon (of 4 total exons) removed. . Now I know Salmon was created to map reads to a large number of transcripts across the whole genome, but I believe it still should be possible to narrow down the view to only 1 gene with 2 versions. I believe I just need to set the parameters right, but I also want to set the parameters in a general way so that my script can work across different species with different input RNAseq data. The other problem is that we currently do not have an idea of what proportion of these two versions of the gene should actually exist in the RNAseq data I have (which we didn't perform but just grabbed a random sample from GenBank to test with). My adviser wants to first try and test it computationally first and then verify it in the lab (which is somewhat backwards in my mind, as it's really just a shot in the dark and from my preliminary analysis of Salmon, di",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/401:559,feedback,feedback,559,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401,1,['feedback'],['feedback']
Usability,"Hello,. I'm trying to create an index file with salmon (version 1.4.0) according to this tutorial here: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ (because I would like to find isoforms using isoformSwitchAnalyseR and the salmon files I already have didn't seem to work, and this tutorial was recommended in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html ) for preparing transcriptome indices (mapping-based mode) ). Since my samples are from humans, I replaced the mouse-files with the (still) current Gencode files for human (v37), and everything seemed to work well until the last step:. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. I left my machine alone for almost 8 h (no other programs, nothing to disturb it). When I finally had a look at it, the terminal was still in Round0, the system monitor still showed some action, and the system was still responsive (no freeze or anything). When I had a look at the index directory, there were no changes in any files after the sub-directory ""twopaco_tmp"" was created, and this directory only contains a file called bifurcations.bin, which was 0 byes (after 8h of computing time). Therefore, I rebooted my system (if there went anything wrong that I couldn't see) and tried changing the parameters. . 1. I changed the number of threads to -p 6 since my machine is rather old, and maybe -p 12 was too much. 2. Since someone seemed to have a similar problem and would have tried changing the filter size next, I tried to change the filter size by adding --filterSize 2^39 (at the same time, I also added --keepDuplicates because I want to use the data to find differentially expressed isoforms later on). salmon index -t gentrome.fa.gz -d decoys.txt -p 6 --keepDuplicates --filterSize 2^39 -i salmon_index --gencode. However, this didn't work and got killed. . I thought it might be due to the --filterSize argument and changed it to 39 (because maybe the 2^ is assu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/643:942,responsiv,responsive,942,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643,1,['responsiv'],['responsive']
Usability,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/139:946,simpl,simple,946,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139,1,['simpl'],['simple']
Usability,"Hey, I ran into couple of more typos in the --help documentation.; In Salmon Quant Reads mode, the option --writeUnmappedNames says the the file created is named unmapped.txt, while it is actually named unmapped_names.txt; In Salmon Quant Alignment mode, the option --sampleUnaligned says the un-aligned reads are also written to the file ""posSample.bam"", I suppose a 't' is missing there?; Also, when I ran Salmon Quant with Alignment mode, the output auxiliary directory was still named just 'aux' instead of 'aux_info' per the newest change log. ; Sorry if I'm bothering with these pesky details, I though it might help when clearing the documentation a bit.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/81:628,clear,clearing,628,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/81,1,['clear'],['clearing']
Usability,"Hey,. I'm pretty new to RNA-seq so hope this question is formatted okay! . I've carried out my RNA-seq analysis using STAR into feature counts but wanted to redo the analysis using Salmon as everything I'm reading says its the way forward! I've tried to create a genome index using the following files. ``; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/cdna/Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz; ``; Then I created the decoy file and the combined file them using the following. ; `; grep ""^>"" <(zcat Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz) | cut -d "" "" -f 1 > decoys.txt; cat Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz > gentrome.fa.gz; `; And finally ran the index using ; `./salmon index -t /data/fcr18ab/Refrence/New_Refrence_Files/gentrome.fa.gz -d /data/fcr18ab/Refrence/New_Refrence_Files/decoys.txt -p 1 -i /fastdata/fcr18ab/Adrian_salmon_index/salmon_index `. The error I get is shown below in the file. It says it can't find any of the decoy sequences in the combined file, but I have searched through them and they are there?. [Super_Low.txt](https://github.com/COMBINE-lab/salmon/files/6254711/Super_Low.txt). Sorry if this is a super simple issue. The cell line is a cancer cell which has not got defined chromosomes. I'm sure its me messing up somewhere but I can't figure out where!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/644:1419,simpl,simple,1419,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/644,1,['simpl'],['simple']
Usability,"Hi @rob-p . I have a question on the ""right"" way of tximport/DESeq2 after salmon quant. . Why I ask ""right way"" - is because I am a bit confused with the tximport vignette. 1 - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor. ```; Do not manually pass the original gene-level counts to downstream methods without an offset. ; The only case where this would make sense is if there is no length bias to the counts, as happens in 3’ tagged RNA-seq data (see section below). ; The original gene-level counts are in txi$counts when tximport was run with countsFromAbundance=""no"". ; This is simply passing the summed estimated transcript counts, and does not correct for potential differential isoform usage (the offset), which is the point of the tximport methods (Soneson, Love, and Robinson 2015) for gene-level analysis. ; Passing uncorrected gene-level counts without an offset is not recommended by the tximport package authors. ; The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. ; Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression.; ```. 2 - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Salmon. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene); head(txi.salmon$counts). ```; Why the confusion - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor - states ; - The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/581:655,simpl,simply,655,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581,1,['simpl'],['simply']
Usability,"Hi @rob-p . I wanted to know if you (or anyone else in your team) has looked into **_how the[ 'seal' program from BBTools](https://jgi.doe.gov/data-and-tools/bbtools/bb-tools-user-guide/seal-guide/) compares with Salmon_**. I ask this for couple of reasons based on comments on Biostars postings (in fact you have also posted in 1 of the threads):. 1. https://www.biostars.org/p/130451/#209851 - This is the post by Brian Bushnell (the developer of all the tools in BBTools) in Biostars about 4 years back (and **_you have also posted there_** https://www.biostars.org/p/130451/#130507). . This is what Brian wrote then:; ```; BBMap and Seal can be used for expression analysis, ; but not differential-expression analysis, without an additional program. ; However, they do the hard work of the actual mapping. ; Maybe I should write something for DE analysis; ```. 2. **_This is the more important posting of Brian from 4 years back_** - https://www.biostars.org/p/175454/#175625 - and I want to draw your attention to ; ```; If all you want to know is whether gene A or B is more upregulated ; in your experiment, then mapping to a transcriptome using any aligner is fine... ; but you could accomplish the same thing ; faster and probably more accurately using a kmer-matching tool like Seal; ```. Couple of questions/suggestions:. 1. Have you considered comparing salmon with seal and how the two compare . 2. Probably, it would/could be a good idea to combine the best of both the tools ```seal and salmon``` for the benefit of the research community in general by collaborating with Brian?. Thanks,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/499:180,guid,guide,180,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/499,2,['guid'],['guide']
Usability,"Hi Rob and team,. the geneMap option wasn't automatically detecting my gff file as a transcript->gene mapping in the correct format, instead treating it as a simple mapping and yielding interestingly a single result in `quant.gene.sf`, ""UTR"" (which lies in column 3 of the GFF; unclear to me why it didn't pull from column 2 instead, yielding gene names ""Ensembl"" and ""Havana""). Anyway, I found that Salmon is really only matching on the extension `.gtf` , **instead of `.gtf or .gff` as the help text indicates** :; ```; -g [ --geneMap ] arg File containing a mapping of; transcripts to genes. If this file is; provided Salmon will output both; quant.sf and quant.genes.sf files,; where the latter contains aggregated; gene-level abundance estimates. The; transcript to gene mapping should be; provided as either a GTF file, or a in; a simple tab-delimited format where; each line contains the name of a; transcript and the gene to which it; belongs separated by a tab. The; extension of the file is used to; determine how the file should be; parsed. Files ending in '.gtf' or; '.gff' are assumed to be in GTF format;; files with any other extension are; assumed to be in the simple format. ```; The offending comparison in `SalmonUtils.cpp` is here:; https://github.com/COMBINE-lab/salmon/blob/335c34b196205c6aebe4ddcc12c380eb47f5043a/src/SalmonUtils.cpp#L2241. While I have brought this to attention, it would be nice to also check for the extension `gff3` as well, since this is what Gencode supplies (and many people tend to append the `3` to the extension in practice). Kind regards and thanks for doing great science",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/114:158,simpl,simple,158,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/114,3,['simpl'],['simple']
Usability,"Hi all,. I just wanted to provide this space to start a discussion and get feedback about what people believe to be the most sensible _default_ settings for Salmon (in different modes). We're happy to discuss any suggestions, but can start with some specific questions. Here is the most basic. Right now, Salmon has an ""opt-in"" philosophy. That is, a default run starts with the most basic features, and users opt-in to anything that has non-trivial cost (e.g. gibbs sampling, bias correction, and even things that have close to trivial cost but may not always be useful like dumping the equivalence classes to disk). Perhaps some of these defaults should be re-considered, or perhaps this philosophy makes sense as long as the ""opt-in"" behavior is made clear? It's worth noting that one current benefit of this ""opt-in"" mentality is that defaults are more _consistent_ among data-types. For example, GC-bias modeling for single-end libraries is still a feature in testing (on the develop branch), and so could not reasonably be made default at the current time.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/109:75,feedback,feedback,75,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/109,2,"['clear', 'feedback']","['clear', 'feedback']"
Usability,"Hi all. I'm doing a fairly simple RNA Seq experiment right now, but ran into a problem when trying to quantify reads from the chloroplast (A. thaliana). For the entire analysis, I am using the nf-core/rnaseq pipeline (default parameters) which gives me Alignment (STAR) based counts from Salmon at the end and additional counts from FeatureCounts. The whole pipeline runs without problems and the mapping looks good. When I compare the number of reads between Salmon and FeatureCounts, the results are pretty much the same for the nucleus, but for the chloroplast they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/798:27,simpl,simple,27,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798,1,['simpl'],['simple']
Usability,"Hi everyone,. I have two questions. Some motiviation: I'm working on figuring out how to support hg38 with the alt alleles for using transcriptome alignments or the SA method. I'd prefer to just use the whole genome alignments since we generate those for QC purposes anyway. STAR doesn't work with the alt alleles so we can't use it for hg38 and have to use hisat2 for hg38 with alts, but hisat2 doesn't have the genome-to-transcriptome shifter built in. I'm reluctant to use the ubu sam-xlate tool to do genome to transcriptome mappings since that project looks abandoned and I'm not super clear on what Salmon is expecting the format to be for the shifted file. So my current plan is to use the SA method and provide decoys. I have two questions:. 1) Am I going to need to ignore the alt alleles when creating the decoys file? My version of the decoys for hg38 with the alt-alleles has about twice as many decoy regions as the one calculated on just the toplevel chromosomes. 2) What is the minimal format that Salmon is expecting the transcriptome mapped file to look like? Do I need to just report which transcript and which position for every transcript a read overlaps, or do I need to fix the CIGAR string too?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/371:591,clear,clear,591,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/371,1,['clear'],['clear']
Usability,"Hi, . Running much of anything in command line is new to me. I ran the line below without success. . > ./bin/salmon quant -t transcripts.fa -l OSR -a myseq.bam -o salmon_quant. I keep getting the error below and am not sure why. . > [jointLog] [critical] Note: Alignment-free mapping (i.e. mapping without subsequent selective-alignment) has not yet been throughly tested under the pufferfish-based index and using the pufferfish-based mapping strategies. Thus, disabling of selective-alignment is not currently allowed. We may, potentially explore re-enabling this option in future versions of salmon. I am betting this is something really simple. I'd appreciate any help... Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/511:641,simpl,simple,641,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/511,1,['simpl'],['simple']
Usability,"Hi, ; I've been trying to run alevin for single cell data. I've been using test data and the salmon alevin command seems to work right until the end, and then the core is dumped just as counts are in the csv format. I've also tried running it without --dumpCsvCounts and this also results in a segmentation fault. . What I was running:; salmon alevin -l ISR -1 ./hgmm_100_S1_L002_001.fastq.1.gz -2 ./hgmm_100_S1_L002_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index -p 10 -o salmon.dir/hgmm_100_S1_L002_001 --tgMap transcript2geneMap.tsv --dumpCsvCounts. Final part of output:; Analyzed 287 cells (100% of all).; [2019-01-25 11:14:44.509] [alevinLog] [info] Total 46729.00 UMI after deduplicating.; [2019-01-25 11:14:44.509] [alevinLog] [warning] Skipped 63 barcodes due to No mapped read; [2019-01-25 11:14:44.529] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-25 11:14:44.561] [alevinLog] [info] Starting Import of the gene count matrix of size 224x19879.; [2019-01-25 11:14:44.576] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-25 11:14:45.067] [alevinLog] [info] Done Importing gene count matrix for dimension 224x19879; [2019-01-25 11:14:45.770] [alevinLog] [info] Starting dumping cell v gene counts in csv format; Segmentation fault (core dumped) . I am running version 0.12.0 of salmon, installed via bioconda. I have also allocated 30GB of memory for the job, so this isn't a memory issue.; I have seen other users having similar issues using salmon quant having installed salmon through conda and the suggestions have been to install from binaries. This is not an option as salmon needs to be run easily using a conda environment. ; Has any headway been made into fixing the bioconda build?. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337:861,Clear,Clearing,861,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337,1,['Clear'],['Clearing']
Usability,"Hi, such a beautiful RNA-seq analysis tool!!!. So when I used it I have a question: does the relatively high(0.9~) or low(0.1~) strand bias mean that the library is stranded? I can't well understand the exact meaning of this value. Could you give me some guidance? Great gratitude for you~~~",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/762:255,guid,guidance,255,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/762,1,['guid'],['guidance']
Usability,"Hi,. I am testing Alevin, and would like to compare against Cell Ranger on my data set. While primary mapping statistics indicate more reads mapped, I would like to compare the results in the final analysis, in Seurat. Many steps rely on HGNC Gene symbols as opposed to Ensemble IDs. ### What is the best way to convert ensembl IDs to gene symbol in Alevin?. Alevin (aligned as in this [gist](https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001#file-alevin-default-ipynb), imported to R in this [tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/)) returns ensembl IDs in format like ""ENSG00000215910.7"". ```R; require(""fishpond""); require(""tximport""); ; files <- file.path(""[...]/alevin/quants_mat.gz""); file.exists(files); txi <- tximport(files, type=""alevin"");; rownames( txi$counts); ``` . I am currently converting these using biomart with suboptimal adaptations:. ```R; BiocManager::install(""biomaRt""); require('biomaRt'); mart <- useDataset(""hsapiens_gene_ensembl"", useMart(""ensembl"")); genes <- rownames(txi$counts); df$id <- NA; meta.genes <- getBM(attributes = c(""ensembl_gene_id"",""external_gene_name"", ""description""), ; values = genes, mart = mart ); ```; Manual adaptations:. 1. I trim IDs after dot (""ENSG00000215910.7"" → ""ENSG00000215910”); 2. I remove NA values (not all trimmed gene IDs are found in biomaRt); 3. I add up counts of genes (per ENS.ID) with the same gene symbol, e.g. “Y_RNA” or “HSPA14”. ```R; g.LookUp = meta.genes[,2]; names(g.LookUp) = meta.genes[,1]; ; # 1. Trim; ensembl_ID.simple =str_split_fixed(genes,pattern = '\\.', n=2)[,1]; ; genes.converted = g.LookUp[ensembl_ID.simple]; any.duplicated(genes.converted); ; # ...etc; ```. Is there a better way to convert IDs, possibly implemented in Alevin / Salmon?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/448:1549,simpl,simple,1549,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/448,2,['simpl'],['simple']
Usability,"Hi,. I have been running salmon v1.4.0 on 324 samples. In 8 samples I did not get any quantification and the process ended with a warning like "".....salmon was only able to assign 0 fragments to transcripts in the index...."". The command line I used is as follow (I simplified the paths and file names):; salmon quant -p 20 -i Salmon_Index -l A --seqBias --gcBias --biasSpeedSamp -1 $FASTQ1.R1.fastq.gz -2 $FASTQ2.R2.fastq.gz -o $outDIR --validateMappings. These same 8 samples were processed with HISAT2 and the overall alignment rate was above 80%. I attached the log file for one of the 8 runs; [logFile.txt](https://github.com/COMBINE-lab/salmon/files/5846381/logFile.txt). Do you have any suggestions ? do you need more info ?. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/616:266,simpl,simplified,266,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/616,1,['simpl'],['simplified']
Usability,"Hi,; I am used to work with RNA-seq data sets from human or mouse (thus well-annotated organisms), for which I always use Salmon.; Now a colleague of mine asked whether I could help him with analyzing a data set obtained from a non-model organism (A) for which even no reference transcriptome is available. I therefore would like to map the reads to the transcriptome of the closest species (B) available in ENSEMBL. [It basically resembles the situation mentioned [here](https://www.biostars.org/p/253396/) at the BioStars forum, but then at the transcriptome level]. . I started by running Salmon using the settings I normally use for mouse, but the the percentage of mapped reads is extremely low, i.e varying between 0.5-2%. That it would be lower than usual I expected, but not this low....; Because I cannot easily see the forest for the trees, I would appreciate if some suggestions could be given that in effect 'relax' the criteria for mapping, eventually resulting in an increased mapping%. Thanks!; G. My code/arguments:; Input: 150 bp paired-end RNA-seq data.; Average number of reads per sample: ~22M. Transcriptome index file is 'decoyed'; generated with default settings (k=31). Salmon arguments:; ```; /home/guidoh/SALMON/salmon-latest_linux_x86_64/bin/salmon quant -i ./Lotgi1_combined_index \; 	--libType A \; 	--seqBias \; 	--gcBias \; 	--biasSpeedSamp 5 \; 	--validateMappings \; 	--numGibbsSamples 20 \; 	-1 ${F1} \; 	-2 ${R1} \; 	-o ${salmonsubdir}$fn4; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/403:1224,guid,guidoh,1224,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/403,1,['guid'],['guidoh']
Usability,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/252:740,learn,learned,740,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252,2,"['Guid', 'learn']","['Guido', 'learned']"
Usability,"Hi,; I would like quantify guide-RNAs (based on 5'-tagged scRNAseq 10X feature barcoding) using Alevin. Read 1 is 26bps long (16 CB +10 UMI) and Read 2 is 58bps long (19 constant region + 21 guide sequence). Now, when I use the following settings . `salmon alevin -l ISR --barcodeLength 16 --umiLength 10 --end 5 --featureStart 19 --featureLength 21 `. I get this error . > `Transcript to Gene Map File not provided`. . However, when I use the following instead. `salmon alevin -l ISR --citeseq --featureStart 19 --featureLength 21; `. It works but since `--citeseq` assumes `--umiLength=12`, I get the following output . > `[2020-06-03 13:53:30.298] [alevinLog] [info] set CITE-seq minScoreFraction parameter to : 0.797619; > ; > [2020-06-03 13:53:30.298] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-03 13:53:30.298] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-03 13:53:30.298] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-03 13:53:30.304] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > ; > processed 52 Million barcodes; > ; > [2020-06-03 13:54:43.733] [alevinLog] [info] Done barcode density calculation.; > [2020-06-03 13:54:43.733] [alevinLog] [info] # Barcodes Used: 52200250 / 52200250.; > [2020-06-03 13:54:43.826] [alevinLog] [info] Forcing to use 100000 cells; > [2020-06-03 13:54:43.964] [alevinLog] [info] Throwing 49909 barcodes with < 10 reads; > [2020-06-03 13:54:43.984] [alevinLog] [info] Total 50092(has 201 low confidence) barcodes; > [2020-06-03 13:54:44.191] [alevinLog] [info] Done True Barcode Sampling; > [2020-06-03 13:54:44.285] [alevinLog] [info] Total 1.70493% reads will be thrown away because of noisy Cellular barcodes.; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done populating Z matrix; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total 0 CB got sequence corrected; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done indexing B",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531:27,guid,guide-RNAs,27,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531,2,['guid'],"['guide', 'guide-RNAs']"
Usability,"Hi,; When generating an index for the latest human gencode transcriptome (release 35) I noticed this message:; `[2020-11-25 09:42:04.534] [puff::index::jointLog] [warning] Entry with header [ENST00000674361.1|ENSG00000241743.4|OTTHUMG00000022220.5|OTTHUMT00000530527.1|XACT-203|XACT|347561|lncRNA|] was longer than 200000 nucleotides. This is probably a chromosome instead of a transcript.`. Since I don't recall that I have seen this notification before when doing previous analyses, I had a look at this particular transcript. It turns out it indeed has been annotated as a (very long!), but apparently true transcript (a lncRNA):; `Transcript: XACT-203 ENST00000674361.1, Exons: 2, Coding exons: 0, Transcript length: 347,561 bps. Manual annotation (determined on a case-by-case basis) from the Havana project.`; See [here](http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;g=ENSG00000241743;r=X:113616300-114059289;t=ENST00000674361).; ; I realize that this is not really a bug (you have to set such cutoff at some (likely arbitrary??) value), and it applies to only a single human transcript, but considering this case, would it also be OK to set the cutoff to e.g. 400k (instead of 200k)?. Thanks for addressing my curiosity!; Guido. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; - salmon 1.3.0; **To Reproduce**; - I followed [this workflow](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) but using the latest human gencode files.; **Desktop (please complete the following information):**; - OS: Linux Fedora",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/591:1246,Guid,Guido,1246,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/591,1,['Guid'],['Guido']
Usability,"Hi,; after reading reading the docs at http://salmon.readthedocs.io/en/latest/salmon.html it seems to me nowhere was mentioned how to input single file with read pairs, occasionally with some singletons. Is that not supported? Please make it clear in the docs if the only way to feed salmon is via separate fwd and reverse files (and no singletons supported if -1 and -2 args are used). While at it, in teh same page in section `Quasi-mapping-based mode (including lightweight alignment)` is hidden how to index reference trasncriptome. Please move those parts at the beginning, before discussing `Providing multiple read files to Salmon`. Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/240:242,clear,clear,242,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/240,1,['clear'],['clear']
Usability,"Hi,; i met a problem when installing the index for salmon. The feedback suggests that ""server did not respond before timeout"". This problem is shown in the following picture.; I've already given it enough space for running, while it seems that it was stuck in the first step. And the index file only contains ""pre_indexing.log ref_indexing.log""; So could you please help me to solve this problem?; Thanks; ![image](https://user-images.githubusercontent.com/100278952/155299114-10a7e3b7-bf08-49aa-824d-48dcbaa1fd71.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/755:63,feedback,feedback,63,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/755,1,['feedback'],['feedback']
Usability,"Hi,; in your documentation, you clearly state that salmon expects a ""random"" order of reads and you suggest to shuffle the read files.; In my experiments, I created a set of unshuffled and shuffled .bam files (using samtools bamshuf). The resulting quant.sf files always were exactly identical. Is shuffling not longer needed (or probably never was for .bam files)? Or has salmon a built-in shuffling function?. Cheers,; Tobi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/155:32,clear,clearly,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/155,1,['clear'],['clearly']
Usability,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:865,learn,learn,865,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['learn'],['learn']
Usability,"Hi:; Recently, I learned to use salmon in our lncRNA research project. I am confused in a point. ; As shown in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html), according to our understanding, if we want those incompatible mappings will be discarded, the incompatPrior should be set as 0.0. And our RNA-Seq library type is dUTP based strand-specific RNA-Seq, so we should use ISR. ; But I am confused with https://gitter.im/COMBINE-lab/salmon?at=594a76d402c480e67268f02b and https://github.com/COMBINE-lab/salmon/issues/116; we want the expression level of antisense. Since there are about 0.5~1% reads can be the wrong reads mapped to the reverse strand of the gene (dUTP stranded protocol, the strand error (i.e. % of reads sequenced from the wrong strand of the RNA) is typically 0.5-1%). Can we use the incompatPrior option and get the expression level of antisense(right) in a single run?; This is our command line `salmon quant -i Ath_TX.index -l ISR -1 test_R1.fq.gz -2 test_R2.fq.gz -o TEST_TX_QUANT --incompatPrior 0.0 --seqBias --gcBias --threads 20`.; That those wrong mapped alignments (they didn't follow the ISR fule, maybe the error from the error of process of library construction) will be discarded.; Thank you and all the best.; Linhua",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/182:17,learn,learned,17,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/182,1,['learn'],['learned']
Usability,"I think something like this (like samtools, kallisto etc. ```; salmon v0.6.0 - description here. Usage: salmon <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Count blah; swim Whatever; ```. would be _much_ clearer than the current help. ```; salmon --help; Allowed Options:; -v [ --version ] print version string; --no-version-check don't check with the server to see if this is the; latest version; -h [ --help ] produce help message. Salmon v0.6.0; ===============. Please invoke salmon with one of the following commands {index, quant, swim}.; For more information on the options for these particular methods, use the -h; flag along with the method name. For example:. salmon index -h. will give you detailed help information about the index command.; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/72:231,clear,clearer,231,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/72,1,['clear'],['clearer']
Usability,"I'm looking for some guidance on recommendations / best practices for quantifying direct RNA / cDNA Nanopore reads using Salmon. It is my understanding that the selective alignment algorithm Salmon employs is not well-suited for long reads (#602), and therefore the software needs to be run in alignment mode for accurate counting. My main question then concerns the optimal parameters for the upstream alignment step. The ONT community seems to have settled on using minimap2 for this, but beyond that the guidance gets a bit murky... The [minimap2](https://github.com/lh3/minimap2/#map-long-splice) documentation suggests the following command for mapping long RNA reads:. `minimap2 -ax splice:hq -uf ref.fa reads.fq > aln.sam`. This approach seems to employ a splicing aware algorithm against a genomic reference, using canonical splicing signals to help map the transcripts. However, this method doesn't seem to be applicable to Salmon given the requirement that the reads are aligned directly to the transcriptome (hence the need to account for splicing with '_-ac splice_' is lost). An alternative approach I've seen (i.e., the one used in ONT's own DGE [pipeline](https://github.com/nanoporetech/pipeline-transcriptome-de)) is to use minimap2 to align to the transcriptome reference but to retain a large number of secondary mappings (-N 100 in minimap2):. `minimap2 -ax map-ont -N 100 transcriptome.fa reads.fq`. This makes more sense in terms of the _-ax_ preset used, but I guess I'm just wondering then what the optimal input for Salmon would be in order to get the most accurate count data? I know secondary mappings are important for the algorithm to calculate uncertainty / maximum likelihood, but is there an recommend number of these to retain? The logic behind allowing for a high number of secondary alignments when using a transcriptome reference is to account for the high similarity among isoforms. From a high-level view I could see how this might be problematic though, dependin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/790:21,guid,guidance,21,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790,2,['guid'],['guidance']
Usability,"I'm planning on using your wonderful Salmon tool v0.12.0 for generating TPM counts with a view to quantifying relative abundance of certain bacterial antibiotic resistance genes in my shotgun (human gut) metagenomes. So as to ensure strict mappings to the genes of interest, I would like to set the value of the flag '--minScoreFraction' to 0.90. Since its a metagenome with a truck-load of genes from several microbes, I plan to quantify only those genes that show >=90% identity at the nucleotide-level to the known antibiotic resistance genes (of interest). My question here really is whether setting the flag minScoreFraction to 0.90 achieves anything close to what I've in mind? Below is the full command line I used for Salmon-based quantification of the tetracycline resistance gene tetW. salmon quant --meta -i amr_indices/tetW_index -l A -1 Corr_clean_phiclean_10_8_L001_R1_001.fastq.gz -2 Corr_clean_phiclean_10_8_L001_R2_001.fastq.gz -o 10_tetW_test_quant --mimicStrictBT2 --validateMappings --minScoreFraction=0.90. I would highly appreciate any feedback from you in this regard. Many thanks in advance for your time.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/330:1058,feedback,feedback,1058,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/330,1,['feedback'],['feedback']
Usability,"I'm using Salmon to quantify isoforms in TCGA short-read data, which have fairly short reads (48-50 bp, generally). I noted on the documentation that a k-mer size of 31 while building the index is good for 75 bp and up, but shortening that length might be better for smaller reads. How short of an index should I use for TCGA, and how should I go about thinking about which number is optimal? I'm not sure what the tradeoffs are, and don't want to randomly pick a number smaller than 31 that may not be best. Thanks so much for any help or guidance you can provide! I've used STAR+RSEM, Kallisto, and have now settled on Salmon for my project, and I am really, really happy with its versatility, speed, and accuracy. Excellent work on this tool!. Kindest regards,; Ryan Englander. MD/PhD Candidate, GS3; Jackson Laboratory for Genomic Medicine",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/807:540,guid,guidance,540,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/807,1,['guid'],['guidance']
Usability,"Implementing a simple Gibbs sampler within Alevin to accept the option `--numCellGibbsSamples` and produce the `mean`, `variance`, and Gibbs estimates in the same format as of `--numCellBootstraps`. The default `thinning factor` is set to be `16`. . Additionally, we add `--dumpCellEq` to dump the deduplicated gene-level equivalence classes per cell.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/515:15,simpl,simple,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/515,1,['simpl'],['simple']
Usability,"Is it possible to use alevin with cell barcodes that have constant regions within them (see example below)?. bbbbbbccccccccccccbbbbbbcccccccccccc bbbbbb. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/654:264,clear,clear,264,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/654,2,['clear'],['clear']
Usability,"Issue with salmon for bulk RNA-seq. The following code was run to invoke salmon:; ```; docker run --rm -v /labs/Resources/mmulatta/MMUL_10:/mnt/indexdir/ resources/salmon salmon index -t /mnt/indexdir/gentrome.fa -d /mnt/indexdir/decoys.txt -p 8 -i /mnt/indexdir/index.salmon; ```; however, everytime I run it, I get the following error: ; Exception : [Error: The index version file /labs/khatrilab/Resources/mmulatta/MMUL_10/index.salmon/versionInfo.json doesn’t seem to exist. Please try re-building the salmon index.] . when in fact, the file exists. the gentrome.fa and decoys.txt files were created by following this tutorial (clearly changing the genome to mmulatta); https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ . Why is salmon not finding the index file that's clearly present in the given folder path?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/559:632,clear,clearly,632,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/559,2,['clear'],['clearly']
Usability,"NO BUG! I am presenting bulk RNA seq to non-bioinformaticians and wanted to go over how Salmon works in simple terms. . I tried understanding all the algorithms and models underlying the tool, but need help in explaining it more simply to a crowd of non-mathematicians. How would you explain the quasi mapping and quantification broadly and in simple terms? No need to get into deeper details. Just want an overview of a complicated mathematical pipeline. Presentation is on Monday so would really appreciate a timely response.; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/926:104,simpl,simple,104,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/926,3,['simpl'],"['simple', 'simply']"
Usability,No bug - How to explain Salmon workflow simply ? (avoid mathematics-heavy explanation),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/926:40,simpl,simply,40,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/926,2,['simpl'],['simply']
Usability,"Really simple question: can Alevin deal with the additional feature tags possible from 10Xv3? If not, will it at some point?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/381:7,simpl,simple,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/381,1,['simpl'],['simple']
Usability,Resume after skipQuant?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/567:0,Resume,Resume,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/567,1,['Resume'],['Resume']
Usability,"SK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13 Salmon/0.11.3-IGB-gcc-4.9.4; Salmon/0.9.1-IGB-gcc-4.9.4 Salmon/0.12.0-IGB-gcc-8.2.0 (D). * How was salmon installed (compiled, downloaded executable, through bioconda)?; through the biocluster in the University. * Which reference (e.g. transcriptome) was used?; converted the genomic fasta file to transcriptomic fasta file (described above); ; * Which read files were used?; the raw sequencing reads and the trimmed reads from the paired-end data. * Which which program options were used?; described above. **Expected behavior**; A clear and concise description of what you expected to happen. I've used the quassi mapping of Salmon using different versions several times and I expect to get different mapping rate per sample. I also expect to get different values of the parameters in the quant.sf parameters across all genes and across samples.; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ### For version 0.8. This is similar across all samples:; Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250 28.8836 527.392; LOC_Os01g01010.2 2218 250 1.84062 33.6083; LOC_Os01g01019.1 1127 250 0.0547668 1; LOC_Os01g01030.1 2464 250 4.43611 81; LOC_Os01g01040.4 1524 250 0.941635 17.1935; LOC_Os01g01040.1 2508 250 11.5632 211.135; LOC_Os01g01040.2 2482 250 8.02081 146.454; LOC_Os01g01040.3 2583 250 8.55554 156.218; LOC_Os01g01050.1 2039 250 17.2333 314.667. ### The counted total reads, observed total fragments, and the mapping rate is similar for all samples for both the raw-dat ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:4787,clear,clear,4787,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['clear'],['clear']
Usability,"Salmon version: 0.13.1 (installed via pre-compiled binary). I used salmon to quantify some samples and wanted to use the `quantmerge` command to produce a combined table. However, the merged table I got as output only contained 17 lines (of 52228 in the quant.genes.sf files). I was able to identify that the problem was related somehow to the ""Name"" column itself, although I didn't find any obvious pattern for failure. For example, if I rename all the genes to simply ""1"", ""2"", ... and then `quantmerge`, I get a properly combined table with all samples/genes. Looking back at the ""original"" data with the gene names, I find that the truncated merged table consistently/always truncates immediately *after* processing some gene names. For example, the 16th gene name in my ""quant.genes.sf"" table happens to be ""Erdr1"". If this line is moved to the top of that file, then the merged table will truncate at 2 (the header counting for one of those, obviously). Unfortunately, it's not just ""Erdr1"". If that line is moved to the end of the file, or deleted entirely, there is another failure at gene ""Gm28674"", which happens to be the 19th gene. And so on for a very large number of names (I gave up after removing ~30 one at a time). I've now tested with a few different samples and with a number of randomly selected subsets of the original quant files and the behavior is consistent. I can't figure out what the pattern is, but ""Erdr1"", ""Gm28674"", and all the other genes I discovered with my ad-hoc process above, always cause `quantmerge` to truncate the output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/356:464,simpl,simply,464,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/356,1,['simpl'],['simply']
Usability,"Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.7.1908 (Core); Release:	7.7.1908; Codenam",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:2878,clear,clear,2878,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['clear'],['clear']
Usability,"So, it won't let me use .fq.1 and .fq.2 - it has to be .1.fq and .2.fq. I think either allowing a 'force' or simply checking to see if the file is FASTQ would be great.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/28:109,simpl,simply,109,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/28,1,['simpl'],['simply']
Usability,"The answer here could simply be 'no' 😄 but as this question came up recently for me, and it is one I've seen mentioned on the `nf-core/scrna` slack, I figured I'd raise it here to get your thoughts. . There is a standard CellRanger workflow for the 10x V(D)J approach (https://support.10xgenomics.com/single-cell-vdj/software/pipelines/latest/using/vdj). Is this something remotely achievable with `alevin/alevin-fry`? It would be great for those who have matched 10x scRNA-seq to be able to process everything with the same package!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/861:22,simpl,simply,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/861,1,['simpl'],['simply']
Usability,"The documentation states. >If your alignments for the sample you want to quantify appear in multiple .bam/.sam files, then you can simply provide the Salmon -a parameter with a (space-separated) list of these files. But I somehow can't get that to work. I have two bam files, each of them with (different) STAR alignments to the same reference. When I pass either one of them, salmon works just fine, e.g. with the following commands:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run1/Aligned.toTranscriptome.out.bam; # or; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run2/Aligned.toTranscriptome.out.bam; ```; But when I try to pass both of them, I get the following error:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf) -a run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fasta }; # [ libType ] => { IU }; # [ threads ] => { 2 }; # [ output ] => { sample1/quantitation }; # [ alignments ] => { run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam }; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; Logs will be written to quantitation/logs; numQuantThreads = 2; parseThreads = 2; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""run1/Aligned.toTranscriptome.out.bam"", fasta = ""transcripts.fasta"" . . .replaced 0 non-ACGT nucleotides with random nucleotides; done. processed 0 reads in current roundSegmentation fault (core dumped); ```. The `Checking that provided alignment files have consistent headers . . . done` line seems to indicate that both bam files were recognized and that the headers matched. . Any hints on what might be going on?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/104:131,simpl,simply,131,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104,1,['simpl'],['simply']
Usability,"There has been a small amount of discussion about the BD Rhapsody barcode / sequence format (e.g. see [here](https://github.com/COMBINE-lab/salmon/issues/445#issuecomment-551083490)), but it would be great if the option could be integrated into the code. BD has produced a [Single Cell Genomics Bioinformatics Handbook](https://www.bd.com/documents/guides/user-guides/GMX_BD-Rhapsody-genomics-informatics_UG_EN.pdf) which has the following information about the R1 read structure on pg 14:. 5' CLS1 - L1 - CLS2 - L2 - CLS3 - UMI - poly(T); 9 12 9 13 9 8 18; [1-9] [22-30] [44-52][53-60]. > **Cell Label** Information of the cell label is captured by bases in three sections (CLS1, CLS2, CLS3) along each R1 read. Two common sequences (L1, L2) separate the three CLSs, and the presence of L1 and L2 relates to the way the capture oligonucleotide probes on the beads are constructed. By design, each CLS has one of 96 predefined sequences, which has a Hamming distance of at least four bases and an edit distance of at least two bases apart. A cell label is defined by the unique combination of predefined sequences in the three CLSs. Thus, the maximum possible number of cell labels is 96^3 (884,736). A cell label is represented by an index between 1–96^3. > Reads are first checked for perfect matches in all three pre-designed CLS sequences at the expected locations, CLS1:; position 1–9, CLS2: position 22–30, and CLS3: position 44–52. Reads with perfect matches are kept. In other words...; - Concatenate subsequences 1-9, 22-30, and 44-52 to form a 27-base cell label; - Extract subsequence 53-60 as the UMI . > **UMI** By design, the UMI is a string of eight randomers immediately downstream of CLS3. If the CLSs have perfect matches or base substitutions, the UMI sequence is at position 53–60. For reads with insertions or deletions within the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/628:349,guid,guides,349,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628,2,['guid'],['guides']
Usability,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/276:632,progress bar,progress bar,632,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276,1,['progress bar'],['progress bar']
Usability,"To whom it may concern,. I am running Salmon with ""--numBootstraps 100"", but I am unsure where the bootstrapped estimates are doing. Are they incorporated directly into the *.quant.sf file, or is the only output from bootstrapping sent to the ""bootstraps.gz"" file? Thanks so much for any guidance you can provide!. Kindest regards,; Ryan Englander",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/818:288,guid,guidance,288,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/818,1,['guid'],['guidance']
Usability,"To whom it may concern,. I have been using Salmon to quantify RNA-seq data using a new long-read RNA sequencing-based GTF I have developed. When I run Salmon on RNA-seq samples from TCGA (read length = 50 bp, kmer length = 21), I tend to get ~95% of reads mapping to my transcriptome. However, when I use the same script to run my pipeline on in-house sequenced data (read length = 150 bp, kmer length = 21), I am getting only around 80-85% of reads mapping to my transcriptome. According to STAR, >90% (usually >95%) of these same in-house samples mapped to the genome. Why am I getting lower mapping rates? Could read length have something to do with it? Thanks so much for any advice or guidance you can provide. Script: ; [5_runSalmon.sh.zip](https://github.com/COMBINE-lab/salmon/files/10262688/5_runSalmon.sh.zip); (The only difference between my TCGA and in-house runs are that for TCGA I use ""-i IU"" and for my in-house samples I use ""-i ISR"" due to differences in the strandedness of the prep protocols). Yours most sincerely,; Ryan Englander",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/819:690,guid,guidance,690,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/819,1,['guid'],['guidance']
Usability,"`419663 Segmentation fault (core dumped) `; **To Reproduce**; Steps and data to reproduce the behavior:; Code ran:; `salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant`. Specifically, please provide at least the following information:; * Which version of salmon was used? 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? module installed on HPC; * Which reference (e.g. transcriptome) was used? gencode.v44.transcriptome (Human); * Which read files were used? bam; * Which program options were used? salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant output.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Server Response: Not Found; # salmon (alignment-based) v1.10.2; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ threads ] => { 24 }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { U }; # [ alignments ] => { 007_D14_transcript.bam 007_D1_transcript.bam 014_D14_transcript.bam 014_D1_transcript.bam 069_D14_transcript.bam 069_D1_transcript.bam 127_D14_transcript.bam 127_D1_transcript.bam 36S_D14_transcript.bam 36S_D1_transcript.bam SCTI_D14_transcript.bam SCTI_D1_transcript.bam SCTI_D1_2000ng_transcript.bam ioGLUT_D7_transcript.bam ioMGL_D10_transcript.bam }; # [ output ] => { /scratch/prj/ppn_microglia_mod/directrna/salmon/transcripts_quant }; Logs will be written to /scratch/prj/ppn_microglia_mod/directrna/salmon/tra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:1099,clear,clear,1099,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['clear'],['clear']
Usability,"ath(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene); head(txi.salmon$counts). ```; Why the confusion - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor - states ; - The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression; - The second method is to use the tximport argument countsFromAbundance=""lengthScaledTPM"" or ""scaledTPM"", and then to use the gene-level count matrix txi$counts directly as you would a regular count matrix with these software. Let’s call this method “bias corrected counts without an offset”. Now, if I were to use the 2nd bullet as guide, shouldn't txi be generated this way for use with DESeq -- see the addition of `countsFromAbundance = ""lengthScaledTPM""` to tximport line. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene, countsFromAbundance = ""lengthScaledTPM""); head(txi.salmon$counts); write.csv(as.data.frame(txi.salmon$counts), file = ""tx2gene_NumReads.csv""); ```. And then use the tx2gene_NumReads.csv with DESeqDataSetFromMatrix, where the countData comes after reading in tx2gene_NumReads.csv upstream in the code. **Note**: I am using DESeqDataSetFromMatrix here and not DESeqDataSetFromTximport as I have used tximport with countsFromAbundance=lengthScaledTPM. ```; library(""DESeq2""); dds <- DESeqDataSetFromMatrix(countData = cts,; colData = coldata,; design = ~ condition); dds; ```. I also saw these 2 links - https://hbctraining.github.io/DGE_workshop_salmon/lessons/07_DGE_summarizing_workflow.html and https://hbctraining.github.io/DGE_work",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/581:2358,guid,guide,2358,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581,1,['guid'],['guide']
Usability,bType ] => { ISR }; ### [ mates1 ] => { SRR6054189.sra_1.fastq }; ### [ mates2 ] => { SRR6054189.sra_2.fastq }; ### [ dropseq ] => { }; ### [ index ] => {~/Documents/CordBlood/data/index_15 }; ### [ threads ] => { 4 }; ### [ output ] => {~/Documents/CordBlood/data/alevin4p_out_combined }; ### [ tgMap ] => {~/Documents/CordBlood/data/txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-07-26 11:15:08.510] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-26 11:15:08.524] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 471 Million barcodes. [2018-07-26 11:25:20.231] [alevinLog] [info] Done barcode density calculation.; [2018-07-26 11:25:20.231] [alevinLog] [info] # Barcodes Used: 470701906 / 471465434.; [2018-07-26 11:25:30.228] [alevinLog] [info] Knee found left boundary at 202 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Gauss Corrected Boundary at 22 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Learned InvCov: 1044.2 normfactor: 295.235; [2018-07-26 11:25:31.135] [alevinLog] [info] Total 222(has 200 low confidence) barcodes; [2018-07-26 11:25:31.440] [alevinLog] [info] Done True Barcode Sampling; [2018-07-26 11:25:31.789] [alevinLog] [info] Done populating Z matrix; [2018-07-26 11:25:31.793] [alevinLog] [info] Done indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] L,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/258:1960,Learn,Learned,1960,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258,1,['Learn'],['Learned']
Usability,"ce) barcodes; > [2023-08-17 22:13:23.660] [alevinLog] [info] Done True Barcode Sampling; (some lines later); > [2023-08-17 22:14:04.046] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2023-08-17 22:14:04.046] [jointLog] [info] Counted 0 total reads in the equivalence classes; > [2023-08-17 22:14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quantitating the read1 file with; > salmon quant -i /ref/gencode.v43.transcripts/ -l ISR -r r1.fastq.gz -p 30 -o work/salmon_output. behaves as expected and prints this and proceeds. > [2023-08-17 22:21:17.619] [jointLog] [info] Computed 618403 rich equivalence classes for further processing; > [2023-08-17 22:21:17.619] [jointLog] [info] Counted 6085013 total reads in the equivalence classes; > [2023-08-17 22:21:17.632] [jointLog] [info] Number of mappings discarded because of alignment score : 166235099.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/867:1434,simpl,simpler,1434,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867,2,['simpl'],['simpler']
Usability,"coys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index with only the gencode.v36.transcripts.fa.gz, and the mapping rate for my fastq files were 42-55%, which i think is quite low (based on what i read, it is expected to be around 70%). Then, I thought i might give a go with building decoy-aware transcriptome index, and this did not go well as i presented above. . I found an old post with the similar issue, which the conclusion was that the index building was not completed due to memory allocation on the cluster. I was wondering if this is the same with my case, what memory allocation should i ask the admin for to do this index building job? Any guidance on this would be greatly appreciated, and thank you in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/603:3789,clear,clear,3789,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603,2,"['clear', 'guid']","['clear', 'guidance']"
Usability,"ed more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/304:2118,clear,clear,2118,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304,1,['clear'],['clear']
Usability,"ed; [2022-12-03 15:58:24.122] [alevinLog] [info] Done indexing Barcodes; [2022-12-03 15:58:24.122] [alevinLog] [info] Total Unique barcodes found: 16409283; [2022-12-03 15:58:24.122] [alevinLog] [info] Used Barcodes except Whitelist: 187465; [2022-12-03 15:58:24.389] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2022-12-03 15:58:24.389] [alevinLog] [info] parsing read library format; [2022-12-03 16:17:47.714] [alevinLog] [info] Starting optimizer. [2022-12-03 16:17:47.868] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:17:47.868] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 17192510.00 UMI after deduplicating.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 1333800 BiDirected Edges.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLog] [info] setting maxHashResizeThreads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/814:3649,Clear,Clearing,3649,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814,1,['Clear'],['Clearing']
Usability,"eger width = 32; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] seqSize = 2,210,067,304; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] rankSize = 2,210,067,304; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] edgeVecSize = 0; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] num keys = 1,869,461,974; ^M[Building BooPHF] 0.194% elapsed: 0 min 0 sec remaining: 3 min 39 sec^M[Building BooPHF] 0.206% elapsed: 0 min 0 sec remaining: 3 min 33 sec^M[Building BooPHF] 0.394% elapsed: 0 min 1 sec remaining: 2 min 45 sec^M[Building BooPHF] 0.406% elapsed: 0 min 1 sec remaining: 2 min 44 sec^M[Building BooPHF] 0.594% elapsed: 0 min 1 sec remaining: 2 m; psed: 0 min 56 sec remaining: 1 min 16 sec^M[Building BooPHF] 42.4 % elapsed: 0 min 56 sec remaining: 1 min 16 sec^M[Building BooPHF] 42.6 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.6 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.8 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.; salmon index was invoked improperly.; For usage information, try salmon index --help; ````. **To Reproduce**; Steps and data to reproduce the behavior:. `salmon index -t input.fa -i input.index`. Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? - biconda; * Which reference (e.g. transcriptome) was used? - metagenome; * Which read files were used? ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux- HPC; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Thanks.; Ugur",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/837:6287,clear,clear,6287,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837,1,['clear'],['clear']
Usability,"ellular barcodes.; [2019-07-18 14:15:58.709] [alevinLog] [info] Done populating Z matrix; [2019-07-18 14:15:58.741] [alevinLog] [info] Total 56814 CB got sequence corrected; [2019-07-18 14:15:58.750] [alevinLog] [info] Done indexing Barcodes; [2019-07-18 14:15:58.750] [alevinLog] [info] Total Unique barcodes found: 687531; [2019-07-18 14:15:58.750] [alevinLog] [info] Used Barcodes except Whitelist: 44516; [2019-07-18 14:15:58.973] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2019-07-18 14:15:58.973] [alevinLog] [info] parsing read library format; [2019-07-18 14:24:27.923] [alevinLog] [info] Starting optimizer; [2019-07-18 14:24:28.655] [alevinLog] [warning] 24 mitorna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.655] [alevinLog] [info] Total 13 usable mRna genes; [2019-07-18 14:24:28.656] [alevinLog] [warning] 558 ribosomal rna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.656] [alevinLog] [info] Total 0 usable rRna genes; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 4282454.00 UMI after deduplicating.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 5378060 BiDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 958944 UniDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [warning] Skipped 28272 barcodes due to No mapped read; [2019-07-18 14:30:09.552] [alevinLog] [info] Finished optimizer; ```. ## R code (How to Use alevin with Seurat). ```; > library(here); > library(tidyverse); > library(Seurat); > library(tximport); > library(tictoc). > files <- file.path(here(""alevin_output/alevin/quants_mat.gz"")); > file.exists(files); [1] TRUE; >; > tic(""starts...""); > txi <- tximport(files, type=""alevin""; > toc(); starts...: 728.506 sec elapsed; > sessionInfo(); ```; R version 3.6.1 (2019-07-05); Platform: x86_64-conda_cos6-linux-gnu (64-bit); Running under: CentOS Linux 7 (Core). Matrix products: default; BLAS/LAPACK: /gpfs/data/software/anaconda3/envs/R3.6/lib/libopenb",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/404:2215,usab,usable,2215,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404,1,['usab'],['usable']
Usability,"file as input corresponding to the stringtie gtf file.; **To Reproduce**; Steps and data to reproduce the behavior:; Trasncript fasta file corres[onding to the stringtie generated gtf file used for salmon indexing with the following command.; `salmon index -t stringtie.fasta -i annotation_merged_index -p 20 -k 31`; THe index output used for salmon quantification with the following command; `salmon quant -i matchedtranscript_index/ -l ISR -1 ../../12_1_trimmed_R1.fastq -2 ../../12_1_trimmed_R2.fastq --gcBias --seqBias --posBias --dumpEqWeights -o salmon_output_rerun --writeMappings=salmon_output_rerun/mapping.sam -p 20`. Actual transcript IDs; ```; transcript	gene; 1 MSTRG.1.1	MSTRG.1; 2 MSTRG.1.2	MSTRG.1; 3 MSTRG.1.3	MSTRG.1; 4	BGIOSGA002578-TA	MSTRG.1; 5 MSTRG.1.5	MSTRG.1; 6 MSTRG.1.6	MSTRG.1; ```; Output quant.sf file:; ```; transcript count TPM; 1 BGIOSGA002568-TA 5692.000 5.840431; 2 MSTRG.3 1165.181 0.825116; 3 MSTRG.3 15240.169 10.700565; 4 MSTRG.3 5233.400 3.656954; 5 MSTRG.3 34.780 0.027226; 6 MSTRG.3 5219.345 3.916051; 7 MSTRG.3 4.277 0.003473; ```; Rscript used to read the quant.sf file. ```; library(dplyr); tmp <- read.delim(""quant.sf"", header = TRUE, as.is = TRUE); idx <- grep(""^STRG\\.|^CHS\\."", tmp$Name, invert = TRUE); tmp$Name[idx] <- gsub(""\\.[0-9]+$"", """", tmp$Name[idx]); tmp %>% dplyr::rename(transcript = Name, count = NumReads) %>%; dplyr::select(transcript, count, TPM); ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.14.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda; * Which reference (e.g. transcriptome) was used?; transcriptome; * Which read files were used?; paired-end illumina read files. **Expected behavior**; A clear and concise description of what you expected to happen.; Expected to retrieve the full name of transcript IDs. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Cluster with centOS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/427:1982,clear,clear,1982,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/427,1,['clear'],['clear']
Usability,"g] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-29 16:05:46.678] [jointLog] [info] Mapping rate = 20.1566%. [2019-01-29 16:05:46.678] [jointLog] [info] finished quantifyLibrary(); [2019-01-29 16:05:51.316] [alevinLog] [info] Starting optimizer. **Analyzed 4000 cells (100% of all).**; [2019-01-29 16:06:27.447] [alevinLog] [info] Total 20167967.00 UMI after deduplicating.; [2019-01-29 16:06:27.475] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-29 16:06:39.341] [alevinLog] [info] Starting Import of the gene count matrix of size 4000x29574.; [2019-01-29 16:06:40.089] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-29 16:06:45.902] [alevinLog] [info] Done Importing gene count matrix for dimension 4000x29574; 0.00248159 1.3538e-06 0.000205983 221334; 0.00714905 1.09739e-06 0.000617623 71036.5; [2019-01-29 16:06:46.603] [alevinLog] [info] Starting white listing; [2019-01-29 16:06:46.615] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2019-01-29 16:06:46.615] [alevinLog] [info] Total 4000 barcodes found; [2019-01-29 16:06:46.615] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [info] Starting to make feature Matrix; [2019-01-29 16:06:46.790] [alevinLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:2879,Clear,Clearing,2879,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['Clear'],['Clearing']
Usability,"h_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep3_RL5410_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep1_RL5392_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep2_RL5393_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep3_RL5411_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep1_RL5389_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep2_RL5408_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep3_RL5409_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.10.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Binary; * Which reference (e.g. transcriptome) was used?; Moss (Physco) v6.1 that I had generated ; * Which read files were used?; ; * Which which program options were used?; `-l A -p 16 --validateMappings --numBootstraps 100 --seqBias --gcBias`. **Expected behavior**; A clear and concise description of what you expected to happen. **Desktop (please complete the following information):**; - OS: Linux server: Rocky Linux release 8.5 (Green Obsidian); - Version Rocky Linux release 8.5 (Green Obsidian)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/948:3359,clear,clear,3359,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948,1,['clear'],['clear']
Usability,"he transcripts. The first used BAM files where shuffled (with samtools bamshuf) as recommended in the docs. To exclude an error on my side I did:; - try unshuffled BAM files --> Segfault; - try older Salmon Version (7.2) --> Segfault; - build Salmon from source --> Segfault; - use different transcriptdata (see below) --> Segfault. The segfault happens after all reads (in all files) are processed:; `processed 48000000 reads in current roundSegmentation fault`. ### Example workflow:. Get the read data from [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?run=ERR1433122) for example with SRA Toolkit:; `vdb-dump -f fastq --gzip --output-file test.fastq.gz ERR1433122`. Then use STAR:. First build a genome index for the reference transcriptset from [here](https://ics.hutton.ac.uk/atRTD/) and the [TAIR10 genome](https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files); You probably have to rename the chromosomes either in the .gtf or .fas file, to have consistent names. `STAR --runThreadN 4 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles TAIR10_chr_all_edited.fas --sjdbGTFfile AtRTD2_19April2016.gtf --sjdbOverhang 100`. Then map:. `STAR --runThreadN 4 --genomeDir genome_index --readFilesCommand zcat --readFilesIn test.fastq.gz --sjdbOverhang 100 --sjdbGTFfile AtRTD2_19April2016.gtf --outFileNamePrefix mapping/ --quantMode TranscriptomeSAM`. and make a .fa file from the genome and the .gtf with:; `gffread -w gff_merged.fa -g TAIR10_chr_all_edited.fas AtRTD2_19April2016.gtf`. Now make a copy of the ""Aligned.toTranscriptome.out.bam"" (for the sake of simplicity) and try; `salmon quant -l A -a Aligned.toTranscriptome.out.bam Aligned.toTranscriptome.out_copy.bam -t gff_merged.fa -o ./out/`. Then the above mentioned segfault happens. The only workaround I found is to merge the BAM files of the replicates with ""samtools merge"". Any idea why the segfault appears?. Cheers,; Tobi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/145:1893,simpl,simplicity,1893,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145,1,['simpl'],['simplicity']
Usability,i-TTCGTGAA_lane-001-chunk-001.fastq.gz read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz }. [2018-09-11 16:28:53.158] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-09-11 16:28:53.158] [jointLog] [warning] You seem to have passed in both un-paired reads and paired-end reads. It is not currently possible to quantify hybrid library types in salmon.; [2018-09-11 16:28:53.164] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 535 Million barcodes. [2018-09-11 16:33:49.759] [alevinLog] [info] Done barcode density calculation.; [2018-09-11 16:33:49.759] [alevinLog] [info] # Barcodes Used: 534903498 / 535096394.; [2018-09-11 16:33:55.869] [alevinLog] [info] Knee found left boundary at 11740 ; [2018-09-11 16:33:59.242] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-09-11 16:33:59.242] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-09-11 16:33:59.242] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-09-11 16:33:59.358] [alevinLog] [info] Done True Barcode Sampling; [2018-09-11 16:33:59.891] [alevinLog] [info] Done populating Z matrix; [2018-09-11 16:33:59.972] [alevinLog] [info] Done indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [i,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:10179,Learn,Learned,10179,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['Learn'],['Learned']
Usability,"ile. First, I've been using salmon for years and I love all the updates that have come about recently. The new selective alignment mode is an amazing upgrade!. My general question here is how to quantify various truncated isoforms of the same transcript. I'm working in S. cerevisiae and I am not referring to isoform switching via alternative splicing, but various isoforms that are fully contained as a subset of a larger transcript sequence. Imagine a standard gene that gives rise to a 1000 bp transcript. Through alternative promoter usage or post-transcriptional processing, it can give rise a truncated form that is identical to the parent transcript, except only has sequence from bases 400 to 1000. I know this scenario is similar to detecting differential splice forms, and indeed when I see overlapping genes that nonetheless have some unique sequence, salmon does an excellent job at fractionally apportioning the reads. In this particular case, however, it seems that because all mappings to the truncated isoform also give perfect mappings to the longer isoform, even a single few reads mapping uniquely to the longer isoform is enough evidence for the salmon EM algorithm (I assume that's the relevant part?) to give *all* of the reads to the long isoform. To visualize the problem, I'm attaching an image of alignments over a transcript that is only expressed as a portion of the annotated parent transcript. If i encode the short and long forms as separate transcripts in salmon fasta index, all of the reads get assigned to the longer form with the options I've tried. My question then is whether there's a combination of salmon quant options that would optimize apportioning the reads better for this class of transcript, or whether it's simply not going to work given the underlying assumptions in the software?. Thanks a ton for any help,; Jason. ![hmlalpha2_truncated_example](https://user-images.githubusercontent.com/10292386/80483743-6c217900-890b-11ea-8469-4883914d8ec0.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/514:1896,simpl,simply,1896,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514,1,['simpl'],['simply']
Usability,in ; ### [ libType ] => { A }; ### [ mates1 ] => { data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq }; ### [ mates2 ] => { data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq }; ### [ dropseq ] => { }; ### [ threads ] => { 10 }; ### [ output ] => { mSpT3 }; ### [ index ] => { mouse_cdna }; ### [ tgMap ] => { biomart.csv }. [2018-08-29 11:26:45.317] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-29 11:26:45.325] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 18 Million barcodes. [2018-08-29 11:28:11.683] [alevinLog] [info] Done barcode density calculation.; [2018-08-29 11:28:11.683] [alevinLog] [info] # Barcodes Used: 18693290 / 18712858.; [2018-08-29 11:28:17.405] [alevinLog] [info] Knee found left boundary at 2385 ; [2018-08-29 11:28:19.290] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-08-29 11:28:19.290] [alevinLog] [info] Learned InvCov: 568.346 normfactor: 688.271; [2018-08-29 11:28:19.290] [alevinLog] [info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:2501,Learn,Learned,2501,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['Learn'],['Learned']
Usability,"ions); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings.; ```. is emitted in yellow. Yellow on white is nearly impossible to read. The rest of the text is black (as it should be). If the final command is instead:. ```; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant >/tmp/sq.log 2>&1. ```. There are no embedded control codes in the sq.log file. Changing the terminal to white text on bl",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/541:2046,ux,uxterm,2046,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541,1,['ux'],['uxterm']
Usability,"l_whitelist"": 109,; ""low_conf_cbs"": 201,; ""num_features"": 0,; ""no_read_mapping_cbs"": 21,; ""final_num_cbs"": 288,; ""deduplicated_umis"": 46357,; ""mean_umis_per_cell"": 160,; ""mean_genes_per_cell"": 39; }. [2021-09-20 22:27:11.264] [alevinLog] [info] Found 5757 transcripts(+16 decoys, +8 short and +0 duplicate names in the index); [2021-09-20 22:27:11.271] [alevinLog] [info] Filled with 5765 txp to gene entries; [2021-09-20 22:27:11.272] [alevinLog] [info] Found all transcripts to gene mappings; [2021-09-20 22:27:11.282] [alevinLog] [info] Processing barcodes files (if Present). [2021-09-20 22:30:06.824] [alevinLog] [info] Done barcode density calculation.; [2021-09-20 22:30:06.824] [alevinLog] [info] # Barcodes Used: ESC[32m89886851ESC[0m / ESC[31m89886851ESC[0m.; [2021-09-20 22:30:09.717] [alevinLog] [info] Knee found left boundary at ESC[32m 1051 ESC[0m; [2021-09-20 22:30:11.442] [alevinLog] [info] Gauss Corrected Boundary at ESC[32m 109 ESC[0m; [2021-09-20 22:30:11.442] [alevinLog] [info] Learned InvCov: 796.079 normfactor: 896.047; [2021-09-20 22:30:11.442] [alevinLog] [info] Total ESC[32m310ESC[0m(has ESC[32m201ESC[0m low confidence) barcodes; [2021-09-20 22:30:12.167] [alevinLog] [info] Done True Barcode Sampling; [2021-09-20 22:30:12.316] [alevinLog] [warning] Total 55.6923% reads will be thrown away because of noisy Cellular barcodes.; [2021-09-20 22:30:12.333] [alevinLog] [info] Done populating Z matrix; [2021-09-20 22:30:12.334] [alevinLog] [info] Total 7602 CB got sequence corrected; [2021-09-20 22:30:12.334] [alevinLog] [info] Done indexing Barcodes; [2021-09-20 22:30:12.334] [alevinLog] [info] Total Unique barcodes found: 675135; [2021-09-20 22:30:12.334] [alevinLog] [info] Used Barcodes except Whitelist: 7515; [2021-09-20 22:30:13.043] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-09-20 22:30:13.044] [alevinLog] [info] parsing read library format; [2021-09-20 22:33:09.346] [alevinLog] [info] Starting optimizer. [2021-09-20 22:33",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/706:2986,Learn,Learned,2986,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/706,1,['Learn'],['Learned']
Usability,le-cell_skin_analysis//Data/Cheng-2018/CB_UMI//sample.fastq }; ### [ index ] => { /mnt/beegfs/alexmascension/STAR//hg38/salmon_index/ }; ### [ threads ] => { 40 }; ### [ output ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample }; ### [ end ] => { 5 }; ### [ barcodeLength ] => { 16 }; ### [ umiLength ] => { 10 }; ### [ dumpUmiGraph ] => { }; ### [ tgMap ] => { /mnt/beegfs/alexmascension/STAR//hg38/dict_transcript_gene.tsv }. [2019-06-23 18:08:02.553] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 107 Million barcodes. [2019-06-23 18:11:30.689] [alevinLog] [info] Done barcode density calculation.; [2019-06-23 18:11:30.689] [alevinLog] [info] # Barcodes Used: 105189924 / 107347363.; [2019-06-23 18:11:34.706] [alevinLog] [info] Knee found left boundary at 184 ; [2019-06-23 18:11:52.364] [alevinLog] [warning] Gauss Prediction 13594 Too far from knee prediction skipping it; [2019-06-23 18:11:52.364] [alevinLog] [info] Learned InvCov: 254.933 normfactor: 13034.5; [2019-06-23 18:11:52.364] [alevinLog] [info] Total 384(has 200 low confidence) barcodes; [2019-06-23 18:11:52.383] [alevinLog] [info] Done True Barcode Sampling; [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi i,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:4162,Learn,Learned,4162,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['Learn'],['Learned']
Usability,"lmon tries to assign the reads as equally as possible to every duplicate transcript, but of course if we have for example 21 reads and 4 transcript, they will have respectively 5,5,5 and 6 reads, which can explain the small differences I see. ; Is it correct?; (anyway, in this way i can explain the first two genes which have respectively a read count of 3639 and 3631, but for the last two genes a difference of 32 reads sounds too big to me) . This can be a problem for me, since I belive that the issue of the duplicate transcripts derives from haplotypic genes, such as RPS18 which has more than one ENSG ID (i.e. ENSG00000226225 and ENSG00000231500). ENSG00000231500 is absent in the pipeline without the flag, while in the pipeline with the flag the expression level is ""splitted"" between the two genes (which are actually only one gene). both the results I obtain don't represent the ""reality"".; I'm afraid I will have to remove all the ""ambigous"" genes from the reference, keeping only the ones with the ""canonical"" ENSG ID; since I'm doing a ""pan-genes"" analysis, and the number of duplicate transcript is ~11,000, this can be painful...; Has anyone ever encountered a problem like this? Is someone using a reference transcriptome that is already ""clean"" from haplotypic genes? also, do the 11k duplicate genes derive only from haplytipic genes, or there are other strange biological things that I am not considering?. Last question (which is not about duplicate transcript but about tximport...tell me if it is off topic and i will ask elsewhere); For the gene ENSG00000231500.6, tximport reports an expression of 164.677488, while the sum of the TPM of the transcript of that gene is 163.659568 (a very small difference, but still a difference); I checked the tx2gene ""dictionary"" I used in tximport and it seems ok (i.e. there aren't other transcripts belonging to that gene).; Is this normal?. Hope everything is clear.; Thank you very much in advance, and sorry for the very long post.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/310:3914,clear,clear,3914,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/310,1,['clear'],['clear']
Usability,mc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-002-chunk-000.fastq.gz }. [2018-12-05 16:30:15.406] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-12-05 16:30:15.406] [jointLog] [warning] You seem to have passed in both un-paired reads and paired-end reads. It is not currently possible to quantify hybrid library types in salmon.; [2018-12-05 16:30:15.416] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 185 Million barcodes. [2018-12-05 16:31:41.387] [alevinLog] [info] Done barcode density calculation.; [2018-12-05 16:31:41.387] [alevinLog] [info] # Barcodes Used: 185898660 / 185980783.; [2018-12-05 16:31:47.863] [alevinLog] [info] Knee found left boundary at 2926 ; [2018-12-05 16:31:50.571] [alevinLog] [info] Gauss Corrected Boundary at 2858 ; [2018-12-05 16:31:50.571] [alevinLog] [info] Learned InvCov: 166.8 normfactor: 2759.5; [2018-12-05 16:31:50.571] [alevinLog] [info] Total 3856(has 998 low confidence) barcodes; [2018-12-05 16:31:50.638] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 16:31:50.935] [alevinLog] [info] Done populating Z matrix; [2018-12-05 16:31:51.000] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:11760,Learn,Learned,11760,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Learn'],['Learned']
Usability,"mon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk); **Describe the bug**; I have a Illumina TruSeq Stranded Ribozero library and when I use salmon with -l A, it detects the libraries as either ISF or IU (for different indexes). The mapping rate is about 50-75% per index. However, as I understand it, Illumina TruSeq stranded libraries are supposed to be ISR? When I use -l ISR, i get much lower mapping rates so I'm a bit confused. Am I wrong about the library type for TruSeq Stranded, or is there a mistake in the Salmon docs? . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Latest (0.14.1); * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda, using a Snakemake workflow (ARMOR, from Mark Robinson's lab); * Which reference (e.g. transcriptome) was used?; Arabidopsis thaliana, from ensembl; * Which read files were used?; * Which which program options were used?; salmon (mapping-based) v0.14.1; [ program ] => salmon; [ command ] => quant; [ index ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/reference/SalmonIndex/Arabidopsis_thaliana }; [ libType ] => { ISR }; [ mates1 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R1.fastq.gz }; [ mates2 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R2.fastq.gz }; [ output ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/output/salmon/12-0-rve-30-3 }; [ numBootstraps ] => { 100 }; [ seqBias ] => { }; [ gcBias ] => { }; [ validateMappings ] => { }; [ ] => { o--fldMean }; [ ] => { 250 }; [ fldSD ] => { 25 }; [ threads ] => { 7 }. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version ; **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/393:1725,clear,clear,1725,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/393,1,['clear'],['clear']
Usability,"ndefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. I have the following environment variables set:. INCLUDE=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; C_INDLUE_PATH=/opt/boost-1.67.0/include; LD_LIBRARY_PATH=/opt/boost-1.67.0/lib:/opt/gcc-8.2.0/lib64:/opt/gcc-8.2.0/lib/gcc/x86_64-pc-linux-gnu/8.2.0; CPLUS_INCLUDE_PATH=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; CXX=/opt/gcc-8.2.0/bin/g++; CC=/opt/gcc-8.2.0/bin/gcc. My cmake command was simply cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/salmon ../. Thanks!. -Nate",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/309:2707,simpl,simply,2707,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309,1,['simpl'],['simply']
Usability,"ne already (1 moving part at a time). I am trying to run it through Alevin and it keeps failing with printing to the screen:. > [2023-08-17 22:13:22.207] [alevinLog] [info] Done barcode density calculation.; > [2023-08-17 22:13:22.207] [alevinLog] [info] # Barcodes Used: 15722231 / 15722593.; > [2023-08-17 22:13:22.910] [alevinLog] [info] Total 545(has 201 low confidence) barcodes; > [2023-08-17 22:13:23.660] [alevinLog] [info] Done True Barcode Sampling; (some lines later); > [2023-08-17 22:14:04.046] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2023-08-17 22:14:04.046] [jointLog] [info] Counted 0 total reads in the equivalence classes; > [2023-08-17 22:14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quantitating the read1 file with; > salmon quant -i /ref/gencode.v43.transcripts/ -l ISR -r r1.fastq.gz -p 30 -o work/salmon_output. behaves",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/867:1173,guid,guidance,1173,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867,1,['guid'],['guidance']
Usability,"nfo] Index contained 64 targets; > [2020-06-03 13:54:46.552] [jointLog] [info] Number of decoys : 0; > ; > [2020-06-03 13:54:46.493] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ; > processed 52 Million fragmentsvinLog] [info] parsing read library format; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:55:42.905] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:55:42.931] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.931] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [warning] Skipped 50091 barcodes due to No mapped read; > [2020-06-03 13:55:42.934] [alevinLog] [info] Clearing EqMap; Might take some time.; > [2020-06-03 13:55:42.940] [alevinLog] [warning] Num Low confidence barcodes too less 1 < 200.Can't performing whitelisting; Skipping; > [2020-06-03 13:55:42.940] [alevinLog] [info] Finished optimizer; > `. I also tried . `salmon alevin -l ISR --chromium --featureStart 19 --featureLength 21 --tgMap guide_to_gene.tsv`. But I get the following output. > `; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-03 13:47:17.330] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-03 13:47:17.336] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > processed 52 Million barcodes; > ; > [2020-06-03 13:48:30.047] [alevinLog] [info] Done barcode density calculation.; > [2020-06-03 13:48:30.047] [alevinLog] [info] # Barcodes Used: 52200250 / 52200250.; > [2020-06-03 13",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531:3530,Clear,Clearing,3530,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531,1,['Clear'],['Clearing']
Usability,"nst&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/551:2365,clear,clear,2365,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551,2,['clear'],['clear']
Usability,"nt; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2`. * Which version of salmon was used?; Salmon 0.3.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Cloned from git as latest source and attempted to cmake + make && make install . **Expected behavior**; A clear and concise description of what you expected to happen.; Expecting the makefile to use c++14 correctly to process the ""auto p"" variable the way it is intended within the template functions. See SalmonQuantify.cpp:1964 with errors regarding ""p was not declared in this scope"". . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Centos 7 ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:49947,clear,clear,49947,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['clear'],['clear']
Usability,"ode-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/co",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:2559,learn,learn-github-actions,2559,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['learn'],['learn-github-actions']
Usability,"oothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:1218,clear,clear,1218,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['clear'],['clear']
Usability,"ped; [2019-07-18 14:15:52.078] [alevinLog] [info] Total 161284 white-listed Barcodes; [2019-07-18 14:15:52.259] [alevinLog] [info] Total 5.95793% reads will be thrown away because of noisy Cellular barcodes.; [2019-07-18 14:15:58.709] [alevinLog] [info] Done populating Z matrix; [2019-07-18 14:15:58.741] [alevinLog] [info] Total 56814 CB got sequence corrected; [2019-07-18 14:15:58.750] [alevinLog] [info] Done indexing Barcodes; [2019-07-18 14:15:58.750] [alevinLog] [info] Total Unique barcodes found: 687531; [2019-07-18 14:15:58.750] [alevinLog] [info] Used Barcodes except Whitelist: 44516; [2019-07-18 14:15:58.973] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2019-07-18 14:15:58.973] [alevinLog] [info] parsing read library format; [2019-07-18 14:24:27.923] [alevinLog] [info] Starting optimizer; [2019-07-18 14:24:28.655] [alevinLog] [warning] 24 mitorna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.655] [alevinLog] [info] Total 13 usable mRna genes; [2019-07-18 14:24:28.656] [alevinLog] [warning] 558 ribosomal rna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.656] [alevinLog] [info] Total 0 usable rRna genes; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 4282454.00 UMI after deduplicating.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 5378060 BiDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 958944 UniDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [warning] Skipped 28272 barcodes due to No mapped read; [2019-07-18 14:30:09.552] [alevinLog] [info] Finished optimizer; ```. ## R code (How to Use alevin with Seurat). ```; > library(here); > library(tidyverse); > library(Seurat); > library(tximport); > library(tictoc). > files <- file.path(here(""alevin_output/alevin/quants_mat.gz"")); > file.exists(files); [1] TRUE; >; > tic(""starts...""); > txi <- tximport(files, type=""alevin""; > toc(); starts...: 728.506 sec elapsed; > sessionInfo(); ```; R version 3.6.1 (2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/404:2026,usab,usable,2026,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404,1,['usab'],['usable']
Usability,"ple_S1_L001_R1_001.fastq -2 ../clean/sample_S1_L001_R2_001.fastq --chromiumV3 -i ../../dna/00.ref_genome/sample/salmon_index_allmRNA -p 40 -o test_alevin_allmRNA --tgMap ../../dna/00.ref_genome/sample/alltxp2gene.tsv`. > [2021-01-25 16:22:09.565] [alevinLog] [info] Found 43030 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); [2021-01-25 16:22:09.615] [alevinLog] [info] Filled with 43030 txp to gene entries; [2021-01-25 16:22:09.620] [alevinLog] [info] Found all transcripts to gene mappings; [2021-01-25 16:22:09.631] [alevinLog] [info] Processing barcodes files (if Present); [2021-01-25 16:26:35.067] [alevinLog] [info] Done barcode density calculation.; [2021-01-25 16:26:35.067] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-25 16:26:42.979] [alevinLog] [info] Knee found left boundary at 21; [2021-01-25 16:27:05.707] [alevinLog] [warning] Gauss Prediction 4969 Too far from knee prediction skipping it; [2021-01-25 16:27:05.707] [alevinLog] [info] Learned InvCov: 556.394 normfactor: 9159.58; [2021-01-25 16:27:05.707] [alevinLog] [info] Total 222(has 201 low confidence) barcodes; [2021-01-25 16:27:06.573] [alevinLog] [info] Done True Barcode Sampling; [2021-01-25 16:27:07.383] [alevinLog] [warning] Total **96.7029% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-25 16:27:07.412] [alevinLog] [info] Done populating Z matrix; [2021-01-25 16:27:07.414] [alevinLog] [info] Total 3667 CB got sequence corrected; [2021-01-25 16:27:07.414] [alevinLog] [info] Done indexing Barcodes; [2021-01-25 16:27:07.414] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-25 16:27:07.414] [alevinLog] [info] Used Barcodes except Whitelist: 3667; [2021-01-25 16:27:07.498] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-25 16:27:07.498] [alevinLog] [info] parsing read library format; [2021-01-25 16:30:54.542] [alevinLog] [info] Starting optimizer; [2021-01-25 16:30:54.782] [alevinLog] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:3375,Learn,Learned,3375,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,1,['Learn'],['Learned']
Usability,"poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps and installed the binary releases of ""salmon"" 1.1.0 then 0.41.1 from GitHub in /usr/local. Did stand-alone tests with sample data from the GitHub binary release.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/500:2682,clear,clear,2682,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500,1,['clear'],['clear']
Usability,"possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of downgrading of its dependencies. Linux nscc04 2.6.32-696.30.1.el6.x86_64 #1 SMP Fri May 18 11:50:44 EDT 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/286:1699,learn,learn,1699,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286,1,['learn'],['learn']
Usability,"rgets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:57:31.421] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 16:57:35.529] [alevinLog] [info] Starting optimizer. Analyzed 3856 cells (100% of all).; [2018-12-05 17:04:51.878] [alevinLog] [info] Total 47125847 UMI after deduplicating.; [2018-12-05 17:04:51.928] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 17:05:04.064] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **Desktop (please complete the following information):**; Ubuntu 14.04 LTS; 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty. **Additional context**; If I include only a subset of the fastq files, the command completes with no error. I have succeeded in running up to 3 of the files (3 *I1*, 3 *I2* and 3 *RA* files), but got the above-mentioned error when running it on 4 or more fastq files. I read that std::bad_alloc was usually caused by memory issues. The system I am using has 128Gb of RAM available. Thank you for your help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:14376,Clear,Clearing,14376,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Clear'],['Clearing']
Usability,rom GENCODE mm10 assembly. Steps and data to reproduce the behavior:; salmon alevin -l ISR -1 neuron_10k_v3_S1_L001_R1_001.fastq.gz neuron_10k_v3_S1_L002_R1_001.fastq.gz -2 neuron_10k_v3_S1_L001_R2_001.fastq.gz neuron_10k_v3_S1_L002_R2_001.fastq.gz --chromium -i map_index -p 8 -o output_10 --tgMap txp2gene.tsv --dumpCsvCounts. **Shell output** ; [2018-11-29 22:24:41.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-29 22:24:41.283] [alevinLog] [info] Processing barcodes files (if Present). processed 178 Million barcodes. [2018-11-29 22:28:03.040] [alevinLog] [info] Done barcode density calculation.; [2018-11-29 22:28:03.040] [alevinLog] [info] # Barcodes Used: 178139795 / 178174830.; [2018-11-29 22:28:08.333] [alevinLog] [info] Knee found left boundary at 11347; [2018-11-29 22:28:16.264] [alevinLog] [warning] Gauss Prediction 11502 Too far from knee prediction skipping it; [2018-11-29 22:28:16.264] [alevinLog] [info] Learned InvCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324:1331,Learn,Learned,1331,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324,1,['Learn'],['Learned']
Usability,"rrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15:45:46.199] [jointLog] [info] Mapping rate = 60.9633%. [2018-12-05 15:45:46.199] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 15:45:47.617] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-05 15:47:14.597] [alevinLog] [info] Total 1870793 UMI after deduplicating.; [2018-12-05 15:47:14.693] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 15:47:18.921] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. PBMC 3k shell log:; ```; ~/software/salmon/scripts/v1_10x/run.sh salmon alevin -lISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv. TEMPDIR is /tmp/tmp.WnzMm7GQBO; Running command [salmon alevin -lISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv -1 /tmp/tmp.WnzMm7GQBO/p1.fa -2 /tmp/tmp.WnzMm7GQBO/p2.fa -r pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz; pbmc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:8618,Clear,Clearing,8618,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Clear'],['Clearing']
Usability,"rray + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see above. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. I am thinking this is an issue w/ building the index. If there is a pre-made index w/ or w/o decoys for mouse that you can direct me to I would appreciate it. Following the link posted in the salmon documentation about pre-made index's is not helpful and I am not sure how to download them from there. A simpler option would be appreciated. . Thanks!. UPDATE: This was solved by using an index generated by a friend So apparently the issue is w/ building the index.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:8134,clear,clear,8134,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,2,"['clear', 'simpl']","['clear', 'simpler']"
Usability,"rrespond to multiple sequences. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Merging quantifications with Salmon:; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; 2. Searching for a specific gene ID in the quantification file:; grep ""k141_1346622_1"" temp/salmon/L1EHI0900465--Q_S1_N6.quant/quant.sf; # Multiple lines are found for this gene ID; 3. Searching for the same gene ID in the resulting TPM file:; grep ""k141_1346622_1"" result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; #No results are found, which is unexpected. <img width=""1166"" alt=""截屏2024-01-30 21 56 23"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/b77e5aa4-aadc-4a17-bdde-b998ce14d72c"">; <img width=""1056"" alt=""截屏2024-01-30 21 55 28"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/877cfa9b-0484-4937-87b2-e987679e09e3"">. Specifically, please provide at least the following information:. * Which version of salmon was used? salmon 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon -y; * Which reference (e.g. transcriptome) was used? metagenome data; * Which read files were used? L1EHI0900465--Q_S1_N6.quant/; * Which which program options were used?; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM. **Expected behavior**; A clear and concise description of what you expected to happen.; I hope to keep all the gene IDs and for those who contains more than one line, take average values for each gene ID. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/910:1747,clear,clear,1747,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/910,1,['clear'],['clear']
Usability,"s_with_N"": 17295,; ""noisy_cb_reads"": 708796684,; ""noisy_umi_reads"": 149640,; ""used_reads"": 444430595,; ""mapping_rate"": 4.019738736091838,; ""reads_in_eqclasses"": 46363434,; ""total_cbs"": 132768705,; ""used_cbs"": 398369,; ""initial_whitelist"": 5383,; ""low_conf_cbs"": 1000,; ""num_features"": 5,; ""no_read_mapping_cbs"": 148,; ""final_num_cbs"": 3931,; ""deduplicated_umis"": 24178832,; ""mean_umis_per_cell"": 6150,; ""mean_genes_per_cell"": 2810; ```. This, in conjunction with the fact that running with `-l A` suggests incorrectly the data are unstranded (`IU`), led @mikelove to suspect alevin may be skipping the libType guesswork that salmon typically performs. . I know these data are of reasonably good quality, because I have instead processed them using [zUMIs](https://github.com/sdparekh/zUMIs), which supports SPLiT-seq data. A side-by-side of the same FASTQs processed this way using alevin or using zUMIs gave me ~270 cells that pass filters (alevin) vs ~50k cells that pass filters (zUMIs), so something is definitely up here. . I'd like to confirm a few details and ask for some guidance on how to move forward:. 1. Is the reversal of R1/R2 like I did here necessary/recommended/correct?; 2. Is alevin truly skipping the libType identification bits such that I need to know which architecture to use? If so, how do I know?; 3. Why are so many CBs called as ""noisy"" here?; 4. Why is the mapping rate so low?; 5. Is there anything else I'm missing that can explain the unexpectedly poor outcome, or some other reason why this approach will not work for these data? . I've also attached here the top 1000 lines of each R1/R2-corrected FASTQ (ParseBio) in the hopes that was somehow helpful in diagnosis, but I can share more reads or the full files some other way if needed. [head_R1.fastq.txt](https://github.com/COMBINE-lab/salmon/files/7068550/head_R1.fastq.txt); [head_R2_corrected.fastq.txt](https://github.com/COMBINE-lab/salmon/files/7068551/head_R2_corrected.fastq.txt). Thanks so much!. Jeremy",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699:6882,guid,guidance,6882,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699,1,['guid'],['guidance']
Usability,salmon --writeUnmappedNames produced undocumented result,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/657:37,undo,undocumented,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/657,2,['undo'],['undocumented']
Usability,"ssed 278000000 positions^M^Mprocessed 279000000 positions^M^Mprocessed 280000000 positions^M^Mprocessed 281000000 positions^M^Mprocessed 282000000 positions^M^Mprocessed 283000000 positions^M^Mprocessed 284000000 positions^M^Mprocessed 285000000 positions^M^Mprocessed 286000000 positions^M^Mprocessed 287000000 positions^M^Mprocessed 288000000 positions^M^Mprocessed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 12.6069s; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. It would be more interesting to see what filename is used for the index. Showing the ""basename"" of the index file is not very helpful. I would prefer to see the filename(s) on the beginning and end lines:. ```; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; ...; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromP",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:13202,clear,clearer,13202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['clear'],['clearer']
Usability,sts/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.; [2021-04-09 12:16:37.728] [alevinLog] [info] # Barcodes Used: 4000 / 4000.; [2021-04-09 12:16:37.729] [alevinLog] [info] Knee found left boundary at 102; [2021-04-09 12:16:37.862] [alevinLog] [info] Gauss Corrected Boundary at 52; [2021-04-09 12:16:37.862] [alevinLog] [info] Learned InvCov: 419.096 normfactor: 100.648; [2021-04-09 12:16:37.862] [alevinLog] [info] Total 195(has 201 low confidence) barcodes; [2021-04-09 12:16:37.883] [alevinLog] [info] Done True Barcode Sampling; [2021-04-09 12:16:37.884] [alevinLog] [info] Total 15.7% reads will be thrown away because of noisy Cellular barcodes.; [2021-04-09 12:16:37.892] [alevinLog] [info] Done populating Z matrix; [2021-04-09 12:16:37.892] [alevinLog] [info] Total 0 CB got sequence corrected; [2021-04-09 12:16:37.892] [alevinLog] [info] Done indexing Barcodes; [2021-04-09 12:16:37.892] [alevinLog] [info] Total Unique barcodes found: 822; [2021-04-09 12:16:37.892] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading puffer,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:3113,Learn,Learned,3113,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['Learn'],['Learned']
Usability,"surprisingly, after building a salmon conda env, when building an index I got the following error:. `exception : [unrecognised option '--decoys']. Exiting.`. I then ran salmon index --help , and there was no -d/--decoys option. and; `salmon -v ` returned ; salmon 0.13.1. the tag on https://anaconda.org/bioconda/salmon , last uploaded a few months ago suggests it is for 1.10.2 , which is clearly not the case. not sure if this was done by someone other than any of the salmon developers, but it definitely creates headaches for groups trying to automate expression analysis workflows using snakemake/conda",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/895:390,clear,clearly,390,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/895,1,['clear'],['clearly']
Usability,"this tutorial](https://satijalab.org/seurat/articles/multimodal_vignette) up to the line where the `adt` assay is added and confirmed that the resulting object had two assays present. I think this may be a versioning issue related to what types of objects can be added into layers (aka slots) in a Seurat object. For reference, here are some details of the objects involved:; ```; > class(brain); [1] ""Seurat""; attr(,""package""); [1] ""SeuratObject""; > class(image.data); [1] ""VisiumV2""; attr(,""package""); [1] ""Seurat""; ```. It is worth noting that I installed Salmon using the docker image found [here](https://hub.docker.com/r/combinelab/salmon) approximately three months ago. The version number I see is `1.10.3`. Below is my sessionInfo output as well. My best guess is that I have to adjust the object type for `image.data` here to something that can be coerced into a slot in the `brain` Seurat object, but I am not sure what object that should be. Let me know if I am making a simple mistake here too, I am quite rusty with the nuances of R. Thank you for your consideration and I hope to hear from the team soon!. ```; > sessionInfo(); R version 4.3.3 (2024-02-29); Platform: x86_64-conda-linux-gnu (64-bit); Running under: Ubuntu 22.04.4 LTS. Matrix products: default; BLAS/LAPACK: /home/chris/anaconda3/envs/r_and_python/lib/libopenblasp-r0.3.27.so; LAPACK version 3.12.0. locale:; [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ; [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 ; [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 ; [7] LC_PAPER=en_US.UTF-8 LC_NAME=C ; [9] LC_ADDRESS=C LC_TELEPHONE=C ; [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C . time zone: America/New_York; tzcode source: system (glibc). attached base packages:; [1] stats graphics grDevices utils datasets methods base . other attached packages:; [1] Seurat_5.1.0 SeuratObject_5.0.2 sp_2.1-4 patchwork_1.2.0 ; [5] ggplot2_3.5.1 devtools_2.4.5 usethis_2.2.3 tximport_1.30.0 ; [9] fishpond_2.8.0 . loaded via a namespace",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/942:1948,simpl,simple,1948,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942,1,['simpl'],['simple']
Usability,"ug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; The cDNA fasta file contains 176241 ENSTs,but the result file only contains 166667 ENSTs.; **To Reproduce**; Steps and data to reproduce the behavior:; The steps and data are as follows. ; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.9.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used? ; Homo_sapiens.GRCh38.cdna.all.fa obtained from Ensembl release 83; * Which read files were used? ; GSE41009; * Which which program options were used? ; Building index: salmon index -t filepath/Homo_sapiens.GRCh38.cdna.all.fa -i V83-homo_index --type quasi -k 31; Quantification: salmon quant -p 50 -i filepath/V83-homo_index -l IU -1 ESC-SRR574820_1.fastq ESC-SRR574821_1.fastq -2 ESC-SRR574820_2.fastq ESC-SRR574821_2.fastq -o ESC-quantification. **Expected behavior**; A clear and concise description of what you expected to happen.; The result file should contain all the ENSTs existed in cDNA fasta file.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; uname -a; Linux mn1 2.6.32-431.29.2.2.ky3.1.x86_64 #1 SMP Thu Sep 25 10:15:09 CST 2014 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	NeoKylin; Description:	NeoKylin release 3.2 (Carambola); Release:	3.2; Codename:	Carambola; **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/255:1095,clear,clear,1095,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255,1,['clear'],['clear']
Usability,"um, eventually outputting the following after processing the reads:. ```; [2018-07-24 10:56:20.712] [jointLog] [info] Computed 9968 rich equivalence classes for further processing; [2018-07-24 10:56:20.712] [jointLog] [info] Counted 2785976 total reads in the equivalence classes; [2018-07-24 10:56:20.729] [jointLog] [warning] Only 2785976 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-24 10:56:20.729] [jointLog] [warning] Found 82730645 reads with CB+UMI length smaller than expected.Please report on github if this number is too large; [2018-07-24 10:56:20.729] [jointLog] [info] Mapping rate = 0.590918%. ```. and then this after processing the cells:; ```; [2018-07-24 10:56:23.180] [alevinLog] [info] Total 21135 UMI after deduplicating.; [2018-07-24 10:56:23.180] [alevinLog] [warning] Skipped 4 barcodes due to No mapped read; [2018-07-24 10:56:23.213] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-07-24 10:56:23.230] [alevinLog] [info] Starting Import of the gene count matrix.; [2018-07-24 10:56:23.743] [alevinLog] [info] Done Importing gene count matrix for dimension 290x57964; [2018-07-24 10:56:23.743] [alevinLog] [info] Starting dumping cell v gene counts in csv format; [2018-07-24 10:56:29.089] [alevinLog] [info] Finished dumping csv counts; [2018-07-24 10:56:29.089] [alevinLog] [info] Starting white listing; [2018-07-24 10:56:29.090] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2018-07-24 10:56:29.090] [alevinLog] [info] Total 290 barcodes found; [2018-07-24 10:56:29.090] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [info] Starting to make feature Matrix; [2018-07-24 10:56:29.354] [alevinLog] [info] Done maki",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/258:4747,Clear,Clearing,4747,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258,1,['Clear'],['Clearing']
Usability,"undate}_${runid}_${indexpair}_quant`. Upon importing `quant.sf`files into R with `tximeta` and executing the function `summarizeToGene()` for` DESeq2` analysis I've been checking the validity of my top hits and have run into some confusion surrounding how to best handle counts assigned to an excessive number of alternate haplotypes/patches for some genes. These features have differing Ensembl gene IDs (but identical gene names) and are evidently not duplicate sequences as they have not been collapsed by salmon and differ in length. Gene counts are dispersed across different combinations of these haplotypes across samples, which isn't very amenable to gene level differential expression analysis. The KIR locus (which is notoriously confusing and full of differing gene content haplotypes) is of particular interest to us and influenced precisely by this issue. As shown below, there are 34 versions of _KIR3DL2_ assigned gene counts across our samples:. `> rowRanges(gse)[grep(""KIR3DL2"", rowRanges(gse)$gene_name)]`; [KIR3DL2.txt](https://github.com/COMBINE-lab/salmon/files/4883051/KIR3DL2.txt). The salmon counts look like this:; `assays(gse)$counts[grep(""KIR3DL2"", rowRanges(gse)$symbol),][,1:5]`; [counts.txt](https://github.com/COMBINE-lab/salmon/files/4883045/counts.txt). There are around 500 other genes in which this occurs also (including all KIRs and HLAs), with no clear ""dominant"" haplotype to which the majority of reads are assigned for a given sample. Are there any suggestions as to how to progress here? Is it completely unreasonable for me to sum the counts across all haplotypes for a given gene prior to carrying on with `DESeq2`? I'm wary there could be issues with concatenating features with differing lengths, GC content etc. and subsequent normalisation. Is there an upstream step with salmon that could be used to provided summed gene level counts across all haplotypes? Should I use a different reference?. Any help would be much appreciated!. Kind regards,; Aimee",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/544:1961,clear,clear,1961,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/544,1,['clear'],['clear']
Usability,"vin (single-cell mode)?**; Alevin; **Describe the bug**; A clear and concise description of what the bug is.; Reanalyzing published Drop-Seq data the alevin analysis results in drastically fewer barcodes accepted than the published dataset. Published dataset contains 3000 CBs for the specific sample (authors report that 70% of [these] putative cells from WT mice met QC criteria), alevin result contains 459 CBs.; A similar highly abbreviated CB result was obtained with reanalysis of SRR8889412. **To Reproduce**; Steps and data to reproduce the behavior:. Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; Publication: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6925218/#; Specific Sample: https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3720936. Alevin was run using no special parameters with the --dropseq flags. The only significant protocol deviation was in index construction (see below). Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Salmon was run in stock docker container; * Which reference (e.g. transcriptome) was used?; Full decoy Index generated on Gencode M25 per Alevin Velocity tutorial with a k=17 (dataset has 50bp R2 Reads); Introns were extracted with 49bp flanking sequence. ; ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.annotation.gtf.gz. * Which read files were used?; Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; * Which which program options were used?; --dropseq -l ISR. **Expected behavior**; A clear and concise description of what you expected to happen.; Cell calls should be ballpark similar to published result (3000 original vs. 459 alevin). **Tar of Alevin Output directory**; [WT01_P7_WT_Cerebellum_alevin.output.tar.gz](https://github.com/COMBINE-lab/salmon/files/5953855/WT01_P7_WT_Cerebellum_alevin.output.tar.gz)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/625:1730,clear,clear,1730,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/625,1,['clear'],['clear']
