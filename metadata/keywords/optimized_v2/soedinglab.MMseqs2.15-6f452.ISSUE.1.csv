quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,"mum coverage 	0; > Select n most diverse seqs 	1000; > Omit Consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward Frames 	1,2,3; > Reverse Frames 	1,2,3; > Translation Table 	1; > Use all table starts 	false; > Offset of numeric ids 	0; > Add Orf Stop 	false; > Number search iterations 	3; > Start sensitivity 	4; > Search steps 	1; > Run a seq-profile search in slice mode 	false; > Strand selection 	1; > Disk space limit 	0; > Sets the MPI runner 	; > Remove Temporary Files 	false; > ; > Program call:; > prefilter tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 --sub-mat blosum62.out -s 7.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 17702628 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 1 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	65535; > Max. results per query 	17702628; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	true; > Spaced Kmer 	1; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Spaced k-mer pattern 	; > Threads 	15; > Verbosity 	3; > ; > Initialising data structures...; > Using 15 threads.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:2863,mask,mask,2863,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['mask'],['mask']
Availability,"my output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. prefilter ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs.idx temp/9118733262229857306/tmp_hsp1/5064659849361391999/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --s; plit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7. Index version: 16; Generated by: 98c37f3c32b222632ada6011504380e91351276b; ScoreMatrix: VTML80.out; Query database size: 6282 type: Aminoacid; split was set to 5 but at least 8 are required. Please run with default paramerters; Target split mode. Searching through 5 splits; Estimated memory consumption: 138G; Process needs more than 113G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 213522593 type: Aminoacid; Process prefiltering step 1 of 5. k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 5); Query db start 1 to 6282; Target db start 1 to 42795128; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:4496,mask,mask,4496,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"n 1 --dont-shuffle 1 --id-offset 0 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ............Time for merging files: 0h 0m 0s 87ms; Time for merging files: 0h 0m 0s 98ms; Time for merging files: 0h 0m 0s 136ms; Time for merging files: 0h 0m 0s 91ms; Time for processing: 0h 0m 2s 526ms; Program call:; cluster tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_tmp -c 0.9 --cov-mode 1 --threads 2 --min-seq-id 0.9 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:3265,Mask,Mask,3265,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['Mask'],['Mask']
Availability,"n(R) Gold 6130 CPU @ 2.10GHz; stepping : 4; microcode : 0x2007006; cpu MHz : 2100.000; cache size : 22528 KB; physical id : 0; siblings : 32; core id : 0; cpu cores : 16; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 22; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req pku ospke md_clear flush_l1d arch_capabilities; vmx flags : vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml ept_mode_based_exec tsc_scaling; bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit mmio_stale_data; bogomips : 4200.00; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:. $ free; total used free shared buff/cache available; Mem: 791192240 20105804 63519620 33656 707566816 765066152; Swap: 0 0 0; ```; * Operating system and version:; ```; $ cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=22.04; DISTRIB_CODENAME=jammy; DISTRIB_DESCRIPTION=""Ubuntu 22.04.3 LTS""; PRETTY_NAME=""Ubuntu 22.04.3 LTS""; <truncated>; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:5871,avail,available,5871,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['avail'],['available']
Availability,"nDWCIb3/view?usp=drive_link; 2) Install mmseqs2 v15.6f452; 3) Run:; ```; mmseqs easy-cluster all_sequences.fasta mmseqs_output tmp --cluster-mode 1 --cluster-reassign 1 --threads 24 -c 0.0 --cov-mode 5 --min-seq-id 0.8; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Create directory tmp; easy-cluster /hps/nobackup/iqbal/dander/amira_panRG_pipeline/Escherichia_coli_panRG_c_0.8_l_0_train_AMR_alleles_removed_mmseqs2/all_sequences.fasta mmseqs_output/mmseqs_output tmp --cluster-mode 1 --cluster-reassign 1 --threads 24 -c 0.0 --cov-mode 5 --min-seq-id 0.8 . MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0; Coverage mode 5; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 24; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.8; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:1841,Mask,Mask,1841,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,2,['Mask'],['Mask']
Availability,"nMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:17:18: error: field ‘prev’ has incomplete type ‘Except_Frame_T’; Except_Frame_T prev;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:16:8: note: definition of ‘struct Except_Frame_T’ is not complete until the closing brace; struct Except_Frame_T {; ^; src/CMakeFiles/mmseqs-framework.dir/build.make:542: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:2572,error,error,2572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,1,['error'],['error']
Availability,n_* to tmp/search/aln_*: No such file or directory; > mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; > mv: rename tmp/input_* to tmp/search/input_*: No such file or directory; > Program call:; > tmp/toBeClusteredSeparately tmp/newClusters tmp --sub-mat blosum62.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 --alignment-mode 0 -e 0.001 --min-seq-id 0 --max-rejected 2147483647 --max-accept 2147483647 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	32000; > Profile 	false; > Max. results per query 	300; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id. 	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Target Coverage threshold 	0; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Cluster mode 	0; > Max depth connected component	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Sets the MPI runner 	; > ; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Alphabet size 	3; > Seq. Id Threshold 	0; > Max. sequence length	32000; > Threads 	4; > Verbosity 	3; > ; > Y -> F; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > S -> A; > N -> D; > L -> I; > H -> E; > K -> E; > P -> C; > E -> D; > C -> A; > I -> F; > G ->,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:13403,Mask,Mask,13403,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['Mask'],['Mask']
Availability,"nal bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 40; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Prefilter mode 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:1949,Mask,Mask,1949,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['Mask'],['Mask']
Availability,"name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.99; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:1796,Mask,Mask,1796,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,2,['Mask'],['Mask']
Availability,"nclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/708:2251,Mask,Mask,2251,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708,2,['Mask'],['Mask']
Availability,"nclude-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediagonal 1831648_seqs.mmseqs2db 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:4482,mask,mask-lower-case,4482,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['mask'],['mask-lower-case']
Availability,"nd empty tmp folders. mmseqs cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Create directory tmp; cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	100",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:1707,Mask,Mask,1707,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,2,['Mask'],['Mask']
Availability,"ndex; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); Error: Offset step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 15.6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): latest 15.6f452 installed by conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 1T memory; * Operating system and version: CentOS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:35422,Error,Error,35422,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['Error'],['Error']
Availability,"neage 1; Compressed 0; Threads 32; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 200G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive sear",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/577:1871,Mask,Mask,1871,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577,2,['Mask'],['Mask']
Availability,"negger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir> [options]. prefilter options 	default 	description [value range]; --comp-bias-corr 	0 	correct for locally biased amino acid composition [0,1] ; --add-self-matches 	false 	artificially add entries of queries with themselves (for clustering); -s 	5.700 	sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive [1.0,7.5]; -k 	0 	k-mer size in the range (0: set automatically to optimum) ; --k-score 	2147483647	k-mer threshold for generating similar-k-mer lists ; --alph-size 	21 	alphabet size [2,21] ; --offset-result 	0 	Offset result list ; --split 	0 	Splits input sets into N equally distributed chunks. The default value sets the best split automatically. createindex can only be used with split 1.; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; --diag-score 	1 	use diagonal score for sorting the prefilter results [0,1] ; --exact-kmer-matching 	0 	only exact k-mer matching [0,1] ; --mask 	1 	0: w/o low complexity masking, 1: with low complexity masking; --min-ungapped-score 	15 	accept only matches with ungapped alignment score above this threshold; --spaced-kmer-mode 	1 	0: use consecutive positions a k-mers; 1: use spaced k-mers ; --spaced-kmer-pattern 	 	User-specified spaced k-mer pattern ; --local-tmp 	 	Path where some of the temporary files will be created ; --disk-space-limit 	0 	Set the maximum disk space (in Mb) to use for reverse profile searches. Defaults (0) to all available disk space in the temp folder. align options 	default 	description [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the alignment: 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungappe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:5426,avail,available,5426,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['avail'],['available']
Availability,"ng 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	20; Gap extension cost 	3; Zdrop 	40; Threads 	28; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:VTML40.out,aa:VTML40.out; Sensitivity 	12; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	11011101; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	1; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	1; Search steps 	3; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:3444,Mask,Mask,3444,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['Mask'],['Mask']
Availability,"ng results 0h 0m 0s 66ms; Time for merging to clu_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 628ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu_step0 ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step1 -v 3 --subdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 7ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 4 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 10966 type: Aminoacid; Estimated memory consumption: 1010M; Target database size: 10966 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 10.97K 0s 560ms; Index table: Masked residues: 4144; Index table: fill; [=================================================================] 10.97K 0s 667ms; Index statistics; Entries: 1798942; DB size: 498 MB; Avg k-mer size: 0.028108; Top 10 k-mers; IGAALA 68; GPGGTL 58; GIVAPG 43; ALTAGI 42; ALGNGK 34; GLGNGK 32; ELPGVN 31; DLLDLP 29; GQQVAR 24; GEQVAR 23; Time for index table init: 0h 0m 2s 664ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10966; Target db start ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:24198,mask,mask-lower-case,24198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['mask'],['mask-lower-case']
Availability,"ng the discussion at: https://github.com/soedinglab/MMseqs2/issues/373; I have tried the following workflow:. ## Steps to Reproduce; `mmseqs createdb IP.fasta IP_DB/IP_DB`; `mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:1276,mask,mask,1276,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['mask'],['mask']
Availability,"ng ~631GB. The `createdb` was finished well without any weirdo message. ; But below follow the log of `createindex`. ```; Program call:; createindex nr.DB tmp --split-memory-limit 126000000 --threads 15 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using Target split mode.; Needed memory (631391886584 byte) of total memory (129024000000 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size of --split or set it to 0 to automatically optimize target database split.; Write VERSION (0); Write META (1); MaxSeqLength: 65535; KmerSize: 7; CompBiasCorr: 1; AlphabetSize: 21; Masked: 1; Spaced: 1; KmerScore: 0; Sequenc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/161:1436,mask,mask,1436,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161,1,['mask'],['mask']
Availability,"ng); -s 	5.700 	sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive [1.0,7.5]; -k 	0 	k-mer size in the range (0: set automatically to optimum) ; --k-score 	2147483647	k-mer threshold for generating similar-k-mer lists ; --alph-size 	21 	alphabet size [2,21] ; --offset-result 	0 	Offset result list ; --split 	0 	Splits input sets into N equally distributed chunks. The default value sets the best split automatically. createindex can only be used with split 1.; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; --diag-score 	1 	use diagonal score for sorting the prefilter results [0,1] ; --exact-kmer-matching 	0 	only exact k-mer matching [0,1] ; --mask 	1 	0: w/o low complexity masking, 1: with low complexity masking; --min-ungapped-score 	15 	accept only matches with ungapped alignment score above this threshold; --spaced-kmer-mode 	1 	0: use consecutive positions a k-mers; 1: use spaced k-mers ; --spaced-kmer-pattern 	 	User-specified spaced k-mer pattern ; --local-tmp 	 	Path where some of the temporary files will be created ; --disk-space-limit 	0 	Set the maximum disk space (in Mb) to use for reverse profile searches. Defaults (0) to all available disk space in the temp folder. align options 	default 	description [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the alignment: 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; -e 	0.001 	list matches below this E-value [0.0, inf] ; --min-seq-id 	0.000 	list matches above this sequence identity (for clustering) [0.0,1.0]; --seq-id-mode 	0 	0: alignment length 1: shorter, 2: longer sequence ; --alt-ali 	5 	Show up to this many alternative alignments ; -c 	0.000 	list matches above this fraction ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:5592,mask,mask,5592,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,3,['mask'],"['mask', 'masking']"
Availability,"nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:2156,avail,available,2156,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['avail'],['available']
Availability,"nly-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:5974,mask,mask,5974,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,2,['mask'],"['mask', 'mask-prob']"
Availability,"nome, so they should match perfectly. (Next, I'll run it on genes that might not perfectly match the reference as they can have some differences in the third char of each coddon.). ## Current Behavior; When running a nucleotides search I get ~5K results, most of them are long enough and mapped well.; When running a translated search I get 89K results that are very short and non of them covers the entire gene.; I assume that this is not a bug but rather an intended behavior. What am I missing?. ## Steps to Reproduce (for bugs); the files can be found here:; query - https://files.cs.huji.ac.il/morani/cds_from_genomic.fna; target - https://files.cs.huji.ac.il/morani/GCF_000011885.1_ASM1188v1_genomic.fna ; translated search command -` mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_translated.m8 tmp --search-type 2 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`; regular search command - `mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_nucleotides.m8 tmp --search-type 3 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`. ## MMseqs Output (for bugs); output files:; translated search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_translated.m8; regular search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_nucleotides.m8. ## Context; For a pipeline I'm designing, I'm comparing a few tools that can search for gene in a reference genome. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used : 15.6f452; * Downloaded using conda; * Server info:; NAME=""Debian GNU/Linux""; VERSION_ID=""10""; VERSION=""10 (buster)""; VERSION_CODENAME=buster; ID=debian; HOME_URL=""https://www.debian.org/""; SUPPORT_URL=""https://www.debian.org/support""; BUG_REPORT_URL=""https://bugs.debian.org/"". Thanks! ; Netta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/796:1906,Down,Downloaded,1906,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/796,1,['Down'],['Downloaded']
Availability,"nput --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0. Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 4m 46s 360ms; Create directory All_cohort_tmp//9948387321092861199/clu_tmp; linclust All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/clu_tmp --cluster-mode 2 --threads 56 -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --max-seq-len 10000 --spaced-kmer-mode 0 --remove-tmp-files 1 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by re",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:4198,mask,mask,4198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"nput_step_redundancy: 0h 0m 0s 21ms; Time for processing: 0h 0m 0s 92ms; extractframes tmp/3198441352783276465/clu_tmp/13016959338117486175/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 100.00% 9.78K 0s 59ms ; Time for merging to query_seqs_h: 0h 0m 0s 439ms; Time for merging to query_seqs: 0h 0m 0s 494ms; Time for processing: 0h 0m 2s 117ms; prefilter tmp/3198441352783276465/clu_tmp/13016959338117486175/query_seqs tmp/3198441352783276465/clu_tmp/13016959338117486175/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 5 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3 . Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 1648954 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to cluster a number of gene sequences with an identity of 0.8 and no minimum length for the aligned portion of the genes. ## Your Environment; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:16326,mask,mask,16326,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,2,['mask'],"['mask', 'mask-prob']"
Availability,"nslate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Linux version 3.10.0-1160.6.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) )",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:3829,Error,Error,3829,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,1,['Error'],['Error']
Availability,"nt length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	1; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:6906,Mask,Mask,6906,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['Mask'],['Mask']
Availability,"nt length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	1; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	8; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:2878,Mask,Mask,2878,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['Mask'],['Mask']
Availability,"nucl:5,aa:0. MMseqs Version: ad5837b3444728411e6c90f8c6ba9370f665c443; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:2; Gap extension cost nucl:5,aa:0; Zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:3382,Mask,Mask,3382,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,2,['Mask'],['Mask']
Availability,"nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: g++ version 10.3.0, cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): SLURM system, called; `salloc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:5192,error,error,5192,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,2,"['error', 'fault']","['error', 'fault']"
Availability,"o Reproduce (for bugs). a) Get the input sequences which here I have split into 3 files to fit into Github's upload limits:. [my_seqs.1of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608041/my_seqs.1of3.fasta.gz); [my_seqs.2of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608046/my_seqs.2of3.fasta.gz); [my_seqs.3of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608047/my_seqs.3of3.fasta.gz). b) Consolidate the 3 chunks:. zcat my_seqs.*.fasta.gz > /tmp/my_seqs.fasta. c) Execute and expose the bug:. /opt/mmseqs/bin/mmseqs easy-cluster \; /tmp/my_seqs.fasta /tmp/my_seqs/result /tmp/my_seqs/tmp \; --dbtype 2 --threads 8 --local-tmp /tmp \; --cluster-reassign -s 7.5 --cov-mode 0 -c 0.98 --cluster-mode 2 --min-seq-id 0.99 -v 1. and the bug is shown below. ## MMseqs Output (for bugs). /tmp/my_seqs/tmp/5280277461515018798/clu_tmp/18196956704942050314/nucleotide_clustering.sh: line 48: 4723 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died. ## Context. In my hands, this bug is exposed only when the number of nucleotide sequences is in the order of millions. For small sets (thousands) the execution completes uneventfully. I have tried the precompiled AVX2 version, the SSE4.1 version, I have tried my own compilation of the latest release (15-6f452, Oct 31 2023) and also the latest github version (f6c9880) and other variations. All attempts led to the exact same bug. I have tried also with other three input datasets. All four crash in the same way. All four are in the order of 3 to 4million nucleotide sequences. When I subset the sequences to about 200K sequences, easy-cluster runs to completion. ## Your Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; C",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:1141,fault,fault,1141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,3,"['Error', 'fault']","['Error', 'fault']"
Availability,"o Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:1374,down,download,1374,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['down'],['download']
Availability,"o have scrambled the name-sequence associations. Particularly for the JGI sequence IDs (the Uniprot IDs that I checked seemed to be ok). ## Steps to Reproduce (for bugs); input:; ``` bash; wget https://metaclust.mmseqs.com/2018_06/metaclust_nr.fasta.gz; gunzip metaclust_nr.fasta.gz; grep -A1 GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1; ```. output:; ```; >GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1 # 1 # 249 # 1 # ID=3271246_1;partial=11;start_type=Edge;rbs_motif=None;rbs_spacer=None;gc_cont=0.582; HIGGTHYQNHHDFDPYLARVQQGELPVYRALTPSADERLIREFILQLKLGQVSRAYFQKKFGIELCERFRAPFQTLADWGLLA; ```. input:; ``` ; wget http://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar xvf colabfold_envdb_202108.tar.gz; grep GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1 colabfold_envdb_202108_h.tsv; ```. output:; ```; 117269648 GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1; ```. input:; ```; grep 117269648 colabfold_envdb_202108_seq.tsv; ```. output:; ```; 117269648 MAYTLPELSYDYAALEPHVDAETMRIHHDLHHAGYMNKLNAALEKYPEFFEKGIEDLMRNLDKIPEDVRGGVKNNGGGYFNHNLFWESMSPDGGAPEGELKDAIEKSFGSFDEMKEKFSNAAATQFGSGWAWLYKESDGSLGITNTSNQDIPFAEGRTLLMNLDVWEHSYYLKYQNKRPDYIENWWNVLNWKGVAEKFKS; ```. I then go to; ```; https://genome.jgi.doe.gov/portal/pages/dynamicOrganismDownload.jsf?organism=GraSoiStandDraft_25; ```; and download the scaffolds for that sample. I then make a blast database and blast the two sequences; ```; >metaclust; HIGGTHYQNHHDFDPYLARVQQGELPVYRALTPSADERLIREFILQLKLGQVSRAYFQKKFGIELCERFRAPFQTLADWGLLA. >colabfold_envdb_202108; MAYTLPELSYDYAALEPHVDAETMRIHHDLHHAGYMNKLNAALEKYPEFFEKGIEDLMRNLDKIPEDVRGGVKNNGGGYFNHNLFWESMSPDGGAPEGELKDAIEKSFGSFDEMKEKFSNAAATQFGSGWAWLYKESDGSLGITNTSNQDIPFAEGRTLLMNLDVWEHSYYLKYQNKRPDYIENWWNVLNWKGVAEKFKS; ```; against the scaffolds using tblastn.; I get a perfect match on scaffold3271246 for the metaclust sequence, but the best match from the colabfold_envdb_202108 sequence has about 50% identity.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/560:1579,down,download,1579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/560,1,['down'],['download']
Availability,obacteriota; ```. Each job was given 24 threads with 30Gb per thread (720Gb total) - more is possible. ; As there are 24 files and I used 24 threads - I would assume that the error lies somewhere in how the data is put back together?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb sampleX_scaffolds.fasta sampleX_DB; mmseqs taxonomy sampleX_DB /home/mmseqs2/NR/NR sampleX_mmseqs_taxonomy.txt sampleX_temp --tax-lineage 1 --orf-filter 1 --threads 24 --split-memory-limit 500G; ```. ## MMseqs Output (for bugs); [mmseqs.29360353.out.txt](https://github.com/soedinglab/MMseqs2/files/13532025/mmseqs.29360353.out.txt); [mmseqs.29360398.out.txt](https://github.com/soedinglab/MMseqs2/files/13532026/mmseqs.29360398.out.txt). ## Context; Trying to classify metagenomic contigs for kingdom binning. . ## Your Environment; * Git commit used : MMseqs2 Version: 15.6f452; * Which MMseqs version was used: conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; free -m; total used free shared buff/cache available; Mem: 256830 27571 113148 2175 116109 223713; Swap: 131071 9427 121644; ```. ```; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 invpcid_single ssbd mba ibrs ibpb stibp ibrs_enhanced fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local split_lock_detect wbnoinvd dtherm arat pln pts hwp hwp_act_window hwp_pkg_req avx512vbmi umi,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/786:2887,avail,available,2887,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/786,1,['avail'],['available']
Availability,"ode 	0; > Alternative alignments 	0; > Coverage threshold 	0; > Coverage mode 	0; > Max sequence length 	65535; > Compositional bias 	1; > Realign hits 	false; > Max reject 	2147483647; > Max accept 	2147483647; > Include identical seq. id. 	false; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	nucl:5,aa:11; > Gap extension cost 	nucl:2,aa:1; > Zdrop 	40; > Threads 	32; > Compressed 	0; > Verbosity 	3; > Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; > Sensitivity 	5.7; > k-mer length 	0; > k-score 	2147483647; > Alphabet size 	nucl:5,aa:21; > Max results per query 	300; > Split database 	0; > Split mode 	2; > Split memory limit 	0; > Diagonal scoring 	true; > Exact k-mer matching 	0; > Mask residues 	1; > Mask lower case residues 	0; > Minimum diagonal score 	15; > Spaced k-mers 	1; > Spaced k-mer pattern 	; > Local temporary path 	; > Rescore mode 	0; > Remove hits by seq. id. and coverage	false; > Sort results 	0; > Mask profile 	1; > Profile E-value threshold 	0.1; > Global sequence weighting 	false; > Allow deletions 	false; > Filter MSA 	1; > Maximum seq. id. threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select N most diverse seqs 	1000; > Omit consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward frames 	1,2,3; > Reverse frames 	1,2,3; > Translation table 	1; > Translate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:1679,Mask,Mask,1679,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,1,['Mask'],['Mask']
Availability,"ode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median re",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:3659,mask,mask,3659,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,2,['mask'],"['mask', 'mask-prob']"
Availability,"ode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 177.98K 0s 684ms; Time for merging to q_orfs_aa_h: 0h 0m 0s 101ms; Time for merging to q_orfs_aa: 0h 0m 0s 105ms; Time for processing: 0h 0m 1s 79ms; prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:4453,mask,mask,4453,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"ode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 3; Start sensitivity 4; Search iterations 3 [5/1999]; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter search_results/qdb db/uniref30_2103_db.idx search_results/tmp/12005814431969335264/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nuc; l:nucleotide.out -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is eno",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:3833,mask,mask,3833,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,2,['mask'],"['mask', 'mask-prob']"
Availability,"of_res'), PosixPath('../db_sources/colabfold_envdb_202108_db'), PosixPath('results_700_only_456_fasta_700_5/res_env'), PosixPath('results_700_only_456_fasta_700_5/tmp'), '--threads', '64', '--num-iterations', '3', '--db-load-mode', '2', '-a', '-s', '8', '-e', '0.1', '--max-seqs', '10000']' returned non-zero exit status 1.; ```. ## Steps to Reproduce (for bugs). Put in `input_sequences.fasta` anywhere (it affects single entry fasta and also miltientry fasta) one of those examples:; * `SEGGQDFWL`; * `GSSGLISMPRV`. Setup ColabFold databases from https://github.com/sokrypton/ColabFold/blob/main/setup_databases.sh; Run `colabfold_search input_sequences.fasta /path/to/db_folder search_results`; you will see above crash. **OR**. Go to https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb and try to fold one of the examples, you will see:; > Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Segmentation fault (core dumped); Error: Alignment died; ```. ## Context. If you will extend crashing examples to 12aa then mmseqs will work correctly. Is seems that 12 is some kind of magic barrier in examples I found. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `fcf52600801a73e95fd74068e1bb1afb437d719d` and `edb8223d1ea07385ffe63d4f103af0eb12b2058e`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * `fcf52600801a73e95fd74068e1bb1afb437d719d` compiled from source; * `edb8223d1ea07385ffe63d4f103af0eb12b2058e` downloaded from `https://mmseqs.com/archive/edb8223d1ea07385ffe63d4f103af0eb12b2058e/mmseqs-linux-avx2.tar.gz`; * F",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:3685,error,error,3685,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,1,['error'],['error']
Availability,"ogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs V",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473:1878,mask,mask,1878,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"okup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:4407,mask,mask-lower-case,4407,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['mask'],['mask-lower-case']
Availability,"olumn with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 2; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479:1900,Mask,Mask,1900,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479,2,['Mask'],['Mask']
Availability,"ome sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:1357,Mask,Mask,1357,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['Mask'],['Mask']
Availability,"ompressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:3759,mask,mask,3759,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"ong time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.9; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:1425,error,error,1425,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['error'],['error']
Availability,"ons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Input database ""/mount-nfs/mydataset/single_train_sequences.fasta"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ```. ## Context; I am trying to extract the pssm for a big fasta file following this steps:; https://github.com/soedinglab/MMseqs2/issues/580; Unfortunately, only the easy-search is working and not the search. If I tried to just use the easy-search I get the same message as above when I try to run the ""result2profile"" script. I also tried to extract a single sequence from my fasta file, and I got the same error.; Here is the single fasta file that I am trying to test with :; ```; >A0A8I6GHU0 tr|A0A8I6GHU0|A0A8I6GHU0_RAT U6 snRNA-associated Sm-like protein LSm1 OS=Rattus norvegicus OX=10116 GN=Lsm1 PE=3 SV=1; HCISSLKLTAFFKRSFLLSPEKHLVLLRDGRTLIGFLRSIDQFANLVLHQTVERIHVGRK; YGDIPRGIFVVRGENVVLLGEIDLEKESDTPLQQVSIEEILEEQRVEQQSRLEAEKLKVQ; ALKDRGLSIPRADTLDEY; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Which MMseqs version was used: latest version from conda.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU support both AVX2/SSE and the server has 450GB of memory; * Operating system and version: Ubuntu 20.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/720:3359,error,error,3359,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720,1,['error'],['error']
Availability,"or bugs). Navigate to `matchy233/MMseqs-playgrond/data` and run the following command to make a profile database:. ```shell; mmseqs createdb query_new.fasta querydb ; mmseqs databases UniProtKB/Swiss-Prot swissprot; mmseqs search querydb swissprot resultdb tmp; mmseqs result2profile querydb swissprot resultdb profiledb; ```; Build `mmseqs-playground` using the following command:. ```; cd <project_root>; mkdir -p build; cd build; cmake ..; make -j 64; ```; And then run `mmseqs-playground printprofie` on `profiledb` created just now. ```shell; build/src/mmseqs-playground printprofile data/profiledb --threads 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```shell; $ build/src/mmseqs-playground printprofile data/tmp/profile --threads 1; printprofile data/tmp/profile --threads 1. MMseqs Version: 34aa577a8f1c4269993fcd755526db4f742c5e86; Threads 1; k-mer length 0; Verbosity 3. Error: sequence length does not match.; Expected equence length: 310; Actual sequence length: 165; ```. ![image](https://user-images.githubusercontent.com/32197833/170818420-30aeb0b4-2f69-462e-ab90-74001fc5a04b.png). ## Context. All the code is available at [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). It is (at least imitating) a MMseqs-derived project. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 34aa577a8f1c4269993fcd755526db4f742c5e86; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detec",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:2728,Error,Error,2728,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,1,['Error'],['Error']
Availability,"or by using the ```easy-cluster``` or ```easy-linclust``` commands, a proper Fasta file should be created with the representative sequences. ## Current Behavior. A Fasta file is created that does not contain sequences but only the sequences IDs : . ```; >sequence_1; sequence_1; >sequence_2; sequence_2; >sequence_3; sequence_3; ```. ## Steps to Reproduce (for bugs). Run ```easy-cluster``` or ```easy-linclust``` on a protein Fasta file. ## MMseqs Output (for bugs). ```; Program call:; easy-cluster final_complete_sequences.fa.gz clusteringDB tmp --cov-mode 1 -c 0.9 --min-seq-id 0.9 --threads 2 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Program call:; createdb final_complete_sequences.fa.gz tmp/3578692915323364718/input --max-seq-len 65535 --dont-split-seq-by-len 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:1268,Mask,Mask,1268,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['Mask'],['Mask']
Availability,"orary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 2.20B 2h 9m 12s 463ms; Process file into 17 parts; Generate k-mers list for 1 split; Generate k-mers list for 2 split; Generate k-mers list for 3 split; Generate k-mers list for 4 split; Generate k-mers list for 5 split; Generate k-mers list for 6 split; Generate k-mers list for 7 split; [=================================================================] 2.20B 32m 39s 205ms; Sort kmer 0h 0m 26s 313ms; Sort by rep. sequence 0h 0m 4s 966ms; Generate k-mers list for 8 split; [=======",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:3889,mask,mask,3889,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,2,['mask'],"['mask', 'mask-prob']"
Availability,"orr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:3924,mask,mask,3924,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,2,['mask'],"['mask', 'mask-prob']"
Availability,"ory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3. Initialising data structures...; Using 2 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1160320116 byte) of total memory (1886452531 byte); Target database: tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy(Size: 103377); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0h 0m 0s 207ms; Query database: tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy(size=103377); Process prefiltering step 1 of 1. Index table k-mer threshold: 130; Index table: counting k-mers...; ..........; Index table: Masked residues: 402243; Index table: fill...; ..........; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 2960353; DB Size: 529762118 (byte); Avg Kmer Size: 0.0462555; Top 10 Kmers; 	DFGTPF		324; 	PCTMEI		202; 	DGGHTL		201; 	PSTSWQ		201; 	SPYKSW		201; 	YTSSHY		200; 	GYWLHW		154; 	HWVPRY		134; 	DVFGIW		107; 	GYWLRW		99; Min Kmer Size: 0; Empty list: 61816461. Time for index table init: 0h 0m 5s 492ms; 	k-mers per position = 1.85326, k-mer match probability: 1.27642e-13; k-mer similarity threshold: 130; k-mer match probability: 1.27642e-13. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 103377; Target db start 1 to 103377; ..........; 1 k-mers per position.; 128 DB matches per sequence.; 0 Overflows.; 5 sequences passed prefiltering per query sequence.; Median result list size: 3; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 0m 6s 697ms; Time for merging files: 0h 0m 0s 263ms; Time for process",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:18954,Mask,Masked,18954,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['Mask'],['Masked']
Availability,"ory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb SRC.fasta /export/scratch/SRC-50/8871099322051866948/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [2022891328] 19m 44s 787ms; Time for merging to input_h: 0h 15m 26s 958ms; Time for merging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:1812,Mask,Mask,1812,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,2,['Mask'],['Mask']
Availability,"ory-limit 70G --split-mode 2 --split 4 --compressed 1. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Create directory tmp; cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:1757,Mask,Mask,1757,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['Mask'],['Mask']
Availability,"ositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 1 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 4 . Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 194; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEX",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:3699,mask,mask-lower-case,3699,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,1,['mask'],['mask-lower-case']
Availability,"osity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	100G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sens",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:92680,Mask,Mask,92680,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,2,['Mask'],['Mask']
Availability,"otation; ```; createdb input.fasta input_script7/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 31ms; Time for merging to qdb: 0h 0m 0s 31ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 145ms; Create directory input_script7/tmp1; search input_script7/qdb uniref30_2302_db input_script7/res input_script7/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000 ; prefilter input_script7/qdb uniref30_2302_db.idx input_script7/tmp1/1006494840762416450/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta input_script5/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 32ms; Time for merging to qdb: 0h 0m 0s 47ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 226ms; Create directory input_script5/tmp1; search input_script5/qdb uniref30_2302_db input_script5/res input_script5/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000 ; prefilter input_script5/qdb uniref30_2302_db.idx input_script5/tmp1/16308606893082150349/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:96,prof:80 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:1781,mask,mask-lower-case,1781,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,1,['mask'],['mask-lower-case']
Availability,"output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + STRATEGY=; + hasCommand aria2c; + command -v aria2c; + hasCommand curl; + command -v curl; + STRATEGY=' CURL'; + hasCommand wget; + command -v wget; + STRATEGY=' CURL WGET'; + '[' ' CURL WGET' = '' ']'; + '[' '!' -f COLABDB_READY ']'; + mmseqs createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1; createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabet size 	aa:21,nucl:5; Compositional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabet size 	aa:21,nucl:5; Compositional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Ma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583:2307,Mask,Mask,2307,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583,1,['Mask'],['Mask']
Availability,"output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist """" --tax-lineage 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. **Full output and error attached below**. ```tmp/10336174962539687461/taxonomy_tmp/11653652317365833767/tmp_taxonomy/6923600097584969791/taxonomy.sh: line 58: 78000 Segmentation fault (core dumped) ""$MMSEQS"" lca ""${TARGET}"" ""${LCAIN}"" ""${RESULTS}"" ${LCA_PAR}```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **14.7e284**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; **40 cpus, 700gb RAM**; * Operating system and version:; * Operating System: **CentOS Linux 7 (Core)**; * Kernel: **Linux 3.10.0-1160.62.1.el7.x86_64**. [job-mmseqs_easytax_050523_error.txt](https://github.com/soedinglab/MMseqs2/files/11426489/job-mmseqs_easytax_050523_error.txt); [job-mmseqs_easytax_050523_out.txt](https://github.com/soedinglab/MMseqs2/files/11426490/job-mmseqs_e",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:3344,fault,fault,3344,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['fault'],['fault']
Availability,"ownloading NR database using ```mmseqs databases NR NR tmp```; ## Current Behavior; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/668:1192,down,download,1192,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668,2,"['Error', 'down']","['Error', 'download']"
Availability,"p --cluster-mode 2 -e 0.001 --min-seq-id 0.5 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --split-memory-limit 500G --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:4000,mask,mask,4000,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"p pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Create directory tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1; search BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/first tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1 --alignment-mode 1 -e 0.0001 --max-rejected 5 --max-accept 30 --threads 36 -s 3 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1. prefilter BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1/10054445979770264072/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 36 --compressed 0 -v 3 -s 3.0. Query database size: 355695 type: Aminoacid; Estimated memory consumption: 2T; Target database size: 532633656 type: Aminoacid; Index table k-mer threshold: 152 at k-mer size 7; Index table: counting k-mers. ```. Thank you.; Best,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:4368,mask,mask,4368,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,3,['mask'],"['mask', 'mask-lower-case', 'mask-prob']"
Availability,"p/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28ms; Time for processing: 0h 0m 1s 808ms; rescorediagonal tmp/3198441352783276465/input tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.5 -a 0 --cov-mode 5 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compres",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:6496,mask,mask-lower-case,6496,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['mask'],['mask-lower-case']
Availability,"p/9045538653068861586/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 ; > ; > [=================================================================] 100.00% 2.67M 0s 919ms ; > Time for merging to query_seqs_split_h: 0h 0m 0s 832ms; > Time for merging to query_seqs_split: 0h 0m 0s 878ms; > Time for processing: 0h 0m 3s 919ms; > prefilter tmp/7701176895607249840/search_tmp/9045538653068861586/query_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/target_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 2670930 type: Nucleotide; > Target split mode. Searching through 18 splits; > Estimated memory consumption: 326G; > Target database size: 100684280 type: Nucleotide; > Process prefiltering step 1 of 18; > ; > Index table k-mer threshold: 0 at k-mer size 15 ; > Index table: counting k-mers; > Segmentation fault (core dumped) ] 0.00% 1 eta -; > Error: Prefilter died; > Error: Search step died; > Error: Search died; > . ## Context. Hi I am trying to run an nucleotide-nucleotide search in mmseq2 with a custom database. This error does not occur with a different, smaller nucleotide database. Thank you very much for this amazing tool and all your hard work. ## Your Environment. I am us",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:6800,mask,mask,6800,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,2,['mask'],"['mask', 'mask-prob']"
Availability,"p2 ./mmseqs_output/tmp/5351426679731834765/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 8338 type: Aminoacid; Estimated memory consumption: 1003M; Target database size: 8338 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 8.34K 0s 514ms; Index table: Masked residues: 3074; Index table: fill; [=================================================================] 8.34K 0s 572ms; Index statistics; Entries: 1408015; DB size: 496 MB; Avg k-mer size: 0.022000; Top 10 k-mers; GPGGTL 37; GLGNGK 26; ALGNGK 23; DLLDLP 21; FDDTDS 20; NGGSLK 17; DLLDMP 17; DVLDMP 17; GEQVAR 16; FDDTDT 16; Time for index table init: 0h 0m 2s 591ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8338; Target db start 1 to 8338; [=================================================================] 8.34K 26s 907ms. 903.365687 k-mers per position; 4641 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 88 sequences passed prefiltering per query sequence; 76 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 36ms; Time for processing: 0h 0m 32s 520ms; align ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:29305,Mask,Masked,29305,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['Mask'],['Masked']
Availability,"parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide sear",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:2597,Mask,Mask,2597,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,2,['Mask'],['Mask']
Availability,"pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` error did not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## con",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:4819,Error,Error,4819,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['Error'],['Error']
Availability,pe: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer th,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:30271,Mask,Masked,30271,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,"peed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 31 100 31 0 0 41 0 --:--:-- --:--:-- --:--:-- 41; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 51.3G 100 51.3G 0 0 1565k 0 9:33:26 9:33:26 --:--:-- 2662k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 54.4M 100 54.4M 0 0 1374k 0 0:00:40 0:00:40 --:--:-- 939k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 1080k 100 1080k 0 0 489k 0 0:00:02 0:00:02 --:--:-- 491k; tar2db tmp/14668141768776664068/gtdb.tar.gz tmp/14668141768776664068/tardb --tar-include faa.gz$ --threads 8 -v 3. Time for merging to tardb: 0h 0m 0s 28ms; Time for merging to tardb.lookup: 0h 0m 0s 13ms; Time for processing: 0h 7m 32s 203ms; createdb tmp/14668141768776664068/tardb outpath/GTDB --compressed 0 -v 3. Converting sequences; Cannot open outpath/GTDB.source for writing; Error: createdb died. ## Context; Please note that I get this error on _both_ my local computer and on my server; using different methods of installation. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 2fad714b525f1975b62c2d2b5aff28274ad57466 (local MacOSX computer) as well as MMseqs2 Version: 15.6f452 (on Linux server); * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Installed with both conda (linux server) and using the MacOSX binary available on the mmseqs download page (local computer); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): for Linux server: supports AVX2, 1TB RAM. for local MacOSX computer: supports AVX2 (I think?), 16 GB RAM; * ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/809:2038,Error,Error,2038,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/809,1,['Error'],['Error']
Availability,"pen cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	92G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:3340,mask,mask-lower-case,3340,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['mask'],['mask-lower-case']
Availability,"performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` error did not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:4999,Error,Error,4999,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,2,"['Error', 'error']","['Error', 'error']"
Availability,persisten segmentation fault error across different contig datasets,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/632:23,fault,fault,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632,2,"['error', 'fault']","['error', 'fault']"
Availability,persistent result2flat died segmentation fault in many fastas,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/617:41,fault,fault,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617,1,['fault'],['fault']
Availability,"ponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; *** Download Progress Summary as of Wed Sep 27 13:22:54 2023 *** ; ===============================================================================; [#2b99bd 207MiB/51GiB(0%) CN:5 DL:10MiB ETA:1h24m8s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of Wed Sep 27 13:23:54 2023 *** ; ===============================================================================; [#2b99bd 723MiB/51GiB(1%) CN:5 DL:8.7MiB ETA:1h38m40s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of Wed Sep 27 13:24:56 2023 *** ; ===============================================================================; [#2b99bd 1.1GiB/51GiB(2%) CN:5 DL:6.5MiB ETA:2h11m31s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of Wed Sep 27 13:25:58 2023 *** ; =====================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:2878,Down,Download,2878,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['Down'],['Download']
Availability,"positional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 1 --split-memory-limit 0 -v 3 --threads 56 . Estimated memory consumption: 780G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================tmp2/7152678087979496025/createindex.sh: line 56: 37309 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Your En",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583:4278,mask,mask,4278,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583,2,['mask'],"['mask', 'mask-prob']"
Availability,"pped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:4678,mask,mask,4678,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"prefilter ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --k-score 2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 5.7. Query database size: 25293 type: Aminoacid; Estimated memory consumption: 18G; Target database size: 3570076 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 3.57M 8s 444ms; Index table: Masked residues: 11969832; Index table: fill; [=================================================================] 100.00% 3.57M 8s 228ms; Index statistics; Entries: 1027253274; DB size: 6366 MB; Avg k-mer size: 16.050832; Top 10 k-mers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:3801,Mask,Masked,3801,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['Mask'],['Masked']
Availability,prefilter step died when running easy-search: Segmentation fault (core dumped),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:59,fault,fault,59,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,1,['fault'],['fault']
Availability,"prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Database size: 51992 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 51.99K 0s 346ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 62ms; Sort by rep. sequence 0h 0m 0s 19ms; Time for fill: 0h 0m 0s 27ms; Time for merging to pref: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 567ms; rescorediagonal shrimpDB shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref tmp97/17949317426677965256/linclust/6279588666755106708/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:5001,mask,mask,5001,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,2,['mask'],"['mask', 'mask-prob']"
Availability,"prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1 . MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower ca",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:1812,Mask,Mask,1812,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,1,['Mask'],['Mask']
Availability,"ps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # or mmseqs createdb genome.ffn collection_db; mmseqs cluster collection_db collection_clu temp; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	8; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. **It is unclear from the input if a translated or nucleotide se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/507:1961,Mask,Mask,1961,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507,2,['Mask'],['Mask']
Availability,"pt 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	2; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:2079,Mask,Mask,2079,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['Mask'],['Mask']
Availability,"put_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 628ms; extractframes tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 6.46M 24s 391ms; Time for merging to query_seqs_h: 0h 0m 3s 920ms; Time for merging to query_seqs: 0h 0m 19s 622ms; Time for processing: 0h 0m 57s 140ms; prefilter tmp/576731152808920235/query_seqs tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:11365,mask,mask,11365,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"qs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	5; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	1; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:1925,Mask,Mask,1925,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['Mask'],['Mask']
Availability,"qs search profileDB1 profileDB1_consensus resultDB2 tmp --add-self-matches -a # Add your cluster criteria here; # cluster the results ; mmseqs clust profileDB1 resultDB2 profileDB1_clu; ```. I can run `mmseqs search` without issue but when I run `mmseqs clust` I get the following error:. ```; Create directory /final/db_cluster/low_1/Genus02938/Genus02938_DB; cluster /final/db_profile/low_1/Genus02938/Genus02938_DB /final/db_profile_vs_consensus/low_1/Genus02938/Genus02938_DB /final/db_cluster/low_1/Genus02938/Genus02938_DB. MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 144; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name; Clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/844:1350,Mask,Mask,1350,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/844,2,['Mask'],['Mask']
Availability,"qs_h by mergeResults: 0h 0m 0s 0ms; Time for merging into tmp/274686171214568767/query_seqs by mergeResults: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; splitsequence tmp/274686171214568767/query_seqs tmp/274686171214568767/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 8 --compressed 0 -v 3 ; ; Time for processing: 0h 0m 0s 1ms; prefilter tmp/274686171214568767/query_seqs_split tmp/274686171214568767/target_seqs_split tmp/274686171214568767/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 4G -c 0.99 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 2.0 ; ; Query database size: 20 type: Nucleotide; Error: Prefilter died; Error: Search step died. Command error:; Cannot fit databased into 4G. Please use a computer with more main memory.; ```. fasta file content is:; ```; >1; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >2; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >3; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATTTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >4; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATGTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >5; CCATGCGTAGAGCTAACGAGCCAGCGGAAAGCGTGAGGCGCTTTTAAGCATGGCGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTAGGTTCG; >6; CCATGCGTAGAGCTTACGAGCCAGCGGAAAGCGTGAGGCGCTATTAAGCATGGGGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTACGTTCG; >7; ATCTCGTCCCGAGAATTCTAAGCCTCAACATCTATGAGTTATGAGGTTAGCCGAAAAAGCACGTGGTGGCGCCCACCGACTGTTCCCAGACTGTAGCTCT; >8; TTGTTCTGTCAAGGCCCGACCTTCATCGCGGCCGATTCCTTCTGCGGACCATACCGTCCTGATACTTTGGTCATGTTTCC",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/253:3443,Error,Error,3443,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253,2,['Error'],['Error']
Availability,"qs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 250G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 . Query database size: 1298472 type: Nucleotide; Target split mode. Searching through 12 splits; Estimated memory consumption: 216G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.80M 6m 27s 363ms; Index table: Masked residues: 517008537; Index table: fill; [=================================================================] 7.80M 11m 24s 325ms; Index statistics; Entries: 27958919735; DB size: 168174 MB; Avg k-mer size: 26.038773; Top 10 k-mers; GGGGCAGCGTGATTT	319478; TAATCGTGCAGCGGG	292128; GTGCGCAGCGTATCG	276641; CTCTCGGGGGCGTGG	257406; ACAGTTAGTATGTGT	233646; TCCAGGGAGCATGGG	230906; AGTGGAATTTCATGG	224146; TCGCGCTCTGTAGTG	209357; ACTCACGGAGGAGGG	193555; GCCAACTCTAGGGAG	184395; Time for index table init: 0h 18m 59s 10ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 12); Query db start 1 to 1298472; Target db start 1 to 7796647; [=================================================================] 1.30M 55m 45s 390ms. 0.917439 k-mers per position; 255666 DB matches per sequence; 279 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1236 sequences with 0 size result lists; Time for merging to pref_0_tmp_0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:6595,Mask,Masked,6595,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['Mask'],['Masked']
Availability,"quence identity [2]; kmermatcher:; --kmer-per-seq INT k-mers per sequence [21]; --kmer-per-seq-scale TWIN Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [aa:0.000,nucl:0.200]; --adjust-kmer-len BOOL Adjust k-mer length based on specificity (only for nucleotides) [0]; --hash-shift INT Shift k-mer hash initialization [67]; --include-only-extendable BOOL Include only extendable [0]; --ignore-multi-kmer BOOL Skip k-mers occurring multiple times (>=2) [0]; profile:; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignment (score only); 2: local alignment; 3: global alignment; 4: longest alignment fulfilling window quality criterion [0]; --dbtype INT Database type 0: auto, 1: amino acid 2: nucleotides [0]; --shuffle BOOL Shuffle input database [1]; --createdb-mode INT Createdb mode 0: copy data, 1: soft link data and write new index (works only with single line fasta/q) [1]; --id-offset INT Numeric ids in index file are offset by this value [0]; common:; --threads INT Number of CPU-cores used (all by default) [10]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; --sub-mat TWIN Substitution matrix file [aa:blosum62.out,nucl:nucleotide.out]; --max-seq-len INT Maximum sequence length [65535]; --db-load-mode INT Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]; --remove-tmp-files BOOL Delete temporary files [1]; --force-reuse BOOL Reuse tmp filse in tmp/latest folder ignoring parameters and version changes [0]; --mpi-runner STR Use MPI on compute cluster with this MPI command (e.g. ""mpirun -np 42"") []; expert:; --filter-hits BOOL Filter hits by seq.id. and coverage [0]; --sort-results INT Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]; --write-lookup INT write .l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:5823,error,errors,5823,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,1,['error'],['errors']
Availability,"quences. When running mmseqs2 `easy-cluster` like this:; ```; mmseqs easy-cluster test.fasta out.db tmp --min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:1049,mask,mask,1049,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['mask'],['mask']
Availability,"r 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:4684,mask,mask,4684,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,2,['mask'],"['mask', 'mask-prob']"
Availability,"r length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:2882,mask,mask,2882,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,2,['mask'],"['mask', 'mask-prob']"
Availability,"rage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:4541,Mask,Mask,4541,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['Mask'],['Mask']
Availability,"rapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 200G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files true; Report mode 0; Alignment format 0; Fo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/577:2082,Mask,Mask,2082,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577,1,['Mask'],['Mask']
Availability,"rbose http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz; `. > Extract the downloaded archive . > Convert the hhm file (uniclust30_2018_08_hhm_db) to MMseqs profile DB; `mseqs convertprofiledb uniclust30_2018_08_hhm_db profile_from_hmm --threads 30 -v 3; `. > Generate the index; `mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3`. ## MMseqs Output (for bugs); ```; > mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3; Program call:; createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	2147483647; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3. Substitution matrices...; Use kmer size 5 and sp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130:1068,Mask,Mask,1068,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130,1,['Mask'],['Mask']
Availability,"rce restart with latest tmp 	false; Remove temporary files 	false. extractorfs kelp_database tmp/3499313520568641582/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2; --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-; starts 0 --id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 714.62K 18s 1ms; Time for merging to q_orfs_aa_h: 0h 0m 17s 230ms; Time for merging to q_orfs_aa: 0h 0m 22s 109ms; Time for processing: 0h 1m 20s 933ms; prefilter tmp/3499313520568641582/q_orfs_aa uniref50 tmp/3499313520568641582/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --sp; lit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lo; wer-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed ; 0 -v 3 -s 5.7 . Query database size: 61153309 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 99G; Target database size: 48531432 type: Aminoacid; Process prefiltering step 1 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.26M 1m 44s 733ms; Index table: Masked residues: 187925951; Index table: fill; [=================================================================] 24.26M 3m 17s 822ms; Index statistics; Entries: 6286866786; DB size: 45739 MB; Avg k-mer size: 4.911615; Top 10 k-mers; DFEQLPH	32892; NVPGWSP	32831; FRYAFPS	32736; RYYVLGW	32688; WRLDFLN	31763; TVDGDFS	31579; NKTDFVQ	31135; QDWVQIP	30874; LDGAYVP	30051; ETGRYNV	29832; Ti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/478:3426,mask,mask,3426,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478,2,['mask'],"['mask', 'mask-lo']"
Availability,"rd frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	mpirun -pernode -np 8; Force restart with latest tmp 	false; Remove temporary files 	false. MPI Init; Rank: 0 Size: 8; prefilter human_prot.db /lustre/projects/carlson-group/mmseqs2-project/DBs/UniRef50 ./tmp/4797566427929930176/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:4214,mask,mask,4214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,2,['mask'],"['mask', 'mask-prob']"
Availability,"re-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:5999,mask,mask-lower-case,5999,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['mask'],['mask-lower-case']
Availability,"re-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:5611,mask,mask,5611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,2,['mask'],"['mask', 'mask-prob']"
Availability,reads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write DBR2INDEX (7); mmseqs-web-worker_1 | Write DBR2DATA (8); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write HDR2INDEX (20); mmseqs-web-worker_1 | Write HDR2DATA (21); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=================================================================] 10.75K 1s 426ms; mmseqs-web-worker_1 | Index table: Masked residues: 29698; mmseqs-web-worker_1 | Index table: fill; mmseqs-web-worker_1 | [=================================================================] 10.75K 0s 783ms; mmseqs-web-worker_1 | Index statistics; mmseqs-web-worker_1 | Entries: 6377423; mmseqs-web-worker_1 | DB size: 8228 MB; mmseqs-web-worker_1 | Avg k-mer size: 0.005939; mmseqs-web-worker_1 | Top 10 k-mers; mmseqs-web-worker_1 | GAGTGGTTAGGCGGA	1170; mmseqs-web-worker_1 | TGAAACGGCCCCCAC	886; mmseqs-web-worker_1 | CCCCCAAGGGACAGT	883; mmseqs-web-worker_1 | GGGTAGTCCGCAGGC	882; mmseqs-web-worker_1 | TTGGTAAGCCACGGC	882; mmseqs-web-worker_1 | GGGGCAGCGTGATTT	882; mmseqs-web-worker_1 | TGGTAAGTCCAGACG	882; mmseqs-web-worker_1 | AACGATTAATCGGAG	865; mmseqs-web-worker_1 | ATTAGGGGCCAAACG	855; mmseqs-web-worker_1 | TTCAGCAAGCGACTT	854; mmseqs-web-worker_1 | Write ENTRIES (9); mmseqs-web-worker_1 | Write ENTRIESOFFSETS (10); mmseqs-web-worker_1 | Write SEQINDEXDATASIZE (15); mmseqs-web-worker_1 | Write SEQINDEXSEQOFFSET (16); mmseqs-web-worker_1 | Write SEQINDEXDATA (14); mmseqs-,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:15093,Mask,Masked,15093,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['Mask'],['Masked']
Availability,"reatedb query.fasta tmp_easy_search/6745795380167965363/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 0ms; Time for merging to query: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 4ms; Create directory tmp_easy_search/6745795380167965363/search_tmp; search tmp_easy_search/6745795380167965363/query target_DB tmp_easy_search/6745795380167965363/result tmp_easy_search/6745795380167965363/search_tmp -a 1 --alignment-mode 3 --threads 96 -s 5.7 --sort-results 0 --remove-tmp-files 0 . prefilter tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 -s 5.7 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:5373,mask,mask,5373,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,2,['mask'],"['mask', 'mask-prob']"
Availability,recover longest orf after fragment elimination,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/832:0,recover,recover,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/832,1,['recover'],['recover']
Availability,"reen_prof mmtemp --local-tmp /scratch/saladi1/22776241/ --remove-tmp-files 1 --split-memory-limit 1000000. MMseqs Version: 	fac81fa7a63c1205209d4acbc46ce2209abcaa8a; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	64; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	1000000; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path 	/scratch/saladi1/22776241/; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-prof",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/193:2559,Mask,Mask,2559,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193,2,['Mask'],['Mask']
Availability,"reshold 	0; Coverage mode 	2; Max sequence length 	10000; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:1860,Mask,Mask,1860,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['Mask'],['Mask']
Availability,"residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. createindex colabfold_envdb_202108_db tmp. MMseqs Version: 75af0c82edf34587548bacc865cfa1d2261a9696; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 32. Target split ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/540:1914,Mask,Mask,1914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540,1,['Mask'],['Mask']
Availability,result2msa --allow-deletion - Segmentation fault,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/167:43,fault,fault,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/167,1,['fault'],['fault']
Availability,result2msa --compress - Segmentation fault,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/36:37,fault,fault,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/36,1,['fault'],['fault']
Availability,result2msa segmentation fault (Linux/MacOS) and cygwin error (Windows),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229:24,fault,fault,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229,2,"['error', 'fault']","['error', 'fault']"
Availability,"rf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile tmp/457325247790757046/pref --sub-mat blosum62.out -s 7.5 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 10; Verbosity 3. Initialising data structures...; Using 10 threads.; Use index pfam_profile.sk6; Index version: 12; Generated by: 7-4e23d; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: 2; Headers1: 1; Headers2: 0; ScoreMatrix: blosum62.out; Error: Prefilter died; ```. Pretty sure it isn't a memory problem. Also, seams that the kmer size required at `createindex` step are not the same as the `search` step, even passing these parameters in the command call.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189:3435,Mask,Mask,3435,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189,3,"['Error', 'Mask']","['Error', 'Mask', 'Masked']"
Availability,"rging to query: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Database type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Time for merging to query.lookup: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Tmp /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp folder does not exist or is not a directory.; docker-compose-mmseqs-web-worker-1 | prefilter /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 7.5 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Estimated memory consumption: 1G; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Process prefiltering step 1 of 1; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | k-mer similarity threshold: 96; docker-compose-mmseqs-web-worker-1 | Starting prefiltering scores calculation (step 1 of 1); docker-compose-mmseqs-web-worker-1 | Q",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:3018,mask,mask,3018,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"rix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	10000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:2570,Mask,Mask,2570,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,2,['Mask'],['Mask']
Availability,"rnative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:4515,mask,mask,4515,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"rnative alignments ; -c 	0.000 	list matches above this fraction of aligned (covered) residues (see --cov-mode); --cov-mode 	0 	0: coverage of query and target, 1: coverage of target, 2: coverage of query 3: target seq. length needs be at least x% of query length, 4: query seq. length needs be at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:7664,mask,mask-profile,7664,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,2,['mask'],"['mask', 'mask-profile']"
Availability,"rop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; [=================================================================Segmentation fault; Error: Create profile died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * Which MMseqs version was used:Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 32-core, 256 GB ram, vmtouch'ed target into memory (crash happens either way though); * Operating system and version: Debian GNU/Linux 11 (bullseye)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:6821,fault,fault,6821,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"rt mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --k-score 2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 5.7. Query database size: 25293 type: Aminoacid; Estimated memory consumption: 18G; Target database size: 3570076 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 3.57M 8s 444ms; Index table: Masked residues: 11969832; Index table: fill; [=================================================================] 100.00% 3.57M 8s 228ms; Index statistics; Entries: 1027253274; DB size: 6366 MB; Avg k-mer size: 16.050832; Top 10 k-mers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:3261,mask,mask,3261,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"rt,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | [=================================================================] 1 0s 0ms; mmseqs-web-worker_1 | Time for merging to alis_pdb_rna_sequence: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 33ms; mmseqs-web-worker_1 | Removing temporary files; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | 2022/09/22 23:07:17 Process finished gracefully without error; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /ticket/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A HTTP/1.0"" 200 68; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /ticket/type/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A HTTP/1.0"" 200 18; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""POST /tickets HTTP/1.0"" 200 138; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /result/queries/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/7/0 HTTP/1.0"" 200 63; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /result/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/0 HTTP/1.0"" 200 126; ```. ## Context; On a weekly basis, some new sequences are added to the FAS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:31728,error,error,31728,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['error'],['error']
Availability,running MMseq2 clusterupdate on publicly available clusters not in MMseq2 format,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/735:41,avail,available,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/735,1,['avail'],['available']
Availability,"ry_seqs_split_h: 0h 0m 0s 832ms; > Time for merging to query_seqs_split: 0h 0m 0s 878ms; > Time for processing: 0h 0m 3s 919ms; > prefilter tmp/7701176895607249840/search_tmp/9045538653068861586/query_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/target_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 2670930 type: Nucleotide; > Target split mode. Searching through 18 splits; > Estimated memory consumption: 326G; > Target database size: 100684280 type: Nucleotide; > Process prefiltering step 1 of 18; > ; > Index table k-mer threshold: 0 at k-mer size 15 ; > Index table: counting k-mers; > Segmentation fault (core dumped) ] 0.00% 1 eta -; > Error: Prefilter died; > Error: Search step died; > Error: Search died; > . ## Context. Hi I am trying to run an nucleotide-nucleotide search in mmseq2 with a custom database. This error does not occur with a different, smaller nucleotide database. Thank you very much for this amazing tool and all your hard work. ## Your Environment. I am using a google cloud VM with 64 CPUs and 416 GBs of memory on an ubuntu operating system, version 20.04. I install mmseq with the command. static build with AVX2 (fastest); `wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; tar xvfz mmseqs-linux-avx2.tar.gz; export PATH=$(pwd)/mmseqs/bin/:$PATH; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:7379,fault,fault,7379,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,5,"['Error', 'error', 'fault']","['Error', 'error', 'fault']"
Availability,"s 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 48 --compressed 0 -v 3 -s 7.0 . Query database size: 1270615 type: Profile; Estimated memory consumption: 7G; Target database size: 1270615 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1.27M 6s 285ms; Index table: Masked residues: 39476984; Index table: fill; [=================================================================] 1.27M 5s 428ms; Index statistics; Entries: 522806522; DB size: 3479 MB; Avg k-mer size: 8.168852; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:8573,mask,mask-lower-case,8573,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['mask'],['mask-lower-case']
Availability,"s 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:2421,mask,mask-lower-case,2421,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['mask'],['mask-lower-case']
Availability,"s 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Prefilter mode 	0; Exhaustive search mode 	true; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 75233 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 . Query database size: 75233 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 75233 type: Aminoacid; Index table k-mer threshold: 91 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 75.23K 0s 271ms ; Index table: Masked residues: 52417; Index table: fill; [=================================================================] 100.00% 75.23K 0s 415ms ; Index statistics; Entries: 23045881; DB size: 620 MB; Avg k-mer size: 0.360092; Top 10 k-mers; GGNQHH	4218; NTSHHH	3502; NYHFDY	2183; LEVYHY	2100; VTDHHH	1805; TPMRHS	1770; GWNHFP	1732; LIWRGT	1732; GLYIHL	1684; WAHVSS	1682; Time for index table init: 0h 0m 1s 16ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:3727,mask,mask-lower-case,3727,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['mask'],['mask-lower-case']
Availability,"s 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta input_script5/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 32ms; Time for merging to qdb: 0h 0m 0s 47ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 226ms; Create directory input_script5/tmp1; search input_script5/qdb uniref30_2302_db input_script5/res input_script5/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000 ; prefilter input_script5/qdb uniref30_2302_db.idx input_script5/tmp1/16308606893082150349/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:96,prof:80 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ## Context; I am trying to do a mmseqs2 colabfold search locally.; However, the local result doesn't match the MSA server results.; To reproduce the server results, I am trying to find out which option the MSA server is actually using. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): bb0a1b3569b9fe115f3bf63e5ba1da234748de23 or 14.7e284; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled or anaconda ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:2923,mask,mask-lower-case,2923,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,1,['mask'],['mask-lower-case']
Availability,"s by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2808,mask,mask,2808,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:14794,mask,mask,14794,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,5,"['Error', 'mask']","['Error', 'mask', 'mask-lower-case']"
Availability,"s map`, using a simple test run command: `mmseqs map --threads 24 -s 2 -c 0 MY_queryDB MY_targetDB MY_outDB MY_tmp_dir`, and I'm getting the following output + error:. ```; mseqs map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/; Program call:; map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:1086,Mask,Mask,1086,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['Mask'],['Mask']
Availability,"s module. The following error messages were generated for GTDB; other databases were generated without errors. I thought problems with GTDB were fixed in previous versions (e.g., see issue [#742](https://github.com/soedinglab/MMseqs2/pull/742)), but perhaps changes were reverted in the latest release via conda?. Here are the relevant error messages (full output also included below):. 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ==",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:1201,error,error,1201,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['error'],['error']
Availability,"s on a node with 500gb memory. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. It will be difficult to send you my sequence file. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; createdb genecatalog/input.faa genecatalog/input_mmseqdb/db. MMseqs Version: 11.e1a1c. Converting sequences; [=================================================================================================== 1 Mio. sequences processed; =================================================================================================== 2 Mio. sequences processed; =================================================================================================== 3 Mio. sequences processed; ... =================================================================================================== 260 Mio. sequences processed; =================================================================================================== 261 Mio. sequences processed; =======================================================================================; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. slurm error:; `slurmstepd: error: Detected 1 oom-kill event(s) in step 33218922.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/315:1442,error,error,1442,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/315,2,['error'],['error']
Availability,"s with similar response time as that in mmseqs colabfold api.; Is there a solution for ColabFold multimer prediction msa search with a good speed(not fastest, but faster) with 256GB memeory?; ## Current Behavior; for 1 sequence pair(164 mers and 6 mers) input, local mmseqs msa server use more than 4 hours to process, even much slower than Alphafold orig MSA local running at the same local hardware environment.; **I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.**; **Is this very low speed caused by I didn't keep all database into memory?**; >HAGPIA; ## Steps to Reproduce (for bugs); I follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFIL",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690:1188,down,download,1188,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690,1,['down'],['download']
Availability,"s, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Your Environment; * Git commit used:; I tried on my personal machine and a compute node (PBS), similar behaviour in both. ; Personal machine MMseqs2 Version: 48a037a2e2cf5ea140c6c5de357b7147e5310b4d.; Server MMseqs2 Version: 2a8c5f00f820c5c9a577676707095ef17bcff04a.; * Which MMseqs version was used: Statically-compiled; * Server specifications:; Server: (2a8c5f00f820c5c9a577676707095ef17bcff04a); CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; Personal machine: (48a037a2e2cf5ea140c6c5de357b7147e5310b4d); CPU: Intel Core i7-8700 6-Core model: bits: 64 type: L2 cache: 12.0 MiB ; Memory: 15.33 GB; * Operating system and version:; Personal machine: Linux Mint 19.2 Tina Kernel: 4.15.0-72-generic x86_64; ; Server: Linux 3.10.0-693.el7.x86_64. Thanks for developing and maintaining this totally amazing tool !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261:2313,error,errors,2313,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261,1,['error'],['errors']
Availability,"s. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-un",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:13009,Error,Error,13009,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,3,['Error'],['Error']
Availability,"s/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:17:18: error: field ‘prev’ has incomplete type ‘Except_Frame_T’; Except_Frame_T prev;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:16:8: note: definition of ‘struct Except_Frame_T’ is not complete until the closing brace; struct Except_Frame_T {; ^; src/CMakeFiles/mmseqs-framework.dir/build.make:542: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. ## Context; i wanted to build an mpi enabled sse4 as this is not distributed. ## Your Environment; git version from today. ```; cat /etc/issue; Ubuntu 16.04.5 LTS. $ cat /proc/cpuinfo | grep -m1 sse; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts mmx fxsr sse sse2 ss syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts nopl xtopology tsc_reliable nonstop_tsc aperfmperf pni pclmulqdq ssse3 cx16 pcid sse4_1 sse4_2 x2apic popcnt aes xsave avx hypervisor lahf_lm epb kaiser dtherm ida arat pln pts; ```. any suggestions welcome!; thanks; a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:3454,Error,Error,3454,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,3,['Error'],['Error']
Availability,"s/nuc_mmseq_DB \; ${dbdir}/gtdb_54kDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```. The taxonomy DB is made through the last release of GTDB without applying a cluster, as discussed in #244 . . The db is as follows: . ```; -rw-r--r-- 1 aauladell bio 54G 28 nov 11:05 gtdb_54kDB; -rw-r--r-- 1 aauladell bio 4 28 nov 11:07 gtdb_54kDB.dbtype; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 3,0G 28 nov 11:00 gtdb_54kDB_h; -rw-r--r-- 1 aauladell bio 4 28 nov 11:01 gtdb_54kDB_h.dbtype; -rw-r--r-- 1 aauladell bio 3,9G 28 nov 11:09 gtdb_54kDB_h.index; -rw-r--r-- 1 aauladell bio 4,3G 28 nov 11:08 gtdb_54kDB.index; -rw-r--r-- 1 aauladell bio 4,6G 28 nov 11:14 gtdb_54kDB.lookup; -rw-r--r-- 1 aauladell bio 2,7G 28 nov 15:43 gtdb_54kDB_mapping; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_merged.dmp; -rw----r-- 1 aauladell bio 1,8M 28 nov 15:43 gtdb_54kDB_names.dmp; -rw----r-- 1 aauladell bio 3,0M 28 nov 15:43 gtdb_54kDB_nodes.dmp; ```. ## Current Behavior. Instead, it raises an `out_of_range` error with a `terminate called recursively` after running for 20 hours. . ## MMseqs Output (for bugs). Raises the following error: ; ```; terminate called recursively; terminate called after throwing an instance of 'std::out_of_range/mnt/lustre/scratch/aauladell/databases/gtdb-r89_54k/tmp//14536420861195881021/taxonomy.sh: line 99: 34258 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```. The output log: ; [mmseqs_lca_log.txt](https://github.com/soedinglab/MMseqs2/files/3955181/mmseqs_lca_log.txt). ## Context; Taxonomic classification of a gene catalog with around 500000 seqs. ; ; ## Your Environment. MMseqs2 Version: 0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 36 threads and 400 Gb RAM.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256:1286,error,error,1286,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256,2,['error'],['error']
Availability,"s; Time for merging to pre_clust: 0h 1m 31s 28ms; Time for processing: 0h 5m 19s 116ms; createsubdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/input_step_redundancy -v 3 --subdb-mode 1 ; Time for merging to input_step_redundancy: 0h 0m 34s 71ms; Time for processing: 0h 1m 29s 221ms; createsubdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter1 -v 3 --subdb-mode 1 ; Time for merging to pref_filter1: 0h 0m 45s 806ms; Time for processing: 0h 1m 48s 52ms; filterdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter1 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter2 --filter-file /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy --threads 96 --compressed 0 -v 3 ; Filtering using file(s); [=================================================================] 245.75M 2m 9s 682ms; Time for merging to pref_filter2: 0h 2m 9s 511ms; Time for processing: 0h 6m 15s 7ms; Segmentation fault (core dumped); Error: Ungapped alignment step died; Error: Search died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `dc054792d1b1d091380638a712ee7566aba2bb38`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: **cmake 3.10.2**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; * Operating system and version: **Ubuntu 18.04**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:5267,fault,fault,5267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,3,"['Error', 'fault']","['Error', 'fault']"
Availability,"sDependencyWarning: urllib3 (1.26.12) or chardet (3.0.4) doesn't match a supported version!; warnings.warn(""urllib3 ({}) or chardet ({}) doesn't match a supported ""; Creating network ""docker-compose_default"" with the default driver; Creating volume ""docker-compose_redis-volume"" with default driver; Pulling mmseqs-web-redis (redis:alpine)...; alpine: Pulling from library/redis; Digest: sha256:dc1b954f5a1db78e31b8870966294d2f93fa8a7fba5c1337a1ce4ec55f311bc3; Status: Downloaded newer image for redis:alpine; Pulling mmseqs-web-api (soedinglab/mmseqs2-app-backend:version-5)...; version-5: Pulling from soedinglab/mmseqs2-app-backend; Digest: sha256:cb3937c294b3e666af4f4a424af0b7c4adc4f5469e2f309651b9a852731d786d; Status: Downloaded newer image for soedinglab/mmseqs2-app-backend:version-5; Pulling mmseqs-web-webserver (soedinglab/mmseqs2-app-frontend:version-5)...; version-5: Pulling from soedinglab/mmseqs2-app-frontend; Digest: sha256:30690f07999e0d1d7eccfe63c40df2b11d246590f094014e16987ed5d74d06d9; Status: Downloaded newer image for soedinglab/mmseqs2-app-frontend:version-5; Creating docker-compose_mmseqs-web-redis_1 ... ; Creating docker-compose_mmseqs-web-redis_1 ... done; Creating docker-compose_mmseqs-web-api_1 ... ; Creating docker-compose_mmseqs-web-api_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... done; Attaching to docker-compose_mmseqs-web-redis_1, docker-compose_mmseqs-web-api_1, docker-compose_mmseqs-web-worker_1, docker-compose_mmseqs-web-webserver_1; mmseqs-web-api_1 | 2022/09/22 16:09:10 MMseqs2 Webserver; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Redis version=7.0.4, bits=64, commit=00000000, modified=0, pid=1, just started; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Wa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:8515,Down,Downloaded,8515,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['Down'],['Downloaded']
Availability,s]; [#422f0e 4.3GiB/5.7GiB(76%) CN:5 DL:112MiB ETA:12s]; [#422f0e 4.5GiB/5.7GiB(78%) CN:5 DL:112MiB ETA:11s]; [#422f0e 4.6GiB/5.7GiB(80%) CN:5 DL:112MiB ETA:10s]; [#422f0e 4.7GiB/5.7GiB(82%) CN:5 DL:112MiB ETA:9s]; [#422f0e 4.8GiB/5.7GiB(84%) CN:5 DL:112MiB ETA:8s]; [#422f0e 4.9GiB/5.7GiB(86%) CN:5 DL:112MiB ETA:7s]; [#422f0e 5.0GiB/5.7GiB(88%) CN:5 DL:112MiB ETA:6s]; [#422f0e 5.1GiB/5.7GiB(90%) CN:5 DL:112MiB ETA:5s]; [#422f0e 5.2GiB/5.7GiB(92%) CN:5 DL:112MiB ETA:4s]; [#422f0e 5.3GiB/5.7GiB(94%) CN:5 DL:112MiB ETA:3s]; [#422f0e 5.4GiB/5.7GiB(95%) CN:5 DL:112MiB ETA:2s]; [#422f0e 5.5GiB/5.7GiB(97%) CN:5 DL:112MiB ETA:1s]; [#422f0e 5.6GiB/5.7GiB(99%) CN:4 DL:112MiB]. 10/11 10:31:53 [NOTICE] Download complete: /space/jmd20jns/tmp/13406937569195620773/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 422f0e|OK | 111MiB/s|/space/jmd20jns/tmp/13406937569195620773/bacteria.tar. Status Legend:; (OK):download completed. 10/11 10:31:53 [NOTICE] Downloading 1 item(s); [#df1c91 84MiB/85MiB(98%) CN:1 DL:89MiB]. 10/11 10:31:54 [NOTICE] Download complete: /space/jmd20jns/tmp/13406937569195620773/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; df1c91|OK | 88MiB/s|/space/jmd20jns/tmp/13406937569195620773/archea.tar. Status Legend:; (OK):download completed. 10/11 10:31:54 [NOTICE] Downloading 1 item(s); [#14821b 89MiB/2.7GiB(3%) CN:5 DL:95MiB ETA:28s]; [#14821b 200MiB/2.7GiB(7%) CN:5 DL:104MiB ETA:25s]; [#14821b 311MiB/2.7GiB(10%) CN:5 DL:106MiB ETA:23s]; [#14821b 422MiB/2.7GiB(14%) CN:5 DL:108MiB ETA:22s]; [#14821b 533MiB/2.7GiB(18%) CN:5 DL:108MiB ETA:21s]; [#14821b 644MiB/2.7GiB(22%) CN:5 DL:109MiB ETA:19s]; [#14821b 755MiB/2.7GiB(26%) CN:5 DL:109MiB ETA:18s]; [#14821b 866MiB/2.7GiB(30%) CN:5 DL:110MiB ETA:17s]; [#14821b 0.9GiB/2.7GiB(34%) CN:5 DL:110MiB ETA:16s]; [#14821b 1.0GiB/2.7GiB(38%) C,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762:3722,down,download,3722,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762,1,['down'],['download']
Availability,"s``` results, I occasionally get a null bite (in ```vim``` it looks like ```^@```), which breaks a line in the downstream analysis. See attached screenshots in Vim and Libreoffice, the ```tsv``` itself also attached (truncated, see lines 89–90).; ![issue-libreoffice](https://github.com/soedinglab/MMseqs2/assets/17991942/e198caa5-7c2d-405e-a91d-97595e0bf569); ![issue-vim](https://github.com/soedinglab/MMseqs2/assets/17991942/04fc1f53-22f3-4efb-95a3-39a044a9a353); [mmseqs-issue.tsv.zip](https://github.com/soedinglab/MMseqs2/files/14981527/mmseqs-issue.tsv.zip). ## Steps to Reproduce (for bugs); ```; # Create a taxonomyDB from PR2 database; # Get 'pr2_version_5.0.0_SSU_taxo_long.fasta' here: https://github.com/pr2database/pr2database/releases/download/v5.0.0/pr2_version_5.0.0_SSU_taxo_long.fasta.gz); # Uses seqkit and taxonkit programs (github.com/shenwei356). sed 's/_/ /' pr2_version_5.0.0_SSU_taxo_long.fasta > pr2_to_mmseqs.fasta; echo -e ""domain\tsupergroup\tdivision\tsubdivision\tclass\torder\tfamily\tgenus\tspecies"" > pr2_tax; cat pr2_to_mmseqs.fasta | seqkit seq -n | sed 's/[^|]*|[^|]*|[^|]*|//' | sed 's/|/\t/g' >> pr2_tax; cat pr2_tax | taxonkit create-taxdump -O pr2_taxdump; cat pr2_to_mmseqs.fasta | seqkit seq -n | sed 's/[^|]*|[^|]*|[^|]*|//' | cut -d '|' -f 9 | taxonkit name2taxid --data-dir pr2_taxdump > pr2_name2taxid; paste <(cat pr2_to_mmseqs.fasta | seqkit seq -ni) <(cat pr2_name2taxid | cut -f2) > pr2_taxidmap; mmseqs createdb pr2_to_mmseqs.fasta pr2; mmseqs createtaxdb pr2 tmp --ncbi-tax-dump pr2_taxdump --tax-mapping-file pr2_taxidmap; mmseqs createindex pr2. # Search; mmseqs prefilter lcB1_97 pr2.idx lcB1_97_pref -s 2.0 --exact-kmer-matching 1 --max-seq-len 500 -c 0.9 --cov-mode 2; mmseqs align lcB1_97 pr2.idx lcB1_97_pref lcB1_97_aln -a 1 -e 1e-30 --alignment-mode 3 --alignment-output-mode 0 --min-aln-len 130 -c 0.9 --cov-mode 2 --max-seq-len 500 --max-accept 30; mmseqs filterdb lcB1_97_aln lcB1_97_aln_flt --beats-first --filter-column 4 --comparis",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:1040,echo,echo,1040,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['echo'],['echo']
Availability,"se 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 7m 46s 594ms; rescorediagonal uniref90-DB-wwmj uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref tmp//16518381706844811497/linclust/11898236; 85496030198/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:5214,mask,mask,5214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,2,['mask'],"['mask', 'mask-prob']"
Availability,se...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 7 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Total time: 0 m 0s; > ; > Size of the sequence database: 176; > Size of the alignment database: 176; > Number of clusters: 169; > Program call:; > tmp/order_redundancy tmp/toBeClusteredSeparately tmp/input_step_redundancy ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Start writing to file tmp/input_step_redundancy; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/input_step_redundancy tmp/input_step_redundancy tmp/pref --sub-mat blosum62.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	32000; > Profile 	false; > Max. results per query 	300; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > ; > Initialising data structures...; > Using 4 threads.; > ; > Cound not find precomputed index. Compute index.; > Query database: tmp/input_step_redundancy(size=169); > Target database: tmp/input_step_redundancy(size=169); > Use kmer size 6 and split 1 using split mode 0; > Needed memory (1381292076 byte) of total memory (25769803776 byte); > Substitution matrices...; > Time for init: 0 h 0 m 0s; > ; > ; > ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:15994,mask,mask,15994,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['mask'],['mask']
Availability,"se; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, usin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438:3415,Mask,Mask,3415,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438,1,['Mask'],['Mask']
Availability,"se; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURAR",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:3684,mask,mask-lower-case,3684,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['mask'],['mask-lower-case']
Availability,"seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; * Operating system and version: Ubuntu Linux 16.04.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:2098,Error,Error,2098,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,4,['Error'],['Error']
Availability,sept. 29 00:11 uniref90.mms.index. mmseqs createindex uniref90/uniref90.mms --split 10 --threads 20; Program call:; uniref90/uniref90.mms --split 10 --threads 20 . MMseqs Version: ab6d7b3105611a0860c801603997f1721785916a; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; max. sequence length 32000; Split DB 10; spaced Kmer 1; Threads 20; Verbosity 3. Substitution matrices...; Index table: counting k-mers...; .WARNING: Sequence (dbKey=10870) contains only ATGC. It might be a nucleotide sequence.; .................................................................................................. 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: Masked residues: 26370434; Index table: fill...; ................................................................................................... 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Index table: counting k-mers...; ................................................................................................... 1 Mio. sequences processed; ...........................................................................................WARNING: Sequence (dbKey=5712154) contains only ATGC. It might be a nucleotide sequence.; ........ 2 Mio. sequen,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3:1954,Mask,Masked,1954,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3,1,['Mask'],['Masked']
Availability,"seqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5 . MMseqs Version: 	8c79865b60025674b9c825fd7238bd0b95503bc7; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	5; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/234:2575,Mask,Mask,2575,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234,4,['Mask'],['Mask']
Availability,"seqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:17:18: error: field ‘prev’ has incomplete type ‘Except_Frame_T’; Except_Frame_T prev;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:16:8: note: definition of ‘struct Except_Frame_T’ is not complete until the closing brace; struct Except_Frame_T {; ^; src/CMakeFiles/mmseqs-framework.dir/build.make:542: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. ## Context; i wanted to build an mpi enabled sse4 as this is not distributed. ## Your Environment; git version from today. ```; cat /etc/issue; Ubuntu 16.04.5 LTS. $ cat /proc/cpuinfo | grep -m1 sse; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts mmx fxsr sse sse2 ss syscall nx rdtscp lm constant",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:2967,error,error,2967,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,1,['error'],['error']
Availability,sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort res,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:4951,mask,mask,4951,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['mask'],['mask']
Availability,sequence as representative 	false; Target column 	1; Add full header 	false; Sequence source 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0. *skipped some parts of the log that took very little time*. Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 11 sequences passed prefiltering per query sequence; 1 median result list length; 275899073 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 16m 3s 814ms; Time for merging to pref_0_tmp_0_tmp: 0h 26m 19s 322ms; Process prefiltering step 2 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 18m 46s 598ms; Index table: Masked residues: 338371908; Index table: fill; [===========================Terminated,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422:5181,Mask,Masked,5181,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422,1,['Mask'],['Masked']
Availability,"shold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:2; Gap extension cost nucl:5,aa:0; Zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequence",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:3591,Mask,Mask,3591,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['Mask'],['Mask']
Availability,"shold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 83); Query db start 1 to 20588; Target db start 1 to 207919; ...; ```. ## Context; I'm running this on a cluster with aarch64 (actually A64FX) CPU architecture. The cluster also has limited memory per node -- only 32 GB. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; * Which MMseqs version was used: self compiled; * For self-compiled and Homebrew: : GCC 12.1 ,OpenMPI 4.1.4, CMAKE 3.22. Build command: `cmake -DCMAKE_BUILD_TYPE=RELEASE -DNATIVE_ARCH=0 -DCMAKE_C_FLAGS=""-O3 -mcpu=a64fx"" -DCMAKE_CXX_FLAGS=""-O3 -mcpu=a64fx"" -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45 ..`; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): A64FX and 32 Gb of ram; * Operating system and version: Rocky Linux 8.4. I'm wondering if the per-node memory limitation is also limiting the number of threads that can be used, or is there something about how I'm calling mmseqs that I should be changing in order to utilize 48 cores/threads per node? I've tried setting the value of `--threads` to 48, to the total number of cores available on all nodes, and not setting it at all. In each case, the max # of threads/cores used per node is 12. Thanks!; Dave",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:6567,avail,available,6567,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['avail'],['available']
Availability,"sing Target split mode.; Needed memory (1380352223 byte) of total memory (486687909888 byte); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers... Index table: Masked residues: 3509; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 455436; DB Size: 514732616 (byte); Avg Kmer Size: 0.00711619; Top 10 Kmers; 	GPGGTL		17; 	LGNATT		8; 	LSLGLS		6; 	GPGGTT		6; 	SGQQAI		5; 	ALGNGK		5; 	LLGPGK		5; 	LVLILL		5; 	LLSLLL		5; 	LILLSL		5; Min Kmer Size: 0; Empty list: 63557059. Write ENTRIES (7); Write ENTRIESOFFSETS (8); Write SEQINDEXDATASIZE (12); Write SEQINDEXSEQOFFSET (13); Write MASKEDSEQINDEXDATA (11); Write ENTRIESNUM (9); Write SEQCOUNT (10); Write META (1); KmerSize: 6; AlphabetSize: 21; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 0; Write SCOREMATRIXNAME (2); Write VERSION (0); Write DBRINDEX (5); ./dbs/tmp_kora//createindex.sh: line 46: 6458 Aborted (core dumped) ""$MMSEQS"" indexdb ""$INPUT"" ""$INPUT"" $INDEX_PAR; Error: indexdb died. *** Error in `/mmseqs_binaries/c97f09/mmseqs': double free or corruption (!prev): 0x0000000000ed34c0 ***; ======= Backtrace: =========; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x6e5d1)[0x7f40f5a595d1]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x73db6)[0x7f40f5a5edb6]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x74b03)[0x7f40f5a5fb03]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_ZN23PrefilteringIndexReader15createIndexFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8DBReaderIjESA_P10BaseMatrixibbiiii+0x10be)[0x49147e]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z7indexdbiPPKcRK7Command+0x223)[0x4c1f33]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z10runCommandRK7CommandiPPKc+0x30)[0x442470]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(main+0x62)[0x4386c2]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(__libc_start_main+0xf5)[0x7f40f5a0c075]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:3483,Error,Error,3483,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['Error'],['Error']
Availability,"sion of the master database. ## Current Behavior; The new database includes only copies of an entry in the original index which is not in the filter file and is repeated for number of ids present in filter file. ## Steps to Reproduce (for bugs); I am able to reproduce with a small 8 sequence fasta file which is a subset of an old uniref90 download and a single entry filter file.; [uniref90_head.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2847259/uniref90_head.fasta.gz); [uniref90_head_subset.txt](https://github.com/soedinglab/MMseqs2/files/2847255/uniref90_head_subset.txt); ```; mmseqs createdb uniref90_head.fasta uniref90_head.mmsdb; mmseqs createsubdb uniref90_head_subset.txt uniref90_head.mmsdb uniref90_head.subset.mmsdb; mmseqs createsubdb uniref90_head_subset.txt uniref90_head.mmsdb_h uniref90_head.filt.mmsdb_h; ```; Then the resulting uniref90_head.filt.mmsdb_h only has a single entry (UniRef90_Q197F8 Uncharacterized protein 002R n=1 Tax=Invertebrate iridescent virus 3 TaxID=345201 RepID=002R_IIV3 ; ) which is from the fasta but not the id from the filter file (UniRef90_Q6GZX2). ## MMseqs Output (for bugs); No errors given. Only run times. ## Context; I am trying to implement a reciprocal best hits approach. I am searching a fasta file of genes against a uniref90 fasta file. Both are fasta's of amino acids. The forward search (query=genes, target=uniref) goes fine and the reverse search (query=uniref, target=genes) works fine with the full database. Reciprocal best hits were found. To speed up the reverse search I wanted to filter uniref to only include the best hits from the forward search. To do this I used `createsubdb` with the top hits from the forward search as the filter file. The search (query=filtered uniref, target=genes) ran successfully but no alignments were found. Based on this I investigated the _h file from the sub-database and saw the problem. ## Your Environment; Used on a CentOS 7 server and installed via conda. Version is 7.4e23d.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/162:1215,error,errors,1215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/162,1,['error'],['errors']
Availability,"sity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.0001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 3; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:2280,Mask,Mask,2280,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,2,['Mask'],['Mask']
Availability,size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search iterations 	1; > Start sensitivity 	4; > sensitivity step size 	1; > Sets the MPI runner 	; > ; > /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp; > /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp; > Program call:; > tmp/NEWDB.newSeqs tmp/OLDDB.mapped.repSeq /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 1 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 -s 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	32000; > Profile 	false; > Max. results per query 	1; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > ; > Initialising data structures...; > Using 4 threads.; > ; > Cound not find precomputed index. Compute index.; > Query database: tmp/NEWDB.newSeqs(size=182); > Target database: tmp/OLDDB.mapped.repSeq(size=3); > Use kmer size 6 and split 1 using split mode 0; > Needed memory (1381015863 byte) of total memory (25769803776 byte); > Substitution matrices...; > Time for init: 0 h 0 m 1s; > ; > ; > Process prefilt,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:6956,mask,mask,6956,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['mask'],['mask']
Availability,"sk 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 spli",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:5135,mask,mask,5135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,2,['mask'],"['mask', 'mask-prob']"
Availability,sked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ] 2 0s 57ms; Index table: Masked residues: 0; [=================================================================] 2 0s 41ms; Index table: Masked residues: 0; [=================================================================] 2 0s 25ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Ind,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:32041,Mask,Masked,32041,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,slurmstepd: error: poll(): Bad address tmp/4045178716233794437/blastp.sh: line 99:,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/689:12,error,error,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689,1,['error'],['error']
Availability,small error in Readme,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/119:6,error,error,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/119,1,['error'],['error']
Availability,"ssed 0 -v 3 . [=================================================================] 100.00% 1.32M 0s 321ms ; Time for merging to query_seqs_h: 0h 0m 0s 490ms; Time for merging to query_seqs: 0h 0m 2s 39ms; Time for processing: 0h 0m 3s 738ms; splitsequence tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 100.00% 2.64M 0s 246ms ; Time for merging to query_seqs_split_h: 0h 0m 0s 507ms; Time for merging to query_seqs_split: 0h 0m 0s 573ms; Time for processing: 0h 0m 2s 178ms; prefilter tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/target_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 2.0 . Query database size: 2644526 type: Nucleotide; Target split mode. Searching through 13 splits; Estimated memory consumption: 247G; Target database size: 99637107 type: Nucleotide; Process prefiltering step 1 of 13. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: Prefilter died; Error: Search step died; Error: First search died. ```. ## Environment; * AMD EPYC 7502P 32-Core Processor; * 320GB memory; * OS:; Ubuntu 20.04.2 LTS; Kernel: 5.4.0-70-generic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438:6705,mask,mask,6705,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438,6,"['Error', 'fault', 'mask']","['Error', 'fault', 'mask', 'mask-lower-case']"
Availability,"st result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	20; Gap extension cost 	3; Zdrop 	40; Threads 	28; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:VTML40.out,aa:VTML40.out; Sensitivity 	12; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:2100,mask,mask,2100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['mask'],['mask']
Availability,std::bad_alloc error with convertalis,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:15,error,error,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['error'],['error']
Availability,"t 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	384; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:2611,Mask,Mask,2611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['Mask'],['Mask']
Availability,"t 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; Time for merging to pref: 0h 0m 0s 6ms; Time f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:2907,mask,mask-lower-case,2907,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['mask'],['mask-lower-case']
Availability,"t fine. ; Both the complete call for the search workflow ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; as well as the explicit call for the prefilter module only ./mmseqs prefilter ""query"" ""target"" ""result"" are running as expected. ## Current Behavior; Using bigger files for query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Di",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:1093,fault,fault,1093,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['fault'],['fault']
Availability,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/477:1301,mask,mask,1301,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477,4,"['Mask', 'mask']","['Mask', 'mask', 'mask-lower-case']"
Availability,"t k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:4929,mask,mask,4929,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"t length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/478:1442,Mask,Mask,1442,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478,2,['Mask'],['Mask']
Availability,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimate",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:26512,mask,mask,26512,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:5270,mask,mask,5270,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,52,['mask'],"['mask', 'mask-lower-case']"
Availability,"t,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 1 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 4 . Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 19",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:3674,mask,mask,3674,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,2,['mask'],"['mask', 'mask-prob']"
Availability,"t3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa; result2msa /hdd/mmtestoutput3/mmseqs_files/in.mmdb /hdd/humanref/jhhutargetDB /hdd/mmtestoutput3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 	0.001; Allow deletions 	false; Add internal id. 	false; Compositional bias 	1; Filter MSA 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Threads 	4; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit consensus 	false; Skip query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Start computing multiple sequence alignments.; Query database size: 11 type: Aminoacid; Target database size: 20667 type: Aminoacid; [> ] 0.00% 1 eta [======> ] 10.00% 2 etaSegmentation fault (core dumped). Windows 7 static compile (different db/query file):. F:\>mmseqs result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkou; t2/mmseqs_files/out.mm_search plsworkout2/mmseqs_files/out.mm_msa; result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkout2/mmseqs_f; iles/out.mm_search plsworkout2/mmseqs_files/out.mm_msa. MMseqs Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 0.001; Allow deletions false; Add internal id. false; Compositional bias 1; Filter MSA 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Threads 8; Compress MSA false; Summarize headers false; Summary prefix cl; Omit consensus false; Skip query false; Gap open cost 11; Gap extension cost 1; Compressed 0; Verbosity 3. Start computing multiple sequence alignments.; Query database size: 19 type: Aminoacid; Ta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229:1727,fault,fault,1727,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229,1,['fault'],['fault']
Availability,"ta.gz`. Decompressed with gunzip, then ran createdb:; `mmseqs createdb uniref90.fasta uniref90`; ; Augmented with taxonomic information (used -db-mode 0 because createbintaxonomy kept crashing as well):; `mmseqs createtaxdb uniref90 tmp --tax-db-mode 0`. Created database for my query sequences:; `mmseqs createdb KLEB_PO07_megahit.fasta KLEB_PO07_megahitDB`. Ran mmseqs taxonomy on cluster with slurm script:; ```; #!/usr/bin/env bash. #SBATCH --job-name=KLEB_PO07_mmseqs; #SBATCH --cpus-per-task=32; #SBATCH --mem=150G; #SBATCH --time=0-3:00; #SBATCH --output=KLEB_PO07_mmseqs.log; #SBATCH --error=KLEB_PO07_mmseqs.err. module load mmseqs2/15-6f452; taxDB=/home/sdwork/scratch/metagenomics/uniref_db/uniref90. mmseqs taxonomy KLEB_PO07_megahitDB $taxDB KLEB_PO07_megahit_result tmp; ```. ## MMseqs Output (for bugs); [Full output can be found in this gist.](https://gist.github.com/sean-workman/531e9d5fc73635dee8c000f9da137fe0). I also see this output in my error file:; `tmp/1193166584733320518/tmp_taxonomy/17149912652888480377/tmp_hsp1/10699950925961740214/blastp.sh: line 135: 8379 Bus error (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""`. ## Context; I created metagenomic assemblies using megahit and metaSPAdes. I am trying to get MMseqs2 working to do taxonomic classification. I am running on Digital Research Alliance of Canada clusters. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15-6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Loaded as a module on a cluster.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: Unsure. I ran `lscpu` on a login node and got what is shown below, but the memory and CPUs that I had for the job were specified in the slurm job script shown ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838:1450,error,error,1450,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838,1,['error'],['error']
Availability,"ta/clustered_nr/nr_rep_seq_to_taxid.map; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	20; Verbosity 	3. Download taxdump.tar.gz. 02/01 11:29:59 [NOTICE] Downloading 1 item(s); [#b8b044 0B/0B CN:1 DL:0B] ; 02/01 11:30:01 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#b8b044 51MiB/61MiB(84%) CN:1 DL:10MiB] ; 02/01 11:30:08 [NOTICE] Download complete: tmp/taxdump.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; b8b044|OK | 9.1MiB/s|tmp/taxdump.tar.gz. Status Legend:; (OK):download completed.; Loading nodes file ... Done, got 2550743 nodes; Loading merged file ... Done, added 75930 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```; ## Context; I want to search some query sequences locally against a clustered version of the NR database. I downloaded the clustered database and taxonomy files (nr_cluster_taxid_formatted_final.tsv.gz, nr_rep_seq.fasta.gz) from [here](https://osf.io/tejwd/), which was created as per: https://research.arcadiascience.com/pub/resource-nr-clustering/release/3. I then processed the files like so:. ```; gunzip -c nr_cluster_taxid_formatted_final.tsv.gz | cut -f1,2 > nr_rep_seq_to_taxid.map; mmseqs createdb nr_rep_seq.fasta.gz nr_rep_seq_db; ```. After these completed successfully, I tried to create the taxdb as per the above:. ```; mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; ```. But the job was killed. Questions:; * Was it likely killed because of exhausting my available RAM? ; - If so, is there a way to restrict it during taxdb creation? I tried out `--split-memory-limit 50G` but got `Unrecognized parameter ""--split-memory-limit""`; * Was it killed for a different reason, e.g. disk space?; - The disk the database is stored on has 95 GB free at the moment, and the main db fil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811:1838,down,downloaded,1838,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811,1,['down'],['downloaded']
Availability,"ta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:1159,Mask,Mask,1159,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,2,['Mask'],['Mask']
Availability,"tabase cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [Multiline fasta can not be combined with --createdb-mode 0; We recompute with --createdb-mode 1; Time for merging to input_h: 0h 0m 0s 3ms; Time for merging to input: 0h 0m 0s 3ms; [=======; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 102ms; Create directory tmp/8115150149931881526/clu_tmp; linclust tmp/8115150149931881526/input tmp/8115150149931881526/clu tmp/8115150149931881526/clu_tmp -e 0.001 --min-seq-id 0.4 -c 0.8 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1 . Set cluster mode GREEDY MEM.; kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [==========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:3110,mask,mask,3110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,2,['mask'],"['mask', 'mask-prob']"
Availability,"tabase type: Aminoacid; Time for processing: 0h 12m 9s 179ms; Tmp /export/tmp/MERC/4233864688410091672/clu_tmp folder does not exist or is not a directory.; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:2122,mask,mask,2122,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"tal time: 0h 0m 0s 705ms. Size of the sequence database: 10966; Size of the alignment database: 10966; Number of clusters: 8338. Writing results 0h 0m 0s 47ms; Time for merging to clu_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 815ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step2 -v 3 --subdb-mode 1 . Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 8ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 8338 type: Aminoacid; Estimated memory consumption: 1003M; Target database size: 8338 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 8.34K 0s 514ms; Index table: Masked residues: 3074; Index table: fill; [=================================================================] 8.34K 0s 572ms; Index statistics; Entries: 1408015; DB size: 496 MB; Avg k-mer size: 0.022000; Top 10 k-mers; GPGGTL 37; GLGNGK 26; ALGNGK 23; DLLDLP 21; FDDTDS 20; NGGSLK 17; DLLDMP 17; DVLDMP 17; GEQVAR 16; FDDTDT 16; Time for index table init: 0h 0m 2s 591ms; Process prefiltering step 1 of 1. k-mer similar",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:28764,mask,mask,28764,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,2,['mask'],"['mask', 'mask-prob']"
Availability,"ted like:. >1006013; ATGGAAGCTACGAAGTCGTCGAAACAAAATTGTTGCAACCCGGTTAAGAAACCCGGACCC; GTTTCAATTGATCATGTTCTCTTAGCTCTCCGTGAGACAAGAGAAGAGCGAGATTTACGA; ATCAGGAGCTTATTCAGTTTCTTTGATTCTGAGAATGTTGGTTACTTAGATTGTGCTCAA; ATTGAGAAGGGGTTATGTGCGCTTCAAATCCCAAGTGGGTATAAATACGCTAAGGAGTTG; TTTAGGGTTTGTGATGCGAATAGAGATGGGCGTGTGGATTATCATGAGTTTCGTAGATAT; ATGGATGATAAGGAGCTTGAGCTGTATAGAATCTTTCAAGCTATTGATGTTGAGCATAAT; GGTTGTATTTCTCCTGAGGGACTTTGGGATTCACTCGTTAAAGCTGGGATTGAGATAAAA; GATGAGGAGCTTGCTCGTTTTGTGGAACATGTTGACAAGGACAATGATGGAATCATTATG; TTTGAAGAATGGAGAGATTTTCTTTTGCTGTACCCTCACGAAGCTACCATTGAAAATATA. >1006013 is the taxmony id we got to unique the sequence. i can create the database by: `mmseqs createdb xxx targetDB`. but when try to createindex by `mmseqs createindex targeDB index`; it throws issue:. `Program call:; prot index. MMseqs Version: 	87f530e8aedc0970c8ec16cb2d33b7507d56cf59; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	32000; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	true; Split DB 	0; Split Memory Limit 	0; Threads 	4; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; /db/prot index/orfs --min-length 30 --max-length 98202 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --id-offset 0 --threads 4. MMseqs Version: 	87f530e8aedc0970c8ec16cb2d33b7507d56cf59; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/76:1103,Mask,Mask,1103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/76,1,['Mask'],['Mask']
Availability,"terations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000"". mmseqs search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ```; ## MMseqs Output (for bugs); ### With single-quotation; ```; createdb input.fasta input_script7/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 31ms; Time for merging to qdb: 0h 0m 0s 31ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 145ms; Create directory input_script7/tmp1; search input_script7/qdb uniref30_2302_db input_script7/res input_script7/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000 ; prefilter input_script7/qdb uniref30_2302_db.idx input_script7/tmp1/1006494840762416450/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta input_script5/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 32ms; Time for merging to qdb: 0h 0m 0s 47ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 226ms; Create directory input_script5/tmp1; search input_script5/qdb uniref30_2302_db input_script5/res input_script5/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000 ; prefilter input_script5/qdb uniref30_2302_db.idx input_script5/tmp1/16308606893082150349/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:1756,mask,mask,1756,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,2,['mask'],"['mask', 'mask-prob']"
Availability,"th 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 1.98M 1m 21s 501ms; Time for merging to orfs_aa_h: 0h 2m 11s 439ms; Time for merging to orfs_aa: 0h 2m 30s 736ms; Time for processing: 0h 7m 50s 411ms; prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 310097721 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 18s 71ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 52s 198ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 183",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:6908,mask,mask,6908,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,2,['mask'],"['mask', 'mask-lower-case']"
Availability,the website to download ssu.fna for GTDB doesn't work,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548:15,down,download,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548,1,['down'],['download']
Availability,"ther, it didn't work out (I don't know if size was the issue, but I was in a hurry), so I split the file in two and clustered each separately (that worked). I then combined two outputs (*rep_seq.fasta) into a single file that I wanted to cluster once more (cca 75 mil sequences). However, it always dies in the same way, although I tried changing memory settings and threads. This file is not bigger than the previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265:955,error,error,955,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265,1,['error'],['error']
Availability,"there must be an error: xx deleted from xx that now is empty, but not assigned to a cluster",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:17,error,error,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['error'],['error']
Availability,"this isn't the correct place for such questions.; I am using mmseqs2 to implement a process similar to that used by [colabfold's mmseqs_search_monomer()](https://github.com/sokrypton/ColabFold/blob/main/colabfold/mmseqs/search.py). ; I have the following process:; 1. First I create a queryDB from a fasta file with many sequences in it. `mmseqs createdb queries.fasta queryDB`; 2. Next I run the `search`, `expandaln`, `align`, and `filterresult` commands pretty much as described in the colabfold code. . The output of the `filterresult` command generates 20 files, in my case the base name is `res_exp_align_filter` and then there are also `res_exp_align_filter.{0..19}`, plus `.dbtype` and `.index` files. . My next step was to generate MSA alignments for each of my query strings. I tried passing the `res_exp_align_filter` file to the result2msa command which works, however this doesn't give the output that I want since I want one MSA file per query sequence. ; Instead I tried the following, I concatenated all the `res_exp_align_filter` files as follows: `cat res_exp_align_filter.{0..19} > res_exp_align_filter.all`. I then used the `res_exp_align_filter.index` file to get the byte offsets for each query and read the appropriate section of the concatenated file. This seems to work, at least insofar that I get what looks like properly aligned sections, with more overlapping targets at the top and less overlapping sequences towards the end. I then write these sections to separate files `./tmp/query`. Finally I try to pass these new files to the `result2msa` command, but then I get the following error:. ```; Input database ""/tmp/query"" has wrong type (Generic); Allowed inputs:; - Alignment; - Prefilter; - Bi-directional prefilter; - Clustering; ```. I'm wondering if there is a simpler way of doing this, and if not why can't I pass the subset of the `res_exp_align_filter` file into the result2msa command even though it has the same structure as the `res_exp_align_filter` file.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/850:1827,error,error,1827,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/850,1,['error'],['error']
Availability,threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Sensitivity 	5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3. Initialising data structures...; Using 40 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1374076390 byte) of total memory (270920568832 byte); Target database: db(Size: 1); Substitution matrices...; Time for init: 0 h 0 m 0s. Query database: /share/input.fasta(size=0); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 188; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 16342; DB Size: 686227020 (byte); Avg Kmer Size: 0.000190541; Top 10 Kmers; 	RHCCAA		1; 	QCICAA		1; 	WSQFAA		1; 	WQPHAA		1; 	HPKLAA		1; 	GHLLAA		1; 	WRPNAA		1; 	PHCQAA		1; 	HRCQAA		1; 	FHNQAA		1; Min Kmer Size: 0; Empty list: 8574,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/41:2391,Mask,Mask,2391,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41,1,['Mask'],['Mask']
Availability,"tide.out -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Index version: 16; Generated by: fcf52600801a73e95fd74068e1bb1afb437d719d; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 209335862 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Segmentation fault (core dumped); Error: Alignment died; Traceback (most recent call last):; File ""/home/x/genomic/alphafold2/venv38alphafold2/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 100, in mmseqs_search; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(metagenomic_db), base.joinpath(""res_env""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 21, in run_mmseqs; subprocess.check_call([mmseqs] + params); File ""/usr/lib/python3.8/subprocess.py"", line 364, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '[PosixPath('/home/x/genomic/mmseqs2/MMseqs2/build/bin/mmseqs'), 'search', PosixPath('results_700_only_456_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:1616,fault,fault,1616,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"tide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 83); Query db start 1 to 20588; Target db start 1 to 207919; ...; ```. ## Context; I'm running this on a cluster with aarch64 (actually A64FX) CPU architecture. The cluster also has limited memory per node -- only 32 GB. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; * Which MMseqs version was used: self compiled; * For self-compiled and Homebrew: : GCC 12.1 ,OpenMPI 4.1.4, CMAKE 3.22. Build command: `cmake -DCMAKE_BUILD_TYPE=RE",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:4852,Mask,Masked,4852,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['Mask'],['Masked']
Availability,"tig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details abou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:4382,mask,mask,4382,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,2,['mask'],"['mask', 'mask-prob']"
Availability,"tion fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:2129,Mask,Mask,2129,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['Mask'],['Mask']
Availability,tion: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Maske,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:31042,Mask,Masked,31042,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,"tity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` error did not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : 1; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:5126,Error,Error,5126,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['Error'],['Error']
Availability,"tmp 	true; MPI runner 	. Set cluster mode SET COVER.; kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 2.20B 2h 9m 12s 463ms; Process file into 17 parts; Generate k-mers list for 1 split; Generate k-mers list for 2 split; Generate k-mers list for 3 split; Generate k-mers list for 4 split; Generate k-mers list for 5 split; Generate k-mers list for 6 split; Generate k-mers list for 7 split; [=================================================================] 2.20B 32m 39s 205ms; Sort kmer 0h 0m 26s 313ms; Sort by rep. sequence 0h 0m 4s 966ms; Generate k-mers list for 8 split; [=====================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:3914,mask,mask-lower-case,3914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['mask'],['mask-lower-case']
Availability,"tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. Error:; ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. ## MMseqs Output (for bugs); ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --al",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/627:1424,error,error,1424,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627,3,"['Error', 'error']","['Error', 'error']"
Availability,"tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provid",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:3998,Mask,Mask,3998,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['Mask'],['Mask']
Availability,"tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15106287 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 73ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 66ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5s 2ms; Hard disk might not have enough free space (1T left).The prefilter result might need up to 39T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15106287; Target db start 1 to 69220; [=================================================================] 15.11M 8m 6s 441ms. 0.965152 k-mers per position; 6491 DB matches per sequence; 5875 overflows; 0 queries produce too many hits (truncated result); 813 sequences passed prefiltering per query sequence; 0 med",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:9089,Mask,Masked,9089,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['Mask'],['Masked']
Availability,"to Reproduce (for bugs); -download gtdb.tar.gz; `mmseqs createdb tardb gtdb`; -execute shell commands in databases.sh to create nodes.dmp, names.dmp, mapping_genomes (these files all seem to be fine); `mmseqs createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file ""tmp/taxonomy/mapping_genomes"" --tax-mapping-mode 1`. ## MMseqs Output (for bugs); -no errors or warnings; ```; createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file tmp/taxonomy/mapping_genomes --tax-mapping-mode 1 . MMseqs Version: 	14.7e284; NCBI tax dump directory	tmp/taxonomy; Taxonomy mapping file 	tmp/taxonomy/mapping_genomes; Taxonomy mapping mode 	1; Taxonomy db mode 	1; Threads 	28; Verbosity 	3; ```. if I understand correctly, the gtdb.lookup file should have 3 columns: proteinNumber (0.. 256163114), proteinID, sourceGenomeNumber : ; ```; 0 NZ_CP009512.1_1 1; 1 NZ_CP009512.1_33 1; 2 NZ_CP009512.1_65 1; 3 NZ_CP009512.1_97 1; 4 NZ_CP009512.1_129 1; 5 NZ_CP009512.1_161 1; 6 NZ_CP009512.1_193 1; 7 NZ_CP009512.1_225 1; 8 NZ_CP009512.1_257 1; 9 NZ_CP009512.1_289 1; 10 NZ_CP009512.1_321 1; ```; however, my gtdb.lookup file has entries from different genomes pointing to the same source genome number. e.g. ; ```; 0 NZ_CP009512.1_1 1; 100 NZ_CP009512.1_3201 1; 101 NZ_CP009512.1_3233 1; 102180795 NZ_JAAOIZ010000001.1_5 1 #should point to source genome 65537; 102180796 NZ_JAAOIZ010000001.1_37 1 #should point to source genome 65537; 102181002 JAJXZV010000318.1_2 2 #should point to source genome 65538; 102181003 JAJXZV010000021.1_4 2 #should point to source genome 65538; 104066383 NC_007181.1_8 2; 104066384 NC_007181.1_40 2; ```; the highest source genome number found in the gtdb.lookup file is 65535, and then it seems to start over at 1 duplicating ids...?. ## Your Environment; MMseqs2 Version: 14.7e284; tried with both latest binary download and conda install; Linux my.local 3.10.0-1160.76.1.el7.x86_64 #1 SMP Wed Aug 10 16:21:17 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729:2172,down,download,2172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729,1,['down'],['download']
Availability,"to Reproduce (for bugs); Run an easy-search. Specift an e-value threshold < 1E-45; ; ## MMseqs Output (for bugs); ```; MMseqs Version: 12.113e3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Slice search mode false; Strand selection 1; Disk space limit 0; MPI runner; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/379:1729,Mask,Mask,1729,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379,2,['Mask'],['Mask']
Availability,"total memory required. Order of magnitude suffices can be passed to --split-memory-limit, such as 10G for ten gigabyte or 1T for one terabyte of RAM. ...so I'm using `--split-memory-limit` with 80% of the RAM provided for the qsub job. However, I always get the error:. ```; search --threads 8 -e 1e-3 --max-accept 1 --max-seqs 100 -s 6 --num-iterations 2 --split 0 --split-memory-limit 160G /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/hits_seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_TMP09. MMseqs Version: 	11.e1a1c; E-value threshold 	0.001; Max accept 	1; Threads 	8; Sensitivity 	6; Max results per query 	100; Split database 	0; Split memory limit 	160G; Search iterations 	2. Failed to mmap memory dataSize=321859477504 File=/ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db.idx. Error 12.; ```. Even if I reduce `--split-memory-limit` to 50% or just 20% of the total memory provided for the qsub job, the job still dies with the same error. Maybe I'm not understanding or using `--split-memory-limit` correctly??. I'm using UniRef90 as the db. If I use 336G for the job mem limit, then the `mmseq search` job runs without an error. . ## Steps to Reproduce (for bugs). `mmseqs search` on UniRef90 to provide a large RAM requirement for the job. . ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338:1317,Error,Error,1317,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338,1,['Error'],['Error']
Availability,"tput/tmp/5351426679731834765/seq_wrong_assigned_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 26229 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34414 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 34.41K 1s 394ms; Index table: Masked residues: 8741; Index table: fill; [=================================================================] 34.41K 1s 378ms; Index statistics; Entries: 6295744; DB size: 524 MB; Avg k-mer size: 0.098371; Top 10 k-mers; DVLDMP 2320; PDVMRM 1368; DRQVAY 1181; PFPEAR 738; MPLGAT 728; MPMGAT 703; GQQVAR 620; ADYTFS 597; LTFLYV 568; VLLALS 518; Time for index table init: 0h 0m 4s 142ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 26229; Target db start 1 to 34414; [=================================================================] 26.23K 1m 58s 7ms. 775.834912 k-mers per position; 60277 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 193 sequences passed prefiltering per query sequence; 200 median result list length; 0 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 56ms; Time for processing: 0h 2m 5s 612ms; swapdb ./mmseqs_output/tmp/5351426679731834",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:38402,Mask,Masked,38402,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['Mask'],['Masked']
Availability,"txt). It should also be noted that if --max-seq-len is used in createdb to split some of the input sequences, the createindex does not fails!. ## Steps to Reproduce (for bugs); mmseqs createdb korarchaeum_cryptofilum kora_db; mmseqs createindex kora_db /tmp/. ## MMseqs Output (for bugs); createdb call:; ```; Program call:; ./korarchaeum_cryptofilum ./kora_db -v 3 . MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 9ms>; ```. createindex call:; ```; Program call:; ./kora_db ./tmp/ -v 3. MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	40; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; ./kora_db ./kora_db --sub-mat blosum62.out -k 0 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --split 0 --split-memory-limit 0 --threads 40 -v 3. MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	40; Verbosity 	3. Substitut",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:1391,Mask,Mask,1391,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['Mask'],['Mask']
Availability,"uDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 ; --split-memory-limit 500; linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 500; MMseqs Version: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 16; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1e-10; Seq. id. threshold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:1602,Mask,Mask,1602,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,2,['Mask'],['Mask']
Availability,"ubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 -v 3 --subdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 3.5 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 6712 type: Aminoacid; Estimated memory consumption: 998M; Target database size: 6712 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 6.71K 0s 98ms ; Index table: Masked residues: 74049; Index table: fill; [=================================================================] 100.00% 6.71K 0s 81ms ; Index statistics; Entries: 2455512; DB size: 502 MB; Avg k-mer size: 0.038367; Top 10 k-mers; IHDKNI 28; GPGGTL 17; LGGFVY 14; GQQVAR 10; SGQQAI 9; RDKELL 9; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; Time for index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6712; Target db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:21493,mask,mask-lower-case,21493,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['mask'],['mask-lower-case']
Availability,"ubstitution matrix aa:blosum62.out,nucl:nucleotide.out ; Add backtrace false; Alignment mode 3 ; Alignment mode 0; Allow wrapped scoring false ; E-value threshold 1e-05; Seq. id. threshold 0 ; Min alignment length 0; Seq. id. mode 0 ; Alternative alignments 0; Coverage threshold 0 ; Coverage mode 0; Max sequence length 65535 ; Compositional bias 1; Compositional bias 1 ; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800 ; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 16; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 1000000; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1 ; Profile E-value threshold 0.001 ; Global sequence weighting false ; Allow deletions false ; Filter MSA 1 ; Use filter only at N seqs 0 ; Maximum seq. id. threshold 0.9 ; Minimum seq. id. 0.0 ; Minimum score per column -20 ; Minimum coverage 0 ; Select N most diverse seqs 1000 ; Pseudo count mode 0 ; Min codons in orf 30 ; Max codons in length 32734 ; Max orf gaps 2147483647 ; Contig start mode 2 ; Contig end mode 2 ; Orf start mode 1 ; Forward frames 1,2,3 ; Reverse frames 1,2,3 ; Translation table 1 ; Translate orf 0 ; Use all table starts false ; Offset of numeric ids 0 ; Create lookup 0 ; Add orf stop false ; Ov",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/774:1718,Mask,Mask,1718,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/774,2,['Mask'],['Mask']
Availability,"ubstitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 40; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:1694,Mask,Mask,1694,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,2,['Mask'],['Mask']
Availability,"ubstitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; [=================================================================Segmentation fault; Error: Create profile died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * Which MMseqs version was used:Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server sp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:6181,mask,mask-profile,6181,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['mask'],['mask-profile']
Availability,ues: 0; Index table: counting k-mers; Index table: counting k-mers; [=[=================================================================] 2 0s 21ms; Index table: Masked residues: 0; ================================================================[=================================================================] 2 0s 28ms; [=================================================================] 2 0s 18ms; Index table: Masked residues: 0; ] 2 0s 28ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 22ms; [=================================================================] 2 0s 72ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 138ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: fill; [=================================================================] 2 0s 15ms; [=================================================================] 2 0s 44ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 19ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: fill; [=================================================================] 2 0s 21ms; Index table: fill; Index table: fill; [=================================================================] 2 0s 0ms; [=================================================================] 2 0s 47ms; Index table: fill; [=================================================================] 2 0s 12ms; Index tabl,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:35482,Mask,Masked,35482,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,"ugs); Mseqs Version: 15.6f452; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; !!! cut the part here to make it smaller !!!; 76 Mio. sequences processed; Time for merging to uniref90-DB-wwmj_h: 0h 0m 28s 629ms; Time for merging to uniref90-DB-wwmj: 0h 0m 52s 227ms; Database type: Aminoacid; Time for processing: 0h 8m 25s 481ms. cluster uniref90-DB-wwmj uniref90-DB-wwmj_clu tmp/ --cov-mode 2 -c 0.8 --min-seq-id 0.9 . MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 2; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 64; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:1774,Mask,Mask,1774,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,2,['Mask'],['Mask']
Availability,"ugs); install the latest version (MMseqs2 Release 14-7e284, 13 Oct 2022, precompiled AVX2) in /opt and run as shown in the help:. mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir. ## MMseqs Output (for bugs). ```; mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir; Create directory /tmp/mydir; easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files true; Force restart with latest tmp fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:1711,Mask,Mask,1711,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['Mask'],['Mask']
Availability,"ul:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The fai",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:3976,mask,mask,3976,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"ult /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. MMseqs2 Version: 14.7e284; Statically-compiled. Use a compute node using the following SLURM reservation: ""srun -p fast --exclusive --pty bash"". Compute node has 54 cores and 256 Go RAM; Operating System: CentOS Linux 7 (Core); CPE OS Name: cpe:/o:centos:centos:7; Kernel: Linux 3.10.0-1160.6.1.el7.x86_64; Architecture: x86-64; AVX2/SSE = yes for both",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/728:5465,Mask,Masked,5465,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728,3,"['Error', 'Mask']","['Error', 'Masked']"
Availability,"um62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	4; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/728:2055,Mask,Mask,2055,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728,2,['Mask'],['Mask']
Availability,"um62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:1827,Mask,Mask,1827,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,2,['Mask'],['Mask']
Availability,"um62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:2602,Mask,Mask,2602,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,2,['Mask'],['Mask']
Availability,"umeric ids 0; Compressed 0; Verbosity 3. Converting sequences; !!! cut the part here to make it smaller !!!; 76 Mio. sequences processed; Time for merging to uniref90-DB-wwmj_h: 0h 0m 28s 629ms; Time for merging to uniref90-DB-wwmj: 0h 0m 52s 227ms; Database type: Aminoacid; Time for processing: 0h 8m 25s 481ms. cluster uniref90-DB-wwmj uniref90-DB-wwmj_clu tmp/ --cov-mode 2 -c 0.8 --min-seq-id 0.9 . MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 2; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 64; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:1822,Mask,Mask,1822,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['Mask'],['Mask']
Availability,user guide error and unknown output format,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2:11,error,error,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2,2,['error'],['error']
Availability,"uster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Than",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238:1228,mask,mask,1228,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"uster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:3398,mask,mask,3398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,2,['mask'],"['mask', 'mask-prob']"
Availability,"ut when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result database: CLU_updated; Start writing to clusters.tsv; Invalid database read for database data file=DB_updated_h, database index=DB_updated_h.index; getData: local id (4294967295) >= db size (17); ```. ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272:1177,error,error,1177,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272,1,['error'],['error']
Availability,"ut,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 32. Target split mode. Searching through 9 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================] 100.00% 23.11M 27m 25s 83ms; Index table: Masked residues: 122354587; Index table: fill; tmp/17913398511991990568/createindex.sh: line 56: 114573 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; ```; ## Context; Providing context helps us come",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/540:2757,mask,mask,2757,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540,2,['mask'],"['mask', 'mask-prob']"
Availability,"v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; * ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:17118,avail,available,17118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['avail'],['available']
Availability,"value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036 --sub-mat blosum62.out -s 2 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 -v 3 --rescore-mode 2 --filter-hits 0 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 1 --global-alignment 0 --min-length 1 --max-length 2147483647 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --start-sens 4 --sens-steps 1 --remove-tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Inclu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:2436,mask,mask,2436,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['mask'],['mask']
Availability,"vior; i am doing a cluster process on 15 million seq, but i am stuck on rescorediagonal, watch with top command, i find it's not memory's issue since only 8G Ram is used, i use 128 thread and 400G Ram, i believe it's enough for this cluster. The strange thing is -- when i decrease seq num to 7.5 million, it works just fine, i am confused what makes it stuck. ## Current Behavior. mmseqs cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128; cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128 . MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:1051,Mask,Mask,1051,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,2,['Mask'],['Mask']
Availability,"w wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 80G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files true; Report mode 0; Alignment format 0; For",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:3294,Mask,Mask,3294,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Mask'],['Mask']
Availability,"when I run the mmseqs2 to search sequence, I encounter a an error at blastp.sh:. $ mmseqs createdb queryDB.fasta queryDB; $ mmseqs createdb targetDB.fasta targetDB; $ mmseqs createindex targetDB; $ mkdir -p tmp/; $ mmseqs search queryDB targetDB resultDB tmp --use-index. Program call:; queryDB targetDB resultDB tmp --use-index . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:60,error,error,60,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['error'],['error']
Availability,"wing the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:1701,mask,mask,1701,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['mask'],['mask']
Availability,"x 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:3472,Mask,Mask,3472,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,2,['Mask'],['Mask']
Availability,"x 	blosum62.out; > Add backtrace 	true; > Alignment mode 	2; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Seq. Id. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Spaced k-mer pattern 	; > Rescore mode 	0; > Remove hits by seq.id. and coverage 	false; > Sort results 	0; > In substitution scoring mode, performs global alignment along the diagonal	false; > Mask profile 	1; > Profile e-value threshold 	0.1; > Use global sequence weighting 	false; > Filter MSA 	1; > Maximum sequence identity threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	1000; > Omit Consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward Frames 	1,2,3; > Reverse Frames 	1,2,3; > Translation Table 	1; > Use all table starts 	false; > Offset of numeric ids 	0; > Add Orf Stop 	false; > Number search iterations 	3; > Start sensitivity 	4; > Search steps 	1; > Run a seq-profile search in slice mode 	false; > Strand selection 	1; > Disk space limit 	0; > Sets the MPI runner 	; > Remove Temporary Files 	false; > ; > Program call:; > prefilter tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 --sub-mat blosum62.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:1664,Mask,Mask,1664,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['Mask'],['Mask']
Availability,"x reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:2090,Mask,Mask,2090,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['Mask'],['Mask']
Availability,"x reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Exact k-mer matching 0 [49/1999]; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 3; Start sensitivity 4; Search iterations 3 [5/1999]; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space lim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:2307,Mask,Mask,2307,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,1,['Mask'],['Mask']
Availability,"x.7 nrDB.index ; nrDB_h nrDB.idx.10 nrDB.idx.3 nrDB.idx.8 nrDB.lookup; nrDB_h.dbtype nrDB.idx.11 nrDB.idx.4 nrDB.idx.9 nrDB_mapping ; nrDB_h.index nrDB.idx.12 nrDB.idx.5 nrDB.idx.dbtype nrDB.source; nrDB nrDB.idx.0 nrDB.idx.13 nrDB.idx.6 nrDB.idx.index nrDB_taxonomy. ```. I know that this is at least a valid aminoacid database since I an search against it and get hits. However, I cannot use the `taxonomyreport` command on the results since it tells me that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401:1819,down,downloaded,1819,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401,1,['down'],['downloaded']
Availability,"xpected Behaviour; I'm trying to follow the documentation to get a profile output file from an input multiple sequence alignment (MSA) file in protein aligned fasta format, but it is complaining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGK",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:995,Error,Error,995,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['Error'],['Error']
Availability,"xpectedly killed (see mmseqs output section below). ## MMseqs Output (for bugs); ```; cfos@pop-os:/data/clustered_nr$ mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; Create directory tmp; createtaxdb nr_rep_seq_db tmp --tax-mapping-file /data/clustered_nr/nr_rep_seq_to_taxid.map -v 3 . MMseqs Version: 	2fad714b525f1975b62c2d2b5aff28274ad57466; NCBI tax dump directory	; Taxonomy mapping file 	/data/clustered_nr/nr_rep_seq_to_taxid.map; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	20; Verbosity 	3. Download taxdump.tar.gz. 02/01 11:29:59 [NOTICE] Downloading 1 item(s); [#b8b044 0B/0B CN:1 DL:0B] ; 02/01 11:30:01 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#b8b044 51MiB/61MiB(84%) CN:1 DL:10MiB] ; 02/01 11:30:08 [NOTICE] Download complete: tmp/taxdump.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; b8b044|OK | 9.1MiB/s|tmp/taxdump.tar.gz. Status Legend:; (OK):download completed.; Loading nodes file ... Done, got 2550743 nodes; Loading merged file ... Done, added 75930 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```; ## Context; I want to search some query sequences locally against a clustered version of the NR database. I downloaded the clustered database and taxonomy files (nr_cluster_taxid_formatted_final.tsv.gz, nr_rep_seq.fasta.gz) from [here](https://osf.io/tejwd/), which was created as per: https://research.arcadiascience.com/pub/resource-nr-clustering/release/3. I then processed the files like so:. ```; gunzip -c nr_cluster_taxid_formatted_final.tsv.gz | cut -f1,2 > nr_rep_seq_to_taxid.map; mmseqs createdb nr_rep_seq.fasta.gz nr_rep_seq_db; ```. After these completed successfully, I tried to create the taxdb as per the above:. ```; mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811:1351,Down,Download,1351,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811,1,['Down'],['Download']
Availability,"y 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Sensitivity 	5.7; mmseqs-web-worker_1 | K-mer size 	0; mmseqs-web-worker_1 | K-score 	2147483647; mmseqs-web-worker_1 | Alphabet size 	21; mmseqs-web-worker_1 | Max results per query 	300; mmseqs-web-worker_1 | Previous max results per query; mmseqs-web-worker_1 | Split database 	0; mmseqs-web-worker_1 | Split mode 	2; mmseqs-web-worker_1 | Split memory limit 	0; mmseqs-web-worker_1 | Diagonal scoring 	1; mmseqs-web-worker_1 | Exact k-mer matching 	0; mmseqs-web-worker_1 | Mask residues 	1; mmseqs-web-worker_1 | Mask lower case residues 	0; mmseqs-web-worker_1 | Minimum diagonal score 	15; mmseqs-web-worker_1 | Spaced k-mers 	1; mmseqs-web-worker_1 | Spaced k-mer pattern; mmseqs-web-worker_1 | Local temporary path; mmseqs-web-worker_1 | Rescore mode 	0; mmseqs-web-worker_1 | Remove hits by seq. id. and coverage 	false; mmseqs-web-worker_1 | Sort results 	0; mmseqs-web-worker_1 | Global diagonal rescoring 	false; mmseqs-web-worker_1 | Mask profile 	1; mmseqs-web-worker_1 | Profile e-value threshold 	0.001; mmseqs-web-worker_1 | Use global sequence weighting 	false; mmseqs-web-worker_1 | Filter MSA 	1; mmseqs-web-worker_1 | Maximum seq. id. threshold 	0.9; mmseqs-web-worker_1 | Minimum seq. id. 	0; mmseqs-web-worker_1 | Minimum score per column 	-20; mmseqs-web-worker_1 | Minimum coverage 	0; mmseqs-web-worker_1 | Select N most diverse seqs 	1000; mmseqs-web-worker_1 | Omit consensus 	false; mmseqs-web-worker_1 | Min codons in orf 	30; mmseqs-web-worker_1 | Max codons in length 	32734; mmseqs-web-worker_1 | Max orf gaps 	2147483647; mmseqs-web-worker_1 | Contig start mode 	2; mmseqs-web-worker_1 | Contig end mode 	2; mmseqs-web-worker_1 | Orf start mode 	1; mmseqs-web-worker_1 | Forward frames 	1,2,3; mmseqs-web-worker_1 | Reverse frames 	1,2,3; mmseqs-web-worker_1 | Translation table 	1; mmseqs-web-worker_1 | Use all table starts 	false; mmseqs-web-worker_1 | Offset of numeric ids ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:2947,Mask,Mask,2947,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['Mask'],['Mask']
Availability,"y 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile e-value threshold 0.001; Use global sequence weighting false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 10; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files true; ```. ## Context; I ran 1000 parallel jobs, and there are 20+ failed files while other files have no problems. And for those failed files, there is no error msg if I run them manually. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; `f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; `cmake version 3.10.2`; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; NAME=""Ubuntu""; VERSION=""18.04.3 LTS (Bionic Beaver)""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/239:3100,error,error,3100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239,1,['error'],['error']
Availability,"y-limit 60G; mmseqs createsubdb viral_clu viral_db viral_rep; ```; Then I merged 2 fastq files with _plass_; `plass mergereads ./OUT/8813_paired_1.fastq ./OUT/8813_paired_2.fastq ./OUT/8813_db --threads 10; `; I thought [this was the way](https://github.com/soedinglab/MMseqs2/issues/436) to feed the next steps, 8813_db would be the query in this case. I reasoned since the database of nonredundant proteins is in nucleotide format and the reads created a nucleotide database the search would be between nucleotide. . **I run** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --search-type 3; `. I got this error ; ```; Unrecognized parameter --search-type; Did you mean ""--seed-sub-mat""?; ```. **Or** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --seed-sub-mat nucl`. and I got this message error; ```; It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:1480,error,error,1480,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['error'],['error']
Availability,"y_h: 0h 0m 0s 0ms; Time for merging to query: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 4ms; Create directory tmp_easy_search/6745795380167965363/search_tmp; search tmp_easy_search/6745795380167965363/query target_DB tmp_easy_search/6745795380167965363/result tmp_easy_search/6745795380167965363/search_tmp -a 1 --alignment-mode 3 --threads 96 -s 5.7 --sort-results 0 --remove-tmp-files 0 . prefilter tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 -s 5.7 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/67457953801679",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:5398,mask,mask-lower-case,5398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['mask'],['mask-lower-case']
Availability,"y_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 100.00% 9.78K 0s 59ms ; Time for merging to query_seqs_h: 0h 0m 0s 439ms; Time for merging to query_seqs: 0h 0m 0s 494ms; Time for processing: 0h 0m 2s 117ms; prefilter tmp/3198441352783276465/clu_tmp/13016959338117486175/query_seqs tmp/3198441352783276465/clu_tmp/13016959338117486175/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 5 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3 . Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 1648954 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to cluster a number of gene sequences with an identity of 0.8 and no minimum length for the aligned portion of the genes. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15.6f452; * Which MMseqs versio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:16351,mask,mask-lower-case,16351,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['mask'],['mask-lower-case']
Availability,"ype 1`; or; ` mmseqs cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2`. Both results lead to identical .tsv files. Update: adding `--comp-bias-corr 0` gives similar results. ## MMseqs Output (for bugs). similarity type 1: ; Create directory clu/sim1_tmp; cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers pe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:1577,Mask,Mask,1577,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,2,['Mask'],['Mask']
Availability,"z All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a . ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id.	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3. Compute score, coverage and sequence identity; Query database size: 1233743 type: Nucleotide; Target database size: 1233743 type: Nucleotide; Calculation of alignments; **Segmentation fault**===============================================>] 99.07% 509.65K eta 0s . ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/462:2013,fault,fault,2013,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/462,1,['fault'],['fault']
Availability,"ze 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	1; Verbosity 	3. Initialising data structures...; Using 1 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1025282101 byte) of total memory (182764221235 byte); Target database: /tmp//589280515582180421/input_step_redundancy(Size: 1); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 10s. Query database: /tmp//589280515582180421/input_step_redundancy(size=1); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 24; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 17; DB Size: 512000102 (byte); Avg Kmer Size: 2.65625e-07; Top 10 Kmers; 	HYLQFA		1; 	YPSFNA		1; 	YQADPD		1; 	FQDPTF		1; 	AHWGYF		1; 	PNTSAH		1; 	YWGLAK		1; 	WLQYKK		1; 	ANHWQL		1; 	TFAAWL		1; Min Kmer Size: 0; Empty list: 63999983. Time for index table init: 0 h 0 m 2s. 	k-mers per position = 0.354331, k-mer match probability: 2.22507e-308; k-mer similarity threshold: 130; k-mer match probability: 2.22507e-308. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 1. 0 k-mers per position.; 17 DB matches per sequence.; 0 Overflows.; 1 sequences passed prefiltering per query sequence.; Median result list size: 1; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 0 m 12s; Program call:; /tmp//589280515582180",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:14266,Mask,Masked,14266,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['Mask'],['Masked']
Availability,"| ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 1ms; docker-compose-mmseqs-web-worker-1 | Time for merging to alis_pdb_protein_sequence: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 3ms; docker-compose-mmseqs-web-worker-1 | Removing temporary files; docker-compose-mmseqs-web-worker-1 | rmdb /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | 2023/06/12 21:32:54 Process finished gracefully without error; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""GET /ticket/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg HTTP/1.0"" 200 68; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""GET /ticket/type/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg HTTP/1.0"" 200 18; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""POST /tickets HTTP/1.0"" 200 138; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""GET /result/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/0 HTTP/1.0"" 200 161; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""GET /result/queries/q5hCr61",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:10036,error,error,10036,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['error'],['error']
Availability,"﻿Hello,. I am working with mmseqs2, I was asking myself about the order of fasta files when I use the command mmseqs _createdb / cluster_. I observed some little differences if I change the order of fasta sequences on the command _createdb_. Command line :. I used these commands :; ; - _mmseqs createdb --dont-shuffle (true/false) file.faa panproteome.db_. - _export TMP_DIR=$(mktemp -d ) && mmseqs cluster panproteome.db families.db ${TMP_DIR} --min-seq-id 0.8 -c 0.8 --threads 2 --kmer-per-seq 80 --max-seqs 300 && rm -rf ${TMP_DIR}_. - _mmseqs createtsv panproteome.db panproteome.db families.db families.tsv --first-seq-as-repr true_. I use : _MMseqs2 Version: 5.9375b_. I took a dataset (available in the attachment) for an example and I have this result :. results :; 		; 	order 1 :; 		dont-shuffle : false  -> cluster numbers :4296; 		dont-shuffle : true  -> cluster numbers : 4290. 	order 2 :; 		dont-shuffle : false -> cluster numbers : 4297; 		dont-shuffle : true -> cluster numbers : 4298. Is it an expected result to obtain different number of cluster depending on fasta sequence order ?. Attachment : fasta sequences ( 2 different order) and clustering files (families.tsv) for each condition.; [results.tar.gz](https://github.com/soedinglab/MMseqs2/files/2379387/results.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/115:694,avail,available,694,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/115,1,['avail'],['available']
Deployability,	-4	0	-2	1	4	-1; 285	H	-4	-3	-2	-2	-2	-3	9	-4	-2	-4	-3	0	-3	-1	-1	-2	-3	-5	-3	0; 286	G	0	-2	-3	-3	-3	5	-3	-1	-2	-2	-3	-2	-3	-3	-3	-2	-2	2	-3	-3; 287	F	-4	-3	-4	-4	7	-4	-2	-1	-4	-1	-1	-4	-4	-4	-4	-4	-1	-2	7	2; 288	H	0	-2	-3	-2	2	-3	4	1	-2	1	1	-2	-3	1	-2	-2	0	0	-2	0; 289	S	0	-1	-1	-2	-2	0	-2	-3	-1	0	-2	2	-2	-2	-2	3	0	-3	6	-1; 290	M	-3	-2	-4	-3	4	-4	-2	0	-2	2	6	-3	-3	-2	-3	-3	-2	-1	-1	0; 291	A	2	-1	-2	-2	0	1	-2	-2	-1	-2	-2	-1	-2	-2	1	1	0	-2	-2	-2; 292	R	-2	-3	0	-1	-4	2	-2	-4	1	-3	-3	-1	4	-1	4	-2	0	-4	-3	-3; 293	A	2	-1	-3	-3	2	-2	-3	1	-2	1	2	-3	-2	-3	-3	-2	-2	1	-2	-1; 294	L	-3	-1	-4	-4	-1	-4	-4	2	-3	3	2	-4	-3	-3	-3	-3	-2	2	-2	-2; 295	D	-2	-2	4	1	-4	-2	-2	-3	-1	-4	-4	0	6	-1	-2	1	-2	-4	-4	-3; 296	E	0	-2	0	4	-4	-2	-1	-2	0	-3	-2	-1	2	4	-1	-1	-1	0	-3	-2; 297	G	2	-1	-2	-2	-4	5	-3	-3	-2	-4	-3	-1	-2	-3	-3	-1	-2	-3	-3	-3; 298	R	-3	-3	-2	-1	-3	-3	-1	-2	2	0	-1	-1	-2	2	5	-2	-2	-2	-3	-2; 299	Q	0	-2	-1	1	-3	-2	-1	-2	1	-2	-2	-1	-2	4	1	0	0	0	-3	-2; 300	A	3	-1	-3	-2	2	-2	-3	-1	-2	-1	3	-3	-2	-2	-2	-1	-1	0	-2	-1; 301	I	0	4	-2	-2	-2	-3	-2	2	-1	1	-1	1	-2	1	1	-2	-1	1	-2	-2; 302	D	-3	-3	6	3	-4	-3	-1	-4	0	-4	-4	0	-1	-1	1	0	-2	-4	-4	-3; 303	E	-3	-3	2	5	-3	-3	-1	0	1	-3	-3	-1	-1	2	0	-1	-2	-2	-3	-2; 304	A	2	-1	-3	-2	-2	-2	-3	3	-2	0	3	-3	-2	-2	-2	-1	-1	0	-3	-2; 305	A	3	-1	-2	-2	-3	1	-2	-1	-2	-2	-2	-1	-1	-2	-2	1	1	0	-3	-2; 306	A	3	0	-1	-1	-3	-1	-2	-2	-1	-2	-2	-1	-1	-2	-2	3	0	-1	-3	-2; 307	V	1	-1	-3	-3	4	-2	-2	0	-3	-1	-1	-3	-2	-3	-3	-2	-2	3	-1	0; 308	L	-3	-1	-4	-3	0	-4	-3	0	-3	5	3	-4	-3	-3	-3	-3	-2	0	-1	-1; 309	Q	-2	-2	-1	0	-3	4	0	-3	0	-3	-2	0	-1	4	-1	-1	-1	-3	-2	-2; 310	A	2	-1	-1	0	-3	-1	-1	-2	3	-2	-2	-1	-1	0	0	0	-1	-1	-2	-1; 311	H	-2	-3	-1	0	-2	-2	7	-3	0	-2	-1	0	-2	4	0	-1	-1	-3	-1	0; 312	F	-4	-2	-4	-4	7	-3	-1	0	-4	0	0	-3	-4	-4	-3	-3	-2	-1	1	3; 313	G	-1	-2	-1	-2	-3	6	-2	-4	-2	-4	-3	0	-2	-2	-2	0	-2	-3	-1	-3; 314	T	-1	0	-1	-1	-1	-1	-1	0	-1	-1	-1	0	-1	-1	-1	0	5	0	-1	-1. ## Your Environment. * Operating system and version: Ubuntu 22.04.4 LTS; * I'm Using MMseqs2 Version: 15.6f452 installed with bioconda,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/847:21045,install,installed,21045,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/847,1,['install'],['installed']
Deployability,"	1; > Start sensitivity 	4; > sensitivity step size 	1; > Sets the MPI runner 	; > Cluster mode 	0; > Max depth connected component 	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Match sequences by their ID 	false; > ; > Program call:; > DB_trimmed DB_new tmp/removedSeqs tmp/mappingSeqs tmp/newSeqs --threads 4 -v 3 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Match sequences by their ID	false; > Threads 	4; > Verbosity 	3; > ; > ===================================================; > ====== Filter out the new from old sequences ======; > ===================================================; > Program call:; > tmp/newSeqs DB_new tmp/NEWDB.newSeqs ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Start writing to file tmp/NEWDB.newSeqs; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > === Update the old clustering with the new keys ===; > ===================================================; > Program call:; > DB_trimmed_clu tmp/OLDCLUST.mapped --mapping-file tmp/mappingSeqs ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Filter column 	1; > Filter regex 	^.*$; > Positive filter 	true; > Filter file 	; > Mapping file 	tmp/mappingSeqs; > Threads 	4; > Verbosity 	3; > trim the results to one column 	false; > Extract n lines 	0; > Numerical comparison operator 	; > Numerical comparison value 	0; > Sort (increasing:1, decreasing: 2, shuffle: 3) the entries by numerical value	0; > ; > Mapping keys by file tmp/mappingSeqs; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > ======= Extract representative sequences ==========; > ===================================================; > Program call:; > DB_new DB_new tmp/OLDCLUST.mapped tmp/OLDDB.mapped.repSeq --only-rep-seq ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d57",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:2992,Update,Update,2992,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['Update'],['Update']
Deployability,"	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. I don't know if the error is right at the start using _plass_ int this context or with the _map_ command. Could you let me know how to proceed to use paired fastq data with the 'map pipeline'? ; Thanks for your help!. ## Context. After clustering all the proteins found in several samples I am trying to estimate the relative abundance of proteins in a non-redundant database considering the paired read files I have. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; using MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1 or 12 in a cluster ; and the plass-linux-sse41.tar.gz executable for plass. ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:3924,pipeline,pipeline,3924,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['pipeline'],['pipeline']
Deployability," #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM ; i5-3320M CPU with sse3, sse4_1, sse4_2 and avx supported; commands to compile:. * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/349:2243,RELEASE,RELEASE,2243,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349,2,"['RELEASE', 'install']","['RELEASE', 'install']"
Deployability, (x86)\mmseqs\\bin/mkfifo: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mknod: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mktemp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/more: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mountpoint: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mpstat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mt: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nice: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nmeter: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nohup: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nslookup: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/od: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/patch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pgrep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pidof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ping: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ping6: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pipe_progress: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pkill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/popmaildir: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/printenv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/printf: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ps: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pscan: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pstree: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pwd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pwdx: Permi,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:8506,patch,patch,8506,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['patch'],['patch']
Deployability," --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is enough disk space and memory.; I tried to check the process status, and it is always in the `D` status with 100-200% CPU usage ( based on `htop` outputs).; Not sure how I can speed things up at this stage. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): b768f48f0bd73688b6a68132159a97f7b6310f03; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-complied ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc 6.1 ; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel(R) Xeon(R) CPU E5-2680 v4 @ 2.40GHz, support AVX2/SSE, total 503 G memory (`free -g`); * Operating system and version: Red Hat Enterprise Linux Server release 7.6 (Maipo)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:5624,release,release,5624,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,1,['release'],['release']
Deployability," --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse), and have compiled MMseqs2 from source with the DHAVE_MPI=1 flag when invoking cmake. Thank you for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:4043,install,installations,4043,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['install'],['installations']
Deployability," Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap 	0; Split seq. by length 	true; Database type 	0; Do not shuffle input database 	true; Greedy best hits 	false. Invalid input database and --search-type combination; queryDbType: Aminoacid; targetDbType: Profile; targetSrcDbType: Profile; searchMode: 0; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I should stop updating mmseqs. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; self-compiled: 70d09a2ea505d8b22d80286ae13dd4d9826ea303; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.14.3; CXX=""/usr/local/bin/g++-8"" CC=""/usr/local/bin/gcc-8"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local/biotools ../MMseqs2. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Mac OSX Mojave 10.14.4 (It was working!). * Operating system and version:; As above.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/195:3714,RELEASE,RELEASE,3714,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/195,1,['RELEASE'],['RELEASE']
Deployability," initial order. Add missing connections. Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 1; Size of the alignment database: 1; Number of clusters: 1; Program call:; pan.db /tmp//589280515582180421/clu /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/clu_step0 . MMseqs Version:	GITDIR-NOTFOUND; Threads 	24; Verbosity	3. List amount 2; Clustering step 1...; Clustering step 2...; Writing the results...; Time for merging files: 0 h 0 m 0 s; ...done. ```. ```; Program call:; pan.db pan.db fam.db fam.tsv --first-seq-as-repr true . MMseqs Version: 	GITDIR-NOTFOUND; first sequence as respresentative	true. Query file is pan.db; Data file is fam.db; Start writing file to fam.tsv; Done.; ```. ## Context. These 2 sequences come from a vibro cholerae genome. . ## Your Environment. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): GITDIR-NOTFOUND (corresponds to the last release: 2-23394). * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled using GNU Make 3.81 and cmake version 2.8.12.2. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: self-compiled using GNU Make 3.81 and cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; less /proc/cpuinfo; processor : 0; vendor_id : AuthenticAMD; cpu family : 21; model : 2; model name : AMD Opteron(tm) Processor 6344 ; stepping : 0; cpu MHz : 2599.862; cache size : 2048 KB; physical id : 0; siblings : 12; core id : 0; cpu cores : 6; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext; fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good no",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:18140,release,release,18140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['release'],['release']
Deployability,![image](https://github.com/soedinglab/MMseqs2/assets/8847420/85e21069-5f6c-49ca-a55a-7c98fe77be9a). ## Your Environment; * mmseqs version 15.6f452; * System version; Distributor ID: Ubuntu; Description: Ubuntu 20.04.6 LTS; Release: 20.04; Codename: focal,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/784:224,Release,Release,224,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/784,1,['Release'],['Release']
Deployability,"""MMseqs2 Version: 7e2840992948ee89dcc336522dc98a74fe0adf00"". ## Expected Behavior. mmseqs easy-cluster --help. says that running this command. mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir. I should get two FASTAs and one .tsv. Quoting the help:. examples:; mmseqs easy-cluster examples/DB.fasta result tmp; # Cluster output; # - result_rep_seq.fasta: Representatives; # - result_all_seq.fasta: FASTA-like per cluster; # - result_cluster.tsv: Adjacency list. ## Current Behavior. No FASTA or .tsv is created. See current output:. ls -l /tmp/mydir; total 0; drwxr-xr-x. 2 igregore igregore 120 May 25 01:48 7574787915800795625; lrwxrwxrwx. 1 igregore igregore 19 May 25 01:48 latest -> 7574787915800795625. ## Steps to Reproduce (for bugs); install the latest version (MMseqs2 Release 14-7e284, 13 Oct 2022, precompiled AVX2) in /opt and run as shown in the help:. mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir. ## MMseqs Output (for bugs). ```; mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir; Create directory /tmp/mydir; easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:762,install,install,762,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,2,"['Release', 'install']","['Release', 'install']"
Deployability,"## Context. Hi!. We're currently looking for a replacement for CD-HIT-EST for clustering genes in nucleotide space. We have a few conditions when clustering. The CD-HIT-COMMAND is straightforward:. ```; cd-hit-est -i genes.fa -o cluster.fa -c 0.95 -T 64 -M 0 -G 0 -aS 0.9 -g 1 -r 0 -d 0; ```. Basically, we want to perform greedy clustering at 95% identity and at least 90% of the shorter gene should be aligned. The longest sequence of a cluster should become the representative and a member of a cluster should not align against any other representative with a better score/percid. We have now come up with the following command(s):. ```; mmseqs createdb genes.fa genes.mmseqs.db --dbtype 2 --shuffle 0. mmseqs cluster genes.mmseqs.db genes.mmseqs.cluster tmp --kmer-per-seq-scale 0 --kmer-per-seq 1000 \; -s 4 --max-seq-len 80000 --remove-tmp-files 0 --cluster-mode 2 --min-seq-id 0.95 --threads 64 --cov-mode 1 \; -c 0.9 --spaced-kmer-mode 0 --alignment-mode 3 --cluster-reassign 1; ```. The key parameter seems to be `--spaced-kmer-mode 0` as this prevents very similar sequences being placed in different clusters. as reported by others (#831 #489). Using these parameters the clustering compares quite well against the clusters produced by cd-hit:; ```; mmseqs clusters = 13'471'787; cdhit clusters = 13'640'333; runtime(mmseqs) / runtime(cdhit) = 0.09; Rand Score: 0.99; Adjusted Rand Score: 0.91; V-measure: 0.99; ```. So it seems that mmseqs is slightly overclustering (might be due to local vs global alignment) and the cluster consistency metrics indicate that even the cluster membership (and not only the representatives) seem to be mostly correct. . I would like to get your feedback on the command(s) before I make this our standard (nucleotide) gene clustering pipeline. Do you think there are other parameters that could be tweaked?. ## Your Environment; version: `6f45232ac8daca14e354ae320a4359056ec524c2`; Downloaded static binary from GitHub. Best and thanks,; Hans",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/836:1778,pipeline,pipeline,1778,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/836,1,['pipeline'],['pipeline']
Deployability,"## Context; I am using PHARROKA (available on Github) to annotate bacteriophage genomes. MMseq2 is a required dependency. It was working perfectly on my MacBook Pro purchased in 2011. I recently switched to a new one (MacBook M3-pro) and it is not working anymore (see the above PHARROKA output involving MMseqs). I am very far from being a developer and I am only a self-taught bioinformatician. I am thus seeking help !. I used Brew to install MMseqs, my OS is Mac OS X Sonoma 14.4.1. Thanks !. Nico",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/834:438,install,install,438,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834,1,['install'],['install']
Deployability,"## Context; It appears that the documentation gives only 5 parameters for clusterupdate:; mmseqs clusterupdate oldDB newDB oldDB_clustering outDB tmp. However, from the code, it seems that mmseq2 actually requires 6 input parameters:; mmseqs clusterupdate OLDB NEWDB OLDCLUST NEWMAPDB NEWCLUST TMP_PATH. I am not sure what NEWMAPDB is vs NEWDB, and so I've tried running the code giving a unique name to each. The clustering appears to run, but the tools for generating fasta and tsv results fail (see detail below) . ## Expected Behavior; Looking to generate fasta and tsv results from updated clusters with a new database that contains both the old database and a set of new sequences. . ## Current Behavior; While clustering appears to run, I am not able to successfully generate fasta and tsv files. ; For the fasta, I get output that looks like the following: ; Entry does not contain a header!2509593Entry 4480592Entry ; Entry 1542108 does not contain a header! does not contain a header!4479347 does not contain a header!Entry ; 4477267; Entry ; Entry ; 5003334. For tsv, the tool fails with:; MMseqs Version: 	f3b88f27def72ac5392131b98e079930f3b087c7; first sequence as respresentative	false; Target column 	0; Add Full Header 	false. Query file is x; Data file is x_clu ; Start writing file to x.tsv; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_S_construct null not valid; Aborted. This issue was also brought to the attention of Dr. Söding in a recent email . Thank you, . Irena",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103:587,update,updated,587,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103,1,['update'],['updated']
Deployability,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:102,install,installation,102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,5,"['Release', 'install']","['Release', 'install', 'installation', 'installed']"
Deployability,"## Expected Behavior--. I am clustering NGS sequences with linclust (using the createdb database) from protein fasta files incorporating multiple named barcodes present in the fasta IDs. Each ID consists of a number to which the barcode name is appended (e.g. 689_dog). The expected output of createtsv is two columns, the first consisting of the IDs of the representative cluster member (689_dog), and the second consisting of IDs of the cluster members, including the barcode name (689_dog, 435_owl, 691_rat, etc.). . ## Current Behavior--; ; The first column is OK. The second column TSV output consists only of the numbers (689, 435, 691, etc.). It is essential that I have the barcode name for further processing of tabular formatted cluster information. Your documentation states that unkown ID formats are parsed to include everything before the first white space. This is not the case here. I have tried other delimiters (e.g. :, -) or no delimiters, and in each case the second column lists only the numbers. BTW, the clustering works very well, as assessed by inspection of output fasta or MSA files. ## Your Environment--. MMseqs2 Version: 11.e1a1c. installed from Bioconda. Run on Ubuntu 18.04 under Windows10 WSL1 on a 12-thread processor with 48GB RAM. mmseqs createdb csgtag10.fa csgtagDB; mmseqs linclust csgtagDB csgtagDB_CL DB_clu.tmp --add-self-matches -a 1 --min-seq-id 0.96; mmseqs createtsv csgtagDB csgtagDB_CL csgtagDB_CL_TSV (faulty output). mmseqs createseqfiledb csgtagDB csgtagDB_CL csgtagDB_CL_SEQ; mmseqs result2flat csgtagDB csgtagDB csgtagDB_CL_SEQ csgtagDB_CL_SEQ.fasta (OK output); mmseqs result2msa csgtagDB csgtagDB csgtagDB_CL csgtagDB_CL_MSA (OK output). I hope that this is an easy code fix. mmseqs is great open-source clustering software that can be run efficiently on my desktop. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/319:1161,install,installed,1161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/319,1,['install'],['installed']
Deployability,## Expected Behavior. - indexdb command should process RNA sequences and report k-mers of size 15; - a search with a RNA sequence on this database should finish gracefully. ## Current Behavior. - indexdb on RNA sequences treats them as protein sequence (?) and creates k-mers of size 6; - a search with a RNA sequence on this database results in an error. ## Steps to Reproduce (for bugs). 1. Install v5-2e4efbf of MMseqs2-App; ```; cd /opt/mmseqs; git clone https://github.com/soedinglab/MMseqs2-App.git; cd MMseqs2-App; git checkout v5-2e4efbf; ```; 3. Create `/opt/mmseqs/MMseqs2-App/docker-compose/databases/pdb_rna_sequence.fasta` with some test RNA sequences:; ```; >4QEI_2; GCGCCGCUGGUGUAGUGGUAUCAUGCAAGAUUCCCAUUCUUGCGACCCGGGUUCGAUUCCCGGGCGGCG; >6Q8V_1; GGCGAAGAACCGGGGAGCC; >5DO4_3; GGGAAXAAAGXUGAAGUXXUUAXXX; >1VQL_1; UUGGCUACUAUGCCAGCUGGUGGAUUGCUCGGCUCAGGCGCUGAUGAAGGACGUGCCAAGCUGCGAUAAGCCAUGGGGAGCCGCACGGAGGCGAAGAACCAUGGAUUUCCGAAUGAGAAUCUCUCUAACAAUUGCUUCGCGCAAUGAGGAACCCCGAGAACUGAAACAUCUCAGUAUCGGGAGGAACAGAAAACGCAAUGUGAUGUCGUUAGUAACCGCGAGUGAACGCGAUACAGCCCAAACCGAAGCCCUCACGGGCAAUGUGGUGUCAGGGCUACCUCUCAUCAGCCGACCGUCUCGACGAAGUCUCUUGGAACAGAGCGUGAUACAGGGUGACAACCCCGUACUCGAGACCAGUACGACGUGCGGUAGUGCCAGAGUAGCGGGGGUUGGAUAUCCCUCGCGAAUAACGCAGGCAUCGACUGCGAAGGCUAAACACAACCUGAGACCGAUAGUGAACAAGUAGUGUGAACGAACGCUGCAAAGUACCCUCAGAAGGGAGGCGAAAUAGAGCAUGAAAUCAGUUGGCGAUCGAGCGACAGGGCAUACAAGGUCCCUCGACGAAUGACCGACGCGCGAGCGUCCAGUAAGACUCACGGGAAGCCGAUGUUCUGUCGUACGUUUUGAAAAACGAGCCAGGGAGUGUGUCUGCAUGGCAAGUCUAACCGGAGUAUCCGGGGAGGCACAGGGAAACCGACAUGGCCGCAGGGCUUUGCCCGAGGGCCGCCGUCUUCAAGGGCGGGGAGCCAUGUGGACACGACCCGAAUCCGGACGAUCUACGCAUGGACAAGAUGAAGCGUGCCGAAAGGCACGUGGAAGUCUGUUAGAGUUGGUGUCCUACAAUACCCUCUCGUGAUCUAUGUGUAGGGGUGAAAGGCCCAUCGAGUCCGGCAACAGCUGGUUCCAAUCGAAACAUGUCGAAGCAUGACCUCCGCCGAGGUAGUCUGUGAGGUAGAGCGACCGAUUGGUGUGUCCGCCUCCGAGAGGAGUCGGCACACCUGUCAAACUCCAAACUUACAGACGCCGUUUGACGCGGGGAUUCCGGUGCGCGGGGUAAGCCUGUGUACCAGGAGGGGAACAACCCAGAGAUAGGUUAAGGUCCCCAAGUGUGGAUUAAGUGUAAUCCUCUGAAGGUGGUCUCGAGCCCUAGACAGCCGGGAGGUGAGCUUAGAAG,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:393,Install,Install,393,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['Install'],['Install']
Deployability,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/541:39,update,update,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541,17,"['Release', 'configurat', 'update']","['Release', 'configuration', 'update', 'updated', 'updates']"
Deployability,"## Expected Behavior. Created a `idx` file with `mmseqs createindex`. Input is big, uniref30.; I was expecting the resulting `.idx.index` to show me how large each ""chunk"" in the idx database is... ## Current Behavior. ...however, sizes in .idx.index are truncated to 32-bit. ## Steps to Reproduce (for bugs). I did not create the idx file, I only get to inspect the idx.index afterwards.; So, we have 3 files; ```; 214G uniref30_2302_db.idx; 4 uniref30_2302_db.idx.dbtype; 506 uniref30_2302_db.idx.index; ```; ```; $ cat uniref30_2302_db.idx.index. 0	0	3; 1	4096	49; 2	8192	4331; 3	162806448128	1075201; 4	162419372032	387072001; 5	24576	1016217777; 6	1016246272	1492528074; 7	6803742720	1236666921; 8	16630345728	1431766172; 9	162807525376	3738374247; 10	209495576576	1650065417; 12	228709240832	9; 13	228709244928	9; 14	220025933824	93370172; 15	219735580672	9; 16	219735584768	290347937; 18	99666493440	1236666921; 19	109493096448	250490302; 20	99666493440	1236666921; 21	109493096448	250490302; 22	20480	41; 23	16384	1; 24	152693260288	1016217777; 25	153709481984	119952652; ```. Copy pasta that into LibreOffice or whatever, add up the length column: adds up to only 15 GB ish!. Lets look at key 9 aka `ENTRIES` and the following key 10 aka `ENTRIESOFFSETS`.; Their offsets are `162807525376` and `209495576576`, ie `ENTRIES` should be of size 209495576576-162807525376=46688051200 but `index` says it's 3738374247 ie 10x too small.; Correct size in hex is: ADED32000 and size in index DED31067:; ```; A_DED32000; DED31067; ```; ie. the leading bits got truncated off. The few extra bytes difference are from rounding up to page boundary. On linux. Installed from prebuilt `https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz`. Not sure where and how this happens... the code looks fine. ; There is one 32-bit `length` here https://github.com/soedinglab/MMseqs2/blob/master/src/commons/DBReader.h#L61 but i'm not sure how it would come into play with creating the `.idx.index`.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/868:1655,Install,Installed,1655,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/868,1,['Install'],['Installed']
Deployability,"## Expected Behavior. I am following this tutorial https://github.com/soedinglab/MMseqs2/wiki/Tutorials#metagenomic-pathogen-detection , specially the **'Annotating the catalogue'** section, I followed this to search for Pfam domains in several genomes. The pipeline looks great and worked fine. From the tutorial, I understood column 5 is the e-value, the first 2 are self-explanatory and I am also familiar with the blast output but in this case I got 11 columns and I am not fully sure this tsv is similar. . My question is can I have a list of all the columns so I can parse it accordingly? Thanks ; ; Sorry if this info is elsewhere but I couldn't find it I also searched here the issues but I couldn't find it. ## Current Behavior. I got a tsv file with rows like this. `genome1 PF20143.1 100 0.412 3.484E-23 156 291 298 73 205 259`. ## Steps to Reproduce (for bugs). ## MMseqs Output (for bugs). I followed this tutorial https://github.com/soedinglab/MMseqs2/wiki/Tutorials#metagenomic-pathogen-detection no bug or anomaly in this case. ## Context. Sorry if the question is similar to https://github.com/soedinglab/MMseqs2/issues/434 but I don't even have the list of column headers in this cae. . ## Your Environment. MMseqs2 Version: 13.45111; Ubuntu 20.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/458:258,pipeline,pipeline,258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/458,1,['pipeline'],['pipeline']
Deployability,"## Expected Behavior. I expect `--split 16` for `mmseqs createindex` to generate 16 `*.idx` files. Instead, I'm getting 18:. ```; mmseqs_tax_target/mmseqs_tax.db.idx.0; mmseqs_tax_target/mmseqs_tax.db.idx.1; mmseqs_tax_target/mmseqs_tax.db.idx.10; mmseqs_tax_target/mmseqs_tax.db.idx.11; mmseqs_tax_target/mmseqs_tax.db.idx.12; mmseqs_tax_target/mmseqs_tax.db.idx.13; mmseqs_tax_target/mmseqs_tax.db.idx.14; mmseqs_tax_target/mmseqs_tax.db.idx.15; mmseqs_tax_target/mmseqs_tax.db.idx.16; mmseqs_tax_target/mmseqs_tax.db.idx.17; mmseqs_tax_target/mmseqs_tax.db.idx.2; mmseqs_tax_target/mmseqs_tax.db.idx.3; mmseqs_tax_target/mmseqs_tax.db.idx.4; mmseqs_tax_target/mmseqs_tax.db.idx.5; mmseqs_tax_target/mmseqs_tax.db.idx.6; mmseqs_tax_target/mmseqs_tax.db.idx.7; mmseqs_tax_target/mmseqs_tax.db.idx.8; mmseqs_tax_target/mmseqs_tax.db.idx.9; ```. Pipeline software (eg., snakemake) generally requires keeping track of all (important) output files produced; otherwise, untracked output files can accidentally be deleted, which is is causing some downstream problems (eg., seg-fault errors for `mmseqs taxonomy`). . ## Steps to Reproduce (for bugs). ```; mmseqs createindex --threads 8 --split 16 mmseqs_tax.db mmseqs_tax_target/tmp/; ```. ## Your Environment. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 1_gnu conda-forge; bzip2 1.0.8 h7f98852_4 conda-forge; ca-certificates 2021.1.19 h06a4308_1; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 h0b5b191_1005 conda-forge; libffi 3.3 h58526e2_2 conda-forge; libgcc-ng 9.3.0 h2828fa1_18 conda-forge; libgomp 9.3.0 h2828fa1_18 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; libstdcxx-ng 9.3.0 h6de172a_18 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; mmseqs2 13.45111 h95f258a_1 bioconda; openssl 1.1.1k h7f98852_0 conda-forge; pigz 2.6 h27826a3_0 conda-forge; seqkit 0.15.0 0 bioconda; seqtk 1.3 h5bf99c6_3 bioconda; wget 1.20.1 h22169c7_0 conda-forge; zlib 1.2.11 h516909a_1010 conda-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432:845,Pipeline,Pipeline,845,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432,1,['Pipeline'],['Pipeline']
Deployability,"## Expected Behavior. I expected to run an alignment with `mmseqs search` and then convert the alignment into a custom tabular format with `mmseqs convertalis`. ## Current Behavior. Running `mmseq convertails` fails with `Can not open index file seqDB.index`. ## Steps to Reproduce (for bugs). Download refseq representative microbial genomes:. ```; curl https://www.ncbi.nlm.nih.gov/projects/r_gencoll/ftp_service/nph-gc-ftp-service.cgi/\?HistoryId\=NCID_1_163497961_130.14.18.97_5555_1588507183_4102358427_0MetA0_S_HStore\&QueryKey\=1\&ReleaseType\=RefSeq\&FileType\=GENOME_FASTA\&Flat\=true >genomes.tar; tar xf genomes.tar; ```. Generate the index:. ```; mmseqs createdb ncbi-genomes-2020-05-03/*fna.gz seqDB; mmseqs createindex --threads 48 --search-type 2 seqDB tmp; ```. Align anything, like this holliday junction resolvase:. ```; >1FZR_1|Chains A,B,C,D|ENDONUCLEASE I|Enterobacteria phage T7 (10760); VGAFRSGLEDKVSKQLESKGIKFEYEEWKVPYVIPASNHTYTPDFLLPNGIFVKTKGLWESDDRKKHLLIREQHPELDIRIVFSSSRTKLYKGSPTSYGEFCEKHGIKFADKLIPAEWIKEPKKEVPFDRLKRKGGKK; ```. ```; mmseqs createdb query.fa queryDB; mmseqs search -s 7.5 --max-seqs 2147483647 -a 1 queryDB seqDB alignDB tmp; ```. Now, we try to extract the alignment information:. ```; mmseqs convertalis queryDB seqDB alignDB aln.tab; ... # error; Can not open index file seqDB.index!; ```. ## Context. Why am I missing the .index file? This is a rather large target sequence set, and so I see things are broken up into many smaller index files. But there is not one main .index. ## Your Environment. This is a recent debian system (not sure which version) and I'm running a build of mmseqs that I set up in guix. https://github.com/ekg/guix-genomics/blob/master/mmseqs2.scm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/305:538,Release,ReleaseType,538,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/305,1,['Release'],['ReleaseType']
Deployability,"## Expected Behavior. I want to remove a sequence that is a substring of a longer sequence. Looking at https://github.com/soedinglab/MMseqs2/issues/104. I can use `--min-seq-id 1.0 -c 0.9 --cov-mode 1`. So give a `test` file like:; ```; >a; ATTGCATCGAGCAGCGACGAGCTATCGACGATCGATCGATCGATCGATGCATCGATGCATCGATCGATCGATCGTACGATGCATTTTTACGAGCATCGGA; >b; ATTGCATCGAGCAGCGACGAGCTAT; ```. Where `>b` is a substring of `>a`, and it should be removed. ## Current Behavior. If I run:; ```bash; mmseqs easy-cluster test t_OUT t_tmp --min-seq-id 1 --cov-mode 1 -c 0.9; ```. And check the clusters, I still have two clusters:; ```bash; $ cat t_OUT_cluster.tsv; a a; b b. $ cat t_OUT_rep_seq.fasta; >a; ATTGCATCGAGCAGCGACGAGCTATCGACGATCGATCGATCGATCGATGCATCGATGCATCGATCGATCGATCGTACGATGCATTTTTACGAGCATCGGA; >b; ATTGCATCGAGCAGCGACGAGCTAT; ```. ## Steps to Reproduce (for bugs). You can execute:; ```bash; echo "">a"" > test; echo ""ATTGCATCGAGCAGCGACGAGCTATCGACGATCGATCGATCGATCGATGCATCGATGCATCGATCGATCGATCGTACGATGCATTTTTACGAGCATCGGA"" >> test; echo "">b"" >> test; echo ""ATTGCATCGAGCAGCGACGAGCTAT"" >> test. mmseqs easy-cluster test t_OUT t_tmp --min-seq-id 1 --cov-mode 1 -c 0.9; ```. ## Your Environment. I am using a conda installation on a conda env (on a linux server), with version:; ```; MMseqs Version: 15.6f452; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/794:1199,install,installation,1199,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/794,1,['install'],['installation']
Deployability,## Expected Behavior. I would like to query a transcriptome against NT db and retrieve taxonomy. I generated the NT db according to your docs (with compression enabled). Then I convert my transcriptome to a mmseqs2 db and try to query via:. `mmseqs taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp`. But I get a segfault... UPDATE:; I also get a segfault when executing `search` or `taxonomy` against a pre-compiled database downloaded via `databases`.; UPDATE 2:; Also happens with the latest Docker image.; UPDATE 3:; Tried a very small toy fasta. Also segfaults. ## Current Behavior. Execution of `mmseqs taxonomy` fails with segfault. It tried several versions of mmseqs2 binary:; * Last provided AVX2; * Last provided SSE4; * Self-compiled AVX2; * Older version (Release 12-113e3 - AVX2). -> All fail. ## Steps to Reproduce (for bugs). Create DB for query:; `mmseqs createdb ../transcripts.fasta Transcripts_mmseqs2`; Get taxonomy:; `mmseqs taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp`. These are the files I generated from NT as the target database (does anything look off?):; ```; -rw-rw-r-- 1 user user 129522020819 Apr 14 17:03 nt.fnaDB; -rw-rw-r-- 1 user user 4 Apr 14 17:03 nt.fnaDB.dbtype; -rw-rw-r-- 1 user user 1766255879 Apr 14 17:03 nt.fnaDB.index; -rw-rw-r-- 1 user user 1657557037 Apr 14 17:05 nt.fnaDB.lookup; -rw-rw-r-- 1 user user 9 Apr 14 16:58 nt.fnaDB.source; -rw-rw-r-- 1 user user 7644438631 Apr 14 16:58 nt.fnaDB_h; -rw-rw-r-- 1 user user 4 Apr 14 16:58 nt.fnaDB_h.dbtype; -rw-rw-r-- 1 user user 1609915648 Apr 14 17:03 nt.fnaDB_h.index; -rw-rw-r-- 1 user user 1043159832 Apr 14 17:21 nt.fnaDB_mapping; -rw-rw-r-- 1 user user 640718438 Apr 14 17:17 nt.fnaDB_taxonomy; ```. ## MMseqs Output (some paths & filenames redacted); ```; Create directory tmp; taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp . MMseqs Version: 	19064f27c8d86fcdcd3daad60f6db70f6360f30b; ORF filter 	1; ORF filter e-v,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438:350,UPDATE,UPDATE,350,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438,4,"['Release', 'UPDATE']","['Release', 'UPDATE']"
Deployability,"## Expected Behavior. I'm doing a search of proteins against another protein database using high sensitivity and high number of iterations (`-s 7.5 --num-iterations 4`). ## Current Behavior. I get an error:. ```; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; /scratch/aoh/qwfp/4982015852642442181/blastpgp.sh: line 81: 24849 Aborted (core dumped) $RUNNER ""$MMSEQS"" result2profile ""$QUERYDB"" ""$2"" ""$TMP_PATH/aln_0"" ""$TMP_PATH/profile_$STEP"" ${TMP}; ```. However, when I use `--num-iterations 1`, I don't get the error. ## Steps to Reproduce (for bugs). I took a small sample of sequences to reproduce the error. ```; mmseqs createdb two.fa two.db; mmseqs createdb rest.fa rest.db; mmseqs search two.db rest.db two_v_rest.db /scratch/aoh/qwfp -s 7.5 --num-iterations 4; ```. Here are the files used to recreate the error. [rest.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890804/rest.fa.txt); [two.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890805/two.fa.txt). ## MMseqs Output (for bugs). [mmseqs.err.txt](https://github.com/soedinglab/MMseqs2/files/1890802/mmseqs.err.txt); [mmseqs.out.txt](https://github.com/soedinglab/MMseqs2/files/1890803/mmseqs.out.txt). ## Your Environment. * Git commit used: `2cfdedc95f6a998826f45a7594971751a5e535f3`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * Operating system and version: Fedora release 24 server edition. Here are the outputs from `make` and `cmake` from when I compiled mmseqs like so:. ```; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. 1> cmake.out.txt 2> cmake.err.txt; make -j32 1> make.out.txt 2> make.err.txt; make install 1> make_install.out.txt 2> make_install.err.txt; ```. [mmseqs_build_output.tar.gz](https://github.com/soedinglab/MMseqs2/files/1890845/mmseqs_build_output.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/79:1461,release,release,1461,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79,3,"['RELEASE', 'install', 'release']","['RELEASE', 'install', 'release']"
Deployability,"## Expected Behavior. I'm trying to cluster my large protein sequence file (>45billion entries). I want to know how to set the parameters to cluster as soon as possible, and what kind of computer configuration is needed to run the data. And I also want to know, will the running time still be linear in the case of 30 times the test data set of paper ""Clustering huge protein sequence sets in linear time"". ## Current Behavior; mmseqs linclust $input tmp --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1000G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/623:196,configurat,configuration,196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/623,1,['configurat'],['configuration']
Deployability,"## Expected Behavior. I'm trying to run `clusterupdate`, but I'm running into the error:. ```; diffseqdbs /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/user_genes/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/removedSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/mappingSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs --use-seq-id 0 --threads 80 --compressed 0 -v 3. Time for processing: 0h 0m 0s 170ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 94ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. [=================================================================] 68.86K 0s 267ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 402ms; Time for processing: 0h 0m 0s 980ms; ===================================================; ======== ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333:686,Update,Update,686,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333,1,['Update'],['Update']
Deployability,"## Expected Behavior. Running a cluster analysis in all 128 cores. ## Current Behavior. I'm running a clustering analysis to leave out redundant sequences in a big dataset of approximately 10 millon DNA sequences of lengths varying between 1150 and 1250 bp. The problem I'm having is that it looks like the program is running in a single core instead of the 128 threads I tell the program to use, hence it takes a really long time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:773,Release,Release,773,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['Release'],['Release']
Deployability,"## Expected Behavior. The generation of LCA taxonomy through the following command. . ```sh; mmseqs taxonomy --threads 36 --search-type 3 \; --lca-ranks species:genus:family:order:class:phylum:superkingdom \; data/annotation/putative_genes/nuc_mmseq_DB \; ${dbdir}/gtdb_54kDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```. The taxonomy DB is made through the last release of GTDB without applying a cluster, as discussed in #244 . . The db is as follows: . ```; -rw-r--r-- 1 aauladell bio 54G 28 nov 11:05 gtdb_54kDB; -rw-r--r-- 1 aauladell bio 4 28 nov 11:07 gtdb_54kDB.dbtype; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 3,0G 28 nov 11:00 gtdb_54kDB_h; -rw-r--r-- 1 aauladell bio 4 28 nov 11:01 gtdb_54kDB_h.dbtype; -rw-r--r-- 1 aauladell bio 3,9G 28 nov 11:09 gtdb_54kDB_h.index; -rw-r--r-- 1 aauladell bio 4,3G 28 nov 11:08 gtdb_54kDB.index; -rw-r--r-- 1 aauladell bio 4,6G 28 nov 11:14 gtdb_54kDB.lookup; -rw-r--r-- 1 aauladell bio 2,7G 28 nov 15:43 gtdb_54kDB_mapping; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_merged.dmp; -rw----r-- 1 aauladell bio 1,8M 28 nov 15:43 gtdb_54kDB_names.dmp; -rw----r-- 1 aauladell bio 3,0M 28 nov 15:43 gtdb_54kDB_nodes.dmp; ```. ## Current Behavior. Instead, it raises an `out_of_range` error with a `terminate called recursively` after running for 20 hours. . ## MMseqs Output (for bugs). Raises the following error: ; ```; terminate called recursively; terminate called after throwing an instance of 'std::out_of_range/mnt/lustre/scratch/aauladell/databases/gtdb-r89_54k/tmp//14536420861195881021/taxonomy.sh: line 99: 34258 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```. The output log: ; [mmseqs_lca_log.txt](https://github.com/soedinglab/MMseqs2/files/3955181/mmseqs_lca_log.txt). ## Context; Taxonomic classification of a gene catalog with around 500000 seqs. ; ; ## Your Environment. MMseqs2 Version: 0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Which MMseqs versio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256:363,release,release,363,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256,1,['release'],['release']
Deployability,## Expected Behavior. Using the `--max-seq-length` parameter in `mmseqs linclust` will only return sequences with a length smaller than the setting. ## Current Behavior. Even with the default parameter linclust will return larger sequences (up to 600K nt in my case). Also choosing very large values triggers an integer overflow. ## Steps to Reproduce (for bugs). ```bash; mmseqs linclust foods foods_99 /tmp --cov-mode 0 -c 0.8 --min-seq-id 0.99 --threads 20 --split-memory-limit 250G --max-seq-len 3000000000; ```. ## MMseqs Output (for bugs). ```; ...; Seq. id. threshold 0.99 ; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length -1294967296; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; ...; ```. ## Context. mmseqs version 13.45111. `conda info`:. ```; active environment : metagenomics; active env location : /users/cdiener/miniconda3/envs/metagenomics; shell level : 3; user config file : /users/cdiener/.condarc; populated config files : ; conda version : 4.10.3; conda-build version : not installed; python version : 3.7.8.final.0; virtual packages : __linux=4.15.0=0; __glibc=2.27=0; __unix=0=0; __archspec=1=x86_64; base environment : /users/cdiener/miniconda3 (writable); conda av data dir : /users/cdiener/miniconda3/etc/conda; conda av metadata url : None; channel URLs : https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /users/cdiener/miniconda3/pkgs; /users/cdiener/.conda/pkgs; envs directories : /users/cdiener/miniconda3/envs; /users/cdiener/.conda/envs; platform : linux-64; user-agent : conda/4.10.3 requests/2.26.0 CPython/3.7.8 Linux/4.15.0-121-generic ubuntu/18.04.5 glibc/2.27; UID:GID : 52778:1127; netrc file : None; offline mode : False; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/499:1098,install,installed,1098,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499,1,['install'],['installed']
Deployability,"## Expected Behavior. [Peptide_seqs.fasta.txt](https://github.com/soedinglab/MMseqs2/files/6430389/Peptide_seqs.fasta.txt); I tried to use the attached fasta file to do the easy-cluster using the following command:; mmseqs easy-cluster Peptide_seqs.fasta Peptide_seqs_clu tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. ## Current Behavior; Alignment step died; Linclust died; Search died. ## Steps to Reproduce (for bugs); mmseqs easy-cluster Peptide_seqs.fasta Peptide_seqs_clu tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. ## MMseqs Output (for bugs); [test_MMseqs2.out.txt](https://github.com/soedinglab/MMseqs2/files/6430406/test_MMseqs2.out.txt). ## Your Environment; Install MMseqs2 on an HPC with conda install -c conda-forge -c bioconda mmseqs2, which was successful. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/449:664,Install,Install,664,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449,2,"['Install', 'install']","['Install', 'install']"
Deployability,"## Expected Behavior. `asan` and `msan` should not detect issues. ## Current Behavior. We ran address sanitizer and memory sanitizer on mmseqs2 and they flagged a few issues. #### asan. 1. ODR violation over `binary_name`.; 2. Possible signed overflow in random number generation using unsigned integer types.; 3. '[initialisation order fiasco](https://github.com/google/sanitizers/wiki/AddressSanitizerInitializationOrderFiasco)'. #### msan; 4. String not terminated. ## Fixes. We fixed these issues, respectively, by:. 1. Changing [this line](https://github.com/soedinglab/MMseqs2/blob/master/src/mmseqs.cpp#L5) to:; ```; __attribute__ ((weak)) const char* binary_name = ""mmseqs"";; ```. 2. Applying this patch to [lib/alp/njn_random.cpp](https://github.com/soedinglab/MMseqs2/blob/master/lib/alp/njn_random.cpp):. ```; --- a/lib/alp/njn_random.cpp; +++ b/lib/alp/njn_random.cpp; @@ -50,19 +50,19 @@ namespace {; ; 	const size_t r_off = 12;; ; -	long	state [33] = {; -	static_cast <long> (0xd53f1852), static_cast <long> (0xdfc78b83), static_cast <long> (0x4f256096), static_cast <long> (0xe643df7),; -	static_cast <long> (0x82c359bf), static_cast <long> (0xc7794dfa), static_cast <long> (0xd5e9ffaa), static_cast <long> (0x2c8cb64a),; -	static_cast <long> (0x2f07b334), static_cast <long> (0xad5a7eb5), static_cast <long> (0x96dc0cde), static_cast <long> (0x6fc24589),; -	static_cast <long> (0xa5853646), static_cast <long> (0xe71576e2), static_cast <long> (0xdae30df), static_cast <long> (0xb09ce711),; -	static_cast <long> (0x5e56ef87), static_cast <long> (0x4b4b0082), static_cast <long> (0x6f4f340e), static_cast <long> (0xc5bb17e8),; -	static_cast <long> (0xd788d765), static_cast <long> (0x67498087), static_cast <long> (0x9d7aba26), static_cast <long> (0x261351d4),; -	static_cast <long> (0x411ee7ea), static_cast <long> (0x393a263), static_cast <long> (0x2c5a5835), static_cast <long> (0xc115fcd8),; -	static_cast <long> (0x25e9132c), static_cast <long> (0xd0c6e906), static_cast <long> (0xc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661:706,patch,patch,706,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661,1,['patch'],['patch']
Deployability,"## Expected Behavior. `mmseqs databases eggNOG /mmseqs/eggnog tmp --threads 16` should prepare the eggNOG database. ## Current Behavior. The following error is produced:. ```; databases eggNOG /mmseqs/eggnog tmp --threads 16. MMseqs Version: 	11.e1a1c; Threads 	16. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6440; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6192; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6440 0 --:--:-- --:--:-- --:--:-- 6440; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6192; tar2db tmp/4327021748121712355/bacteria tmp/4327021748121712355/archea tmp/4327021748121712355/eukaryota tmp/4327021748121712355/viruses tmp/4327021748121712355/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --compressed 0 -v 3. Cannot open file tmp/4327021748121712355/bacteria; Error: msa2profile died; ```. mmseqs installed via Conda. All other databases can be prepared as expected, just not eggNOG.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/344:1241,install,installed,1241,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/344,1,['install'],['installed']
Deployability,## Expected Behavior. createdb creates a database with no error. ## Current Behavior. createdb stalls and stops reporting once 10962815327 sequences have been added and fails to make progress. Is there a limit to the number of sequences that can be in a database?. ## Steps to Reproduce (for bugs). `/custom_install/installations/mmseqs-nonmpi/MMseqs2/build/bin/mmseqs createdb ../2020-04-19-in.fa/part-* inDB --createdb-mode 1`. ## MMseqs Output (for bugs). ```; MMseqs Version: 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; Database type 0; Shuffle input database true; Createdb mode 1; Offset of numeric ids 0; Compressed 0; Verbosity 3; Shuffle database can not be combined with --createdb-mode 0.; We recompute with --shuffle 0.; Converting sequences; [10962815327] 2h 14m 39s 271ms; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303:316,install,installations,316,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303,1,['install'],['installations']
Deployability,"## Expected Behavior. mmseqs easy-cluster should finish without errors. ## Current Behavior. ```; Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 972066 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1) Download the FASTA at this link https://drive.google.com/file/d/1YPNMj2gL8zNUv9aiRo7dLJawanDWCIb3/view?usp=drive_link; 2) Install mmseqs2 v15.6f452; 3) Run:; ```; mmseqs easy-cluster all_sequences.fasta mmseqs_output tmp --cluster-mode 1 --cluster-reassign 1 --threads 24 -c 0.0 --cov-mode 5 --min-seq-id 0.8; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Create directory tmp; easy-cluster /hps/nobackup/iqbal/dander/amira_panRG_pipeline/Escherichia_coli_panRG_c_0.8_l_0_train_AMR_alleles_removed_mmseqs2/all_sequences.fasta mmseqs_output/mmseqs_output tmp --cluster-mode 1 --cluster-reassign 1 --threads 24 -c 0.0 --cov-mode 5 --min-seq-id 0.8 . MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0; Coverage mode 5; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:714,Install,Install,714,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['Install'],['Install']
Deployability,"## Expected Behavior; A successful install into the conda invironment. ## Current Behavior; Calling `conda install -c conda-forge -c bioconda mmseqs2` is returning:. ```; PackagesNotFoundError: The following packages are not available from current channels:. - mmseqs2. Current channels:. - https://conda.anaconda.org/conda-forge/linux-aarch64; - https://conda.anaconda.org/conda-forge/noarch; - https://conda.anaconda.org/bioconda/linux-aarch64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-aarch64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/r/linux-aarch64; - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. ## Steps to Reproduce (for bugs); 1. Open a terminal and activate your conda environment; 2. `conda install -c conda-forge -c bioconda mmseqs2`. ## MMseqs Output (for bugs); See above ""Current Behavior"" section. ## Context; Installing via conda. ## Your Environment; I am using conda 23.5.2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/744:35,install,install,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/744,4,"['Install', 'install']","['Installing', 'install']"
Deployability,"## Expected Behavior; Align 2Gb sequence to 1Gb vertebrate genome like BLASTN.; ## Current Behavior; Stuck on `prefilter` for days.; ## Steps to Reproduce (for bugs); The command I used is:; ```; mmseqs easy-search ${Query} ${Target} altseq.toref tmp --min-seq-id 0.9 -c 0.8 --cov-mode 1 --max-seq-len 100000000 --exact-kmer-matching 1 --search-type 3 --mask 0 --threads 16 --split-memory-limit 96G --format-output query,target,fident,nident,qcov,tcov,evalue,bits; ```. ## Context; Considering the ultra-fast speed of MMseqs2, I want to use MMseqs2 to replace BLASTN in my pipeline. In my case, the reference genome is about 1 Gb (max chromosome ~45Mb), and the query sequences are about 2 Gb (max length: ~3.5Mb, mean length:~60Kb). Could I do this with MMseqs2? If so, what parameters do I need to adjust? and how long should I expect to complete this alignment?. ## Your Environment; * MMseqs2 Version: 13.45111. Build by conda. **Server specifications**; * 64bit: Yes; * AVX2: Yes; * SSE4.1: Yes; * 40 Cores; * 768 GB RAM. **Operating system and version:**; * openSUSE Leap 15.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/618:573,pipeline,pipeline,573,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/618,1,['pipeline'],['pipeline']
Deployability,"## Expected Behavior; Cluster a fasta input using `easy-cluster` because `linclust` sometimes removes important sequences. ## Current Behavior; \> 50% tested fastas die with a result2flat error. ```; <BASEDIR>/tmp//13463384132153814128/easycluster.sh: line 48: 36628 Segmentation fault (core dumped) ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_seqs"" ""${TMP_PATH}/all_seqs.fasta"" ${VERBOSITY_PAR}; Error: result2flat died; ```. ## Steps to Reproduce (for bugs); Cluster a [fasta (link)](https://gist.github.com/xonq/88b4d1f90c438b9b99f2d0e27bd3c604) with `easy-cluster` via a python subprocess. Full paths changed to <BASE_DIR> in log.; In this specific case:; `easy-cluster <BASE_DIR>/cormil2.1_9109.fa <BASE_DIR>/working/cormil2.1_9109_c0.4_v0.65 <BASE_DIR>/working/tmp/ --min-seq-id 0.65 --threads 1 --compressed 1 --cov-mode 0 -c 0.4 -e 0.1 -s 7.5 `. ## MMseqs Output (for bugs); [Error log](https://gist.github.com/xonq/51e40f3edf79ebd1531a725b26c52654). ## Context; I'm running a pipeline that calls on `easy-cluster` to truncate large fastas for phylogenetic reconstruction. >50% of these runs fail with easy-cluster. I don't want to use `linclust` because I've observed that it throws out important sequences from clusters here and there. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled from miniconda via Bioconda channel; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it""; * Operating system and version: Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/617:1020,pipeline,pipeline,1020,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617,1,['pipeline'],['pipeline']
Deployability,"## Expected Behavior; Compile the specific version [MMseqs2 71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1 (May 28, 2023)](https://github.com/soedinglab/MMseqs2/archive/71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1.zip) under Linux. I encounter a similar error as [here](https://github.com/soedinglab/MMseqs2/issues/480). And the mentioned package `libgcc-ng` has been installed. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. `cd MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; export PATH=/home/liuhongbin/database/colabfoldMSA/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build/bin/:$PATH`. no errors were observed here. ## MMseqs Output (for bugs); error:. (colabfoldMSA) liuhongbin@node7:~/database/colabfoldMSA/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build$ ./bin/mmseqs; ./bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; g++ (GCC) 5.4.0; cmake version 3.28.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; uname -a | grep x86_64; Linux node7 3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; * Operating system and version:; CentOS Linux release 8 (Core). * packages in curre",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/795:358,install,installed,358,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/795,3,"['RELEASE', 'install']","['RELEASE', 'install', 'installed']"
Deployability,"## Expected Behavior; Completes databases workflow, creating GTDB database. ## Current Behavior; Error occurs near the end of the workflow.; Files created: ```gtdb gtdb.dbtype gtdb_h gtdb_h.dbtype gtdb_h.index gtdb.index gtdb.source tmp```. ## Steps to Reproduce (for bugs); ```mmseqs databases GTDB gtdb tmp```. ## MMseqs Output (for bugs). ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	13.45111; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	128; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 43.1M 100 43.1M 0 0 4930k 0 0:00:08 0:00:08 --:--:-- 6278k. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed. 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; 100 334 100 334 0 0 6185 0 --:--:-- --:--:-- --:--:-- 6185; tar2db tmp/18048483634160780024/gtdb.tar.gz tmp/18048483634160780024/tardb --tar-include faa$ --threads 128 -v 3 . Time for merging to tardb: 0h 0m 0s 113ms; Time for merging to tardb.lookup: 0h 0m 0s 110ms; Time for processing: 0h 0m 0s 443ms; createdb tmp/18048483634160780024/tardb gtdb --compressed 0 -v 3 . Converting sequences. Time for merging to gtdb_h: 0h 0m 0s 25ms; Time for merging to gtdb: 0h 0m 0s 24ms; Database type: Nucleotide; The input files have no entry: - tmp/18048483634160780024/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died; The process 'mmseqs' has failed.; ```. ## Context; Downloading GTDB db. ## Your Environment; Using conda installation of mmseqs (MMseqs2 Version: 13.45111); 128cpu/1000GB mem. Support for AVX2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561:1625,install,installation,1625,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561,1,['install'],['installation']
Deployability,"## Expected Behavior; Completion of download and db creation for GTDB. ## Current Behavior; I installed release 14-7e284 via conda yesterday and tried to download various databases via the databases module. The following error messages were generated for GTDB; other databases were generated without errors. I thought problems with GTDB were fixed in previous versions (e.g., see issue [#742](https://github.com/soedinglab/MMseqs2/pull/742)), but perhaps changes were reverted in the latest release via conda?. Here are the relevant error messages (full output also included below):. 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseComma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:94,install,installed,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,5,"['install', 'release']","['installed', 'release', 'releases']"
Deployability,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/501:71,update,update,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501,9,['update'],"['update', 'updated', 'updatedDB']"
Deployability,"## Expected Behavior; Hi there! I am hoping to cluster a fasta file of contigs from an assembly of 134 samples. . ## Current Behavior; Getting error message that entries are longer than max sequence length of 65535 ([see error output](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e)). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. Command: `mmseqs easy-cluster scaffolds.fasta MRN_clustered tmp`. ## MMseqs Output (for bugs); [See output here](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e). ## Context; Am I missing an option for controlling max sequence length in mmseqs? Allowing for large contigs would be helpful in this context of a cross-assembly from 134 samples, containing 422691 sequences ranging in length from 679 kbp to 127 bp. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: MMseqs2 Version: 8.fac81; * Which MMseqs version was used: Installed via miniconda on ubuntu server. ; * Server specifications: 80 core server, 1.5 TB memory; * Operating system and version: ubuntu 16.04.5. Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/183:1049,Install,Installed,1049,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/183,1,['Install'],['Installed']
Deployability,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480:118,install,install,118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480,2,['install'],"['install', 'installed']"
Deployability,"## Expected Behavior; I am trying to cluster based on similarity (`--similarity-type 1`) instead of the default identity (`--similarity-type 2`) . ## Current Behavior; Using either parameter gives the same clustering output. . ## Steps to Reproduce (for bugs); Input: ; [artificial6.txt](https://github.com/soedinglab/MMseqs2/files/5995767/artificial6.txt); commands:; ` mmseqs createdb artificial6.fasta in/DB_in`; ` mmseqs cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1`; or; ` mmseqs cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2`. Both results lead to identical .tsv files. Update: adding `--comp-bias-corr 0` gives similar results. ## MMseqs Output (for bugs). similarity type 1: ; Create directory clu/sim1_tmp; cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:805,Update,Update,805,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['Update'],['Update']
Deployability,"## Expected Behavior; I am trying to cluster small protein fragments (7-25 AA long) with MMseqs2 using the most sensitive settings. As I am only interested in highly similar proteins, I use a high ID threshold and expect lots of clusters. ## Current Behavior; However, the amount of clusters produced exceeds the number of unique sequences present in my data. Further inspection shows that this is because **_100% identical sequences end up in different clusters_**. ## Steps to Reproduce (for bugs); These are the steps I follow starting from my fasta file and ending in clustering results:. `mmseqs createdb <fasta-file> fasta_in`; `mmseqs cluster fasta_in fasta_clustered tmp --min-seq-id 0.9`. These unexpected results are also found when:; - using a lower `--min-seq_id` of 0.8;; - using the non-standard similarity type `--similarity type` 1;; - using `--cluster-mode` 1. In addition, the amount of clusters produced are fluctuating heavily when the order of sequences in the FASTA file are shuffled beforehand, ranging between 250-450 using the same settings (notably, when only 246 unique sequences are present). Am I overseeing something? Do I need to reconsider my parameters given the short size of my fragments?. Update: Further inspection revealed that clustering using only a high sensitivity (`-s 7.5`) but no minimum ID threshold removes this bug, but combining this sensitivity with any ID threshold over 0.80 reintroduces the problem. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used : 96d452cb432fc4674991a48952deaf24d1787e77; * Which MMseqs version was used: Statically-compiled; * Operating system and version: linux-gnu; Ubuntu 16.04.6 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398:1225,Update,Update,1225,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398,1,['Update'],['Update']
Deployability,"## Expected Behavior; I am using mmseqs2 to cluster a list of ~4500 protein domains. My fasta file looks like this:; ```; >0; KHRNMHCKVSLLDDTVYECVVEKHAKGQDLLKRVCEHLNLLEEDYFGLAIWDNATSKTWLDSAKEIKKQVRGVPWNFTFN; >1; VEHHTFFRLTSTDTIPKSKFLALGSKFRYSGRTQAQTRQASALIDRPAPHFERTASKRASRSLDGAAAVDSADRSPRPTS; >2; ERLDGENIYIRHSNLMLEDLDKSQEEIKKHHASISELKKNFMESVPEPRPSEWDKRLSTHSPFRTLNINGQIPTGEGPPL; ...; ```. I am using the following commands to cluster them:; ```; mmseqs createdb domains.fasta domains; mkdir tmp; mmseqs cluster domains domains_clu tmp --min-seq-id 0.25; ```. When I ran this a few days ago locally on my mac, this returned 8 files (`domains_clu.0` through `domains_clu.7`), and they all had sequences. ## Current Behavior. I just installed mmseqs2 on a remote cluster and ran these commands again, and now they return 48 files (`domains_clu.0` through `domains_clu.47`), and all of them are empty except `domains_clu.0`, `domains_clu.12`, and `domains_clu.14`. The data is identical to before. ## MMseqs Output; Output for `createdb domains.fasta domains`:; ```; MMseqs Version: 	14.7e284; Database type 	0; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [4445] 0s 67ms; Time for merging to domains_h: 0h 0m 0s 36ms; Time for merging to domains: 0h 0m 0s 34ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 214ms; ```. The mmseqs cluster output is here: https://gist.github.com/lillianpetersen/b3344457890808097554467726d74e60. ## Your Environment; To install I used:; `mamba install -c conda-forge -c bioconda mmseqs2`. version:; ```; $ mmseqs version; 14.7e284; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/716:731,install,installed,731,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/716,3,['install'],"['install', 'installed']"
Deployability,"## Expected Behavior; I am using the easy cluster pipeline to cluster sequences with min-seq-id = 0.5. So, the centroids of the clusters should be less than 50% identical. . ## Current Behavior; However, when I am running a sanity check to make sure that the centroids are indeed less than 50% identical I get . 1. # Centroids with identity > 50%: ~10000; 2. # Centroids with identity < 70%: ~9000; 3. # Centroids with identity > 90%: ~500; 4. # Centroids with identity == 100%: ~70. So, identities of around 50% were expected. But anything over 90% and especially 100% identical was a surprise. ; ; ## Steps to Reproduce (for bugs); **Clustring Pipeline:** ; mmseqs easy-cluster sequences.fasta mmseqs_clustered tmp -s 7.5 -c 0.8 --cov-mode 0 --min-seq-id 0.5 --cluster-reassign --alignment-mode 3. **Sanity Check:**; 1. mmseqs createdb mmseqs_clustered_rep_seq.fasta DataBases/SeqDB; 2. mmseqs createindex DataBases/SeqDB tmp; 3. mmseqs search DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB tmp --min-seq-id 0.5 -s 7.0 -c 0.8 --cov-mode 0 --alignment-mode 3; 4. mmseqs convertalis DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB Alignment_Results --format-output ""query,target,evalue,pident""; 5. FIlter of Alignment_Results: Remove rows where QueryID == TargetID (They will always have 100% identity)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/612:50,pipeline,pipeline,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612,2,"['Pipeline', 'pipeline']","['Pipeline', 'pipeline']"
Deployability,"## Expected Behavior; I have tried different ways to install mmseqs into a Docker image, non seem to work. And using Brew works well on my local machine but inside a Docker image, it also doesn't work. I tried using the mmseqs2 docker image on Docker hub, it installed but I am currently having a ""pip install"" issue. Pip doesn't work to install other Python packages.; ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/605:53,install,install,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/605,4,['install'],"['install', 'installed']"
Deployability,"## Expected Behavior; I want to update my clusters after a database update (in which I add new sequences but also delete sequences compared to the old database). ; The clusterupdate command works, but when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result data",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272:32,update,update,32,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272,3,['update'],"['update', 'updated']"
Deployability,"## Expected Behavior; I was testing the example of `mmseqs easy-search examples/QUERY.fasta examples/DB.fasta alnRes.m8 tmp`. But I didn't see `alnRes.m8` in aimed `tmp` folder.; ## Current Behavior; ```; [lihuilin@login01 MMseqs2]$ ls; azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src util; [lihuilin@login01 MMseqs2]$ mmseqs easy-search examples/QUERY.fasta examples/DB.fasta alnResult.m8 tmp; Create directory tmp; easy-search examples/QUERY.fasta examples/DB.fasta alnResult.m8 tmp. MMseqs Version: 87e7103d289029dc3345f85ea9a4c4c6d6416e46; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 40; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Glo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:243,pipeline,pipelines,243,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['pipeline'],['pipelines']
Deployability,"## Expected Behavior; I'm running `mmseqs createdb` on a large fasta file. I have checked that every entry is ""valid"" (only valid AA characters, can be read by biopython, there are no spaces between `>` and the accession ids). I expect successful db creation or graceful error handling. . Is there a way to ignore invalid fasta entries in db creation? . ## Current Behavior; Fails with error: ""Fasta entry <entry> is invalid"". ## Steps to Reproduce (for bugs); `mmseqs createdb` . ## MMseqs Output (for bugs); ```; Fasta entry <entry> is invalid; ```. ## Your Environment; MMseqs2 Version: 13.45111; installed with conda",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763:600,install,installed,600,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763,1,['install'],['installed']
Deployability,"## Expected Behavior; I'm trying to follow the workflow in the readme for [clustering using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) but I keep getting the following error during the `search` step.; ## Current Behavior; ```; Could not get realpath of cog0303.fa_DB_CLU_0.7_0.5_repseq_h!; Error: Create profile died; ```. ## Steps to Reproduce (for bugs). ```; wget ftp://ftp.ncbi.nih.gov/pub/wolf/COGs/COG0303/cog0303.fa; touch cog0303.fa; mmseqs2/bin/mmseqs createdb cog0303.fa cog0303.fa_DB; mmseqs2/bin/mmseqs cluster cog0303.fa_DB cog0303.fa_DB_CLU_0.7_0.5 /tmp -s 6 --min-seq-id 0.7 -c 0.5 --cluster-mode 1; mmseqs2/bin/mmseqs createsubdb cog0303.fa_DB_CLU_0.7_0.5 cog0303.fa_DB cog0303.fa_DB_CLU_0.7_0.5_repseq; mmseqs2/bin/mmseqs search cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq_search /tmp --num-iterations 3 --add-self-matches; mmseqs2/bin/mmseqs clust cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq_search cog0303.fa_DB_CLU_0.7_0.5_repseq_search_clust --cluster-mode 1 -s 6; ```. ## Your Environment; I'm running this in an EC2 c5.4xlarge instance with the following OS information; ```; NAME=""Ubuntu""; VERSION=""16.04.4 LTS (Xenial Xerus)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 16.04.4 LTS""; VERSION_ID=""16.04""; HOME_URL=""http://www.ubuntu.com/""; SUPPORT_URL=""http://help.ubuntu.com/""; BUG_REPORT_URL=""http://bugs.launchpad.net/ubuntu/""; VERSION_CODENAME=xenial; UBUNTU_CODENAME=xenial; MemTotal=31897300 kB; ```; I downloaded MMseqs2 Release 6-f5a1c from github with the SSE4.1 version of the binary. Any idea what I'm doing wrong?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/131:1574,Release,Release,1574,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/131,1,['Release'],['Release']
Deployability,"## Expected Behavior; I'm using the option cluster-reassign as you suggest in the issue #397, but I had an error with deleted sequence. ## Steps to Reproduce (for bugs). `mmseqs cluster MY_DB OUTPATH/MY_CLUST OUTPATH/MY_TMP --max-seqs 400 -c 0.8 --comp-bias-corr 1 -s 4 --kmer-per-seq 80 --alignment-mode 2 --min-seq-id 0.8 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647 --cluster-mode 0 --cluster-reassign --threads 36`. ## MMseqs Output (for bugs); https://gist.github.com/jpjarnoux/895db4452f8745445add1833b9b704a6. ## Context; I'm using mmseqs2 in a pipeline. At this step I already cluster my db two times. ## Your Environment; I'm using the latest version 13.git45111",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/421:562,pipeline,pipeline,562,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/421,1,['pipeline'],['pipeline']
Deployability,"## Expected Behavior; It should compile. ## Current Behavior; It doesn't compile. ## Steps to Reproduce (for bugs); I did (after a ""git pull"" in my MMseqs2 directory):; CXX=""/usr/local/bin/g++-8"" CC=""/usr/local/bin/gcc-8"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local/biotools ../MMseqs2; make. ## MMseqs Output (for bugs); [ 41%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/sysctl.h:83,; from /usr/local/biotools/MMseqs/MMseqs2/src/commons/Util.cpp:15:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ucred.h:94:2: error: '_Atomic' does not name a type; _Atomic u_long cr_ref; /* reference count */; ^~~~~~~; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; make: *** [all] Error 2. ## Context; tried in an iMac, and a Mac Pro. Xcode 10.2, and gcc-8 (homebrew).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/182:247,RELEASE,RELEASE,247,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/182,1,['RELEASE'],['RELEASE']
Deployability,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:140,RELEASE,RELEASE,140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,1,['RELEASE'],['RELEASE']
Deployability,"## Expected Behavior; Multiple Threads are used when specified. ## Current Behavior; The threads are not fully used.; Although the output generates multiple output files, the execution time is same as the one observed when specifying --threads 1. ## Steps to Reproduce (for bugs); Install MMseqs2 using brew. `brew install mmseqs2`. ## Context; MMseqs2 installed using homebrew.; libomp: stable 9.0.1 was also installed using brew. NOTE: everything works fine when using the OSX binaries provided in the MMseqs2 web-page",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/289:281,Install,Install,281,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289,4,"['Install', 'install']","['Install', 'install', 'installed']"
Deployability,"## Expected Behavior; My colleagues and I have noticed an unexpected behavior with linclust (using the easy-linclust pipeline in particular), it appears to not be clustering identical sequences unless -c == 1 or --min-seq-id == 1 or < 0.9. We're not sure if we're misunderstanding the functionality of the linclust options or if there is a bug. Here are the FASTA contents for the sequences I have been testing with (note they are all identical):. ```; >Dupe; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe2; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe3; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; ```. ## Current Behavior; Below are a set of commands we've tested. Note that defaults for alignment-mode and cov-modes were used in the example commands, however we have tried the other modes and the same results are exhibited. The -a flag ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/206:117,pipeline,pipeline,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206,1,['pipeline'],['pipeline']
Deployability,## Expected Behavior; Need to Install the mmseqs (MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1) this particular version ; ## Current Behavior; but I am seeing there is no bin directory so I cant specify the PATH; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; cd /home/username # Navigate to your home directory; unzip MMseqs2.zip # Extract the MMseqs2 ZIP file; cd MMseqs2 # Go into the MMseqs2 directory after extraction; mkdir build # Create a build directory; cd build; cmake .. # Configure the build with cmake; Setting the PATH; export PATH=$HOME/MMseqs2/build/bin:$PATH. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; I am unable find the bin directory in Build folder.; so it is not seetting PATH & MMseqs is not getting in my Terminal. ## Your Environment; Macbook Pro M3 Pro chip; Using SSH and installing in my Home directory of the Server,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/886:30,Install,Install,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/886,2,"['Install', 'install']","['Install', 'installing']"
Deployability,"## Expected Behavior; Nt database indexed; ## Current Behavior; Nt database index never-ending; ## Steps to Reproduce (for bugs); ```; mmseqs createdb nt.fa nt -v 3 ; mmseqs createtaxdb nt tmp --threads 8 --tax-mapping-file ${uncompress_dir}/taxidmapping --ncbi-tax-dump ${ncbi-tax-dump} -v 3; mmseqs createindex nt tmp --threads 8 --split-memory-limit 200G --search-type 2 -v 3; ```. ## MMseqs Output (for bugs); In the link, there is the output of mmseq and the strace output when the software never end( mmseqs indexdb command).; https://gist.github.com/braffes/022572a4d9506f8910b281864a459ede. ## Context. The first and the second step work as expected, but the last step seems to never end. It is blocked on this command:; ```; mmseqs indexdb tmp/16033012438524647487/orfs_aa nt --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 2 --split 0 --split-memory-limit 200G -v 3 --threads 8; ```; One core is always on 100% CPU but not nothing happens. . I try to do this step with the scheduler(slurm) and localy, but that's the same result. After few try, I try to decrease the size of the fasta file(385Go to 172Go), and it worked.; It could be a problem of scaling? If yes, can it be related to the type in DBReader being unsigned int in indexdb.cpp?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; The problem is encountered for the two following versions MMseqs2/12-113e3 and MMseqs2/13-45111; 96 cores; 2To RAM; CentOS Linux release 8.3.2011",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/426:1676,release,release,1676,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426,1,['release'],['release']
Deployability,"## Expected Behavior; Producing a cluster. ## Current Behavior; Error of clustering. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb test.faa test.db; mmseqs cluster test.db test.clu tmp --min-seq-id 0.9; test.faa is attached in the gist. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; https://gist.github.com/matveykolesnik/43a90e7404e11881c29e2c80d79c5fec. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I am using mmseq2 for clustering of protein sequences in automatic pipeline, and I faced with the problem when mmseq2 fails to process fasta files that consist of repeated same sequences, like this:; >record1; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; >record2; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; ...; Perhaps it would be worth to add handling of such fasta files. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/180:724,pipeline,pipeline,724,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/180,1,['pipeline'],['pipeline']
Deployability,"## Expected Behavior; Search the homologs of my query. ## Current Behavior; I use easy-search mode to search for homologs using a fasta file with multiple amino acid sequences as the query. The target file is a compressed folder that contains some independent genome files. An error appeared when translated_search.sh was running and the job was killed. ## Steps to Reproduce (for bugs); `mmseqs easy-search query.fasta individual.fna.tar.gz result.m8 tmp --cov-mode 0 -c 0.7 -e 0.00001`. ## MMseqs Output (for bugs); `/scratch/yw/tmp/16423424779017399508/search_tmp/8870872946056358031/translated_search.sh: line 45: 982 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}`. ## Context. ## Your Environment; MMseqs2 Version: 12.113e3 (conda); Operating system: Red Hat Enterprise Linux Server release 6.10 (Santiago)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/366:811,release,release,811,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366,1,['release'],['release']
Deployability,"## Expected Behavior; Successful Completion; ## Current Behavior; Error Thrown despite the Temp directory having over 100GB space.; ## Steps to Reproduce (for bugs); 1. Install MMSeqs2 under Conda: DONE NO ERRORS; `conda install -c conda-forge -c bioconda mmseqs2`. 2. Create Sequence DB: DONE NO ERRORS; `mmseqs createdb AllPeptide.fasta AllPeptide_DB --dbtype 1 --write-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/415:169,Install,Install,169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415,2,"['Install', 'install']","['Install', 'install']"
Deployability,"## Expected Behavior; Summary: Running linclust or clust with a very big database leads to a heavy slowdown in the rescorediagonal part. Expected the job to continue much faster. It releases a warning that says `Can not touch X into main memory` and the job continues running.; ## Current Behavior; The job is stuck at rescorediagonal with no output after several hours. The job is however accesing the indexes inside of the temporary folder.; Is there anyway to fix this? Or speed it up?; ## MMSeqs Output; linclust JGI JGI_nr tmp --cluster-mode 2 --cov-mode 1 -c 0.99 --min-seq-id 0.95 --split-memory-limit 300G . MMseqs Version: 	c498f51053e2f550a4ab4bee534b0ef80033a2b3; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Threads 	96; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.99; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Resco",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:182,release,releases,182,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['release'],['releases']
Deployability,"## Expected Behavior; The example file https://raw.githubusercontent.com/soedinglab/mmseqs2/master/examples/DB.fasta should be clustered; ## Current Behavior; After the installation of MMseqs Version: 1c45613a4166130d040b52241dc66f7d687f4e54 it fails when prefiltering with:. **Error: Could not allocate memory by memalign. Please report this bug to developers** . ## Steps to Reproduce (for bugs). mmseqs createdb DB.fasta DB; mkdir tmp; mmseqs cluster DB cluDB tmp. ## MMseqs Output (for bugs); Line [391](https://gist.github.com/genomewalker/dc566892b5300bc62e166dac844a9b65#file-mmseqs_v1c45613a4166130d040b52241dc66f7d687f4e54-L391). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Homebrew . * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.8.1 and g++ (Homebrew GCC 7.1.0 --without-multilib) 7.1.0. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): MacBook Pro (Retina, 13-inch, Late 2013) with 2.6 GHz Intel Core i5 and 16 GB 1600 MHz DDR3; * Operating system and version: Mac OS X 10.12.4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/29:169,install,installation,169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/29,1,['install'],['installation']
Deployability,"## Expected Behavior; Using easy-search for multiple alignment (non-duplicate PDB seqs against Uniref100). . I've run this on a cloud instance (64G RAM), and a local server with 256G RAM. It completed the search on the server in 9 hours, producing an output file of 41G. . I expected it to finish running on the cloud at a slower speed because the target DB was split into more chunks (87 splits on the cloud VS 7 splits on the server). ## Current Behavior; On the cloud, however, after the prefiltering step, both ""align"" and ""convertalis"" logged a message ""Can not touch X into main memory"". The job will stay hanging but not produce any more logging or output files (there were a bunch of output files X.0, X.1, X.2.. not merged outputs). I killed it after 2 days. UPDATE: I've also tried to set --split-memory-limit 40G, it did finish running (in 16 hours) and produced a single output file, despite still displaying the message ""can not touch X into memory"". Also, the output file is larger than the output I got from running on the server previously (cloud VS server = 67G/41G, 109912025 lines/ 65303318 lines). I can't figure out what could cause the differences, given the same input files, same script (except for adding --split-memory-limit). So my two questions are:; 1) What's up with the warning ""Can not touch X into main memory""? ; 2) Why are the output files different?. ## Steps to Reproduce (for bugs); `mmseqs easy-search pdb_unique_seqs_all.fasta uniref100.fasta output/pdb_uniref100_6cpu_s3_e10minus3 tmp/ -a -s 3 --threads 6 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar,qaln,taln`; ## MMseqs Output (for bugs); Log file for running on cloud instance WITHOUT setting --split-memory-limit, no merged output, job hanging.; [log_easysearch.txt](https://github.com/user-attachments/files/16683740/log_easysearch.txt). Log file for running on the cloud WITH setting --split-memory-limit 40G, finished running with a single outpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/877:768,UPDATE,UPDATE,768,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/877,1,['UPDATE'],['UPDATE']
Deployability,"## Expected Behavior; Using these lines I tried to create a tsv file containing all alignment details for all clustered sequences, including the singletons:. ```; mmseqs cluster sequenceDB resultDb tmp; mmseqs createtsv sequenceDB sequenceDB resultDb resultDb.tsv; mmseqs align sequenceDB sequenceDB resultDb alignDB -a --add-self-matches; mmseqs convertalis sequenceDB sequenceDB alignDB alignDB.tsv; ```. ## Current Behavior; Looking at the resultDb.tsv file and the alignDB.tsv files I see differences between the number of sequences in the former compared to the latter. The resultDb.tsv contains all parent-child combinations for all sequences that I used to cluster, which is what I expect. However, the alignDB.tsv file contains far less alignment details. At first I thought that the singletons were left out, but that doesn't seem to be the case. Am I missing something? Or is this a bug?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb /mmseqs/examples/DB.fasta DB; mmseqs cluster DB resultDB tmp; mmseqs createtsv DB DB resultDB resultDB.tsv; mmseqs align DB DB resultDB alignDB -a --add-self-matches; mmseqs convertalis DB DB alignDB alignDB.tsv; wc -l alignDB.tsv; > 19924; wc -l resultDB.tsv; > 20000; ```. ## Environment; MMseqs2 Version: ""c5ebe52978a9e944d73bad70cfb538c91309dd8e""; Statcs install AVX2 for linux; Server supports AVX2, 64 cpu's 500G memory; Operating System: CentOS Linux 7 (Core) CPE OS Name: cpe:/o:centos:centos:7 Kernel: Linux 3.10.0-1062.4.1.el7.x86_64 Architecture: x86-64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/268:1313,install,install,1313,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268,1,['install'],['install']
Deployability,"## Expected Behavior; When running a command on a machine with multiple cores, all the output files should be combined into a single final results file. ## Current Behavior; All the files are numbered `1` to `n` where `n` is the number of cores. . ## Steps to Reproduce (for bugs); This happens with many commands (e.g. `mmseqs cluster` `mmseqs lca`, `mmseqs taxonomy`, etc). ## Context; Each file is numbered individually, but a better output would be to combine all outputs to a single file. . A trivial solution is to add `--threads 1` to the command, but that seems to be anti-use-case. The number of files is dependent on the number of cores. `cat results.? results.?? > results` is a trivial solution, but clumsy to implement for every `mmseqs` call in a pipeline. In addition, the current `mmseqs` solution doesn't work well with (for e.g.) `snakemake` that is expecting specific files. ## Your Environment; MMseqs2 Version: c75fe9acf701d9dee97b68dcbbda92fa7b1fc2de; Running on CentOS 8.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/292:761,pipeline,pipeline,761,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/292,1,['pipeline'],['pipeline']
Deployability,"## Expected Behavior; When running with highly reduced databases with the size of lower than 1MB, it works just fine. ; Both the complete call for the search workflow ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; as well as the explicit call for the prefilter module only ./mmseqs prefilter ""query"" ""target"" ""result"" are running as expected. ## Current Behavior; Using bigger files for query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:695,install,installed,695,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['install'],['installed']
Deployability,"## Expected Behavior; `mmseqs download` would be expected to download an up-to-date version of the target 'nr' and 'nt' databases. ## Current Behavior; The download FASTA targets for the 'nr' and 'nt' databases are no longer being updated by NCBI. Explanation: focusing on 'NR' as an example, the URL in [databases.sh](https://github.com/soedinglab/MMseqs2/blob/87e7103d289029dc3345f85ea9a4c4c6d6416e46/data/workflow/databases.sh#L500) points to https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/nr.gz. The README in that FTP location states:. > In April 2024, the BLAST FASTA files in this directory will no longer be; available. You can easily generate FASTA files yourself from the formatted; BLAST databases by using the BLAST utility blastdbcmd that comes with the; standalone BLAST programs. See NCBI Insights for more details; https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/. Indeed, the nr.gz file was last updated on 2024-02-07. Looking in the [parent directoy](https://ftp.ncbi.nlm.nih.gov/blast/db), the various NR database files have been updated as recently as 2024-10-02. Therefore, the download targets for mmseqs2 are out of date by about 8 months, and this problem will get worse over time. . NCBI's solution for users is to download the blast-format files and then generate their own FASTA files:. > * Sequences in FASTA format can be generated from the pre-formatted databases by using the blastdbcmd utility;. Obviously this isn't ideal for many users, and it's been getting [at least some hate](https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/). ## Solution; Unless NCBI backflips on their decision, the only solution would be to change the `mmseqs databases` workflow for these databases to have an intermediate (slow) step of extracting a FASTA file before the `mmseqs createdb` step is run. However, this would obviously require extra dependencies, i.e. the `blastdbcmd`. Otherwise, I suppose you could host periodic b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/893:231,update,updated,231,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/893,2,['update'],['updated']
Deployability,"## Expected Behavior; get standard annotation output --> works on some files and does not work on other files. ## Current Behavior; Error:; Input tmp/11852343083329585076/search_tmp/14954657116245379907/search/pref does not exist. ## Steps to Reproduce + MMseqs Output ; [code.txt](https://github.com/soedinglab/MMseqs2/files/4857796/code.txt). ## Context; mmseqs easy-search fastq files. ## Your Environment; MMseqs Version: 	11.e1a1c; conda install -c conda-forge -c bioconda mmseqs2; Ubuntu 20.04 LTS, 64-bit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/325:443,install,install,443,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/325,1,['install'],['install']
Deployability,"## Expected Behavior; mmseqs2 successfully linclust a 49 sequence protein fasta. ## Current Behavior; mmseqs2 complain Kmer array overflow. ## Steps to Reproduce (for bugs); ```bash; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs createdb DB.fasta DB -v 1; mkdir tmp; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs linclust DB DB_clu tmp -c 0.9 --cov-mode 1 --threads 1 -v 1; ```. ## MMseqs Output (for bugs); ```; Kmer array overflow. currKmerArrayOffset=0, kmerBufferPos=1024, kmerArraySize=1024.; Error: kmermatcher died; ```. ## Context; The input file DB.fasta and all intermediate files are attached.; [linclust_3300021621.zip](https://github.com/soedinglab/MMseqs2/files/4199615/linclust_3300021621.zip). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; ``MMseqs2 Version: 481696b5f426f991211894d8a855bf9d60065c8f``; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; https://mmseqs.com/latest/mmseqs-linux-sse41.tar.gz; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt; * Operating system and version:; ```; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/274:1826,release,release,1826,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/274,2,"['Release', 'release']","['Release', 'release']"
Deployability,"## Expected Behavior; nuc reads would align to aa DB. ## Current Behavior; `Input tmp1/15265602719800494645/search_tmp/18256837363344165166/search/pref does not exist`. ## Steps to Reproduce (for bugs); [B5177-2-N919D_T1_interleaved.fq.gz](https://github.com/soedinglab/MMseqs2/files/12657942/B5177-2-N919D_T1_interleaved.fq.gz); DB_TARGET_PATH_NAME is the pfam DB downloaded with mmseqs. ```; mmseqs \; easy-search \; <(zcat B5177-2-N919D_T1_interleaved.fq.gz) \; $DB_TARGET_PATH_NAME \; B5177-2-N919D_T1.tsv \; tmp1 \; \; --threads 12 \; --compressed; ```. ## MMseqs Output (for bugs); No output. ## Context; i try another fasta file, things went well. But with the uploaded file as input, i get the error said `Input tmp1/15265602719800494645/search_tmp/18256837363344165166/search/pref does not exist`, could not figure why. ## Your Environment; mmseqs version: 13.45111; conda installed ; Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-153-generic x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754:882,install,installed,882,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754,1,['install'],['installed']
Deployability,"## Expected Behavior; tmp folder creation should work just as for other commands. ## Current Behavior; `mmseqs enrich profileDB UniRef50DB profileEnrichedDB /tmp` fails with ; ""Path does not exist or is not a directory. Cannot create temporary folder .""; It's the same for any tmp location, and it only affects `enrich`. Specifying /tmp with other mmseqs commands works. ## Your Environment; MMseqs Version: 113e3212c137d026e297c7540e1fcd039f6812b1 (latest release); static (MMseqs2-Linux-SSE4_1.tar.gz),; no AVX2, CentOS Linux 7",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/353:457,release,release,457,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/353,1,['release'],['release']
Deployability,"## Intention; I am trying perform an exhaustive all against all search of a large database with sensitivity similar to blast. The database contains approximately 73,000 sequences with an average length around 300 amino acids. Process is killed while reading results with the error swapresults died. . On Linux mint and using MMseqs2 Release 15-6f452. ## output; cahoonlab@lagbb-bcecmint:~$ mmseqs search Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 alnment/alignment tmp --exhaustive-search -s 8; search Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 alnment/alignment tmp --exhaustive-search -s 8 . MMseqs Version: 	78ae2c5b8dba889079745e8013deeb30c3ac8a1a; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:333,Release,Release,333,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['Release'],['Release']
Deployability,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/450:1376,pipeline,pipelines,1376,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450,1,['pipeline'],['pipelines']
Deployability,"#b8b044 0B/0B CN:1 DL:0B] ; 02/01 11:30:01 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#b8b044 51MiB/61MiB(84%) CN:1 DL:10MiB] ; 02/01 11:30:08 [NOTICE] Download complete: tmp/taxdump.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; b8b044|OK | 9.1MiB/s|tmp/taxdump.tar.gz. Status Legend:; (OK):download completed.; Loading nodes file ... Done, got 2550743 nodes; Loading merged file ... Done, added 75930 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```; ## Context; I want to search some query sequences locally against a clustered version of the NR database. I downloaded the clustered database and taxonomy files (nr_cluster_taxid_formatted_final.tsv.gz, nr_rep_seq.fasta.gz) from [here](https://osf.io/tejwd/), which was created as per: https://research.arcadiascience.com/pub/resource-nr-clustering/release/3. I then processed the files like so:. ```; gunzip -c nr_cluster_taxid_formatted_final.tsv.gz | cut -f1,2 > nr_rep_seq_to_taxid.map; mmseqs createdb nr_rep_seq.fasta.gz nr_rep_seq_db; ```. After these completed successfully, I tried to create the taxdb as per the above:. ```; mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; ```. But the job was killed. Questions:; * Was it likely killed because of exhausting my available RAM? ; - If so, is there a way to restrict it during taxdb creation? I tried out `--split-memory-limit 50G` but got `Unrecognized parameter ""--split-memory-limit""`; * Was it killed for a different reason, e.g. disk space?; - The disk the database is stored on has 95 GB free at the moment, and the main db file (from `mmseqs createdb`) is 88.7GB. I haven't tried freeing up more space yet in case this is not the issue. ## Your Environment; * Git commit used: 2fad714b525f1975b62c2d2b5aff28274ad574",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811:2079,release,release,2079,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811,1,['release'],['release']
Deployability,"--:--:-- --:--:-- 41; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 51.3G 100 51.3G 0 0 1565k 0 9:33:26 9:33:26 --:--:-- 2662k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 54.4M 100 54.4M 0 0 1374k 0 0:00:40 0:00:40 --:--:-- 939k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 1080k 100 1080k 0 0 489k 0 0:00:02 0:00:02 --:--:-- 491k; tar2db tmp/14668141768776664068/gtdb.tar.gz tmp/14668141768776664068/tardb --tar-include faa.gz$ --threads 8 -v 3. Time for merging to tardb: 0h 0m 0s 28ms; Time for merging to tardb.lookup: 0h 0m 0s 13ms; Time for processing: 0h 7m 32s 203ms; createdb tmp/14668141768776664068/tardb outpath/GTDB --compressed 0 -v 3. Converting sequences; Cannot open outpath/GTDB.source for writing; Error: createdb died. ## Context; Please note that I get this error on _both_ my local computer and on my server; using different methods of installation. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 2fad714b525f1975b62c2d2b5aff28274ad57466 (local MacOSX computer) as well as MMseqs2 Version: 15.6f452 (on Linux server); * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Installed with both conda (linux server) and using the MacOSX binary available on the mmseqs download page (local computer); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): for Linux server: supports AVX2, 1TB RAM. for local MacOSX computer: supports AVX2 (I think?), 16 GB RAM; * Operating system and version: Linux server: Rocky Linux 8.9 local computer: macOS Monterey 12.7.2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/809:2625,Install,Installed,2625,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/809,1,['Install'],['Installed']
Deployability,--p 00000000 00:00 0; 7f40cc7f9000-7f40ccff9000 rw-p 00000000 00:00 0; 7f40ccff9000-7f40ccffa000 ---p 00000000 00:00 0; 7f40ccffa000-7f40cd7fa000 rw-p 00000000 00:00 0; ```. ## Context; The input file is part of the QfO 2011 dataset.; ftp://ftp.ebi.ac.uk/pub/databases/reference_proteomes/previous_releases/qfo_release-2011_04; As I previously wrote if --max-seq-len is used in createdb to split some of the input sequences createindex does not fail!. For example:; ```; mmseqs createdb --max-seq-len 1000 korarchaeum_cryptofilum kora_db; mmseqs createindex kora_db /tmp/; ```; Would create the DB idx file without failing. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: c97f09f3fe8f45aa133004f95e43c509c947196b (NOTE: the error also happened with earlier versions); * Which MMseqs version was used: self-compiled using GNU Make 4.2.1 and cmake version 3.12.0 (make and cmake installed using Linux-brew); * For self-compiled and Homebrew:; ```; -- The CXX compiler identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_E,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:11113,install,installed,11113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['install'],['installed']
Deployability,". 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner; Force restart using the latest tmp false; Remove Temporary Files false. Could not create symlink of tmp/5177011769629871693!. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I got a remote VM from a university lab in which I run the project. everything was going quite well (compilation, installation, creating the DBs) but when I wanted to pre-compute the index of targetDB, I got this weird error with no further details to solve it. I don't know if it is related to the privileges granted to me in the VM or the version of MMseqs. Would you please suggest some hints/help?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 9357bb750290e2862ab4da522f03c971f71cfff3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc version 4.8.5 & cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Architecture : x86_64 / Processor : 4x Intel Xeon E312xx (Sandy Bridge) / Memory : 196.62 GiB / Instruction set: SSE4_1; * Operating system and version: CentOS 7.6.1810",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/171:2660,install,installation,2660,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/171,1,['install'],['installation']
Deployability,". My conda environment is as follows. active environment : ClusterEnv; active env location : /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv; shell level : 2; user config file : /home/sanyalab/.condarc; populated config files : /home/sanyalab/.condarc; conda version : 4.10.1; conda-build version : 3.18.9; python version : 3.7.4.final.0; virtual packages : __linux=2.6.32=0; __glibc=2.12=0; __unix=0=0; __archspec=1=x86_64; base environment : /mnt/common/rh6/annotate/Anaconda3 (writable); conda av data dir : /mnt/common/rh6/annotate/Anaconda3/etc/conda; conda av metadata url : https://repo.anaconda.com/pkgs/main; channel URLs : https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /mnt/common/rh6/annotate/Anaconda3/pkgs; /home/sanyalab/.conda/pkgs; envs directories : /mnt/common/rh6/annotate/Anaconda3/envs; /home/sanyalab/.conda/envs; platform : linux-64; user-agent : conda/4.10.1 requests/2.22.0 CPython/3.7.4 Linux/2.6.32-696.30.1.el6.x86_64 rhel/6.9 glibc/2.12; UID:GID : 101430:237; netrc file : None; offline mode : False. MMseqs installs ok (I think). However, I get a GLIBC error when running `mmseqs --help` like below. `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`. Please advice what to do. Thanks; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461:1280,install,installs,1280,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461,1,['install'],['installs']
Deployability,"/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; *** Download Progress Summary as of Wed Sep 27 13:22:54 2023 *** ; ===========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:1951,release,releases,1951,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['release'],['releases']
Deployability,"0 --:--:-- --:--:-- --:--:-- 41; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 51.3G 100 51.3G 0 0 1565k 0 9:33:26 9:33:26 --:--:-- 2662k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 54.4M 100 54.4M 0 0 1374k 0 0:00:40 0:00:40 --:--:-- 939k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 1080k 100 1080k 0 0 489k 0 0:00:02 0:00:02 --:--:-- 491k; tar2db tmp/14668141768776664068/gtdb.tar.gz tmp/14668141768776664068/tardb --tar-include faa.gz$ --threads 8 -v 3. Time for merging to tardb: 0h 0m 0s 28ms; Time for merging to tardb.lookup: 0h 0m 0s 13ms; Time for processing: 0h 7m 32s 203ms; createdb tmp/14668141768776664068/tardb outpath/GTDB --compressed 0 -v 3. Converting sequences; Cannot open outpath/GTDB.source for writing; Error: createdb died. ## Context; Please note that I get this error on _both_ my local computer and on my server; using different methods of installation. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 2fad714b525f1975b62c2d2b5aff28274ad57466 (local MacOSX computer) as well as MMseqs2 Version: 15.6f452 (on Linux server); * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Installed with both conda (linux server) and using the MacOSX binary available on the mmseqs download page (local computer); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): for Linux server: supports AVX2, 1TB RAM. for local MacOSX computer: supports AVX2 (I think?), 16 GB RAM; * Operating system and version: Linux server: Rocky Linux 8.9 local computer: macOS Monte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/809:2179,install,installation,2179,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/809,1,['install'],['installation']
Deployability,"0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl526_1 bioconda; perl-exporter 5.72 pl526_1 bioconda; perl-file-util 4.161950 pl526_3 bioconda; perl-lib 0.63 pl526_1 bioconda; pigz 2.3.4 hed695b0_1 conda-forge; pip 20.1.1 py_1 conda-forge; prodigal 2.6.3 h516909a_2 bioconda; python 3.8.4 cpython_h425cb1d_0 conda-forge; python_abi 3.8 1_cp38 conda-forge; readline 8.0 he28a2e2_2 conda-forge; seqkit 0.13.2 0 bioconda; setuptools 49.2.0 py38h32f6830_0 conda-forge; sqlite 3.32.3 hcee41ef_1 conda-forge; tk 8.6.10 hed695b0_0 conda-forge; vsearch 2.15.0 h2d02072_0 bioconda; wget 1.20.1 h22169c7_0 conda-forge; wheel 0.34.2 py_1 conda-forge; xz 5.2.5 h516909a_1 conda-forge; zlib 1.2.11 h516909a_1006 conda-forge; ```. ## Notes. I had previously copies (hopefully) all relevant ""old"" gene database files from one directly to another. Maybe I missed an associated file, which is causing the issue. ; A major hassle of using mmseqs is all of the associated files (eg., `.dbtype`, `.index`, `.lookup`, etc). These are not discussed in the documentation and just assumed to be present with the ""main"" files. This is especially a big hassle when using snakemake, nextflow, drake, or other pipeline software.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333:5565,pipeline,pipeline,5565,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333,1,['pipeline'],['pipeline']
Deployability,"2 1.529E-92 100.000 F*TFPDLLSRKFFLFTFIHLLLLQWFKALPYSILILIKLLIKRNFFFYKTSARQFWRFLLPASCSAVSGFLHFRLTFPAQPYFSAARISPQSQPQLHLLRASPVRWTAFQSISHLRETGCVPLKSTHVLCVDTVSYTHLTLQTILLVQISVAAVQ FQTFPDLLSRKFFLFTFIHLLLLQWFKALPYSILILIKLLIKRNFFFYKTSARQFWRFLLPASCSAVSGFLHFRLTFPAQPYFSAARISPQSQPQLHLLRASPVRWTAFQSISHLRETGCVPLKSTHVLCVDTVSYTHLTLQTILLVQISVAAVQ 155 156 1 155 0.994 2661169 -_cellular organisms;d_Eukaryota;-_Sar;-_Alveolata;p_Ciliophora;-_Intramacronucleata;c_Armophorea;o_Metopida;f_Metopidae;g_Metopus;s_Metopus contortus; EP00831_Metopus_contortus_T000356 EP00831_Metopus_contortus_P049864 5.174E-135 100.000 LQQKLLL*MEILIQL*QISIGPRTVTTTGISMDTKVEPTLTNIDIENYDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVVEGEVNPIFTNIDIENYDEGITIKVDADGDGDDDDGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSD LQQKLLLQMEILIQLQQISIGPRTVTTTGISMDTKVEPTLTNIDIENYDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVVEGEVNPIFTNIDIENYDEGITIKVDADGDGDDDDGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSD 215 215 1 215 1.000 2661169 -_cellular organisms;d_Eukaryota;-_Sar;-_Alveolata;p_Ciliophora;-_Intramacronucleata;c_Armophorea;o_Metopida;f_Metopidae;g_Metopus;s_Metopus contortus; ```; In Translation table 6, two additional codons code for glutamine instead of ending the translation. From the NCBI's ```gencode.dmp```, standard above, 6th below:; ```; FFLLSSSSYY**CC*WLLLLPPPPHHQQRRRRIIIMTTTTNNKKSSRRVVVVAAAADDEEGGGG; FFLLSSSSYYQQCC*WLLLLPPPPHHQQRRRRIIIMTTTTNNKKSSRRVVVVAAAADDEEGGGG. ```; The sequences above are from Metopus ciliates [that do use the Tr. table 6](https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?mode=Info&id=5964&lvl=3&lin=f&keep=1&srchmode=1&unlock). This may affect downstream analyses. Environment:; ```; $ mmseqs version; 8799829d213f31b647fc69e0572a0c828c5aaf63; $ cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=22.04; DISTRIB_CODENAME=jammy; DISTRIB_DESCRIPTION=""Ubuntu 22.04.2 LTS""; PRETTY_NAME=""Ubuntu 22.04.2 LTS""; <...>; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/686:2664,release,release,2664,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/686,1,['release'],['release']
Deployability,"3841744502873/target tmp/18110643841744502873/result alnResult.m8 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 0 --format-output query,targe t,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compresse d 0 -v 3. [=================================================================] 100.00% 500 0s 376ms; Time for merging to alnResult.m8: 0h 0m 0s 57ms; Time for processing: 0h 0m 1s 129ms; rmdb tmp/18110643841744502873/result -v 3. Time for processing: 0h 0m 0s 10ms; rmdb tmp/18110643841744502873/target -v 3. Time for processing: 0h 0m 0s 4ms; rmdb tmp/18110643841744502873/target_h -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp/18110643841744502873/query -v 3. Time for processing: 0h 0m 0s 1ms; rmdb tmp/18110643841744502873/query_h -v 3. Time for processing: 0h 0m 0s 1ms; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src tmp util; [lihuilin@login01 MMseqs2]$; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src tmp util; [lihuilin@login01 MMseqs2]$ cd tmp; [lihuilin@login01 tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cat latest; cat: latest: Is a directory; [lihuilin@login01 tmp]$ cd latest; [lihuilin@login01 latest]$ ls; [lihuilin@login01 latest]$ cd ..; [lihuilin@login01 tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cd 18110643841744502873; [lihuilin@login01 18110643841744502873]$ ls; [lihuilin@login01 18110643841744502873]$; ```; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for larg",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:8958,pipeline,pipelines,8958,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['pipeline'],['pipelines']
Deployability,"4163985984779/order_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; filterdb tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter1 tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter2 --filter-file tmp/8115150149931881526/clu_tmp/13790714163985984779/order_redundancy --threads 64 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 31.44K 0s 20ms; Time for merging to pref_filter2: 0h 0m 0s 88ms; Time for processing: 0h 0m 0s 360ms; rescorediagonal tmp/8115150149931881526/clu_tmp/13790714163985984779/input_step_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/input_step_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter2 tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=========Error: Ungapped alignment step died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): a14688744081c15439fa3092eec9dfd8be40440b; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Source install from github ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU Make 4.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): SSE4; * Operating system and version: gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:7584,install,install,7584,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['install'],['install']
Deployability,"85; Min Kmer Size: 0; Empty list: 66045602. Time for index table init: 0 h 0 m 29s. k-mer similarity threshold: 130; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1282204; Target db start 1 to 1282204; Wrong prefiltering result: Query: 1 -> 1361079913	r; Invalid database read for id=1361079913, database index=/usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db.index; Wrong prefiltering result: Query: 71 -> 1361079913	r; Invalid database read for id=getDbKey: local id (1361079913) >= db size (1282204); 1361079913, database index=/usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db.index; getDbKey: local id (1361079913) >= db size (1282204); Wrong prefiltering result: Query: 111 -> 1361079913	r; Invalid database read for id=; Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x2aaac5d87700 (LWP 8622)]; 0x00002aaaabb70dcd in __run_exit_handlers () from /usr/lib64/libc.so.6; Missing separate debuginfos, use: debuginfo-install glibc-2.17-106.el7_2.8.x86_64 libgcc-4.8.5-4.el7.x86_64 libgomp-4.8.5-4.el7.x86_64 libstdc++-4.8.5-4.el7.x86_64 zlib-1.2.7-15.el7.x86_64; (gdb) bt; #0 0x00002aaaabb70dcd in __run_exit_handlers () from /usr/lib64/libc.so.6; #1 0x00002aaaabb70eb5 in exit () from /usr/lib64/libc.so.6; #2 0x00000000005de79f in DBReader<unsigned int>::getDbKey (this=0x8b8f10, id=1361079913) at /usr/lusers/aivan/prog/MMseqs2/src/commons/DBReader.cpp:344; #3 0x0000000000548023 in Prefiltering::writePrefilterOutput (this=0x7fffffffda10, qdbr=0x8b8f10, dbWriter=0x7fffffffcc80, thread_idx=1, id=0, prefResults=..., seqIdOffset=0, diagonalScoring=true, resultOffsetPos=0, maxResults=4000); at /usr/lusers/aivan/prog/MMseqs2/src/prefiltering/Prefiltering.cpp:758; #4 0x00000000005494d4 in Prefiltering::runSplit () at /usr/lusers/aivan/prog/MMseqs2/src/prefiltering/Prefiltering.cpp:643; #5 0x00002aaaab4fcde5 in ?? () from /usr/lib64/libgomp.so.1; #6 0x00002aaaab923dc5 in start_thread () from /usr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/37:4945,install,install,4945,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/37,1,['install'],['install']
Deployability,"904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:10490,install,installations,10490,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['install'],['installations']
Deployability,; Done.; Time for processing: 0h 0m 0s 831ms; Program call:; result2repseq tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_rep --threads 2 -v 3. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Threads 	2; Verbosity	3. Start computing representative sequences.; ..........; Time for merging files: 0h 0m 0s 505ms; Time for processing: 0h 0m 1s 206ms; Program call:; result2flat tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_rep tmp/3578692915323364718/req_seq.fasta --use-fasta-header -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Use fasta header	true; Verbosity 	3. Query file is tmp/3578692915323364718/input; Target file is tmp/3578692915323364718/input; Data file is tmp/3578692915323364718/clu_rep; Start writing file to tmp/3578692915323364718/req_seq.fasta; Done.; Time for processing: 0h 0m 0s 724ms; Program call:; createseqfiledb tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_seqs --threads 2 -v 3. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Min Sequences	1; Max Sequences	2147483647; HH format 	false; Threads 	2; Verbosity 	3. Time for merging files: 0h 0m 0s 526ms; Time for processing: 0h 0m 1s 303ms; Program call:; result2flat tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_seqs tmp/3578692915323364718/all_seqs.fasta -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Use fasta header	false; Verbosity 	3. Query file is tmp/3578692915323364718/input; Target file is tmp/3578692915323364718/input; Data file is tmp/3578692915323364718/clu_seqs; Start writing file to tmp/3578692915323364718/all_seqs.fasta; Done.; Time for processing: 0h 0m 1s 39ms; ```. ## Your Environment. * The problems is present with releases 5-9375b and 4-0b8cc but not on release 3-be8f6 . ; * Tested with pre-compiled binaries for Linux-AVX2; * Operating system and version: Amazon Linux 2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:25324,release,releases,25324,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,2,['release'],"['release', 'releases']"
Deployability,"; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned in #729 involving the `gtdb.lookup` file. Taxonomy results will be unreliable until #729 is fixed. ## Your Environment; In",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:1893,release,release,1893,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['release'],['release']
Deployability,"; MW853947.1 MK378188.1; MW853947.1 MK378206.1; MW853947.1 MK378218.1; MW853947.1 MK378220.1; MW853947.1 MK378224.1; MW853947.1 MN326163.1; MW853947.1 MN326174.1; MW853947.1 ON698674.1; ```. #### 3. Manually convert the sequence into reverse complement; Using `seqkit seq` function to convert my self-assembled sequence into its reverse complement sequence and keep those public sequence remain original.; ```; cat <(seqkit grep -r -p 'SRS-*' orig_seqs.fasta | seqkit seq -r -p ) <(seqkit grep -v -r -p 'SRS-*' orig_seqs.fasta) > reversed_seqs.fasta; ```. #### 4. Try to cluster the manually processed sequences (Show easy-cluster for instance); ```; mmseqs easy-cluster --min-seq-id 0.8 --cov-mode 1 -c 0.8 reversed_seqs.fasta 80ANI_cluster_rev tmp_cluster_rev; ```; Then checked the clustered TSV, these sequenced clustered into one cluster; ```; MW853947.1 MW853947.1; MW853947.1 SRS4197851-k119_5014; MW853947.1 SRS4197849-k141_10057; MW853947.1 SRS4197855-k141_655; MW853947.1 SRS4197862-k141_2526; MW853947.1 SRS4197863-k119_8432; MW853947.1 SRS4197864-k141_4618; MW853947.1 SRS4197865-k141_388; MW853947.1 SRS4197870-k141_8439; MW853947.1 SRS4197873-k141_1626; MW853947.1 SRS4197876-k119_3788; MW853947.1 SRS4197879-k119_11748; MW853947.1 SRS4197880-k119_434; MW853947.1 SRS4197978-k119_13091; MW853947.1 SRS4197981-k141_1571; MW853947.1 SRS4197986-k141_7862; MW853947.1 SRS11964275-k141_133602; MW853947.1 KU745627.1; MW853947.1 MK378157.1; MW853947.1 MK378172.1; MW853947.1 MK378179.1; MW853947.1 MK378188.1; MW853947.1 MK378206.1; MW853947.1 MK378218.1; MW853947.1 MK378220.1; MW853947.1 MK378224.1; MW853947.1 MN326163.1; MW853947.1 MN326174.1; MW853947.1 ON698674.1; ```. ## MMseqs Output (for bugs); Please kindly refer `Steps to Reproduce`. ## Context; NA. ## Your Environment; * Which MMseqs version was used: 15.6f452 (conda installed); * Server specifications: Intel Processor with SSE4.2 AVX2 support w/ 64GB RAM; * Operating system and version: CentOS Linux release 7.8.2003 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/858:3771,install,installed,3771,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/858,2,"['install', 'release']","['installed', 'release']"
Deployability,"; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 7780 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 7.78K 0s 362ms ; Time for merging to aln_2: 0h 0m 0s 3ms. 30 alignments calculated.; 30 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.003856 hits per query sequence.; Time for processing: 0h 0m 3s 496ms; mergedbs IP_DB/IP_DB result_DB/result_DB tmp/16138406286044646862/aln_merge tmp/16138406286044646862/aln_2 --compressed 0 -v 3 . Merging the results to result_DB/result_DB; Time for merging to result_DB: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 11ms. ## Your Environment; MMseqs2 Version: 12.113e3; Installed from bioconda. Hardware:; Intel® Xeon(R) W-2175 CPU @ 2.50GHz × 28 CPU; 62.5 GiB RAM. System:; Release 18.04.5 LTS (Bionic Beaver) 64-bit ; Kernel Linux 5.4.0-58-generic x86_64; MATE 1.20.1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:12899,Install,Installed,12899,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,2,"['Install', 'Release']","['Installed', 'Release']"
Deployability,"=================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned in #729 involving the `gtdb.lookup` file. Taxonomy results will be unreliable until #729 is fixed. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 14.7e284; * Which MMseqs version was used: conda install; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: N/A; * Server specifications: CPU with SSE and AVX2 support, 512 GB RAM; * Operating system and version: Ubuntu 22.04.3 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:2995,install,install,2995,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['install'],['install']
Deployability,"=============================] 323 0s 3ms. Reading results.; [=================================================================] 323 0s 0ms. Output database: tmp/2730103712073724212/aln; [=================================================================] 14.93K 0s 154ms. Time for merging into tmp/2730103712073724212/aln by mergeResults: 0h 0m 0s 147ms; Time for processing: 0h 0m 0s 394ms; offsetalignment queryDB tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/aln resultDB --chain-alignments 0; --merge-query 1 --search-type 0 --threads 64 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 2ms; Writing results to: resultDB; ==[===============================================================] 101 0s 3ms. Time for merging into resultDB by mergeResults: 0h 0m 0s 169ms; Time for processing: 0h 0m 1s 64ms; convertalis queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB resultDB.m8 . MMseqs Version: 	10.6d92c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	11; Gap extension cost 	1; Database output 	false; Preload mode 	0; Search type 	0; Threads 	64; Compressed 	0; Verbosity 	3. [=================================================================] 101 0s 8ms; Time for merging into resultDB.m8 by mergeResults: 0h 0m 0s 160ms; Time for processing: 0h 0m 1s 306ms. ## Context; There is no informations in the manual about this cmd, maybe i miss up some steps . ## Your Environment; I use the version 10.6d92c install with conda. * Server specifications; 512 GO RAM; 64 CPU. * Operating system and version: linux last release. Thanks a lot for your help !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:7861,install,install,7861,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,2,"['install', 'release']","['install', 'release']"
Deployability,ARM64 installation issue - M3 chip MacBook Pro,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/834:6,install,installation,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834,1,['install'],['installation']
Deployability,"According the main `mmseqs` help doc (mmseqs2 v7.4e23d):. ```; convertalis 	Convert alignment DB to BLAST-tab format, SAM flat file, or to raw pairwise alignments; ```. However, `mmseqs convertalis` doesn't actually seem to have any option for generating a SAM file. Am I just missing this feature in the `mmseqs convertalis` docs or maybe the help docs need to be updated?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/143:365,update,updated,365,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/143,1,['update'],['updated']
Deployability,"Behavior; Segfault when reaching the `search` step (after `extractorfs`). ## Steps to Reproduce (for bugs); ```; module load MMseqs2/10-6d92c-foss-2018b; cd /Pfam/directory/. mmseqs convertmsa Pfam-A.full.gz pfam_msa_db; mmseqs msa2profile pfam_msa_db pfam_profile --match-mode 1; mmseqs createindex pfam_profile tmp -k 6 -s 7. PFAM=""location/of/pfam_profile""; K1M=""location/of/input/fasta""; ORFS=""where/to/save/orfs""; RES=""location/of/final/result"". cd ; mmseqs createdb ${K1M} ${ORFS}; mmseqs search ${ORFS} ${PFAM} ${RES} tmp -k 5 -s 7. module unload MMseqs2/10-6d92c-foss-2018b; ```. ## MMseqs Output (for bugs); ```; Caught signal 11 (Segmentation fault: address not mapped to object at address 0x7f6b77d84270); ==== backtrace (tid: 1754) ====; 0 0x0000000000142e40 __memcpy_ssse3() :0; 1 0x00000000004d8b86 PrefilteringIndexReader::getIndexTable() ???:0; 2 0x00000000004cc0c6 Prefiltering::runSplit() ???:0; 3 0x00000000004cc90d Prefiltering::runSplits() ???:0; 4 0x00000000004cd10d Prefiltering::runMpiSplits() ???:0; 5 0x00000000004c2974 prefilter() ???:0; 6 0x000000000044a7d6 runCommand() ???:0; 7 0x0000000000442d29 main() ???:0; 8 0x0000000000021c05 __libc_start_main() ???:0; 9 0x000000000044a46c _start() ???:0; =================================; tmp/14557808422999051349/searchtargetprofile.sh: line 28: 1754 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""${INPUT}"" ""${2}"" ""${TMP_PATH}/; ```. ## Context; I want to find candidate transcription factors in a non-model organism. By aligning translated bulk RNA-seq reads against Pfam, I hope to get matches against known transcription factor families or DNA binding domains. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: release 10-6d92c-foss-2018b; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): for the runs: 1 core, 30Gb memory. CPUs support AVX2, as far as I can tell.; * Operating system and version: CentOS 7",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/259:1881,release,release,1881,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259,1,['release'],['release']
Deployability,Cluster update speedup,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/269:8,update,update,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269,1,['update'],['update']
Deployability,Conda install is failing with PackagesNotFoundError:,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/744:6,install,install,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/744,1,['install'],['install']
Deployability,Conda release of latest version,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/760:6,release,release,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/760,1,['release'],['release']
Deployability,Dear MMseqs Team!; the command:; `mmseqs createdb /home/db/HH/nr /home/db/HH/uniclust/output/2020_12/uniprot_db --max-seq-len 14000`; fails with error:; `Unrecognized parameter --max-seq-len`; I'm using that withing HHsuite uniclust generating pipeline. Is that option still supported?. I compiled mmseqs2 today from git repo.; mmseqs command reports: `MMseqs2 Version: GITDIR-NOTFOUND`,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/384:244,pipeline,pipeline,244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/384,1,['pipeline'],['pipeline']
Deployability,"Dear author,; I am working a NR annotation for a large number of samples, and I find MMseq2 is a better software. So I would like to ask whether I can run faster together or one by one, My server configuration: CPU 144 and memory 500G.; All cat together: 48 G; One is ~200 M",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/523:196,configurat,configuration,196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/523,1,['configurat'],['configuration']
Deployability,"Dear colleagues,. I'm Paul DE BOISSIER, PhD student at the IBDM, in Marseille, France.; I'm developing a pipeline in which the first step is an orthologous search. For that, I already implemented a RBH search and an access to OrthoDB.; My problem is that OrthoDB is not quite complete and the RBH took a lot of time to run.; I discussed with my supervisor, Bianca Habermann, and we think that using MMseqs2 can help us a lot to reduce our running time. So, I have deeply read the documentation but maybe I missed something. My pipeline is running with refseq as the main database, especially for the RBH, with all the files in .pal, .pos,...; My problem is that I want to use my already existing blast database with MMseqs2 but I don't find any options to create the MMseqs2 database from such database.; Obviously, I read about the function ""databases"" which downloads the database, and I can use NR or UniProtKB but I don't want to redownload a whole database as I have not a lot of space in our servers, especially as we share it among the team. Do you know how I can manage it please ?. Best. DE BOISSIER Paul; PhD Student - Computational Biology Group; IBDM – Institut de Biologie du Développement de Marseille; paul.de-boissier@univ-amu.fr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/395:105,pipeline,pipeline,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/395,2,['pipeline'],['pipeline']
Deployability,"Dear developer,; I'm using the GTDB database to assign the taxonomic label for my contigs, I have downloaded the GTDB from the predefined database by the command `mmseqs databases GTDB /my_path/GTDB tmp`, then I run the command:; ```; mmseqs taxonomy filter_contig_gclust_MMseqdb $GTDB_db/GTDB filter_contig_gclust_GTDB_res tmp --threads 80 --remove-tmp-files; mmseqs createtsv filter_contig_gclust_MMseqdb filter_contig_gclust_GTDB_res filter_contig_gclust_GTDB_res.tsv; ```; finally, I found there are some thing wrong, for the taxid and the taxon name cannot be found in the NCBI taxonomy database, and they are not match. ; here are part of the results:. > k99_16878 1840 genus Faecalimonas 2 2 1 0.920; k99_25114_2 11880 species Anaerosporobacter mobilis 2 2 2 1.000; k99_30336_3 176 genus Clostridium 1 1 1 1.000; k99_11777_2 888 species Hafnia paralvei 1 1 1 1.000; k99_13149_3 11909 species Fournierella massiliensis 1 1 1 1.000; k99_53411_3 38757 species Faecalimonas sp900550975 2 2 1 0.950. I noticed the module `Create a seqTaxDB for GTDB` in the wiki page, I think maybe even though I downloaded the predefined database, I still need to do these process (build name.dmp, node.dmp from GTDB taxonomy), am I right?. If so, the problem is that the website `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna` isn't work, Can you help me ,please ?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548:1311,release,releases,1311,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548,1,['release'],['releases']
Deployability,Docker image update to fix debian-slim update issue,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/541:13,update,update,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541,2,['update'],['update']
Deployability,"Due to changes in the way it handles includes, `MMseqs2` wasn't building with `gcc13`. These 4 files required patching to make them behave ...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/714:110,patch,patching,110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/714,1,['patch'],['patching']
Deployability,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460:186,install,installed,186,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460,7,['install'],"['install', 'installed', 'installing']"
Deployability,Fail installation on make,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/347:5,install,installation,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347,1,['install'],['installation']
Deployability,Finish up SIMDe integration,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/321:16,integrat,integration,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/321,1,['integrat'],['integration']
Deployability,"Firstly, thank you for making and maintaining such a great tool!. ## Expected Behavior; When performing a search (or similar function like 'taxonomy'), when providing an evalue of `-e 1e-50`, I would expect to have results filtered according to this evalue. ## Current Behavior; No results are returned/all results are filtered out, even though there should be hits with evalues smaller than 1e-50. (i.e. I can see the hits when I use an `-e 1e-30`). ## Steps to Reproduce (for bugs); The input files and outputs are here [didi_e_issue_mmseqs.zip](https://github.com/soedinglab/MMseqs2/files/5872895/didi_e_issue_mmseqs.zip); ```; conda install -c bioconda mmseqs2; mmseqs createdb query_fasta.fasta queryDB; mmseqs createdb target_fasta.fasta targetDB; mkdir no_e_cutoff; mkdir 30; mkdir 50; mmseqs search queryDB targetDB no_e_cutoff/resultDB tmp --search-type 3 >&1 | tee no_e_cutoff/no_e_cutoff.out; mmseqs convertalis queryDB targetDB no_e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my act",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/399:637,install,install,637,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399,1,['install'],['install']
Deployability,"Frameshift aignments are very useful for Nanopore data, where indels are common. It can also be used for virus-related research, as [some phages have conversed programmed frameshifts](https://www.cell.com/fulltext/S1097-2765(04)00539-8) in important genes. DIAMOND supports frameshift-aware alignments since [version 0.9.14](https://github.com/bbuchfink/diamond/releases/tag/v0.9.14). This is a simple explanation in their documentation:. > Penalty for frameshifts in DNA-vs-protein alignments. Values around 15 are reasonable for this parameter. Enabling this feature will have the aligner tolerate missing bases in DNA sequences and is most recommended for long, error-prone sequences like MinION reads. In the pairwise output format, frameshifts will be indicated by `\` and `/` for a shift by +1 and -1 nucleotide in the direction of translation respectively.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/417:362,release,releases,362,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/417,1,['release'],['releases']
Deployability,"Git SHA1 hash values are used in multiple ways that make for unpleasantness for anyone who has to package this code:; * In tags such as 12-113e3 which determines the version download URL; * In directory names such as MMseqs2-113e3212c137d026e297c7540e1fcd039f6812b1; * In the output of ""mmseqs version"", which defaults to the long-form SHA1 for building from git or ""GIT-NOTFOUND"" if compiled from downloads unless the builder defines VERSION_OVERRIDE at cmake. There are big disadvantages to this scheme:; * SHA1 hashes aren't monotonic, so someone has to look at the complete commit history to figure out whether the installed version; * There are 3 pieces of info, the major version, the long hash, and the number of digits in the shortened hash, that have to be transmitted when updating a package; * GIT-NOTFOUND is a really ugly string to get. Please use semantic versioning, which is ordered and standard.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/396:619,install,installed,619,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396,1,['install'],['installed']
Deployability,"Hello there, . I want to create a taxonomy db from the GTDB release 89. . I have found that Annotree presents a file with all the predicted gene sequences here:; [https://data.ace.uq.edu.au/public/misc_downloads/annotree/r89/](https://data.ace.uq.edu.au/public/misc_downloads/annotree/r89/). From this I could obtain a db easily and generate a tab-separating mapping file explicitly pointing to a genome: . ```; NZ_FWXU01000077.1_1 RS_GCF_900176345.1; NZ_FWXU01000059.1_5 RS_GCF_900176345.1; NZ_FWXU01000047.1_9 RS_GCF_900176345.1; NZ_FWXU01000020.1_25 RS_GCF_900176345.1; NZ_FWXU01000020.1_57 RS_GCF_900176345.1; NZ_FWXU01000020.1_89 RS_GCF_900176345.1; NZ_FWXU01000018.1_9 RS_GCF_900176345.1; NZ_FWXU01000018.1_41 RS_GCF_900176345.1; NZ_FWXU01000018.1_73 RS_GCF_900176345.1; NZ_FWXU01000018.1_105 RS_GCF_900176345.1; ```; There is also a taxonomy file [here](https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/) in which for each genome there is the taxonomic information in the following structure: . ```; RS_GCF_900234795.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Methylobacterium;s__Methylobacterium extorquens; RS_GCF_000012905.2	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhodobacterales;f__Rhodobacteraceae;g__Rhodobacter_A;s__Rhodobacter_A sphaeroides; GB_GCA_003096615.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Methylobacterium;s__Methylobacterium organophilum; GB_GCA_002709955.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__UBA8366;f__GCA-2696645;g__GCA-2696645;s__GCA-2696645 sp002709955; RS_GCF_001556125.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Bosea;s__Bosea sp001556125; RS_GCF_001555965.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Sphingomonadales;f__Sphingomonadaceae;g__Sphingomonas;s__Sphingomonas sp001555965; RS_GCF_900101505.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/244:60,release,release,60,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/244,2,['release'],"['release', 'releases']"
Deployability,"Hello! . First of all, I must confess that I have been using MMseqs2 for several years now and it has made my life much happier since then :smile:. I just saw that in the latest version you have enabled the option to run a workflow for profile-profile search, which is great news!. However, I have installed that version and have been searching the wiki and help and can't find how to run it. is there a specific command for it or am I missing something?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/634:298,install,installed,298,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/634,1,['install'],['installed']
Deployability,"Hello!. I've installed mmseqs2 to CentOS 7 with linuxbrew.; I'm trying to search best hits with iterative approach suggested in manual:. `mmseqs search ""$query"" ""$target"" result tmp --start-sens 1 --sens-steps 3 -s 7 --max-accept 1`; ; I've compared this method with BLAST on a small dataset. However mmseqs2 produces not a best hit but just some hit. For example:. `PS064S07MM_81253 fig|6666666.201545.peg.1407 0.509 1167 572 0 0 1167 0 1155 0.00E+00 1101` . If I run the standard search:. `mmseqs search ""$query"" ""$target"" result tmp`. I see the same best hit as in BLAST with the best score and e-value. Here is the convertalis output till the real best hit appears:. `PS064S07MM_81253 fig|6666666.201634.peg.2302 0.536 1172 543 0 0 1167 0 1172 0.00E+00 1182 ; PS064S07MM_81253 fig|451640.5.peg.1619 0.685 1172 369 0 0 1168 0 1172 0.00E+00 1599 ; PS064S07MM_81253 fig|1125712.3.peg.1765 0.518 1178 567 0 0 1165 0 1178 0.00E+00 1137 ; PS064S07MM_81253 fig|553184.4.peg.556 0.528 1170 552 0 0 1165 0 1170 0.00E+00 1158 ; PS064S07MM_81253 fig|633147.4.peg.496 0.521 1179 564 0 0 1167 0 1179 0.00E+00 1147 ; PS064S07MM_81253 fig|428126.7.peg.233 0.693 1171 359 0 0 1165 0 1171 0.00E+00 1619 ; PS064S07MM_81253 fig|1121444.3.peg.1136 0.531 1169 548 0 0 1167 0 1169 0.00E+00 1165 ; PS064S07MM_81253 fig|755731.4.peg.2885 0.547 1176 532 0 0 1168 0 1176 0.00E+00 1216 ; PS064S07MM_81253 fig|1118059.3.peg.6 0.523 1176 560 0 0 1168 0 1176 0.00E+00 1151 ; PS064S07MM_81253 fig|545697.3.peg.2439 0.543 1178 538 0 0 1168 0 1178 0.00E+00 1206 ; PS064S07MM_81253 fig|938293.3.peg.417 0.524 1176 559 0 0 1166 0 1176 0.00E+00 1152 ; PS064S07MM_81253 fig|879305.3.peg.501 0.529 1173 552 0 0 1166 0 1173 0.00E+00 1163 ; PS064S07MM_81253 fig|655811.4.peg.25 0.538 1167 539 0 0 1158 0 1167 0.00E+00 1184 ; PS064S07MM_81253 fig|525254.4.peg.863 0.525 1172 556 0 0 1166 0 1172 0.00E+00 1151 ; PS064S07MM_81253 fig|6666666.201634.peg.2160 0.548 1169 528 0 0 1168 0 1169 0.00E+00 1213 ; PS064S07MM_81253 fig|6666666.201633",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/67:13,install,installed,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/67,1,['install'],['installed']
Deployability,"Hello, ; I want to use MMseqs2 to cluster nucleotide sequences from different patients. I use WSL on windows with MMseqs2 version 13-45111+ds-2 by compiling from source. Firslty, I have created separate fasta files using python from an original dataframe containing nucleotide sequences and their IDs. Then, I placed the resulting fasta files in WSL under user/MMseqs2/build/tests and ran the following command: ""mmseqs createdb tests/output1.fasta test/DB1"" while in the ""MMseqs2"" root. However, I get the following error message: ""Cannot open test/DB1.source for writing"". Can you please help me? I apologise in advance if the problem is basic and I've made a mistake in the installation or execution procedure.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/725:677,install,installation,677,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/725,1,['install'],['installation']
Deployability,"Hello,. I downloaded and set up the Uniref100 database for the taxonomy pipeline according to the instructions, but when I run the taxonomy command, the output says `Computed index is too large. Avoid using the index`. It also says `split was set to 5 but at least 8 are required. Please run with default paramerters` even though I never adjusted the default. Are these things I should be worried about, and could I be doing something different to make this search more efficient? I know it is a huge database. Full traceback of commands below. Thank you in advance,; -Matt. ## Commands to set up the taxonomy database; ```; mmseqs databases UniRef100 uniref100.mmseqs tmp. mmseqs createtaxdb uniref100.mmseqs tmp --threads 8; createtaxdb uniref100.mmseqs tmp --threads 8. mmseqs createindex uniref100.mmseqs tmp --threads 8; createindex uniref100.mmseqs tmp --threads 8; ```. ## Search commands; ```; mmseqs createdb N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.faa N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db. mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_42; 5.proteins.taxonomy temp --threads 8; ```. ## Full traceback of search command; ```; mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8; Tmp temp folder does not exist or is not a directory.; Create dir temp; taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:72,pipeline,pipeline,72,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,1,['pipeline'],['pipeline']
Deployability,"Hello,. I have installed mmseqs2 in linux with anaconda with the following command (the one shown in your documentation):; conda install -c conda-forge -c bioconda mmseqs2. Now I am trying to run the following command. mmseqs cluster DB DB_clu tmp --strand 1. In order to consider only the forward and not the reverse strand. However I see that the --strand option is not available. I have found the --strand option in the https://github.com/soedinglab/MMseqs2/blob/master/src/commons/Parameters.cpp file. Is there any way to consider only the forward strand for cluster my data? . Thank you so much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/657:15,install,installed,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/657,2,['install'],"['install', 'installed']"
Deployability,"Hello,. I have installed mmseqs2 using conda. This has worked ok. The installed package has the following version attributes. `mmseqs2 11.e1a1c h2d02072_0 bioconda`. However, when I go to perform an RBH, using easy-rbh as mentioned in the userguide, I get the error below. `Invalid Command: easy-rbh`; `Did you mean ""mmseqs easy-search""?`. I think easy-rbh is not updated for conda installation. Please advice what to do. Thanks; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/332:15,install,installed,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332,4,"['install', 'update']","['installation', 'installed', 'updated']"
Deployability,"Hello,; ## Current Behavior; When I include ```qaln``` and ```taln``` fields in my ```convertalis``` results, I occasionally get a null bite (in ```vim``` it looks like ```^@```), which breaks a line in the downstream analysis. See attached screenshots in Vim and Libreoffice, the ```tsv``` itself also attached (truncated, see lines 89–90).; ![issue-libreoffice](https://github.com/soedinglab/MMseqs2/assets/17991942/e198caa5-7c2d-405e-a91d-97595e0bf569); ![issue-vim](https://github.com/soedinglab/MMseqs2/assets/17991942/04fc1f53-22f3-4efb-95a3-39a044a9a353); [mmseqs-issue.tsv.zip](https://github.com/soedinglab/MMseqs2/files/14981527/mmseqs-issue.tsv.zip). ## Steps to Reproduce (for bugs); ```; # Create a taxonomyDB from PR2 database; # Get 'pr2_version_5.0.0_SSU_taxo_long.fasta' here: https://github.com/pr2database/pr2database/releases/download/v5.0.0/pr2_version_5.0.0_SSU_taxo_long.fasta.gz); # Uses seqkit and taxonkit programs (github.com/shenwei356). sed 's/_/ /' pr2_version_5.0.0_SSU_taxo_long.fasta > pr2_to_mmseqs.fasta; echo -e ""domain\tsupergroup\tdivision\tsubdivision\tclass\torder\tfamily\tgenus\tspecies"" > pr2_tax; cat pr2_to_mmseqs.fasta | seqkit seq -n | sed 's/[^|]*|[^|]*|[^|]*|//' | sed 's/|/\t/g' >> pr2_tax; cat pr2_tax | taxonkit create-taxdump -O pr2_taxdump; cat pr2_to_mmseqs.fasta | seqkit seq -n | sed 's/[^|]*|[^|]*|[^|]*|//' | cut -d '|' -f 9 | taxonkit name2taxid --data-dir pr2_taxdump > pr2_name2taxid; paste <(cat pr2_to_mmseqs.fasta | seqkit seq -ni) <(cat pr2_name2taxid | cut -f2) > pr2_taxidmap; mmseqs createdb pr2_to_mmseqs.fasta pr2; mmseqs createtaxdb pr2 tmp --ncbi-tax-dump pr2_taxdump --tax-mapping-file pr2_taxidmap; mmseqs createindex pr2. # Search; mmseqs prefilter lcB1_97 pr2.idx lcB1_97_pref -s 2.0 --exact-kmer-matching 1 --max-seq-len 500 -c 0.9 --cov-mode 2; mmseqs align lcB1_97 pr2.idx lcB1_97_pref lcB1_97_aln -a 1 -e 1e-30 --alignment-mode 3 --alignment-output-mode 0 --min-aln-len 130 -c 0.9 --cov-mode 2 --max-seq-len 500 --max-ac",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:837,release,releases,837,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['release'],['releases']
Deployability,"Hello,; I'm running `mmseqs search` on Travis virtual machine for integration test purpose.; The issue I have is that mmseqs requires more memory than it's available on the machine.; The dataset I'm using consists of 10 sequences, where each is 100 nucleotides long.; Is there a possibility to overcome this behaviour?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb dna.fasta queryDB; mmseqs createdb dna.fasta targetDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99; ```. ## MMseqs Output (for bugs); ```; Error executing process > 'search (1)'. Caused by:; Process `search (1)` terminated with an error exit status (1). Command executed:. mmseqs createdb query.1.fasta queryDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G; mmseqs createtsv queryDB targetDB outputDB chunk_alignment_tsv. Command exit status:; 1. Command output:; Omit consensus 568767/qfalse; Min codons in orf 	30; Max codons in length uery_seq32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode _seqs_sp2; Orf start mode a:VTML801; Forward frames corr 1 -1,2,3; Reverse frames 1.5 --th1,2,3; Translation table 	1; Translate orf de 0; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query se a com1; Search type 	3; Number search iterations 	1; Start sensitivity work/ac/4; Search steps 	1; Run a seq-profile search in slice modeging to false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false; ; search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G ; ; MMseqs Version: 	6d92cd21676ccc36531f2852f7eb747f6389435f; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	3; E-value thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/253:66,integrat,integration,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253,1,['integrat'],['integration']
Deployability,"Hi - I ran the easy-search command (newest release, 6f452, self-compiled with cmake 3.25.2 and gcc 12.2.0) on a Linux system with the example query and database file from the MMseqs2 repository and encountered an unexpected behaviour. The BLAST tab output format never includes gap openings (even though many alignments should contain them) and the bit score deviates from what e.g. BLAST reports for the same alignments. To give an example, the pretty html output contains the following alignment for query ```C0QTH6``` and subject ```A0A059IV01```:. ```; Q 0 IGAGVAIGAAAGGGAAGLGNAIRGVLEGMARNPNMGGKLLTTMFIGMALIETFVLYGLLIAIIFLF; T 0 IAIGLAVFGMLGAG-LGIANIFSAMLNGIARNPESEGKMKSYVYIGAAMVEIMGLLAFVLAMLLIF; ```. However, when running the same search but producing a BLAST tab output, the gap is not present (i.e. 0 gap openings):. ```; C0QTH6	A0A059IV01	0.333 66 43	0	43	108	9	73	3.416E-07 48; ```. BLAST produces basically the same alignment (the gap is moved by one but it should create the same score due to the pairing):. ```; Query 43 IGAGVAIGAAAGGGAAGLGNAIRGVLEGMARNPNMGGKLLTTMFIGMALIETFVLYGLLIAIIFLF 108; I G+A+ G G G+ N +L G+ARNP GK+ + ++IG A++E L ++A++ +F; Sbjct 9 IAIGLAVFGMLGAGL-GIANIFSAMLNGIARNPESEGKMKSYVYIGAAMVEIMGLLAFVLAMLLIF 73; ```. Here, the BLAST tab format also includes the gap and it leads to a different bit score compared to MMseqs2. ```; C0QTH6	A0A059IV01	33.333 66 43	1	43	108	9	73	4.79e-08 46.2; ```. My exact calls (for the BLAST tab output) are:. ```; mmseqs createdb DB.fasta db_mmseqs2. mmseqs easy-search \; QUERY.fasta \; db_mmseqs2 \; out.m8 \; tmp \; -s 7.5 \; --search-type 3 \; --threads 4 \; --max-seqs 10000 \; --comp-bias-corr 0 \; --comp-bias-corr-scale 0 \; -e 1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/792:43,release,release,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/792,1,['release'],['release']
Deployability,"Hi . I was trying to install the new release [compiling from the source](https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux). ; It always worked in my machine but in this new release, something fails on the `make` step. ```; $ make; [ 1%] Built target microtar; [ 3%] Built target cacode; [ 8%] Built target alp; [ 8%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:27:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h: In function 'simde__m128 simde_x_mm_abs_ps(simde__m128)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h:926:74: error: '_mm512_abs_ps' was not declared in this scope; return _mm512_castps512_ps128(_mm512_abs_ps(_mm512_castps128_ps512(a)));; ^; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse3.h:30:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/ssse3.h:30,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:31,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h: In function 'simde__m128d simde_x_mm_abs_pd(simde__m128d)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h:408:74: error: '_mm512_abs_pd' was not declared in this scope; return _mm512_castpd512_pd128(_mm512_abs_pd(_mm512_castpd128_pd512(a)));; ^; lib/ksw2/CMakeFiles/ksw2.dir/build.make:81: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o' failed; make[2]: *** [lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o] Error 1; CMakeFiles/Makefile2:720: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/all' failed; make[1]: *** [lib/ksw2/CMakeFiles/ksw2.dir/all] Error 2; Makefile:148: recipe for target 'all' failed; make: *** [all] Error 2; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/347:21,install,install,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347,3,"['install', 'release']","['install', 'release']"
Deployability,"Hi MMseqs2 team,. I am completely new to MMseqs2 and simply want to taxonomically classify a few (30 max.) amino acid sequences that I retrieved from my pipeline. For this, I want to use the Uniref90 repository and I started with creating the database and indexed:. mmseqs createdb uniref90.fasta uniref90_DB; mmseqs createindex uniref90_DB uniref90_index --threads 16; mmseqs createtaxdb uniref90_DB tmp. I did the same for my queries:; mmseqs createdb queries.fa queries_DB; mmseqs createindex queries_DB queries_index. Then, I searched the query database against the Uniref90 database:; mmseqs search queries_DB uniref90_DB queries_search_result uniref90_index --threads 16. Finally, I applied LCA taxonomy:; mmseqs taxonomy Untersee/SRR17021127_orf_nosZ_only_DB uniref90_DB taxonomyResult tmp --tax-lineage 1 . This is the output:; MMseqs Version: 	12ba202798016f7f8880be11d792592fdb674448; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	1; Compressed 	0; Threads 	128; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nuc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/708:153,pipeline,pipeline,153,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708,1,['pipeline'],['pipeline']
Deployability,"Hi Martin and Milot. Thanks for the nice software. So far it's working well for my applications. ## Context; Not a bug or problem but a use question. Sorry for opening an issue... Let me know if there is a user forum or better place to ask. With `mmseqs filterdb <i:resultDB> <o:resultDB>` is it possible to extract multiple best hits? for example if multiple queries have the same bitscore/evalue to the same target? Is it some combination of the ` --filter-regex` and the `--comparison-operator` options? For example `--filter-regex <bitscore column> --comparison-operator ge`?. Also do you have any particular parameter recommendations for searching metagenomic short reads against a target database? I'm searching overlapped metagenomic reads (average insert size of ~215 bp) against a custom 58x10^6 sequence protein database). Currently, I'm using default `mmseqs prefilter` and `mmseqs align` options with `-s 4` and `--cov-mode 2 -c 0.7` so that at least 70% of the read must align to target. Wondering if you have any additional or better recommendations for this use case. I read the ECCB tutorial which sort of addresses this question, but because I'm not searching assemblies I want more sensitivity than the `mmseqs map` workflow. thanks very much!; -shane. ## Your Environment; mmseqs version: Release 7-4e23d (4e23d5f1d13a435c7b6c9406137ed68ce297e0fc)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/152:1308,Release,Release,1308,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/152,1,['Release'],['Release']
Deployability,Hi all i seem to be getting an error at the end of downloading the NR database. ## Expected Behavior; downloading NR database using mmseqs databases NR outpath/NCBI_NR tmp. ## Current Behavior; Download goes well until the end where i get an error. createdb tmp/2421402983074857069/nr.gz outpath/NCBI_NR --compressed 0 -v 3 . Converting sequences; Cannot open outpath/NCBI_NR.source for writing. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. running on ubuntu 22.04.2; installed using conda; MMseqs version 14.7e284; intel,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/691:527,install,installed,527,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/691,1,['install'],['installed']
Deployability,"Hi everyone,. ## Expected Behavior. I would to construct clustering or align sequences with `cluster` or `search`. I'm following the example of [uniclust](https://github.com/soedinglab/uniclust-pipeline/blob/master/uniclust_workflow.sh) to create different family. . ## Current Behavior. When I try to align my sequences from a subdatabase, the `prefiler` stay at the `index table : fill` step. At the begin I though to a memory problem, because my code work on a little dataset (100 000 proteins) but not on biggest (3 billions). So I add `--split-memory-limit`. On one test it was working but not on the other (maybe by chance). . ## Steps to Reproduce (for bugs). `mmseqs prefilter $DB_name $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exac",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382:194,pipeline,pipeline,194,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382,1,['pipeline'],['pipeline']
Deployability,"Hi folks! Thanks for maintaining this software. I've been trying to set up the GTDB database for taxonomy analysis, but can't seem to get the database set up regardless of the computer used (I've tried both my Linux server as well as my own Mac laptop; mmseqs was installed using conda on the server and using the MacOSX binary available on the mmseqs installation page on the laptop). Details are below. Thanks in advance for any light you can shed on the issue!. ## Expected Behavior; Creation of a taxonomy database using GTDB as the database. ## Current Behavior; the createdb step dies after downloading the GTDB database. ## Steps to Reproduce (for bugs); command:; mmseqs databases GTDB outpath/GTDB tmp. ## MMseqs Output (for bugs). bash-3.2$ bin/mmseqs databases GTDB outpath/GTDB tmp; databases GTDB outpath/GTDB tmp. MMseqs Version: 2fad714b525f1975b62c2d2b5aff28274ad57466; Tsv false; Force restart with latest tmp false; Remove temporary files false; Compressed 0; Threads 8; Verbosity 3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 31 100 31 0 0 41 0 --:--:-- --:--:-- --:--:-- 41; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 51.3G 100 51.3G 0 0 1565k 0 9:33:26 9:33:26 --:--:-- 2662k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 54.4M 100 54.4M 0 0 1374k 0 0:00:40 0:00:40 --:--:-- 939k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 1080k 100 1080k 0 0 489k 0 0:00:02 0:00:02 --:--:-- 491k; tar2db tmp/14668141768776664068/gtdb.tar.gz tmp/14668141768776664068/tardb --tar-include faa.gz$ --threads 8 -v 3. Time for merging to tardb: 0h 0m 0s 28ms; Time for merging to tardb.lookup: 0h 0m 0s 13ms; Time for processing: 0h 7m 32s 203ms; createdb tmp/14668141768776664068/tardb outpath/GTDB --compressed 0 -v 3. Converting sequences; Cannot o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/809:264,install,installed,264,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/809,2,['install'],"['installation', 'installed']"
Deployability,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348:564,update,update,564,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348,2,['update'],['update']
Deployability,"Hi soedinglab,. I am running the `nf-core/funcscan` pipeline to assign taxonomy to contigs using MMseqs2 with the GTDB database. My contigs are around 100-200 MB in size, and I am running the pipeline on a machine with the following specs:; - 36 cores; - 256 GB RAM. Despite utilizing all available resources, `mmseq2` takes more than 4 hours per sample and does not finish. I am wondering if this runtime is normal or if there are ways to optimize the process to make it faster. . **Questions:**; 1. What are the common bottlenecks when running MMseqs2 with the GTDB database, and how can I address them?; 2. What is the expected runtime for MMseqs2 on contigs of this size?; 3. Are there specific MMseqs2 settings (e.g., sensitivity, database partitioning) that could help speed up the analysis without compromising too much accuracy?. Any advice or insights from your experience with MMseqs2 and GTDB would be appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/895:52,pipeline,pipeline,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/895,2,['pipeline'],['pipeline']
Deployability,"Hi, ; I am using mmseqs taxonomy, and following the taxonomy assignment workflow, using uniref100 as a target DB. . the entire workflow works great, until the ""mmseqs taxonomy"" command. ; The first search seems to be working good, however, I am getting an error in the second search, and the process dies. . MMseqs call:; mmseqs taxonomy est00001DB uniref100DB uniref100DB.tsv /ncbi-taxdump/ queryLcaDB /tmp/ --threads 25. ## MMseqs Output . Program call:; /tmp/3706626149599022609/top1 uniref100DB /tmp/3706626149599022609/top1 /tmp/3706626149599022609/aligned --extract-mode 2 . MMseqs Version:	2.23394; Extract mode	2; Threads 	80; Verbosity 	3. Query file: /tmp/3706626149599022609/top1; Target file: uniref100DB; Alignment database: /tmp/3706626149599022609/top1; Start writing file to /tmp/3706626149599022609/aligned; Set sym link from /tmp/3706626149599022609/top1_h to /tmp/3706626149599022609/aligned_h; Set sym link from /tmp/3706626149599022609/top1_h.index to /tmp/3706626149599022609/aligned_h.index; Done.; Time for merging files: 0 h 0 m 1 s; Time for processing: 0 h 0 m 25s; Please recreate your database or add a .dbtype file to your sequence/profile database.; Error: Second search died. I am using version 2.23394 installed through conda environment, ubuntu 16.04 server; Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/80:1235,install,installed,1235,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80,1,['install'],['installed']
Deployability,"Hi, ; I'm using the mmseqs2 to assign the taxonomic label for my human gut microbiota contigs, Here I have two questions and any suggestion would be nice,. 1. I have noticed that there are many prebuiled dabatabse which includ GTDB ,but in the wiki page there is a section about `Create a seqTaxDB for GTDB`, does this step have been integrated in the pre-established GTDB database? ; 2. I have tried differert database to run the taxonomy module, finally, I found there are little consistance at the species level between any two database ,I tried swissprot, uniref50 , uniref90 , nr, and GTDB, so I'm confused which database should be adopt, is there any recommendation? by the way, it's bacteria. Is there any preference? The results in your paper use the refseq database ,so what if you change another database?. I do need your help, please,Thanks a lot !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/546:334,integrat,integrated,334,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/546,1,['integrat'],['integrated']
Deployability,"Hi, I have been using MMseqs2 to obtain clusters of multiple sequence files and then obtain each sequence's taxonomy. I followed this pipeline:. ```; mmseqs easy-cluster ${rawfas[@]} newcluster tmp --min-seq-id 0.3 -c 0.5 --cov-mode 1 --cluster-mode 2 -e 0.001 -s 6; mmseqs createdb ${rawfas[@]} queryDB_all; mmseqs taxonomy queryDB $TXDB clusterTax tmp --lca-mode 4 --split-memory-limit 60G \; --lca-ranks superkingdom,phylum,class,order,family,genus; mmseqs createtsv queryDB clusterTax ../clusterTax.tsv; ```. The output of these is a clusterRes_cluster.tsv file including the representative sequences and the cluster members, and a clusterTax file with the taxonomy for each sequence. My question is, is there any MMseqs2 implementation to obtain the common taxonomy for each cluster, like an LCA algorithm applied to all the sequences belonging to each cluster, or something similar? Or another software that allows me to do that?. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/815:134,pipeline,pipeline,134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/815,1,['pipeline'],['pipeline']
Deployability,"Hi, Thanks always for the nice tool!; I have clustered a large sequence set with `mmseqs linclust `, and now I want to add some sequences and update the clustering result with `mmseqs clusterupdate`. But it seemed that `mmseqs clusterupdate` updates clustering results with the `mmseqs cluster` algorithm but not `mmseqs linclust `.; I am guessing this because all the parameters of `mmseqs clusterupdate` match with `mmseqs cluster`, but not `mmseqs linclust `. Is it correct?; Is it possible to update clustering with `mmseqs linclust ` algorithm?. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/630:142,update,update,142,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/630,3,['update'],"['update', 'updates']"
Deployability,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/212:603,release,release,603,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212,2,"['install', 'release']","['installed', 'release']"
Deployability,"Hi, while benchmarking your tool I came across an issue clustering with `--cov-mode 1`. Clusterable pairs remain in the representative set that should be found by the search workflow. Steps to reproduce this using release 14 and the astral95 set (http://scop.berkeley.edu/downloads/scopeseq-2.08/astral-scopedom-seqres-gd-sel-gs-bib-95-2.08.fa):. ```; mmseqs cluster astral95 out . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; # self-search the representatives; mmseqs search reps reps reps.self . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; mmseqs convertalis reps reps reps.self reps.self.tsv; awk '{ if($1!=$2) print }' reps.self.tsv | wc -l; 1231; ```. Running the same command lines using release 11 and `--cluster-mode 2` results in 9 hits instead of 1231. Looks like a bug or am I not understanding something?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/664:214,release,release,214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/664,2,['release'],['release']
Deployability,"Hi,. I am interested in computing all pairwise sequence identities in a given cluster. I believe mmseqs alignall accomplishes this task, but I am getting unexpected results. Using the ""examples"" folder that was downloaded during the mmseqs installation process, I created the following clusters:. `mmseqs createdb examples/QUERY.fasta queryDB`; `mmseqs cluster queryDB queryDB_clu tmp --min-seq-id 0.3 -c 0.8`; `mmseqs createtsv queryDB queryDB queryDB_clu queryDB_clu.tsv`. I then use mmseqs alignall to compute all pairwise sequence identities in each cluster:. `mmseqs alignall queryDB queryDB_clu queryDB_alnall`; `mmseqs createtsv queryDB queryDB queryDB_alnall queryDB_alnall.tsv`; `OFS=""\t"" awk 'FNR==NR{a[$1]=$2;next}{$3=a[$3]; print}' queryDB.lookup queryDB_alnall.tsv > queryDB_alnall_newid.tsv`. Unfortunately, the pairwise sequence identities that get calculated seem incorrect. For instance, when you compare the sequence P40148 against itself, I get a sequence identity less than 100% (i.e., 93.1%). Below is an example line from the output file `queryDB_alnall_newid.tsv`:. `P40148 P40148 P40148 192 0.931 2.952E-59 -1 96 97 -1 96 97`. Alternatively, I tried specifying alignment mode of 3 (because I think that's also the default of `mmseqs cluster`):. `mmseqs alignall queryDB queryDB_clu queryDB_alnall --alignment-mode 3`. Then I strangely get 0% sequence identity for *all* pairwise comparisons. E.g,:; `P40148 P40148 P40148 192 0.000 2.952E-59 0 96 97 0 96 97`. I am a non-scientist learning how to use mmseqs, so I may be missing something obvious. I would be very grateful for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503:240,install,installation,240,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503,1,['install'],['installation']
Deployability,"Hi,. I am trying to use MMseqs2 to cluster a large protein database, splitting the work into batch jobs. I followed the search example from https://github.com/soedinglab/mmseqs2/wiki#how-to-run-mmseqs2-on-multiple-servers-using-batch-systems, searching batches of the database against the whole database. Then I am trying to use search results to compute clusters with the `clust` subcommand. Here is my script:; ```; $MMSEQS createdb $INFASTA $DB; $MMSEQS splitdb $DB ${DB}_split --split $NUM_SPLITS. for i in $(ls ${DB}_split_*_$NUM_SPLITS) ; do; $MMSEQS search $i $DB ${i}_search tmp; done. $MMSEQS mergedbs ${DB}_split_0_${NUM_SPLITS}_search ${DB}_search $(awk 'BEGIN {for (i=1;i < '$NUM_SPLITS';i++) printf(""'$DB'_split_%d_'$NUM_SPLITS'_search "", i);}'). $MMSEQS clust ${DB} ${DB}_search ${DB}_clust ; ```; `mmseqs clust` gives `Sequence db size != result db size` error. Is there a way to combine the search results into one results database or compute clusters for each of my database batch and merge them, or any other way do clustering on a batch system (without MPI)? . ## Your Environment; Linux CentOs.; MMseqs2 Release 14-7e284: https://github.com/soedinglab/MMseqs2/releases/download/14-7e284/mmseqs-linux-avx2.tar.gz",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/764:1124,Release,Release,1124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/764,2,"['Release', 'release']","['Release', 'releases']"
Deployability,"Hi,. I am using a strategy that I have been using for some time successfully but since the last update, it has stopped working. The idea is to group the sequences and generate an MSA for each cluster to generate models for each MSA and compare all models with hhsearch. So after compiling my cluster, I use `createseqfiledb` and then use` apply` with clustalo. Exactly the apply step has returned me some errors and it never finishes. The usual pipeline is:; ```; # .... a lot of clusters hierarchically prepared ; mmseqs mergeclusters sbps.DB sbps.CLU $(\ls -d1t id_0cov_0.8evalue_* | tac | sed 's/$/\/MMseqsClust/' | xargs ) --threads 30 ; mmseqs createtsv sbps.DB sbps.DB sbps.CLU sbps.CLU.tsv --threads 40. mmseqs createseqfiledb sbps.DB sbps.CLU sbps.CLU.SEQ --threads 30 --min-sequences 3. ## errors from this point; mmseqs apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --output-order=input-order --threads=1 --iter=5 ; ```. The error is exemplified by this:; ```; apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --threads=1 --iter=5 . MMseqs Version:	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Threads 	30; Compressed	0; Verbosity 	3. Start applying.; write stdin1: Bad address ] 0.00% 1 eta -; ERROR: Sequence 'WP_078846918.1/28-316' has 0 residues; FATAL: Reading sequence file '-' failed; ERROR: Sequence 'WP_082295029.1/41-339' has 0 residues ] 2.09% 29 eta 2h 51m 21s ; FATAL: Reading sequence file '-' failed; Entry 30 exited with error code 1!. ```. I may share the `sbps.DB` and `sbps.CLU` and associated files to check, but I'm sure that they are fine. Just tell me how to send to you. But I don't know if the issue happens in `createseqfiledb` but since it doesn't return any error message and the files seem okay, the problem may be the STDIN.; Searching sequences like `WP_082295029.1/41-339` in the files I was able to find it and the sequence is the same as the initial fasta file. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/230:96,update,update,96,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230,2,"['pipeline', 'update']","['pipeline', 'update']"
Deployability,"Hi,. I have quite a big number of protein sequences that I want to cluster. I tried to cluster them together, it didn't work out (I don't know if size was the issue, but I was in a hurry), so I split the file in two and clustered each separately (that worked). I then combined two outputs (*rep_seq.fasta) into a single file that I wanted to cluster once more (cca 75 mil sequences). However, it always dies in the same way, although I tried changing memory settings and threads. This file is not bigger than the previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 21474836",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265:647,install,installed,647,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265,1,['install'],['installed']
Deployability,"Hi,. I have seen that in the mmseqs user guide, there is a part about how to preprocess the GTDB database. I am still confusing after reading that. I want to ask if there is more details about how to build the database from the latest GTDB data (https://data.ace.uq.edu.au/public/gtdb/data/releases/release202/202.0/) for mmseqs taxonomy? . Thanks for your any suggestions. Sincerely; Shaojun",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/514:290,release,releases,290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514,1,['release'],['releases']
Deployability,"Hi,. I have written a tool called pharokka (https://github.com/gbouras13/pharokka) that annotates bacteriophage genomes. Pharokka uses mmseqs2 to match predicted CDS to the PHROGs (https://phrogs.lmge.uca.fr), CARD and VFDB databases using mmseqs2 which follows the method at https://phrogs.lmge.uca.fr/READMORE.php. Mmseqs2 is amazingly fast especially for large input metaviromes, so it's a brilliant choice for this clustering - thanks for developing it!. I am coming across a problem with the new version released 10 days ago. With v 13.4511, the 3 mmseqs2 searches take approximately 5-10 minutes in total depending on input, architecture and threads used. However, since mmseqs2 v14-7e284 has been released, users of pharokka have reported that the mmseqs2 step hangs indefinitely (at least 20+ hours) when pharokka with mmseqs2 v14-7e284 is installed with bioconda. I have replicated the issue on my machines also. . The relevant lines in pharokka are 358-369:. https://github.com/gbouras13/pharokka/blob/3b8f7ae207b367366765f482c9dce1dd2cccee80/bin/processes.py#L358 . # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625:509,release,released,509,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625,3,"['install', 'release']","['installed', 'released']"
Deployability,"Hi,. I'm trying to learn the workflow through the tutorial. unfortunately, the commands in the tutorials are wrong according to the program codes. i followed this steps. # Download the database; wget http://wwwuser.gwdg.de/~compbiol/mmseqs2/tutorials/uniprot_sprot_2018_03.fasta.gz; wget http://wwwuser.gwdg.de/~compbiol/mmseqs2/tutorials/uniprot_sprot_2018_03_mapping.tsv.gz; gunzip uniprot_sprot_2018_03_mapping.tsv.gz. # Create a taxonomically annotated sequence database; mmseqs createdb uniprot_sprot_2018_03.fasta.gz uniprot_sprot; mmseqs createtaxdb uniprot_sprot tmp --tax-mapping-file uniprot_sprot_2018_03_mapping.tsv . (mmseq2) cyborg@skynet:~/root_dev$ mmseqs createtaxdb uniprot_sprot tmp --tax-mapping-file uniprot_sprot_2018_03_mapping.tsv; mmseqs createtaxdb:; Annotates a sequence database with NCBI taxonomy information. The program will download the Uniprot taxMappingFile and ncbi-taxdump-folder if only two arguments are passed. Please cite:; Steinegger, M. & Soding, J. MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:sequenceDB> [<i:taxMappingFile> <i:ncbi-taxdump-folder>] <tmpDir> [options]. common options	default 	description [value range]; -v	3 	verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. Unrecognized parameter --tax-mapping-file; Did you mean ""-v""?. if there are any updates to the codes, please let me know. -Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/823:1478,update,updates,1478,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823,1,['update'],['updates']
Deployability,"Hi,. I'm using MMseqs2 for all-vs-all alignments. As indicated in the user guide pdf, I'm using the bash script to perform a fake prefiltering step before aligning. That seems to work, as all alignments are computed, but the results are a bit unexpected:; ```; >Q8CD91; EERVVHWYFKLLDKNSSGDIGKKEIKPFKRFLRKKSKPKKCVKKFVEYCDMNNDKSITVQELMGCLGVTREEGKANTRKRHTPRGNAESSSSNRQPRKQG; >Q95JC9; GPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPPPGPSPPRPPPGPPPQ; ```; I didn't change much of the defaults; ```; mmseqs createdb --dbtype 1 dummyfasta.fasta seq_db; mmseqs_fake_prefilter.sh seq_db seq_db pref; mmseqs align seq_db seq_db pref align_db --alignment-mode 3 -e inf --min-seq-id 0.3; mmseqs convertalis seq_db seq_db align_db check_alignments.tab; ```. ```; query target fident alnlen mismatch gapopen qstart qend tstart tend evalue bits; Q8CD91 Q8CD91 1.000 100 0 0 1 100 1 100 1.707E-71 202; Q8CD91 Q95JC9 1.000 2 0 0 83 84 91 92 4.610E+01 9; Q95JC9 Q95JC9 1.000 100 0 0 1 100 1 100 7.088E-35 108; Q95JC9 Q8CD91 0.333 3 1 0 11 13 21 23 1.508E+02 7; ```; The second alignment's `fident` makes no sense to me. I understand that the e-value is high too, but I really want all pairwise % identities returned so I don't use it for filtering. Do I need to use a different configuration to make this work, or is mmseqs2 just not suitable for this all-vs-all identity task?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/498:1297,configurat,configuration,1297,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/498,1,['configurat'],['configuration']
Deployability,"Hi,; I am new to MMSeqs2. It is really a good tool. However, I have 2 queries, may be basic too. But I want your opinions.; In an attempt to build a set of 30-90% sequence similarity, I removed the redundant hits myself firstly and then deployed a minimum sequence identity threshold of 30% and coverage 1 (All 92 input sequences are close homologues and so I want to avoid the partial match to build the good set), it resulted in 52 hits. So, now as you are guiding, the multiple resultant cluster sets have the sequence identity lesser than 30%, but the 52 hits share a sequence identity > 30%. Is this correct that this way my reduced set of 52 hits contains the sequences that are 30-90% identical?. Further, why is it that for another sequence-group, the resultant set spans the same 45 sequences for both 30% and 90% cutoffs. So, does it mean that the length of atleast 1 representative sequence is bigger and it spans multiple sequences in either of these ranges to result in the same set? How should this result be defined?; Thanks for your clarifications.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/173:237,deploy,deployed,237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/173,1,['deploy'],['deployed']
Deployability,"Hi,; thank you very much for mmseqs2, it's really amazing! . We are clustering a few million of sequences following a similar approach than the one described in your uniclust pipeline. Before reinventing the wheel, we are wondering if mmseqs has an easy workaround to extract the sequence identities for each pair of sequences in a cluster from the _alignment_ file. Our aim would be to be able to integrate the identities between pairs to the output of _createtsv_. Do you have any recommendations?. Many thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/13:175,pipeline,pipeline,175,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/13,2,"['integrat', 'pipeline']","['integrate', 'pipeline']"
Deployability,"Hi; I am trying to compile the MPI version of MMseqs2 and I am getting the following [error](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) . ## Expected Behavior; Should compile without errors; ## Current Behavior; Fails with:; ```; src/CMakeFiles/mmseqs-framework.dir/build.make:1598: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```; ## Steps to Reproduce (for bugs); ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; make; ```; ## MMseqs Output (for bugs); Full error log [here](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) ; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): fe2b746e63519424f565b4fbeb4ca5dba905adc7; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; GCC: gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10); OPENMPI: (OpenRTE) 1.10.2; CMAKE: 3.5.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel Xeon Processor (Skylake, IBRS) with 256GB (); * Operating system and version: Ubuntu 5.4.0-6ubuntu1~16.04.10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/158:800,Release,Release,800,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/158,1,['Release'],['Release']
Deployability,"Hi; this is not an issue but a potential enhancement we discussed with @martin-steinegger.; We have a seed clustering database that is continuously updated with new sequences. The size of the DB is growing quite fast, and eventually, we will have problems storing and distributing it. As we have many redundant sequences in each cluster. We thought that having a module that takes a DB and then filters it based on a criterion similar to `--diff` from `result2msa` or `result2profile` would be very useful to keep only informative sequences in the clusters. Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/316:135,continuous,continuously,135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316,2,"['continuous', 'update']","['continuously', 'updated']"
Deployability,"Hi; we are continuously updating a large cluster DB with new data, and one of the steps that are taking longer is when the new sequences are updated with the old keys using the function `joinAndReplace`. We are using this function for other purposes and we added to the sorting parts `--parallel` and `--buffer-size` to speed up and reduce the I/O needed for the sorting. I think it would be great to have available these options if `sort` is modern enough and fallback to the original `joinAndReplace` if `sort` doesn't support these options. What do you think?. Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/269:11,continuous,continuously,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269,2,"['continuous', 'update']","['continuously', 'updated']"
Deployability,"Hi; we are having several problems with the `clusterupdate` workflow on 39ee37f97ab065a3763ee10b834b3e6e25aae491-MPI. ## Expected Behavior; The `clusterupdate` workflow should update existing clusters and the number of sequences should match OLDDB+NEWDB; ## Current Behavior; The workflow has problems in some of the steps:. 1) Most probably related to the new behavior of not merging files, the logic [here](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L218) fails to create the `updatedClust` when concatenating the old cluster results with the new hits. When the workflow is on its [final step](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L271) and has to concatenate the old clusters with the new ones, fails. 2) In our run, we are missing ~200K new sequences that had a hit after the search against the old cluster representatives but it seems to be lost in the `swapresults` [step](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L202) . Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/199:176,update,update,176,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/199,2,['update'],"['update', 'updatedClust']"
Deployability,"Hi; we are having some problems using the MPI version with commit 39ee37f97ab065a3763ee10b834b3e6e25aae491. Thank you; Antonio. ## Expected Behavior; MPI version should use all threads in each of the nodes for prefilter. ## Current Behavior; MPI only uses all threads in one node and one thread in the rest. It works as expected on release 7-4e23d and has the wrong behavior on 39ee37f97ab065a3763ee10b834b3e6e25aae491. ## Steps to Reproduce (for bugs); The command we use in both cases is:; ```{bash}; export OMPI_MCA_btl=^openib; export OMP_NUM_THREADS=28. RUNNER=""mpirun --mca btl_tcp_if_include ens3 -n 10 --map-by ppr:1:node --bind-to none "" ""${MMSEQS}"" clusterupdate ""${SDIR}""/marine_hmp_db_03112017 ""${SDIR}""/mg_gtdb_orfs_db ""${SDIR}""/marine_hmp_db_03112017_clu ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019 ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019_clu ""${DIR}""/mg_gtdb_update/tmp --min-seq-id 0.3 -s 5 --cov-mode 0 -c 0.8; ```. ## MMseqs Output (for bugs); release [7-4e23d](https://gist.github.com/genomewalker/96cfc0c4754cd4f2cd1ce6925576c876) log; commit [39ee37f](https://gist.github.com/genomewalker/8a83a8707dae2bc3179df730a5b695b7) log. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" 39ee37f97ab065a3763ee10b834b3e6e25aae491; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc 5.4 and open MPI 1.10.2; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/vol/attached/opt/MMseqs2-7-4e23d ..; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): cloud system (10 instances, BiBiGrid) with Intel Xeon Processor (Skylake, IBRS) with 28 vCPUs and 256G of memory; * Operating system and version: Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/198:332,release,release,332,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/198,3,"['Release', 'release']","['Release', 'release']"
Deployability,"I am trying to run hhpred on my clustering results. I have MMseqs2 Version: 9f344f3d6765a1131f22794d9a6fd9fcd8ca2cdf and hhsuite 3.0 installed.; But I cant find the last command (`cstranslate_mpi`) from https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-hhblits-database. Is it part of mmseqs or hhsuite? Does it need to be installed separately? can I use `cstranslate` instead?. Thanks,; Adi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/83:133,install,installed,133,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/83,2,['install'],['installed']
Deployability,"I am trying to use the taxonomy --majority parameter for taxonomic assignment to metagenomic contigs described in this paper, https://www.biorxiv.org/content/10.1101/2020.11.27.401018v1.full.pdf, but it seems like the functionality hasn't been updated yet! When will this function be made available? Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/413:244,update,updated,244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/413,1,['update'],['updated']
Deployability,"I encountered an error while executing the command cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ... My cmake version is 3.28.0, and gcc version 7.3. The error message I received is as follows:. -- The CXX compiler identification is GNU 7.3.0 ; -- The C compiler identification is GNU 7.3.0 ; -- Detecting CXX compiler ABI info ; -- Detecting CXX compiler ABI info - failed ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ - broken ; CMake Error at /usr/local/share/cmake-3.28/Modules/CMakeTestCXXCompiler.cmake:60 (message): ; The C++ compiler; ""/home/anaconda3/envs/AlphaFlow/bin/c++"" ; is not able to compile a simple test program. ; It fails with the following output:; Change Dir: '/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz'; Run Build Command(s): /usr/local/bin/cmake -E env VERBOSE=1 /usr/bin/gmake -f Makefile cmTC_8b7b3/fast ; /usr/bin/gmake -f CMakeFiles/cmTC_8b7b3.dir/build.make CMakeFiles/cmTC_8b7b3.dir/build; gmake[1]: Entering directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; Building CXX object CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o ; /home/anaconda3/envs/AlphaFlow/bin/c++ -o CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -c /home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz/testCXXCompiler.cxx ; Linking CXX executable cmTC_8b7b3 ; /usr/local/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8b7b3.dir/link.txt --verbose=1 ; /home/anaconda3/envs/AlphaFlow/bin/c++ -rdynamic CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -o cmTC_8b7b3 ; collect2: fatal error: cannot find 'ld' compilation terminated. ; gmake[1]: *** [cmTC_8b7b3] Error 1 ; gmake[1]: Leaving directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; gmake: *** [cmTC_8b7b3/fast] Error 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/816:76,RELEASE,RELEASE,76,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/816,1,['RELEASE'],['RELEASE']
Deployability,"I have installed the latest version available via ; `conda install -c conda-forge -c bioconda mmseqs2`. I tried to download the PDB database via ; `mmseqs databases PDB pdb_db tmp`. This leads to the process just hanging. One of the error messages printed shows that the URL seems to be inactive, as described in this [issue](https://github.com/soedinglab/MMseqs2/issues/772#issue-1977470516) (#772). . 03/11 13:57:28 [ERROR] CUID#7 - Download aborted. URI=https://ftp.wwpdb.org/pub/pdb/derived_data/pdb_seqres.txt.gz; Exception: [AbstractCommand.cc:340] errorCode=2 Timeout. Is there a way to specify the URL when calling `mmseqs databases`? Or could you suggest a fix for the code when installed via conda?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/820:7,install,installed,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/820,3,['install'],"['install', 'installed']"
Deployability,"I think I've found a typo on the rolling hash function of linclust, at line; https://github.com/soedinglab/MMseqs2/blob/11e2736028cc12a6523b507b061158903f8de317/src/linclust/kmermatcher.cpp#L55; I guess it should be; ```; h ^= RoL(RAND[x_first], (rol*(length-1)) % 16);; ```; with rol instead of the fixed 5 ? Probably you define rol=5 somewhere so in practice no harm is done. (In the Supplementary Material of the paper it's `5` but I noticed that now is more general...)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/252:33,rolling,rolling,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/252,1,['rolling'],['rolling']
Deployability,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:37,update,update,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,3,['update'],"['update', 'updated']"
Deployability,"I was wondering how I could merge existing SeqTaxDBs into one database? Also is it possible to add sequences, individually, to this database as well? For instance, I would like to create an updated version of the MMETSP_zenodo_3247846_uniclust90_2018_08_seed_valid_taxids DB used in the MetaEuk paper, then add my model organism to the final database.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/302:190,update,updated,190,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/302,1,['update'],['updated']
Deployability,"I was wondering if it is possible to copy the database index to /dev/shm instead of page cache? This would have the advantage that in a slurm cluster environment, one could reserve the memory needed for the index. When the database gets copied to cache and pages are locked by vmtouch, this would not be covered by the slurm reservation as far as I understand. It wouldn't be a problem that the database index gets deleted after the job finishes (when it is copied to /dev/shm). Update:; I could run the job now by copying the index to /dev/shm and making symlinks in the /dev/shm directory to the other database files on the network share because otherwise (without the links) there is a file not found error when using db-load-mode 3.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/629:479,Update,Update,479,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/629,1,['Update'],['Update']
Deployability,"I would like to use the `clusterupdate` function, but I have some questions about the workflow. 1. Will the new sequences be compared to all the sequences of a cluster or only to the reference sequence? For example, if I have a new sequence N and an old cluster A={A0,A1,...,Ax} (with A0 the reference sequence), N will be compared to the whole sequence of A or only to A0. . 2. When I update, I read that the identifiers are consistent, but can the reference sequences be changed?. 3. If a new sequence links groups, will the groups be merged or will the new sequence be assigned to one of them. 4. Finally, can a sequence from an already existing cluster be reassigned to another cluster?. Sorry if you already reply to these questions. Thanks for your work",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/419:386,update,update,386,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/419,1,['update'],['update']
Deployability,"I'm comparing MMSeqs2 taxonomic assignment with approx. 2bLCA and top hit and noticed that the later approach classifies more genes than the former. I extracted the alignments using `--extract-lines 1` and the top hit search had more hits to the database. All parameters were the same with the exception of `--lca-mode`. Example:; ```; mmseqs taxonomy querydb/querydb gtdb_r202/gtdb_r202 taxonomydb/taxonomydb tmp -s 3.0 --lca-mode 3 --tax-output-mode 2 --threads 64; ```. Is behavior expected? If so, what is causing this difference?. I'm using release `13-45111`. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/465:546,release,release,546,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/465,1,['release'],['release']
Deployability,"I'm examining the efficiency of template retrieval using different MMseqs2 configurations for MSA generation, which is crucial for identifying templates via hhsearch. Notably, the **ColabFold MMseqs2 detailed version** involves complex steps like search, expansion, alignment, and filtering, offering high accuracy but with significant time investment. On the other hand, the **MMseqs2 easy search version** simplifies the process, potentially reducing time but at a possible cost to accuracy. Given that my project processes a large volume of PDB chains (around 400k), understanding the trade-offs between these methods is essential. Key inquiries:; **Does the difference in MSA quality between the two MMseqs2 versions significantly affect template identification accuracy?; How can I optimize the MMseqs2 template search to balance efficiency and precision effectively?**; I appreciate any insights or experiences with these tools. <Colabfold mmseqs2>; `def mmseqs_search_monomer(; dbbase: Path,; base: Path,; uniref_db: Path = Path(""uniref30_2202_db""),; template_db: Path = Path(""""), # Unused by default; metagenomic_db: Path = Path(""colabfold_envdb_202108_db""),; mmseqs: Path = Path(""mmseqs""),; use_env: bool = True,; use_templates: bool = False,; filter: bool = True,; expand_eval: float = math.inf,; align_eval: int = 10,; diff: int = 3000,; qsc: float = -20.0,; max_accept: int = 1000000,; prefilter_mode: int = 0,; s: float = 8,; db_load_mode: int = 2,; threads: int = 32,; ):; #Run mmseqs with a local colabfold database set; #; #db1: uniprot db (UniRef30); #db2: Template (unused by default); #db3: metagenomic db (colabfold_envdb_202108 or bfd_mgy_colabfold, the former is preferred); ; uniref_db = Path(""/store/colabfold/db/uniref30_2202_db""); template_db = Path(""/store/colabfold/db/pdb70_220313""); if filter:; # 0.1 was not used in benchmarks due to POSIX shell bug in line above; # EXPAND_EVAL=0.1; align_eval = 10; qsc = 0.8; max_accept = 100000. used_dbs = [uniref_db]; if use_templa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:75,configurat,configurations,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['configurat'],['configurations']
Deployability,"I'm having trouble setting some command line args with the `cluster` command. When I run this command. ```bash; time ~/projects/MMseqs2/build/bin/mmseqs cluster DB clu . --threads 3 -v 2 --min-seq-id 0.25; ```. I get the following output showing that the threads, verbosity, and seq id are the default values rather than those specified on the command line. ```; Set cluster settings automatic to s=6 cascaded=1; Program call:; DB ./aln_redundancy. MMseqs Version: 	fb43334f0594c4b6a345d7419965cb0beae48430; Sub Matrix 	blosum62.out; Alphabet size 	3; Seq. Id Threshold 	0; Max. sequence length	32000; Threads 	1; Verbosity 	3; ```. The version of the program I'm using is `fb43334f0594c4b6a345d7419965cb0beae48430` installed from source on Mac 10.10.5.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7:716,install,installed,716,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7,1,['install'],['installed']
Deployability,I'm running the command: `mmseqs easy-taxonomy taxdb output tmp -e 1e-5 -s 6 --blacklist --tax-lineage 1 --majority 0.75` along with a custom database and taxonomy. However many of the taxonomy results have <0.75 agreement (fewer than 75% of genes with taxonomy agree with the assigned taxon). I've attached the output and log file. Update: I tried running `mmseqs easy-taxonomy` using various values for `--majority` and the outputs are identical.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/609:333,Update,Update,333,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/609,1,['Update'],['Update']
Deployability,"I've been evaluating how adding pseudocounts change the sensitivity of profile searches. ```; mmseqs msa2profile msa_db/msa_db profile_db/profile_db --match-mode 1 --match-ratio 0.5 --threads 64; mmseqs msa2profile msa_db/msa_db profile_db_pseudo/profile_db --match-mode 1 --match-ratio 0.5 --threads 64 --pca 0.3; ```. I noticed, however, that the search results are different depending on the version of MMSeqs2. If I use the latest GitHub/Conda release (`13-45111`), the search on the `profile_db_pseudo` will provide more results (as expected, given that the alignments are not very diverse). If I use a newer release (`92deb92fb46583b4c68932111303d12dfa121364`), the search on the database with pseudocounts will results in *less* hits. ```; mmseqs easy-search --threads 64 fragment_sequences.faa profile_db_pseudo/profile_db mmseqs2_results_pseudo tmp; ```. Were there any changes in MMSeqs2's behavior regarding pseudocounts? Also, are there recommendations about how to use the `--pca` parameter?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/547:448,release,release,448,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547,2,['release'],['release']
Deployability,"Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Slice search mode false; Strand selection 1; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files true; Alignment format 0; Format alignment output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output false; Overlap threshold 0; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 0; Greedy best hits false; ```. ## Context; Want to identify close homologues in uniprotkb from RCSB. Filtering by e-value seems a reasonable choice. ## Your Environment; Installed via a fresh miniconda env last week.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/379:3203,Install,Installed,3203,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379,1,['Install'],['Installed']
Deployability,"It looks like with the newest release that the default output from mmseqs easy-taxonomy has changed a bit. There are now 4 additional numeric columns that were not there by default in prior releases. I assume this has something to do with the new contig annotation settings. Can you let me know what the column headers are? Specifically for columns 5-8 in the example below (the 5, 1, 1, 1.000)?. 207026	2420051	species	Yasminevirus sp. GU-2018	5	1	1	1.000	Viruses;unknown;unknown;unknown;unknown;unknown;Yasminevirus sp. GU-2018	d_Viruses;-_unclassified viruses;s_Yasminevirus sp. GU-2018",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/435:30,release,release,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/435,2,['release'],"['release', 'releases']"
Deployability,It seems every other way to install MMseqs doesn't work except using Brew.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/605:28,install,install,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/605,1,['install'],['install']
Deployability,L:6.6MiB] ; 09/27 14:59:56 [NOTICE] Download complete: tmp/3290078511923703767/gtdb.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 2b99bd|OK | 8.9MiB/s|tmp/3290078511923703767/gtdb.tar.gz. Status Legend:; (OK):download completed. 09/27 14:59:57 [NOTICE] Downloading 1 item(s). 09/27 14:59:57 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#8eef3f 51MiB/54MiB(95%) CN:1 DL:4.9MiB] ; 09/27 15:00:10 [NOTICE] Download complete: tmp/3290078511923703767/bac120_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8eef3f|OK | 4.2MiB/s|tmp/3290078511923703767/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 09/27 15:00:10 [NOTICE] Downloading 1 item(s); [#c371fe 880KiB/1.0MiB(81%) CN:1 DL:268KiB] ; 09/27 15:00:15 [NOTICE] Download complete: tmp/3290078511923703767/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; c371fe|OK | 273KiB/s|tmp/3290078511923703767/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; tar2db tmp/3290078511923703767/gtdb.tar.gz tmp/3290078511923703767/tardb --tar-include faa$ --threads 64 -v 3 . Time for merging to tardb: 0h 0m 0s 62ms; Time for merging to tardb.lookup: 0h 0m 0s 77ms; Time for processing: 0h 1m 8s 163ms; createdb tmp/3290078511923703767/tardb gtdb --compressed 0 -v 3 . Converting sequences. Time for merging to gtdb_h: 0h 0m 0s 32ms; Time for merging to gtdb: 0h 0m 0s 34ms; Database type: Nucleotide; The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died. ## Context; NA. ## Your Environment; mmseqs2 release 14-7e284 installed via conda on RHEL8,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:36120,release,release,36120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,2,"['install', 'release']","['installed', 'release']"
Deployability,"LLVLGIVVAICSTTQPTVASDQDTPKLGDRARFPQPVMVAVANFPPEEIRTSLRTFRTGDRCKIDAGYE; VEAYALDGNRVLVYLDYRTPTDGVSCPRGTVFWLREDVFAAMKAVHQCGTNYTAEELAALLKSAGLKFE; >OHA11761.1_MHQV01000001.1; MELILEKLFESQAKVRILRLFLRNSTTNFTLEDVLRGTGLKRASALKEIAKLIKLRFLKSKNTDLVVSRVSGSGKTKKLR; MRSVRIRIYTTDPTFEFFRELRDLILRQVPESRHRIIQKLRKIGKVKLAVVTGAFINNEDARVDLLVVGEHVSRRKLESL. ## Current Behavior; core dump. ## Steps to Reproduce (for bugs); each time I launch the command. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; Program call:; createdb dpann_cpr.faa dpann_cpr_mmseq_db/ . MMseqs Version: 	a951e4dede7e9b52e514119d083ff4ca80ad1565; Max. sequence length 	65535; Split Seq. by len 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; .........................................................Time for merging files: 0h 0m 0s 772ms; Erreur de segmentation (core dumped). ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; (strangely It stop working when I update mmseqs2 version to the newest , rm -rf old directory and git clone the new one); I updated my version because I had alignment died error doing all against all search. ## Your Environment; ubuntu 16.04 . Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: a951e4dede7e9b52e514119d083ff4ca80ad1565. self compiled (default) (make, make install) ; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/141:1762,update,update,1762,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/141,3,"['install', 'update']","['install', 'update', 'updated']"
Deployability,"MMseqs2 Version: GITDIR-NOTFOUND; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search 	Sensitive homology search; easy-cluster 	Slower, sensitive clustering; easy-linclust 	Fast linear time cluster, less sensitive clustering; easy-taxonomy 	Taxonomic classification; easy-rbh 	Find reciprocal best hit. Main workflows for database input/output; search 	Sensitive homology search; map 	Map nearly identical sequences; rbh 	Reciprocal best hit search; linclust 	Fast, less sensitive clustering; cluster 	Slower, sensitive clustering; clusterupdate 	Update previous clustering with new sequences; taxonomy 	Taxonomic classification. Input database creation; databases 	List and download databases; createdb 	Convert FASTA/Q file(s) to a sequence DB; createindex 	Store precomputed index on disk to reduce search overhead; convertmsa 	Convert Stockholm/PFAM MSA file to a MSA DB; msa2profile 	Convert a MSA DB to a profile DB. Format conversion for downstream processing; convertalis 	Convert alignment DB to BLAST-tab, SAM or custom format; createtsv 	Convert result DB to tab-separated flat file; convert2fasta 	Convert sequence DB to FASTA format; taxonomyreport 	Create a taxonomy report in Kraken or Krona format. An extended list of all modules can be obtained by calling 'mmseqs -h'. Bash completion for modules and parameters can be installed by adding ""source MMSEQS_HOME/util/bash-completion.sh"" to your ""$HOME/.bash_profile"".; Include the location of the MMseqs2 binary in your ""$PATH"" environment variable.; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; $ which mmseqs; ~/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build/bin/mmseqs; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; MACOS 15",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:6016,install,installed,6016,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['install'],['installed']
Deployability,"Maybe this is by design, but the (helpful) message about `--cluster-reassign` makes it seem like a flag as opposed to an option, i.e. have to specify `--cluster-reassign 1` to turn it on. Here is a suggestion... (fwiw I haven't tried this option yet because the install from conda on my machine with my current dataset is giving me an error `Alignment format is not supported! ] 0.00% 1 eta - Error: Clustering step 2 died Error: Search died`, but I will investigate more on my end to see if it's an issue with my version/files)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/329:262,install,install,262,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329,1,['install'],['install']
Deployability,"Metaclust, a database clustered by linclust protocol in MMseqs2, is becoming smaller with each release. Metaclust95 2017_01 has 97G.; Metaclust 2017_05 has 60G.; Metaclust 2018_01 has 28G only.; Shouldn't the number of Metaclust entries increase with time?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/54:95,release,release,95,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/54,1,['release'],['release']
Deployability,"Mseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CP",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:3492,install,install,3492,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['install'],['install']
Deployability,"Mseqs2 by prepending the RUNNER=""..."" string. ## Current Behavior; In order to see whether MMseqs2 can really make use of node-level parallelism, I first clustered a dataset of 50 million sequences on a single node with a single MPI task and multiple threads. The command I use for that purpose is:. ```; RUNNER=""srun -n 1 --ntasks-per-node 1"" ./mmseqs-par easy-linclust <fasta-file> <cluster-prefix> <tmp-dir> --min-seq-id 0.7 -c 0.8 --cov-mode 0 --threads 64; ```. This completes in ~34 minutes and has a peak memory usage of 27.9 GB. Now when I change the number of nodes to 4, by using RUNNER=""srun -n 4 ..., it completes in ~49 minutes and still has a peak memory usage of ~27.9 GB. The issue is similar for 16 nodes, i.e., the runtime does not go down as one expects. Is this expected? Am I using the MPI version correctly? It seems like there is no use for utilizing the MPI-mode as it is not efficient in terms of runtime and memory. ## Expected Behavior; I know some components of the clustering pipeline are sequential, and some of them are parallel. But one would logically expect a gain in terms of runtime and/or memory when using multiple nodes. ## MMseqs Output (for bugs); The output for single-node run: https://pastebin.com/waDMWGA3; The output for 4-node run: https://pastebin.com/B7bMaei3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 61ca48883b50714be51fc35fc9b77325ffde53fb-MPI. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; compiler version: OpenMPI 4.0.2, gcc 8.3.0; cmake version: 3.14.4. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Intel Haswell CPU (support for SSE and AVX2), 128 GB system memory. * Operating sy",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/331:1160,pipeline,pipeline,1160,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331,1,['pipeline'],['pipeline']
Deployability,Multi-threading not working when installing from brew on OSX Catalina,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/289:33,install,installing,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289,1,['install'],['installing']
Deployability,NEWMAPDB variable missing in updatecluster,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103:29,update,updatecluster,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103,1,['update'],['updatecluster']
Deployability,"No issues, I just have a quick question: . Are there any circumstances where running clusterupdate would result in breaking a cluster into two or more clusters after the update? For example, if the updated database included a sequence that was similar to some sequences in a cluster (but somehow not all of them), is there any chance that that cluster would get split?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/528:170,update,update,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/528,2,['update'],"['update', 'updated']"
Deployability,Patches to allow MMseqs2 to build with gcc13,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/714:0,Patch,Patches,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/714,1,['Patch'],['Patches']
Deployability,Pipeline for getting taxonomy for clusters,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/815:0,Pipeline,Pipeline,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/815,1,['Pipeline'],['Pipeline']
Deployability,"Question: ColabFold search pipeline for very large query, less sensitivity acceptable",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897:27,pipeline,pipeline,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897,1,['pipeline'],['pipeline']
Deployability,Question: cluster update with linclust algorithm.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/630:18,update,update,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/630,1,['update'],['update']
Deployability,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:0,Release,Release,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,4,"['Release', 'install', 'release']","['Release', 'install', 'releases']"
Deployability,Removed doc.install from Formula,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/18:12,install,install,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/18,1,['install'],['install']
Deployability,"Running easy-cluster pipeline on a fasta file of protein sequences. Getting 575 messages saying ""Cannot extract identifier from entry nnnnn"" out of 37k input proteins. ; Is this an error or just a warning? ; Are those proteins being clustered or ignored? ; How can I figure out which proteins in my input file are causing the problem so I can fix it? ; Is there a description of the required fasta header format for proper identifier extraction in the manual (I didn't see it)?. Ubuntu 20.04; mmseqs2 v 13.45111. Thanks,; Bill",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/804:21,pipeline,pipeline,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/804,1,['pipeline'],['pipeline']
Deployability,"Since the documentation was moved to the wiki the installation using brew fails when `doc.install ""userguide.pdf""`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/18:50,install,installation,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/18,2,['install'],"['install', 'installation']"
Deployability,Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	2147483647; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3. Substitution matrices...; Use kmer size 5 and split 1 using Target split mode.; Needed memory (20178976034 byte) of total memory (486687909888 byte); Index table: counting k-mers... ```. ## Context; Trying to generate a profile DB from the file `uniclust30_2018_08_hhm_db` contained the 18-08 release of Uniclust30; `http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz`; I am using `convertprofiledb` and then `createindex`... **NOTE:** I have used the same procedure to generate the profile DB using the HHblits profiles for Pfam 31 downloaded from:; `http://wwwuser.gwdg.de/%7Ecompbiol/data/hhsuite/databases/hhsuite_dbs/pfamA_31.0.tgz`. ## Your Environment; > MMseqs Version: 6.f5a1c; [f5a1cdb](https://github.com/soedinglab/MMseqs2/commit/f5a1cdb44c996d6be229226b09ecc687646c0c12); > MMseqs was self-compiled; > gcc (Homebrew gcc 5.5.0_4) 5.5.0; > cmake 3.12.3. >Server specifications:. ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fp,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130:2542,release,release,2542,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130,1,['release'],['release']
Deployability,"Thank you for all the work you have put into MMseqs2. I hope it can support my use case. ## Desired outcome. I would like to make a MMseqs2 target profile database from VOGDB data however I can't find a path to do so. To do this I attempted to process the latest release of the VOGDB files available [here](http://vogdb.org/download) specifically I am using the MSA files in [vog.raw_algs.tar.gz](http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz). Contained in vog.raw_algs.tar.gz are many FASTA formatted MSA files with each file being named after the VOG ID but not containing it in the text of the files. I have tried using a similar workflow to that of the PFAM format and several other approaches to no avail. Here are some of my observations on the situation: . VOGDB is not in stockholm format, unlike PFAM, and convertmsa does not support it. However, instead of raising an error convertmsa produces empty files without alerting the user. To skip preprocessing and run msa2profile command directly requires the datatype and index files to exist, and I don't know how to generate these correctly from the data at hand. Making a database from the MSA data is not a problem and the database can be searched without issue except that VOG IDs are not transferred from the file name. It seems that the problem is only with generating profiles. ## Reproduction / Examples. Example where convertmsa creates files, but they are empty and there is no error. ```BASH; # make temp folders; mkdir vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; # tar xzf vog.raw_algs.tar.gz; # gzip -c *.msa > vog.raw_algs.gz; cd ..; mmseqs convertmsa vog/vog.raw_algs.tar.gz vog/temp/converted; ```. Files are created in vog/temp with the converted prefix, but they are all empty. The only path to an MMseqs2 profile that has any success is to convert the MSA files first into HH-suite compatible hmm files and then to use the hmm to profile p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/440:263,release,release,263,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440,1,['release'],['release']
Deployability,"Thanks for maintaining this great software! I'm having an issue with easy-taxonomy using GTDB (but not NCBI with the same query input), described below. Using a conda install of version 15.6f452. . Thanks for any help!. ## Expected Behavior; Completing without error. ## Current Behavior; Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Steps to Reproduce (for bugs). **Install**. ```bash; mamba create -y -n mmseqs2 -c conda-forge -c bioconda -c defaults mmseqs2==15.6f452; conda activate mmseqs2; ```. **DB setup**; ```bash; mmseqs databases GTDB mmseqs2-GTDB-db tmp; ```. **Making small test data**; ```bash; wget -O e-coli.fasta.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/005/845/GCA_000005845.2_ASM584v2/GCA_000005845.2_ASM584v2_genomic.fna.gz. gunzip e-coli.fasta.gz. grep -c "">"" e-coli.fasta; # there is only one contig, so safe to just pull some lines. printf "">contig_1\n"" > contigs.fasta; sed -n '100,1200p' e-coli.fasta >> contigs.fasta; printf "">contig_2\n"" >> contigs.fasta; sed -n '20000,20600p' e-coli.fasta >> contigs.fasta; printf "">contig_3\n"" >> contigs.fasta; sed -n '26000,26200p' e-coli.fasta >> contigs.fasta; # that's 3 contigs: 88,000 bps; 48,000 bps; and 16,000 bps; ```. **Running the program**; ```bash; mmseqs easy-taxonomy contigs.fasta mmseqs2-GTDB-db GTDB-tax-result tax-tmp \; --threads 20 --tax-lineage 1 --compressed 1 --remove-tmp-files 0; ```. ## MMseqs Output (for bugs). Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Context; Trying to get taxonomy output via GTDB with",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806:167,install,install,167,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806,2,"['Install', 'install']","['Install', 'install']"
Deployability,"Thanks for the awesome open-source tool. I can't find any tags except ""[vNatBiotech](https://github.com/soedinglab/MMseqs2/tree/vNatBiotech)"". I was wondering whether there is interest in making a release for a stable version (with a numerical version), which may help users and developers. Thanks!. Best wishes,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/46:197,release,release,197,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/46,1,['release'],['release']
Deployability,"The function summarizealis is not documented in the wiki. But the help messege does not print the relevant information in https://github.com/soedinglab/MMseqs2/blob/6b9388469a41935813f5d207d6d149767feb4c42/src/MMseqsBase.cpp#L1028. Could this be the case for other functions?. I use mmseqs v 14.7e284 installed with mamba. See ; ```; $ mmseqs summarizealis -h. usage: mmseqs summarizealis <i:alignmentDB> <o:summerizedDB> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: common:; --threads INT Number of CPU-cores used (all by default) [16]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]. references:; - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017); - Mirdita M, von den Driesch L, Galiez C, Martin M, Soding J, Steinegger M: Uniclust databases of clustered and deeply annotated protein sequences and alignments. Nucleic Acids Research 45(D1), D170-D176 (2017). ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/680:301,install,installed,301,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/680,1,['install'],['installed']
Deployability,"The user guide and the cli help say different things about the `-s` parameter. The user guide says the following, both in the pdf bundled with the latest release and in the latest wiki version (https://github.com/soedinglab/mmseqs2/wiki#search-workflow). > ```; > -s [float] Target sensitivity in the range [1:8.5] (default=4).; > ```; > Adjusts the sensitivity of the prefiltering and influences the prefiltering run time. 1.0 fastest -; 8.5 sensitive. The sensitivity between 8 to 8.5 should be as sensitive as BLAST. For detailed; explanation see section Computation of Prefiltering Scores using mmseqs prefilter. The cli help (`mmseqs search --help`) says:. > ```; > -s FLOAT sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive (range 1.0-7.5) [5.700]; > ``` . As defined here:. https://github.com/soedinglab/MMseqs2/blob/5ae5503a923ec4338464d09cc1ff4bc3680727da/src/commons/Parameters.cpp#L30. I'm wondering about this since I'd like to search at a sensitivity similar to BLAST and since the cli doesn't reject values bigger than 7.5. MMseqs2 Version: 6d92cd21676ccc36531f2852f7eb747f6389435f (Release 10-6d92c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/240:154,release,release,154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/240,2,"['Release', 'release']","['Release', 'release']"
Deployability,"This issue is related to some behaviours that I saw in last release. . 1- at least prefilter, align and results2msa are generating many files:; The files has numeric suffix equivalent to number of used threads and it don't generate a merged final file. That means, if I run `mmseqs createdb subset.fa subsetDB` I got theses files:; `subsetDB subsetDB.dbtype subsetDB_h subsetDB_h.dbtype subsetDB_h.index subsetDB.index subsetDB.lookup`; But, next step, prefilter `mmseqs prefilter subsetDB subsetDB subsetPREFILTER` I got:; ```; subsetPREFILTER.0 subsetPREFILTER.13 subsetPREFILTER.18 subsetPREFILTER.22 subsetPREFILTER.27 subsetPREFILTER.31 subsetPREFILTER.4 subsetPREFILTER.9; subsetPREFILTER.1 subsetPREFILTER.14 subsetPREFILTER.19 subsetPREFILTER.23 subsetPREFILTER.28 subsetPREFILTER.32 subsetPREFILTER.5 subsetPREFILTER.dbtype; subsetPREFILTER.10 subsetPREFILTER.15 subsetPREFILTER.2 subsetPREFILTER.24 subsetPREFILTER.29 subsetPREFILTER.33 subsetPREFILTER.6 subsetPREFILTER.index; subsetPREFILTER.11 subsetPREFILTER.16 subsetPREFILTER.20 subsetPREFILTER.25 subsetPREFILTER.3 subsetPREFILTER.34 subsetPREFILTER.7; subsetPREFILTER.12 subsetPREFILTER.17 subsetPREFILTER.21 subsetPREFILTER.26 subsetPREFILTER.30 subsetPREFILTER.35 subsetPREFILTER.8; ```. Anyway I may call `align` using `mmseqs align subsetDB subsetDB subsetPREFILTER subsetALN` but again I got an huge amount of files. Most of them empty. 2- `results2msa` to extract those aliments to stockholm or separated fasta, what should I need to do?; I tried use `mmseqs result2flat`, I got all MSA in same file in fasta format, how do I separate them? Actually, I'd like to know how convert them directly to a3m or stockholm. I hope it help you",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/191:60,release,release,60,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/191,1,['release'],['release']
Deployability,Update README.md Static Linux Install Section,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/129:0,Update,Update,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/129,2,"['Install', 'Update']","['Install', 'Update']"
Deployability,Update multihit combine pval agg-mode 3,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/311:0,Update,Update,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/311,1,['Update'],['Update']
Deployability,Update needed to GTDB database install code for release 214,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:0,Update,Update,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,3,"['Update', 'install', 'release']","['Update', 'install', 'release']"
Deployability,"Users 31G Mar 9 21:51 pref_0_tmp_1; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 21:51 pref_0_tmp_1.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 21:51 pref_0_tmp_1.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 22:41 pref_0_tmp_2; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 22:41 pref_0_tmp_2.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 22:41 pref_0_tmp_2.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 23:30 pref_0_tmp_3; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 23:31 pref_0_tmp_3.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 23:31 pref_0_tmp_3.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 00:20 pref_0_tmp_4; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 00:21 pref_0_tmp_4.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 00:21 pref_0_tmp_4.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 01:10 pref_0_tmp_5; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 01:11 pref_0_tmp_5.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 01:11 pref_0_tmp_5.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 01:59 pref_0_tmp_6; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:00 pref_0_tmp_6.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:00 pref_0_tmp_6.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 02:49 pref_0_tmp_7; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:49 pref_0_tmp_7.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:49 pref_0_tmp_7.index; ```. ## Your Environment; Conda installation: showing mmseqs 13.45111. Running SGE. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 48; On-line CPU(s) list: 0-47; Thread(s) per core: 2; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 63; Model name: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz; Stepping: 2; CPU MHz: 1736.914; BogoMIPS: 5004.72; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 256K; L3 cache: 30720K; NUMA node0 CPU(s): 0-11,24-35; NUMA node1 CPU(s): 12-23,36-47",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:41586,install,installation,41586,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['install'],['installation']
Deployability,"When I use createseqfiledb on a clusterDB file, as described in the readme, I get a continuous stream of ""Invalid entry in line x!"" messages, where x are different lines. What does this error mean? The resulting clu_seq file is empty.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/6:84,continuous,continuous,84,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6,1,['continuous'],['continuous']
Deployability,"When running the latest statically compiled version of mmseqs, I receive an error because the software isn't signed. - I am using a Macbook Pro, with Mac OS Sonoma 14.5; - Download mmseqs-osx-universal.tar.gz from https://github.com/soedinglab/MMseqs2/releases/tag/15-6f452; - Unzip and mv bin/mmseqs binary to ~/bin; - When I run the command `mmseqs`, I receive a popup with the text; ```; “mmseqs” cannot be opened because the developer cannot be verified.; ```; and; ```; macOS cannot verify that this app is free from malware.; ```. This can be resolved on the user end by following these instructions:; https://support.apple.com/en-us/102445#openanyway; (that's what I have done). But it would be nice i the software were signed in the first place. On the developer side, these instructions are useful: https://developer.apple.com/developer-id/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/864:252,release,releases,252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/864,1,['release'],['releases']
Deployability,Windows 10 Installation Problem,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/574:11,Install,Installation,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574,1,['Install'],['Installation']
Deployability,With the change from MMseqs2 release 12 to 13 the `taxonomy` workflow does report unclassified reads/contigs anymore. This is an unwanted breaking change.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/457:29,release,release,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/457,1,['release'],['release']
Deployability,"`clusterupdate` only generates one main database file output (eg., `clusters_db`), regardless of `--threads`, while `cluster` and `linclust` generate one file per thread (eg., `--threads=4` generates `clusters_db.0`, `clusters_db.1`, `clusters_db.2`, `clusters_db.3`). This leads to pipeline complications, given that downstream processing of the `clusters_db` may require multiple inputs (`clusters_db.*`) or just one input (`cluster_db`). It would help if clusterupdate and cluster/linclust were consistent. It would be best if cluster/linclust just produced one database file per thread. I'm running `mmseqs2 11.e1a1c`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/362:283,pipeline,pipeline,283,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/362,1,['pipeline'],['pipeline']
Deployability,"`mmseqs tsv2db` doesn't create a *.dbtype file. Is this intentional? How do I create a *.dbtype file, given that it appears to be a binary file?. In general, I find the ""hidden"" requirements of extra files such as the *.dbtype and *.index files to be very frustrating, because it can be hard to know which files are actually required for each `mmseq` command versus which files are stated as required inputs. This is especially challenging when using pipeline software such as `snakemake`. ```; $ conda list; # packages in environment at /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass:; #; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; ca-certificates 2018.11.29 ha4d7672_0 conda-forge; curl 7.63.0 h74213dd_0 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; krb5 1.16.2 hbb41f41_0 conda-forge; libcurl 7.63.0 hbdb9355_0 conda-forge; libdeflate 1.0 h470a237_0 bioconda; libedit 3.1.20170329 haf1bffa_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libssh2 1.8.0 h5b517e9_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; ncurses 6.1 hfc679d8_2 conda-forge; openmp 7.0.0 h2d50403_0 conda-forge; openssl 1.0.2p h470a237_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8ee4bcc_1 bioconda; tk 8.6.9 ha92aebf_0 conda-forge; xz 5.2.4 h470a237_1 conda-forge; zlib 1.2.11 h470a237_3 conda-forge; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/155:451,pipeline,pipeline,451,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/155,1,['pipeline'],['pipeline']
Deployability,a typo on the rolling hash function,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/252:14,rolling,rolling,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/252,1,['rolling'],['rolling']
Deployability,"ad an up-to-date version of the target 'nr' and 'nt' databases. ## Current Behavior; The download FASTA targets for the 'nr' and 'nt' databases are no longer being updated by NCBI. Explanation: focusing on 'NR' as an example, the URL in [databases.sh](https://github.com/soedinglab/MMseqs2/blob/87e7103d289029dc3345f85ea9a4c4c6d6416e46/data/workflow/databases.sh#L500) points to https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/nr.gz. The README in that FTP location states:. > In April 2024, the BLAST FASTA files in this directory will no longer be; available. You can easily generate FASTA files yourself from the formatted; BLAST databases by using the BLAST utility blastdbcmd that comes with the; standalone BLAST programs. See NCBI Insights for more details; https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/. Indeed, the nr.gz file was last updated on 2024-02-07. Looking in the [parent directoy](https://ftp.ncbi.nlm.nih.gov/blast/db), the various NR database files have been updated as recently as 2024-10-02. Therefore, the download targets for mmseqs2 are out of date by about 8 months, and this problem will get worse over time. . NCBI's solution for users is to download the blast-format files and then generate their own FASTA files:. > * Sequences in FASTA format can be generated from the pre-formatted databases by using the blastdbcmd utility;. Obviously this isn't ideal for many users, and it's been getting [at least some hate](https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/). ## Solution; Unless NCBI backflips on their decision, the only solution would be to change the `mmseqs databases` workflow for these databases to have an intermediate (slow) step of extracting a FASTA file before the `mmseqs createdb` step is run. However, this would obviously require extra dependencies, i.e. the `blastdbcmd`. Otherwise, I suppose you could host periodic builds of the databases on a server or something. Just thought I sho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/893:1078,update,updated,1078,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/893,1,['update'],['updated']
Deployability,"after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 (Many against Many sequence searching) is an open-source software suite for very fast, ; parallelized protein sequence searches and clustering of huge protein sequence data sets. Please cite: M. Steinegger and J. Soding. MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). MMseqs2 Version: GITDIR-NOTFOUND; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search 	Sensitive homology search; easy-cluster 	Slower, sensitive clustering; easy-linclust 	Fast linear time cluster, less sensitive clustering; easy-taxonomy 	Taxonomic classification; easy-rbh 	Find reciprocal best hit. Main workflows for database input/output; search 	Sensitive homology search; map 	Map nearly identical sequences; rbh 	Reciprocal best hit search; linclust 	Fast, less sensitive clustering; cluster 	Slower, sensitive clustering; clusterupdate 	Update previous clustering with new sequences; taxonomy 	Taxonomic classification. Input database creation; databases 	List and download databases; createdb 	Convert FASTA/Q file(s) to a sequence DB; createindex 	Store precomputed index on disk to reduce search overhead; convertmsa 	Convert Stockholm/PFAM MSA file to a MSA DB; msa2profile 	Convert a MSA DB to a profile DB. Format conversion for downstream processing; convertalis 	Convert alignment DB to BLAST-tab, SAM or custom format; createtsv 	Convert result DB to tab-separated flat file; convert2fasta 	Convert sequence DB to FASTA format; taxonomyreport 	Create a taxonomy report in Kraken or Krona format. An extended list of all modules can be obtained by calling 'mmseqs -h'. Bash completion for modules and parameters can be installed by adding ""source MMSEQS_HOME/util/bash-completion.sh"" to your ""$HOME/.bash_profile"".; Include the location of the MMse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:5226,Update,Update,5226,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['Update'],['Update']
Deployability,"ancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:8715,install,installations,8715,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['install'],['installations']
Deployability,"appingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; $conda activate /project/winter_pea_endophytes_2022/MMseqs. Server:; ceres.scinet.usda; resources allocation; $salloc -p short -N 2 -n 80 -t 12:00:00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/689:2011,install,install,2011,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689,2,['install'],['install']
Deployability,"arity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use the clusters to create HMMs. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 12.113e3; * Which MMseqs version was used (Conda install): 12.113e3; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU Model: Intel(R) Xeon(R) CPU E5-2698 v4 @ 2.20GHz, supports sse4_1, sse4_2, MEM Free: 200GB, MEM Total: 256GB; * Operating system and version: Red Hat 4.4.7-18, gcc version 4.4.7 20120313",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/415:2286,install,install,2286,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415,1,['install'],['install']
Deployability,"at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Steps to Reproduce (for bugs). **Install**. ```bash; mamba create -y -n mmseqs2 -c conda-forge -c bioconda -c defaults mmseqs2==15.6f452; conda activate mmseqs2; ```. **DB setup**; ```bash; mmseqs databases GTDB mmseqs2-GTDB-db tmp; ```. **Making small test data**; ```bash; wget -O e-coli.fasta.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/005/845/GCA_000005845.2_ASM584v2/GCA_000005845.2_ASM584v2_genomic.fna.gz. gunzip e-coli.fasta.gz. grep -c "">"" e-coli.fasta; # there is only one contig, so safe to just pull some lines. printf "">contig_1\n"" > contigs.fasta; sed -n '100,1200p' e-coli.fasta >> contigs.fasta; printf "">contig_2\n"" >> contigs.fasta; sed -n '20000,20600p' e-coli.fasta >> contigs.fasta; printf "">contig_3\n"" >> contigs.fasta; sed -n '26000,26200p' e-coli.fasta >> contigs.fasta; # that's 3 contigs: 88,000 bps; 48,000 bps; and 16,000 bps; ```. **Running the program**; ```bash; mmseqs easy-taxonomy contigs.fasta mmseqs2-GTDB-db GTDB-tax-result tax-tmp \; --threads 20 --tax-lineage 1 --compressed 1 --remove-tmp-files 0; ```. ## MMseqs Output (for bugs). Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Context; Trying to get taxonomy output via GTDB with lineage info added. Using the NCBI database completes successfully on the same input query. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. - mmseqs2 version 15.6f452 installed with conda; - working on Ubuntu 20.04.4 LTS; - 500 GB memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806:2225,install,installed,2225,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806,1,['install'],['installed']
Deployability,"at nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12919340; Target db start 1 to 6459670; [==. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 	13.45111; I'm working in a 240 CPU node cluster, my job submission intends to occupy 128 out of 128 cores available per node, each node has a total memory of 512 GB. Regarding the OS, it's running CentosOS 8.1 and uses Slurm 20.11.0 as a job resource manager, Package Build Env: Spack v0.15, Software Deployment Environment: Lmod 8.2.10 and GCC 8.3.1 as the MPI compiler.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:12987,Deploy,Deployment,12987,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['Deploy'],['Deployment']
Deployability,"atabase, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very similar. ; Thanks for this great software, we are finding it incredibly useful for both clustering and searching on large protein datasets and we would like to understand more on how to use it efficiently and correctly. ## Your Environment. * MMSeqs2 Release 3-be8f6 AVX2. * Diamond v0.9.21. * Environment : Amazon Linux AMI 2018.03.l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91:2252,Release,Release,2252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91,1,['Release'],['Release']
Deployability,"ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned in #729 involving the `gtdb.lookup` file. Taxonomy results will be unreliable until #729 is fixed. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 14.7e284; * Which MMseqs version was used: conda install; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invoc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:2084,release,releases,2084,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['release'],['releases']
Deployability,"bfoldMSA/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build$ ./bin/mmseqs; ./bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; g++ (GCC) 5.4.0; cmake version 3.28.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; uname -a | grep x86_64; Linux node7 3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; * Operating system and version:; CentOS Linux release 8 (Core). * packages in current environment; `conda list; packages in environment at /home/liuhongbin/anaconda3/envs/colabfoldMSA:. Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 2_gnu conda-forge; absl-py 1.4.0 pypi_0 pypi; alphafold-colabfold 2.3.6 pypi_0 pypi; appdirs 1.4.4 pypi_0 pypi; astunparse 1.6.3 pypi_0 pypi; binutils 2.40 hdd6e379_0 conda-forge; binutils_impl_linux-64 2.40 hf600244_0 conda-forge; binutils_linux-64 2.40 hbdbef99_2 conda-forge; biopython 1.82 pypi_0 pypi; bzip2 1.0.8 hd590300_5 conda-forge; c-compiler 1.7.0 hd590300_0 conda-forge; ca-certificates 2023.11.17 hbcca054_0 conda-forge; cachetools 5.3.2 pypi_0 pypi; certifi 2023.11.17 pypi_0 pypi; charset-normalizer 3.3.2 pypi_0 pypi; chex 0.1.85 pypi_0 pypi; colabfold 1.5.5 pypi_0 pypi; contextlib2 21.6.0 pypi_0 pypi; contourpy 1.2.0 pypi_0 pypi; cxx-compiler 1.7.0 h00ab1b0_0 conda-forge; cycler 0.12.1 pypi_0 pypi;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/795:1964,release,release,1964,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/795,1,['release'],['release']
Deployability,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1396,configurat,configuration,1396,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['configurat'],['configuration']
Deployability,"cal comparison operator 	; > Numerical comparison value 	0; > Sort (increasing:1, decreasing: 2, shuffle: 3) the entries by numerical value	0; > ; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > = Merge found sequences with previous clustering =; > ===================================================; > Program call:; > tmp/OLDCLUST.mapped tmp/updatedClust tmp/newSeqsHits.swapped tmp/OLDCLUST.mapped ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Merge prefixes	; > Verbosity 	3; > ; > Merging the results to tmp/updatedClust; > Done; > Time for merging files: 0 h 0 m 0 s; > Time for merging: 0 h 0 m 0s; > ===================================================; > =========== Extract unmapped sequences ============; > ===================================================; > Program call:; > tmp/noHitSeqList DB_new tmp/toBeClusteredSeparately ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Start writing to file tmp/toBeClusteredSeparately; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > ===== Cluster separately the alone sequences ======; > ===================================================; > mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; > mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; > mv: rename tmp/input_* to tmp/search/input_*: No such file or directory; > Program call:; > tmp/toBeClusteredSeparately tmp/newClusters tmp --sub-mat blosum62.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 --alignment-mode 0 -e 0.001 --min-seq-id 0 --max-rejected 2147483647 --max-accept 2147483647 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; >",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:11673,update,updatedClust,11673,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['update'],['updatedClust']
Deployability,"cd tmp; [lihuilin@login01 tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cat latest; cat: latest: Is a directory; [lihuilin@login01 tmp]$ cd latest; [lihuilin@login01 latest]$ ls; [lihuilin@login01 latest]$ cd ..; [lihuilin@login01 tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cd 18110643841744502873; [lihuilin@login01 18110643841744502873]$ ls; [lihuilin@login01 18110643841744502873]$; ```; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; I installed MMseqs2 by git clone, and followed these:; ```; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; export PATH=$(pwd)/bin/:$PATH; ```. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; ```; [lihuilin@login01 MMseqs2]$ [ $(uname -m) = ""x86_64"" ] && echo ""64bit: Yes"" || echo ""64bit: No""; grep -q sse4_1 /proc/cpuinfo && echo ""SSE4.1: Yes"" || echo ""SSE4.1: No""; # for very old systems which support neither SSE4.1 or AVX2; grep -q sse2 /proc/cpuinfo && echo ""SSE2: Yes"" || echo ""SSE2: No""64bit: Yes; [lihuilin@login01 MMseqs2]$ grep -q avx2 /proc/cpuinfo && echo ""AVX2: Yes"" || echo ""AVX2: No""; AVX2: Yes; [l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:10289,install,installed,10289,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['install'],['installed']
Deployability,core only.; > Using 4 threads.; > Calculation of Smith-Waterman alignments.; > Time for merging files: 0 h 0 m 0 s; > ; > All sequences processed.; > ; > 4237 alignments calculated.; > 4235 sequence pairs passed the thresholds (0.999528 of overall calculated).; > 25.0592 hits per query sequence.; > Time for alignments calculation: 0 h 0 m 0s; > Program call:; > tmp/input_step_redundancy tmp/aln tmp/clu_step0 --cluster-mode 0 --max-seqs 300 -v 3 --max-iterations 1000 --similarity-type 2 --threads 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Cluster mode 	0; > Max. results per query 	300; > Verbosity 	3; > Max depth connected component	1000; > Similarity type 	2; > Threads 	4; > ; > Init...; > Opening sequence database...; > Opening alignment database...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 656 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Total time: 0 m 0s; > ; > Size of the sequence database: 169; > Size of the alignment database: 169; > Number of clusters: 17; > Program call:; > tmp/toBeClusteredSeparately tmp/clu tmp/clu_redundancy tmp/clu_step0 ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > List amount 176; > Clustering step 1...; > Clustering step 2...; > Writing the results...; > Time for merging files: 0 h 0 m 0 s; > ...done.; > ===================================================; > ==== Merge the updated clustering together with ===; > ===== the new clusters ======; > ===================================================; > Program call:; > tmp/updatedClust tmp/newClusters DB_clusterupdate ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Time for merging files: 0 h 0 m 0 s; > Time for concatenating DBs: 0 h 0 m 0s,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:20561,update,updated,20561,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,2,['update'],"['updated', 'updatedClust']"
Deployability,"e same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1258,configurat,configuration,1258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['configurat'],['configuration']
Deployability,"e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my actual goal) to for example perform QC on raw seq data. ## Your Environment; I installed using conda:; ```; # Name Version Build Channel; mmseqs2 12.113e3 h2d02072_2 bioconda; ```; The running server:; ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 256; On-line CPU(s) list: 0-254; Off-line CPU(s) list: 255; Thread(s) per core: 1; Core(s) per socket: 64; Socket(s): 2; NUMA node(s): 2; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7702 64-Core Processor; Stepping: 0. NAME=""Ubuntu""; VERSION=""18.04.4 LTS (Bionic Beaver)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 18.04.4 LTS""; VERSION_ID=""18.04""; HOME_URL=""https://www.ubuntu.com/""; SUPPORT_URL=""https://help.ubuntu.com/""; BUG_REPORT_URL=""https://bugs.launchpad.net/ubuntu/""; PRIVACY_POLICY_URL=""https://www.ubuntu.com/legal/terms-and-policies/privacy-policy""; VERSION_CODENAME=bionic; UBUNTU_CODENAME=bionic; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/399:2077,install,installed,2077,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399,1,['install'],['installed']
Deployability,"elevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CPU(s): 0-37; NUMA node1 CPU(s): 38-75; NUMA node2 CPU(s): 76-113; NUMA node3 CPU(s): 114-151; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:3941,release,release,3941,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,2,"['Release', 'release']","['Release', 'release']"
Deployability,"elized protein sequence searches and clustering of huge protein sequence d; ata sets. Please cite: M. Steinegger and J. Soding. MMseqs2 enables sensitive protein sequ; ence searching for the analysis of massive data sets. Nature Biotechnology, doi:; 10.1038/nbt.3988 (2017). MMseqs2 Version: b0b8e85f3b8437c10a666e3ea35c78c0ad0d7ec2; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search Sensitive homology search; easy-linsearch Fast, less sensitive homology search; easy-cluster Slower, sensitive clustering; easy-linclust Fast linear time cluster, less sensitive clustering; easy-taxonomy Taxonomic classification; easy-rbh Find reciprocal best hit; …; ```; ## Current Behavior; *no output*; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; Zip file for respective download was extracted, and upon navigating to the mmseqs directory the '--help' help argument was input to test the installation, resulting in no output. ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; - No output is the problem; ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; On this machine I have been having an ongoing issue in which cmd is unable to open in any scenario besides using another user account.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): none; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): statically-compiled ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: n/a; * Server specifications (especially CPU support for AVX2/SSE and amount of syste",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/574:1204,install,installation,1204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574,1,['install'],['installation']
Deployability,"es. ## Current Behavior. I'm running a clustering analysis to leave out redundant sequences in a big dataset of approximately 10 millon DNA sequences of lengths varying between 1150 and 1250 bp. The problem I'm having is that it looks like the program is running in a single core instead of the 128 threads I tell the program to use, hence it takes a really long time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.9; Coverage mode 	1; Compositional bias ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:1031,install,install,1031,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,2,['install'],['install']
Deployability,"h out/qdb /path/to/database/uniref30_2202_db out/res out/tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:3341,RELEASE,RELEASE,3341,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['RELEASE'],['RELEASE']
Deployability,"h the error:; ```; [ 94%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasySearch.cpp.o; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp: In function 'int doeasysearch(int, const char**, const Command&, bool)':; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:34: error: 'easysearch_sh' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; | ^~~~~~~~~~~~~; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:49: error: 'easysearch_sh_len' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; ```; (Indicated here are the last few lines only.). ## Steps to Reproduce (for bugs); Compilation tools:; ```; cmake v3.21.4; gcc v10.2.0; openmpi v4.1.1; git v2.31.1; make v3.82; ```; Clone latest `MMseqs2` version with; ```; git clone https://github.com/soedinglab/MMseqs2.git; ```. Follow compilation instructions for linux as provided [here](https://github.com/soedinglab/mmseqs2/wiki#compile-from-source-under-linux) with the following modification:; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DREQUIRE_OPENMP=0 -DCMAKE_INSTALL_PREFIX=. ..; ```; This results in the error indicated above. ## MMseqs Output (for bugs); Some additional data, if necessary, is available [here](https://gist.github.com/vragh/89c426b70c63248c73ff120757149c9d). ## Context; I'm trying to install `MMseqs2` with MPI capabilities so that I can parallelize a large search over multiple `slurm` nodes on a HPC. ## Your Environment; * Commit: the version I cloned should be equivalent to [[fce06b1](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011)](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011) ?; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 2x Intel(R) Xeon(R) Silver 4214; 187 GB total system memory.; * Operating system and version: Scientific Linux 7.9 (Nitrogen).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/633:1321,Release,Release,1321,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/633,2,"['Release', 'install']","['Release', 'install']"
Deployability,"hed with `core dumped` error and reports `Error: createbintaxonomy failed`. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; mmseqs createdb ""uniprot_2024_03.fasta"" seqdb; ```; then; ```; mmseqs createtaxdb seqdb tmp ; ```. We attempted to vary `--tax-db-mode`, `--tax-mapping-mode`, and `--threads` parameters but observed the same behavior. Any help would be highly appreciated. We are able to reproduce this issue with a minimal database containing 1000 sequences. ## MMseqs Output (for bugs). ```; > mmseqs createtaxdb seqdb tmp ; createtaxdb seqdb tmp . MMseqs Version: 15.6f452; NCBI tax dump directory; Taxonomy mapping file ; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 48; Verbosity 3. Loading nodes file ... Done, got 2601214 nodes; Loading merged file ... Done, added 79743 merged nodes.; Loading names file ... Done; mmseqs: malloc.c:2379: sysmalloc: Assertion `(old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.; Aborted (core dumped); Error: createbintaxonomy failed; ```. ## Context. We are trying to create a custom taxonomy database for MSA, such that the resulting .a3m files contain taxonomy information. Is a taxonomy database already available for download for uniprot_2024_03 for similar releases?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. Linux 64-bit, 256G memory; MMseqs Version: 15.6f452",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871:1559,release,releases,1559,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871,1,['release'],['releases']
Deployability,"hold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2083,install,installed,2083,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['install'],['installed']
Deployability,"ihuilin@login01 latest]$ ls; [lihuilin@login01 latest]$ cd ..; [lihuilin@login01 tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cd 18110643841744502873; [lihuilin@login01 18110643841744502873]$ ls; [lihuilin@login01 18110643841744502873]$; ```; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; I installed MMseqs2 by git clone, and followed these:; ```; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; export PATH=$(pwd)/bin/:$PATH; ```. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; ```; [lihuilin@login01 MMseqs2]$ [ $(uname -m) = ""x86_64"" ] && echo ""64bit: Yes"" || echo ""64bit: No""; grep -q sse4_1 /proc/cpuinfo && echo ""SSE4.1: Yes"" || echo ""SSE4.1: No""; # for very old systems which support neither SSE4.1 or AVX2; grep -q sse2 /proc/cpuinfo && echo ""SSE2: Yes"" || echo ""SSE2: No""64bit: Yes; [lihuilin@login01 MMseqs2]$ grep -q avx2 /proc/cpuinfo && echo ""AVX2: Yes"" || echo ""AVX2: No""; AVX2: Yes; [lihuilin@login01 MMseqs2]$ grep -q sse4_1 /proc/cpuinfo && echo ""SSE4.1: Yes"" || echo ""SSE4.1: No""; SSE4.1: Yes; [lihuilin@login01 MMseqs2]$ # for very old systems whic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:10460,RELEASE,RELEASE,10460,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['RELEASE'],['RELEASE']
Deployability,"ince it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would be important to rank all hits of a query based on a globally valid significance measure that would allow the comparison of Hit-Target significances across iterations as well. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM, i5-3320M CPU; * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:3998,RELEASE,RELEASE,3998,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,2,"['RELEASE', 'install']","['RELEASE', 'install']"
Deployability,installation issue (MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/886:0,install,installation,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/886,1,['install'],['installation']
Deployability,"ior; Starting from nr which was already downloaded, generate all of the required files to run mmseqs taxonomy to assign taxonomy to metagenome assembled genomes. ## Current Behavior; nr.fnaDB_mapping is empty (ls -thor reveals it is 0 bytes and mmseqs easy-taxonomy displays ""nr.fnaDB_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.""). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; #Download nr; wget ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz; gunzip nr.gz; #Make a blastdb and diamond db of nr; makeblastdb -in nr -dbtype prot; diamond makedb --in nr -d nr.dmnd; #Prepare taxonomy database for mmseqs2; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; rm taxdump.tar.gz; blastdbcmd -db nr -entry all > nr.fna; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.fna.taxidmapping; mmseqs createdb nr.fna nr.fnaDB && \; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I want to use MMseqs2 to assign taxonomy to contig-level metagenome-assembled genomes. I had previously downloaded nr as above, so hopefully the way I downloaded it works for MMseqs? I could alternatively re-download nr entirely with the mmseqs workflows, but would prefer not to do that if possible for consistency with analyses that are already done and used the version of nr that I have downloaded. I don't think versioning is actually a problem as I downloaded nr within the past couple months. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; I am using a conda environment created using `conda install -c bioconda mmseqs2` on April 19, 2023.; version: 14.7e284 (via conda list in activated environment)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/701:1909,install,install,1909,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701,1,['install'],['install']
Deployability,"ist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; cache_alignment	: 64; address sizes	: 44 bits physical, 48 bits virtual; power management:; ```; free; ```; total used free shared buff/cache available; Mem: 528377212 3193792 142947764 9564 382235656 523907652; Swap: 0 0 0. ```; * Operating system and version:; cat /etc/redhat-release ; CentOS Linux release 7.3.1611 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:7047,release,release,7047,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,2,['release'],['release']
Deployability,"man/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:2600,install,installations,2600,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['install'],['installations']
Deployability,"me $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 32; Compressed 0; Verbosity 3. Query database size: 1480080 type: Aminoacid; Estimated memory consumption: 5G; Target database size: 1480080 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 6; Index table: counting k-mers; [=================================================================] 1.48M 3s 585ms; Index table: Masked residues: 4728698; Index table: fill. ## Your Environment; I'm using the latest release of MMSeqs2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382:2672,release,release,2672,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382,1,['release'],['release']
Deployability,"mino acid sequences with 100% coverage. I expect after going through the prefiltering step and alignment step I would see 100% identical hits. ; ## Current Behavior; Instead I found hits with of approximately 93% with reported mismatches of 22 with the same e-values as those with 100% identity. ; ## Steps to Reproduce (for bugs). Attached is the example sequence I found for this bug ([redundant.zip](https://github.com/user-attachments/files/16111570/redundant.zip)). Protein sequence is 303 AA in length with fake names given to the same sequence. I ran the following commands to create the alignment file where I found the issue. . ```; mmseqs createdb redundant.fasta sequenceDB; mmseqs kmermatcher sequenceDB prefilterDB; mmseqs align sequenceDB sequenceDB prefilterDB alignmentDB; mmseqs convertalis sequenceDB sequenceDB alignmentDB alignmentFile; ```. ## MMseqs Output (for bugs); Below is the TSV file of the resulting alignment. As you can see these identical sequences sometimes match at 100% others at 93% with some amount of mismatch and all the same bit-scores etc. ; ![Screenshot from 2024-07-05 10-47-23](https://github.com/soedinglab/MMseqs2/assets/44539035/4d073d41-99e7-4abc-b057-70974cde7ab0). ## Context. I am attempting to replicate some uniref clusters and found this irregularity and chose to isolate and replicate the issue by creating a completely redundant database. This may be a related to #688 . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 6f45232ac8daca14e354ae320a4359056ec524c2. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled from release 15-6f452. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; AMD 3950X with 128GB DDR4 RAM. * Operating system and version:; Ubuntu 22.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/861:1870,release,release,1870,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/861,1,['release'],['release']
Deployability,"mmseqs2 is installed with conda, but the cpu utilization is low when performing the retrieval library",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/752:11,install,installed,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/752,2,['install'],['installed']
Deployability,"mpirun is a kind of linux command.; But it has two kinds of very different version: OpenMPI , MPICH. A bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: (Open MPI) 1.10.2; No bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: 3.3a2 (After googled this number, I found this is from MPICH). The bug reports:; Corrupt memory, too many entries!. Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted. mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[38952,1],10]; Exit code: 1. Error: Prefilter died. So could you tell me which mpirun is the base of mmseqs ?; Or How to do with this bug?; Thank you very much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/213:186,install,installed,186,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213,2,['install'],['installed']
Deployability,"n(R) Gold 6130 CPU @ 2.10GHz; stepping : 4; microcode : 0x2007006; cpu MHz : 2100.000; cache size : 22528 KB; physical id : 0; siblings : 32; core id : 0; cpu cores : 16; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 22; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req pku ospke md_clear flush_l1d arch_capabilities; vmx flags : vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml ept_mode_based_exec tsc_scaling; bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit mmio_stale_data; bogomips : 4200.00; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:. $ free; total used free shared buff/cache available; Mem: 791192240 20105804 63519620 33656 707566816 765066152; Swap: 0 0 0; ```; * Operating system and version:; ```; $ cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=22.04; DISTRIB_CODENAME=jammy; DISTRIB_DESCRIPTION=""Ubuntu 22.04.3 LTS""; PRETTY_NAME=""Ubuntu 22.04.3 LTS""; <truncated>; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:6010,release,release,6010,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['release'],['release']
Deployability,"ndex; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); Error: Offset step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 15.6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): latest 15.6f452 installed by conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 1T memory; * Operating system and version: CentOS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:35784,install,installed,35784,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['install'],['installed']
Deployability,"nome, so they should match perfectly. (Next, I'll run it on genes that might not perfectly match the reference as they can have some differences in the third char of each coddon.). ## Current Behavior; When running a nucleotides search I get ~5K results, most of them are long enough and mapped well.; When running a translated search I get 89K results that are very short and non of them covers the entire gene.; I assume that this is not a bug but rather an intended behavior. What am I missing?. ## Steps to Reproduce (for bugs); the files can be found here:; query - https://files.cs.huji.ac.il/morani/cds_from_genomic.fna; target - https://files.cs.huji.ac.il/morani/GCF_000011885.1_ASM1188v1_genomic.fna ; translated search command -` mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_translated.m8 tmp --search-type 2 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`; regular search command - `mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_nucleotides.m8 tmp --search-type 3 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`. ## MMseqs Output (for bugs); output files:; translated search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_translated.m8; regular search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_nucleotides.m8. ## Context; For a pipeline I'm designing, I'm comparing a few tools that can search for gene in a reference genome. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used : 15.6f452; * Downloaded using conda; * Server info:; NAME=""Debian GNU/Linux""; VERSION_ID=""10""; VERSION=""10 (buster)""; VERSION_CODENAME=buster; ID=debian; HOME_URL=""https://www.debian.org/""; SUPPORT_URL=""https://www.debian.org/support""; BUG_REPORT_URL=""https://bugs.debian.org/"". Thanks! ; Netta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/796:1671,pipeline,pipeline,1671,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/796,1,['pipeline'],['pipeline']
Deployability,"not open data file /root/tmp/blast/tmp/pref_4!; mv: no se puede efectuar `stat' sobre «/root/tmp/blast/tmp/aln_4»: No existe el fichero o el directorio; ```; The index creation and search is done in the same machine; # ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; ca",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:5774,Release,Release,5774,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,1,['Release'],['Release']
Deployability,"nslate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Linux version 3.10.0-1160.6.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) )",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:3871,install,installed,3871,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,1,['install'],['installed']
Deployability,"ource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned in #729 involving the `gtdb.lookup` file. Taxonomy results will be unreliable until #729 is fixed. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 14.7e284; * Which MMseqs version was used: conda install; * For self-comp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:2004,release,releases,2004,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['release'],['releases']
Deployability,pleas tag new release,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/597:14,release,release,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/597,1,['release'],['release']
Deployability,"popen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compresse d 0 -v 3. [=================================================================] 100.00% 500 0s 376ms; Time for merging to alnResult.m8: 0h 0m 0s 57ms; Time for processing: 0h 0m 1s 129ms; rmdb tmp/18110643841744502873/result -v 3. Time for processing: 0h 0m 0s 10ms; rmdb tmp/18110643841744502873/target -v 3. Time for processing: 0h 0m 0s 4ms; rmdb tmp/18110643841744502873/target_h -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp/18110643841744502873/query -v 3. Time for processing: 0h 0m 0s 1ms; rmdb tmp/18110643841744502873/query_h -v 3. Time for processing: 0h 0m 0s 1ms; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src tmp util; [lihuilin@login01 MMseqs2]$; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src tmp util; [lihuilin@login01 MMseqs2]$ cd tmp; [lihuilin@login01 tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cat latest; cat: latest: Is a directory; [lihuilin@login01 tmp]$ cd latest; [lihuilin@login01 latest]$ ls; [lihuilin@login01 latest]$ cd ..; [lihuilin@login01 tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cd 18110643841744502873; [lihuilin@login01 18110643841744502873]$ ls; [lihuilin@login01 18110643841744502873]$; ```; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the en",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:9143,pipeline,pipelines,9143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['pipeline'],['pipelines']
Deployability,"port it. However, instead of raising an error convertmsa produces empty files without alerting the user. To skip preprocessing and run msa2profile command directly requires the datatype and index files to exist, and I don't know how to generate these correctly from the data at hand. Making a database from the MSA data is not a problem and the database can be searched without issue except that VOG IDs are not transferred from the file name. It seems that the problem is only with generating profiles. ## Reproduction / Examples. Example where convertmsa creates files, but they are empty and there is no error. ```BASH; # make temp folders; mkdir vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; # tar xzf vog.raw_algs.tar.gz; # gzip -c *.msa > vog.raw_algs.gz; cd ..; mmseqs convertmsa vog/vog.raw_algs.tar.gz vog/temp/converted; ```. Files are created in vog/temp with the converted prefix, but they are all empty. The only path to an MMseqs2 profile that has any success is to convert the MSA files first into HH-suite compatible hmm files and then to use the hmm to profile pipeline. ```BASH; # make make temp folders; mkdir vog; mkdir hhmake; mkdir hhmake/vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz.md5; md5sum -c vog.raw_algs.tar.gz.md5; tar xzf vog.raw_algs.tar.gz; cd ..; ; for f in vog/*.msa;; do; hhmake -M 50 -i $f -o hhmake/$f.hhm; done; ffindex_build vog/mmseqs/hmm vog/mmseqs/hmm.index hhmake/vog/; mmseqs convertprofiledb vog/mmseqs/hmm vog/mmseqs/profile; ```; However, when using a search command against vog/mmseqs/profile only returns individual genes not profiles. ## Environment. MMseqs Version: 4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; MMseqs source: conda install -c conda-forge -c bioconda mmseqs2; OS: NAME=CentOS Linux 7; CPUs: Intel(R) Xeon(R) Gold 5118; Threads/core: 96",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/440:2000,pipeline,pipeline,2000,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440,2,"['install', 'pipeline']","['install', 'pipeline']"
Deployability,"qres.protein.cluster.DB mmseqs2_cluster/pdb_seqres.protein.cluster.fasta; ./mmseqs2/bin/mmseqs linclust mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.linclust /tmp/zcx/mmseqs2 --min-seq-id 0.9 --cov-mode 1 -c 0.9; ./mmseqs2/bin/mmseqs createseqfiledb mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.linclust mmseqs2_cluster/pdb_seqres.protein.linclust.DB; ./mmseqs2/bin/mmseqs result2flat mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.linclust.DB mmseqs2_cluster/pdb_seqres.protein.linclust.fasta; ```. ## MMseqs Output (for bugs); [pdb_seqres.protein.cluster.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2195015/pdb_seqres.protein.cluster.fasta.gz); [pdb_seqres.protein.linclust.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2195014/pdb_seqres.protein.linclust.fasta.gz); The output is compressed by gzip as github does not support .fasta file. ## Context; I suspect this is because short sequence has a low alignment score. When you are estimating sequence identity according to alignment score, you will get false negative for short sequence. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): e3f80a7b0a32b1bc4122b73c045a9dd2f7da42e3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): statically-compiled SSE4.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Support SSE but not AVX2. 125G.; * Operating system and version:; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 6.10 (Santiago); Release:	6.10; Codename:	Santiago",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/104:3000,release,release,3000,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/104,2,"['Release', 'release']","['Release', 'release']"
Deployability,"r `mmseqs2_pass_cluster.tsv`:. ```; zzsomethingelse	zzsomethingelse; zzsomethingelse	zzsomething; ```; but removes the 'uc' from the defline in `mmseqs2_fail_cluster.tsv`. ```; somethingelse	somethingelse; somethingelse	something; ```. This seems to be the case for any deflines that start with 'uc'. ------. The FASTA files also have duplicate defline entries, where one of the duplicates doesn't contain a sequence:. `mmseqs2_fail_all_seqs.fasta`; ```; >somethingelse; >ucsomethingelse; MPELRRVLANGVELNVALCGSGPAVLLLHGFPHTWELWTDVMADLSGRYRVIAPDLRGFGASGRAASGYDAGTLAEDAAALLAALGVSSATVVGIDAGTAPAFLLALRHPGLVRRLVVMESLLGRLPGAEDFLAEGPPWWFGFHSAAPSLAETVLEGHEAAYVDWFLSAGTLGDGVRPALRDAFVRAYTGRQALSCAFSYYRALPKSAVQIEQAVATARLTVPTMALGARPVGAALERQLRPVTDDLTGHVIDDCGHIIPLHRPHALLALLHPFLAGEDAKAA; >ucsomething; MPELRRVLANGVELNVALCGSGPAVLLLHGFPHTWELWTDVMADLSGRYRVIAPDLRGFGASGRAASGYDAGTLAEDAAALLAALGVSSATVVGIDAGTAPAFLLALRHPGLVRRLVVMESLLGRLPGAEDFLAEGPPWWFGFHSAAPSLAETVLEGHEAAYVDWFLSAGTLGDGVRPALRDAFVRAYTGRQALSCAFSYYRALPKSAVQIEQAVATARLTVPTMALGARPVGAALERQLRPVTDDLTGHVIDDCGHIIPLHRPHALLALLHPFLAGEDAKAA; ```. `mmseqs2_pass_all_seqs.fasta`; ```; >zzsomethingelse; >zzsomethingelse; MPELRRVLANGVELNVALCGSGPAVLLLHGFPHTWELWTDVMADLSGRYRVIAPDLRGFGASGRAASGYDAGTLAEDAAALLAALGVSSATVVGIDAGTAPAFLLALRHPGLVRRLVVMESLLGRLPGAEDFLAEGPPWWFGFHSAAPSLAETVLEGHEAAYVDWFLSAGTLGDGVRPALRDAFVRAYTGRQALSCAFSYYRALPKSAVQIEQAVATARLTVPTMALGARPVGAALERQLRPVTDDLTGHVIDDCGHIIPLHRPHALLALLHPFLAGEDAKAA; >zzsomething; MPELRRVLANGVELNVALCGSGPAVLLLHGFPHTWELWTDVMADLSGRYRVIAPDLRGFGASGRAASGYDAGTLAEDAAALLAALGVSSATVVGIDAGTAPAFLLALRHPGLVRRLVVMESLLGRLPGAEDFLAEGPPWWFGFHSAAPSLAETVLEGHEAAYVDWFLSAGTLGDGVRPALRDAFVRAYTGRQALSCAFSYYRALPKSAVQIEQAVATARLTVPTMALGARPVGAALERQLRPVTDDLTGHVIDDCGHIIPLHRPHALLALLHPFLAGEDAKAA; ```. ## MMseqs Output (for bugs). https://gist.github.com/chasemc/c0cccd804ac0ff78291e43ae10837c42; https://gist.github.com/chasemc/d8157a581c833406f15442e8b9ee4e81; ## Your Environment. Conda installed: MMseqs2 Version: 13.45111; Happy to give system info if needed",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/557:3717,install,installed,3717,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/557,1,['install'],['installed']
Deployability,"r-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:4897,install,installations,4897,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['install'],['installations']
Deployability,"ram call:; > tmp/NEWDB.newSeqs tmp/OLDDB.mapped.repSeq tmp/newSeqsHits tmp/newSeqsHits.swapped.all ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Threads 	4; > Verbosity	3; > ; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/newSeqsHits.swapped.all tmp/newSeqsHits.swapped --trim-to-one-column ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Filter column 	1; > Filter regex 	^.*$; > Positive filter 	true; > Filter file 	; > Mapping file 	; > Threads 	4; > Verbosity 	3; > trim the results to one column 	true; > Extract n lines 	0; > Numerical comparison operator 	; > Numerical comparison value 	0; > Sort (increasing:1, decreasing: 2, shuffle: 3) the entries by numerical value	0; > ; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > = Merge found sequences with previous clustering =; > ===================================================; > Program call:; > tmp/OLDCLUST.mapped tmp/updatedClust tmp/newSeqsHits.swapped tmp/OLDCLUST.mapped ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Merge prefixes	; > Verbosity 	3; > ; > Merging the results to tmp/updatedClust; > Done; > Time for merging files: 0 h 0 m 0 s; > Time for merging: 0 h 0 m 0s; > ===================================================; > =========== Extract unmapped sequences ============; > ===================================================; > Program call:; > tmp/noHitSeqList DB_new tmp/toBeClusteredSeparately ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Start writing to file tmp/toBeClusteredSeparately; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > ===== Cluster separately the alone sequences ======; > ===================================================; > mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; > mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; > mv:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:11482,update,updatedClust,11482,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['update'],['updatedClust']
Deployability,"reatedb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharokka_mmseqs2_14_7e284.log). George",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625:2744,install,installations,2744,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625,1,['install'],['installations']
Deployability,"rectory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; mmseqs2=13.45111=h95f258a_1. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; conda ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 2.8.12.2. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; uname -a | grep x86_64; Linux 3.10.0-862.3.3.el7.x86_64 #1 SMP Fri Jun 15 04:15:27 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; ```; * Operating system and version:; CentOS Linux release 7.5.1804 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480:2561,release,release,2561,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480,1,['release'],['release']
Deployability,"ref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; LSF with SSE4 support. The job was submitted using 24 slots with 8 slots per host with a total requested memory of 199992.00 MB; * Operating system and version:; uname -a; Linux nodecn104 3.10.0-957.21.3.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:45867,RELEASE,RELEASE,45867,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,3,"['RELEASE', 'install']","['RELEASE', 'install']"
Deployability,"ry_seqs_split_h: 0h 0m 0s 832ms; > Time for merging to query_seqs_split: 0h 0m 0s 878ms; > Time for processing: 0h 0m 3s 919ms; > prefilter tmp/7701176895607249840/search_tmp/9045538653068861586/query_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/target_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 2670930 type: Nucleotide; > Target split mode. Searching through 18 splits; > Estimated memory consumption: 326G; > Target database size: 100684280 type: Nucleotide; > Process prefiltering step 1 of 18; > ; > Index table k-mer threshold: 0 at k-mer size 15 ; > Index table: counting k-mers; > Segmentation fault (core dumped) ] 0.00% 1 eta -; > Error: Prefilter died; > Error: Search step died; > Error: Search died; > . ## Context. Hi I am trying to run an nucleotide-nucleotide search in mmseq2 with a custom database. This error does not occur with a different, smaller nucleotide database. Thank you very much for this amazing tool and all your hard work. ## Your Environment. I am using a google cloud VM with 64 CPUs and 416 GBs of memory on an ubuntu operating system, version 20.04. I install mmseq with the command. static build with AVX2 (fastest); `wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; tar xvfz mmseqs-linux-avx2.tar.gz; export PATH=$(pwd)/mmseqs/bin/:$PATH; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:7866,install,install,7866,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,1,['install'],['install']
Deployability,"s 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:3393,install,install,3393,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,2,"['RELEASE', 'install']","['RELEASE', 'install']"
Deployability,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:15234,install,installed,15234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['install'],['installed']
Deployability,"s serving as probes (uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing)). ### Clustering. 3 different clustering approaches were tested:; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering`. However, all three approaches lead to the same behavior (although the exact number of alignments changes) . ### Testing. `mmseqs easy-search probes/probes.faa {clustering_dir}/uhgp90_rep_seq.fasta results/single-step-clustering-uhgp90.m8 tmp --min-seq-id 0.9 -c 0.9 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln"" --threads 16`. ## Output. The m8 files obtained with the `easy-search` command were uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing). ## Context. I want to assign assembled proteins from metagenomes to clusters from a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). I have noticed that when I align assembled bacterial proteins from my dataset to UHGP reresentative sequences of clusters at 90% amino acid identity, some of them align to over 1200 representative sequences with identity over 90% and almost 100% coverage. The UHGP clusters were generated with linclust, so I attempted to cluster de-duplicated sequences from this catalogue with the easy-cluster workflow, hoping to improve the results. However, while there is an improvement, the situation is still far from ideal. ## Your Environment. MMseqs2 Release 14-7e284, installed with conda",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/639:2526,Release,Release,2526,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/639,2,"['Release', 'install']","['Release', 'installed']"
Deployability,"s-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Linux 5.4.0-139-generic #156-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux; ```; * Azure image:; ```; Operating System; Ubuntu; 20.04.6; LTS; Runner Image; Image: ubuntu-20.04; Version: 20230507.1; Included Software: https://github.com/actions/runner-images/blob/ubuntu20/20230507.1/images/linux/Ubuntu2004-Readme.md; Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu20%2F20230507.1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:4174,Pipeline,Pipelines,4174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,3,"['Pipeline', 'Release', 'release']","['Pipelines', 'Release', 'releases']"
Deployability,"seCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:1830,release,releases,1830,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['release'],['releases']
Deployability,"seqsRefSeqCompleteDB. And then for a set of query files: ; - create mmseqs db for the query file; mmseqs createdb $file $outpath/$querydb; - search against the target db loaded in memory; mmseqs search $outpath/$querydb $db $outpath/$result_db tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5. Is this the correct way of processing multiple searches using mmseqs? Is there any way to speed up searches for large query sets and large database files?. Any information would be greatly appreciated.; Thanking you,. regards,; Dhwani Desai; ## Current Behavior; It does not seem to make a difference to the runtime when I try it with or without the --db-load-mode option. Is there a way to speed up these kinds of repeated searches?; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 73ce3b88754987122b4fc5e69a721beeecd677d0. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; installation (using Git):; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; This will generate the compiled executable in the bin folder; Copy the executable to $HOME/bin; cp bin/mmseqs ~/bin. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214:1963,install,installation,1963,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214,3,"['RELEASE', 'install']","['RELEASE', 'install', 'installation']"
Deployability,"shold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 83); Query db start 1 to 20588; Target db start 1 to 207919; ...; ```. ## Context; I'm running this on a cluster with aarch64 (actually A64FX) CPU architecture. The cluster also has limited memory per node -- only 32 GB. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; * Which MMseqs version was used: self compiled; * For self-compiled and Homebrew: : GCC 12.1 ,OpenMPI 4.1.4, CMAKE 3.22. Build command: `cmake -DCMAKE_BUILD_TYPE=RELEASE -DNATIVE_ARCH=0 -DCMAKE_C_FLAGS=""-O3 -mcpu=a64fx"" -DCMAKE_CXX_FLAGS=""-O3 -mcpu=a64fx"" -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45 ..`; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): A64FX and 32 Gb of ram; * Operating system and version: Rocky Linux 8.4. I'm wondering if the per-node memory limitation is also limiting the number of threads that can be used, or is there something about how I'm calling mmseqs that I should be changing in order to utilize 48 cores/threads per node? I've tried setting the value of `--threads` to 48, to the total number of cores available on all nodes, and not setting it at all. In each case, the max # of threads/cores used per node is 12. Thanks!; Dave",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:5895,RELEASE,RELEASE,5895,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['RELEASE'],['RELEASE']
Deployability,"singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl eagerfpu pni pclmulqdq ssse3 cx16 pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm fsgsbase tsc_adjust smep erms xsaveopt arat; * Operating system and version:; Ubuntu 16.04; Linux mymachine 4.4.0-78-generic #99-Ubuntu SMP Thu Apr 27 15:29:09 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:2189,install,installation,2189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['install'],['installation']
Deployability,"sion of the master database. ## Current Behavior; The new database includes only copies of an entry in the original index which is not in the filter file and is repeated for number of ids present in filter file. ## Steps to Reproduce (for bugs); I am able to reproduce with a small 8 sequence fasta file which is a subset of an old uniref90 download and a single entry filter file.; [uniref90_head.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2847259/uniref90_head.fasta.gz); [uniref90_head_subset.txt](https://github.com/soedinglab/MMseqs2/files/2847255/uniref90_head_subset.txt); ```; mmseqs createdb uniref90_head.fasta uniref90_head.mmsdb; mmseqs createsubdb uniref90_head_subset.txt uniref90_head.mmsdb uniref90_head.subset.mmsdb; mmseqs createsubdb uniref90_head_subset.txt uniref90_head.mmsdb_h uniref90_head.filt.mmsdb_h; ```; Then the resulting uniref90_head.filt.mmsdb_h only has a single entry (UniRef90_Q197F8 Uncharacterized protein 002R n=1 Tax=Invertebrate iridescent virus 3 TaxID=345201 RepID=002R_IIV3 ; ) which is from the fasta but not the id from the filter file (UniRef90_Q6GZX2). ## MMseqs Output (for bugs); No errors given. Only run times. ## Context; I am trying to implement a reciprocal best hits approach. I am searching a fasta file of genes against a uniref90 fasta file. Both are fasta's of amino acids. The forward search (query=genes, target=uniref) goes fine and the reverse search (query=uniref, target=genes) works fine with the full database. Reciprocal best hits were found. To speed up the reverse search I wanted to filter uniref to only include the best hits from the forward search. To do this I used `createsubdb` with the top hits from the forward search as the filter file. The search (query=filtered uniref, target=genes) ran successfully but no alignments were found. Based on this I investigated the _h file from the sub-database and saw the problem. ## Your Environment; Used on a CentOS 7 server and installed via conda. Version is 7.4e23d.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/162:2031,install,installed,2031,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/162,1,['install'],['installed']
Deployability,"sure to execute the reproduction steps with newly recreated and empty tmp folders. I have formatted the IMG/VR v4 7.1 AA database as recommended (https://github.com/soedinglab/MMseqs2/wiki#create-a-seqtaxdb-by-manual-annotation-of-a-sequence-database) and I've created a custom taxdump using taxonkit. The custom taxdb was created without issue:. ```; mmseqs createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/I",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:1501,integrat,integrate,1501,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['integrat'],['integrate']
Deployability,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/477:2110,install,installed,2110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477,1,['install'],['installed']
Deployability,"teParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; #1 0x5669efec in Parameters::checkIfDatabaseIsValid (this=0x56bba090, command=..., argc=2, argv=0xffffcddc, isStartVar=false, isMiddleVar=false, isEndVar=false); at ./src/commons/Parameters.cpp:1905; #2 0x566a32a9 in Parameters::parseParameters (this=0x56bba090, argc=2, pargv=0xffffcddc, command=..., printPar=<optimized out>, parseFlags=0, outputFlags=0); at ./src/commons/Parameters.cpp:1850; #3 0x5689d5ac in createindex (argc=2, argv=0xffffcddc, command=...) at ./src/workflow/CreateIndex.cpp:137; #4 0x565bbf0d in runCommand (p=0x56bc30c0, argc=2, argv=0xffffcddc) at ./src/commons/Application.cpp:38; #5 0x565aabcb in main (argc=4, argv=0xffffcdd4) at ./src/commons/Application.cpp:196; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; ```; mmseqs-avx2 createdb examples/DB.fasta DB; mmseqs-avx2 createindex DB tmp; ```. ## MMseqs Output (for bugs); ```; Create directory tmp; createindex DB tmp . Illegal instruction (core dumped); ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled for 32-bit x86 on Debian using https://salsa.debian.org/med-team/mmseqs2/-/tree/debian/experimental/debian/patches; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): avx2 capable processor, > 60 GiB memory; * Operating system and version: Debian ""testing""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418:3843,patch,patches,3843,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418,1,['patch'],['patches']
Deployability,"tmp/2226585588535541735/search_tmp/11167723337111805049/aln tmp/2226585588535541735/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 26ms; Writing results to: tmp/2226585588535541735/result; [=================================================================] 419.27K 2s 43ms. Time for merging to result: 0h 0m 0s 264ms; Time for processing: 0h 0m 6s 8ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs_aa . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/2226585588535541735/query tmp/2226585588535541735/target tmp/2226585588535541735/result output.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,evalue,pident,tstart,tend,qlen,alnlen,qcov --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 64 --compressed 0 -v 3 . [=================================================================] 419.27K 3s 600ms; Time for merging to output.tsv: 0h 0m 3s 849ms; Time for processing: 0h 0m 12s 294ms; Removing temporary files; rmdb tmp/2226585588535541735/result . Time for processing: 0h 0m 2s 15ms; rmdb tmp/2226585588535541735/target . Time for processing: 0h 0m 0s 486ms; rmdb tmp/2226585588535541735/target_h . Time for processing: 0h 0m 0s 1ms; rmdb tmp/2226585588535541735/query . Time for processing: 0h 0m 0s 102ms; rmdb tmp/2226585588535541735/query_h . Time for processing: 0h 0m 0s 5ms; ```. ## Your Environment. I'm using the `11.e1a1c` conda release on Linux;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:12161,release,release,12161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['release'],['release']
Deployability,"tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cd 18110643841744502873; [lihuilin@login01 18110643841744502873]$ ls; [lihuilin@login01 18110643841744502873]$; ```; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; I installed MMseqs2 by git clone, and followed these:; ```; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; export PATH=$(pwd)/bin/:$PATH; ```. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; ```; [lihuilin@login01 MMseqs2]$ [ $(uname -m) = ""x86_64"" ] && echo ""64bit: Yes"" || echo ""64bit: No""; grep -q sse4_1 /proc/cpuinfo && echo ""SSE4.1: Yes"" || echo ""SSE4.1: No""; # for very old systems which support neither SSE4.1 or AVX2; grep -q sse2 /proc/cpuinfo && echo ""SSE2: Yes"" || echo ""SSE2: No""64bit: Yes; [lihuilin@login01 MMseqs2]$ grep -q avx2 /proc/cpuinfo && echo ""AVX2: Yes"" || echo ""AVX2: No""; AVX2: Yes; [lihuilin@login01 MMseqs2]$ grep -q sse4_1 /proc/cpuinfo && echo ""SSE4.1: Yes"" || echo ""SSE4.1: No""; SSE4.1: Yes; [lihuilin@login01 MMseqs2]$ # for very old systems which support neither SSE4.1 or AVX2; [lihuilin@login01 MMseqs2]$ grep -q sse2 /proc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:10508,install,install,10508,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['install'],['install']
Deployability,"to Reproduce (for bugs); -download gtdb.tar.gz; `mmseqs createdb tardb gtdb`; -execute shell commands in databases.sh to create nodes.dmp, names.dmp, mapping_genomes (these files all seem to be fine); `mmseqs createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file ""tmp/taxonomy/mapping_genomes"" --tax-mapping-mode 1`. ## MMseqs Output (for bugs); -no errors or warnings; ```; createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file tmp/taxonomy/mapping_genomes --tax-mapping-mode 1 . MMseqs Version: 	14.7e284; NCBI tax dump directory	tmp/taxonomy; Taxonomy mapping file 	tmp/taxonomy/mapping_genomes; Taxonomy mapping mode 	1; Taxonomy db mode 	1; Threads 	28; Verbosity 	3; ```. if I understand correctly, the gtdb.lookup file should have 3 columns: proteinNumber (0.. 256163114), proteinID, sourceGenomeNumber : ; ```; 0 NZ_CP009512.1_1 1; 1 NZ_CP009512.1_33 1; 2 NZ_CP009512.1_65 1; 3 NZ_CP009512.1_97 1; 4 NZ_CP009512.1_129 1; 5 NZ_CP009512.1_161 1; 6 NZ_CP009512.1_193 1; 7 NZ_CP009512.1_225 1; 8 NZ_CP009512.1_257 1; 9 NZ_CP009512.1_289 1; 10 NZ_CP009512.1_321 1; ```; however, my gtdb.lookup file has entries from different genomes pointing to the same source genome number. e.g. ; ```; 0 NZ_CP009512.1_1 1; 100 NZ_CP009512.1_3201 1; 101 NZ_CP009512.1_3233 1; 102180795 NZ_JAAOIZ010000001.1_5 1 #should point to source genome 65537; 102180796 NZ_JAAOIZ010000001.1_37 1 #should point to source genome 65537; 102181002 JAJXZV010000318.1_2 2 #should point to source genome 65538; 102181003 JAJXZV010000021.1_4 2 #should point to source genome 65538; 104066383 NC_007181.1_8 2; 104066384 NC_007181.1_40 2; ```; the highest source genome number found in the gtdb.lookup file is 65535, and then it seems to start over at 1 duplicating ids...?. ## Your Environment; MMseqs2 Version: 14.7e284; tried with both latest binary download and conda install; Linux my.local 3.10.0-1160.76.1.el7.x86_64 #1 SMP Wed Aug 10 16:21:17 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729:2191,install,install,2191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729,1,['install'],['install']
Deployability,"u tmps/DB_clu_rep.fasta; mmseqs convert2fasta tmps/DB_clu_rep.fasta outs.fasta; ```. But I read the PDF guide manual on Github, which is. ```bash; mmseqs cluster DB DB_clu tmp; mmseqs linclust DB DB_clu tmp; mmseqs createsubdb DB_clu DB DB_clu_rep; mmseqs convert2fasta DB_clu_rep DB_clu_rep.fasta; ```; i wonder if their are same or not?. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. their are two output. ```; ls -l; total 1107472; -rw-rw-r-- 1 root root 1103346632 Nov 22 02:16 DB_clu_rep.fasta; -rw-rw-r-- 1 root root 4 Nov 22 02:16 DB_clu_rep.fasta.dbtype; lrwxrwxrwx 1 root root 32 Nov 22 02:16 DB_clu_rep.fasta_h -> /data/codonOP/50filter/tmps/DB_h; lrwxrwxrwx 1 root root 39 Nov 22 02:16 DB_clu_rep.fasta_h.dbtype -> /data/codonOP/50filter/tmps/DB_h.dbtype; lrwxrwxrwx 1 root root 38 Nov 22 02:16 DB_clu_rep.fasta_h.index -> /data/codonOP/50filter/tmps/DB_h.index; -rw-rw-r-- 1 root root 30698239 Nov 22 02:16 DB_clu_rep.fasta.index; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.fasta.lookup -> /data/codonOP/50filter/tmps/DB.lookup; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.fasta.source -> /data/codonOP/50filter/tmps/DB.source; ```. ```; ls -l; total 1107476; -rw-rw-r-- 1 root root 1103346632 Nov 22 02:16 DB_clu_rep; -rw-rw-r-- 1 root root 4 Nov 22 02:16 DB_clu_rep.dbtype; lrwxrwxrwx 1 root root 32 Nov 22 02:16 DB_clu_rep_h -> /data/codonOP/50filter/tmps/DB_h; lrwxrwxrwx 1 root root 39 Nov 22 02:16 DB_clu_rep_h.dbtype -> /data/codonOP/50filter/tmps/DB_h.dbtype; lrwxrwxrwx 1 root root 38 Nov 22 02:16 DB_clu_rep_h.index -> /data/codonOP/50filter/tmps/DB_h.index; -rw-rw-r-- 1 root root 30698565 Nov 22 02:16 DB_clu_rep.index; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.lookup -> /data/codonOP/50filter/tmps/DB.lookup; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.source -> /data/codonOP/50filter/tmps/DB.source; ```. ## Your Environment; i use conda to install mmseqs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/783:2603,install,install,2603,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/783,1,['install'],['install']
Deployability,update clusters from another database with new FASTA file,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/782:0,update,update,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/782,1,['update'],['update']
Deployability,update mmseqs database with non-mmseqs database,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/575:0,update,update,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/575,1,['update'],['update']
Deployability,"ut when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result database: CLU_updated; Start writing to clusters.tsv; Invalid database read for database data file=DB_updated_h, database index=DB_updated_h.index; getData: local id (4294967295) >= db size (17); ```. ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272:1093,update,update,1093,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272,1,['update'],['update']
Deployability,"v-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; Time for merging to pref: 0h 0m 0s 6ms; Time for processing: 10h 13m 54s 576ms; rescorediagonal JGI JGI tmp/14756877054557405347/pref tmp/14756877054557405347/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 . Can not touch 407600133816 into main memory. ## Your Environment; Latest precompiled AVX2 version Release 15-6f452",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:4427,Release,Release,4427,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['Release'],['Release']
Deployability,x86)\mmseqs\\bin/getopt: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/grep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/groups: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/gunzip: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/gzip: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/head: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hexdump: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hostid: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hostname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/httpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission deni,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:5563,install,install,5563,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['install'],['install']
Deployability,"y_seqs.3of3.fasta.gz). b) Consolidate the 3 chunks:. zcat my_seqs.*.fasta.gz > /tmp/my_seqs.fasta. c) Execute and expose the bug:. /opt/mmseqs/bin/mmseqs easy-cluster \; /tmp/my_seqs.fasta /tmp/my_seqs/result /tmp/my_seqs/tmp \; --dbtype 2 --threads 8 --local-tmp /tmp \; --cluster-reassign -s 7.5 --cov-mode 0 -c 0.98 --cluster-mode 2 --min-seq-id 0.99 -v 1. and the bug is shown below. ## MMseqs Output (for bugs). /tmp/my_seqs/tmp/5280277461515018798/clu_tmp/18196956704942050314/nucleotide_clustering.sh: line 48: 4723 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died. ## Context. In my hands, this bug is exposed only when the number of nucleotide sequences is in the order of millions. For small sets (thousands) the execution completes uneventfully. I have tried the precompiled AVX2 version, the SSE4.1 version, I have tried my own compilation of the latest release (15-6f452, Oct 31 2023) and also the latest github version (f6c9880) and other variations. All attempts led to the exact same bug. I have tried also with other three input datasets. All four crash in the same way. All four are in the order of 3 to 4million nucleotide sequences. When I subset the sequences to about 200K sequences, easy-cluster runs to completion. ## Your Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz; CPU family: 6; Model: 85; Thread(s) per core: 2; Core(s) per socket: 16; Socket(s): 1; Stepping: 7; BogoMIPS: 4999.98; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht; syscall nx pdpe1gb rdtscp lm constant_tsc rep_good ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:1585,release,release,1585,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,1,['release'],['release']
Energy Efficiency,"	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 /tmp/15358673946673749737/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:4020,consumption,consumption,4020,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['consumption'],['consumption']
Energy Efficiency," 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 1 --split-memory-limit 0 -v 3 --threads 56 . Estimated memory consumption: 780G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================tmp2/7152678087979496025/createindex.sh: line 56: 37309 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Your Environment; I am running the script on a cluster. You will find below the batch script parameters:; #!/bin/bash; #SBATCH --job-name Install_ColabFold_DB; ##SBATCH --account=def-someuser; #SBATCH --time 24:00:00 ### (HH:MM:SS) the job will expire after this time, the maximum is 168:00:00; #SBATCH -N 1 ### number of nodes (1 node -> several CPUs); #SBATCH --ntasks 1; #SBATCH --cpus-per-task 24; #SBATCH --mem-per-cpu 10000; #SBATCH -A p_linkpredic; ##SBATCH -e %j.err ### redirect",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583:4479,consumption,consumption,4479,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583,1,['consumption'],['consumption']
Energy Efficiency," --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; Time for merging to pref: 0h 0m 0s 6ms; Time for processing: 10h 13m 54s 576ms; rescorediagonal JGI JGI tmp/14756877054557405347/pref tmp/14756877054557405347/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:3172,Reduce,Reduced,3172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['Reduce'],['Reduced']
Energy Efficiency," 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 2.20B 2h 9m 12s 463ms; Process file into 17 parts; Generate k-mers list for 1 split; Generate k-mers list for 2 split; Generate k-mers list for 3 split; Generate k-mers list for 4 split; Generate k-mers list for 5 split; Generate k-mers list for 6 split; Generate k-mers list for 7 split; [=================================================================] 2.20B 32m 39s 205ms; Sort kmer 0h 0m 26s 313ms; Sort by rep. sequence 0h 0m 4s 966ms; Generate k-mers list for 8 split; [=================================================================] 2.20B 33m 28s 924ms; Sort kmer 0h 0m 26s 546ms; Sort by rep. sequence 0h 0m 5s 354ms; Generate k-mers list for 9 split; [=================================================================] 2.20B 33m 0s 123ms; Sort kmer 0h 0m 26s 692ms; Sort by rep. sequence 0h ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:4177,Reduce,Reduced,4177,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['Reduce'],['Reduced']
Energy Efficiency," 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter search_results/qdb db/uniref30_2103_db.idx search_results/tmp/12005814431969335264/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nuc; l:nucleotide.out -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is enough disk space and memory.; I tried to check the process status, and it is always in the `D` status with 100-200% CPU usage ( based on `htop` outputs).; Not sure how I can speed things up at this stage. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): b768f48f0bd73688b6a68132159a97f7b6310f03; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:4232,consumption,consumption,4232,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,1,['consumption'],['consumption']
Energy Efficiency," 0ms; Time for processing: 0h 0m 0s 1ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 5991 type: Aminoacid; Estimated memory consumption: 996M; Target database size: 5991 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 5.99K 0s 98ms ; Index table: Masked residues: 70106; Index table: fill; [=================================================================] 100.00% 5.99K 0s 74ms ; Index statistics; Entries: 2291730; DB size: 501 MB; Avg k-mer size: 0.035808; Top 10 k-mers; IHDKNI 27; LHDKNI 14; LGGFVY 14; GPGGTL 10; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; HVARAT 9; VHSGRT 9; Time for index table init: 0h 0m 0s 730ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 5991; Target db start 1 to 5991; [=================================================================] 100.00% 5.99K 4s 202ms . 403.312621 k-mers per position; 5696 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 16 sequences passed prefiltering per query sequence; 20 m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:26594,consumption,consumption,26594,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['consumption'],['consumption']
Energy Efficiency," 1 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 5 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 5 0s 0ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 5 0s 0ms; Index statistics; Entries: 2994; DB size: 8192 MB; Avg k-mer size: 0.000003; Top 10 k-mers; CCAATCCTCGGCACA	3; CGGCAGACCCGGAGC	3; GGGGCAGCGTGATTT	3; CTCTCGGGGGCGTGG	3; AAGGTGGACAGTTAA	2; ACCTGTAGCCCGTAA	2; GCAGGGTTAAGAGAA	2; GTTATCCCCAACGAA	2; AGAGTGGGTACCGAA	2; TACCGGTATCGCGAA	2; Time for index table init: 0h 0m 8s 169ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 5; [=================================================================] 2 0s 0ms. 0.803571 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:10944,consumption,consumption,10944,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['consumption'],['consumption']
Energy Efficiency," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:4627,Reduce,Reduced,4627,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['Reduce'],['Reduced']
Energy Efficiency," 838.53K 0s 149ms; Time for merging to query_seqs_split_h: 0h 0m 0s 459ms; Time for merging to query_seqs_split: 0h 0m 0s 859ms; Time for processing: 0h 0m 2s 893ms; prefilter tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 5.7 . Query database size: 882920 type: Nucleotide; Estimated memory consumption: 29G; Target database size: 311921 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 311.92K 32s 895ms; Index table: Masked residues: 15323340; Index table: fill; [=================================================================] 311.92K 36s 224ms; Index statistics; Entries: 3056373344; DB size: 25680 MB; Avg k-mer size: 2.846469; Top 10 k-mers; CTGTTTTGTACCTTA	9174; GCCTTCCTATTTTAT	6337; CCGAACAGACTGTCG	6287; ATCGACAAGCGAGCG	6217; CCTGCCTGTTGTATC	6097; TGTTCGGCTCGCTGT	6079; CGCGCAGTCAATAGG	5996; ACAAATCAGAGCGCG	5947; TGCGTTCGCGTTCTG	5935; GATACAAAATGCAGG	5935; Time for index table init: 0h 1m 19s 523ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 882920; Target db start 1 to 311921; [=================================================================] 882.92K 1m 16s 342ms. 0.958336 k-mers per position; 27663 DB matches per sequence; 7 overf",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:6926,consumption,consumption,6926,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['consumption'],['consumption']
Energy Efficiency, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=======================================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29229,consumption,consumption,29229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-m,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29107,consumption,consumption,29107,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Es,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:27720,consumption,consumption,27720,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:27964,consumption,consumption,27964,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Qu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:28452,consumption,consumption,28452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency, Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer th,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29884,consumption,consumption,29884,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency," Substitution matrices...; Use kmer size 5 and split 1 using Target split mode.; Needed memory (20178976034 byte) of total memory (486687909888 byte); Index table: counting k-mers... ```. ## Context; Trying to generate a profile DB from the file `uniclust30_2018_08_hhm_db` contained the 18-08 release of Uniclust30; `http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz`; I am using `convertprofiledb` and then `createindex`... **NOTE:** I have used the same procedure to generate the profile DB using the HHblits profiles for Pfam 31 downloaded from:; `http://wwwuser.gwdg.de/%7Ecompbiol/data/hhsuite/databases/hhsuite_dbs/pfamA_31.0.tgz`. ## Your Environment; > MMseqs Version: 6.f5a1c; [f5a1cdb](https://github.com/soedinglab/MMseqs2/commit/f5a1cdb44c996d6be229226b09ecc687646c0c12); > MMseqs was self-compiled; > gcc (Homebrew gcc 5.5.0_4) 5.5.0; > cmake 3.12.3. >Server specifications:. ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bogomips	: 5199.77; clflush size	: 64; cache_alignment	: 64; address sizes	: 46 bits physical, 48 bits virtual; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130:3826,monitor,monitor,3826,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130,1,['monitor'],['monitor']
Energy Efficiency," Time for processing: 0h 0m 0s 0ms; createsubdb tmp/16138406286044646862/order_1 tmp/16138406286044646862/input_0 tmp/16138406286044646862/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; prefilter tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 12.0 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 7780 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 56; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --real",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:10859,consumption,consumption,10859,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['consumption'],['consumption']
Energy Efficiency, back together?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb sampleX_scaffolds.fasta sampleX_DB; mmseqs taxonomy sampleX_DB /home/mmseqs2/NR/NR sampleX_mmseqs_taxonomy.txt sampleX_temp --tax-lineage 1 --orf-filter 1 --threads 24 --split-memory-limit 500G; ```. ## MMseqs Output (for bugs); [mmseqs.29360353.out.txt](https://github.com/soedinglab/MMseqs2/files/13532025/mmseqs.29360353.out.txt); [mmseqs.29360398.out.txt](https://github.com/soedinglab/MMseqs2/files/13532026/mmseqs.29360398.out.txt). ## Context; Trying to classify metagenomic contigs for kingdom binning. . ## Your Environment; * Git commit used : MMseqs2 Version: 15.6f452; * Which MMseqs version was used: conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; free -m; total used free shared buff/cache available; Mem: 256830 27571 113148 2175 116109 223713; Swap: 131071 9427 121644; ```. ```; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 invpcid_single ssbd mba ibrs ibpb stibp ibrs_enhanced fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local split_lock_detect wbnoinvd dtherm arat pln pts hwp hwp_act_window hwp_pkg_req avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg tme avx512_vpopcntdq la57 rdpid fsrm md_clear pconfig flush_l1d arch_capabilities; ```; * Operating system and version: Oracle Enterprise Linux 8,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/786:3250,monitor,monitor,3250,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/786,1,['monitor'],['monitor']
Energy Efficiency," codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 1 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 4 . Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 194; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Time for merging to human.idx: 0h 0m 0s 0ms; Time for processing: 0h 0m 11s 156ms; ```. expandaln:; ```; expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:3874,consumption,consumption,3874,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,1,['consumption'],['consumption']
Energy Efficiency," died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. ## MMseqs Output (for bugs); ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * MMseqs2 Version: 4589151554eb83a70ff0c4d04d21b83cabc203e4; * Linux, 128 GB of memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/627:2863,consumption,consumption,2863,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627,1,['consumption'],['consumption']
Energy Efficiency," enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). MMseqs2 Version: GITDIR-NOTFOUND; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search 	Sensitive homology search; easy-cluster 	Slower, sensitive clustering; easy-linclust 	Fast linear time cluster, less sensitive clustering; easy-taxonomy 	Taxonomic classification; easy-rbh 	Find reciprocal best hit. Main workflows for database input/output; search 	Sensitive homology search; map 	Map nearly identical sequences; rbh 	Reciprocal best hit search; linclust 	Fast, less sensitive clustering; cluster 	Slower, sensitive clustering; clusterupdate 	Update previous clustering with new sequences; taxonomy 	Taxonomic classification. Input database creation; databases 	List and download databases; createdb 	Convert FASTA/Q file(s) to a sequence DB; createindex 	Store precomputed index on disk to reduce search overhead; convertmsa 	Convert Stockholm/PFAM MSA file to a MSA DB; msa2profile 	Convert a MSA DB to a profile DB. Format conversion for downstream processing; convertalis 	Convert alignment DB to BLAST-tab, SAM or custom format; createtsv 	Convert result DB to tab-separated flat file; convert2fasta 	Convert sequence DB to FASTA format; taxonomyreport 	Create a taxonomy report in Kraken or Krona format. An extended list of all modules can be obtained by calling 'mmseqs -h'. Bash completion for modules and parameters can be installed by adding ""source MMSEQS_HOME/util/bash-completion.sh"" to your ""$HOME/.bash_profile"".; Include the location of the MMseqs2 binary in your ""$PATH"" environment variable.; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; $ which mmseqs; ~/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build/bin/mmseqs; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:5474,reduce,reduce,5474,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['reduce'],['reduce']
Energy Efficiency," environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; MMseq version: 13.45111; CPU: 2x AMD 7543 (64 cores total); RAM: 512 GB; Local Disk: 7 TB SSD; Network: 100 GBit Infiniband; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Thread(s) per core: 1; Core(s) per socket: 32; Socket(s): 1; NUMA node(s): 1; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7502P 32-Core Processor; Stepping: 0; CPU MHz: 2500.000; CPU max MHz: 2500.0000; CPU min MHz: 1500.0000; BogoMIPS: 5000.22; Virtualization: AMD-V; L1d cache: 32K; L1i cache: 32K; L2 cache: 512K; L3 cache: 16384K; NUMA node0 CPU(s): 0-31; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr wbnoinvd arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip rdpid overflow_recov succor smca sme sev sev_es",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:9571,monitor,monitor,9571,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['monitor'],['monitor']
Energy Efficiency," merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 29s 367ms; prefilter tmp//16518381706844811497/input_step_redundancy tmp//16518381706844811497/input_step_redundancy tmp//16518381706844811497/pref_step0 --sub-mat ; 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2; 147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 2 --comp-bias-corr; 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches; 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Query database size: 74390789 type: Aminoacid; Estimated memory consumption: 400G; Target database size: 74390789 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 74.39M 1m 27s 612ms; Index table: Masked residues: 17937595794; Index table: fill; [=================================================================] 74.39M 13s 623ms; Index statistics; Entries: 495972652; DB size: 12603 MB; Avg k-mer size: 0.387479; Top 10 k-mers; CSSCCCS 40539; CSSCSCS 36980; CSCSSCS 36180; CSCSCSS 35290; CSSCDSS 34425; CSCCSSS 33905; CSSCSSS 32740; CSCDSSS 31596; SCSCDSS 30280; CSCSDSS 29715; Time for index table init: 0h 2m 0s 290ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 74390789; Target db start 1 to 74390789; [==. ## Context; I have translated all the sequences in Uniref90 based on a reduced amino acid alphabet that has only 5 letters (C, A, D, G, S). I have tried clustering it again using `linclust` to 90% identity and 80",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:12729,consumption,consumption,12729,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['consumption'],['consumption']
Energy Efficiency," profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/q_orfs_aa /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db.idx /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 5 --compressed 0 -v 3 -s 7.5 . Index version: 16; Generated by: 8c79865b60025674b9c825fd7238bd0b95503bc7; ScoreMatrix: VTML80.out; Query database size: 5539077 type: Aminoacid; Estimated memory consumption: 3G; Target database size: 849970 type: Aminoacid; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. Have you any idea what is going on?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/234:7024,consumption,consumption,7024,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234,1,['consumption'],['consumption']
Energy Efficiency," to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 13ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 20942 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 20942 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 20.94K 0s 601ms; Index table: Masked residues: 6638; Index table: fill; [=================================================================] 20.94K 0s 645ms; Index statistics; Entries: 1435009; DB size: 496 MB; Avg k-mer size: 0.022422; Top 10 k-mers; GPGGTL 342; LDMPDG 185; LGDYKP 145; DVLDMP 119; PFLEAR 69; PFPEAR 65; FDDTDS 59; ADYTFS 55; LITRGY 55; GPGGTT 44; Time for index table init: 0h 0m 2s 668ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 20942; Target db start 1 to 20942; [=================================================================] 20.94K 0s 928ms. 1.256278 k-mers per position; 118 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 8 sequences passed prefiltering per query sequence; 3 median result li",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:19836,consumption,consumption,19836,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['consumption'],['consumption']
Energy Efficiency," type: Nucleotide; Time for processing: 0h 0m 8s 216ms; Create directory tmp/18031188072042168038/taxonomy_tmp; taxonomy tmp/18031188072042168038/query refDB/NR tmp/18031188072042168038/result tmp/18031188072042168038/taxonomy_tmp --tax-output-mode 2 --threads 16 --split-memory-limit 100G --remove-tmp-files 1 . extractorfs tmp/18031188072042168038/query tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 . [=================================================================] 810.40K 31s 522ms; Time for merging to orfs_aa_h: 0h 0m 16s 759ms; Time for merging to orfs_aa: 0h 0m 22s 22ms; Time for processing: 0h 1m 23s 421ms; prefilter tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa refDB/NR.idx tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 100G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 . Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 47918555 type: Aminoacid; Target split mode. Searching through 41 splits; Estimated memory consumption: 64G; Target database size: 444603205 type: Aminoacid; Process prefiltering step 1 of 41. k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 41); Query db start 1 to 47918555; Target db start 1 to 10838348; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:96629,consumption,consumption,96629,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['consumption'],['consumption']
Energy Efficiency,"## Current Behavior; Trying to run search on a DB using Uniref100 as target.; Prefiltering seems to work fine, but software crashes while aligning, returning:; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Steps to Reproduce (for bugs); Command; $ mmseqs search ../hmmsearchDB ~/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --min-length 35. ## MMseqs Output (for bugs); MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 64; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:180,allocate,allocate,180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,2,['allocate'],['allocate']
Energy Efficiency,"## Expected Behavior--. I am clustering NGS sequences with linclust (using the createdb database) from protein fasta files incorporating multiple named barcodes present in the fasta IDs. Each ID consists of a number to which the barcode name is appended (e.g. 689_dog). The expected output of createtsv is two columns, the first consisting of the IDs of the representative cluster member (689_dog), and the second consisting of IDs of the cluster members, including the barcode name (689_dog, 435_owl, 691_rat, etc.). . ## Current Behavior--; ; The first column is OK. The second column TSV output consists only of the numbers (689, 435, 691, etc.). It is essential that I have the barcode name for further processing of tabular formatted cluster information. Your documentation states that unkown ID formats are parsed to include everything before the first white space. This is not the case here. I have tried other delimiters (e.g. :, -) or no delimiters, and in each case the second column lists only the numbers. BTW, the clustering works very well, as assessed by inspection of output fasta or MSA files. ## Your Environment--. MMseqs2 Version: 11.e1a1c. installed from Bioconda. Run on Ubuntu 18.04 under Windows10 WSL1 on a 12-thread processor with 48GB RAM. mmseqs createdb csgtag10.fa csgtagDB; mmseqs linclust csgtagDB csgtagDB_CL DB_clu.tmp --add-self-matches -a 1 --min-seq-id 0.96; mmseqs createtsv csgtagDB csgtagDB_CL csgtagDB_CL_TSV (faulty output). mmseqs createseqfiledb csgtagDB csgtagDB_CL csgtagDB_CL_SEQ; mmseqs result2flat csgtagDB csgtagDB csgtagDB_CL_SEQ csgtagDB_CL_SEQ.fasta (OK output); mmseqs result2msa csgtagDB csgtagDB csgtagDB_CL csgtagDB_CL_MSA (OK output). I hope that this is an easy code fix. mmseqs is great open-source clustering software that can be run efficiently on my desktop. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/319:1795,efficient,efficiently,1795,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/319,1,['efficient'],['efficiently']
Energy Efficiency,"## Expected Behavior. Cluster nucleotide genome sequences (e.g., wgs records, contigs, scaffolds, complete genomes) in a few hours using `easy-linclust`. ## Current Behavior. Running `easy-linclust` using the following command ran for more than 24 hours and was at the `rescorediagonal` step for +20 hours:; ```; mmseqs easy-linclust input.fna cluster tmp --min-seq-id 0.9 -c 0.9 --alignment-mode 3 --db-load-mode 2 --split-memory-limit 2000G; ```. input.fna is 642 GB with approximately 2.5 MM sequences. ## Context. I want to cluster nucleotide genome sequences from NCBI to reduce the burden on similarity search for highly similar / redundant sequences. ## Your Environment; * MMseqs Version: Commit f5f780acd64482cd59b46eae0a107f763cd17b4d (statically-compiled AVX2); * Machine: 128 CPUs, 4 TB RAM, 2 x 1.9 TB NVMe SSD; * Operating system and version: Amazon Linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/726:577,reduce,reduce,577,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/726,1,['reduce'],['reduce']
Energy Efficiency,"## Expected Behavior. mmseqs easy-cluster should finish without errors. ## Current Behavior. ```; Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 972066 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1) Download the FASTA at this link https://drive.google.com/file/d/1YPNMj2gL8zNUv9aiRo7dLJawanDWCIb3/view?usp=drive_link; 2) Install mmseqs2 v15.6f452; 3) Run:; ```; mmseqs easy-cluster all_sequences.fasta mmseqs_output tmp --cluster-mode 1 --cluster-reassign 1 --threads 24 -c 0.0 --cov-mode 5 --min-seq-id 0.8; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Create directory tmp; easy-cluster /hps/nobackup/iqbal/dander/amira_panRG_pipeline/Escherichia_coli_panRG_c_0.8_l_0_train_AMR_alleles_removed_mmseqs2/all_sequences.fasta mmseqs_output/mmseqs_output tmp --cluster-mode 1 --cluster-reassign 1 --threads 24 -c 0.0 --cov-mode 5 --min-seq-id 0.8 . MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0; Coverage mode 5; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:160,consumption,consumption,160,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['consumption'],['consumption']
Energy Efficiency,"## Expected Behavior; I'm giving to MMSeqs2 360G of memory with 36 threads. I was expecting that it will use all this memory to increase the prefiltering speed. . ## Current Behavior; During the prefiltering step, MMSeqs2 used only 10% of the memory. I think he is using 80% of the estimated memory consumption, because it compute 48G for the `Estimated memory consumption`, but I'm not sure. ## Context; I'm currently trying to create protein families with a large database. I have 50 million proteins to cluster. I write a workflow based on uniclust. I would to increase the speed of the workflow, particularly on prefilter step, without loose the sensibility. I tried to use --split-memory-limit to increase the memory but it's not working. There is another solution ?. Here it's the command line that I would to increase speed : ; `mmseqs search $INPUT $INPUT ""$ALIGN_DIR/align"" $TMP_DIR --max-seqs 1000 -c 0.8 --comp-bias-corr 1 -s 7 --alignment-mode 3 --min-seq-id 0.3 --threads 36`. ## Your Environment; ```; Architecture : x86_64; Processeur(s) : 36; Thread(s) par cœur : 1; Cœur(s) par socket : 18; Socket(s) : 2; Nœud(s) NUMA : 2; Identifiant constructeur : GenuineIntel; Famille de processeur : 6; Modèle : 85; Nom de modèle : Intel(R) Xeon(R) Gold 6150 CPU @ 2.70GHz; Révision : 4; ```. Thanks for your work",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397:299,consumption,consumption,299,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397,2,['consumption'],['consumption']
Energy Efficiency,"## Expected Behavior; I'm trying to cluster my large protein sequence file (1400412352 entries, wc -l all.mmseqDB.index) with:. ## Current Behavior; `mmseqs cluster all.mmseqDB all.95.clu tmp -s 7.5 --cov-mode 0 -c 0.95 --cluster-mode 0 --min-seq-id 0.95 --remove-tmp-files --split-memory-limit 100G`. ## Steps to Reproduce (for bugs); I also tried the linclust function and other split-memory-limit (70G, 40G), but got the same error. ## MMseqs Output (for bugs); Find missing connections; Can not allocate memory in findMissingLinks; Error: Pre-clustering step died; Error: linclust died. ## Context; MMseqs Version: 13.45111. ## Your Environment; the log file; [log.txt](https://github.com/soedinglab/MMseqs2/files/9658017/log.txt). * Operating system and version: Linux 64 with Xeon(R) Gold 6238CPU, ; ![image](https://user-images.githubusercontent.com/35453307/192583090-8ade5a75-5d70-4457-9b7b-f557f2c526b3.png)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/613:499,allocate,allocate,499,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/613,1,['allocate'],['allocate']
Energy Efficiency,"## Expected Behavior; Not sure. ## Current Behavior; After running; `mmseqs easy-search --search-type 3 --num-iterations 2 --threads 1 sequences/5LJ5_5.fasta databases/MSA_debug.fasta results/result tmp`. the program crashes with; `Can not allocate entries memory in IndexTable`. _Update:_; * Appending the query sequence to the database (which should assure at least one match is found) results in a different crash message: `Query sequence 0 has a result with no diagonal information. Please check your database.`; * Also, the log show query database size to be 2 which is weird because there is only one sequence in the file. But I can't find anything wrong with query .fasta file. _Update (2022-09-08)_:; Was trying out to the iterative step manually and ended up with the following error when trying to compute the profile:; ```; Invalid input database and --search-type combination; queryDbType: Profile; targetDbType: Nucleotide; targetSrcDbType: Unknown; searchMode: 3; ```; I suppose that mean profile search against a nucleotide database is not possible? I've also realized that there are many iterative profile search tools for proteins (psi-blast, jackhmmer) but I don't know a single one for nucleotide sequences. Is there some reason while searching with profiles is not possible in case of nucleotide sequences?. ## Context; Hi, I would like to compute MSA alignments from blast nt database (https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/) for multiple RNA sequences. Ideally, the procedure should be similar to Colabfold's MSA computation and there should be more than one search iteration for each sequence.; Note that I am limited to ~1TB RAM and the nt database index (created by createindex) does not fit into memory.; What would be the best way to go about it? . ## Steps to Reproduce (for bugs); ### 5LJ5_5.fasta:; >5LJ5_5; GUUCGCGAAGUAACCCUUCGUGGACAUUUGGUCAAUUUGAAACAAUACAGAGAUGAUCAGCAGUUCCCCUGCAUAAGGAU; GAACCGUUUUACAAAGAGAUUUAUUUCGUUUU. ### msa_debug; >URS0000000021 rRNA from 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:240,allocate,allocate,240,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['allocate'],['allocate']
Energy Efficiency,"## Expected Behavior; Nt database indexed; ## Current Behavior; Nt database index never-ending; ## Steps to Reproduce (for bugs); ```; mmseqs createdb nt.fa nt -v 3 ; mmseqs createtaxdb nt tmp --threads 8 --tax-mapping-file ${uncompress_dir}/taxidmapping --ncbi-tax-dump ${ncbi-tax-dump} -v 3; mmseqs createindex nt tmp --threads 8 --split-memory-limit 200G --search-type 2 -v 3; ```. ## MMseqs Output (for bugs); In the link, there is the output of mmseq and the strace output when the software never end( mmseqs indexdb command).; https://gist.github.com/braffes/022572a4d9506f8910b281864a459ede. ## Context. The first and the second step work as expected, but the last step seems to never end. It is blocked on this command:; ```; mmseqs indexdb tmp/16033012438524647487/orfs_aa nt --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 2 --split 0 --split-memory-limit 200G -v 3 --threads 8; ```; One core is always on 100% CPU but not nothing happens. . I try to do this step with the scheduler(slurm) and localy, but that's the same result. After few try, I try to decrease the size of the fasta file(385Go to 172Go), and it worked.; It could be a problem of scaling? If yes, can it be related to the type in DBReader being unsigned int in indexdb.cpp?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; The problem is encountered for the two following versions MMseqs2/12-113e3 and MMseqs2/13-45111; 96 cores; 2To RAM; CentOS Linux release 8.3.2011",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/426:1172,schedul,scheduler,1172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426,1,['schedul'],['scheduler']
Energy Efficiency,"## Expected Behavior; Run mmseqs databases to create a taxonomic database that uses recent data from uniref, e.g uniref100 . ## Current Behavior; A recent downloaded uniref100 fasta file has 342650444 however using the mmseqs databases creates a taxonomic database that has only 1462990. I didn't get any error about something failing and couldn't find any information about reduced database. . ## Steps to Reproduce (for bugs); mmseqs databases UniRef100 databases_mmseqs/uniref100 tmp2. ## Context; I am trying to run easy-taxonomy on a fasta file using uniref100. I got a result using the mmseqs database generated taxdb but it was making really bad taxonomic assignments that got me wondering. Eventually I realized that it wasn't containing many of my expected uniref entries and that it is actually significantly smaller than a recent uniref100 fasta download.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/684:375,reduce,reduced,375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/684,1,['reduce'],['reduced']
Energy Efficiency,"## Expected Behavior; Running linclust with with --min-seq-id 1.0 -c 1.0 clusters identical sequences. ## Current Behavior; Non-identical sequences are clustered. ## Steps to Reproduce (for bugs); my cmd:; `mmseqs linclust my_mmseqs2.db my_mmseqs2.linclust.clusters tmp --min-seq-id 1.0 -c 1.0 --cov-mode 0 -v 3 -e 0.001`. ## MMseqs Output (for bugs); When I parse the output, I find non-identical sequences clustered together, e.g. these 2, shown here BLASTed:; ```; Query 1 MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQNFTGIRTSLRLS 47; MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQ FTGIRTSLRLS; Sbjct 1 MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQIFTGIRTSLRLS 47; ^ different aa; ```; ## Context; Initially I thought this is just due to the reduced protein alphabet, but in this example (and others) the different residues are `I` and `N`, which doesn't appear to follow the reduced alphabet i found in the paper `(L, M), (I, V), (K, R), (E, Q), (A, S, T), (N, D), and (F, Y)`. You might say that clustering identical sequences is pointless, since it's a simple string/pattern matching exercise, but since I was trying a few different thresholds, I wanted to implement it through a consistent mmseqs2 workflow. Either way, it would be nice to understand the behaviour. ## Your Environment; Running arch-linux with MMseqs2/7-4e23d. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/200:714,reduce,reduced,714,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/200,2,['reduce'],['reduced']
Energy Efficiency,"## Expected Behavior; Taxonomy assignment of viral OTU sequences (nucleotide) using the 2bLCA method against a custom formatted amino acid database from IMG/VR. ## Current Behavior; The LCA step dies due to a segmentation fault when using a small test dataset that I have previously had success with when using Antônio Camargo's ICTV MMseqs2 protein database (https://github.com/apcamargo/ictv-mmseqs2-protein-database). For reference, I have also allocated 40 cores and 700gb RAM to this job, which fails after consuming only 178gb of mem.; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. I have formatted the IMG/VR v4 7.1 AA database as recommended (https://github.com/soedinglab/MMseqs2/wiki#create-a-seqtaxdb-by-manual-annotation-of-a-sequence-database) and I've created a custom taxdump using taxonkit. The custom taxdb was created without issue:. ```; mmseqs createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loadin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:448,allocate,allocated,448,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['allocate'],['allocated']
Energy Efficiency,"## Expected Behavior; The example file https://raw.githubusercontent.com/soedinglab/mmseqs2/master/examples/DB.fasta should be clustered; ## Current Behavior; After the installation of MMseqs Version: 1c45613a4166130d040b52241dc66f7d687f4e54 it fails when prefiltering with:. **Error: Could not allocate memory by memalign. Please report this bug to developers** . ## Steps to Reproduce (for bugs). mmseqs createdb DB.fasta DB; mkdir tmp; mmseqs cluster DB cluDB tmp. ## MMseqs Output (for bugs); Line [391](https://gist.github.com/genomewalker/dc566892b5300bc62e166dac844a9b65#file-mmseqs_v1c45613a4166130d040b52241dc66f7d687f4e54-L391). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Homebrew . * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.8.1 and g++ (Homebrew GCC 7.1.0 --without-multilib) 7.1.0. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): MacBook Pro (Retina, 13-inch, Late 2013) with 2.6 GHz Intel Core i5 and 16 GB 1600 MHz DDR3; * Operating system and version: Mac OS X 10.12.4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/29:295,allocate,allocate,295,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/29,1,['allocate'],['allocate']
Energy Efficiency,"## Expected Behavior; When query has 10,000 sequences; Query database size: 10,000 type: Aminoacid; ## Current Behavior; Query database size: 3125 type: Aminoacid. ## Steps to Reproduce (for bugs); Running search or prefilter. ## MMseqs Output (for bugs); MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0; Coverage mode 	0; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id.	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	64; Compressed 	0; Verbosity 	3. Query database size: 3125 type: Aminoacid; Estimated memory consumption: 193G; Target database size: 37233987 type: Aminoacid; Index table k-mer threshold: 141 at k-mer size 7 ; Index table: counting k-mers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/283:1077,consumption,consumption,1077,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283,1,['consumption'],['consumption']
Energy Efficiency,"## Expected Behavior; When running with highly reduced databases with the size of lower than 1MB, it works just fine. ; Both the complete call for the search workflow ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; as well as the explicit call for the prefilter module only ./mmseqs prefilter ""query"" ""target"" ""result"" are running as expected. ## Current Behavior; Using bigger files for query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:47,reduce,reduced,47,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['reduce'],['reduced']
Energy Efficiency,"## Expected Behavior; mmseqs2 successfully linclust a 49 sequence protein fasta. ## Current Behavior; mmseqs2 complain Kmer array overflow. ## Steps to Reproduce (for bugs); ```bash; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs createdb DB.fasta DB -v 1; mkdir tmp; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs linclust DB DB_clu tmp -c 0.9 --cov-mode 1 --threads 1 -v 1; ```. ## MMseqs Output (for bugs); ```; Kmer array overflow. currKmerArrayOffset=0, kmerBufferPos=1024, kmerArraySize=1024.; Error: kmermatcher died; ```. ## Context; The input file DB.fasta and all intermediate files are attached.; [linclust_3300021621.zip](https://github.com/soedinglab/MMseqs2/files/4199615/linclust_3300021621.zip). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; ``MMseqs2 Version: 481696b5f426f991211894d8a855bf9d60065c8f``; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; https://mmseqs.com/latest/mmseqs-linux-sse41.tar.gz; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt; * Operating system and version:; ```; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/274:1459,monitor,monitor,1459,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/274,1,['monitor'],['monitor']
Energy Efficiency,"## Expected Behaviour. Unknown. ## Current Behaviour. I am trying to re-create the clustered nr database currently featured on the BLAST site. The cluster step appears to stall after merging the split files and I get the message ""Cannot touch 215222407074 into main memory"". I have 188G of RAM and 63 cores available. I have tried to reduce the amount of memory using the --split-memory-limit 70G, --split-mode 2, --split 2, and --compressed 1 options but it does not appear to have helped. This is my first time using MMseqs so any help would be much appreciated. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Create directory tmp; cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:334,reduce,reduce,334,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['reduce'],['reduce']
Energy Efficiency,"## Issue. Hello, I want to use easy-taxonomy on homology hits I got from mmseqs search between insect genomes and viruses (Refseq viruses). I want to run taxonomic assignment on the hits to determine which are really viral sequences and which are eukaryotic sequences that hit on viruses in the homology search step. For taxonomic assignment, I use a taxonomic generalist database from which I remove insect sequences. ; I'd like help in choosing the parameters and options useful for maximizing the sensitivity of taxonomic assignment, to make sure that when it's a sequence of viral origin it's detected as such (reduce the unclassified portion). ; I've identified these parameters as potentially interesting, but I don't know which values to choose, and if it's really these parameters that I should use : . --max-seqs INT Maximum results per query sequence allowed to pass the prefilter (affects sensitivity) [0.000]; --min-ungapped-score INT Accept only matches with ungapped alignment score above threshold [15]; -e DOUBLE List matches below this E-value (range 0.0-inf) [1.000E-03]; --min-aln-len INT Minimum alignment length (range 0-INT_MAX) [0]; --e-profile DOUBLE Include sequences matches with < E-value thr. into the profile (>=0.0) [1.000E-03]; --lca-mode INT LCA Mode 1: single search LCA , 2/3: approximate 2bLCA, 4: top hit [3]; --allow-deletion BOOL Allow deletions in a MSA [0]; --max-gaps INT Maximum number of codons with gaps or unknown residues before an open reading frame is rejected [2147483647]. Thank you for your help !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/767:615,reduce,reduce,615,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/767,1,['reduce'],['reduce']
Energy Efficiency,"### Summary. > This pull request introduces an algorithm that reduces the total number of clusters while maintaining linearity. The algorithm captures meaningful information from previously unadopted data in the 'assignGroup' function, allowing for more effective clustering. ### Details. **1 Extended Search Process :**. > For the same k-mer group, the process of combining the representative sequence with each sequence has been extended. The algorithm now calculates sequence dissimilarity using adjacent sequence information. The most dissimilar sequence is selected as the next representative sequence, and this exploration process is repeated. If there are multiple sequences with the same level of dissimilarity, the most recently explored sequence is chosen as the representative sequence. Additionally, the selection of the most dissimilar sequence is limited to sequences that follow the current representative sequence in the search order. **2. Data Structure Challenges**. > The implementation of this method introduced challenges in maintaining the original in-place data structure. To overcome these challenges, a new data structure has been introduced with an additional buffer (slack space) at the end. The new data structure includes a default buffer size of 5%. . **3. Dynamic Memory Allocation**. > If memory becomes insufficient during operation, the structure dynamically resizes by splitting and reallocating memory based on the progress of the previous process. This approach ensures efficient memory usage and prevents potential memory shortages. ### Benchmark Results. > I conducted benchmarking on datasets randomly selected from the UniParc dataset, with sizes of 1.3M, 2.7M, 5.3M, 11M, 21M, 42M, and 85M. The results confirmed that the new algorithm effectively reduces the number of clusters while maintaining linearity, showing no significant time difference compared to the existing Linclust method. Despite these improvements, the algorithm still lags behind the easy-c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873:62,reduce,reduces,62,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873,1,['reduce'],['reduces']
Energy Efficiency,"--sequence-split-mode 1 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 278905 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 88ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 64ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 4s 959ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 278905; Target db start 1 to 69220; [=================================================================] 278.90K 3s 495ms. 0.936570 k-mers per position; 8348 DB matches per sequence; 48 overflows; 0 qu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:3345,consumption,consumption,3345,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['consumption'],['consumption']
Energy Efficiency,"-id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 714.62K 18s 1ms; Time for merging to q_orfs_aa_h: 0h 0m 17s 230ms; Time for merging to q_orfs_aa: 0h 0m 22s 109ms; Time for processing: 0h 1m 20s 933ms; prefilter tmp/3499313520568641582/q_orfs_aa uniref50 tmp/3499313520568641582/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --sp; lit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lo; wer-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed ; 0 -v 3 -s 5.7 . Query database size: 61153309 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 99G; Target database size: 48531432 type: Aminoacid; Process prefiltering step 1 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.26M 1m 44s 733ms; Index table: Masked residues: 187925951; Index table: fill; [=================================================================] 24.26M 3m 17s 822ms; Index statistics; Entries: 6286866786; DB size: 45739 MB; Avg k-mer size: 4.911615; Top 10 k-mers; DFEQLPH	32892; NVPGWSP	32831; FRYAFPS	32736; RYYVLGW	32688; WRLDFLN	31763; TVDGDFS	31579; NKTDFVQ	31135; QDWVQIP	30874; LDGAYVP	30051; ETGRYNV	29832; Time for index table init: 0h 5m 17s 428ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 2); Query db start 1 to 61153309; Target db start 1 to 24258060; [=================================================================] 61.15M 27h 30m 21s 285ms. 2412.140792 k-mers per position; 608927 DB matches per sequence; 175 ov",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/478:3711,consumption,consumption,3711,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478,1,['consumption'],['consumption']
Energy Efficiency,"-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:4785,allocate,allocate,4785,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['allocate'],['allocate']
Energy Efficiency,". Query database size: 74390789 type: Aminoacid; Estimated memory consumption: 400G; Target database size: 74390789 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 74.39M 1m 27s 612ms; Index table: Masked residues: 17937595794; Index table: fill; [=================================================================] 74.39M 13s 623ms; Index statistics; Entries: 495972652; DB size: 12603 MB; Avg k-mer size: 0.387479; Top 10 k-mers; CSSCCCS 40539; CSSCSCS 36980; CSCSSCS 36180; CSCSCSS 35290; CSSCDSS 34425; CSCCSSS 33905; CSSCSSS 32740; CSCDSSS 31596; SCSCDSS 30280; CSCSDSS 29715; Time for index table init: 0h 2m 0s 290ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 74390789; Target db start 1 to 74390789; [==. ## Context; I have translated all the sequences in Uniref90 based on a reduced amino acid alphabet that has only 5 letters (C, A, D, G, S). I have tried clustering it again using `linclust` to 90% identity and 80% overlap, however, the number of clusters is larger than I expected (75M from 76M initial Uniref90 size). I thought that might be due to the reduced sensitivity as a further reduced amino acid alphabet is applied before computing the k-mers. . I've tried to use `mmseq cluster` instead, however, this seems to take a very long time. After 13h the progress bar has only two '=' signs. . I am not sure if I am approaching the right way. Is linclust capable to cluster a protein sequence database that has been translated to a reduced amino acid alphabet or does it interfere with the mmseq alphabet used during k-mer comparison?. I was expecting a much smaller number of clusters as sequences only use 5 letters now so they are more likely to be more similar. . For `mmseq cluster`, what is the expected computation time for 76M sequences? . ## Your Environm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:13665,reduce,reduced,13665,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['reduce'],['reduced']
Energy Efficiency,"./MMseqs2DB/MMseqs2DB --dbtype 0 --compressed 1`; `mmseqs createindex ./MMseqs2DB/MMseqs2DB ./tmp --threads 48 --search-type 3 `; ## MMseqs Output (for bugs); Didn't collect the stdout/errr =\ only have these from the terminal; ```; Time for merging to nucl_split_seq_h: 0h 5m 44s 19ms; Time for merging to nucl_split_seq: 0h 4m 40s 563ms; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; [>                                                                ] 0.00% 1 eta ./tmp/11929725182862116610/createindex.sh: line 56: 16913 Segmentation fault      ""$MMSEQS"" $INDEXER ""$2/nucl_split_seq"" ""$INPUT"" $INDEX_PAR; Error: indexdb died; ```. ## Context; I'll need to reuse this DB several times, objective is to reduce overall runtime. ; Also, I noticed that seven *.idx[0-6] and seven *.idx.index[0-6] are created in the dir ./MMseqs2DB/ , but only the file MMseqs2DB.idx.0 isn't 0 bytes in size / increases (don't know if this is realted, but it reaches almost exactly 150.0GB (size when createindex crashed).; Any help is appreciated, hopefully I didn't miss something obvious :-); ## Your Environment; `MMseqs2 Version: f966bfa62a2b52d4821e908ac9e25808d1be0b81`; Using the avx2 binary, ; CPU: Intel(R) Xeon(R) Pl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280:1001,consumption,consumption,1001,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280,1,['consumption'],['consumption']
Energy Efficiency,"/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins.target_seq mmseqs_target_seq/[bacteria_of_interest]/tmp/15822818178659183495/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 7.0 . Query database size: 38880 type: Profile; Estimated memory consumption: 488M; Target database size: 125 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 125 0s 5ms; Index table: Masked residues: 124; Index table: fill; [=================================================================] 125 0s 6ms; Index statistics; Entries: 25103; DB size: 488 MB; Avg k-mer size: 0.000392; Top 10 k-mers; ALGLAA	2; TTGTAA	2; AAARKA	2; KASRKA	2; TEEALA	2; EDLLRA	2; INGNED	2; ASARED	2; GKHHRD	2; AELKAE	2; Time for index table init: 0h 0m 0s 511ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 38880; Target db start 1 to 125; [=mmseqs_target_seq/[bacteria_of_interest]/tmp/15822818178659183495/blastp.sh: line 99: 1649148 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; createtsv phrogs_mmseqs_db/phrogs_profile_db mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins.target_seq mmseqs_target_seq/[bacteria_of_interest]/[bacter",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:5703,consumption,consumption,5703,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['consumption'],['consumption']
Energy Efficiency,"/clu_redundancy in/DB_in clu/sim2_tmp/12164117771218227067/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 14ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 4ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 118ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 23ms; [==========================================================> ] 89.54% 138 eta 0s; 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:28277,consumption,consumption,28277,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['consumption'],['consumption']
Energy Efficiency,"0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Thank you very much. Best,; Sam",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238:1485,consumption,consumption,1485,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238,2,"['allocate', 'consumption']","['allocate', 'consumption']"
Energy Efficiency,"0ms; Time for merging to orfs_aa_h: 0h 0m 13s 741ms; Time for merging to orfs_aa: 0h 0m 14s 541ms; Time for processing: 0h 1m 14s 69ms; prefilter /tmp/4466913777158595479/orfs_aa uniref_db.idx /tmp/4466913777158595479/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'm working right now:. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; Address sizes: 43 bits physical, 48 bits virtual; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 1; Socket(s): 24; NUMA node(s): 1; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model na",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/669:4437,consumption,consumption,4437,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669,1,['consumption'],['consumption']
Energy Efficiency,"11215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processing: 0h 0m 6s 661ms; prefilter /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa /mnt/lustre/scratch/aauladell/databases/unirefdb/unirefDB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14; 502658769203238512/tmp_hsp1/3393216153911215513/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c; 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 48 --compressed 0 -v 3 -s; 5.7. Using 48 threads.; Query database size: 3215536 type: Aminoacid; Estimated memory consumption: 437G; Target database size: 99657864 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 99.66M 6m 33s 605ms; Index table: Masked residues: 620383436; Index table: fill; [==; ```. ## Context; From a selection of 300.000 small sequences, I intended to perform the taxonomy using UNIREF90. But it crashes each time even though the database should be able to be used for this kind of analysis. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 15c7762; * Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 750 Gb, 48 processors.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/232:2826,consumption,consumption,2826,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232,1,['consumption'],['consumption']
Energy Efficiency,"13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; T",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:4807,Reduce,Reduced,4807,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['Reduce'],['Reduced']
Energy Efficiency,"1463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **12.113e3**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda** ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor ,Mem: 1031918, Swap: 102399; * Operating system and version: Linux 4.19.140 #19 SMP Thu Aug 20 11:52:19 MEST 2020 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:14527,allocate,allocate,14527,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['allocate'],['allocate']
Energy Efficiency,"16617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 38ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms ] 25.77% 43 eta 0s; Time for processing: 0h 0m 0s 102",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:20461,Reduce,Reduced,20461,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['Reduce'],['Reduced']
Energy Efficiency,"1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --k-score 2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 5.7. Query database size: 25293 type: Aminoacid; Estimated memory consumption: 18G; Target database size: 3570076 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 3.57M 8s 444ms; Index table: Masked residues: 11969832; Index table: fill; [=================================================================] 100.00% 3.57M 8s 228ms; Index statistics; Entries: 1027253274; DB size: 6366 MB; Avg k-mer size: 16.050832; Top 10 k-mers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:3551,consumption,consumption,3551,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['consumption'],['consumption']
Energy Efficiency,"2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **12.113e3**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda** ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of sys",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:14206,consumption,consumption,14206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['consumption'],['consumption']
Energy Efficiency,"2265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 3s 166ms; rescorediagonal ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 100.00K 0s 206ms; Time for merging to pref_rescore1: 0h 0m 0s 757ms; Time for processing: 0h 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:11540,Reduce,Reduced,11540,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['Reduce'],['Reduced']
Energy Efficiency,"30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 2.0. Query database size: 55235334 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 8s 472ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 5s 3ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 18338; Time for index table init: 0h 2m 26s 298ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 8); Query db start 1 to 55235334; Target db start 1 to 16332640; [=================================================================] 100.00% 55.24M 40m 8s 213ms. 33.753670 k-mers per position; 12988 DB matches per sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:21923,consumption,consumption,21923,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['consumption'],['consumption']
Energy Efficiency,"40758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 84ms; clust in/DB_in c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:4858,Reduce,Reduced,4858,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['Reduce'],['Reduced']
Energy Efficiency,"410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:2363,Reduce,Reduced,2363,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['Reduce'],['Reduced']
Energy Efficiency,"41378/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 1; mmseqs-web-worker_1 | Target db start 1 to 10754; mmseqs-web-worker_1 | [=================================================================] 1 0s 4ms; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | 0.120000 k-mers per position; mmseqs-web-worker_1 | 0 DB matches per sequence; mmseqs-web-worker_1 | 0 overflows; mmseqs-web-worker_1 | 0 queries produce too much hits (truncated result); mmseqs-web-worker_1 | 0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 1 sequences with 0 size result lists; mmseqs-web-worker_1 | Time for merging to pref_0: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 5ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:23401,consumption,consumption,23401,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['consumption'],['consumption']
Energy Efficiency,"48632313875676683/search_tmp/10253871789027801475/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 107ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15106287 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 73ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 66ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5s 2ms; Hard disk might not have enough free space (1T left).The prefilter result might need up to 39T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15106287; Target db start 1 to 69220; [=================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:8849,consumption,consumption,8849,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['consumption'],['consumption']
Energy Efficiency,5175173681302479/search_tmp/2764711141857836142/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Using 24 threads.; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Estimated memory consumption 12072 MB; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 2; mmseqs-web-worker_1 | Target db start 1 to 117752; [=================================================================] 100.00% 0.02 0s 0ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | 0.450000 k-mers per position; mmseqs-web-worker_1 | 0 DB matches per sequence; mmseqs-web-worker_1 | 0 overflows; mmseqs-web-worker_1 | 0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 2 sequences with 0 size result lists; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Time for prefiltering scores calculation: 0h 0m 0s 1ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 2ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/s,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:7674,consumption,consumption,7674,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['consumption'],['consumption']
Energy Efficiency,"560953143015620527/result /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. MMseqs2 Version: 14.7e284; Statically-compiled. Use a compute node using the following SLURM reservation: ""srun -p fast --exclusive --pty bash"". Compute node has 54 cores and 256 Go RAM; Operating System: CentOS Linux 7 (Core); CPE OS Name: cpe:/o:centos:centos:7; Kernel: Linux 3.10.0-1160.6.1.el7.x86_64; Architecture: x86-64; AV",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/728:5170,consumption,consumption,5170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728,1,['consumption'],['consumption']
Energy Efficiency,"62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m 9s 647ms; Generate k-mers list for 4 split; [=================================================================] 100.00% 541.12M 11m 6s 122ms ; Sort kmer 0h 0m 14s 8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:5422,Reduce,Reduced,5422,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['Reduce'],['Reduced']
Energy Efficiency,"7198/clu_redundancy in/DB_in clu/sim1_tmp/7842071913732967198/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 6ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 2ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 117ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 46ms. 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:12652,consumption,consumption,12652,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['consumption'],['consumption']
Energy Efficiency,"73724212/q_orfs_aa_h by mergeResults: 0h 0m 0s 174ms; Time for merging into tmp/2730103712073724212/q_orfs_aa by mergeResults: 0h 0m 0s 182ms; Time for processing: 0h 0m 0s 869ms; kmersearch tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/search/pref --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --kmer-per-seq 21 --mask 0 --ma; sk-lower-case 0 --cov-mode 0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . kmersearch tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/search/pref --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --kmer-per-seq 21 --mask 0 --ma; sk-lower-case 0 --cov-mode 0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . Estimated memory consumption 4 MB; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Process file into 1 parts; Generate k-mers list 0; [=================================================================] 14.93K 0s 32ms. Time for fill: 0h 0m 0s 35ms; Sort kmer ... Time for sort: 0h 0m 0s 39ms; Time to find k-mers: 0h 0m 0s 608ms; Time to sort: 0h 0m 0s 0ms; Time for merging into tmp/2730103712073724212/search/pref by mergeResults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 729ms; rescorediagonal /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/reverse_ungapaln --sub-mat nucl:nucleotide.out; ,aa:blosum62.out --rescore-mode 2 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed; 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; [=================================================================] 323 0s 253ms; Time for mergin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:2777,consumption,consumption,2777,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,2,"['Reduce', 'consumption']","['Reduced', 'consumption']"
Energy Efficiency,"74044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref /export/scratch/SRC-50/8871099322",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:4241,Reduce,Reduced,4241,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['Reduce'],['Reduced']
Energy Efficiency,"744502873/result tmp/18110643841744502873/search_tmp --alignment-mode 3 -s 5.7 --remove-tmp-files 1. prefilter tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.o ut,nucl:nucleotide.out' -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov -mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load -mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 5.7. Query database size: 500 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 20000 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 20.00K 2s 504ms; Index table: Masked residues: 210586; Index table: fill; [=================================================================] 100.00% 20.00K 1s 855ms; Index statistics; Entries: 8552346; DB size: 537 MB; Avg k-mer size: 0.133630; Top 10 k-mers; GQQVAR 190; QLGQRV 110; IHDKNI 105; ALGSGK 105; LLPGKT 102; SGGTLR 84; SGLGRV 75; VGSSST 61; VMHAGS 59; ATADTT 59; Time for index table init: 0h 0m 5s 872ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 500; Target db start 1 to 20000; [=================================================================] 100.00% 500 2s 36ms. 296.967038 k-mers per position; 19293 DB matches per sequence; 0 overflows; 137 sequences passed prefiltering per query sequence; 113 median result list length; 1 sequences wi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:5008,consumption,consumption,5008,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['consumption'],['consumption']
Energy Efficiency,77M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [===============,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29961,consumption,consumption,29961,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,77M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Ma,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:30038,consumption,consumption,30038,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,"7fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 24f6b52a38cd8cf66d10ce00bf37dc815fef986e; Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; Server specifications (especially CP",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473:2151,consumption,consumption,2151,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473,1,['consumption'],['consumption']
Energy Efficiency,": 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:4209,Reduce,Reduced,4209,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['Reduce'],['Reduced']
Energy Efficiency,":880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:10378,allocate,allocate,10378,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['allocate'],['allocate']
Energy Efficiency,"; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:2488,allocate,allocate,2488,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['allocate'],['allocate']
Energy Efficiency,"; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment database: 45461840; Number of clusters: 44582196; Writing results 0h 0m 16s 390ms; ```. ## Your Environment. Version with error: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Version without error: 14014cd0ec50049f796f153ea8a72164ff4b8b45. Both are self compiled on the s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:3338,allocate,allocate,3338,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['allocate'],['allocate']
Energy Efficiency,"=] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem like a memory problem. I tried with the easy-clust workflow and the cluster module, both of which fail at the same point.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 11.e1a1c; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): conda latest version.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; Intel(R) Xeon(R) Platinum 8124M CPU @ 3.00GHz (x36); Memory : 72 GB; * Operating system and version:; Amazon linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:4893,consumption,consumption,4893,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['consumption'],['consumption']
Energy Efficiency,According to NCBI they clustered NR at 90% id and 90% cov. I was wondering what would be the correct cluster mode & cover mode to reproduce the clustering?. >Reduced redundancy. Faster searches. More diverse proteins and organisms in your BLAST results. Check out our new ClusteredNR database – derived from the default BLAST protein nr database by clustering sequences at 90% identity / 90% length ([details below](https://ncbiinsights.ncbi.nlm.nih.gov/2022/05/02/clusterednr_1/#more-about-clusters)). Get quicker results and access to information about the distribution of your hits across a wider range of organisms and evolutionary distances.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/651:158,Reduce,Reduced,158,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/651,1,['Reduce'],['Reduced']
Energy Efficiency,"As the data that can be processed with mmseqs is generally quite large. The tsv output is usually very large. I wonder if it would be difficult to create hdf files or other more efficient file formats e.g. parquet to store the data. . Concretely, I'm thinking about the output of linclust. But there it would only make sense if the cluster id would be a categorical or so. What do you think?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/524:178,efficient,efficient,178,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/524,1,['efficient'],['efficient']
Energy Efficiency,"Based on the graph below, which I pulled from the MMSeqs2 [paper supplement](https://www.biorxiv.org/content/biorxiv/suppl/2017/06/07/079681.DC5/079681-1.pdf), I was expecting my query to take less than an hour (even with higher sensitivity). However, it seems to be taking much, much longer. Additionally, it seems to be hanging on the stage after `Index table: fill` is printed, after printing a good portion of the progress bar. . ![image](https://github.com/soedinglab/MMseqs2/assets/49450966/7ed7b5b0-8236-477c-93f1-904cb461d691). My query database is only 14 sequences in size (which I realize is much smaller than the MMSeqs2 program is intended to work with). The target database, which is the result of splitting all of GTDB into sub-datasets, is about 6 million sequences (6,263,739 to be exact). This is the command I executed. . `mmseqs easy-search -s 7 query.fasta targetDB_split result.m8`. Here is some information about my computing environment. I should also note that I am submitting the job using ``slurm``, and allocated 50 GB of memory (which is less than the 23 GB predicted by the program). . ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Thread(s) per core: 1; Core(s) per socket: 16; ```; It is possible that this is just a slurm issue, or something else going on which is not related to MMSeqs -- I just wanted to double-check that there is nothing glaringly wrong with this workflow. Also, thank you so much for how quickly you respond to issue requests! I really appreciate it.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805:1031,allocate,allocated,1031,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805,1,['allocate'],['allocated']
Energy Efficiency,"CA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 75233 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 . Query database size: 75233 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 75233 type: Aminoacid; Index table k-mer threshold: 91 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 75.23K 0s 271ms ; Index table: Masked residues: 52417; Index table: fill; [=================================================================] 100.00% 75.23K 0s 415ms ; Index statistics; Entries: 23045881; DB size: 620 MB; Avg k-mer size: 0.360092; Top 10 k-mers; GGNQHH	4218; NTSHHH	3502; NYHFDY	2183; LEVYHY	2100; VTDHHH	1805; TPMRHS	1770; GWNHFP	1732; LIWRGT	1732; GLYIHL	1684; WAHVSS	1682; Time for index table init: 0h 0m 1s 16ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 75233; Target db start 1 to 75233; [=================================================================] 100.00% 75.23K 8m 43s 269ms . 3286.821735 k-mers per position; 713534 DB matches per sequence; 1 overflows; 26270 sequences passed prefiltering per query sequence; 26950 median r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:4002,consumption,consumption,4002,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['consumption'],['consumption']
Energy Efficiency,Can not allocate memory in findMissingLinks,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/613:8,allocate,allocate,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/613,1,['allocate'],['allocate']
Energy Efficiency,Compute multihit combined pval more efficiently,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/135:36,efficient,efficiently,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/135,1,['efficient'],['efficiently']
Energy Efficiency,Could not allocate entries memory in IndexTable::initMemory,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/49:10,allocate,allocate,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/49,1,['allocate'],['allocate']
Energy Efficiency,"Dear MMseqs2 developers,; Thank you for making this excellent tool available. I'm using MMseq2s on an HPC cluster using the Slurm scheduler, and I'm trying to determine the best way to utilize as many cores per node as possible; ## Expected Behavior; MMSeqs2 launches 1 MPI task per node, and uses OpenMP to spawn as many threads as there are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:130,schedul,scheduler,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['schedul'],['scheduler']
Energy Efficiency,"Dear colleagues,. I'm Paul DE BOISSIER, PhD student at the IBDM, in Marseille, France.; I'm developing a pipeline in which the first step is an orthologous search. For that, I already implemented a RBH search and an access to OrthoDB.; My problem is that OrthoDB is not quite complete and the RBH took a lot of time to run.; I discussed with my supervisor, Bianca Habermann, and we think that using MMseqs2 can help us a lot to reduce our running time. So, I have deeply read the documentation but maybe I missed something. My pipeline is running with refseq as the main database, especially for the RBH, with all the files in .pal, .pos,...; My problem is that I want to use my already existing blast database with MMseqs2 but I don't find any options to create the MMseqs2 database from such database.; Obviously, I read about the function ""databases"" which downloads the database, and I can use NR or UniProtKB but I don't want to redownload a whole database as I have not a lot of space in our servers, especially as we share it among the team. Do you know how I can manage it please ?. Best. DE BOISSIER Paul; PhD Student - Computational Biology Group; IBDM – Institut de Biologie du Développement de Marseille; paul.de-boissier@univ-amu.fr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/395:428,reduce,reduce,428,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/395,1,['reduce'],['reduce']
Energy Efficiency,"Dear mmseqs2 developvers,. I have a list of thousands of subject - query fasta pairs, and I would like to run mmseqs to align each of these pairs in a way that each sequence is only aligned to its pair. This is how my list looks:. ```; S10CNODE_1.fasta S1CNODE_25.fasta; S10CNODE_2.fasta S2CNODE_8.fasta ; S10CNODE_3.fasta S5CNODE_11.fasta ; S10CNODE_4.fasta S3CNODE_7.fasta; S10CNODE_5.fasta S6CNODE_10.fasta; ```; Is there an efficient way to perform these 1:1 alignments? Could I create a database that contains all sequences and then align a database subentry?. I am trying to avoid aligning all against all.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/813:428,efficient,efficient,428,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/813,1,['efficient'],['efficient']
Energy Efficiency,ERROR: Set 0 has more elements than allocated (1)!,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/28:36,allocate,allocated,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/28,1,['allocate'],['allocated']
Energy Efficiency,Error: Could not allocate memory by memalign.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/29:17,allocate,allocate,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/29,1,['allocate'],['allocate']
Energy Efficiency,"HI, I am getting some memory errors when running the cluster module. The amount of memory I have on my cluster is 100GB and the number of threads is 8. When I run the cluster command as below. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238:375,allocate,allocate,375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238,1,['allocate'],['allocate']
Energy Efficiency,Hello! I used MMseqs2 concatdb to concatenate two reference databases (NR and MMETSP) and everything ran fine with Metaeuk (predictexons and reduceredundancy) but when I try to do unitesetstofasta it says the db_h file is not there. I realise when I did concatdb it did not generate a concatdb_h file or a concatdb_h.dbtype or concatdb_h.index.; I tried just manually concatenating the two _h files (NR_h and MMETSP_h) and that seems to work but it also asks for the .index file and I don't really know what that contains or how to generate it. ; Help please? Thank you!!,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/537:141,reduce,reduceredundancy,141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/537,1,['reduce'],['reduceredundancy']
Energy Efficiency,"Hello!. I have a query and target database set up, but when I try to run `mmseqs search` (specific command was `mmseqs search queryDB targetDB resultDB tmp`), the program dies at the prefilter step. The target database is all of GTDB, and the query database is only a few protein sequences. Here is the output I got. ```; Query database size: 17 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 138G; Target database size: 200439660 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [==============tmp/821198248238681531/blastp.sh: line 135: 102571 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died. ```; I am wondering if this might be a memory issue? Are there any other common causes? Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/799:427,consumption,consumption,427,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/799,1,['consumption'],['consumption']
Energy Efficiency,"Hello, . I've been encountering an issue for creating index of ColabDB. It looks like it is a memory consumption issue. Could you help me with this matter please? ; Thank you in advance for your help. . Sincerely,; Ilyes. ## Expected Behavior; An index file of the colabfold_envdb_202108_db is computed for a fast read-in. ## Current Behavior; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Steps to Reproduce (for bugs); I am using the following commands to build the database as indicated here: https://colabfold.mmseqs.com/; Uniref30 was successful but not ColabDB. . `wget https://raw.githubusercontent.com/sokrypton/ColabFold/main/setup_databases.sh`; `chmod +x setup_databases.sh`; `./setup_databases.sh database/`. ## MMseqs Output (for bugs). + ARIA_NUM_CONN=8; + WORKDIR=database/; + cd database/; ++ pwd; + export PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + STRATEGY=; + hasCommand aria2c; + command -v aria2c; + hasCommand curl; + command -v curl; + STRATEGY=' CURL'; + hasCommand wget; + command -v wget; + STRATEGY=' CURL WGET'; + '[' ' CURL WGET' = '' ']'; + '[' '!' -f COLABDB_READY ']'; + mmseqs createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1; createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Vers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583:101,consumption,consumption,101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583,1,['consumption'],['consumption']
Energy Efficiency,"Hello,. I downloaded and set up the Uniref100 database for the taxonomy pipeline according to the instructions, but when I run the taxonomy command, the output says `Computed index is too large. Avoid using the index`. It also says `split was set to 5 but at least 8 are required. Please run with default paramerters` even though I never adjusted the default. Are these things I should be worried about, and could I be doing something different to make this search more efficient? I know it is a huge database. Full traceback of commands below. Thank you in advance,; -Matt. ## Commands to set up the taxonomy database; ```; mmseqs databases UniRef100 uniref100.mmseqs tmp. mmseqs createtaxdb uniref100.mmseqs tmp --threads 8; createtaxdb uniref100.mmseqs tmp --threads 8. mmseqs createindex uniref100.mmseqs tmp --threads 8; createindex uniref100.mmseqs tmp --threads 8; ```. ## Search commands; ```; mmseqs createdb N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.faa N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db. mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_42; 5.proteins.taxonomy temp --threads 8; ```. ## Full traceback of search command; ```; mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8; Tmp temp folder does not exist or is not a directory.; Create dir temp; taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:470,efficient,efficient,470,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,1,['efficient'],['efficient']
Energy Efficiency,"Hello,. I'm trying to run the search algorithm on a database comprised of over 20k sequences against the uniref100 db. This is the command I'm using and the version, followed by the error after approx. 18 minutes in the run. ##. search ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --split-memory-limit 150G. MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b. mem_align could not allocate memory.; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/3121500954244133633/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; Error: Alignment died. ##. I've tried increasing the memory, thinking this could be the issue, but so far the problem persists. Any help is appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/510:430,allocate,allocate,430,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/510,1,['allocate'],['allocate']
Energy Efficiency,"Hello. I am running MMSEQS through the SLURM job scheduler on our institute cluster. In the mmseqs SEARCH command line of my SLURM script, I specify a temporary directory on the /tmp of the compute node. However, during execution, I have a file named like ""core.181135"" which is created and which reaches a phenomenal size (>400GB) in the folder where my slurm script is located and from where I launch the sbatch command. The ""181135"" number corresponds to the process id of the mmseqs job on the compute node. I was wondering if anyone around here could have any idea of the origin of this bizarre behavior of the program. The command line is like (I also attach the SLURM script to this post):. `mmseqs search /shared/projects/phycovir/JGI/MMSEQS/ScafRef-ALLDATES.COASSEMBLY.lgmin2000.pep.mms /shared/bank/nr/current/mmseqs/nr.mmdb /shared/projects/phycovir/JGI/MMSEQS/NR/ScafRef-ALLDATES.COASSEMBLY.lgmin2000.pep_VS_nr.mms.rsltDB /tmp/tmp_mmseqs.181126 --remove-tmp-files true --threads 64 -a -e 1E-5 -v 3`. I hope it's clear enough; Thanks for the help; Guillaume. ## Your Environment; mmseqs2/10-6d92c. [MMSEQ-SEARCH-69.SLURM.txt](https://github.com/soedinglab/MMseqs2/files/3956903/MMSEQ-SEARCH-69.SLURM.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/257:49,schedul,scheduler,49,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257,1,['schedul'],['scheduler']
Energy Efficiency,"Hello; I have many (~200 million) multiple sequence alignments in the form of FASTA files that I would like to use as queries against a target dataset of about 6 billion protein sequences in a PSI-BLAST fashion. It is my understanding that I can convert the FASTA file into Stockholm format and then create a profileDB and use the profileDB to search the dataset (after it has been converted with `mmseqs createdb`). I imagine it would be more efficient if it I combined the queries into a queryDB before doing the search, but I can't really figure out how to do this. Would I have to combine all the MSA's into a massive file Stockholm file before creating the queryDB?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/369:444,efficient,efficient,444,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/369,1,['efficient'],['efficient']
Energy Efficiency,"Hi all, thanks for this MMseqs2 that seems very efficient. Unfortunately it seems to not be willing to run on my machine : . mmseqs easy-cluster /Users/s/Documents/Albatros/protein//short_name-Group/true_plus300_proteins-13-strains_shortname-group.fa /Users/s/Documents/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1; Create directory /Volumes/s/tmp; easy-cluster /Users/s/Documents/Albatros/short_name-Group/true_plus300_proteins-13-strains_shortname-group.fa /Users/s/Documents/Albatros/protein/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	1; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:48,efficient,efficient,48,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['efficient'],['efficient']
Energy Efficiency,"Hi, I am in the process of building a searchable database of antibody and T cell receptor repertoires (here, a ""repertoire"" is a set of antibody or TCR sequences from a single blood sample from a single donor). Searches are performed using mmseqs, with each repertoire stored as a mmseqs DB. So far, the search function is working nicely. Next, I'd like to implement a clustering option. My idea was to allow a set of repertoire DBs to be selected and clustered using linclust. My questions are: . 1. can either mergedbs or concatdbs be used to combine a set of DBs for clustering by linclust?; 2. is there a more efficient strategy than combining the individual DBs? . Each DB is typically tens of thousands of sequences or more with typical length ~40 amino acids (i.e. just the three CDR regions concatenated; not full-length protein). Thanks in advance for your help! ; -Daron",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/519:614,efficient,efficient,614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/519,1,['efficient'],['efficient']
Energy Efficiency,"Hi, am using `mmseqs search` and I want to estimate the peak RAM consumption for my uniref90 database. I found a formula for the prefiltering step in your [wiki](https://github.com/soedinglab/mmseqs2/wiki#memory-consumption) and noticed that either your example or your formula is not incorrect:. ```; M = (7 * N * L + 8 * a^k) byte; where; N = Number of sequences; L = Average sequence length; a = alphabet; k = k-mer size; ```. You wrote that using a UniProtKB database with 55 million sequences with an average length of 350 requires about 71 GB of RAM.; However, when I calculate just the first term of your formula (7*N*L), I get 134.75 GB. Can you tell me if the formula or the example is wrong?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/808:65,consumption,consumption,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/808,2,['consumption'],['consumption']
Energy Efficiency,"Hi,. I am using mmseqs2 for the taxonomy assignment using NR database. However, Estimated memory consumption is 2T. Is that normal? Also, my input is already protein. My another question is about the speed. Is there any way to speed it up?. ```; MMseqs Version: 14.7e284; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [===================================; Time for merging to BH193L-2_S20_database_h: 0h 0m 0s 80ms; Time for merging to BH193L-2_S20_database: 0h 0m 0s 85ms; Database type: Aminoacid; Time for processing: 0h 0m 17s 880ms; Create directory tmp_BH193L-2_S20; taxonomy --lca-mode 3 --threads 36 -e 0.0001 --tax-lineage 1 -s 3 --lca-ranks species,genus,family,order,class,phylum,kingdom,superkingdom BH193L-2_S20_database NR BH193L-2_S20.result tmp_BH193L-2_S20. MMseqs Version: 14.7e284; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks species,genus,family,order,class,phylum,kingdom,superkingdom; Column with taxonomic lineage 1; Compressed 0; Threads 36; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.0001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed sub",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:97,consumption,consumption,97,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,1,['consumption'],['consumption']
Energy Efficiency,"Hi,. I really like Linclust, which makes it possible to cluster genes within linear time. For my dataset with 1.1G genes, it seems impossible to get it done by using CD-HIT. Linclust opens a door to cluster genes at this scale. After couple of trials, I have a little concern with the sensitivity. First, I used Linclust to cluster my genes. Around 1.2% genes were reduced. This ratio seems a little low compared to the results by CD-HIT, which reduced ~10% genes.; Then I splited the results of Linclust and used CD-HIT to double check the results. To my suprise, a further ~9.5% genes were reduced. So it seems the sensisitivity of Linclust may be an issue. I wondered if there is a way to improve sensitivity. The commands I have tested are as follows. I tried to adjust --kmer-per-seq to 80. The results were exactly the same with the default value. BTW, average protein length is 110aa. Appreciate. mmseqs linclust all_protein_merge_95.db all_protein_final_95 tmp --threads 100 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1T&& \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_rep.fasta. mmseqs linclust all_protein_merge_95.db all_protein_final_95_m80 tmp --threads 50 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 600G --kmer-per-seq 80 && \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_m80_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_m80_rep.fasta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365:365,reduce,reduced,365,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365,3,['reduce'],['reduced']
Energy Efficiency,"Hi,. When I run `createdb; createindex` on a fasta DB file, I generally observe the end result (all the generated output files together) is roughly ~10x bigger than the input fasta file. Most of it is the .idx files generated by `createindex`. The only way I got mmseqs to run fast is by using `db_load_mode=2`, getting the entire target DB in memory at the same time. Running `mmseqs search` efficiently against a large DB thus presents really large memory requirements. ; Is there any way around it (either currently, or planned)? E.g. searching against a compressed version of the DB?. Thank you!; Kuba",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/687:393,efficient,efficiently,393,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/687,1,['efficient'],['efficiently']
Energy Efficiency,"Hi,; I am new to MMSeqs2. It is really a good tool. However, I have 2 queries, may be basic too. But I want your opinions.; In an attempt to build a set of 30-90% sequence similarity, I removed the redundant hits myself firstly and then deployed a minimum sequence identity threshold of 30% and coverage 1 (All 92 input sequences are close homologues and so I want to avoid the partial match to build the good set), it resulted in 52 hits. So, now as you are guiding, the multiple resultant cluster sets have the sequence identity lesser than 30%, but the 52 hits share a sequence identity > 30%. Is this correct that this way my reduced set of 52 hits contains the sequences that are 30-90% identical?. Further, why is it that for another sequence-group, the resultant set spans the same 45 sequences for both 30% and 90% cutoffs. So, does it mean that the length of atleast 1 representative sequence is bigger and it spans multiple sequences in either of these ranges to result in the same set? How should this result be defined?; Thanks for your clarifications.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/173:630,reduce,reduced,630,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/173,1,['reduce'],['reduced']
Energy Efficiency,"Hi,; I was trying to generate the index files of a huge database. To be precise the nr database from blast. It creates the database without problems but when I run the createindex module mmseqs2, it stops with the error. Could not allocate entries memory in IndexTable::initMemory. I'm aware that this is not a bug but the computer I'm trying to run it on runs out of memory. It processes all sequences though and stops right at the end when the index files should have been written. . I still can search the resulting database, its just indexing the database on the fly. The computer has 64 Gb of memory, which is used in the process to 94% before swap is used. Now my question. ; Is there anything I can do, except of extending the hardware to make this work? ; In future I would set the -s parameter to 8 as this gives about the same sensitivity as blast?; Would this further increase the memory usage?. Thank you in advance. Christoph. ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Could not allocate entries memory in IndexTable::initMemory. ## Context; createindex module fails . ## Your Environment; 64 bit latest debian linux ; 24 cpus; 64 gb of RAM; latest git hub version self compiled with cmake.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/49:231,allocate,allocate,231,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/49,2,['allocate'],['allocate']
Energy Efficiency,"Hi. ## Expected Behavior; When using `taxonomy` to annotate a contig, mmseqs2 should gracefully exit if there are not hits when doing the search; ## Current Behavior. At the moment it exits with an error when `Query database size: 0` ; Full log [here](https://gist.github.com/genomewalker/e5b05deb965660e275a39a8153dab9e9); ```; Query database size: 0 type: Aminoacid; Estimated memory consumption: 151G; Target database size: 43032414 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 43.03M 4m 11s 993ms; Index table: Masked residues: 327874438; Index table: fill; [=================================================================] 43.03M 11m 31s 69ms; Index statistics; Entries: 10015666182; DB size: 67075 MB; Avg k-mer size: 7.824739; Top 10 k-mers; DFEQLPH	65289; NVPGWSP	65148; FRYAFPS	64963; RYYVLGW	64817; VDRLNTQ	63812; WRLDFLN	62949; TVDGDFS	62609; NKTDFVQ	61859; QDWVQIP	61316; LDGAYVP	59471; Time for index table init: 0h 16m 9s 488ms; Time for processing: 0h 16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/433:386,consumption,consumption,386,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433,1,['consumption'],['consumption']
Energy Efficiency,"Hi; we are continuously updating a large cluster DB with new data, and one of the steps that are taking longer is when the new sequences are updated with the old keys using the function `joinAndReplace`. We are using this function for other purposes and we added to the sorting parts `--parallel` and `--buffer-size` to speed up and reduce the I/O needed for the sorting. I think it would be great to have available these options if `sort` is modern enough and fallback to the original `joinAndReplace` if `sort` doesn't support these options. What do you think?. Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/269:333,reduce,reduce,333,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269,1,['reduce'],['reduce']
Energy Efficiency,How should I efficiently cluster multiple DBs?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/519:13,efficient,efficiently,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/519,1,['efficient'],['efficiently']
Energy Efficiency,"I was trying to use MMSEQS2 for clustering with:. mmseqs cluster DB clu tmp --cascaded -e 1e-5 --max-seqs 30000 --similarity-type 1. It was working fine (MMseqs version ad5b994c5f21d2117c359ecb748811cbd01eba73) but when I try to execute it in another machine (both macOS El Capitan 10.11.6, this time MMseqs version e3ca470308523cb3d997088c65e821cc79e2a422), I get several error messages as follows,. ERROR: Set 0 has more elements than allocated (1)!. and the clustering never finishes. Any idea of what is this due to or how to solve it?. Thank you in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/28:437,allocate,allocated,437,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/28,1,['allocate'],['allocated']
Energy Efficiency,"I would like to assign a taxonomic label to my protein sequences using the blast NR database and the mmseqs taxonomy command available in the docker image (quay.io/microbiome-informatics/mmseqs:2.13). I noticed that the default coverage value is zero according to the help page.; `-c FLOAT List matches above this fraction of aligned (covered) residues (see --cov-mode) [0.000]`. However, if I set the `-c` parameter to 0.8, which sounds reasonable to me, then all of my sequences are labelled as `no rank unclassified`. . Full command: ; ```; mmseqs taxonomy queryDB ${MMSEQS2_DATABASE_DIR} taxresults.database tmp --lca-ranks superkingdom,phylum,class,order,family,genus,species,subspecies --threads 28; ```. My questions are:; 1. Doesn't it always make sense to increase the `-c` parameter to reduce spurious hits?; 2. How can I inspect the alignment of the best hit?; 3. Does easy-taxonomy also use the same default `lca-mode` or a different one?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/750:796,reduce,reduce,796,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/750,1,['reduce'],['reduce']
Energy Efficiency,"I would like to find the closest human protein sequence for any given query. Often the query sequences are short (10aa). To test if mmseq could help with that, I created a fasta file that contains: ; 1) 10 protein sequences from the filtered swissprot dataset to include just human samples (aka, swissprot_human); 2) 10 short sequences created through sampling one segment of 10aa from the first 10 human sequences . The resulting sequences are illustrated in this [csv](https://docs.google.com/spreadsheets/d/1F_0krK2EAW-siYEheJbwTXaHUxy3gKRR9VAcY_kCHBE/edit?usp=sharing) (I couldn't upload the csv, so I am sharing a link. I hope you can access it). . You will notice that the same query sequence has a different evalue between swissprot and swissprot_human, which I assume plays a role in the reduced number of matches against swissprot. How can I ensure the search results are consistent for the two datasets? . Thank you so much for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/827:796,reduce,reduced,796,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/827,1,['reduce'],['reduced']
Energy Efficiency,"I'm trying to get the abundance of gene clusters generated by linclust. My method involves mapping the post-QC Illumina reads to the post-linclust cluster representatives via `mmseqs map`. To get the representative sequence db, I'm using `mmseqs result2repseq`. I ran `mmseqs map` (actually `mmseqs search --alignment-mode 4` due to Issue #144), but after many hours of processing, I got the error that no ""*_h"" file exists for the database, and the map job died. Do I have to convert the rep-seq database to a fasta and then re-create the database with `mmseqs createdb` just so that I can generate the *_h file? Is there a more efficient way?. Why doesn't `mmseqs search` check for the necessary files at the start of the job instead of in the middle of the run (possible after many hours of processing)?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/146:630,efficient,efficient,630,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/146,1,['efficient'],['efficient']
Energy Efficiency,"I'm using `mmseqs2 7.4e23d h21aa3a5_1 bioconda`, and I'm trying to taxonomically classify a set of ~4 million representative AA sequences (generated by `plass`, clustered with `linclust`, then using a representative of each cluster), and I'm using uniclust90_2018_08 for the taxonomy db. The command is:. ```; mmseqs taxonomy --threads 24 -e 1e-5 --start-sens 1 -s 6 --sens-steps 3 --lca-ranks ""phylum:superphylum:subkingdom:kingdom:superkingdom"" {seqDB} {taxDB} {outDB} {tmp_dir}; ```. I've tried providing up to 720 GB of memory, and I still get a memory error: `Could not allocate foundDiagonals memory in QueryMatcher`. This happens during the stage:. ```; Init data structures...; Compute score and coverage.; Touch data file /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db ... Done.; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db ... Done.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ...................................................................................................	1 Mio. sequences processed; .......; ```. Is there a good way of reducing the memory usage for `mmseqs taxonomy`? I didn't see anything in the script doc or the wiki on reducing memory usage for taxonomy inference.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147:575,allocate,allocate,575,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147,1,['allocate'],['allocate']
Energy Efficiency,Manually limit memory consumption,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58:22,consumption,consumption,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58,1,['consumption'],['consumption']
Energy Efficiency,Question: efficient implementation of mmseqs easy-rbh for large datasets,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/777:10,efficient,efficient,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777,1,['efficient'],['efficient']
Energy Efficiency,RAM Consumption,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/808:4,Consumption,Consumption,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/808,1,['Consumption'],['Consumption']
Energy Efficiency,Running mmseqs databases creates a significantly reduced tax database,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/684:49,reduce,reduced,49,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/684,1,['reduce'],['reduced']
Energy Efficiency,"This is not bug report, just a question. Does memory consumption by ""cluster"" and ""linclust"" in mmseqs2 independent on the number of threads? In other words, for the same database, will I use more memory if I use more CPUs?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/69:53,consumption,consumption,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/69,1,['consumption'],['consumption']
Energy Efficiency,What E-Values and sequence identity should I be shooting for in an easy-search workflow? I'm having a hard time to understand what reduces false positives the most.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/721:131,reduce,reduces,131,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/721,1,['reduce'],['reduces']
Energy Efficiency,"What is the final size of the BFD, __unpacked__? I downloaded it successfully, but now am trying to allocate enough storage. https://bfd.mmseqs.com/. Thanks a lot!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/525:100,allocate,allocate,100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/525,1,['allocate'],['allocate']
Energy Efficiency,"_h: 0h 0m 0s 261ms; Time for merging to query_seqs: 0h 1m 40s 122ms; Time for processing: 0h 8m 20s 689ms; prefilter tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 20 --compressed 0 -v 3. Query database size: 39650 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 19825 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [=================================================================] 100.00% 19.83K 0s 193ms; Index table: Masked residues: 3096; Index table: fill; [=================================================================] 100.00% 19.83K 0s 133ms; Index statistics; Entries: 5861616; DB size: 8225 MB; Avg k-mer size: 0.005459; Top 10 k-mers; GTACGTGAATTGAAT	10331; AAACTGGGAGAAGAT	9920; AAGGGGGGGCCGGTT	9235; CGAACGTGGGAACGG	8944; GGGGAAAGGCTGGGG	7283; TCGATTACGGTAACG	6945; GTGCGCAGCGTATCG	6389; CCCGGCTCACGAATG	5538; ACTGCGTAAGGGTGG	5044; GACCGAGGGCACGGG	4773; Time for index table init: 0h 0m 8s 613ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 39650; Target db start 1 to 19825; [=================================================================] 100.00% 39.65K 3s 800ms. 0.928116 k-mers per position; 129909 DB matches per sequence; 0 o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:12887,consumption,consumption,12887,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['consumption'],['consumption']
Energy Efficiency,"_orfs_aa: 0h 33m 4s 490ms; Time for processing: 1h 14m 4s 658ms; prefilter repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 5 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 300G -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 56 --compressed 0 -v 3 . Query database size: 1303062545 type: Aminoacid; Estimated memory consumption: 2G; Target database size: 349750 type: Profile; Index table k-mer threshold: 82 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 349.75K 1m 42s 520ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 349.75K 5m 18s 145ms; Index statistics; Entries: 14682023111; DB size: 84042 MB; Avg k-mer size: 3594.921651; Top 10 k-mers; PPPPW	38077; PPPWW	37617; PPWPP	34827; PPPGW	33942; WWWPP	33931; PPPDW	33516; PPWPW	33505; PPWRW	32205; PWPPW	31944; PPPQW	31811; Time for index table init: 0h 9m 20s 184ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 82; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1303062545; Target db start 1 to 349750; [=================================================================] 1.30B 86h 42m 2s 376ms. 0.785483 k-mers per position; 240012 DB matches per sequence; 5731753 overflows; 0 queries produce too many hits (truncated result); 269 sequences p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/594:17913,consumption,consumption,17913,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594,1,['consumption'],['consumption']
Energy Efficiency,"_tmp/13016959338117486175/query_seqs tmp/3198441352783276465/clu_tmp/13016959338117486175/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 5 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3 . Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 1648954 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to cluster a number of gene sequences with an identity of 0.8 and no minimum length for the aligned portion of the genes. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15.6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Conda; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Slurm-managed cluster computing environment; * Operating system and version: Rocky Linux 8.5 (Green Obsidian)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:17757,Green,Green,17757,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['Green'],['Green']
Energy Efficiency,"a 1 --alignment-mode 3 --threads 96 -s 5.7 --sort-results 0 --remove-tmp-files 0 . prefilter tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 -s 5.7 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 tmp_easy_search/6745795380167965363/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:5776,consumption,consumption,5776,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['consumption'],['consumption']
Energy Efficiency,"ace limit 	0; MPI runner 	mpirun -pernode -np 8; Force restart with latest tmp 	false; Remove temporary files 	false. MPI Init; Rank: 0 Size: 8; prefilter human_prot.db /lustre/projects/carlson-group/mmseqs2-project/DBs/UniRef50 ./tmp/4797566427929930176/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 83); Query db start 1 to 20588; Target db start 1 to 207919; ...; ```. ## Context; I'm running this on a cluster with aarch64 (actually A64FX) CPU architecture. The cluster also has limited memory per node -- only 32 GB. ## Your Environment; Include as ma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:4570,consumption,consumption,4570,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['consumption'],['consumption']
Energy Efficiency,"an.db; Data file is fam.db; Start writing file to fam.tsv; Done.; ```. ## Context. These 2 sequences come from a vibro cholerae genome. . ## Your Environment. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): GITDIR-NOTFOUND (corresponds to the last release: 2-23394). * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled using GNU Make 3.81 and cmake version 2.8.12.2. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: self-compiled using GNU Make 3.81 and cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; less /proc/cpuinfo; processor : 0; vendor_id : AuthenticAMD; cpu family : 21; model : 2; model name : AMD Opteron(tm) Processor 6344 ; stepping : 0; cpu MHz : 2599.862; cache size : 2048 KB; physical id : 0; siblings : 12; core id : 0; cpu cores : 6; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext; fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1; sse4_2 popcnt aes xsave avx f16c lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt ; lwp fma4 tce nodeid_msr tbm topoext perfctr_core perfctr_nb cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassis; ts pausefilter pfthreshold bmi1; bogomips : 5199.72; TLB size : 1536 4K pages; clflush size : 64; cache_alignment : 64; address sizes : 48 bits physical, 48 bits virtual; power management: ts ttp tm 100mhzsteps hwpstate cpb eff_freq_ro; ```; * Operating system and version:; ```; $uname -a; Linux XXX 2.6.32-696.20.1.el6.x86_64 #1 SMP Fri Jan 26 17:51:45 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:19132,monitor,monitor,19132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,2,"['monitor', 'power']","['monitor', 'power']"
Energy Efficiency,"appingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; $conda activate /project/winter_pea_endophytes_2022/MMseqs. Server:; ceres.scinet.usda; resources allocation; $salloc -p short -N 2 -n 80 -t 12:00:00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/689:1533,consumption,consumption,1533,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689,1,['consumption'],['consumption']
Energy Efficiency,"arch type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) Xeon(R) W-2255 CPU, 64GB RAM; * Operating system and version: Ubuntu20 LTS. [nohupout.txt](https://github.com/soedinglab/MMseqs2/files/10728242/nohupout.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:4911,consumption,consumption,4911,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['consumption'],['consumption']
Energy Efficiency,"at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codon",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:7975,reduce,reduce,7975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['reduce'],['reduce']
Energy Efficiency,"at nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; ----------------------------------------------",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:4330,consumption,consumption,4330,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 1,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29396,consumption,consumption,29396,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Qu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:27887,consumption,consumption,27887,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target data,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:28131,consumption,consumption,28131,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target data,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:28253,consumption,consumption,28253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Es,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:28375,consumption,consumption,28375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Qu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:28619,consumption,consumption,28619,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Es,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:28741,consumption,consumption,28741,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=========,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29762,consumption,consumption,29762,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,"atabase, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very similar. ; Thanks for this great software, we are finding it incredibly useful for both clustering and searching on large protein datasets and we would like to understand more on how to use it efficiently and correctly. ## Your Environment. * MMSeqs2 Release 3-be8f6 AVX2. * Diamond v0.9.21. * Environment : Amazon Linux AMI 2018.03.l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91:2194,efficient,efficiently,2194,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91,1,['efficient'],['efficiently']
Energy Efficiency,"ated memory consumption: 400G; Target database size: 74390789 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 74.39M 1m 27s 612ms; Index table: Masked residues: 17937595794; Index table: fill; [=================================================================] 74.39M 13s 623ms; Index statistics; Entries: 495972652; DB size: 12603 MB; Avg k-mer size: 0.387479; Top 10 k-mers; CSSCCCS 40539; CSSCSCS 36980; CSCSSCS 36180; CSCSCSS 35290; CSSCDSS 34425; CSCCSSS 33905; CSSCSSS 32740; CSCDSSS 31596; SCSCDSS 30280; CSCSDSS 29715; Time for index table init: 0h 2m 0s 290ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 74390789; Target db start 1 to 74390789; [==. ## Context; I have translated all the sequences in Uniref90 based on a reduced amino acid alphabet that has only 5 letters (C, A, D, G, S). I have tried clustering it again using `linclust` to 90% identity and 80% overlap, however, the number of clusters is larger than I expected (75M from 76M initial Uniref90 size). I thought that might be due to the reduced sensitivity as a further reduced amino acid alphabet is applied before computing the k-mers. . I've tried to use `mmseq cluster` instead, however, this seems to take a very long time. After 13h the progress bar has only two '=' signs. . I am not sure if I am approaching the right way. Is linclust capable to cluster a protein sequence database that has been translated to a reduced amino acid alphabet or does it interfere with the mmseq alphabet used during k-mer comparison?. I was expecting a much smaller number of clusters as sequences only use 5 letters now so they are more likely to be more similar. . For `mmseq cluster`, what is the expected computation time for 76M sequences? . ## Your Environment; Running on a 64-core and 500GB RAM Linux machine.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:13948,reduce,reduced,13948,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,3,['reduce'],['reduced']
Energy Efficiency,"ateindex ./MMseqs2DB/MMseqs2DB ./tmp --threads 48 --search-type 3 `; ## MMseqs Output (for bugs); Didn't collect the stdout/errr =\ only have these from the terminal; ```; Time for merging to nucl_split_seq_h: 0h 5m 44s 19ms; Time for merging to nucl_split_seq: 0h 4m 40s 563ms; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; [>                                                                ] 0.00% 1 eta ./tmp/11929725182862116610/createindex.sh: line 56: 16913 Segmentation fault      ""$MMSEQS"" $INDEXER ""$2/nucl_split_seq"" ""$INPUT"" $INDEX_PAR; Error: indexdb died; ```. ## Context; I'll need to reuse this DB several times, objective is to reduce overall runtime. ; Also, I noticed that seven *.idx[0-6] and seven *.idx.index[0-6] are created in the dir ./MMseqs2DB/ , but only the file MMseqs2DB.idx.0 isn't 0 bytes in size / increases (don't know if this is realted, but it reaches almost exactly 150.0GB (size when createindex crashed).; Any help is appreciated, hopefully I didn't miss something obvious :-); ## Your Environment; `MMseqs2 Version: f966bfa62a2b52d4821e908ac9e25808d1be0b81`; Using the avx2 binary, ; CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; OS: Linux 3.10.0-693.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280:1700,reduce,reduce,1700,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280,1,['reduce'],['reduce']
Energy Efficiency,"bdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 7ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 4 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 10966 type: Aminoacid; Estimated memory consumption: 1010M; Target database size: 10966 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 10.97K 0s 560ms; Index table: Masked residues: 4144; Index table: fill; [=================================================================] 10.97K 0s 667ms; Index statistics; Entries: 1798942; DB size: 498 MB; Avg k-mer size: 0.028108; Top 10 k-mers; IGAALA 68; GPGGTL 58; GIVAPG 43; ALTAGI 42; ALGNGK 34; GLGNGK 32; ELPGVN 31; DLLDLP 29; GQQVAR 24; GEQVAR 23; Time for index table init: 0h 0m 2s 664ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10966; Target db start 1 to 10966; [=================================================================] 10.97K 3s 91ms. 46.510777 k-mers per position; 438 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 13 sequences passed prefiltering per query sequence; 7 median result list",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:24473,consumption,consumption,24473,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['consumption'],['consumption']
Energy Efficiency,"blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 20",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:6223,Reduce,Reduced,6223,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['Reduce'],['Reduced']
Energy Efficiency,"clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by rep. sequence 0h 0m 39s 418ms; Time for fill: 0h 2m 31s 613ms; Time for merging to pref: 0h 0m 0s 1ms; Time for processing: 0h 9m 8s 726ms; rescorediagonal All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 440.66M 7m 9s 976ms; Time for merging to ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:4945,Reduce,Reduced,4945,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['Reduce'],['Reduced']
Energy Efficiency,"d orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Report mode 	0; Alignment format 	0; Format alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; First sequence as representative 	false; Target column 	1; Add full header 	false; Sequence source 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0. *skipped some parts of the log that took very little time*. Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422:3623,consumption,consumption,3623,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422,1,['consumption'],['consumption']
Energy Efficiency,"da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread 0x7ffff5a0f700 (LWP 9088)]; [New Thread 0x7ffff520e700 (LWP 9089)]; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers... Thread 3 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffff5a0f700 (LWP 9088)]; 0x0000000000542911 in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (). ## Context; As already stated above, with smaller databases everything works fine. Even running a small different query set on the target database works just fine, as does the other way round (normal query, reduced target db).; Please tell me if u need the fasta files to recreate this bug. ## Your Environment; MMseqs2 Version: bcb164e42c79555cc521196c7f94f4b0123da048; Self-compiled build, following your description in ""Compile from source""; cmake version 3.5.2; gcc version 4.8.5 (SUSE Linux) ; Memory: 7.7 GiB RAM; openSUSE Leap 42.2, Kernel: 4.4.92-18.36-default, 64 bit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:5039,reduce,reduced,5039,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['reduce'],['reduced']
Energy Efficiency,"db_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. Error:; ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/627:1122,consumption,consumption,1122,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627,1,['consumption'],['consumption']
Energy Efficiency,"de.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 77.30K 0s 41ms; Sort kmer 0h 0m 0s 46ms; Sort by rep. sequence 0h 0m 0s 22ms; Time for fill: 0h 0m 0s 11ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 225ms; rescorediagonal tmp/8115150149931881526/input tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 77.30K 0s 71ms; Time for merging to pref_rescore1: 0h 0m 0s 102ms; Time for processing: 0h 0m 0s 4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:3926,Reduce,Reduced,3926,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['Reduce'],['Reduced']
Energy Efficiency,"e dataset I want to cluster and I want to use distributed-memory MPI mode of MMseqs2. I have compiled and successfully run the MPI version of MMseqs2 by prepending the RUNNER=""..."" string. ## Current Behavior; In order to see whether MMseqs2 can really make use of node-level parallelism, I first clustered a dataset of 50 million sequences on a single node with a single MPI task and multiple threads. The command I use for that purpose is:. ```; RUNNER=""srun -n 1 --ntasks-per-node 1"" ./mmseqs-par easy-linclust <fasta-file> <cluster-prefix> <tmp-dir> --min-seq-id 0.7 -c 0.8 --cov-mode 0 --threads 64; ```. This completes in ~34 minutes and has a peak memory usage of 27.9 GB. Now when I change the number of nodes to 4, by using RUNNER=""srun -n 4 ..., it completes in ~49 minutes and still has a peak memory usage of ~27.9 GB. The issue is similar for 16 nodes, i.e., the runtime does not go down as one expects. Is this expected? Am I using the MPI version correctly? It seems like there is no use for utilizing the MPI-mode as it is not efficient in terms of runtime and memory. ## Expected Behavior; I know some components of the clustering pipeline are sequential, and some of them are parallel. But one would logically expect a gain in terms of runtime and/or memory when using multiple nodes. ## MMseqs Output (for bugs); The output for single-node run: https://pastebin.com/waDMWGA3; The output for 4-node run: https://pastebin.com/B7bMaei3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 61ca48883b50714be51fc35fc9b77325ffde53fb-MPI. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; compiler version: OpenMPI 4.0.2, gcc 8.3.0; cmake version: 3.14.4. * Server specifications (espec",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/331:1055,efficient,efficient,1055,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331,1,['efficient'],['efficient']
Energy Efficiency,"e multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment datab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:3049,Reduce,Reduced,3049,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['Reduce'],['Reduced']
Energy Efficiency,"ectory tmp/15248047069833069253/search_tmp; search tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result tmp/15248047069833069253/search_tmp -a 1 --alignment-mode 3 -c 1 --cov-mode 1 -s 5.7 --remove-tmp-files 1 . prefilter tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 1 --cov-mode 1 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 1 eta -; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 1 eta -; Index statistics; Entries: 41; DB size: 488 MB; Avg k-mer size: 0.000001; Top 10 k-mers; DFVKIA	1; ATLTKA	1; SEEGLA	1; IWEEIC	1; PFDSKD	1; CLRHLD	1; DMAGTD	1; QNRWRE	1; GENRSE	1; LAKPDF	1; Time for index table init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 1; [=================================================================] 100.00% 1 eta -. 602.620000 k-mers per position; 41 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 siz",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:5814,consumption,consumption,5814,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['consumption'],['consumption']
Energy Efficiency,"edundancy ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 26s 718ms; Time for processing: 0h 1m 14s 12ms; prefilter cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.99 --cov-mode 1 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 . Query database size: 119070883 type: Nucleotide; Estimated memory consumption: 544G; Target database size: 119070883 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 119.07M 11m 59s 618ms ; Index table: Masked residues: 1954198777; Index table: fill; [=================================================================] 100.00% 119.07M 8m 53s 150ms ; Index statistics; Entries: 43365843082; DB size: 248141 MB; Avg k-mer size: 2646841.008423; Top 10 k-mers; AAAAAAA	23063795; AAATTAA	21644433; AATTTAA	21117606; AAAAATT	20537065; AAATTTT	19681970; TTTTTTT	19035614; AATTTTT	18870179; ATTTTTT	17045685; TTTATTT	16633440; ATAAATT	16256141; Time for index table init: 0h 23m 3s 602ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 119070883; Target db start 1 to 119070883; [> ] 0.00% 1 eta -. Here are the files that were so far created in the tmp directory:; -rwx------ 1 btschits biogeo 11721 Apr 16 18:49 cascaded_clustering",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:10784,consumption,consumption,10784,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['consumption'],['consumption']
Energy Efficiency,"ence in the queryDB aginst a larger DB of amino acid sequences. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): home-brew; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: MMseqs2/13-45111; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; * Operating system and version:; * $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 40; On-line CPU(s) list: 0-39; Thread(s) per core: 1; Core(s) per socket: 20; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6148 CPU @ 2.40GHz; Stepping: 4; CPU MHz: 2400.000; BogoMIPS: 4800.00; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 1024K; L3 cache: 28160K; NUMA node0 CPU(s): 0-19; NUMA node1 CPU(s): 20-39; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch epb cat_l3 cdp_l3 invpcid_single intel_ppin ssbd mba rsb_ctxsw ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts pku ospke md_clear spec_ctrl intel_stibp flush_l1d arch_capabilities",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/817:5016,monitor,monitor,5016,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/817,1,['monitor'],['monitor']
Energy Efficiency,"ep 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a search against Uniref100. ## Your Environment. IBM SR650 ServerIntel Xeon Silver 4216, 2 CPUs, 2.1Ghz, 64 threads - 1TB DDR4 2933mhz RDIMM - HDD 12TB SAS. Titan X 3584 CUDA core, 12 GB GDDR5X, 480 GB/sec, 11 Tflops.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:5724,allocate,allocate,5724,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,2,['allocate'],['allocate']
Energy Efficiency,"er_1 | Time for processing: 0h 0m 0s 47ms; mmseqs-web-worker_1 | 2022/09/22 16:09:14 Process finished gracefully without error; ```. For comparison, logs looked like this when the RNA indexing was working:; ```; mmseqs-web-worker_1 | indexdb /tmp/16248551593497607411/nucl_split_seq /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write DBR2INDEX (7); mmseqs-web-worker_1 | Write DBR2DATA (8); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write HDR2INDEX (20); mmseqs-web-worker_1 | Write HDR2DATA (21); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=================================================================] 10.75K 1s 426ms; mmseqs-web-worker_1 | Index table: Masked residues: 29698; mmseqs-web-worker_1 | Index table: fill; mmseqs-web-worker_1 | [=================================================================] 10.75K 0s 783ms; mmseqs-web-worker_1 | Index statistics; mmseqs-web-worker_1 | Entries: 6377423; mmseqs-web-worker_1 | DB size: 8228 MB; mmseqs-web-worker_1 | Avg k-mer size: 0.005939; mmseqs-web-worker_1 | Top 10 k-mers; mmseqs-web-worker_1 | GAGTGGTTAGGCGGA	1170; mmseqs-web-worker_1 | TGAAACGGCCCCC",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:14220,consumption,consumption,14220,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['consumption'],['consumption']
Energy Efficiency,"erging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 16ms; prefilter ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned ./mmseqs_output/tmp/5351426679731834765/seq_seeds.merged ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 26229 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34414 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 34.41K 1s 394ms; Index table: Masked residues: 8741; Index table: fill; [=================================================================] 34.41K 1s 378ms; Index statistics; Entries: 6295744; DB size: 524 MB; Avg k-mer size: 0.098371; Top 10 k-mers; DVLDMP 2320; PDVMRM 1368; DRQVAY 1181; PFPEAR 738; MPLGAT 728; MPMGAT 703; GQQVAR 620; ADYTFS 597; LTFLYV 568; VLLALS 518; Time for index table init: 0h 0m 4s 142ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 26229; Target db start 1 to 34414; [=================================================================] 26.23K 1m 58s 7ms. 775.834912 k-mers per position; 60277 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 193 sequences passed prefiltering per query sequence; 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:38161,consumption,consumption,38161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['consumption'],['consumption']
Energy Efficiency,"ers-split-mode 0 --create-lookup 0 --threads 96 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 . Query database size: 4000 type: Nucleotide; Estimated memory consumption: 11G; Target database size: 365688 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 100.00% 365.69K 16s 177ms ; Index table: Masked residues: 1079896; Index table: fill; [=================================================================] 100.00% 365.69K 12s 498ms ; Index statistics; Entries: 297952985; DB size: 9896 MB; Avg k-mer size: 0.277490; Top 10 k-mers; GGCGCAGCGCGGTGC	366; TCCGGGCCGCACGGT	330; GTCGCGGCAGCGCCG	209; CAGACGCGCGTGCCG	204; CGCGCGCGTCGCGCG	167; CGCGCGCGTGGCGCG	157; GCTGCGCGCGGCGCG	151; CGCGGGCGTGGCGCG	149; CGTGCGCGTGGCGCG	147; CGCGCGCCCGGCGCG	133; Time for index table init: 0h 0m 39s 203ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4000; Target db start 1 to 365688; [=================================================================] 100.00% 4.00K 0s 74ms ; [===============================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:5054,consumption,consumption,5054,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['consumption'],['consumption']
Energy Efficiency,"es 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 6 0s 21ms; Time for merging to orfs_aa_h: 0h 0m 0s 276ms; Time for merging to orfs_aa: 0h 0m 0s 415ms; Time for processing: 0h 0m 1s 438ms; prefilter /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_aa ../../../../resources/GTDB/mmseqs_gtdb/GTDB /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 5696 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 124G; Target database size: 106052079 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 35.35M 7m 55s 640ms; Index table: Masked residues: 89908004; Index table: fill; [===> ] 5.00% 1.77M eta 4h 48m 2s; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ~190 Gb, HPC; * Operating system and version: CentOS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479:4446,consumption,consumption,4446,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479,1,['consumption'],['consumption']
Energy Efficiency,"g alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter queryDB sequenceDB tmp/837003320692135749/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Target split mode. Searching through 5 splits; Estimated memory consumption: 297G; Target database size: 358983966 type: Aminoacid; Process prefiltering step 1 of 5. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; tmp/837003320692135749/blastp.sh: line 99: 35385 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died. ## Steps to Reproduce (for bugs); $ mmseqs search queryDB sequenceDB resultDB tmp. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Doing a seach of one sequence in the queryDB aginst a larger DB of amino acid sequences. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): home-brew; * For self-compiled and Homebrew: Compile",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/817:3019,consumption,consumption,3019,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/817,1,['consumption'],['consumption']
Energy Efficiency,"g exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 48 --compressed 0 -v 3 -s 7.0 . Query database size: 1270615 type: Profile; Estimated memory consumption: 7G; Target database size: 1270615 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1.27M 6s 285ms; Index table: Masked residues: 39476984; Index table: fill; [=================================================================] 1.27M 5s 428ms; Index statistics; Entries: 522806522; DB size: 3479 MB; Avg k-mer size: 8.168852; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1270615; Target db start 1 to 1270615; [=================================================================] 1.27M 2h 31m 44s 357ms. 1266.108246 k-mers per position; 3373560 DB matches per sequence; 626307 overflows; 21 queries produce too many hits (truncated result); 299 sequences passed pref",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:8855,consumption,consumption,8855,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['consumption'],['consumption']
Energy Efficiency,"h data file tcdb_query.nr.db ... Done.; > Query database type: Aminoacid; > Target database type: Aminoacid; > Calculation of Smith-Waterman alignments.; > Error: Alignment died; > . ## Context; I have two databases, they don't have equal entries but some sequences have 100% identity.; I try to search using --add-self-matches to cluster the result.; The search fails in alignment step when I use this options, without this options the search run well. . ## Your Environment. * Git commit used: 7ca117893675cdca309e2c9dfc444bbc7462e858; * Which MMseqs version was used: Linuxbrew; * Compiler and Cmake: cmake version 3.12.3; * Server specifications: 188Gb ; lscpu:; `; Architecture: x86_64 ; CPU op-mode(s): 32-bit, 64-bit ; Byte Order: Little Endian ; CPU(s): 36 ; On-line CPU(s) list: 0-35 ; Thread(s) per core: 2 ; Core(s) per socket: 18 ; Socket(s): 1 ; NUMA node(s): 1 ; Vendor ID: GenuineIntel ; CPU family: 6 ; Model: 85 ; Model name: Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz ; Stepping: 4 ; CPU MHz: 2680.333 ; BogoMIPS: 4600.00 ; Virtualization: VT-x ; L1d cache: 32K ; L1i cache: 32K ; L2 cache: 1024K ; L3 cache: 25344K ; NUMA node0 CPU(s): 0-35 ; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts pku ospke ; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:9776,monitor,monitor,9776,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['monitor'],['monitor']
Energy Efficiency,h-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 7.5 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Estimated memory consumption: 1G; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Process prefiltering step 1 of 1; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | k-mer similarity threshold: 96; docker-compose-mmseqs-web-worker-1 | Starting prefiltering scores calculation (step 1 of 1); docker-compose-mmseqs-web-worker-1 | Query db start 1 to 1; docker-compose-mmseqs-web-worker-1 | Target db start 1 to 382389; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 3ms; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | 19.566667 k-mers per position; docker-compose-mmseqs-web-worker-1 | 3351 DB matches per sequence; docker-compose-mmseqs-web-worker-1 | 0 overflows; docker-compose-mmseqs-web-worker-1 | 0 queries produce too much hits (truncated result); docker-compose-mmseqs-web-worker-1 | 6 sequences passed prefiltering per query sequence; docker-compose-mmseqs-web-worker-1 | 6 median result list length; docker-compose-mmseqs-web-worker-1 | 0 sequences with 0 size result lists; docker-compose-mmseqs-web-worker-1 | Time for merging to pref_0: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time f,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:3568,consumption,consumption,3568,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['consumption'],['consumption']
Energy Efficiency,"iments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 25.00K 0s 11ms ; Time for merging to pref_rescore1: 0h 0m 0s 8ms==================>] 99.34% 24.84K eta 0s ; Time for processing: 0h 0m 0s 48ms; clust experiments/small.mm.db experiments/tmp//6404161245249296443/pref_rescore1 experiment",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:5284,consumption,consumption,5284,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['consumption'],['consumption']
Energy Efficiency,"imit, such as 10G for ten gigabyte or 1T for one terabyte of RAM. ...so I'm using `--split-memory-limit` with 80% of the RAM provided for the qsub job. However, I always get the error:. ```; search --threads 8 -e 1e-3 --max-accept 1 --max-seqs 100 -s 6 --num-iterations 2 --split 0 --split-memory-limit 160G /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/hits_seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_TMP09. MMseqs Version: 	11.e1a1c; E-value threshold 	0.001; Max accept 	1; Threads 	8; Sensitivity 	6; Max results per query 	100; Split database 	0; Split memory limit 	160G; Search iterations 	2. Failed to mmap memory dataSize=321859477504 File=/ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db.idx. Error 12.; ```. Even if I reduce `--split-memory-limit` to 50% or just 20% of the total memory provided for the qsub job, the job still dies with the same error. Maybe I'm not understanding or using `--split-memory-limit` correctly??. I'm using UniRef90 as the db. If I use 336G for the job mem limit, then the `mmseq search` job runs without an error. . ## Steps to Reproduce (for bugs). `mmseqs search` on UniRef90 to provide a large RAM requirement for the job. . ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338:1343,reduce,reduce,1343,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338,1,['reduce'],['reduce']
Energy Efficiency,"ing: 0h 0m 0s 2ms; prefilter tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 -s 5.7 . Query database size: 4 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 2 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 2 0s 2ms; Index table: Masked residues: 18; Index table: fill; [=================================================================] 2 0s 2ms; Index statistics; Entries: 8669; DB size: 8192 MB; Avg k-mer size: 0.000008; Top 10 k-mers; AAATAAACAAAAAAA	2; TTAGATCGAAAAAAA	2; AACCAACTAAAAAAA	2; TCCTTTCTCAAAAAA	2; CCAAAATAACAAAAA	2; TTGAATGCACAAAAA	2; AATGTGCTACAAAAA	2; GCAATTAACCAAAAA	2; CTCTGGTACGAAAAA	2; GGGTGGAATGAAAAA	2; Time for index table init: 0h 0m 7s 405ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4; Target db start 1 to 2; [================================================] 4 ================0s 6ms; =; 0.991092 k-mers per position; 4326 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 2 median result list length; 2 sequences with 0 size result lists; Time for mergi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:7345,consumption,consumption,7345,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['consumption'],['consumption']
Energy Efficiency,"ior appear to function as intended. Perhaps something in the profile generation or implementation of profile against consensus searches affects the interpretation of the -c parameter? Investigating the alignment data of the attached MSA with mmseqs convertalis (attached below) shows that all hits indeed passes the -c 0.8 cutoff? As such perhaps my understanding of what constitutes alignment coverage is lacking and in that case how would one go about retricting the ""coverage"" to only query-target pairs with lengths within 80% of each other? I have tried --covmode 5 with similar results. . ## Expected Behavior. Restriction of clustered protein sequence lengths by imposing cover limits via the -c parameter in conjunction with any --covmode. ## Current Behavior. Clusters containing sequences of vastly different lengths far outside the range of the -c cutoff. . ## Context. My protocol can be summarized roughly as:. 1) Collapse paralogs and create cluster representatives in order to reduce database redundancy using;; mmseqs cluster initial-database clusters -s 5 -c 0.8 --min-seq-id 0.9 --cluster_mode 0 --max-iterations 3 --max-seqs 100 --covmode 0. 2) Iterate profile generation and searches of profiles against consensus sequences; mmseqs search cluster-representatives cluster-representatives representative-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs result2profile cluster-representatives cluster-representatives representative-search profiles; mmseqs profile2consensus profiles initial-database consensus; mmseqs search profiles consensus profile-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs clust --clustermode 0 consensus profile-search profile-clusters; mmseqs createsubdb profile-clusters initial-database new-cluster-representatives. Here new-cluster-representatives are used as input to round two of searches. . ## Alignment data ; query target fident qcov tcov; XP_645403.1 XP_640770.1 0.369 0.989 0.967; XP_635472.2 XP_640770.1 0.524 0.987 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:1956,reduce,reduce,1956,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['reduce'],['reduce']
Energy Efficiency,"ist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; cache_alignment	: 64; address sizes	: 44 bits physical, 48 bits virtual; power management:; ```; free; ```; total used free shared buff/cache available; Mem: 528377212 3193792 142947764 9564 382235656 523907652; Swap: 0 0 0. ```; * Operating system and version:; cat /etc/redhat-release ; CentOS Linux release 7.3.1611 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:6587,monitor,monitor,6587,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,2,"['monitor', 'power']","['monitor', 'power']"
Energy Efficiency,"kup 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 6.46M 24s 391ms; Time for merging to query_seqs_h: 0h 0m 3s 920ms; Time for merging to query_seqs: 0h 0m 19s 622ms; Time for processing: 0h 0m 57s 140ms; prefilter tmp/576731152808920235/query_seqs tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12919340; Target db start 1 to 6459670; [==. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:11594,consumption,consumption,11594,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['consumption'],['consumption']
Energy Efficiency,"lapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	1; Search steps 	3; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 1.000 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; Time for processing: 0h 0m 11s 757ms; align IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 tmp/16138406286044646862/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 21474836",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:5040,consumption,consumption,5040,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['consumption'],['consumption']
Energy Efficiency,"lse; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Program call:; rescorediagonal tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --no-preload 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce8790",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:7027,Reduce,Reduced,7027,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['Reduce'],['Reduced']
Energy Efficiency,"m 21s 501ms; Time for merging to orfs_aa_h: 0h 2m 11s 439ms; Time for merging to orfs_aa: 0h 2m 30s 736ms; Time for processing: 0h 7m 50s 411ms; prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 310097721 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 18s 71ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 52s 198ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 18338; Time for index table init: 0h 3m 27s 29ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 8); Query db start 1 to 310097721; Target db start 1 to 16332640; [=================================================================] 100.00% 310.10M 1h 8m 24s 140ms. 28.708682 k-mers per position; 4442 DB matches pe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:7181,consumption,consumption,7181,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['consumption'],['consumption']
Energy Efficiency,"me $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 32; Compressed 0; Verbosity 3. Query database size: 1480080 type: Aminoacid; Estimated memory consumption: 5G; Target database size: 1480080 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 6; Index table: counting k-mers; [=================================================================] 1.48M 3s 585ms; Index table: Masked residues: 4728698; Index table: fill. ## Your Environment; I'm using the latest release of MMSeqs2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382:2344,consumption,consumption,2344,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382,1,['consumption'],['consumption']
Energy Efficiency,memory consumption and speed,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:7,consumption,consumption,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,1,['consumption'],['consumption']
Energy Efficiency,"min-length 30 --max-length 32734 --orf-start-mode 1 --remove-tmp-files 1 . prefilter tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/orfs_aa databases/uniprotkb tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/tmp_hsp1/68; 53721603621777485/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-; seqs 300 --split 0 --split-mode 2 --split-memory-limit 200G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-se; lf-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0 . Query database size: 1599064123 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 163G; Target database size: 231921744 type: Aminoacid; Process prefiltering step 1 of 6; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.41M 2m 12s 304ms; Index table: Masked residues: 221272222; Index table: fill; [=================================================================] 38.41M 3m 45s 787ms; Index statistics; Entries: 11399442350; DB size: 74993 MB; Avg k-mer size: 8.905814; Top 10 k-mers; FSHAGSI 272598; AFMFFMP 260790; AFRNNFW 259163; RMNSFLP 218177; NNSWLPS 215496; AHFMIMV 211691; MPMGGNW 204521; TMLDRNT 168603; TGTYPSS 159040; GDQYNVT 148373; Time for index table init: 0h 6m 20s 599ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 1599064123; Target db start 1 to 38411731; [=================================================================] 1.60B 12h 46m 35s 370ms. 22.315418 k-mers per position; 10964 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 27 sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/577:21864,consumption,consumption,21864,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577,1,['consumption'],['consumption']
Energy Efficiency,"mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=this@entry=0x7fffffffd290, __position=__position@entry=...); at /usr/include/c++/9/bits/vector.tcc:440; #11 0x000000000060c68b in std::vector<std::pair<std::__c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:2279,allocate,allocate,2279,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,1,['allocate'],['allocate']
Energy Efficiency,"mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide; Estimated memory consumption: 1T; Target database size: 26422067 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [> ] 0.00% 1 eta -. tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. syste",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/697:2684,consumption,consumption,2684,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697,1,['consumption'],['consumption']
Energy Efficiency,mory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memor,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:28953,consumption,consumption,28953,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,"ms; Time for processing: 0h 0m 0s 2ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 3.5 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 6712 type: Aminoacid; Estimated memory consumption: 998M; Target database size: 6712 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 6.71K 0s 98ms ; Index table: Masked residues: 74049; Index table: fill; [=================================================================] 100.00% 6.71K 0s 81ms ; Index statistics; Entries: 2455512; DB size: 502 MB; Avg k-mer size: 0.038367; Top 10 k-mers; IHDKNI 28; GPGGTL 17; LGGFVY 14; GQQVAR 10; SGQQAI 9; RDKELL 9; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; Time for index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6712; Target db start 1 to 6712; [=================================================================] 100.00% 6.71K 0s 701ms . 36.614229 k-mers per position; 788 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 4 sequences passed prefiltering per query sequence; 3 media",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:21766,consumption,consumption,21766,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['consumption'],['consumption']
Energy Efficiency,"my output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. prefilter ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs.idx temp/9118733262229857306/tmp_hsp1/5064659849361391999/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --s; plit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7. Index version: 16; Generated by: 98c37f3c32b222632ada6011504380e91351276b; ScoreMatrix: VTML80.out; Query database size: 6282 type: Aminoacid; split was set to 5 but at least 8 are required. Please run with default paramerters; Target split mode. Searching through 5 splits; Estimated memory consumption: 138G; Process needs more than 113G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 213522593 type: Aminoacid; Process prefiltering step 1 of 5. k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 5); Query db start 1 to 6282; Target db start 1 to 42795128; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:4956,consumption,consumption,4956,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,1,['consumption'],['consumption']
Energy Efficiency,"n(R) Gold 6130 CPU @ 2.10GHz; stepping : 4; microcode : 0x2007006; cpu MHz : 2100.000; cache size : 22528 KB; physical id : 0; siblings : 32; core id : 0; cpu cores : 16; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 22; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req pku ospke md_clear flush_l1d arch_capabilities; vmx flags : vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml ept_mode_based_exec tsc_scaling; bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit mmio_stale_data; bogomips : 4200.00; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:. $ free; total used free shared buff/cache available; Mem: 791192240 20105804 63519620 33656 707566816 765066152; Swap: 0 0 0; ```; * Operating system and version:; ```; $ cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=22.04; DISTRIB_CODENAME=jammy; DISTRIB_DESCRIPTION=""Ubuntu 22.04.3 LTS""; PRETTY_NAME=""Ubuntu 22.04.3 LTS""; <truncated>; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:5810,power,power,5810,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['power'],['power']
Energy Efficiency,"ng to query_seqs: 0h 0m 0s 494ms; Time for processing: 0h 0m 2s 117ms; prefilter tmp/3198441352783276465/clu_tmp/13016959338117486175/query_seqs tmp/3198441352783276465/clu_tmp/13016959338117486175/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 5 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3 . Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 1648954 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to cluster a number of gene sequences with an identity of 0.8 and no minimum length for the aligned portion of the genes. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15.6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Conda; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:16627,consumption,consumption,16627,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['consumption'],['consumption']
Energy Efficiency,"nslate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Linux version 3.10.0-1160.6.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) )",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:3417,consumption,consumption,3417,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,1,['consumption'],['consumption']
Energy Efficiency,"nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===========================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:5859,Reduce,Reduced,5859,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['Reduce'],['Reduced']
Energy Efficiency,"ons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. indexdb refDB/NR refDB/NR --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 100G -v 3 --threads 48 . Target split mode. Searching through 41 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 920ms; Index table: Masked residues: 61238522; Index table: fill; [=================================================================] 10.84M 1m 25s 193ms; Index statistics; Entries: 3850121923; DB size: 31796 MB; Avg k-mer size: 3.007908; Top 10 k-mers; SGQQRIA	33175; FLLLLLA	30439; ATQAYAV	30261; LAYGSGV	30200; CYGPSYQ	30190; SVAYNPS	30179; ACNSPVY	30160; GSLGSSV	30151; HALLFPS	30146; ISEQEGT	30145; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 858ms; Index table: Masked residues: 61454634; Index table: fill; [===========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:61730,consumption,consumption,61730,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['consumption'],['consumption']
Energy Efficiency,"out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 7m 46s 594ms; rescorediagonal uniref90-DB-wwmj uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref tmp//16518381706844811497/linclust/11898236; 85496030198/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov; -mode 2 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [================================================================] =76.22M 19m 41s 19ms; Time for merging to pref_rescore1: 0h 0m 50s 277ms; Time for processing: 0h 21m 16",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:5502,Reduce,Reduced,5502,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['Reduce'],['Reduced']
Energy Efficiency,"p pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Create directory tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1; search BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/first tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1 --alignment-mode 1 -e 0.0001 --max-rejected 5 --max-accept 30 --threads 36 -s 3 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1. prefilter BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1/10054445979770264072/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 36 --compressed 0 -v 3 -s 3.0. Query database size: 355695 type: Aminoacid; Estimated memory consumption: 2T; Target database size: 532633656 type: Aminoacid; Index table k-mer threshold: 152 at k-mer size 7; Index table: counting k-mers. ```. Thank you.; Best,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:4675,consumption,consumption,4675,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,1,['consumption'],['consumption']
Energy Efficiency,"p/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/942042864",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:8603,allocate,allocate,8603,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['allocate'],['allocate']
Energy Efficiency,"pdb_rna_sequence_h: 0h 0m 0s 12ms; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence: 0h 0m 0s 9ms; mmseqs-web-worker_1 | Database type: Aminoacid; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence.lookup: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 60ms; mmseqs-web-worker_1 | indexdb /opt/mmseqs-web/databases/pdb_rna_sequence /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 1023M; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=================================================================] 10.79K 0s 918ms; mmseqs-web-worker_1 | Index table: Masked residues: 4422171; mmseqs-web-worker_1 | Index table: fill; mmseqs-web-worker_1 | [=================================================================] 10.79K 0s 61ms; mmseqs-web-worker_1 | Index statistics; mmseqs-web-worker_1 | Entries: 40961; mmseqs-web-worker_1 | DB size: 488 MB; mmseqs-web-worker_1 | Avg k-mer size: 0.000640; mmseqs-web-worker_1 | Top 10 k-mers; mmseqs-web-worker_1 | AAGAGA	872; mmseqs-web-worker_1 | CGGACA	532; mmseqs-web-worker_1 | AAGACG	524; mmseqs-web-worker_1 | AGAGCC	460; mmseqs-web-worker_1 | AAGCGC	4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:11447,consumption,consumption,11447,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['consumption'],['consumption']
Energy Efficiency,"per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 6.5 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8273 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; Time for processing: 0h 0m 23s 645ms; align tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 tmp/16138406286044646862/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:7679,consumption,consumption,7679,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['consumption'],['consumption']
Energy Efficiency,plit DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id. 	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Target Coverage threshold 	0; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Cluster mode 	0; > Max depth connected component	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Sets the MPI runner 	; > ; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Alphabet size 	3; > Seq. Id Threshold 	0; > Max. sequence length	32000; > Threads 	4; > Verbosity 	3; > ; > Y -> F; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > S -> A; > N -> D; > L -> I; > H -> E; > K -> E; > P -> C; > E -> D; > C -> A; > I -> F; > G -> A; > D -> A; > A -> A; > Reduced amino acid alphabet:; > F W X ; > Hashing sequences ... ; > Done.; > Compute 169 unique hashes.; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy tmp/clu_redundancy --cluster-mode 0 --max-seqs 300 -v 3 --max-iterations 1000 --similarity-type 2 --threads 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Cluster mode 	0; > Max. results per query 	300; > Verbosity 	3; > Max depth connected component	1000; > Similarity type 	2; > Threads 	4; > ; > Init...; > Opening sequence database...; > Opening alignment database...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 7 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for m,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:14389,Reduce,Reduced,14389,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['Reduce'],['Reduced']
Energy Efficiency,"porary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 25.00K 0s 11ms ; Time for merging to pref_rescore1: 0h 0m 0s 8ms==================>] 99.34% 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:5162,Reduce,Reduced,5162,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['Reduce'],['Reduced']
Energy Efficiency,"port for AVX2/SSE and amount of system memory):; ```; $ cat /proc/cpuinfo [truncated to 1 core]; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 85; model name : Intel(R) Xeon(R) Gold 6130 CPU @ 2.10GHz; stepping : 4; microcode : 0x2007006; cpu MHz : 2100.000; cache size : 22528 KB; physical id : 0; siblings : 32; core id : 0; cpu cores : 16; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 22; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req pku ospke md_clear flush_l1d arch_capabilities; vmx flags : vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml ept_mode_based_exec tsc_scaling; bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit mmio_stale_data; bogomips : 4200.00; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:. $ free; total used free shared buff/cache available; Mem: 791192240 20105804 63519620 33656 707566816 765066152; Swap: 0 0 0; ```; * Operating system and vers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:4710,monitor,monitor,4710,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['monitor'],['monitor']
Energy Efficiency,"qs_h: 0h 0m 0s 682ms; Time for merging to query_seqs: 0h 0m 38s 582ms; Time for processing: 0h 0m 52s 983ms; prefilter tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.85 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 112 --compressed 0 -v 3 . Query database size: 1604546 type: Nucleotide; Estimated memory consumption: 105G; Target database size: 802273 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 802.27K 1m 13s 891ms; Index table: Masked residues: 47468793; Index table: fill; [=================================================================] 802.27K 1m 7s 245ms; Index statistics; Entries: 14067080711; DB size: 88684 MB; Avg k-mer size: 13.100990; Top 10 k-mers; CCCTCGCAAGGTTAC	15119; TGGGATCCCCGGGGG	14445; GGTCGGGTCCCGTAG	12691; GGTATCCCCTCGAGG	12523; CATAAAAACCGAGGG	12298; TAAAAACCCCGGGGG	12038; TTTTATTTTATTCTT	9764; CTTAGGGGTTACGTT	9670; GTGTAATCCCTCGAG	9663; CTGAAACCATTCTCG	9602; Time for index table init: 0h 2m 35s 948ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1604546; Target db start 1 to 802273; [=================================================================] 1.60M 1h 46m 59s 76ms. 0.996125 k-mers per position; 14106896 DB matches pe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:12300,consumption,consumption,12300,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['consumption'],['consumption']
Energy Efficiency,"rep_db/DB.idx tmp1/1465312676443513838/search_tmp/12840997425876760019/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --target-search-mode 0 --k; -score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1000000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob; 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 . Index version: 16 ; Generated by: bb0a1b3569b9fe115f3bf63e5ba1da234748de23; ScoreMatrix: VTML80.out ; Query database size: 1000 type: Aminoacid; Estimated memory consumption: 101G; Target database size: 33611651 type: Aminoacid ; Process prefiltering step 1 of 1; ; k-mer similarity threshold: 118 ; Starting prefiltering scores calculation (step 1 of 1) ; Query db start 1 to 1000 ; Target db start 1 to 33611651 ; [=================================================================] 100.00% 1.00K 53s 841ms ; tmp1/1465312676443513838/search_tmp/12840997425876760019/blastpgp.sh: line 139: 3819000 Segmentation fault (core dumped) $RUNNER $PREF ""$QUERYDB"" ""$2"" ""$TMP_PATH/pref_$STEP"" ${TMP} ; Error: Prefilter died ; Error: Search died ; ```. ## Context. I thought maybe it's due to some special symbols in sequences in the failed fastas or larger size of proteins. Seems not, since ""X"" symbols where in completed fastas as well, as well as protein length ~30K or short. dividing these fasta files to a set of smaller solves this problem for a subset of new, but still leaves some with the same error. I can send an example fasta if it's needed. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MM",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/774:4951,consumption,consumption,4951,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/774,1,['consumption'],['consumption']
Energy Efficiency,"rse seqs 	1000; Threads 	28; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit Consensus 	false; Skip Query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Touch data file mmseq_form_db/A0A011_db ... Done.; Start computing multiple sequence alignments.; Query database type: Aminoacid; Target database type: Aminoacid; Segmentation fault. ## Context; After searching a single sequence (A0A011) over a db (uniref90) I wanted to obtain an MSA. I also want the gaps in the query so I added the --allow-deletion true flag. Over smaller alignments (for instance the one from A0A010) this works, but it does not for larger ones (30 vs 990 aligned seqs). Running the same command without the flag ends correctly over any sequence. ## Your Environment; * Git commit used (The string after ""MMseqs Version:""); dbeeb55b6cdf16118c221cf7943a70a1d2972daa. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; CPU: Intel Xeon E7-8860v4; $ cat /proc/cpuinfo | grep avx2; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch epb invpcid_single intel_pt ssbd ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdseed adx smap xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts flush_l1d; Cores: 4x18 (of which 28 have been used for the job); Memory: 3072 GB/node. * Operating system and version:; Ubuntu Xenial (16.04 LTS)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/167:2257,monitor,monitor,2257,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/167,1,['monitor'],['monitor']
Energy Efficiency,"ry_seqs_split_h: 0h 0m 0s 832ms; > Time for merging to query_seqs_split: 0h 0m 0s 878ms; > Time for processing: 0h 0m 3s 919ms; > prefilter tmp/7701176895607249840/search_tmp/9045538653068861586/query_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/target_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 2670930 type: Nucleotide; > Target split mode. Searching through 18 splits; > Estimated memory consumption: 326G; > Target database size: 100684280 type: Nucleotide; > Process prefiltering step 1 of 18; > ; > Index table k-mer threshold: 0 at k-mer size 15 ; > Index table: counting k-mers; > Segmentation fault (core dumped) ] 0.00% 1 eta -; > Error: Prefilter died; > Error: Search step died; > Error: Search died; > . ## Context. Hi I am trying to run an nucleotide-nucleotide search in mmseq2 with a custom database. This error does not occur with a different, smaller nucleotide database. Thank you very much for this amazing tool and all your hard work. ## Your Environment. I am using a google cloud VM with 64 CPUs and 416 GBs of memory on an ubuntu operating system, version 20.04. I install mmseq with the command. static build with AVX2 (fastest); `wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; tar xvfz mmseqs-linux-avx2.tar.gz; export PATH=$(pwd)/mmseqs/bin/:$PATH; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:7168,consumption,consumption,7168,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,1,['consumption'],['consumption']
Energy Efficiency,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:15011,consumption,consumption,15011,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,2,"['allocate', 'consumption']","['allocate', 'consumption']"
Energy Efficiency,"s; Time for merging to query_seqs_split_h: 0h 0m 0s 281ms; Time for merging to query_seqs_split: 0h 0m 0s 333ms; Time for processing: 0h 0m 1s 246ms; prefilter /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 250G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 . Query database size: 1298472 type: Nucleotide; Target split mode. Searching through 12 splits; Estimated memory consumption: 216G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.80M 6m 27s 363ms; Index table: Masked residues: 517008537; Index table: fill; [=================================================================] 7.80M 11m 24s 325ms; Index statistics; Entries: 27958919735; DB size: 168174 MB; Avg k-mer size: 26.038773; Top 10 k-mers; GGGGCAGCGTGATTT	319478; TAATCGTGCAGCGGG	292128; GTGCGCAGCGTATCG	276641; CTCTCGGGGGCGTGG	257406; ACAGTTAGTATGTGT	233646; TCCAGGGAGCATGGG	230906; AGTGGAATTTCATGG	224146; TCGCGCTCTGTAGTG	209357; ACTCACGGAGGAGGG	193555; GCCAACTCTAGGGAG	184395; Time for index table init: 0h 18m 59s 10ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 12); Query db start 1 to 1298472; Target db start 1 to 7796647; [=================================================================] 1.30M 5",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:6311,consumption,consumption,6311,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['consumption'],['consumption']
Energy Efficiency,"scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codons with gaps or unknown residues before an open reading frame is rejected; --contig-start-mode 	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:8070,reduce,reduce,8070,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['reduce'],['reduce']
Energy Efficiency,se size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [============================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29685,consumption,consumption,29685,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,se size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memor,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29030,consumption,consumption,29030,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,se size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29518,consumption,consumption,29518,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,"seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; * Operating system and version: Ubuntu Linux 16.04.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:1690,Reduce,Reduced,1690,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['Reduce'],['Reduced']
Energy Efficiency,"ssed 0 -v 3 . [=================================================================] 100.00% 1.32M 0s 321ms ; Time for merging to query_seqs_h: 0h 0m 0s 490ms; Time for merging to query_seqs: 0h 0m 2s 39ms; Time for processing: 0h 0m 3s 738ms; splitsequence tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 100.00% 2.64M 0s 246ms ; Time for merging to query_seqs_split_h: 0h 0m 0s 507ms; Time for merging to query_seqs_split: 0h 0m 0s 573ms; Time for processing: 0h 0m 2s 178ms; prefilter tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/target_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 2.0 . Query database size: 2644526 type: Nucleotide; Target split mode. Searching through 13 splits; Estimated memory consumption: 247G; Target database size: 99637107 type: Nucleotide; Process prefiltering step 1 of 13. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: Prefilter died; Error: Search step died; Error: First search died. ```. ## Environment; * AMD EPYC 7502P 32-Core Processor; * 320GB memory; * OS:; Ubuntu 20.04.2 LTS; Kernel: 5.4.0-70-generic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438:6987,consumption,consumption,6987,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438,1,['consumption'],['consumption']
Energy Efficiency,"ssing: 0h 0m 0s 3ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 9304 type: Aminoacid; Estimated memory consumption: 1007M; Target database size: 9304 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 9.30K 0s 119ms ; Index table: Masked residues: 99774; Index table: fill; [=================================================================] 100.00% 9.30K 0s 66ms ; Index statistics; Entries: 1733458; DB size: 498 MB; Avg k-mer size: 0.027085; Top 10 k-mers; IHDKNI 46; GPGGTL 34; LGGFVY 21; GQQIAR 19; HRLPLL 15; SCLWYL 15; RCKCRW 15; GGTHAY 15; GRGLAY 15; KSRRNY 15; Time for index table init: 0h 0m 0s 736ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9304; Target db start 1 to 9304; [=================================================================] 100.00% 9.30K 0s 164ms . 2.036021 k-mers per position; 245 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:16888,consumption,consumption,16888,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['consumption'],['consumption']
Energy Efficiency,"t HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salvocos/tmp/test_sonicpara/mmseqs2_src/build; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 40 CPUs 500Gbytes of shared memory; ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bogomips	: 5199.77; clflush size	: 64; cache_alignment	: 64; address sizes	: 46 bits physical, 48 bits virtual. ...; ```; * Operating system and version:; ```; $uname -a; Linux XXX 3.10.0-693.11.1.el7.x86_64 #1 SMP Fri Oct 27 05:39:05 EDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:14029,monitor,monitor,14029,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['monitor'],['monitor']
Energy Efficiency,"t calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codons with gaps or unknown residues before an open reading frame is rejected; --contig-start-mode 	2 	Contig start can be 0: incomplete, 1: complete, 2: both ; --contig-end-mode 	2 	Contig end can be 0: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:8174,reduce,reduce,8174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['reduce'],['reduce']
Energy Efficiency,"t mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 32. Target split mode. Searching through 9 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================] 100.00% 23.11M 27m 25s 83ms; Index table: Masked residues: 122354587; Index table: fill; tmp/17913398511991990568/createindex.sh: line 56: 114573 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):75af0c82edf34587548bacc865cfa1d2261a9696; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/540:3004,consumption,consumption,3004,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540,1,['consumption'],['consumption']
Energy Efficiency,"tmp -s 4; -Create a query database with: mmseqs2/bin/mmseqs createdb A0A011 A0A011_db; -Compare the execution time of the two following commands:; mmseqs2/bin/mmseqs search A0A011_db uniref90_db A0A011_align_db tmp -a -s 1 --num-iterations 3; jackhmmer --cpu 28 -E 1e-3 --incE 1e-3 --noali -N 3 -A stk_alignment output uniref90.fasta. ## Context; I've run many times slight variations of the commands listed above, in order to check the differences between the two programs and MMseqs does not seem to be quicker than JackHMMer.; The best time I obtained for MMseq2 is around 16 min while JackHMMer only requires 14 min.; Maybe I'm doing something wrong ... the HMMer version is HMMER 3.1b2. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:""); dbeeb55b6cdf16118c221cf7943a70a1d2972daa; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; CPU: Intel Xeon E7-8860v4; $ cat /proc/cpuinfo | grep avx2 ; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch epb invpcid_single intel_pt ssbd ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdseed adx smap xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts flush_l1d; Cores: 4x18 (of which 28 have been used for the job); Memory: 3072 GB/node; * Operating system and version:; Ubuntu Xenial (16.04 LTS)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/165:1853,monitor,monitor,1853,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/165,1,['monitor'],['monitor']
Energy Efficiency,"ubdb-mode 1 . Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 8ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 8338 type: Aminoacid; Estimated memory consumption: 1003M; Target database size: 8338 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 8.34K 0s 514ms; Index table: Masked residues: 3074; Index table: fill; [=================================================================] 8.34K 0s 572ms; Index statistics; Entries: 1408015; DB size: 496 MB; Avg k-mer size: 0.022000; Top 10 k-mers; GPGGTL 37; GLGNGK 26; ALGNGK 23; DLLDLP 21; FDDTDS 20; NGGSLK 17; DLLDMP 17; DVLDMP 17; GEQVAR 16; FDDTDT 16; Time for index table init: 0h 0m 2s 591ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8338; Target db start 1 to 8338; [=================================================================] 8.34K 26s 907ms. 903.365687 k-mers per position; 4641 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 88 sequences passed prefiltering per query sequence; 76 median result list",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:29063,consumption,consumption,29063,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['consumption'],['consumption']
Energy Efficiency,"unadopted data in the 'assignGroup' function, allowing for more effective clustering. ### Details. **1 Extended Search Process :**. > For the same k-mer group, the process of combining the representative sequence with each sequence has been extended. The algorithm now calculates sequence dissimilarity using adjacent sequence information. The most dissimilar sequence is selected as the next representative sequence, and this exploration process is repeated. If there are multiple sequences with the same level of dissimilarity, the most recently explored sequence is chosen as the representative sequence. Additionally, the selection of the most dissimilar sequence is limited to sequences that follow the current representative sequence in the search order. **2. Data Structure Challenges**. > The implementation of this method introduced challenges in maintaining the original in-place data structure. To overcome these challenges, a new data structure has been introduced with an additional buffer (slack space) at the end. The new data structure includes a default buffer size of 5%. . **3. Dynamic Memory Allocation**. > If memory becomes insufficient during operation, the structure dynamically resizes by splitting and reallocating memory based on the progress of the previous process. This approach ensures efficient memory usage and prevents potential memory shortages. ### Benchmark Results. > I conducted benchmarking on datasets randomly selected from the UniParc dataset, with sizes of 1.3M, 2.7M, 5.3M, 11M, 21M, 42M, and 85M. The results confirmed that the new algorithm effectively reduces the number of clusters while maintaining linearity, showing no significant time difference compared to the existing Linclust method. Despite these improvements, the algorithm still lags behind the easy-cluster method and does not fully reach the ideal results obtained by performing a quadratic search that captures all possible combinations. Thus, there remains room for further improvement.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873:1507,efficient,efficient,1507,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873,2,"['efficient', 'reduce']","['efficient', 'reduces']"
Energy Efficiency,"x-gnu/libthread_db.so.1"".; nr_mmseqs/nr_db_mapping exists and will be overwritten; nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:2037,allocate,allocate,2037,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,1,['allocate'],['allocate']
Integrability," --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 1.81K 0s 7ms; Time for merging to pref_rescore1: 0h 0m 0s 64ms; Time for processing: 0h 0m 0s 310ms; clust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Greedy Low Mem; Total time: 0h 0m 0s 13ms. Size of the sequence database: 1807; Size of the alignment database: 1807; Number of clusters: 757. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 49ms; c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:6626,wrap,wrapped-scoring,6626,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['wrap'],['wrapped-scoring']
Integrability," --split-memory-limit keyword should mitigate memory requirements; ## Current Behavior; Works only with standard MMSeqs2 compiled version, but not with MPI compiled version. . ## Steps to Reproduce (for bugs); Working on 60gb machine with 8cpus (each with 2 hyper threads); ${MMSeqs_bin}/mmseqs createDB in.fasta inDB; ${MMSeqs_bin}/mmseqs cluster inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 3G. Replacing {MMSeqs_bin} with {MMSeqs_non_MPI_bin} results in correct behavior without crashing. ## MMseqs Output (for bugs). ```; mmseqs linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 ; --split-memory-limit 500; linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 500; MMseqs Version: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 16; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1e-10; Seq. id. threshold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd pa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:1030,wrap,wrapped,1030,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['wrap'],['wrapped']
Integrability," -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 24ms; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 1ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 33ms; Create directory tmp2/6664721939282577716/clu_tmp; cluster tmp2/6664721939282577716/input tmp2/6664721939282577716/clu tmp2/6664721939282577716/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:4311,wrap,wrapped-scoring,4311,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['wrap'],['wrapped-scoring']
Integrability," 0m 0s 2ms; Time for processing: 0h 0m 0s 6ms; createsubdb experiments/tmp//6404161245249296443/order_redundancy experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 6ms; filterdb experiments/tmp//6404161245249296443/pref_filter1 experiments/tmp//6404161245249296443/pref_filter2 --filter-file experiments/tmp//6404161245249296443/order_redundancy . Filtering using file(s); [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_filter2: 0h 0m 0s 21ms; Time for processing: 0h 0m 0s 56ms; rescorediagonal experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_filter2 experiments/tmp//6404161245249296443/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:8377,wrap,wrapped-scoring,8377,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['wrap'],['wrapped-scoring']
Integrability," 1 . Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 1m 38s 696ms; filterdb All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_filter1 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_filter2 --filter-file All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/order_redundancy --threads 56 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 35.67M 56s 656ms; Time for merging to pref_filter2: 0h 0m 11s 819ms; Time for processing: 0h 1m 22s 652ms; rescorediagonal All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_filter2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 35.67M 9s 733ms; Time for merging to pref_rescore2: 0h 0m 12s 355ms; Time for processing: 0h 0m 38s 935ms; align All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:8212,wrap,wrapped-scoring,8212,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['wrap'],['wrapped-scoring']
Integrability," 224 overflows; 0 queries produce too many hits (truncated result); 41 sequences passed prefiltering per query sequence; 45 median result list length; 1350 sequences with 0 size result lists; Time for merging to pref_0_tmp_11: 0h 0m 0s 427ms; Time for merging to pref_0_tmp_11_tmp: 0h 0m 0s 867ms; Merging 12 target splits to pref_0; Preparing offsets for merging: 0h 0m 1s 151ms; [=================================================================] 1.30M 14s 938ms; Time for merging to pref_0: 0h 0m 0s 523ms; Time for merging target splits: 0h 0m 18s 286ms; Time for merging to pref_0_tmp: 0h 0m 6s 63ms; Time for processing: 11h 52m 0s 943ms; align /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 /tmp//2989869989197200687/search_tmp/6775691152365959592/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1298472 type: Nucleotide; Target database size: 90056195 type: Nucleotide; Calculation of alignments; [=================================================================] 1.30M 1h 24m 48s 423ms; Time for merging to aln: 0h 0m 0s 504ms; 662682155 alignments calculated; 492943101 sequence pairs passed the thresholds (0.743861 of overall calculated); 379.633209 hits per query sequence; Time for processing: 1h 27m 9s 264ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 -v ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:23149,wrap,wrapped-scoring,23149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['wrap'],['wrapped-scoring']
Integrability," 2; MEMYY 2; Time for index table init: 0h 0m 0s 118ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 23ms; [==========================================================> ] 89.54% 138 eta 0s; 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 795ms; align clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 clu/sim2_tmp/12164117771218227067/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 46ms; Time for merging to aln_step0: 0h 0m 0s 4ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/aln_st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:29818,wrap,wrapped-scoring,29818,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:5253,wrap,wrapped-scoring,5253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['wrap'],['wrapped-scoring']
Integrability," Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz; CPU family: 6; Model: 85; Thread(s) per core: 2; Core(s) per socket: 16; Socket(s): 1; Stepping: 7; BogoMIPS: 4999.98; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht; syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid ap; erfmperf tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt; tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch pti fsgsbase; tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves ida arat pku ospke avx512_vnni; Virtualization features: ; Hypervisor vendor: KVM; Virtualization type: full; Caches (sum of all): ; L1d: 512 KiB (16 instances); L1i: 512 KiB (16 instances); L2: 16 MiB (16 instances); L3: 35.8 MiB (1 instance); NUMA: ; NUMA node(s): 1; NUMA node0 CPU(s): 0-31; Vulnerabilities: ; Gather data sampling: Unknown: Dependent on hypervisor status; Itlb multihit: KVM: Mitigation: VMX unsupported; L1tf: Mitigation; PTE Inversion; Mds: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Meltdown: Mitigation; PTI; Mmio stale data: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Retbleed: Vulnerable; Spec rstack overflow: Not affected; Spec store bypass: Vulnerable; Spectre v1: Mitigation; usercopy/swapgs barriers and __user pointer sanitization; Spectre v2: Mitigation; Retpolines, STIBP disabled, RSB filling, PBRSB-eIBRS Not affected; Srbds: Not affected; Tsx async abort: Not affected",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:3332,Depend,Dependent,3332,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,1,['Depend'],['Dependent']
Integrability," Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 56; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 7780 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 7.78K 0s 362ms ; Time for merging to aln_2: 0h 0m 0s 3ms. 30 alignments calculated.; 30 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.003856 hits per query sequence.; Time for processing: 0h 0m 3s 496ms; mergedbs IP_DB/IP_DB result_DB/result_DB tmp/16138406286044646862/aln_merge tmp/16138406286044646862/aln_2 --compressed 0 -v 3 . Merging the results to result_DB/result_DB; Time for merging to result_DB: 0h 0m 0s 0ms; Time for processing: 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:11728,wrap,wrapped-scoring,11728,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['wrap'],['wrapped-scoring']
Integrability," guess is that there is a bug in the `summarizeresult` command being run when `--greedy-best-hits` is passed in:; `summarizeresult tmp/15248047069833069253/result tmp/15248047069833069253/result_best -a 1 --overlap 0 -c 1 --threads 8 --compressed 0 -v 3`. But it's quite possible I'm missing something... thanks for your time!. ## Expected Behavior; A result.tsv with content; ```; random_seq	random_seq	1.000	50	0	0	1	50	1	50	1.586E-38	108; ```. ## Current Behavior; An empty result.tsv. ## Steps to Reproduce (for bugs); ```; echo "">random_seq\nNTLGEQNARIWSEREVGICLARKHPFLDFSVVKDMIATGLGTDYKALSPQ"" > seq.fasta; mmseqs easy-search seq.fasta seq.fasta result.tsv tmp --cov-mode 1 -c 1 --greedy-best-hits; ```. ## MMseqs Output (for bugs); <details>. ```; Create directory tmp; easy-search seq.fasta seq.fasta result.tsv tmp --cov-mode 1 -c 1 --greedy-best-hits . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	1; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	8; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:1797,wrap,wrapped,1797,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['wrap'],['wrapped']
Integrability," in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis module) [0]; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [0]; --alignment-output-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; 5: score only (output) cluster format [0]; --wrapped-scoring BOOL Double the (nucleotide) query sequence during the scoring process to allow wrapped diagonal scoring around end and start [0]; -e DOUBLE List matches below this E-value (range 0.0-inf) [1.000E-03]; --min-seq-id FLOAT List matches above this sequence identity (for clustering) (range 0.0-1.0) [0.000]; --min-aln-len INT Minimum alignment length (range 0-INT_MAX) [0]; --seq-id-mode INT 0: alignment length 1: shorter, 2: longer sequence [0]; --alt-ali INT Show up to this many alternative alignments [0]; -c FLOAT List matches above this fraction of aligned (covered) residues (see --cov-mode) [0.800]; --cov-mode INT 0: coverage of query and target; 1: coverage of target; 2: coverage of query; 3: target seq. length has to be at least x% of query length; 4: query seq. length has to be at least x% of target length; 5: short seq. needs to be at least x% of the other seq. length [0]; --max-rejected INT Maximum rejected alignments before alignment calculation for a query is stopped [2147483647]; --max-accept INT Maximum accepted alignment",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:2393,wrap,wrapped-scoring,2393,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,2,['wrap'],"['wrapped', 'wrapped-scoring']"
Integrability," k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 117ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 46ms. 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 845ms; align clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 clu/sim1_tmp/7842071913732967198/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 55ms; Time for merging to aln_step0: 0h 0m 0s 5ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/aln_ste",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:14106,wrap,wrapped-scoring,14106,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability," mmseqs databases UniRef90 /dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik --threads 12; ```; ```; mmseqs easy-taxonomy /dept/appslab/datasets/dp_ZymoMockComparison/Zymo6331-STD.fasta /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 STD_Results /pbi/flash/dportik/mmseqs --threads 24 --split-memory-limit 80G ; ```. ## MMseqs Output (for bugs); ### Log file:; ```; easy-taxonomy /dept/appslab/datasets/dp_ZymoMockComparison/Zymo6331-STD.fasta /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 STD_Results /pbi/flash/dportik/mmseqs --threads 24 --split-memory-limit 80G. MMseqs Version: 13.45111; ORF filter 0; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 80G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort resu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:2299,wrap,wrapped,2299,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['wrap'],['wrapped']
Integrability," previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 22 --compressed 0 -v 3 . Compute score and coverage; Query database size: 77815083 type: Aminoacid; Target database size: 77815083 type: Aminoacid; Calculation of alignments; [Error: Alignment step died; Error: Search died. The command is the same as used for previous clustering, the file is not bigger, I have no idea what is the issue. Any help is appreciated, thanks,; G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265:1819,wrap,wrapped-scoring,1819,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265,1,['wrap'],['wrapped-scoring']
Integrability," processing: 0h 8m 25s 481ms. cluster uniref90-DB-wwmj uniref90-DB-wwmj_clu tmp/ --cov-mode 2 -c 0.8 --min-seq-id 0.9 . MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 2; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 64; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:2206,wrap,wrapped,2206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['wrap'],['wrapped']
Integrability,"""there must be an error"" messages while clustering",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15:25,message,messages,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15,1,['message'],['messages']
Integrability,"# Current Behavior; The download FASTA targets for the 'nr' and 'nt' databases are no longer being updated by NCBI. Explanation: focusing on 'NR' as an example, the URL in [databases.sh](https://github.com/soedinglab/MMseqs2/blob/87e7103d289029dc3345f85ea9a4c4c6d6416e46/data/workflow/databases.sh#L500) points to https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/nr.gz. The README in that FTP location states:. > In April 2024, the BLAST FASTA files in this directory will no longer be; available. You can easily generate FASTA files yourself from the formatted; BLAST databases by using the BLAST utility blastdbcmd that comes with the; standalone BLAST programs. See NCBI Insights for more details; https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/. Indeed, the nr.gz file was last updated on 2024-02-07. Looking in the [parent directoy](https://ftp.ncbi.nlm.nih.gov/blast/db), the various NR database files have been updated as recently as 2024-10-02. Therefore, the download targets for mmseqs2 are out of date by about 8 months, and this problem will get worse over time. . NCBI's solution for users is to download the blast-format files and then generate their own FASTA files:. > * Sequences in FASTA format can be generated from the pre-formatted databases by using the blastdbcmd utility;. Obviously this isn't ideal for many users, and it's been getting [at least some hate](https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/). ## Solution; Unless NCBI backflips on their decision, the only solution would be to change the `mmseqs databases` workflow for these databases to have an intermediate (slow) step of extracting a FASTA file before the `mmseqs createdb` step is run. However, this would obviously require extra dependencies, i.e. the `blastdbcmd`. Otherwise, I suppose you could host periodic builds of the databases on a server or something. Just thought I should bring this to your attention in case you are unaware :smile:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/893:1918,depend,dependencies,1918,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/893,1,['depend'],['dependencies']
Integrability,"## Context; I am using PHARROKA (available on Github) to annotate bacteriophage genomes. MMseq2 is a required dependency. It was working perfectly on my MacBook Pro purchased in 2011. I recently switched to a new one (MacBook M3-pro) and it is not working anymore (see the above PHARROKA output involving MMseqs). I am very far from being a developer and I am only a self-taught bioinformatician. I am thus seeking help !. I used Brew to install MMseqs, my OS is Mac OS X Sonoma 14.4.1. Thanks !. Nico",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/834:110,depend,dependency,110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834,1,['depend'],['dependency']
Integrability,"## Current Behavior; Trying to run search on a DB using Uniref100 as target.; Prefiltering seems to work fine, but software crashes while aligning, returning:; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Steps to Reproduce (for bugs); Command; $ mmseqs search ../hmmsearchDB ~/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --min-length 35. ## MMseqs Output (for bugs); MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 64; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:686,wrap,wrapped,686,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['wrap'],['wrapped']
Integrability,"## Current Behavior; When clustering is done I get these error messages about buffer size, I am not sure if this means there is a problem with the results. Should I run it again or is this fine?. ## MMseqs Output (for bugs); Clustering step 1...; Clustering step 2...; Clustering step 3...; Clustering step 4...; Clustering step 5...; Writing the results...; Tried to process the clustering list for the query 488890 , the length of the list = 169845; Output buffer size < clustering result size! (1000000 < 1559909); Increase buffer size or reconsider your parameters -> output buffer is already huge ;-); Tried to process the clustering list for the query 1208093 , the length of the list = 234332; Output buffer size < clustering result size! (1559910 < 2152804); Increase buffer size or reconsider your parameters -> output buffer is already huge ;-); Tried to process the clustering list for the query 11891971 , the length of the list = 277233; Output buffer size < clustering result size! (2152805 < 2534475); Increase buffer size or reconsider your parameters -> output buffer is already huge ;-); Time for merging files: 0 h 0 m 1 s; ...done. ## Your Environment; MMseqs Version:	06c71aa6c8003203db75ebbb9f213fd34abcabd4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/61:63,message,messages,63,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/61,1,['message'],['messages']
Integrability,"## Expected Behavior. ## Current Behavior; $ mmseqs search queryDB sequenceDB resultDB tmp; search queryDB sequenceDB resultDB tmp . MMseqs Version: 	GITDIR-NOTFOUND; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/817:291,wrap,wrapped,291,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/817,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior. * why did the error happen?; * how to fix it?. ## Current Behavior. ## Steps to Reproduce (for bugs); data: 2.1 billion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our docume",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/730:522,wrap,wrapped,522,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/541:65,depend,dependencies,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541,1,['depend'],['dependencies']
Integrability,"## Expected Behavior. Don't crash on envdb when sequence length is less than 12 aa long (for example on `SEGGQDFWL` or `GSSGLISMPRV`). ## Current Behavior. MMseqs2 process crashes on aligning ColabFold envdb every time if input `.fasta` file contains short sequence (this also happens if .fasta file contains more than one sequence). UniRef database is processed every time without issue, crash happens only on envdb processing. ```; align results_700_only_456_fasta_700_5/prof_res ../db_sources/colabfold_envdb_202108_db.idx results_700_only_456_fasta_700_5/tmp/17071544472219224293/pref_0 results_700_only_456_fasta_700_5/tmp/17071544472219224293/aln_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Index version: 16; Generated by: fcf52600801a73e95fd74068e1bb1afb437d719d; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 209335862 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Segmentation fault (core dumped); Error: Alignment died; Traceback (most recent call last):; File ""/home/x/genomic/alphafold2/venv38alphafold2/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:753,wrap,wrapped-scoring,753,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,1,['wrap'],['wrapped-scoring']
Integrability,"## Expected Behavior. I should get a result_mmseqs2 and tmp file corresponding to the research. I ran the following command to do so: . `/beegfs/data/eludoc/TOOLS/MMseqs2/build/bin/mmseqs search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5`. ## Current Behavior. I get the following error message : . ```; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; eludoc@pbil-deb:/beegfs/data/eludoc/these/NCBI_protein_viruses$ /beegfs/data/eludoc/TOOLS/MMseqs2/build/bin/mmseqs search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5. search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5 . MMseqs Version: 	8c79865b60025674b9c825fd7238bd0b95503bc7; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/234:604,message,message,604,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234,1,['message'],['message']
Integrability,"## Expected Behavior. The E-values should be robust to changes in the number of splits. ## Current Behavior. Splitting the database during search (`--split-mode 0`) will result in varying E-values, depending on the number of splits. ## Steps to Reproduce (for bugs). Run `mmseqs search` with `--split-mode 0` and varying values for `--split`. ## MMseqs Output (for bugs). Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Suggestion. One possible way to fix this would be to set a constant database size internally when using `--split-mode 0`. It could be useful to have this parameter exposed to the user, similar to `-Z` in HMMER:. ```; -Z <x> Assert that the total number of targets in your searches is; <x>, for the purposes of per-sequence E-value calculations,; rather than the actual number of targets seen.; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/653:198,depend,depending,198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/653,1,['depend'],['depending']
Integrability,"## Expected Behavior. running blastp-like search against TrEMBL. ## Current Behavior. Crash at prefilter stage. ## Steps to Reproduce (for bugs). mmseqs search tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/RESULT.mms tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep. ## MMseqs Output (for bugs). > MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; > Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; > Add backtrace 	false; > Alignment mode 	2; > Allow wrapped scoring 	false; > E-value threshold 	0.001; > Seq. id. threshold 	0; > Min alignment length 	0; > Seq. id. mode 	0; > Alternative alignments 	0; > Coverage threshold 	0; > Coverage mode 	0; > Max sequence length 	65535; > Compositional bias 	1; > Realign hits 	false; > Max reject 	2147483647; > Max accept 	2147483647; > Include identical seq. id. 	false; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	nucl:5,aa:11; > Gap extension cost 	nucl:2,aa:1; > Zdrop 	40; > Threads 	32; > Compressed 	0; > Verbosity 	3; > Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; > Sensitivity 	5.7; > k-mer length 	0; > k-score 	2147483647; > Alphabet size 	nucl:5,aa:21; > Max results per query 	300; > Split database 	0; > Split mode 	2; > Split memory limit 	0; > Diagonal scoring 	true; > Exact k-mer matching 	0; > Mask residues 	1; > Mask lower case residues 	0; > Minimum diagonal score 	15; > Spaced k-mers 	1; > Spaced k-mer pattern 	; > Local temporary path 	; > Rescore mode 	0; > Remove hits by seq. id. and coverage	false; > Sort results 	0; > Mask profile 	1; > Profile E-value threshold 	0.1; > Global sequence weighting 	false; > Allow deletions 	false; > Filter MSA 	1; > Maximum seq. id. threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select N most diverse seqs 	1000; > Omit consensus 	false; > Min codons in o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:566,wrap,wrapped,566,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior; Compare a set of distinct unknown proteins to PHROGs DB via MMseqs2. ## Current Behavior; Error: Alignment died. All .index are empty. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb GENOMAD/genomad_output/Bins_summary/Bins_virus_proteins.faa PHROGS/target_seq ##This command seems to work. mmseqs search PHROGS/phrogs_mmseqs_db/phrogs_profile_db PHROGS/target_seq PHROGS/Bins_PHROGS PHROGS/tmp -s 7 . ##This command is very long and failed. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align MMSEQ2_PHROGS/phrogs_mmseqs_db/phrogs_profile_db MMSEQ2_PHROGS/target_seq MMSEQ2_PHROGS/tmp/3583634493861447998/pref_0 MMSEQ2_PHROGS/Bins_PHROGS --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 38880 type: Profile; Target database size: 75478 type: Aminoacid; Calculation of alignments; Score of forward/backward SW differ: 539 542. Q: 0 T: 31246. ] 0.00% 1 eta -; Start: Q: 6, T: 0. End: Q: 192, T 154; Score of forward/backward SW differ: 1751 1748. Q: 5165 T: 52236.; Start: Q: 2, T: 7. End: Q: 182, T 267; Error: Alignment died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; I",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/677:949,wrap,wrapped-scoring,949,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/677,1,['wrap'],['wrapped-scoring']
Integrability,"## Expected Behavior; Completion of download and db creation for GTDB. ## Current Behavior; I installed release 14-7e284 via conda yesterday and tried to download various databases via the databases module. The following error messages were generated for GTDB; other databases were generated without errors. I thought problems with GTDB were fixed in previous versions (e.g., see issue [#742](https://github.com/soedinglab/MMseqs2/pull/742)), but perhaps changes were reverted in the latest release via conda?. Here are the relevant error messages (full output also included below):. 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseComma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:227,message,messages,227,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,2,['message'],['messages']
Integrability,"## Expected Behavior; Completion to provide output file. ## Current Behavior; It dies with the following message:; `Target database size: 460882 type: Nucleotide; tmp/288148333766582684/search_tmp/3592684985880184946/blastp.sh: line 99: 141854 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: Search died`. ## Steps to Reproduce (for bugs); The command I used was:. `mmseqs easy-search --search-type 3 two_test.fa ../../../reference.fna two_test_out tmp`. where `two_test.fa` is a file with two DNA sequences, and reference.fna is a ~4G file with many DNA sequences. . ## MMseqs Output (for bugs); Here's [the gist](https://gist.github.com/sodiumnitrate/5bf79ff79a6ccea91bf32831d9db0ca0) for the full output. ## Context; Trying to search for two DNA sequences in `two_test.fa` within a large reference file `reference.fna`. ## Your Environment; I pulled the latest version (`3e436173321a2d0365a08bfb3b281108ed9ad414`) from the github repo and compiled it myself. Using `CMake v3.24.3` and `GCC v12.2.0`. Running on a node with 32 CPUs, and 5G memory per CPU (160G total). Interestingly, this command worked twice before it stopped working. Tried again by removing the `tmp` folder, but that did not make a difference. I can verify read access to both fasta files, as well as write access to the directory I'm running the command in. What could be the issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/718:105,message,message,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/718,1,['message'],['message']
Integrability,"## Expected Behavior; Hi there! I am hoping to cluster a fasta file of contigs from an assembly of 134 samples. . ## Current Behavior; Getting error message that entries are longer than max sequence length of 65535 ([see error output](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e)). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. Command: `mmseqs easy-cluster scaffolds.fasta MRN_clustered tmp`. ## MMseqs Output (for bugs); [See output here](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e). ## Context; Am I missing an option for controlling max sequence length in mmseqs? Allowing for large contigs would be helpful in this context of a cross-assembly from 134 samples, containing 422691 sequences ranging in length from 679 kbp to 127 bp. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: MMseqs2 Version: 8.fac81; * Which MMseqs version was used: Installed via miniconda on ubuntu server. ; * Server specifications: 80 core server, 1.5 TB memory; * Operating system and version: ubuntu 16.04.5. Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/183:149,message,message,149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/183,1,['message'],['message']
Integrability,"## Expected Behavior; Hi! I'm clustering ~60000 nucleotide sequences, each 250bp to 500bp. ; Here is the command I use; mmseqs cluster shrimpDB shrimp.clu97 tmp97 --cluster-mode 0 -s 7.5 --min-seq-id 0.97 --min-aln-len 200. ## Current Behavior; I got several lines of error messages:; there must be an error: 50016 deleted from 30868 that now is empty, but not assigned to a cluster; there must be an error: 33062 deleted from 15885 that now is empty, but not assigned to a cluster; there must be an error: 40430 deleted from 27586 that now is empty, but not assigned to a cluster; there must be an error: 13350 deleted from 28482 that now is empty, but not assigned to a cluster; there must be an error: 11573 deleted from 27334 that now is empty, but not assigned to a cluster. ## MMseqs Output (for bugs); (base) [xshan@node422 blast]$ mmseqs cluster shrimpDB shrimp.clu97 tmp97 --cluster-mode 0 -s 7.5 --min-seq-id 0.97 --min-aln-len 200; Create directory tmp97; cluster shrimpDB shrimp.clu97 tmp97 --cluster-mode 0 -s 7.5 --min-seq-id 0.97 --min-aln-len 200. MMseqs Version: 	bb0a1b3569b9fe115f3bf63e5ba1da234748de23; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	20; Compressed 	0; Verbosity 	3; A",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:274,message,messages,274,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['message'],['messages']
Integrability,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480:998,depend,dependencies,998,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480,1,['depend'],['dependencies']
Integrability,"## Expected Behavior; I have been trying to build the colabfold expandable profile databases on my local machine, however I am encountering an error when running the tsv2exprofiledb command. The command runs, but fails halfway through with the below error messages. ## Steps to Reproduce (for bugs); For uniref30: mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103; For colabfold metagenomic db: mmseqs tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db. ## MMseqs Output (for bugs); ### uniref30: ; tsv2exprofiledb uniref30_2103 uniref30_2103_db. MMseqs Version: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; Verbosity 3. tsv2db uniref30_2103.tsv uniref30_2103_db_tmp --output-dbtype 0 -v 3. Output database type: Aminoacid; Time for merging to uniref30_2103_db_tmp: 0h 0m 29s 721ms; Time for processing: 0h 3m 27s 506ms; compress uniref30_2103_db_tmp uniref30_2103_db -v 3. Can not set mode for uniref30_2103_db.0!. ### colabfold_env_db_202108_db:. mmseqs tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db; tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db. MMseqs Version: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; Verbosity 3. tsv2db colabfold_envdb_202108.tsv colabfold_envdb_202108_db_tmp --output-dbtype 0 -v 3. Output database type: Aminoacid; Time for merging to colabfold_envdb_202108_db_tmp: 0h 3m 36s 590ms; Time for processing: 0h 20m 26s 68ms; compress colabfold_envdb_202108_db_tmp colabfold_envdb_202108_db -v 3. Failed to mmap memory dataSize=38374278339 File=colabfold_envdb_202108_db_tmp. Error 12. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; * Which MMseqs version was used: Compiled from source; * Operating system and version: Ubuntu WSL2 on Windows 10. I've tried deleting and redownloading the databases to account for possible file corruption, my only other thought is that it could be a memory issue, since I am t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/530:256,message,messages,256,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/530,1,['message'],['messages']
Integrability,"## Expected Behavior; I try to do download database but the commande line give in the manual doesn't work. ## Current Behavior; error message : ; ' Invalid Command: databases; Did you mean ""mmseqs clusterupdate""? '. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; i use this line :; 'mmseqs databases UniProtKB/Swiss-Prot testdb/swissprot tmp'. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; no output, just error message; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271:134,message,message,134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271,2,['message'],['message']
Integrability,"## Expected Behavior; I try to use easy-linsearch and linsearch but both have same issue : empty files; First, I have try easy-linsearch with the line :; ""$ mmseqs easy-linsearch /work/cbelliardo/6-ensembl_clust/metag_G-rosea.fa /bighub/hub/DB/mmseq_swissprot/swissprot out tmp --search-type 2 -v 3 --threads 8""; but the output ( out file ) is empty without error message. Then i have try whit linsearch cmd.; $ mmseqs createdb metag_G-rosea.fa queryDB; $ mmseqs linsearch queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB tmp; $ mmseqs convertalis queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB resultDB.m8 ; I have the same issue. . The metag_G-rosea.fa file is a fasta file with 80 charactere by line. I have try with search and it's work really well. so, the file seems to be ok. ## MMseqs Output (for bugs); createdb metag_G-rosea.fa queryDB . MMseqs Version: 	10.6d92c; Max sequence length 	65535; Split seq. by length 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Assuming DNA database, forcing parameter --dont-split-seq-by-len true; Converting sequences; [; Time for merging into queryDB_h by mergeResults: 0h 0m 0s 107ms; Time for merging into queryDB by mergeResults: 0h 0m 0s 116ms; Time for merging into queryDB.lookup by mergeResults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 479ms; Tmp tmp folder does not exist or is not a directory.; extractorfs queryDB tmp/2730103712073724212/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames; 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 101 0s 57ms; Time for merging into tmp/2730103712073724212/q_orfs_aa_h by mergeResults: 0h 0m 0s 174ms; Time for merging into tmp/2730103712073724212/q_orfs_aa b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:364,message,message,364,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['message'],['message']
Integrability,"## Expected Behavior; I want to update my clusters after a database update (in which I add new sequences but also delete sequences compared to the old database). ; The clusterupdate command works, but when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result data",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272:275,message,message,275,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272,1,['message'],['message']
Integrability,"## Expected Behavior; I want use easy-linclust to cluster protein seqs.; ## Current Behavior; mmseqs easy-linclust all_seq.fasta clusterRes tmp --cov-mode 0 --min-seq-id 0.4. ## MMseqs Output (for bugs); Create directory tmp; easy-linclust all_seq.fasta clusterRes tmp --cov-mode 1 --min-seq-id 0.4 . MMseqs Version: 	a14688744081c15439fa3092eec9dfd8be40440b; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	64; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.4; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb all_seq.fasta tmp/8115150149931881526/inpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:651,wrap,wrapped,651,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior; I was testing the example of `mmseqs easy-search examples/QUERY.fasta examples/DB.fasta alnRes.m8 tmp`. But I didn't see `alnRes.m8` in aimed `tmp` folder.; ## Current Behavior; ```; [lihuilin@login01 MMseqs2]$ ls; azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src util; [lihuilin@login01 MMseqs2]$ mmseqs easy-search examples/QUERY.fasta examples/DB.fasta alnResult.m8 tmp; Create directory tmp; easy-search examples/QUERY.fasta examples/DB.fasta alnResult.m8 tmp. MMseqs Version: 87e7103d289029dc3345f85ea9a4c4c6d6416e46; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 40; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Glo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:717,wrap,wrapped,717,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['wrap'],['wrapped']
Integrability,## Expected Behavior; It should be possible to download `pdb_seqres.txt.gz` from `ftp.wwpdb.org`. ## Current Behavior; It seems the protocol is getting deprecated. We should use `files.wwpdb.org` instead. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; ```bash; mmseqs databases PDB mmseqs ~/data/tmp; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; databases PDB mmseqs /home/aomidi/data/tmp. MMseqs Version: 	6f45232ac8daca14e354ae320a4359056ec524c2; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	20; Verbosity 	3. 11/04 11:35:29 [NOTICE] Downloading 1 item(s); *** Download Progress Summary as of Sat Nov 4 11:36:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. *** Download Progress Summary as of Sat Nov 4 11:37:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. *** Download Progress Summary as of Sat Nov 4 11:38:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/772:132,protocol,protocol,132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/772,1,['protocol'],['protocol']
Integrability,"## Expected Behavior; Not crashing, with a better error message if this is a user problem. ## Current Behavior; Seg Fault. 90% of profile searches are fine against this database, but others segfault. example below. ## Steps to Reproduce (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2; ```. ## MMseqs Output (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local tempor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:56,message,message,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,2,"['message', 'wrap']","['message', 'wrapped']"
Integrability,"## Expected Behavior; Not sure. ## Current Behavior; After running; `mmseqs easy-search --search-type 3 --num-iterations 2 --threads 1 sequences/5LJ5_5.fasta databases/MSA_debug.fasta results/result tmp`. the program crashes with; `Can not allocate entries memory in IndexTable`. _Update:_; * Appending the query sequence to the database (which should assure at least one match is found) results in a different crash message: `Query sequence 0 has a result with no diagonal information. Please check your database.`; * Also, the log show query database size to be 2 which is weird because there is only one sequence in the file. But I can't find anything wrong with query .fasta file. _Update (2022-09-08)_:; Was trying out to the iterative step manually and ended up with the following error when trying to compute the profile:; ```; Invalid input database and --search-type combination; queryDbType: Profile; targetDbType: Nucleotide; targetSrcDbType: Unknown; searchMode: 3; ```; I suppose that mean profile search against a nucleotide database is not possible? I've also realized that there are many iterative profile search tools for proteins (psi-blast, jackhmmer) but I don't know a single one for nucleotide sequences. Is there some reason while searching with profiles is not possible in case of nucleotide sequences?. ## Context; Hi, I would like to compute MSA alignments from blast nt database (https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/) for multiple RNA sequences. Ideally, the procedure should be similar to Colabfold's MSA computation and there should be more than one search iteration for each sequence.; Note that I am limited to ~1TB RAM and the nt database index (created by createindex) does not fit into memory.; What would be the best way to go about it? . ## Steps to Reproduce (for bugs); ### 5LJ5_5.fasta:; >5LJ5_5; GUUCGCGAAGUAACCCUUCGUGGACAUUUGGUCAAUUUGAAACAAUACAGAGAUGAUCAGCAGUUCCCCUGCAUAAGGAU; GAACCGUUUUACAAAGAGAUUUAUUUCGUUUU. ### msa_debug; >URS0000000021 rRNA from 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:417,message,message,417,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['message'],['message']
Integrability,"## Expected Behavior; Precompute mmseqs index tables are generate using `createindex`. ## Current Behavior; Fails after a few minutes of computation with the following error message:; **indexdb died**. ## Steps to Reproduce (for bugs). > Download the Uniclust30 database (August 2018); `wget --verbose http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz; `. > Extract the downloaded archive . > Convert the hhm file (uniclust30_2018_08_hhm_db) to MMseqs profile DB; `mseqs convertprofiledb uniclust30_2018_08_hhm_db profile_from_hmm --threads 30 -v 3; `. > Generate the index; `mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3`. ## MMseqs Output (for bugs); ```; > mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3; Program call:; createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130:174,message,message,174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130,1,['message'],['message']
Integrability,"## Expected Behavior; Run mmseq search with an array of jobs. ## Current Behavior; As a test, I began with an array of 5 jobs only. 2 of them failed with a different error message. When I run them alone, they work. This behaviour is similar to the issue #239 . ## Steps to Reproduce (for bugs); `sarray -J mmseq --mail-type=ARRAY_TASKS,FAIL commandMMseqs --%=5`; where commandMMseqs contains:; `sbatch command_mmseq2_model.sbatch GCA_018105865.1 GCA_901001135.2` ; `sbatch command_mmseq2_model.sbatch GCA_009193005.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_905160935.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_019095985.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_001703475.1 GCA_901001135.2`. command_mmseq2_model.sbatch contains:; ```; #!/bin/bash; #; #SBATCH -N 1 # nombre de nœuds; #SBATCH -c 20 # nombre de cœurs sur ce meme noeud; #SBATCH --mem 50G # mémoire vive pour l'ensemble des cœurs; #SBATCH -J mmseq. module load system/Miniconda3-4.7.10 ; module load bioinfo/mmseqs2-v13.45111. mmseqs search copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out tmp -s 5.7 --search-type 3 --threads 20 --max-seqs 50 ; mmseqs filterdb mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit --extract-lines 1 ; mmseqs convertalis copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.*[0-9]* &; awk '{if ($3>=0.75 && $4>=300 && $12>=200) print $0}' mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab > mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab.filtered; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; ```. ## MMseqs Output (for bugs); One job fails ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/607:172,message,message,172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607,1,['message'],['message']
Integrability,"## Expected Behavior; Run rbh using computer clusters.; ## Current Behavior; I am running 'mmseqs rbh' within 1000 jobs in parallel using High-performance computing. But there are always some jobs failed due to different error messages(`STDERR`). ## Steps to Reproduce (for bugs); this is my cmd to run rbh:; ```sh; $ mmseqs rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files; ```; so `$db_name` is a variable and for parallel jobs, it's the element of my name list. ; ## MMseqs Output (for bugs); there are several kinds of `STDERR` files:; ```sh; Could not delete /userfolder/rbh/result/tmp/latest!; ```; or; ```sh; Could not write file tmp/rbh.sh!; ```; and ; ```sh; Failed to execute tmp/rbh.sh with error 26.; ```; Even though the `STDERR` files are different, all `STDOUT` are quite similar: it seems that they all collapse in the middle of the process. The corresponding output is ; ```sh; rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files. MMseqs Version: f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Lo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/239:227,message,messages,227,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239,1,['message'],['messages']
Integrability,"## Expected Behavior; Set RAM to 1.4T as specified by `--split-memory-limit 1400G`; ## Current Behavior; MMseqs set the limit to only 1T RAM; ## Steps to Reproduce (for bugs); I set `--split-memory-limit` to 1400G using the following command; ```; mmseqs easy-linclust {uniprot_sprot,uniprot_trembl,metaclust_nr,MERC,SRC}.fasta \; linclust_results/universedb-100 \; tmp/universedb-100 \; -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 1 \; --split-memory-limit 1400G; ```. ## MMseqs Output (for bugs); In the parameter header printed by MMseqs at the begging, the `Split memory limit` shown as 1T.; ```; MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 1; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 1T # <================ Shown here; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/328:877,wrap,wrapped,877,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/328,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior; Successful create a search resultDB when run `mmseqs search query/queryDB target/tragetDB search/resultDB -s 7.5 --search-type 3`; but fail when run `mmseqs search query/queryDB target/tragetDB search/resultDB -s 7.5 --search-type 3 --num-iterations 2`; ## Current Behavior; Error: Alignment died; Error: Search step died; ## Steps to Reproduce (for bugs); ```; mmseqs createdb query.fasta query/queryDB; mmseqs createdb targegt.fasta target/targetDB; mmseqs query/queryDB target/targetDB search/resultDB tmp -s 7.5 --search-type 3 --num-iterations 2; ```. ## MMseqs Output (for bugs). > MMseqs Version: 	df77d9e6cf640fe8990f247441ab44d4f4ad9cdc; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	2; Max sequence length 	10000; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; R",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:792,wrap,wrapped,792,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior; Summary: Running linclust or clust with a very big database leads to a heavy slowdown in the rescorediagonal part. Expected the job to continue much faster. It releases a warning that says `Can not touch X into main memory` and the job continues running.; ## Current Behavior; The job is stuck at rescorediagonal with no output after several hours. The job is however accesing the indexes inside of the temporary folder.; Is there anyway to fix this? Or speed it up?; ## MMSeqs Output; linclust JGI JGI_nr tmp --cluster-mode 2 --cov-mode 1 -c 0.99 --min-seq-id 0.95 --split-memory-limit 300G . MMseqs Version: 	c498f51053e2f550a4ab4bee534b0ef80033a2b3; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Threads 	96; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.99; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Resco",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:966,wrap,wrapped,966,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior; The functional annotation of representative sequences (75 GB) in a FASTA file with eggNOG and PFAM. ## Current Behavior; I started with the eggNOG annotation, which is running for more than 120 hours now. Is there a way to speed the process up?. ## MMseqs Output (for bugs); ```; repSEQS.fna; Create directory repSEQS_eggnog.tmp; easy-search repSEQS.fna databases/eggnog repSEQS_eggnog.csv repSEQS_eggnog.tmp \; --dbtype 2 \; --split-memory-limit 300G \; --threads 56 \; --remove-tmp-files false \; --greedy-best-hits 1 . MMseqs Version: 	8ff26f23a6b880df36cadb707890084503ceaffb; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	56; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	300G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask pro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/594:727,wrap,wrapped,727,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior; The search should work as easy-search for the protein sequence fasta file. ## Current Behavior; Only easy-search is working for the protein sequence fasta file. ## Steps to Reproduce (for bugs); ` mmseqs search /mount-nfs/mydataset/single_train_sequences.fasta /mount-nfs/unierf100/uniref100.fasta /mount-nfs/mmseq_single/alRes.m8 ./tmp`. ## MMseqs Output (for bugs); ```; MMseqs Version: 14.7e284; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 240; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/720:541,wrap,wrapped,541,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior; Using easy-search for multiple alignment (non-duplicate PDB seqs against Uniref100). . I've run this on a cloud instance (64G RAM), and a local server with 256G RAM. It completed the search on the server in 9 hours, producing an output file of 41G. . I expected it to finish running on the cloud at a slower speed because the target DB was split into more chunks (87 splits on the cloud VS 7 splits on the server). ## Current Behavior; On the cloud, however, after the prefiltering step, both ""align"" and ""convertalis"" logged a message ""Can not touch X into main memory"". The job will stay hanging but not produce any more logging or output files (there were a bunch of output files X.0, X.1, X.2.. not merged outputs). I killed it after 2 days. UPDATE: I've also tried to set --split-memory-limit 40G, it did finish running (in 16 hours) and produced a single output file, despite still displaying the message ""can not touch X into memory"". Also, the output file is larger than the output I got from running on the server previously (cloud VS server = 67G/41G, 109912025 lines/ 65303318 lines). I can't figure out what could cause the differences, given the same input files, same script (except for adding --split-memory-limit). So my two questions are:; 1) What's up with the warning ""Can not touch X into main memory""? ; 2) Why are the output files different?. ## Steps to Reproduce (for bugs); `mmseqs easy-search pdb_unique_seqs_all.fasta uniref100.fasta output/pdb_uniref100_6cpu_s3_e10minus3 tmp/ -a -s 3 --threads 6 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar,qaln,taln`; ## MMseqs Output (for bugs); Log file for running on cloud instance WITHOUT setting --split-memory-limit, no merged output, job hanging.; [log_easysearch.txt](https://github.com/user-attachments/files/16683740/log_easysearch.txt). Log file for running on the cloud WITH setting --split-memory-limit 40G, finished running with a single outpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/877:550,message,message,550,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/877,2,['message'],['message']
Integrability,"## Expected Behavior; When running a command on a machine with multiple cores, all the output files should be combined into a single final results file. ## Current Behavior; All the files are numbered `1` to `n` where `n` is the number of cores. . ## Steps to Reproduce (for bugs); This happens with many commands (e.g. `mmseqs cluster` `mmseqs lca`, `mmseqs taxonomy`, etc). ## Context; Each file is numbered individually, but a better output would be to combine all outputs to a single file. . A trivial solution is to add `--threads 1` to the command, but that seems to be anti-use-case. The number of files is dependent on the number of cores. `cat results.? results.?? > results` is a trivial solution, but clumsy to implement for every `mmseqs` call in a pipeline. In addition, the current `mmseqs` solution doesn't work well with (for e.g.) `snakemake` that is expecting specific files. ## Your Environment; MMseqs2 Version: c75fe9acf701d9dee97b68dcbbda92fa7b1fc2de; Running on CentOS 8.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/292:614,depend,dependent,614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/292,1,['depend'],['dependent']
Integrability,"## Expected Behavior; cluster all the sequences. ## Current Behavior; some sequences are lost, rather than clustered accordingly . ## Steps to Reproduce (for bugs); easy-linclust fasta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:623,wrap,wrapped,623,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['wrap'],['wrapped']
Integrability,"## Expected Behaviour. Unknown. ## Current Behaviour. I am trying to re-create the clustered nr database currently featured on the BLAST site. The cluster step appears to stall after merging the split files and I get the message ""Cannot touch 215222407074 into main memory"". I have 188G of RAM and 63 cores available. I have tried to reduce the amount of memory using the --split-memory-limit 70G, --split-mode 2, --split 2, and --compressed 1 options but it does not appear to have helped. This is my first time using MMseqs so any help would be much appreciated. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Create directory tmp; cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:221,message,message,221,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['message'],['message']
Integrability,"## Intention; I am trying perform an exhaustive all against all search of a large database with sensitivity similar to blast. The database contains approximately 73,000 sequences with an average length around 300 amino acids. Process is killed while reading results with the error swapresults died. . On Linux mint and using MMseqs2 Release 15-6f452. ## output; cahoonlab@lagbb-bcecmint:~$ mmseqs search Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 alnment/alignment tmp --exhaustive-search -s 8; search Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 alnment/alignment tmp --exhaustive-search -s 8 . MMseqs Version: 	78ae2c5b8dba889079745e8013deeb30c3ac8a1a; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:843,wrap,wrapped,843,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['wrap'],['wrapped']
Integrability,"## Main Issue. Dear mmseqs team,. I am a fairly new user of your software and have run into some unexpected behavior which I am unable to resolve. I am attempting to cluster a database of eukaryotic protein sequences (~1.8*10e6 sequences) using profile search based clustering. I am attempting to iterate or cascade the workflow described in ""How to cluster using profiles"". The issue I am encountering is that sequences of very different length are merged in clustering despite providing -c 0.8 --covmode 0 during the searches. This causes issues during cascaded clustering as single domain proteins are merged with multi-domain proteins. . Example output after one round of the protocol (described below, -c 0.8, --covmode 0). ![poor_MSA](https://user-images.githubusercontent.com/131811718/234382984-9eacd216-41b8-46af-a694-7805a1ea4d5d.png). For basic cascaded clustering ""mmseqs cluster"" or single round clustering using ""search"" followed by ""clust"" the behavior appear to function as intended. Perhaps something in the profile generation or implementation of profile against consensus searches affects the interpretation of the -c parameter? Investigating the alignment data of the attached MSA with mmseqs convertalis (attached below) shows that all hits indeed passes the -c 0.8 cutoff? As such perhaps my understanding of what constitutes alignment coverage is lacking and in that case how would one go about retricting the ""coverage"" to only query-target pairs with lengths within 80% of each other? I have tried --covmode 5 with similar results. . ## Expected Behavior. Restriction of clustered protein sequence lengths by imposing cover limits via the -c parameter in conjunction with any --covmode. ## Current Behavior. Clusters containing sequences of vastly different lengths far outside the range of the -c cutoff. . ## Context. My protocol can be summarized roughly as:. 1) Collapse paralogs and create cluster representatives in order to reduce database redundancy using;; mmseqs clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:680,protocol,protocol,680,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['protocol'],['protocol']
Integrability,"## Question; Hello to everyone!. I have generated some MSA from some sequences using mmseqs, and after having worked a little with them I have noted an interesting/puzzling fact about these MSA that I want to make sure is not problematic. I generated the MSA as follows:. `mmseqs search query_full source_db target_full tmp/ --num-iterations 3 -a -s 8 -e 0.1 --max-seqs 10000`. Followed by. `mmseqs result2msa query_full source_db target_full msa_full --msa-format-mode 6`. These commands go trough without any error messages and give me the desired MSA. I have noted though that if I then take the seed sequence used in the search function for a particular MSA, and after having realigned with pyhmmer, I compute the normalised hamming distance of the seed sequence from the elements in the MSA, for some MSA I get a histogram like this one. ![image_480](https://github.com/soedinglab/MMseqs2/assets/43722592/eb413cab-480d-4d5b-bca5-851363f38169). Which signals that most of the alignment is at 70%-80% of sequence dissimilarity from the seed MSA. While I know that there can be homologous sequences with low sequence identity, I was expecting also a significant number at lower hamming distance representing close homologous. . ## Question; Is such a behaviour to be expected? From my understanding at some point of the search algorithm mmseqs clusters the different target sequences based on the scores of the seed, could it be that than it selects just a single representative from each cluster and for this reason we have very few similar sequences to the seed in the MSA? If that it the case I would kindly ask you also some references to gain a little more insight in the whole machinery. If on the other side this is not to be expected, what mistake could I be making in the MSA generation?. ## PS. One last curiosity, is the seed sequences included in the MSA generated or not?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/755:517,message,messages,517,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/755,1,['message'],['messages']
Integrability,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/450:982,wrap,wrappers,982,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450,1,['wrap'],['wrappers']
Integrability,"--wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 11.80K 0s 9ms ; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 11803 type: Aminoacid; Target database size: 11803 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 11.80K 1s 228ms ; Time for merging to aln: 0h 0m 0s 3ms; 15505 alignments calculated; 15076 sequence pairs passed the thresholds (0.972332 of overall calculated); 1.277302 hits per query sequence; Time for pro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:11317,wrap,wrapped-scoring,11317,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped-scoring']
Integrability,"-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:2768,wrap,wrapped-scoring,2768,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['wrap'],['wrapped-scoring']
Integrability,"-cov-mode 0 -c 0.8 -e 0.001 -s 7 --min-seq-id 0.4 --threads 40 --max-seqs 200 --max-iterations 1000 --alignment-mode 3 --similarity-type 2 . MMseqs Version: 14.7e284; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 7; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 200; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 40; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.4; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Connected component clustering produces less clusters in a single step clustering.; Please u",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:8351,wrap,wrapped,8351,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped']
Integrability,-ng 13.2.0 h807b86a_3 conda-forge; libgomp 13.2.0 h807b86a_3 conda-forge; libnsl 2.0.1 hd590300_0 conda-forge; libsanitizer 12.3.0 h0f45ef3_3 conda-forge; libsqlite 3.44.2 h2797004_0 conda-forge; libstdcxx-devel_linux-64 12.3.0 h8bca6fd_103 conda-forge; libstdcxx-ng 13.2.0 h7e041cc_3 conda-forge; libuuid 2.38.1 h0b41bf4_0 conda-forge; libxcrypt 4.4.36 hd590300_1 conda-forge; libzlib 1.2.13 hd590300_5 conda-forge; markdown 3.5.1 pypi_0 pypi; markupsafe 2.1.3 pypi_0 pypi; matplotlib 3.8.2 pypi_0 pypi; ml-collections 0.1.1 pypi_0 pypi; ml-dtypes 0.2.0 pypi_0 pypi; ncurses 6.4 h59595ed_2 conda-forge; numpy 1.26.3 pypi_0 pypi; oauthlib 3.2.2 pypi_0 pypi; openssl 3.2.0 hd590300_1 conda-forge; opt-einsum 3.3.0 pypi_0 pypi; packaging 23.2 pypi_0 pypi; pandas 1.5.3 pypi_0 pypi; pillow 10.2.0 pypi_0 pypi; pip 23.3.2 pyhd8ed1ab_0 conda-forge; protobuf 4.23.4 pypi_0 pypi; py3dmol 2.0.4 pypi_0 pypi; pyasn1 0.5.1 pypi_0 pypi; pyasn1-modules 0.3.0 pypi_0 pypi; pyparsing 3.1.1 pypi_0 pypi; python 3.10.13 hd12c33a_1_cpython conda-forge; python-dateutil 2.8.2 pypi_0 pypi; pytz 2023.3.post1 pypi_0 pypi; pyyaml 6.0.1 pypi_0 pypi; readline 8.2 h8228510_1 conda-forge; requests 2.31.0 pypi_0 pypi; requests-oauthlib 1.3.1 pypi_0 pypi; rsa 4.9 pypi_0 pypi; scipy 1.11.4 pypi_0 pypi; setuptools 69.0.3 pyhd8ed1ab_0 conda-forge; six 1.16.0 pypi_0 pypi; sysroot_linux-64 2.12 he073ed8_16 conda-forge; tabulate 0.9.0 pypi_0 pypi; tensorboard 2.15.1 pypi_0 pypi; tensorboard-data-server 0.7.2 pypi_0 pypi; tensorflow-cpu 2.15.0.post1 pypi_0 pypi; tensorflow-estimator 2.15.0 pypi_0 pypi; tensorflow-io-gcs-filesystem 0.35.0 pypi_0 pypi; termcolor 2.4.0 pypi_0 pypi; tk 8.6.13 noxft_h4845f30_101 conda-forge; toolz 0.12.0 pypi_0 pypi; tqdm 4.66.1 pypi_0 pypi; typing-extensions 4.9.0 pypi_0 pypi; tzdata 2023d h0c530f3_0 conda-forge; urllib3 2.1.0 pypi_0 pypi; werkzeug 3.0.1 pypi_0 pypi; wheel 0.42.0 pyhd8ed1ab_0 conda-forge; wrapt 1.14.1 pypi_0 pypi; xz 5.2.6 h166bdaf_0 conda-forge; zipp 3.17.0 pypi_0 pypi`,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/795:5838,wrap,wrapt,5838,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/795,1,['wrap'],['wrapt']
Integrability,"-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 100.00% 121.96M 5m 3s 965ms ; Time for merging to pref_rescore1: 0h 1m 26s 443ms; Time for processing: 0h 7m 19s 298ms; clust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 cluster_tmp/1127447206531551203/linclust/8761493678692146066/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 53s 944ms. Size of the sequence database: 121964581; Size of the alignment database: 121964581; Number of clusters: 119253279. Writing results 0h 1m 14s 106ms; Time for merging to pre_clust: 0h 0m 55s 443ms; Time for processing: 0h 4m 11s 817ms; createsubdb cluster_tmp/11274472065315512",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:5116,wrap,wrapped-scoring,5116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['wrap'],['wrapped-scoring']
Integrability,"//mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:2733,protocol,protocol,2733,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['protocol'],['protocol']
Integrability,"/cated_sk100; mmseqs clusthash scafDB/cated_sk100 resultsDB/resultDB --min-seq-id 0.99 --threads $THREADS; mmseqs clust scafDB/cated_sk100 resultsDB/resultDB clusterDB --threads $THREADS; mmseqs result2repseq scafDB/cated_sk100 clusterDB DB_clu_rep; mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header. When ""Compute 1 unique hashes."" is printed, there are 10 resultsDB files and 10 resultDB.index files, however, only one (resultDB.index.7) is getting larger with time (and is > 0 in size). Meanwhile only one thread seems to be utilized (around 8% of the total 10 threads given).; When the clusthash finishes there is one resultsDB.index file, and 10 resultsDB files, 8 with zero size, and resultsDB.index7 and resultsDB.index both with the same size). After this, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Yo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261:1434,message,message,1434,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261,1,['message'],['message']
Integrability,"/tmp/5351426679731834765/clu_redundancy ./mmseqs_output/tmp/5351426679731834765/clu_step0 ./mmseqs_output/tmp/5351426679731834765/clu_step1 ./mmseqs_output/tmp/5351426679731834765/clu_step2 . Clustering step 1; [=================================================================] 20.94K 0s 219ms; Clustering step 2; [=================================================================] 10.97K 0s 427ms; Clustering step 3; [=================================================================] 8.34K 0s 657ms; Clustering step 4; [=================================================================] 8.19K 0s 758ms; Write merged clustering; [=================================================================] 100.00K 0s 956ms; Time for merging to clu: 0h 0m 0s 164ms; Time for processing: 0h 0m 1s 268ms; align ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu ./mmseqs_output/tmp/5351426679731834765/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 100000 type: Aminoacid; Target database size: 100000 type: Aminoacid; Calculation of alignments; [=================================================================] 8.19K 8s 160ms; Time for merging to aln: 0h 0m 0s 15ms; 99829 alignments calculated; 73771 sequence pairs passed the thresholds (0.738974 of overall calculated); 9.012951 hits per query sequence; Time for process",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:33652,wrap,wrapped-scoring,33652,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 20.00K 0s 10ms ; Time for merging to pref_rescore1: 0h 0m 0s 4ms==================>] 99.51% 19.90K eta 0s ; Time for processing: 0h 0m 0s 25ms; clust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 20.00K 0s 7ms ; Sort entries; Find missing connections; Found 12302 new connections.; Reconstruct initial order; [============================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:6972,wrap,wrapped-scoring,6972,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped-scoring']
Integrability,"0.3 --threads 128; cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128 . MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mod",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:1502,wrap,wrapped,1502,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['wrap'],['wrapped']
Integrability,"0059278292880/linclust/10067396915876818640/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 16ms; Time for processing: 0h 0m 0s 564ms; filterdb tmp/16479300059278292880/linclust/10067396915876818640/pref_filter1 tmp/16479300059278292880/linclust/10067396915876818640/pref_filter2 --filter-file tmp/16479300059278292880/linclust/10067396915876818640/order_redundancy --threads 112 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 855.53K 0s 584ms; Time for merging to pref_filter2: 0h 0m 1s 180ms; Time for processing: 0h 0m 3s 237ms; align tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/pref_filter2 tmp/16479300059278292880/linclust/10067396915876818640/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 112 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 855530 type: Nucleotide; Target database size: 855530 type: Nucleotide; Calculation of alignments; [=================================================================] 855.53K 2m 53s 344ms; Time for merging to aln: 0h 0m 0s 811ms; 12214778 alignments calculated; 932129 sequence pairs passed the thresholds (0.076312 of overall calculated); 1.089534 hits per query sequence; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:8156,wrap,wrapped-scoring,8156,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['wrap'],['wrapped-scoring']
Integrability,"0235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 9.50M 1m 30s 166ms; Time for merging to pref_rescore1: 0h 0m 3s 976ms; Time for processing: 0h 1m 39s 656ms; clust DB tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 tmp/576731152808920235/linclust/1790908825406232727/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 1s 66ms. Size of the sequence database: 9502826; Size of the alignment database: 9502826; Number of clusters: 8785102. Writing results 0h 0m 1s 200ms; Time for merging to pre_clust: 0h 0m 0s 5ms; Time for processing: 0h 0m 5s 962ms; createsubdb tmp/576731152808920235/linclust/1790908825406232727/order_redundancy DB tmp/576731152808920235/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:5900,wrap,wrapped-scoring,5900,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['wrap'],['wrapped-scoring']
Integrability,"10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/ta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:4363,wrap,wrapped-scoring,4363,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['wrap'],['wrapped-scoring']
Integrability,"10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_1 result_20230419_115721/res result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. expandaln result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/res /home/user/project/target_DB/target_DB.idx result_20230419_115721/res_exp ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:7337,wrap,wrapped-scoring,7337,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['wrap'],['wrapped-scoring']
Integrability,"16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 /tmp/15358673946673749737/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:4929,wrap,wrapped-scoring,4929,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['wrap'],['wrapped-scoring']
Integrability,"1831648_seqs.mmseqs2clu tmp --cov-mode 0 -c 0.85 --min-seq-id 0.95 --threads 112 . MMseqs Version: 	15.6f452; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.85; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	112; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:1412,wrap,wrapped,1412,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['wrap'],['wrapped']
Integrability,"1; FDDTDS 20; NGGSLK 17; DLLDMP 17; DVLDMP 17; GEQVAR 16; FDDTDT 16; Time for index table init: 0h 0m 2s 591ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8338; Target db start 1 to 8338; [=================================================================] 8.34K 26s 907ms. 903.365687 k-mers per position; 4641 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 88 sequences passed prefiltering per query sequence; 76 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 36ms; Time for processing: 0h 0m 32s 520ms; align ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/pref_step2 ./mmseqs_output/tmp/5351426679731834765/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8338 type: Aminoacid; Target database size: 8338 type: Aminoacid; Calculation of alignments; [=================================================================] 8.34K 17s 958ms; Time for merging to aln_step2: 0h 0m 0s 88ms; 489475 alignments calculated; 8622 sequence pairs passed the thresholds (0.017615 of overall calculated); 1.034061 hits per query sequence; Time for proc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:30583,wrap,wrapped-scoring,30583,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; filterdb clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter1 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 --filter-file clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 154 0s 34ms; Time for merging to pref_filter2: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 99ms; rescorediagonal clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:8348,wrap,wrapped-scoring,8348,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; filterdb clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter1 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 --filter-file clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 154 0s 13ms; Time for merging to pref_filter2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 79ms; rescorediagonal clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:23968,wrap,wrapped-scoring,23968,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"30198/input; _step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/pref_filter2 tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2; --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 2 --min-seq-id 0.9 ; --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [================================================================] =74.93M 28m 19s 496ms; Time for merging to pref_rescore2: 0h 0m 51s 111ms; Time for processing: 0h 29m 44s 106ms; align tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/input_step_redu; ndancy tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2 tmp//16518381706844811497/linclust/1189823685496030198/aln --sub-mat 'aa:blos; um62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mo; de 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --; add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-sc; ore-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0; -v 3 . Compute score, coverage and sequence identity; Query database size: 74926526 type: Aminoacid; Target database size: 74926526 type: Aminoacid; Calculation of alignments; [=================================================================] 74.93M 3m 46s 500ms; Time for merging to aln: 0h 0m 54s 46ms; 92521862 alignments calculated; 75488967 sequence pairs passed the thresholds (0.815904 of overall calculated); 1.007507 hits per query seq",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:9361,wrap,wrapped-scoring,9361,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['wrap'],['wrapped-scoring']
Integrability,"31834765/linclust/262265298633898384/pref_filter2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 31.32K 0s 42ms; Time for merging to pref_rescore2: 0h 0m 0s 90ms; Time for processing: 0h 0m 0s 772ms; align ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 31321 type: Aminoacid; Target database size: 31321 type: Aminoacid; Calculation of alignments; [=================================================================] 31.32K 3s 713ms; Time for merging to aln: 0h 0m 0s 107ms; 53166 alignments calculated; 45707 sequence pairs passed the thresholds (0.859704 of overall calculated); 1.459308 hits per query sequence; Time for process",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:16001,wrap,wrapped-scoring,16001,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"40f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 tmp_easy_search/6745795380167965363/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:6701,wrap,wrapped-scoring,6701,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['wrap'],['wrapped-scoring']
Integrability,"4163985984779/order_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; filterdb tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter1 tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter2 --filter-file tmp/8115150149931881526/clu_tmp/13790714163985984779/order_redundancy --threads 64 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 31.44K 0s 20ms; Time for merging to pref_filter2: 0h 0m 0s 88ms; Time for processing: 0h 0m 0s 360ms; rescorediagonal tmp/8115150149931881526/clu_tmp/13790714163985984779/input_step_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/input_step_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter2 tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=========Error: Ungapped alignment step died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): a14688744081c15439fa3092eec9dfd8be40440b; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Source install from github ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU Make 4.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): SSE4; * Operating system and version: gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:6967,wrap,wrapped-scoring,6967,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['wrap'],['wrapped-scoring']
Integrability,"5256/linclust/6279588666755106708/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 3ms; Time for processing: 0h 1m 40s 43ms; filterdb tmp97/17949317426677965256/linclust/6279588666755106708/pref_filter1 tmp97/17949317426677965256/linclust/6279588666755106708/pref_filter2 --filter-file tmp97/17949317426677965256/linclust/6279588666755106708/order_redundancy --threads 20 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 25.63K 0s 61ms; Time for merging to pref_filter2: 0h 0m 0s 138ms; Time for processing: 0h 1m 40s 346ms; align tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/pref_filter2 tmp97/17949317426677965256/linclust/6279588666755106708/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 20 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 25629 type: Nucleotide; Target database size: 25629 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 25.63K 1s 731ms; Time for merging to aln: 0h 0m 0s 152ms; 209782 alignments calculated; 32736 sequence pairs passed the thresholds (0.156048 of overall calculated); 1.277303 hits per query sequence; Tim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:8715,wrap,wrapped-scoring,8715,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['wrap'],['wrapped-scoring']
Integrability,"537 MB; Avg k-mer size: 0.133630; Top 10 k-mers; GQQVAR 190; QLGQRV 110; IHDKNI 105; ALGSGK 105; LLPGKT 102; SGGTLR 84; SGLGRV 75; VGSSST 61; VMHAGS 59; ATADTT 59; Time for index table init: 0h 0m 5s 872ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 500; Target db start 1 to 20000; [=================================================================] 100.00% 500 2s 36ms. 296.967038 k-mers per position; 19293 DB matches per sequence; 0 overflows; 137 sequences passed prefiltering per query sequence; 113 median result list length; 1 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 162ms; Time for processing: 0h 0m 11s 426ms; align tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 tmp/18110643841744502873/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-cor r-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realig n-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 500 type: Aminoacid; Target database size: 20000 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 500 23s 390ms; Time for merging to result: 0h 0m 0s 44ms; 68875 alignments calculated; 12897 sequence pairs passed the thresholds (0.187252 of overall calculated); 25.794001 hits per query sequence; Time for pro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:6455,wrap,wrapped-scoring,6455,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['wrap'],['wrapped-scoring']
Integrability,"5406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 5ms; Time for processing: 0h 0m 3s 585ms; filterdb tmp/576731152808920235/linclust/1790908825406232727/pref_filter1 tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 --filter-file tmp/576731152808920235/linclust/1790908825406232727/order_redundancy --threads 128 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 8.79M 22s 293ms; Time for merging to pref_filter2: 0h 0m 4s 651ms; Time for processing: 0h 0m 33s 252ms; align tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 tmp/576731152808920235/linclust/1790908825406232727/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 128 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8785102 type: Nucleotide; Target database size: 8785102 type: Nucleotide; Calculation of alignments; [=================================================================] 8.79M 11m 6s 373ms; Time for merging to aln: 0h 0m 5s 49ms; 1248621641 alignments calculated; 12850181 sequence pairs passed the thresholds (0.010291 of overall calculated); 1.462724 hits per query sequence; Time for processing: 0h 11m 16s 565ms; clust tmp/576731152808920235/linclust/1790908825406232727/input_step_r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:8213,wrap,wrapped-scoring,8213,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['wrap'],['wrapped-scoring']
Integrability,"62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 25.00K 0s 11ms ; Time for merging to pref_rescore1: 0h 0m 0s 8ms==================>] 99.34% 24.84K eta 0s ; Time for processing: 0h 0m 0s 48ms; clust experiments/small.mm.db experiments/tmp//6404161245249296443/pref_rescore1 experiments/tmp//6404161245249296443/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 25.00K 0s 9ms ; Sort entries; Find missing connections; Found 597 new connections.; Reconstruct initial order; [=================================================================] 100.00% 25.00K 0s 17ms ; Add missing connections; [=========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:5819,wrap,wrapped-scoring,5819,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['wrap'],['wrapped-scoring']
Integrability,"68; ACNSPVY	29959; Write ENTRIES (40009); Write ENTRIESOFFSETS (40010); Write SEQINDEXDATASIZE (40015); Write SEQINDEXSEQOFFSET (40016); Write SEQINDEXDATA (40014); Write ENTRIESNUM (40012); Write SEQCOUNT (40013); Time for merging to NR.idx: 0h 0m 0s 603ms; Time for processing: 2h 25m 32s 642ms; ```; Unfortunately, I don't have the output of `createtaxdb` as managed to run it in interactive mode (it took less than 10 minutes). This is the output from the `easy-taxonomy` command:; ```. easy-taxonomy contigs.fasta refDB/NR alnRes tmp --split-memory-limit 100G --threads 16 . MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mo; ```de 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	16; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	100G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove h",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:91859,wrap,wrapped,91859,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['wrap'],['wrapped']
Integrability,"73363201721293217/pref_filter1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_filter2 --filter-file /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/order_redundancy --threads 8 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 11.80K 0s 11ms ; Time for merging to pref_filter2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 19ms; rescorediagonal /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_filter2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 11.80K 0s 9ms ; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:10302,wrap,wrapped-scoring,10302,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped-scoring']
Integrability,"75233; [=================================================================] 100.00% 75.23K 8m 43s 269ms . 3286.821735 k-mers per position; 713534 DB matches per sequence; 1 overflows; 26270 sequences passed prefiltering per query sequence; 26950 median result list length; 0 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0s 15ms; Time for processing: 0h 8m 44s 825ms; result2stats tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref tmp/5233442526903138997/pref_count.tsv --stat linecount --tsv --threads 16 --compressed 0 -v 3 . [=================================================================] 100.00% 75.23K 1s 543ms ; Time for merging to pref_count.tsv: 0h 0m 0s 20ms; Time for processing: 0h 0m 1s 810ms; align tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 1 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 41m 40s 149ms ; Time for merging to aln: 0h 0m 0s 11ms; 1976417423 alignments calculated; 672599536 sequence pairs passed the thresholds (0.340313 of overall calculated); 8940.219727 hits per query sequence; Time for pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:5842,wrap,wrapped-scoring,5842,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['wrap'],['wrapped-scoring']
Integrability,"9235; CGAACGTGGGAACGG	8944; GGGGAAAGGCTGGGG	7283; TCGATTACGGTAACG	6945; GTGCGCAGCGTATCG	6389; CCCGGCTCACGAATG	5538; ACTGCGTAAGGGTGG	5044; GACCGAGGGCACGGG	4773; Time for index table init: 0h 0m 8s 613ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 39650; Target db start 1 to 19825; [=================================================================] 100.00% 39.65K 3s 800ms. 0.928116 k-mers per position; 129909 DB matches per sequence; 0 overflows; 85 sequences passed prefiltering per query sequence; 1 median result list length; 19825 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0s 137ms; Time for processing: 0h 3m 32s 791ms; rescorediagonal tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 39.65K 0s 376ms; Time for merging to aln_ungapped: 0h 0m 0s 129ms; Time for processing: 0h 6m 40s 663ms; subtractdbs tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. subtractdbs tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. Remove tmp97/17949317426677965256/aln_ungapped ids from tmp97/17949317426677965256/pref; [=================================================================] 100.00% 39.65K 0s 144ms; Time for merging to pref_subtract: 0h 0m 0s 168ms; Time for processing: 0h 0m 0s 503ms; align tmp97/179493174266779652",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:14419,wrap,wrapped-scoring,14419,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['wrap'],['wrapped-scoring']
Integrability,"935; Time for index table init: 0h 1m 19s 523ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 882920; Target db start 1 to 311921; [=================================================================] 882.92K 1m 16s 342ms. 0.958336 k-mers per position; 27663 DB matches per sequence; 7 overflows; 0 queries produce too much hits (truncated result); 100 sequences passed prefiltering per query sequence; 63 median result list length; 205 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 481ms; Time for processing: 0h 2m 41s 423ms; align tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 tmp/2226585588535541735/search_tmp/11167723337111805049/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 882920 type: Nucleotide; Target database size: 311921 type: Nucleotide; Calculation of alignments; [=================================================================] 882.92K 5m 58s 443ms; Time for merging to aln: 0h 0m 0s 462ms. 88720927 alignments calculated.; 46477238 sequence pairs passed the thresholds (0.523859 of overall calculated).; 52.640373 hits per query sequence.; Time for processing: 0h 6m 3s 620ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 272ms; rmdb tmp/2226585588",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:8622,wrap,wrapped-scoring,8622,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['wrap'],['wrapped-scoring']
Integrability,"9731834765/seq_wrong_assigned_pref_swaped --threads 40 --compressed 0 -v 3 . [=================================================================] 26.23K 0s 396ms; Computing offsets.; [=================================================================] 26.23K 0s 384ms. Reading results.; [=================================================================] 26.23K 0s 441ms. Output database: ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00K 0s 144ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 19ms; Time for processing: 0h 0m 2s 119ms; align ./mmseqs_output/tmp/5351426679731834765/seq_seeds.merged ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped_aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 34414 type: Aminoacid; Target database size: 26229 type: Aminoacid; Calculation of alignments; [=================================================================] 34.29K 6m 32s 543ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 85ms; 4335308 alignments calculated; 2294027 sequence pairs passed the thresholds (0.529150 of overall calculated); 66.900757 hi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:40519,wrap,wrapped-scoring,40519,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"973434362/order_redundancy db/dbclust tmp/16437734971973434362/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 16ms; Time for processing: 0h 0m 0s 46ms; createsubdb tmp/16437734971973434362/order_redundancy tmp/16437734971973434362/pref tmp/16437734971973434362/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 12ms; Time for processing: 0h 0m 0s 36ms; filterdb tmp/16437734971973434362/pref_filter1 tmp/16437734971973434362/pref_filter2 --filter-file tmp/16437734971973434362/order_redundancy. Filtering using file(s); [=================================================================] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:4035,wrap,wrapped-scoring,4035,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['wrap'],['wrapped-scoring']
Integrability,": 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 119ms. similarity type 2:. Create directory clu/sim2_tmp; cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_red",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:17490,wrap,wrapped,17490,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped']
Integrability,"; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterlinclust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,n",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:9639,wrap,wrapped-scoring,9639,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1270615; Target db start 1 to 1270615; [=================================================================] 1.27M 2h 31m 44s 357ms. 1266.108246 k-mers per position; 3373560 DB matches per sequence; 626307 overflows; 21 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 601 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 657ms; Time for processing: 2h 32m 1s 811ms; align euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 euk72-90.profile_search2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 48 --compressed 0 -v 3 . Compute score and coverage; Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; Calculation of alignments; [=================================================================] 1.27M 33m 52s 295ms; Time for merging to euk72-90.profile_search2: 0h 0m 0s 650ms; 109004199 alignments calculated; 56769447 sequence pairs passed the thresholds (0.520801 of overall calculated); 44.678715 hits per query sequence; Ti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:10322,wrap,wrapped-scoring,10322,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['wrap'],['wrapped-scoring']
Integrability,"; result2stats /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.11M 1s 487ms; Time for merging to pref_count.tsv: 0h 0m 4s 788ms; Time for processing: 0h 0m 11s 535ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15106287 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:11282,wrap,wrapped-scoring,11282,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['wrap'],['wrapped-scoring']
Integrability,"===============================================================] 2.20B 32m 57s 186ms; Sort kmer 0h 0m 27s 256ms; Sort by rep. sequence 0h 0m 7s 71ms; Generate k-mers list for 16 split; [=================================================================] 2.20B 35m 20s 821ms; Sort kmer 0h 0m 27s 251ms; Sort by rep. sequence 0h 0m 4s 12ms; Generate k-mers list for 17 split; [=================================================================] 2.20B 39m 55s 45ms; Sort kmer 0h 0m 4s 162ms; Sort by rep. sequence 0h 0m 0s 40ms; Merge splits ... Time for fill: 0h 58m 23s 248ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 10h 8m 58s 194ms; rescorediagonal /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.75 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . Can not touch 293012172012 into main memory; [=================================================================] 2.20B 14h 48m 14s 895ms; Time for merging to pref_rescore1: 0h 21m 28s 875ms; Time for processing: 15h 32m 14s 793ms; Error: Pre-clustering step died; ```; And when I rerun my job I have : ; ```; linclust /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 20 -v 3 --force-reuse 1 --split-memory-limit 62G . MMseqs Version: 	f5f780acd64482cd59b46eae0a107f763cd17b4d; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	20; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:7193,wrap,wrapped-scoring,7193,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['wrap'],['wrapped-scoring']
Integrability,"==========================================] 100.00% 39.65K 0s 376ms; Time for merging to aln_ungapped: 0h 0m 0s 129ms; Time for processing: 0h 6m 40s 663ms; subtractdbs tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. subtractdbs tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. Remove tmp97/17949317426677965256/aln_ungapped ids from tmp97/17949317426677965256/pref; [=================================================================] 100.00% 39.65K 0s 144ms; Time for merging to pref_subtract: 0h 0m 0s 168ms; Time for processing: 0h 0m 0s 503ms; align tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref_subtract tmp97/17949317426677965256/aln_gapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 20 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 39650 type: Nucleotide; Target database size: 19825 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 39.65K 11s 920ms; Time for merging to aln_gapped: 0h 1m 40s 131ms; 2105218 alignments calculated; 1620 sequence pairs passed the thresholds (0.000770 of overall calculated); 0.040858 hits per query sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:15669,wrap,wrapped-scoring,15669,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['wrap'],['wrapped-scoring']
Integrability,"AAAA	2; Time for index table init: 0h 0m 7s 405ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4; Target db start 1 to 2; [================================================] 4 ================0s 6ms; =; 0.991092 k-mers per position; 4326 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 2 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 1ms; align tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 tmp/9586069750715556969/search_tmp/1133007989511978496/aln --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 4 type: Nucleotide; Target database size: 2 type: Nucleotide; Calculation of alignments; [=================================================================] 4 0s 0ms; Time for merging to aln: 0h 0m 0s 0ms; 4 alignments calculated; 4 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 17ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:8984,wrap,wrapped-scoring,8984,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['wrap'],['wrapped-scoring']
Integrability,"ACCGGTATCGCGAA	2; Time for index table init: 0h 0m 8s 169ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 5; [=================================================================] 2 0s 0ms. 0.803571 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 631ms; align tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:12572,wrap,wrapped-scoring,12572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['wrap'],['wrapped-scoring']
Integrability,"As I mentioned briefly in Issue #94 when I ran `convertmsa`, to generate an msa database from an input stockholm formatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96:277,message,messages,277,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96,1,['message'],['messages']
Integrability,"As mentioned [here](https://github.com/soedinglab/MMseqs2/issues/157) I tried to index a 108GB fasta file with 188M sequences (NCBI's nr) in a server with 188GB memory. > mmseqs createdb nr.fa nr.DB; > mmseqs createindex nr.DB tmp --split-memory-limit 126000000 --threads 15; MMseqs2 Version: 7-4e23d. But even setting the `--split-memory-size ` command it's still crashing with me. ; It seem that I need something ~631GB. The `createdb` was finished well without any weirdo message. ; But below follow the log of `createindex`. ```; Program call:; createindex nr.DB tmp --split-memory-limit 126000000 --threads 15 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 an",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/161:475,message,message,475,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161,1,['message'],['message']
Integrability,"BLAST Database error: No alias or index file found for protein database ; I have the error below:. Bio.Application.ApplicationError: Non-zero return code 2 from ‘psiblast -out 7NDB_B_WT.out -query 7NDB_B_WT.fasta -db /mnt/research/common-data/Bio/blastdb/nr -evalue 5000 -num_iterations 3 -out_ascii_pssm 7NDB_B_WT.pssm’, message ‘BLAST Database error: No alias or index file found for protein database [/mnt/research/common-data/Bio/blastdb/nr] in search path [/media/leon//Machine_learning_model_binding_free_energy_BFE_change_predictions/TopNetmAb/7NDB/features/7NDB_B_A_344_S::]’. I downloaded the “nr” file from the blast database and created a database link in the directory [/mnt/research/common-data/Bio/blastdb/nr]. But the error persists. Please, can anyone help me?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/518:322,message,message,322,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/518,1,['message'],['message']
Integrability,Clustering stuck after merging splits with message about main memory,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:43,message,message,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['message'],['message']
Integrability,"Congrats [from the lambda-author] to the preprint of the paper, first of all :+1:. Although the contribution of the SeqAn library to MMSeqs2 is rather small, I would still ask you politely to include notice of its use, according to the license:. ```; // * Redistributions in binary form must reproduce the above copyright; // notice, this list of conditions and the following disclaimer in the; // documentation and/or other materials provided with the distribution.; ```. AFAICT the binaries don't do this and the shipped license file doesn't mention them. This likely affects other code-parts used in MMSeqs, as well, I am not sure. In any case, not a big deal, but would be nice if you could change this.; Also of course we depend on people citing the SeqAn library in their academic work if they use it. If this is still possible it would be great, but there is no (legal) requirement to do so. On an unrelated note: The ""non-commercial"" header in `src/alignment/smith_waterman_sse2.cpp` is incompatible with the GPL-license. I don't know if the header is just outdated, but if not, this might cause you trouble with the original author and/or make it impossible for other people to distribute mmseqs2...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/5:727,depend,depend,727,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/5,1,['depend'],['depend']
Integrability,"Dear MMseqs2 team,. I am trying to run the MPI version of mmseqs cluster and run into many synchronization issues of file and dir creations in a shared file system. From the errors, I was able to figure out some of them till the execution of the linclust.sh script. . My understanding is that out of the five steps in this [script](https://github.com/soedinglab/MMseqs2/blob/ffb05619cadadd8655b8719818ed566caaa6d0a6/data/workflow/linclust.sh#L21-L89), some steps should be run by a single process and some need parallel execution. I am guessing that the first four steps should be run in a single process, right?. Please advise. Best,; Zhao",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/874:91,synchroniz,synchronization,91,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/874,1,['synchroniz'],['synchronization']
Integrability,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/363:289,message,messages,289,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363,2,['message'],['messages']
Integrability,"E/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. I don't know if the error is right at the start using _plass_ int this context or with the _map_ command. Could you ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:2894,wrap,wrapped,2894,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['wrap'],['wrapped']
Integrability,"Easy-cluster createdb message ""Cannot extract identifier from entry""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/804:22,message,message,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/804,1,['message'],['message']
Integrability,Error message: Database clusterRes needs header information,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/673:6,message,message,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/673,1,['message'],['message']
Integrability,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460:116,message,message,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460,2,"['depend', 'message']","['dependencies', 'message']"
Integrability,Finish up SIMDe integration,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/321:16,integrat,integration,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/321,1,['integrat'],['integration']
Integrability,"From the packaging POV, it's far better to do cmake discovery for zstd like you do for bz2 and zlib. I am told the Debian build does this already. . xxhash is also a really common dependency on many distros. The other libs do not seem to be common, but if you're adding discovery for two, might as well add them for more. The other cmake issue is BUILD_SHARED_LIBS. Unless set to OFF, the build fails because of relocation problems against the cacode and alp libraries. Forcing the build to be static means the external dependencies have to be built static also. Most distros don't like static-only builds for reasons widely shared.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411:180,depend,dependency,180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411,2,['depend'],"['dependencies', 'dependency']"
Integrability,"GCGGCGCG	151; CGCGGGCGTGGCGCG	149; CGTGCGCGTGGCGCG	147; CGCGCGCCCGGCGCG	133; Time for index table init: 0h 0m 39s 203ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4000; Target db start 1 to 365688; [=================================================================] 100.00% 4.00K 0s 74ms ; [================================================================>] 99.72% 3.99K eta 0s ; 0.926667 k-mers per position; 434 DB matches per sequence; 0 overflows; 4 sequences passed prefiltering per query sequence; 1 median result list length; 1762 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 5ms; Time for processing: 0h 0m 40s 369ms; align tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 tmp/7935334228278574252/search/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 2 --max-seq-len 10000 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Compute score only; Query database size: 4000 type: Nucleotide; Target database size: 365688 type: Nucleotide; Calculation of alignments; Query sequence 236 has a result with no diagonal information. Please check your database.; Error: Alignment died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used:`df77d9e6cf640fe8990f247441ab44d4f4ad9cdc`; * Whi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:6696,wrap,wrapped-scoring,6696,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['wrap'],['wrapped-scoring']
Integrability,"Hello . I am having an issue while trying to create profiles from alignments. I am using NOG trimmed alignments, only a few of them. ; I convert them to stockholm first with esl-reformat from HMMER ; esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; Then :; mmseqs convertmsa COG0016.sto COG0016_db; mmseqs msa2profile COG0016_db COG0016_profile. At the last step, for the profile creation I get an error message : ; Could not open COG0016_profile_seq_h.index.126 for writing!. Here are the logs : [COG0016.log](https://github.com/soedinglab/MMseqs2/files/2465789/COG0016.log). Whichever file I am using I always get this particular index 126. Also I used sudo for permission it does not change anything. Well, there is also a full collections of empty files appearing... just around 1021. ## Steps to Reproduce (for bugs); I am adding all intermediary files, though github doesn't let me upload things with exotic extensions, so I had to rename all of them by appending .txt at the end. wget http://eggnogdb.embl.de/download/eggnog_4.5/data/NOG/NOG.trimmed_algs.tar.gz; tar -xzf NOG.trimmed_algs.tar.gz; mv NOG_trimmed_algs/NOG.COG0016.clustalo_trimmed.fa ../; [NOG.COG0016.clustalo_trimmed.fa.txt](https://github.com/soedinglab/MMseqs2/files/2465875/NOG.COG0016.clustalo_trimmed.fa.txt); esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; [COG0016.sto.txt](https://github.com/soedinglab/MMseqs2/files/2465876/COG0016.sto.txt); mmseqs convertmsa COG0016.sto COG0016_db; [COG0016_db.txt](https://github.com/soedinglab/MMseqs2/files/2465877/COG0016_db.txt); [COG0016_db.index.txt](https://github.com/soedinglab/MMseqs2/files/2465879/COG0016_db.index.txt); mmseqs msa2profile COG0016_db COG0016_profile. It would be cool if you could help me with that. Best,. Seb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/128:425,message,message,425,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/128,1,['message'],['message']
Integrability,"Hello! ; I am trying to understand how exactly are bit scores and E-values calculated. I found the formula in [The Statistics of Sequence Similarity Scores](https://www.ncbi.nlm.nih.gov/BLAST/tutorial/Altschul-1.html) and noticed that besides query and target lengths (n, m), it depends on Lambda and K constants, which are tied to the used substitution scores and gap penalties. I found the function `computeEvalue()` https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/util/extractdomains.cpp#L46-L50. I can see those constants are hardcoded, which stands in contradiction to what is described in the document above. Where are those values coming from? I found they are present in Table 1 in [Altschul, S. F., & Gish, W. (1996). [27] Local alignment statistics. Computer Methods for Macromolecular Sequence Analysis, 460–480. doi:10.1016/s0076-6879(96)66029-7 ](https://doi.org/10.1016/S0076-6879(96)66029-7), but not in the same row.; ; For bit score calculation https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/lib/alp/sls_alignment_evaluer.hpp#L159-L162; those are variables indeed, but I had trouble determining how are they set are how they are changing. It it happening here?; https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/alignment/EvalueComputation.h#L48. Thanks in advance for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/731:279,depend,depends,279,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731,1,['depend'],['depends']
Integrability,"Hello, . I am trying to cluster some nucleotide sequences that are circularly permuted. To this end, I am calling `--wrapped-scoring 1` but am encountering a problem (that does not happen when `--wrapped-scoring 1` is omitted) that seems to be due to the `--rescore-mode`. Here's an example command:; `mmseqs cluster perm_DB wrapped_perm_DB_clu tmp --rescore-mode 0 --min-seq-id 0.8 --wrapped-scoring 1`. it fails at a `rescorediagonal` step, citing: `ERROR: wrapped scoring is only allowed with RESCORE_MODE_HAMMING`. Further, specifying `--rescore-mode 0` (which should be the hamming mode) does not fix the issue, indeed, none of the `--rescore-modes` appear to help. Here's an example full output of the above command being run: https://gist.github.com/Zheludev/f567fdad8ea7d2761ec4fab681b211a5. This error does not occur when `mmseqs linclust --wrapped-scoring 1` is used, but in a test case, the `linclust` seems to lack the sensitivity I require - successfully clustering some permuted sequences together but not all, even if all permutations retain 100% sequence identity (upping the `--kmer-per-seq` 100x doesn't help either).. I am running this on linux with ample resources and on version 13.45111. I would greatly appreciate any help with this issue,. Thanks. IZ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/509:117,wrap,wrapped-scoring,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509,5,['wrap'],"['wrapped', 'wrapped-scoring']"
Integrability,"Hello, ; I want to use MMseqs2 to cluster nucleotide sequences from different patients. I use WSL on windows with MMseqs2 version 13-45111+ds-2 by compiling from source. Firslty, I have created separate fasta files using python from an original dataframe containing nucleotide sequences and their IDs. Then, I placed the resulting fasta files in WSL under user/MMseqs2/build/tests and ran the following command: ""mmseqs createdb tests/output1.fasta test/DB1"" while in the ""MMseqs2"" root. However, I get the following error message: ""Cannot open test/DB1.source for writing"". Can you please help me? I apologise in advance if the problem is basic and I've made a mistake in the installation or execution procedure.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/725:523,message,message,523,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/725,1,['message'],['message']
Integrability,"Hello,. First, thank you for the fantastic work on mmseqs2, its super fast! I think I’ve come across an issue where exact matches arent being detected by the mmseqs2 search algorithm. . ## Expected Behavior; Exact matches hit eachother. ## Current Behavior; When a subset of sequences from a reference database are searched against the database, a surprisingly large fraction of proteins do not return themselves as their best hit. The severity of the problem depends on the database size, in the example below 2.8% of proteins do not hit themselves, but when I came across this issue I was generating a larger database where using the same test 31% of proteins were not hitting themselves at all. This result does not change if sensitivity is increased to the maximum (-s 8.5). I find this behaviour concerning given you’d expect an exact matches to be returned in a relatively small database. ## Steps to Reproduce (for bugs); If I grab 10 random genomes ([genome_proteins.tar.gz](https://github.com/soedinglab/MMseqs2/files/1444710/genome_proteins.tar.gz)) from NCBI and create a reference database using their proteins, and use one of these genomes as the query database:; ```; cat *faa > pooled.faa. mmseqs createdb \; 	pooled.faa \; 	reference_DB. mmseqs createdb \; 	GCF_000352185.1_protein.faa \; 	query_DB; ```; Then search query against the reference using default settings, and convert this to a blast-like output:; ```; mkdir tmp . mmseqs search \; 	query_DB \; 	reference_DB \; 	result_DB \; 	tmp . mmseqs convertalis \; 	query_DB \; 	reference_DB \; 	result_DB \; 	result_DB.m8; ```. and grab the top hit for each protein (i.e. first listed):. ```; for i in `cat result_DB.m8 | awk '{print $1}' | uniq `; 	do grep -m 1 -w ^$i result_DB.m8; done > result_DB.top_hits.m8; ```; Then, when we check the results in R:; ```; library('data.table'); d = fread('result_DB.top_hits.m8'); # Check if query matches the reference sequence ID; d$self_match = d$V1 == d$V2. # Check percentage of total ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/48:460,depend,depends,460,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/48,1,['depend'],['depends']
Integrability,"Hello,. I'm trying to run createdb but got the following error message. I have tried with less FASTA files as input but I still got the same message. ## Expected Behavior; createdb works without error. ## Current Behavior; createdb is not able to create a DB since it cannot open the output file for writing. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); MMseqs Version: 92deb92fb46583b4c68932111303d12dfa121364; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; Cannot open sequenceDB.source for writing. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/573:63,message,message,63,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/573,2,['message'],['message']
Integrability,"Hello,. I'm trying to run the search algorithm on a database comprised of over 20k sequences against the uniref100 db. This is the command I'm using and the version, followed by the error after approx. 18 minutes in the run. ##. search ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --split-memory-limit 150G. MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b. mem_align could not allocate memory.; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/3121500954244133633/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; Error: Alignment died. ##. I've tried increasing the memory, thinking this could be the issue, but so far the problem persists. Any help is appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/510:668,wrap,wrapped-scoring,668,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/510,1,['wrap'],['wrapped-scoring']
Integrability,"Hello,; I'm running `mmseqs search` on Travis virtual machine for integration test purpose.; The issue I have is that mmseqs requires more memory than it's available on the machine.; The dataset I'm using consists of 10 sequences, where each is 100 nucleotides long.; Is there a possibility to overcome this behaviour?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb dna.fasta queryDB; mmseqs createdb dna.fasta targetDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99; ```. ## MMseqs Output (for bugs); ```; Error executing process > 'search (1)'. Caused by:; Process `search (1)` terminated with an error exit status (1). Command executed:. mmseqs createdb query.1.fasta queryDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G; mmseqs createtsv queryDB targetDB outputDB chunk_alignment_tsv. Command exit status:; 1. Command output:; Omit consensus 568767/qfalse; Min codons in orf 	30; Max codons in length uery_seq32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode _seqs_sp2; Orf start mode a:VTML801; Forward frames corr 1 -1,2,3; Reverse frames 1.5 --th1,2,3; Translation table 	1; Translate orf de 0; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query se a com1; Search type 	3; Number search iterations 	1; Start sensitivity work/ac/4; Search steps 	1; Run a seq-profile search in slice modeging to false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false; ; search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G ; ; MMseqs Version: 	6d92cd21676ccc36531f2852f7eb747f6389435f; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	3; E-value thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/253:66,integrat,integration,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253,1,['integrat'],['integration']
Integrability,"Hello. MMSeq2 dies after write error, The shell output is below. Anyone knows why this happens?. Thanks,. Torsten. ___________________; Create directory tmp; search kelp_database uniref50 results tmp . MMseqs Version: 	GITDIR-NOTFOUND; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/478:360,wrap,wrapped,360,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478,1,['wrap'],['wrapped']
Integrability,Hello. my apologies if I'm posting this message in the wrong place (I am not reporting a potential bug here). I would like to align a dataset containing ~30Mio illumina reads against TrEMBL. . However the run crashes because the generated files are huge and I eventually run out of disk space. Can someone help me to optimize the search parameters to limit the disk space usage (I am only interested in finding the 10 best hits of each read). I am currently running this command:. mmseqs search QUERY.mms TrEMBL RESULT.mms /tmp/tmp_mmseqs.55447 --remove-tmp-files true --threads 60 -a -e 1E-3 -v 3 -s 2.5 --max-rejected 10 --max-seqs 100000. and get this warning: Hard disk might not have enough free space (1T left).The prefilter result might need up to 353T. Thank you for the help; best regards; Guillaume,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/380:40,message,message,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/380,1,['message'],['message']
Integrability,"Hi all,. I was trying for the first time to run MMseqs to assign taxonomy. Just to test it I used a set of short reads as input and tried to annotate it against the uniref100 db. Everything works fine but I'm having problems in the last step of the process. ## Expected Behavior. ` mmseqs taxonomy readsDNA10 uniref_db result /tmp -s 6 `. should generate a result file with the assigned taxonomy. ## Current Behavior. MMseqs Version: 60b77df37df55c3984870760591facbb361c3939; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/669:884,wrap,wrapped,884,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669,1,['wrap'],['wrapped']
Integrability,"Hi there, thanks for reading this. I am trying to download mmseq2 but it always gives me the error message: cannot verify mmseqs.com's certificate, issued by ‘/C=US/O=Let's Encrypt/CN=R3’: Issued certificate has expired. Could you please help me with this issue?. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/751:99,message,message,99,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/751,1,['message'],['message']
Integrability,"Hi, ; I'm using the mmseqs2 to assign the taxonomic label for my human gut microbiota contigs, Here I have two questions and any suggestion would be nice,. 1. I have noticed that there are many prebuiled dabatabse which includ GTDB ,but in the wiki page there is a section about `Create a seqTaxDB for GTDB`, does this step have been integrated in the pre-established GTDB database? ; 2. I have tried differert database to run the taxonomy module, finally, I found there are little consistance at the species level between any two database ,I tried swissprot, uniref50 , uniref90 , nr, and GTDB, so I'm confused which database should be adopt, is there any recommendation? by the way, it's bacteria. Is there any preference? The results in your paper use the refseq database ,so what if you change another database?. I do need your help, please,Thanks a lot !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/546:334,integrat,integrated,334,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/546,1,['integrat'],['integrated']
Integrability,"Hi, I think there is some inconsistency in `extractalignedregion` module to generate database with regions. I'm trying to cluster aligned regions belonging to a db. ```; mmseqs search id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN /tmp/ --threads 40 -s 7.5 -a -e 1e-10 --alt-ali 1 &> allvsall.search.log ; mmseqs convertalis id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.tsv --threads 40 ; mmseqs extractalignedregion id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.SEQ --threads 40; mmseqs cluster pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU /tmp/ -e 1e-10 -c 0 -a -s 7.5 --threads 40 ; ```. But it fails in the last step with this message. ```; rescorediagonal pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 1e-10 -c 0.5 -a 1 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 204.52K 0s 215ms; Time for merging files: 0h 0m 0s 94ms; Time for processing: 0h 0m 0s 845ms; clust pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 /tmp//1456503536827778696/linclust/7100099902620488817/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; ```. I think it is happening because of the number of files generated by the `extractalignedregion` module.; If it isn'",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/210:899,message,message,899,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210,1,['message'],['message']
Integrability,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/212:650,message,message,650,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212,1,['message'],['message']
Integrability,"Hi,. I am using a strategy that I have been using for some time successfully but since the last update, it has stopped working. The idea is to group the sequences and generate an MSA for each cluster to generate models for each MSA and compare all models with hhsearch. So after compiling my cluster, I use `createseqfiledb` and then use` apply` with clustalo. Exactly the apply step has returned me some errors and it never finishes. The usual pipeline is:; ```; # .... a lot of clusters hierarchically prepared ; mmseqs mergeclusters sbps.DB sbps.CLU $(\ls -d1t id_0cov_0.8evalue_* | tac | sed 's/$/\/MMseqsClust/' | xargs ) --threads 30 ; mmseqs createtsv sbps.DB sbps.DB sbps.CLU sbps.CLU.tsv --threads 40. mmseqs createseqfiledb sbps.DB sbps.CLU sbps.CLU.SEQ --threads 30 --min-sequences 3. ## errors from this point; mmseqs apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --output-order=input-order --threads=1 --iter=5 ; ```. The error is exemplified by this:; ```; apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --threads=1 --iter=5 . MMseqs Version:	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Threads 	30; Compressed	0; Verbosity 	3. Start applying.; write stdin1: Bad address ] 0.00% 1 eta -; ERROR: Sequence 'WP_078846918.1/28-316' has 0 residues; FATAL: Reading sequence file '-' failed; ERROR: Sequence 'WP_082295029.1/41-339' has 0 residues ] 2.09% 29 eta 2h 51m 21s ; FATAL: Reading sequence file '-' failed; Entry 30 exited with error code 1!. ```. I may share the `sbps.DB` and `sbps.CLU` and associated files to check, but I'm sure that they are fine. Just tell me how to send to you. But I don't know if the issue happens in `createseqfiledb` but since it doesn't return any error message and the files seem okay, the problem may be the STDIN.; Searching sequences like `WP_082295029.1/41-339` in the files I was able to find it and the sequence is the same as the initial fasta file. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/230:1736,message,message,1736,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230,1,['message'],['message']
Integrability,"Hi,. I have written a tool called pharokka (https://github.com/gbouras13/pharokka) that annotates bacteriophage genomes. Pharokka uses mmseqs2 to match predicted CDS to the PHROGs (https://phrogs.lmge.uca.fr), CARD and VFDB databases using mmseqs2 which follows the method at https://phrogs.lmge.uca.fr/READMORE.php. Mmseqs2 is amazingly fast especially for large input metaviromes, so it's a brilliant choice for this clustering - thanks for developing it!. I am coming across a problem with the new version released 10 days ago. With v 13.4511, the 3 mmseqs2 searches take approximately 5-10 minutes in total depending on input, architecture and threads used. However, since mmseqs2 v14-7e284 has been released, users of pharokka have reported that the mmseqs2 step hangs indefinitely (at least 20+ hours) when pharokka with mmseqs2 v14-7e284 is installed with bioconda. I have replicated the issue on my machines also. . The relevant lines in pharokka are 358-369:. https://github.com/gbouras13/pharokka/blob/3b8f7ae207b367366765f482c9dce1dd2cccee80/bin/processes.py#L358 . # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625:611,depend,depending,611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625,1,['depend'],['depending']
Integrability,"Hi,. I would like to thank you for this very nice software. I'm wondering if you can add to the wiki page the protocol to annotate a dataset of proteins with Pfam domains (as explained in the example 3 of the MMseqs2 paper). I'm struggling to build a profile DB from the PFAM Hmm profiles and I'm quite certain that it would be very useful for many of us!. Best. Raphael",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/59:110,protocol,protocol,110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/59,1,['protocol'],['protocol']
Integrability,"Hi,. I'm running MMseq2s to clusterize a huge set of fasta sequences (near 640000). I run the easy-cluster procedure (mmseqs easy-cluster scaffold.fa clustered tmp) but in some point the follow message appear:. Index table: Masked residues: 2748074; Index table: fill; Segmentation fault (core dumped); Error: Prefilter step 0 died; Error: Search died. Any idea of what happend?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/187:194,message,message,194,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187,1,['message'],['message']
Integrability,"Hi,. I'm trying to convert the MSA of a cluster DB to HH-blits format. . So, I follow [this tutorial](https://github.com/soedinglab/mmseqs2/wiki#how-to-create-a-hhblits-database). > mmseqs result2msa pbps.DB pbps.DB pbps.CLU pbps.CLU.msa --compress ; > ln -s pbps.DB_h pbps_MSA_header.ffdata ; > ln -s pbps.DB_h.index pbps_MSA_header.ffdindex ; > ln -s pbps.DB_h.index pbps_MSA_header.ffindex ; > ln -s pbps.DB pbps_MSA.ffdata ; > ln -s pbps.DB.index pbps_MSA.ffindex . All commands above work nicely, the `pbps.CLU` database are also nice capable to generate the TSV file with all clusters. But when I run:; > mpirun -np 2 /usr/lib/hh/bin/cstranslate -i pbps.CLU.msa_ca3m.ffdata -o pbps.CLU.msa_cs219 -A /usr/lib/hh/data/cs219.lib -D /usr/lib/hh/data/context_data.lib -x 0.4 -c 4 -I ca3m. I got this message:; ```; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[19728,1],1]; Exit code: 1; --------------------------------------------------------------------------; ```. How can I debug this error?? . Also, when I used the `mmseqs result2msa` with `--compress` option the output are two files with `_ca3m.ffdata` and `_ca3m.ffindex`. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174:801,message,message,801,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174,1,['message'],['message']
Integrability,"Hi,. I'm using MMSeqs2 15-6f452. Here what I've done : . # Download UniRef100; mmseqs databases UniRef100 UniRef100DB tmp; # Remove Ospithokontes; mmseqs filtertaxseqdb UniRef100DB UniRef100NoOpisthokontaDB --taxon-list '!33154'; # Convert .msa; mmseqs convertmsa PRK_align.msa PRK_msaDB; # Transform PRK in a profil; mmseqs msa2profile PRK_msaDB profilePRK_DB; # Search in database; mmseqs search profilePRK_DB UniRef100NoOpisthokontaDB PRK_alnResults tmp/ --cov-mode 0 -c 0.8; # Compute taxonomy; mmseqs taxonomy PRK_alnResults UniRef100NoOpisthokontaDB PRK_TaxaDB tmp/. # Error message; Input database ""PRK_alnResults"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid. I don't get why the output of search cannot be used with taxonomy. What I want to do is to grep all the UniRef100 ID present in PRK_alnResults and to used at the end taxonomyreport on them. I'm on this since few days, and unable to find a solution. I'd be very pleased if you have time to give me some tips about it. Xillanne",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/896:581,message,message,581,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/896,1,['message'],['message']
Integrability,"Hi,. I'm using the mmseqs hosted in linuxbrew version 3-be8f6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:75,rout,routine,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,3,['rout'],['routine']
Integrability,"Hi,; thank you very much for mmseqs2, it's really amazing! . We are clustering a few million of sequences following a similar approach than the one described in your uniclust pipeline. Before reinventing the wheel, we are wondering if mmseqs has an easy workaround to extract the sequence identities for each pair of sequences in a cluster from the _alignment_ file. Our aim would be to be able to integrate the identities between pairs to the output of _createtsv_. Do you have any recommendations?. Many thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/13:398,integrat,integrate,398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/13,1,['integrat'],['integrate']
Integrability,"Hi. I was trying to search single queries against NCBI NR just for test. ; Somehow, I got just a few results ~450 results by a query. The point is, the lowest e-value is too low ~1e-50. I've got no error message. Then, I think I'm doing something wrong in `createindex`.; Probably I need to change some parameters as `--max-seqs`. For example, I used this query:; ```; >WP_066948057.1 AAA family ATPase [Microtetraspora fusca]; MRKVPLPEPVSAALTDALDQLRLAVEDLHFGLDIPGAEEARKAQAAVLAQLEDYVIPRVHMSTAPALIVVAGSTGAGKST; LVNTLAAQRVSTTGVRRPTTGTPVLVCHPDDHEWFAEGDLLGGLTRLERPVEGVGTDSVVLSTTERLPPGVALLDTPDID; SVVEEHHEIAHRMLDAADMWVFVTTASRYADAPSWNLLRLAKERGARLVIVLSRVPEKSRDVIVKHFGRMLDEYGLADAE; RFVIKETTVTEGRLPDKEVSELRMWLAHLSVDDERRAAAVRTTLNGVLDSFRNRVPALARHLETQVALRADLRSDVDAAY; MGALADIDEATRNGSLLRGEVLARWQDFAGSGDLIRTLQLRRGGKGGQRGPQRARALRTAIRNALESVINSAAERAAEEV; VVRWRQRAGAGDRLAATPGLGRSSDEATQRTSRAIGAWQDHVTELIRTEGVTKRSVARLVSFDVESLALIFTVSLLGYGA; TDVSSGRGAGALPQRLLRALLGAESLRNISAKARSDLRARIGMVFDEETLRYVDELDGAGIPDEAAATRLYQATYNLEVA; R; ```. The NR was prepared with; ```; mmseqs databases NR nr tmp; mmseqs createindex nr tmp; ```. And the search was performed like this; ```; mmseqs easy-search query.fa nr result tmp; ```. The same query with blastp has returned me 5000 results using `-max_target_seqs 5000`. https://github.com/soedinglab/MMseqs2/wiki#disk-space. Do I need to change the parameters in `createindex` ?. I'd like to maximize the number of results for a e-value threshold. As returning all results down to 1e-3 of e-value or other value I choose. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/300:204,message,message,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/300,1,['message'],['message']
Integrability,"I 42; ALGNGK 34; GLGNGK 32; ELPGVN 31; DLLDLP 29; GQQVAR 24; GEQVAR 23; Time for index table init: 0h 0m 2s 664ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10966; Target db start 1 to 10966; [=================================================================] 10.97K 3s 91ms. 46.510777 k-mers per position; 438 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 13 sequences passed prefiltering per query sequence; 7 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 41ms; Time for processing: 0h 0m 8s 706ms; align ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/pref_step1 ./mmseqs_output/tmp/5351426679731834765/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 10966 type: Aminoacid; Target database size: 10966 type: Aminoacid; Calculation of alignments; [=================================================================] 10.97K 9s 362ms; Time for merging to aln_step1: 0h 0m 0s 91ms; 128470 alignments calculated; 17027 sequence pairs passed the thresholds (0.132537 of overall calculated); 1.552708 hits per query sequence; Time for p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:25993,wrap,wrapped-scoring,25993,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"I am having an error message saying ""2023-07-03 13:58:41,863 Warning: importing 'simtk.openmm' is deprecated. Import 'openmm' instead."" What should I do to solve it?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/727:21,message,message,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/727,1,['message'],['message']
Integrability,"I encountered an error while executing the command cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ... My cmake version is 3.28.0, and gcc version 7.3. The error message I received is as follows:. -- The CXX compiler identification is GNU 7.3.0 ; -- The C compiler identification is GNU 7.3.0 ; -- Detecting CXX compiler ABI info ; -- Detecting CXX compiler ABI info - failed ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ - broken ; CMake Error at /usr/local/share/cmake-3.28/Modules/CMakeTestCXXCompiler.cmake:60 (message): ; The C++ compiler; ""/home/anaconda3/envs/AlphaFlow/bin/c++"" ; is not able to compile a simple test program. ; It fails with the following output:; Change Dir: '/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz'; Run Build Command(s): /usr/local/bin/cmake -E env VERBOSE=1 /usr/bin/gmake -f Makefile cmTC_8b7b3/fast ; /usr/bin/gmake -f CMakeFiles/cmTC_8b7b3.dir/build.make CMakeFiles/cmTC_8b7b3.dir/build; gmake[1]: Entering directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; Building CXX object CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o ; /home/anaconda3/envs/AlphaFlow/bin/c++ -o CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -c /home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz/testCXXCompiler.cxx ; Linking CXX executable cmTC_8b7b3 ; /usr/local/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8b7b3.dir/link.txt --verbose=1 ; /home/anaconda3/envs/AlphaFlow/bin/c++ -rdynamic CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -o cmTC_8b7b3 ; collect2: fatal error: cannot find 'ld' compilation terminated. ; gmake[1]: *** [cmTC_8b7b3] Error 1 ; gmake[1]: Leaving directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; gmake: *** [cmTC_8b7b3/fast] Error 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/816:172,message,message,172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/816,2,['message'],['message']
Integrability,"I have installed the latest version available via ; `conda install -c conda-forge -c bioconda mmseqs2`. I tried to download the PDB database via ; `mmseqs databases PDB pdb_db tmp`. This leads to the process just hanging. One of the error messages printed shows that the URL seems to be inactive, as described in this [issue](https://github.com/soedinglab/MMseqs2/issues/772#issue-1977470516) (#772). . 03/11 13:57:28 [ERROR] CUID#7 - Download aborted. URI=https://ftp.wwpdb.org/pub/pdb/derived_data/pdb_seqres.txt.gz; Exception: [AbstractCommand.cc:340] errorCode=2 Timeout. Is there a way to specify the URL when calling `mmseqs databases`? Or could you suggest a fix for the code when installed via conda?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/820:239,message,messages,239,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/820,1,['message'],['messages']
Integrability,"I think the error message should say ""could not"" not ""could""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/202:18,message,message,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/202,1,['message'],['message']
Integrability,"I tried the current conda version of mmseqs, which is MMseqs2 Version: 14.7e284. I ran the following commands ; mmseqs createdb --dbtype 2 input.fas DB; mmseqs cluster DB clusterRes /dev/shm/user/ --min-seq-id 0.95 -c 0.8 --cov-mode 1. When trying to get the sequences with; mmseqs convert2fasta clusterRes out_cluster.fas; (I also tried with and without the --use-header-file 0 and --use-header-file 1 option.). I get the error message: ; Database clusterRes needs header information. I found no explanation for this. I created an output database and hoped to get the result converted back to fasta files. I get this same error message when trying the clusterupdate option.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/673:429,message,message,429,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/673,2,['message'],['message']
Integrability,"I was trying to use MMSEQS2 for clustering with:. mmseqs cluster DB clu tmp --cascaded -e 1e-5 --max-seqs 30000 --similarity-type 1. It was working fine (MMseqs version ad5b994c5f21d2117c359ecb748811cbd01eba73) but when I try to execute it in another machine (both macOS El Capitan 10.11.6, this time MMseqs version e3ca470308523cb3d997088c65e821cc79e2a422), I get several error messages as follows,. ERROR: Set 0 has more elements than allocated (1)!. and the clustering never finishes. Any idea of what is this due to or how to solve it?. Thank you in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/28:379,message,messages,379,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/28,1,['message'],['messages']
Integrability,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:633,depend,depending,633,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['depend'],['depending']
Integrability,"I would like to specify in a `mmseqs search` command the effective size of a database, the way blastp allows with the `-dbsize` option. I have not been able to find an analogous option in the MMseqs help message, am I missing anything?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/505:204,message,message,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/505,1,['message'],['message']
Integrability,"I'm running easy-search for a set of fasta files. For the majority of files everything is fine, for a small subset i'm getting the same error after prefiltering. . That's an example of my command: `../bin/mmseqs/bin/mmseqs easy-search s01_complete_refseq_representative_fasta_DEVIDED/mmseqs_rep_d_2.fa mmseqs/mmseqs_clu_rep_db/DB mmseqs_test.tsv tmp1 --format-mode 4 --num-iterations 5 -e 1e-5 --format-output query,target,fident,alnlen,mism; atch,gapopen,qstart,qend,tstart,tend,evalue,bits --max-seqs 1000000 -s 6`. ## MMseqs Output (for bugs). ```; MMseqs Version: b22d5f6d02cb27ebc2cd931d8d20fe92ff54b8a8; Substitution matrix aa:blosum62.out,nucl:nucleotide.out ; Add backtrace false; Alignment mode 3 ; Alignment mode 0; Allow wrapped scoring false ; E-value threshold 1e-05; Seq. id. threshold 0 ; Min alignment length 0; Seq. id. mode 0 ; Alternative alignments 0; Coverage threshold 0 ; Coverage mode 0; Max sequence length 65535 ; Compositional bias 1; Compositional bias 1 ; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800 ; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 16; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 1000000; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1 ; Profile E-v",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/774:732,wrap,wrapped,732,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/774,1,['wrap'],['wrapped']
Integrability,"I'm trying to create clusters of a number of pre-clustered databases, all stored in multi-fasta files. The `createdb` command seems to runs fine on all files, however, the `cluster` command leads to an error on some, but not all, files:. ```; Invalid database read for database data file=tmp_clusters/DB, database index=tmp_clusters/DB.index; getData: local id (27) >= db size (27); Rescore diagonals.; Could not open data file tmp_clusters/tmp/linclust/pref!; Could not open data file tmp_clusters/tmp/linclust/pref_rescore1!; awk: can't open file tmp_clusters/tmp/linclust/pre_clust.index; source line number 1; ```. This error is followed by many other errors, all related to being unable to open data files (e.g. `Could not open data file tmp_clusters/tmp/linclust/pref!`). The error seems to depend on the sequences in the file. For example, if I merge two of the fasta-files, one of which runs without errors and one which leads to above error, the error is reproduced. I have not been able to identify which feature in the sequences leads to the error. Before every run of mmseqs, I delete all temp files. Regarding my environment:; * OSX 10.11.3; * Git commit - 3ff5b8e26c93420c04c589fc663734ee8c964c3c; * Self compiled . I've attached two files, one that leads to errors in my build, and one that does not. Hope you can help. . [DB_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089709/DB_errors.txt); [DB_no_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089710/DB_no_errors.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/35:797,depend,depend,797,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/35,1,['depend'],['depend']
Integrability,"I'm upgrading a snake workflow that uses an older version of mmseqs (bc080d753c826a3f9153310f9e12b66976fba905) to a newer one (b0b8e85f3b8437c10a666e3ea35c78c0ad0d7ec2). I'm having some trouble getting old commands to work with the newer version. For the taxonomy call:; ```; mmseqs taxonomy <i:queryDB> <i:targetDB> <o:taxaDB> <tmpDir> [options]; ```; I'm using a targetDB that was generated with the old version, so I wondered if that could be an issue. But remaking the targetDB with the new version didn't fix it in a previous attempt. ## Expected Behavior. Convert alignment results into an .m8 formatted file. Exactly like shandley was trying to do in this issue:; https://github.com/soedinglab/MMseqs2/issues/226. ## Current Behavior. I'm following the commands given in the solution to this issue here: https://github.com/soedinglab/MMseqs2/issues/226. While the taxonomy call works fine, the convertalis call fails with the message:; [Backtrace cigar is missing in the alignment result. Please recompute the alignment with the -a flag. ## Steps to Reproduce (for bugs). Used the commands given as the solution to this issue:; https://github.com/soedinglab/MMseqs2/issues/226. This has worked fine for the older version of mmseqs2, but no longer works with the new version. This taxonomy call produces output files in taxonomyResult with 10 columns:. ```; mmseqs taxonomy \; seqtable_queryDB \; targetDB \; taxonomyResult \; tmp_aa \; -a \; -s 7 \; --tax-output-mode 1 \; --search-type 2 \; --threads 16; ```. Next I try to convert the taxonomyResult to .m8 using mmseqs convertalis, which fails. ```; mmseqs convertalis \; seqtable_queryDB \; targetDB \; taxonomyResult \; aln.m8 \; --format-output ""query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln""; ````. ## MMseqs Output (for bugs). [Backtrace cigar is missing in the alignment result. Please recompute the alignment with the -a flag.; Command: mmseqs align results/results/mmseqs_aa_out/seqtable_q",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/614:933,message,message,933,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/614,1,['message'],['message']
Integrability,"I've been evaluating how adding pseudocounts change the sensitivity of profile searches. ```; mmseqs msa2profile msa_db/msa_db profile_db/profile_db --match-mode 1 --match-ratio 0.5 --threads 64; mmseqs msa2profile msa_db/msa_db profile_db_pseudo/profile_db --match-mode 1 --match-ratio 0.5 --threads 64 --pca 0.3; ```. I noticed, however, that the search results are different depending on the version of MMSeqs2. If I use the latest GitHub/Conda release (`13-45111`), the search on the `profile_db_pseudo` will provide more results (as expected, given that the alignments are not very diverse). If I use a newer release (`92deb92fb46583b4c68932111303d12dfa121364`), the search on the database with pseudocounts will results in *less* hits. ```; mmseqs easy-search --threads 64 fragment_sequences.faa profile_db_pseudo/profile_db mmseqs2_results_pseudo tmp; ```. Were there any changes in MMSeqs2's behavior regarding pseudocounts? Also, are there recommendations about how to use the `--pca` parameter?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/547:378,depend,depending,378,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547,1,['depend'],['depending']
Integrability,"I've been trying to perform some basic tests with MMSeqs2 and have encountered an issue where I repeated get the following error message:. Init data structures...; Compute score only.; Could not open data file [path_to_dir]/mmseqs_tmp/pref_4!. The ""[path_to_dir]/mmseqs_tmp/"" directory contains two temporary files (pref_4.index_tmp_0.0 and pref_4_tmp_0.0) along with a blastp.sh script. I'm not using any advanced options for my search, and both input databases are (as far as I can see) formatted correctly. Maybe I'm overlooking something embarrassingly simple?. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/11:129,message,message,129,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11,1,['message'],['message']
Integrability,"I've got a file with about 200,000 sequences. When running mmseqs2 `easy-cluster` like this:; ```; mmseqs easy-cluster test.fasta out.db tmp --min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:579,depend,depend,579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['depend'],['depend']
Integrability,"If I run `mmseqs taxonomy` with version 9.d36de on a taxonomy database created with version 8.fac81, then I get the following error:. ```; [...]; Filter by numerical comparison to first row.; [=================================================================] 121.87K 21m 16s 334ms; Time for merging files: 1h 14m 39s 541ms; Time for processing: 2h 14m 15s 378ms; terminate called after throwing an instance of 'std::out_of_range'; terminate called recursively; terminate called recursively; what(): map::atAborted; Error: Lca died; ```. The database was created from uniclust90_2018_08.tar.gz. If I instead run `mmseqs taxonomy` with version 8.fac81, then the job finishes successfully. It appears that `mmseqs taxonomy` is not backwards-compatible, but it has no checks on the database to warn the user of this. Instead, the user gets a cryptic error message.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221:853,message,message,853,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221,1,['message'],['message']
Integrability,"Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-patter",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:3055,wrap,wrapped-scoring,3055,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"Maybe I'm going crazy, but this really does seem like a bug. Perhaps there's something obvious here, but I'm not seeing it. ## Expected Behavior; Returning hits with e-values less than specified e-value threshold on the command line when using easy-search. ## Current Behavior. e-value threshold becomes zero when specified e-value < 1E-45. `mmseqs easy-search da7915829ba14fe0a86c3cc539a89f43.constructs.fa /db/mmseqs/uniprotkb_swiss-prot result.m8 /dev/shm/tmp3343 -e 1E-46`. ```; MMseqs Version: 12.113e3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0; Seq. id. threshold 0; Min alignment length 0; ```. ## Steps to Reproduce (for bugs); Run an easy-search. Specift an e-value threshold < 1E-45; ; ## MMseqs Output (for bugs); ```; MMseqs Version: 12.113e3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequenc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/379:611,wrap,wrapped,611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379,2,['wrap'],['wrapped']
Integrability,"Maybe this is by design, but the (helpful) message about `--cluster-reassign` makes it seem like a flag as opposed to an option, i.e. have to specify `--cluster-reassign 1` to turn it on. Here is a suggestion... (fwiw I haven't tried this option yet because the install from conda on my machine with my current dataset is giving me an error `Alignment format is not supported! ] 0.00% 1 eta - Error: Clustering step 2 died Error: Search died`, but I will investigate more on my end to see if it's an issue with my version/files)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/329:43,message,message,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329,1,['message'],['message']
Integrability,"Message ""Error: there must be an error: ~"" appears when mmseqs cluster/easy-cluster is used",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/363:0,Message,Message,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363,1,['Message'],['Message']
Integrability,"Metaclust, a database clustered by linclust protocol in MMseqs2, is becoming smaller with each release. Metaclust95 2017_01 has 97G.; Metaclust 2017_05 has 60G.; Metaclust 2018_01 has 28G only.; Shouldn't the number of Metaclust entries increase with time?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/54:44,protocol,protocol,44,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/54,1,['protocol'],['protocol']
Integrability,"No error occurs when I run with the following command:. `mmseqs createdb ./*.faa .. /mmseqs_DB/DB_1`; `mmseqs linclust DB_1 linclu_1 ../all_reference_protein_faa --min-seq-id 1 --cov-mode 1 -c 0.8 --kmer-per-seq 80 --remove-tmp-files --threads 25`; `mmseqs createsubdb linclu_1 DB_1 DB_1_clu_rep`; `mmseqs convert2fasta DB_1_clu_rep DB_1_clu_rep.fasta`. However, when I generate multiple databases and merge them, an error occurs:. `mmseqs createdb ../DB1/*.faa .. /mmseqs_DB/DB_1`; `mmseqs createdb ../DB2/*.faa .. /mmseqs_DB/DB_2`; `mmseqs mergedbs DB_1 ../mmseqs_DB_merge/DB_merge DB_2`; `mmseqs linclust DB_merge linclu_merge ../all_reference_protein_faa --min-seq-id 1 --cov-mode 1 -c 0.8 --kmer-per-seq 80 --remove-tmp-files --threads 25`; `mmseqs createsubdb linclu_merge DB_merge DB_merge_clu_rep`. No errors have been generated so far.; An error occurs when I run the following code:. `mmseqs convert2fasta DB_merge_clu_rep DB_merge_clu_rep.fasta`. The error message is as follows:; Database DB_merge_clu_rep needs header information. Is it `mmseqs mergedbs DB_1... /mmseqs_DB_merge/DB_merge DB_2` Is there an error in this step?. Thank you for your reply!. With best wishes!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/819:968,message,message,968,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/819,1,['message'],['message']
Integrability,"PEAR 65; FDDTDS 59; ADYTFS 55; LITRGY 55; GPGGTT 44; Time for index table init: 0h 0m 2s 668ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 20942; Target db start 1 to 20942; [=================================================================] 20.94K 0s 928ms. 1.256278 k-mers per position; 118 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 8 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 51ms; Time for processing: 0h 0m 6s 669ms; align ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/pref_step0 ./mmseqs_output/tmp/5351426679731834765/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 20942 type: Aminoacid; Target database size: 20942 type: Aminoacid; Calculation of alignments; [=================================================================] 20.94K 15s 380ms; Time for merging to aln_step0: 0h 0m 0s 75ms; 172065 alignments calculated; 67554 sequence pairs passed the thresholds (0.392607 of overall calculated); 3.225766 hits per query sequence; Time for ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:21376,wrap,wrapped-scoring,21376,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"P_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	20; Gap extension cost 	3; Zdrop 	40; Threads 	28; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:VTML40.out,aa:VTML40.out; Sensitivity 	12; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	11011101; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort res",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:2435,wrap,wrapped,2435,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['wrap'],['wrapped']
Integrability,"Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```; ^^^^^^; There is no more printed info after the last line in the above output, and it got stuck for more than 12h. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `cab0e83840f5afa0632aada56e6bacaf46211c33`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:5389,wrap,wrapped-scoring,5389,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['wrap'],['wrapped-scoring']
Integrability,"Recently I came across the tool you have developed: MMseqs2 and I have tested for the protein search. It is very fast comparing to blastp. However, I noticed the number of hit is about 1/3 of the blastp hit if I use the most sensitive parameter -s 7.5 and the same evalue cutoff 0.01. The target database is about 2M sequence and the query is 10K sequence. I noticed a lot of warning message was printed ""Sequence 131 produces too many hits. Results might be truncated”. I have tried to change other parameters, such as —max-accept, but the situation does not change. It would be great if you could provide some information about how to produce all the hits as close as possible to blastp (with the same evalue cutoff), but much faster. Thanks.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107:384,message,message,384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107,1,['message'],['message']
Integrability,Requesting from the current urls with ftp as protocol gives me error as follows:. `Invalid request. Privoxy doesn't support FTP.`,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/496:45,protocol,protocol,45,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/496,1,['protocol'],['protocol']
Integrability,"Running easy-cluster pipeline on a fasta file of protein sequences. Getting 575 messages saying ""Cannot extract identifier from entry nnnnn"" out of 37k input proteins. ; Is this an error or just a warning? ; Are those proteins being clustered or ignored? ; How can I figure out which proteins in my input file are causing the problem so I can fix it? ; Is there a description of the required fasta header format for proper identifier extraction in the manual (I didn't see it)?. Ubuntu 20.04; mmseqs2 v 13.45111. Thanks,; Bill",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/804:80,message,messages,80,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/804,1,['message'],['messages']
Integrability,"TATCCCCTCGAGG	12523; CATAAAAACCGAGGG	12298; TAAAAACCCCGGGGG	12038; TTTTATTTTATTCTT	9764; CTTAGGGGTTACGTT	9670; GTGTAATCCCTCGAG	9663; CTGAAACCATTCTCG	9602; Time for index table init: 0h 2m 35s 948ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1604546; Target db start 1 to 802273; [=================================================================] 1.60M 1h 46m 59s 76ms. 0.996125 k-mers per position; 14106896 DB matches per sequence; 1161942 overflows; 277 sequences passed prefiltering per query sequence; 300 median result list length; 3973 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0s 974ms; Time for processing: 1h 49m 41s 539ms; rescorediagonal tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 1.60M 14m 50s 51ms; Time for merging to aln_ungapped: 0h 0m 1s 439ms; Time for processing: 0h 15m 7s 16ms; subtractdbs tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . subtractdbs tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . Remove tmp/16479300059278292880/aln_ungapped ids from tmp/16479300059278292880/pref; [=================================================================] 1.60M 1s 175ms; Time for merging to pref_subtract: 0h 0m 1s 400ms; Time for processing: 0h 0m 5s 506ms; align tmp/16479300059278292880/query_seqs tmp/1647930005",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:13849,wrap,wrapped-scoring,13849,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['wrap'],['wrapped-scoring']
Integrability,"The `convertalis` command exits with an error when no match is found in the DB. Maybe this could be caught by the web server and an informative message could be displayed in the results page (instead of the standard `Error!`).; ```; mmseqs-web-worker_1 | easy-search /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/job.fasta /opt/mmseqs-web/databases/test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/alis_test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp --dont-shuffle --db-output --db-load-mode 2 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --search-type 3 --strand 2 --greedy-best-hits; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | MMseqs Version: 	d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | Substitution matrix 	blosum62.out; mmseqs-web-worker_1 | Add backtrace 	false; mmseqs-web-worker_1 | Alignment mode 	3; mmseqs-web-worker_1 | E-value threshold 	0.001; mmseqs-web-worker_1 | Seq. id. threshold 	0; mmseqs-web-worker_1 | Min. alignment length 	0; mmseqs-web-worker_1 | Seq. id. mode 	0; mmseqs-web-worker_1 | Alternative alignments 	0; mmseqs-web-worker_1 | Coverage threshold 	0; mmseqs-web-worker_1 | Coverage mode 	0; mmseqs-web-worker_1 | Max sequence length 	65535; mmseqs-web-worker_1 | Compositional bias 	1; mmseqs-web-worker_1 | Realign hits 	false; mmseqs-web-worker_1 | Max reject 	2147483647; mmseqs-web-worker_1 | Max accept 	2147483647; mmseqs-web-worker_1 | Include identical seq. id. 	false; mmseqs-web-worker_1 | Preload mode 	2; mmseqs-web-worker_1 | Pseudo count a 	1; mmseqs-web-worker_1 | Pseudo count b 	1.5; mmseqs-web-worker_1 | Score bias 	0; mmseqs-web-worker_1 | Gap open cost 	11; mmseqs-web-worker_1 | Gap extension cost 	1; mmseqs-web-worker_1 | Threads 	24; mmseqs-web-worker_1 | Compressed 	0; mmseqs-web-worker_1 | Verbosity 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:144,message,message,144,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['message'],['message']
Integrability,"The `expandaln` command fails to properly read index, producing an '`Invalid database read for database data`' error. ## Expected Behavior. Command to run without error messages. ## Current Behavior. Command fails instantly with following error message:. ```; Invalid database read for database data file=db/human.idx, database index=db/human.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); ```bash; mkdir db; mkdir job; mmseqs createdb uniprotkb_human.fasta db/human; mmseqs createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1; mmseqs createdb query.fasta job/qdb. mmseqs search job/qdb db/human job/res job/tmp1 --num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:169,message,messages,169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,2,['message'],"['message', 'messages']"
Integrability,"The docs for `--split-memory-limit` say that this number should be provided in units of megabytes. However, it looks like it is actually being interpreted as kilobytes. Perhaps there is an inconsistant conversion somewhere, e.g. multiplying by 1024 instead of 1024^2?. ```shell; [saladi1@comet-ln3 mmdb]$ mmseqs search -h | grep mem; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; ```. When I specify `--split-memory-limit 1000000` (1 TB) to `mmseqs search`, it looks like `mmseqs prefilter` is called carrying this parameter through, however, it dies with the following message:. > Can not fit databased into 1024000000 byte. Please use a computer with more main memory. This is odd because, 1024000000 bytes = 1 GB not 1 TB (off by a factor of 1e3). See call and output below. I'm not sure how many places this unit conversion is done, but in the context of `mmseqs prefilter` it does look like the parameter is multiplied by 1024 (as opposed to 1024^2). https://github.com/soedinglab/MMseqs2/blob/d32e75025c1bd419188d4892db863a0f02b30ddf/src/prefiltering/Prefiltering.cpp#L184. ## MMseqs Output; ```shell. [saladi1@comet-30-01 mmdb]$ mmseqs search \; > euk_screen/screenDB \; > uref_euk85_rep/uref_euk85_rep \; > euk_screen_prof \; > mmtemp \; > --local-tmp /scratch/saladi1/22776241/ \; > --remove-tmp-files 1 \; > --split-memory-limit 1000000; search euk_screen/screenDB uref_euk85_rep/uref_euk85_rep euk_screen_prof mmtemp --local-tmp /scratch/saladi1/22776241/ --remove-tmp-files 1 --split-memory-limit 1000000. MMseqs Version: 	fac81fa7a63c1205209d4acbc46ce2209abcaa8a; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/193:399,depend,depending,399,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193,2,"['depend', 'message']","['depending', 'message']"
Integrability,There were some spelling/grammar typos in the help message... in case it's helpful,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/190:51,message,message,51,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/190,1,['message'],['message']
Integrability,"This more a feature request!. would someone have time and competence to create a python module similar to the one for vsearch (https://github.com/qiime2/q2-feature-classifier/tree/master/q2_feature_classifier) so that we can classify with multithreading in qiime2?. blast or vsearch runs typically take over 1 day and more for 50k long ONT reads which is really very long and I am dreaming of the speedup seen in the mmseqs2 paper. my current qiime2 execution looks like this in top but I have little knowledge of what it should translate to with mmseqs2; if I could have an equivalent, I may try to hack the [vsearch wrapper code](https://github.com/qiime2/q2-feature-classifier/blob/master/q2_feature_classifier/_vsearch.py) but my python skills are not that great. `qiime feature-classifier classify-consensus-vsearch --i-query rep-seqs.qza --i-reference-reads /data/biodata/MetONTIIME_DB/rrnDB_operons_sequence.qza --i-reference-taxonomy /data/biodata/MetONTIIME_DB/rrnDB_operons_taxonomy.qza --p-perc-identity 0.77 --p-query-cov 0.8 --p-maxaccepts 1 --p-strand both --p-min-consensus 0.51 --p-unassignable-label Unassigned --p-threads 24 --o-classification taxonomy.qza`. Thanks for any help on this. PS:I do not dare to double post on the qiime2 page as this is often seen as offending by developers.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/235:618,wrap,wrapper,618,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235,1,['wrap'],['wrapper']
Integrability,"UGGAGGAACACCAGUGGCGAAGGCGACUUUCU; GGUCUGUAACUGACGCUGAUGUGCGAAAGCGUGGGGAUCAAACAGGAUUAGAUACCCUGGUAGUCCACGCCGUAAACGAU; GAGUGCUAAGUGUUAGGGGGUUUCCGCCCCUUAGUGCUGCAGCUAACGCAUUAAGCACUCCGCCUGGGGAGUACGACCGC; AAGGUUGAAACUCAAAGGAAUUGACGGGGACCCGCACAAGCGGUGGAGCAUGUGGUUUAAUUCGAAGCAACGCGAAGAAC; CUUACCAAAUCUUGACAUCCUCUGACCCCUCUAGAGAUAGAGUUUUCCCCUUCGGGGGACAGAGUGACAGGUGGUGCAUG; GUUGUCGUCAGCUCGCGUCGUGAGAUGUUGGGUUAAGUCCCGCAACGAGCGCAACCCUUAAGCUUAGUUGCCAUCAUUAA; GUUGGGCACUCUAAGUUGACUGCCGGUGACAAACCGGAGGAAGGUGGGGAUGACGUCAAAUCAUCAUGCCCCUUAUGAUU; UGGGCUACACACGUGCUACAAUGGACAAUACAAAGGGCAGCGAAACUGCGAGGUCAAGCAAAUCCCAUAAAGUUGUUCUC; AGUUCGGAUUGUAGUCUGCAACUCGACUACAUGAAGCUGGAAUCGCUAGUAAUCGUAGAUCAGCAUGCUACGGUGAAUAC; GUUCCCGGGUCU. ## MMseqs Output (for bugs); easy-search --search-type 3 --num-iterations 2 --threads 1 sequences/5LJ5_5.fasta databases/MSA_debug.fasta results/result tmp . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	1; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:5825,wrap,wrapped,5825,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['wrap'],['wrapped']
Integrability,"What are the memory requirements for `clusthash`? I am trying to redundancy filter a database of about 1.4 billion proteins using `clusthash` and when running the program, I get the message; ```; Can not touch 271995225098 into main memory; ```; It then continues to run for ~30 mins and then progress just halts. I left it running for 10 hours with no change in progress. I first tried running with 64G memory and then 128G memory with the same results. Do all the sequences in the database need to fit into memory for `clusthash` to work? Would I be better off running `linclust` with `-c 100`?. Thank you",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/442:182,message,message,182,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/442,1,['message'],['message']
Integrability,"When I am running the mmseq2 in the conda environment to convert the expandable profile databases to MMseqs2 format following the protocol:. mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103_db. error:. Invalid Command: tsv2exprofiledb; Did you mean ""mmseqs convertprofiledb""?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/576:130,protocol,protocol,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/576,1,['protocol'],['protocol']
Integrability,"When I use createseqfiledb on a clusterDB file, as described in the readme, I get a continuous stream of ""Invalid entry in line x!"" messages, where x are different lines. What does this error mean? The resulting clu_seq file is empty.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/6:132,message,messages,132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6,1,['message'],['messages']
Integrability,"When creating a taxonomy database via:. ```; mmseqs createdb target.fasta targetDB; mmseqs createtaxdb targetDB tmp; ```. ...how can the user know what taxonomy is given to each sequence in the tax database? There doesn't seem to be a subcommand for inspecting the taxonomy database. One could maybe to it with the `mmseqs filtertaxdb` command, but it requires a ""targetDB"" and a ""taxaDB""; however, the `mmseqs createtaxdb` doesn't seem to create any specific ""taxaDB"" file. . It appears that `mmseqs createtaxdb` doesn't warn about missing uniprot identifiers. It really doesn't provide any summary at all. I just tried provided a full `seqID <--> uniprot` mapping file versus a truncated file, and I got the same ""Database created"" output message, so it seems that even if there's really little to no taxonomic info in the taxonomy database, the database will still be created without the user knowing what info is actually in it. . I'm using version 9.d36de",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/222:741,message,message,741,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/222,1,['message'],['message']
Integrability,"While clustering a database of about 10 million proteins, we receive lots of ""there must be an error"" messages, e.g.:. there must be an error: 1835775 deleted from 4496505 that now is empty, but not assigned to a cluster; there must be an error: 6964402 deleted from 7957737 that now is empty, but not assigned to a cluster; there must be an error: 2422408 deleted from 2413081 that now is empty, but not assigned to a cluster; ... This is the script running the clustering:; ```; MMSEQS=mmseqs-static_avx2; SEQFILE=eggnog4.proteins.core_periphery.fa.gz; pigz -dc $SEQFILE >$TMPDIR/db.fasta; $MMSEQS createdb $TMPDIR/db.fasta $TMPDIR/db; mkdir $TMPDIR/clutmp; $MMSEQS cluster $TMPDIR/db $TMPDIR/db_clu $TMPDIR/clutmp --cascaded -e 1 --threads 16; ```. The effect is independent from the mmseqs2 binary (your static avx2 binary, self-compiled sse4.1 binary). We run Fedora 25 with 4.9.5 kernel. The machine has 40 cores and 1 TB RAM. Thanks for your help,; Thomas Rattei",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15:102,message,messages,102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15,1,['message'],['messages']
Integrability,"YGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAFDYW; CARSTSGSYYYGMDVW; CARDSPFSALGASNDYW; CAKDFGGDNTAMVEYFFDFW; CVRDYGDFYFDYW; CARADPYQLLGQHYYYGMDVW; CARAPLFPTGVLAGDYYYYGMDVW; CAKDRTAVFLFFGLGDAFDIW; CASSSGYLFHSDYW. ## MMseqs Output (for bugs). ```; search //app/database/sequences/sequences //app/database/sequences/sequences; DB //app/clustering/sequences/sequences_output /tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0. MMseqs Version: ad5837b3444728411e6c90f8c6ba9370f665c443; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:2; Gap extension cost nucl:5,aa:0; Zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:2559,wrap,wrapped,2559,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['wrap'],['wrapped']
Integrability,a wrapper for MMseq2 in qiime2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/235:2,wrap,wrapper,2,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235,1,['wrap'],['wrapper']
Integrability,"aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 805ms; Time for merging to pref_rescore1: 0h 2m 40s 361ms; Time for processing: 0h 5m 54s 815ms; clust /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 96 --compressed 0 -v 3 ; Clustering mode: Greedy; Total time: 0h 1m 7s 208ms; Size of the sequence database: 292137902; Size of the alignment database: 292137902; Number of clusters: 245753321; Writing results 0h 1m 30s 550ms; Time for merging to pre_clust: 0h 1m 31s 28ms; Time for processing: 0h 5m 19s 116ms; createsubdb /export/tmp/MERC/4233864",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:3083,wrap,wrapped-scoring,3083,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['wrap'],['wrapped-scoring']
Integrability,"ced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 3s 166ms; rescorediagonal ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 100.00K 0s 206ms; Time for merging to pref_rescore1: 0h 0m 0s 757ms; Time for processing: 0h 0m 1s 988ms; clust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pre_clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Connected Component; [=================================================================] 100.00K 0s 367ms; Sort entries; Find missing connections; Found 245160 new connections.; Reconstruct initial order; [=================================================================] 100.00K 0s 304ms; Add missing connections; [===================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:12203,wrap,wrapped-scoring,12203,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"cluster fails when ""--wrapped-scoring 1"" is called due to rescore-mode despite it being specified",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/509:22,wrap,wrapped-scoring,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509,1,['wrap'],['wrapped-scoring']
Integrability,"clustering ""mmseqs cluster"" or single round clustering using ""search"" followed by ""clust"" the behavior appear to function as intended. Perhaps something in the profile generation or implementation of profile against consensus searches affects the interpretation of the -c parameter? Investigating the alignment data of the attached MSA with mmseqs convertalis (attached below) shows that all hits indeed passes the -c 0.8 cutoff? As such perhaps my understanding of what constitutes alignment coverage is lacking and in that case how would one go about retricting the ""coverage"" to only query-target pairs with lengths within 80% of each other? I have tried --covmode 5 with similar results. . ## Expected Behavior. Restriction of clustered protein sequence lengths by imposing cover limits via the -c parameter in conjunction with any --covmode. ## Current Behavior. Clusters containing sequences of vastly different lengths far outside the range of the -c cutoff. . ## Context. My protocol can be summarized roughly as:. 1) Collapse paralogs and create cluster representatives in order to reduce database redundancy using;; mmseqs cluster initial-database clusters -s 5 -c 0.8 --min-seq-id 0.9 --cluster_mode 0 --max-iterations 3 --max-seqs 100 --covmode 0. 2) Iterate profile generation and searches of profiles against consensus sequences; mmseqs search cluster-representatives cluster-representatives representative-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs result2profile cluster-representatives cluster-representatives representative-search profiles; mmseqs profile2consensus profiles initial-database consensus; mmseqs search profiles consensus profile-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs clust --clustermode 0 consensus profile-search profile-clusters; mmseqs createsubdb profile-clusters initial-database new-cluster-representatives. Here new-cluster-representatives are used as input to round two of searches. . ## Alignment data ; query target",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:1848,protocol,protocol,1848,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['protocol'],['protocol']
Integrability,"d 0 -v 3 . [=================================================================] 1.60M 14m 50s 51ms; Time for merging to aln_ungapped: 0h 0m 1s 439ms; Time for processing: 0h 15m 7s 16ms; subtractdbs tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . subtractdbs tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . Remove tmp/16479300059278292880/aln_ungapped ids from tmp/16479300059278292880/pref; [=================================================================] 1.60M 1s 175ms; Time for merging to pref_subtract: 0h 0m 1s 400ms; Time for processing: 0h 0m 5s 506ms; align tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref_subtract tmp/16479300059278292880/aln_gapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 112 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1604546 type: Nucleotide; Target database size: 802273 type: Nucleotide; Calculation of alignments; [=================================================================] 1.60M 22m 53s 435ms; Time for merging to aln_gapped: 0h 0m 0s 903ms; 70826259 alignments calculated; 3445894 sequence pairs passed the thresholds (0.048653 of overall calculated); 2.147582 hits per query se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:15065,wrap,wrapped-scoring,15065,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['wrap'],['wrapped-scoring']
Integrability,"d. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner; Force restart using the latest tmp false; Remove Temporary Files false. Could not create symlink of tmp/5177011769629871693!. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I got a remote VM from a university lab in which I run the project. everything was going quite well (compilation, installation, creating the DBs) but when I wanted to pre-compute the index of targetDB, I got this weird error with no further details to solve it. I don't know if it is related to the privileges granted to me in the VM or the version of MMseqs. Would you please suggest some hints/help?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 9357bb750290e2862ab4da522f03c971f71cfff3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc version 4.8.5 & cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Architecture : x86_64 / Processor : 4x Intel Xeon E312xx (Sandy Bridge) / Memory : 196.62 GiB / Instruction set: SSE4_1; * Operating system and version: CentOS 7.6.1810",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/171:3605,Bridg,Bridge,3605,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/171,1,['Bridg'],['Bridge']
Integrability,"d.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:2049,protocol,protocol,2049,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['protocol'],['protocol']
Integrability,"different values of --threads and --split-memory-limit (<200G) but no success. I tried to reindex UniRef90 using --split-memory-limit 200G, still no success. So I'm wondering if it's really possible to run MMSEQS on UniRef90 with 256GB of RAM, or if I'm missing an option that makes it possible. Thank you in advance for the help. Guillaume. ## Expected Behavior; Complete the search. ## Current Behavior. Fail at the prefilter stage. Error: Prefilter died; Error: Search died. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. Downloaded UniRef90 using the mmseqs databases tool. Then:; mmseqs easy-search ./DNAP-BAIT ./UniRef90 RST /tmp/MMS$$ --threads 4. ## MMseqs Output (for bugs). easy-search /shared/projects/phycovir/SONIA/DNAP-BAIT ./UniRef90 RST /tmp/MMS6178 --threads 4 . MMseqs Version: 	14.7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	4; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matchin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/728:1062,wrap,wrapped,1062,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728,1,['wrap'],['wrapped']
Integrability,"e set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [============================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:5861,wrap,wrapped-scoring,5861,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['wrap'],['wrapped-scoring']
Integrability,"e size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; Time for processing: 0h 0m 11s 757ms; align IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 tmp/16138406286044646862/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:5880,wrap,wrapped-scoring,5880,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['wrap'],['wrapped-scoring']
Integrability,"e? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result database: CLU_updated; Start writing to clusters.tsv; Invalid database read for database data file=DB_updated_h, database index=DB_updated_h.index; getData: local id (4294967295) >= db size (17); ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment. * _Git commit used:_ 2f66ae897fc813450fa5ef0c78123bd3c41c4717; * _Which MMseqs version was used_: Compilation from source; * _Cmake versions used_: cmake version 3.5.1; * Op",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272:1485,message,message,1485,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272,1,['message'],['message']
Integrability,"eads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:2157,wrap,wrapped,2157,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['wrap'],['wrapped']
Integrability,"er position; mmseqs-web-worker_1 | 0 DB matches per sequence; mmseqs-web-worker_1 | 0 overflows; mmseqs-web-worker_1 | 0 queries produce too much hits (truncated result); mmseqs-web-worker_1 | 0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 1 sequences with 0 size result lists; mmseqs-web-worker_1 | Time for merging to pref_0: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 5ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; mmseqs-web-worker_1 | [=================================================================] 1 0s 2ms; mmseqs-web-worker_1 | Time for merging to aln: 0h 0m 0s 0ms; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:24959,wrap,wrapped-scoring,24959,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['wrap'],['wrapped-scoring']
Integrability,"er size: 0.000001; Top 10 k-mers; DFVKIA	1; ATLTKA	1; SEEGLA	1; IWEEIC	1; PFDSKD	1; CLRHLD	1; DMAGTD	1; QNRWRE	1; GENRSE	1; LAKPDF	1; Time for index table init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 1; [=================================================================] 100.00% 1 eta -. 602.620000 k-mers per position; 41 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 740ms; align tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 tmp/15248047069833069253/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 1 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 1 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Time for merging to result: 0h 0m 0s 0ms; 1 alignments calculated; 1 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 28ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:7249,wrap,wrapped-scoring,7249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['wrap'],['wrapped-scoring']
Integrability,"er using colabfold. ## Current Behavior; Local mmseqs always paused for hours without generating outputs. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I am using `colab_search` which calls `mmseqs` like `search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8`. The query contains 4 amino acid sequences, and each has the length of 493 amino acid. NOTE, when I took off `--split 8`, I also observed that mmseqs halts at certain stage. ## MMseqs Output (for bugs); <pre>; search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8 [93/1999]. MMseqs Version: b768f48f0bd73688b6a68132159a97f7b6310f03; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Exact k-mer matching 0 [49/1999]; Mask r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:1085,wrap,wrapped,1085,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,1,['wrap'],['wrapped']
Integrability,"er-mode 0 -s 7.5 --min-seq-id 0.97 --min-aln-len 200. MMseqs Version: 	bb0a1b3569b9fe115f3bf63e5ba1da234748de23; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	20; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.97; Min alignment length 	200; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:2066,wrap,wrapped,2066,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['wrap'],['wrapped']
Integrability,"eric ids 0; Compressed 0; Verbosity 3. Converting sequences; [===================================; Time for merging to BH193L-2_S20_database_h: 0h 0m 0s 80ms; Time for merging to BH193L-2_S20_database: 0h 0m 0s 85ms; Database type: Aminoacid; Time for processing: 0h 0m 17s 880ms; Create directory tmp_BH193L-2_S20; taxonomy --lca-mode 3 --threads 36 -e 0.0001 --tax-lineage 1 -s 3 --lca-ranks species,genus,family,order,class,phylum,kingdom,superkingdom BH193L-2_S20_database NR BH193L-2_S20.result tmp_BH193L-2_S20. MMseqs Version: 14.7e284; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks species,genus,family,order,class,phylum,kingdom,superkingdom; Column with taxonomic lineage 1; Compressed 0; Threads 36; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.0001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 3; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagon",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:1382,wrap,wrapped,1382,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,1,['wrap'],['wrapped']
Integrability,"ernative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:2829,wrap,wrapped-scoring,2829,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['wrap'],['wrapped-scoring']
Integrability,"ers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a sear",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:5050,wrap,wrapped-scoring,5050,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['wrap'],['wrapped-scoring']
Integrability,"et to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 of overall calculated).; 1.097190 hits per query sequence.; Time for merging to aln: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 84ms; clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:11540,wrap,wrapped-scoring,11540,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['wrap'],['wrapped-scoring']
Integrability,"failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:9776,wrap,wrapped-scoring,9776,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['wrap'],['wrapped-scoring']
Integrability,"fle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 15ms; Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 16ms; Create directory /tmp/mydir/7574787915800795625/clu_tmp; cluster /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/657336320172",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:4245,wrap,wrapped-scoring,4245,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped-scoring']
Integrability,"g k-mer size: 7.824739; Top 10 k-mers; DFEQLPH	65289; NVPGWSP	65148; FRYAFPS	64963; RYYVLGW	64817; VDRLNTQ	63812; WRLDFLN	62949; TVDGDFS	62609; NKTDFVQ	61859; QDWVQIP	61316; LDGAYVP	59471; Time for index table init: 0h 16m 9s 488ms; Time for processing: 0h 16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Input /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 does not exist; Error: Alignment died; Error: First search died; Error: taxonomy died; Error: Search died; ```. Many thanks; Antonio. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 5daca424b162cc5fdf0b9cd151aebed86975cbf6; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Sel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/433:1748,wrap,wrapped-scoring,1748,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433,1,['wrap'],['wrapped-scoring']
Integrability,"gives similar results. ## MMseqs Output (for bugs). similarity type 1: ; Create directory clu/sim1_tmp; cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:1889,wrap,wrapped,1889,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped']
Integrability,"h 0m 0s 736ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9304; Target db start 1 to 9304; [=================================================================] 100.00% 9.30K 0s 164ms . 2.036021 k-mers per position; 245 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 2 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 265ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 9304 type: Aminoacid; Target database size: 9304 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 9.30K 1s 357ms ; Time for merging to aln_step0: 0h 0m 0s 2ms; 22013 alignments calculated; 18612 sequence pairs passed the thresholds (0.845500 of overall calculated); 2.000430 hits per query sequence; Time for ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:18523,wrap,wrapped-scoring,18523,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped-scoring']
Integrability,"here are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	384; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer match",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:1347,wrap,wrapped,1347,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['wrap'],['wrapped']
Integrability,"hold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2131,message,message,2131,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['message'],['message']
Integrability,"i,. I'm getting an error when trying to blastn sequences vs NT DB. I also tried to just run the last convertalis command on a different computer and saw it crashed after getting to ~2TB of RAM usage. Is there a way to bypass and solve this issue?. Thanks!; Haim; ; ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. easy-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen /tmp/rep.fasta.gz /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/rep_vs_NT_Jan2021.mmseq2.m8 /tmp/ --threads 32 --split-memory-limit 250G . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	250G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:1005,wrap,wrapped,1005,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['wrap'],['wrapped']
Integrability,"ide database (97 GB) with uniprotkb. . ## Current Behavior; The first filtering step (easy-taxonomy) runs for about 12 hours now. Is that correct? Is there a way to speed up the pre-filtering? If the pre-filtering process is split into 6 parts, can I expect that every section takes 12 hours?. ## Steps to Reproduce (for bugs); ```; mmseqs databases UniProtKB databases/uniprotkb tmp; mmseqs easy-taxonomy input.fna databases/uniprotkb taxdb tmp --dbtype 2 --lca-mode 4 --orf-filter 0 --tax-lineage 1 --split-memory-limit 200G --threads 32; ```; ## MMseqs Output (for bugs); Create directory tmp; ```; MMseqs Version: 13.45111; ORF filter 0; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 4; Majority threshold 0.5; Vote mode 1; LCA ranks ; Column with taxonomic lineage 1; Compressed 0; Threads 32; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 200G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/577:1084,wrap,wrapped,1084,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577,1,['wrap'],['wrapped']
Integrability,"ign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:3687,wrap,wrapped-scoring,3687,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['wrap'],['wrapped-scoring']
Integrability,"ilter result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:1778,wrap,wrapped-scoring,1778,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['wrap'],['wrapped-scoring']
Integrability,"im2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 34ms; Time for merging to aln: 0h 0m 0s 2ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 142ms; clust clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/121",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:24759,wrap,wrapped-scoring,24759,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"in GTDB database for mmseqs (https://zenodo.org/record/4751564/files/GTDB_v95.tar.gz) and standard taxonomy command line with 24 threads and >100 Gb RAM. mmseqs2 is progressing very slowly for this single bin (330kbases only, quoting hours to run). The authors of SemiBin quote the step which includes mmseq taxonomic assignment as taking 90-120 minutes on similar sizes servers for contigs from whole datasets. Does runtime scales with the search database and not the query size? Have I done something wrong? All advice gratefully received. ## MMseqs Output (for bugs); ```; MMseqs Version: 13.45111; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 2; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479:1137,wrap,wrapped,1137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479,1,['wrap'],['wrapped']
Integrability,"index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6712; Target db start 1 to 6712; [=================================================================] 100.00% 6.71K 0s 701ms . 36.614229 k-mers per position; 788 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 4 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 802ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 6712 type: Aminoacid; Target database size: 6712 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 6.71K 0s 264ms ; Time for merging to aln_step1: 0h 0m 0s 1ms; 13873 alignments calculated; 8509 sequence pairs passed the thresholds (0.613350 of overall calculated); 1.267729 hits per query sequence; Time for p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:23374,wrap,wrapped-scoring,23374,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped-scoring']
Integrability,"ity 	3. Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; [=================================================================] 1.27M 21m 19s 868ms; Time for merging to euk72-90.profile2: 0h 0m 40s 828ms; Time for processing: 0h 23m 5s 420ms; profile2consensus euk72-90.profile2 euk72-90.consensus2 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Substitution matrix	aa:blosum62.out,nucl:nucleotide.out; Max sequence length	65535; Threads 	48; Compressed 	0; Verbosity 	3. [=================================================================] 1.27M 2m 13s 834ms; Time for merging to euk72-90.consensus2: 0h 0m 0s 850ms; Time for processing: 0h 2m 15s 974ms; search euk72-90.profile2 euk72-90.consensus2 euk72-90.profile_search2 .mmseqs_tmp -s 7 -c 0.8 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	48; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matchi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:5757,wrap,wrapped,5757,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['wrap'],['wrapped']
Integrability,"ize 15 ; > Index table: counting k-mers; > Segmentation fault (core dumped) ] 0.00% 1 eta -; > Error: Prefilter died; > Error: Search step died; > Error: Search died; > . ## Steps to Reproduce (for bugs). First create a custom nucleotide database. `mmseqs createdb --dbtype 2 --compressed 1 refseq_bacteria_archaea_fungi_viral.fna.gz seqTaxDB`; `mmseqs createtaxdb seqTaxDB tmp --ncbi-tax-dump ncbi-taxdump --tax-mapping-file fastaid_taxid.tsv`. Next run easy-search. `mmseqs easy-search all_nuc.fasta seqTaxDB tax_assignments.txt tmp --search-type 3 --min-seq-id 0.65 -e 0.01 -c 0.8 --cov-mode 2 --threads 16`. ## MMseqs Output (for bugs). Below is the output of `easy-search`. > easy-search all_nuc.fasta seqTaxDB tax_assignments.txt tmp --search-type 3 --min-seq-id 0.65 -e 0.01 -c 0.8 --cov-mode 2 --threads 16 ; > ; > MMseqs Version: 	8ef39f4151eddcdc78f9c2dadf6b4dd6864435c9; > Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; > Add backtrace 	false; > Alignment mode 	3; > Alignment mode 	0; > Allow wrapped scoring 	false; > E-value threshold 	0.01; > Seq. id. threshold 	0.65; > Min alignment length 	0; > Seq. id. mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage mode 	2; > Max sequence length 	65535; > Compositional bias 	1; > Compositional bias 	1; > Max reject 	2147483647; > Max accept 	2147483647; > Include identical seq. id. 	false; > Preload mode 	0; > Pseudo count a 	substitution:1.100,context:1.400; > Pseudo count b 	substitution:4.100,context:5.800; > Score bias 	0; > Realign hits 	false; > Realign score bias 	-0.2; > Realign max seqs 	2147483647; > Correlation score weight 	0; > Gap open cost 	aa:11,nucl:5; > Gap extension cost 	aa:1,nucl:2; > Zdrop 	40; > Threads 	16; > Compressed 	0; > Verbosity 	3; > Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; > Sensitivity 	5.7; > k-mer length 	0; > Target search mode 	0; > k-score 	seq:2147483647,prof:2147483647; > Alphabet size 	aa:21,nucl:5; > Max results per query 	300; >",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:1184,wrap,wrapped,1184,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,1,['wrap'],['wrapped']
Integrability,"l:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by rep. sequence 0h 0m 39s 418ms; Time for fill: 0h 2m 31s 613ms; Time for merging to pref: 0h 0m 0s 1ms; Time for processing: 0h 9m 8s 726ms; rescorediagonal All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 440.66M 7m 9s 976ms; Time for merging to pref_rescore1: 0h 2m 33s 403ms; Time for processing: 0h 11m 51s 610ms; clust All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore1 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 56 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 1m 32s 562ms. Size of the sequence database: 440656032; Size of the alignment database: 440656032; Number of clusters: 35665237. Writing results 0h 0m 11s 300ms; Time for merging to pre_clust: 0h 0m 0s 0ms; Time for processing: 0h 2m 42s 666ms; createsubdb All_cohort_tmp//99483873210928",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:5660,wrap,wrapped-scoring,5660,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['wrap'],['wrapped-scoring']
Integrability,"ld_search execute search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 ). ## MMseqs Output (for bugs). MSA_200/qdb exists and will be overwritten; createdb MSA_200/query.fas MSA_200/qdb --shuffle 0 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Database type 	0; Shuffle input database	false; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 0ms; Time for merging to qdb: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 0ms; search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	10000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:1578,wrap,wrapped,1578,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['wrap'],['wrapped']
Integrability,"leotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Database size: 51992 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 51.99K 0s 346ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 62ms; Sort by rep. sequence 0h 0m 0s 19ms; Time for fill: 0h 0m 0s 27ms; Time for merging to pref: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 567ms; rescorediagonal shrimpDB shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref tmp97/17949317426677965256/linclust/6279588666755106708/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 51.99K 0s 101ms; Time for merging to pref_rescore1: 0h 0m 0s 185ms================>] 99.62% 51.80K eta 0s; Time for processing: 0h 5m 0s 451ms; clust shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref_rescore1 tmp97/17949317426677965256/linclust/6279588666755106708/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Clustering mode: Set Cover; [=================================================================] 100.00% 51.99K 0s 51ms; Sort entries; Find missing connections; Found 39230 new connections.; Reconstruct initial order; [=================================================================] 100.00% 51.99K 0s 5",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:5836,wrap,wrapped-scoring,5836,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['wrap'],['wrapped-scoring']
Integrability,"m 0s 47ms; Time for merging to input: 0h 0m 0s 25ms; Database type: Nucleotide; Time for processing: 0h 0m 1s 143ms; Create directory tmp/3198441352783276465/clu_tmp; cluster tmp/3198441352783276465/input tmp/3198441352783276465/clu tmp/3198441352783276465/clu_tmp --max-seqs 20 -c 0 --cov-mode 5 --spaced-kmer-mode 1 --threads 24 --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --cluster-mode 1 --cluster-reassign 1 --remove-tmp-files 1 . Set cluster sensitivity to -s 1.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusteringSet cluster iterations to 1; linclust tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/clu_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:4732,wrap,wrapped-scoring,4732,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['wrap'],['wrapped-scoring']
Integrability,"m/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[===============================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:1534,protocol,protocol,1534,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['protocol'],['protocol']
Integrability,"mation for ~12h. Not sure if it's related to #323 but since it's a different behavior I just open a new issue. . ## Expected Behavior; Normally exit. ## Current Behavior; Got stuck after the first call of `rescorediagonal`. No progress and no printed information for ~12h. ## Steps to Reproduce (for bugs); ```; > wget http://gwdu111.gwdg.de/~compbiol/plass/2018_08/SRC.fasta.gz; > gunzip -k SRC.fasta.gz; > mmseqs easy-linclust SRC.fasta test/SRC-50 /export/scratch/SRC-50 -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G; ```. ## MMseqs Output (for bugs); ```; easy-linclust SRC.fasta test/SRC-50 /export/scratch/SRC-50 -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Crea",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:1180,wrap,wrapped,1180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['wrap'],['wrapped']
Integrability,"merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total of all the ""targetDB.idx.0,1,2...14 "" files which will be over 1TB? Or is it something smaller?. 3) The log message for mmseqs touchdb step wasn't very helpful. Did it work or not?. Thank you,; Tongji",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757:2354,message,message,2354,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757,1,['message'],['message']
Integrability,mmseqs easy-search with .fasta files dies without a descriptive error message,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/718:70,message,message,70,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/718,1,['message'],['message']
Integrability,"mmseqs_output/mmseqs_output tmp --cluster-mode 1 --cluster-reassign 1 --threads 24 -c 0.0 --cov-mode 5 --min-seq-id 0.8 . MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0; Coverage mode 5; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 24; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.8; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:2273,wrap,wrapped,2273,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['wrap'],['wrapped']
Integrability,"mp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 41ms; filterdb /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 --filter-file /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 757 0s 4ms; Time for merging to pref_filter2: 0h 0m 0s 62ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/linclust.sh: line 68: 88046 Segmentation fault: 11 $RUNNER ""$MMSEQS"" rescorediagonal ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/pref_rescore2"" ${UNGAPPED_ALN_PAR}; Error: Ungapped alignment step died; Error: linclust died; Error: Search died. Running on Mac intel i9 and mmseqs2 14-7e284. Thank you all for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:9574,wrap,wrapped-scoring,9574,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['wrap'],['wrapped-scoring']
Integrability,"ms; result2stats /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 278.90K 0s 59ms; Time for merging to pref_count.tsv: 0h 0m 0s 61ms; Time for processing: 0h 0m 0s 594ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 278905 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; sw",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:5674,wrap,wrapped-scoring,5674,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['wrap'],['wrapped-scoring']
Integrability,"mseqs createdb N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.faa N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db. mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_42; 5.proteins.taxonomy temp --threads 8; ```. ## Full traceback of search command; ```; mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8; Tmp temp folder does not exist or is not a directory.; Create dir temp; taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile e-value threshold 0.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:1904,wrap,wrapped,1904,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,1,['wrap'],['wrapped']
Integrability,"mseqs createindex uniref90_DB uniref90_index --threads 16; mmseqs createtaxdb uniref90_DB tmp. I did the same for my queries:; mmseqs createdb queries.fa queries_DB; mmseqs createindex queries_DB queries_index. Then, I searched the query database against the Uniref90 database:; mmseqs search queries_DB uniref90_DB queries_search_result uniref90_index --threads 16. Finally, I applied LCA taxonomy:; mmseqs taxonomy Untersee/SRR17021127_orf_nosZ_only_DB uniref90_DB taxonomyResult tmp --tax-lineage 1 . This is the output:; MMseqs Version: 	12ba202798016f7f8880be11d792592fdb674448; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	1; Compressed 	0; Threads 	128; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/708:1322,wrap,wrapped,1322,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708,1,['wrap'],['wrapped']
Integrability,"n-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . Can not touch 293012172012 into main memory; [=================================================================] 2.20B 14h 48m 14s 895ms; Time for merging to pref_rescore1: 0h 21m 28s 875ms; Time for processing: 15h 32m 14s 793ms; Error: Pre-clustering step died; ```; And when I rerun my job I have : ; ```; linclust /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 20 -v 3 --force-reuse 1 --split-memory-limit 62G . MMseqs Version: 	f5f780acd64482cd59b46eae0a107f763cd17b4d; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	20; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	62G; Include only extendab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:8296,wrap,wrapped,8296,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['wrap'],['wrapped']
Integrability,"nclust/1189823685496030198/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 39s 536ms; filterdb tmp//16518381706844811497/linclust/1189823685496030198/pref_filter1 tmp//16518381706844811497/linclust/1189823685496030198/pref_filter2 --filter; -file tmp//16518381706844811497/linclust/1189823685496030198/order_redundancy --threads 64 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 74.93M 16s 227ms; Time for merging to pref_filter2: 0h 0m 46s 160ms; Time for processing: 0h 1m 35s 246ms; rescorediagonal tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/input; _step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/pref_filter2 tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2; --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 2 --min-seq-id 0.9 ; --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [================================================================] =74.93M 28m 19s 496ms; Time for merging to pref_rescore2: 0h 0m 51s 111ms; Time for processing: 0h 29m 44s 106ms; align tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/input_step_redu; ndancy tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2 tmp//16518381706844811497/linclust/1189823685496030198/aln --sub-mat 'aa:blos; um62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mo; de 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:8579,wrap,wrapped-scoring,8579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['wrap'],['wrapped-scoring']
Integrability,"nimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequences //app/database/sequences/sequences; B tmp/17369488595077942690/pref_0 //app/clustering/sequences/sequences_output --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq; -id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 21474; 83647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0; --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:2 --gap-ex; tend nucl:5,aa:0 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score and coverage; Query database size: 74 type: Aminoacid; Target database size: 74 type: Aminoacid; Calculation of alignments; terminate called after throwing an instance of 'Sls::error'; Aborted; Error: Alignment died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ad5837b3444728411e6c90f8c6ba9370f665c443; * Which MMseqs version was used (Statically-compiled, self-compiled",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:4809,wrap,wrapped-scoring,4809,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['wrap'],['wrapped-scoring']
Integrability,"oacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; Time for processing: 0h 0m 23s 645ms; align tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 tmp/16138406286044646862/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8273 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.27K 1s 879ms ; Time for merging to aln_1: 0h 0m 0s 9ms. 41734 alignments calculated.; 41734 sequence pairs passed the thresholds (1.000000 of overall calculated).; 5.044603 hits per query sequence.; Time for processing: 0h 0m 5s 83ms; mergedbs IP_DB/IP_DB tmp/16138406286044646862/aln_merge_new tmp/16138406286044646862/aln_0 tmp/16138406286044646862/aln_1 --compressed 0 -v 3 . Merging the results to tmp/16138406286044646862/aln_merge_new; Time for merging to aln_merge_new",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:8542,wrap,wrapped-scoring,8542,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['wrap'],['wrapped-scoring']
Integrability,"ompute with --shuffle 0; Converting sequences; [1718] 0s 24ms; Time for merging to input_h: 0h 0m 0s 10ms; Time for merging to input: 0h 0m 0s 10ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 81ms; Create directory /Volumes/s/tmp/3581369344000996149/clu_tmp; cluster /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu /Volumes/s/tmp/3581369344000996149/clu_tmp --max-seqs 20 -c 0.8 --cov-mode 1 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --min-seq-id 0.5 --remove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/clu_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:3857,wrap,wrapped-scoring,3857,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['wrap'],['wrapped-scoring']
Integrability,"onal experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_filter2 experiments/tmp//6404161245249296443/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 12 --compressed 0 -v 3 . Compute score and coverage; Query database size: 24598 type: Aminoacid; Target database size: 24598 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 24.60K 0s 159ms ; Time for merging to aln: 0h 0m 0s 22ms. 25322 alignments calculated.; 24830 sequence pairs passed the thresholds (0.980570 of overall calculated).; 1.009432 hits per query sequence.; Time for processing: 0h 0m 0s 211ms; clust experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/aln experiments/tmp//6404161245249296443/clust --cluster-mode 0 --max-iterations 1000 --simil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:9092,wrap,wrapped-scoring,9092,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['wrap'],['wrapped-scoring']
Integrability,"ons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Input database ""/mount-nfs/mydataset/single_train_sequences.fasta"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ```. ## Context; I am trying to extract the pssm for a big fasta file following this steps:; https://github.com/soedinglab/MMseqs2/issues/580; Unfortunately, only the easy-search is working and not the search. If I tried to just use the easy-search I get the same message as above when I try to run the ""result2profile"" script. I also tried to extract a single sequence from my fasta file, and I got the same error.; Here is the single fasta file that I am trying to test with :; ```; >A0A8I6GHU0 tr|A0A8I6GHU0|A0A8I6GHU0_RAT U6 snRNA-associated Sm-like protein LSm1 OS=Rattus norvegicus OX=10116 GN=Lsm1 PE=3 SV=1; HCISSLKLTAFFKRSFLLSPEKHLVLLRDGRTLIGFLRSIDQFANLVLHQTVERIHVGRK; YGDIPRGIFVVRGENVVLLGEIDLEKESDTPLQQVSIEEILEEQRVEQQSRLEAEKLKVQ; ALKDRGLSIPRADTLDEY; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Which MMseqs version was used: latest version from conda.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU support both AVX2/SSE and the server has 450GB of memory; * Operating system and version: Ubuntu 20.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/720:3214,message,message,3214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720,1,['message'],['message']
Integrability,"or large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	24; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:2116,wrap,wrapped,2116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['wrap'],['wrapped']
Integrability,"ort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_filter2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 35.67M 9s 733ms; Time for merging to pref_rescore2: 0h 0m 12s 355ms; Time for processing: 0h 0m 38s 935ms; align All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 56 --compressed 0 -v 3 . Compute score and coverage; Query database size: 35665237 type: Aminoacid; Target database size: 35665237 type: Aminoacid; Calculation of alignments; [=================================================================] 35.67M 7m 56s 191ms; Time for merging to aln: 0h 0m 12s 23ms; 118495359 alignments calculated; 45078108 sequence pairs passed the thresholds (0.380421 of overall calculated); 1.263923 hits per query sequence; Time for processing: 0h 8m 32s 609ms; clust All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redunda",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:9016,wrap,wrapped-scoring,9016,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['wrap'],['wrapped-scoring']
Integrability,"p sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	8; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```; trying `--search-type 3 `throws me this error. `Unrecognized parameter ""--search-type"". Did you mean ""--seed-sub",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/507:2258,wrap,wrapped,2258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507,1,['wrap'],['wrapped']
Integrability,"p-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 41m 40s 149ms ; Time for merging to aln: 0h 0m 0s 11ms; 1976417423 alignments calculated; 672599536 sequence pairs passed the thresholds (0.340313 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 41m 41s 324ms; rmdb tmp/5233442526903138997/pref -v 3 . Time for processing: 0h 0m 0s 616ms; mvdb tmp/5233442526903138997/aln tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; align /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln_merged tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 9m 57s 768ms ; Time for merging to aln: 0h 0m 0s 17ms; 672599536 alignments calculated; 672599536 sequence pairs passed the thresholds (1.000000 of overall calculated); 8940.219727 hits per query sequence; Time for proc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:7302,wrap,wrapped-scoring,7302,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['wrap'],['wrapped-scoring']
Integrability,"per sequence; docker-compose-mmseqs-web-worker-1 | 0 overflows; docker-compose-mmseqs-web-worker-1 | 0 queries produce too much hits (truncated result); docker-compose-mmseqs-web-worker-1 | 6 sequences passed prefiltering per query sequence; docker-compose-mmseqs-web-worker-1 | 6 median result list length; docker-compose-mmseqs-web-worker-1 | 0 sequences with 0 size result lists; docker-compose-mmseqs-web-worker-1 | Time for merging to pref_0: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 8ms; docker-compose-mmseqs-web-worker-1 | align /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Compute score, coverage and sequence identity; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Calculation of alignments; docker-compose-mmseqs-web-worker-1 | [===================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:5345,wrap,wrapped-scoring,5345,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['wrap'],['wrapped-scoring']
Integrability,"per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 38ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms ] 25.77% 43 eta 0s; Time for processing: 0h 0m 0s 102ms; clust in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 164 0s 7ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; [=================================================================] 100.00% 164 0s 6ms; Add missing connections; [==========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:21098,wrap,wrapped-scoring,21098,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 84ms; clust in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 164 0s 12ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; [=================================================================] 100.00% 164 0s 12ms; Add missing connections; [============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:5495,wrap,wrapped-scoring,5495,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 30s 812ms; Time for processing: 0h 1m 20s 243ms; filterdb cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter1 cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 --filter-file cluster_tmp/1127447206531551203/linclust/8761493678692146066/order_redundancy --threads 40 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 119.25M 2m 56s 532ms ; Time for merging to pref_filter2: 0h 1m 34s 791ms; Time for processing: 0h 5m 27s 349ms; align cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 119253279 type: Nucleotide; Target database size: 119253279 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 119.25M 1h 5m 19s 819ms ; Time for merging to aln: 0h 1m 24s 501ms. 1903287037 alignments calculated.; 119437486 sequence pairs passed the thresholds (0.062753 of overall calculated).; 1.001545 hits per query sequence.; Time for processing: 1h 7m 38s 628ms; clust cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:7631,wrap,wrapped-scoring,7631,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['wrap'],['wrapped-scoring']
Integrability,"pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 422ms; filterdb ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_filter1 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_filter2 --filter-file ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/order_redundancy --threads 40 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 31.32K 0s 100ms; Time for merging to pref_filter2: 0h 0m 0s 137ms; Time for processing: 0h 0m 0s 847ms; rescorediagonal ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_filter2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 31.32K 0s 42ms; Time for merging to pref_rescore2: 0h 0m 0s 90ms; Time for processing: 0h 0m 0s 772ms; align ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 214",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:15183,wrap,wrapped-scoring,15183,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"presentative sequences are redundant; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; > mmseqs easy-linclust /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort.faa /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort All_cohort_tmp/ --min-seq-id 0.9 --cov-mode 1 -c 0.9 --cluster-mode 2 --max-seq-len 10000 --threads 56; ## MMseqs Output (for bugs); Create directory All_cohort_tmp/; easy-linclust /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort.faa /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort All_cohort_tmp/ --min-seq-id 0.9 --cov-mode 1 -c 0.9 --cluster-mode 2 --max-seq-len 10000 --threads 56 . MMseqs Version: 	13-45111+ds-2; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Threads 	56; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage mode 	1; Max sequence length 	10000; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Alphabet size 	nucl:5,aa:21; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Mask residues 	1; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:1941,wrap,wrapped,1941,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['wrap'],['wrapped']
Integrability,"r 50; mmseqs search queryDB targetDB no_e_cutoff/resultDB tmp --search-type 3 >&1 | tee no_e_cutoff/no_e_cutoff.out; mmseqs convertalis queryDB targetDB no_e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my actual goal) to for example perform QC on raw seq data. ## Your Environment; I installed using conda:; ```; # Name Version Build Channel; mmseqs2 12.113e3 h2d02072_2 bioconda; ```; The running server:; ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 256; On-line CPU(s) list: 0-254; Off-line CPU(s) list: 255; Thread(s) per core: 1; Core(s) per socket: 64; Socket(s): 2; NUMA node(s): 2; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7702 64-Core Processor; Stepping: 0. NAME=""Ubuntu""; VERSION=""18.04.4 LTS (Bionic Beaver)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 18.04.4 LTS""; VERSION_ID=""18.04""; HOME_URL=""https://www.ubuntu.com/""; SUPPORT_URL=""https://help.ubuntu.com/""; BUG_REPORT_URL=""https://bugs.launch",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/399:1828,message,message,1828,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399,1,['message'],['message']
Integrability,"r making such an amazing program, secondly I was wondering if you could provide some advice on how to handle a very large query database. I have several terabytes that I would like to check against the nr. Currently I am using the easy-taxonomy workflow, I have loaded about 1/15th of my data as a proof of concept. However as you will see in the log below this will take quite some time. My main questions are: is this expected behaviour and how am I able to speed this up?. ## Current Behavior; LSBATCH: User input; mmseqs easy-taxonomy ./sample.fastq.gz ./nr ./result ./tmp -s 0.5. MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	26; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422:1046,wrap,wrapped,1046,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422,1,['wrap'],['wrapped']
Integrability,"r-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28ms; Time for processing: 0h 0m 1s 808ms; rescorediagonal tmp/3198441352783276465/input tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.5 -a 0 --cov-mode 5 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 100.00% 96.03K 0s 151ms ; Time for merging to pref_rescore1: 0h 0m 0s 241ms================>] 99.99% 96.02K eta 0s ; Time for processing: 0h 0m 1s 33ms; clust tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pre_clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Connected Component; [=================================================================] 100.00% 96.03K 0s 106ms ; Sort entries; Find missing connections; Found 292030 new connections.; Reconstruct initial order;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:7406,wrap,wrapped-scoring,7406,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['wrap'],['wrapped-scoring']
Integrability,"r-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 7m 46s 594ms; rescorediagonal uniref90-DB-wwmj uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref tmp//16518381706844811497/linclust/11898236; 85496030198/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov; -mode 2 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [================================================================] =76.22M 19m 41s 19ms; Time for merging to pref_rescore1: 0h 0m 50s 277ms; Time for processing: 0h 21m 16s 644ms; clust uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore1 tmp//16518381706844811497/linclust/1189823685496030198/pre_cl; ust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 28s 473ms. Size of the sequence database: 76215872; Size of the alignment database: 76215872; Number of clusters: 74926526. Writing results 0h 0m 17s 970ms; Time for merging to pre_clust: 0h 0m 0s 1ms; Time for processing: 0h 1m 0s 559ms; createsubdb tmp//16518381706844811497/linclus",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:6153,wrap,wrapped-scoring,6153,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['wrap'],['wrapped-scoring']
Integrability,"r; `mmseqs align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a `. Creates many (empty) .aln.x and (mostly non-empty) .aln.index.x files and crash just (before?) finish. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a . ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id.	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3. Compute score, coverage and sequence identity; Query database size: 1233743 type: Nucleotide; Target database size: 1233743 type: Nucleotide; Calculation of alignments; **Segmentation fault**===============================================>] 99.07% 509.65K eta 0s . ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many rele",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/462:1247,wrap,wrapped,1247,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/462,1,['wrap'],['wrapped']
Integrability,"rching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir> [options]. prefilter options 	default 	description [value range]; --comp-bias-corr 	0 	correct for locally biased amino acid composition [0,1] ; --add-self-matches 	false 	artificially add entries of queries with themselves (for clustering); -s 	5.700 	sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive [1.0,7.5]; -k 	0 	k-mer size in the range (0: set automatically to optimum) ; --k-score 	2147483647	k-mer threshold for generating similar-k-mer lists ; --alph-size 	21 	alphabet size [2,21] ; --offset-result 	0 	Offset result list ; --split 	0 	Splits input sets into N equally distributed chunks. The default value sets the best split automatically. createindex can only be used with split 1.; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; --diag-score 	1 	use diagonal score for sorting the prefilter results [0,1] ; --exact-kmer-matching 	0 	only exact k-mer matching [0,1] ; --mask 	1 	0: w/o low complexity masking, 1: with low complexity masking; --min-ungapped-score 	15 	accept only matches with ungapped alignment score above this threshold; --spaced-kmer-mode 	1 	0: use consecutive positions a k-mers; 1: use spaced k-mers ; --spaced-kmer-pattern 	 	User-specified spaced k-mer pattern ; --local-tmp 	 	Path where some of the temporary files will be created ; --disk-space-limit 	0 	Set the maximum disk space (in Mb) to use for reverse profile searches. Defaults (0) to all available disk space in the temp folder. align options 	default 	description [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:5297,depend,depending,5297,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['depend'],['depending']
Integrability,"result /tmp/mydir; Create directory /tmp/mydir; easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of n",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:2094,wrap,wrapped,2094,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped']
Integrability,"riments/small.mm.db experiments/small.mm.db experiments/small50_seq experiments/small50_seq.fa`. ## MMseqs Output (for bugs). Full session output:. ```; user@user:~$ ./mmseqs/bin/mmseqs createdb experiments/small_sample.fa experiments/small.mm.db; Converting sequences; [24948] 0s 72ms; Time for merging to small.mm.db_h: 0h 0m 0s 37ms; Time for merging to small.mm.db: 0h 0m 0s 16ms; Database type: Aminoacid; Time for merging to small.mm.db.lookup: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 204ms; user@user:~$ ./mmseqs/bin/mmseqs linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5; linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5 . MMseqs Version: 	02be0c4ea6183fce9cf45521a8c145d10f3928c1; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Threads 	12; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:3384,wrap,wrapped,3384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['wrap'],['wrapped']
Integrability,"rogs_mmseqs_db/phrogs_profile_db \; mmseqs_target_seq/${sample}/${sample}_targetofinterest_proteins.target_seq \; mmseqs_target_seq/${sample}/${sample}_targetofinterest_proteins_mmseqs \; mmseqs_target_seq/${sample}/${sample}_targetofinterest_proteins_mmseqs.tsv --full-header. cp mmseqs_target_seq/${sample}/${sample}_targetofinterest_proteins_mmseqs.tsv mmseqs_target_seq; echo ""file: mmseqs_target_seq/${sample}_targetofinterest_proteins_mmseqs.tsv"". ## Current Behavior; [Previous output omitted here]; Create directory mmseqs_target_seq/[bacteria_of_interest]/tmp; search phrogs_mmseqs_db/phrogs_profile_db mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins.target_seq mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins_mmseqs mmseqs_target_seq/[bacteria_of_interest]/tmp -s 7 . MMseqs Version: 	14.7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:2480,wrap,wrapped,2480,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['wrap'],['wrapped']
Integrability,"rs/s/Documents/Albatros/protein/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	1; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mod",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:1554,wrap,wrapped,1554,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['wrap'],['wrapped']
Integrability,"rw-rw-r-- 1 user user 9 Apr 14 16:58 nt.fnaDB.source; -rw-rw-r-- 1 user user 7644438631 Apr 14 16:58 nt.fnaDB_h; -rw-rw-r-- 1 user user 4 Apr 14 16:58 nt.fnaDB_h.dbtype; -rw-rw-r-- 1 user user 1609915648 Apr 14 17:03 nt.fnaDB_h.index; -rw-rw-r-- 1 user user 1043159832 Apr 14 17:21 nt.fnaDB_mapping; -rw-rw-r-- 1 user user 640718438 Apr 14 17:17 nt.fnaDB_taxonomy; ```. ## MMseqs Output (some paths & filenames redacted); ```; Create directory tmp; taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp . MMseqs Version: 	19064f27c8d86fcdcd3daad60f6db70f6360f30b; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	64; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverag",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438:2398,wrap,wrapped,2398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438,1,['wrap'],['wrapped']
Integrability,"s02938_DB /final/db_profile_vs_consensus/low_1/Genus02938/Genus02938_DB /final/db_cluster/low_1/Genus02938/Genus02938_DB. MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 144; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/844:1780,wrap,wrapped,1780,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/844,1,['wrap'],['wrapped']
Integrability,"s:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:2097,wrap,wrapped,2097,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['wrap'],['wrapped']
Integrability,"seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 77.30K 0s 41ms; Sort kmer 0h 0m 0s 46ms; Sort by rep. sequence 0h 0m 0s 22ms; Time for fill: 0h 0m 0s 11ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 225ms; rescorediagonal tmp/8115150149931881526/input tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 77.30K 0s 71ms; Time for merging to pref_rescore1: 0h 0m 0s 102ms; Time for processing: 0h 0m 0s 429ms; clust tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore1 tmp/8115150149931881526/clu_tmp/13790714163985984779/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 0s 91ms. Size of the sequence database: 77298; Size of the alignment database: 77298; Number of clusters: 31445. Writing results 0h 0m 0s 3ms; Time for merging to pre_clust: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 188ms; createsubdb tmp/8115150149931881526/clu_tmp/137907141639859847",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:4586,wrap,wrapped-scoring,4586,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['wrap'],['wrapped-scoring']
Integrability,"sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 42ms; Time for merging to aln: 0h 0m 0s 4ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 74ms; clust clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:9138,wrap,wrapped-scoring,9138,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m 9s 647ms; Generate k-mers list for 4 split; [=================================================================] 100.00% 541.12M 11m 6s 122ms ; Sort kmer 0h 0m 14s 827ms; Sort by rep. sequence 0h 0m 3s 410ms; Merge splits ... Time for fill: 0h 14m 22s 381ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 1h 16m 36s 224ms; rescorediagonal DB DB tmp/10260956542131223380/linclust/4311072182387952617/pref tmp/10260956542131223380/linclust/4311072182387952617/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 1 -v 3 . Can not touch 215222407074 into main memory; [> ] 0.00% 1 eta -. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:6842,wrap,wrapped-scoring,6842,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['wrap'],['wrapped-scoring']
Integrability,"st aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 1; linclust uniref90-DB-wwmj tmp//16518381706844811497/clu_redundancy tmp//16518381706844811497/linclust --cluster-mode 3 --max-iterations 1000 --similarity; -type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignme; nt-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp; -bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,n",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:3536,wrap,wrapped-scoring,3536,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['wrap'],['wrapped-scoring']
Integrability,"sult.tsv; tmp_easy_search; -a 1; --alignment-mode 3; --remove-tmp-files 0; --sort-results 0; --threads 96 ; --format-mode 4; --format-output '$format_out'; ""; echo ""$cmd"" | cat -n; eval $cmd; ```. ## MMseqs Output (for bugs); ```; # mmseqs easy-search; # query.fasta; # target_DB; # result.tsv; # tmp_easy_search; # -a 1; # --alignment-mode 3; # --remove-tmp-files 0; # --sort-results 0; # --threads 96 ; # --format-mode 4; # --format-output 'query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq'; ; Create directory tmp_easy_search; easy-search query.fasta target_DB result.tsv tmp_easy_search -a 1 --alignment-mode 3 --remove-tmp-files 0 --sort-results 0 --threads 96 --format-mode 4 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq . MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matchin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:1608,wrap,wrapped,1608,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['wrap'],['wrapped']
Integrability,"sure to execute the reproduction steps with newly recreated and empty tmp folders. I have formatted the IMG/VR v4 7.1 AA database as recommended (https://github.com/soedinglab/MMseqs2/wiki#create-a-seqtaxdb-by-manual-annotation-of-a-sequence-database) and I've created a custom taxdump using taxonkit. The custom taxdb was created without issue:. ```; mmseqs createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/I",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:1501,integrat,integrate,1501,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['integrat'],['integrate']
Integrability,"t 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:3500,wrap,wrapped-scoring,3500,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['wrap'],['wrapped-scoring']
Integrability,"t=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.9; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterat",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:2460,wrap,wrapped,2460,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['wrap'],['wrapped']
Integrability,"th 40 cores and 156G RAM.; I use **--force-reuse 1** because I had to run my script multiple time (due to error and for resource saving) .; At first I'd a memory error with kmermatcher, which was fixe with **--split-memory-limit**.; The generation of k-mer list took 17 split and I did it in two steps because of time limit on my server. After that I'd two different error.; Just after last split for k-mer list : ; ```; linclust /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 40 -v 3 --force-reuse 1 --split-memory-limit 92G . MMseqs Version: 	f5f780acd64482cd59b46eae0a107f763cd17b4d; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	40; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	92G; Include only extendab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:1769,wrap,wrapped,1769,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['wrap'],['wrapped']
Integrability,"tmp/13016959338117486175/linclust/12836794075397166753/pref_filter1 tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_filter2 --filter-file tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/order_redundancy --threads 24 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 10.91K 0s 66ms ; Time for merging to pref_filter2: 0h 0m 0s 170ms; Time for processing: 0h 0m 0s 603ms; align tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_filter2 tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 24 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 10913 type: Nucleotide; Target database size: 10913 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 10.91K 0s 56ms ; Time for merging to aln: 0h 0m 0s 218ms; 15033 alignments calculated; 12475 sequence pairs passed the thresholds (0.829841 of overall calculated); 1.143132 hits per query sequence; Time for",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:10750,wrap,wrapped-scoring,10750,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['wrap'],['wrapped-scoring']
Integrability,"tmp; cluster ../so245_combined_assembly_mmseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40 . MMseqs Version: 	61ca48883b50714be51fc35fc9b77325ffde53fb; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:1703,wrap,wrapped,1703,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['wrap'],['wrapped']
Integrability,"ucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediagonal 1831648_seqs.mmseqs2db 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 1.83M 10s 370ms; Time for merging to pref_rescore1: 0h 0m 0s 781ms; Time for processing: 0h 0m 21s 118ms; clust 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 tmp/16479300059278292880/linclust/10067396915876818640/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Set Cover; [=================================================================] 1.83M 0s 184ms; Sort entries; Find missing connections; Found 1239487 new connections.; Reconstruct initial order; [=================================================================] 1.83M 0s 214ms; Add missing connections; [==============",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:5324,wrap,wrapped-scoring,5324,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['wrap'],['wrapped-scoring']
Integrability,"ulti-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=================================================================] 140.20K 2m 37s 793ms; Time for merging to pref_rescore1: 0h 0m 0s 35ms; Time for processing: 0h 2m 48s 60ms; clust db/dbclust tmp/16437734971973434362/pref_rescore1 tmp/16437734971973434362/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 36 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 140.20K 0s 7ms; Sort entries; Find missing connections; Found 44 new connections.; Reconstruct initial order; [=================================================================] 140.20K 0s 7ms; Add missing connections; [=================================================================] 140.20K 0s 3ms. Time for read in: 0h 0m 0s 42ms; Total tim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:1757,wrap,wrapped-scoring,1757,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['wrap'],['wrapped-scoring']
Integrability,"v-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; Time for merging to pref: 0h 0m 0s 6ms; Time for processing: 10h 13m 54s 576ms; rescorediagonal JGI JGI tmp/14756877054557405347/pref tmp/14756877054557405347/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 . Can not touch 407600133816 into main memory. ## Your Environment; Latest precompiled AVX2 version Release 15-6f452",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:4120,wrap,wrapped-scoring,4120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['wrap'],['wrapped-scoring']
Integrability,"when i Create a seqTaxDB from an existing BLAST database following the protocol:; https://github.com/soedinglab/mmseqs2/wiki#create-a-seqtaxdb-from-an-existing-blast-database. mmseqs createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nt.fna.taxidmapping. createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nt.fna.taxidmapping . MMseqs Version: ce7bf53b8241f7ced20f5a75bab052da98e5ca79; NCBI tax dump directory taxonomy/; Taxonomy mapping file nt.fna.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 56; Verbosity 3. **Input database ""nt.fnaDB"" has the wrong type (Generic); Allowed input: ; - Index ; - Nucleotide ; - Profile ; - Aminoacid**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/566:71,protocol,protocol,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/566,1,['protocol'],['protocol']
Integrability,"with 0 size result lists; Time for merging to orfs_pref_tmp_7: 0h 3m 12s 265ms; Time for merging to orfs_pref_tmp_7_tmp: 0h 1m 51s 505ms; Merging 8 target splits to orfs_pref; Preparing offsets for merging: 0h 4m 24s 509ms; [=================================================================] 100.00% 310.10M 1m 43s 629ms; Time for merging to orfs_pref: 0h 2m 28s 649ms; Time for merging target splits: 0h 8m 46s 959ms; Time for merging to orfs_pref_tmp: 0h 1m 57s 44ms; Time for processing: 10h 1m 11s 163ms; rescorediagonal /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 100 -c 0 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 310.10M 1m 26s 457ms; Time for merging to orfs_aln: 0h 2m 24s 668ms; Time for processing: 0h 4m 43s 316ms; createsubdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln.list /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter --subdb-mode 1 -v 3. Time for merging to orfs_filter: 0h 0m 0s 6ms; Time for processing: 0h 0m 41s 304ms; rmdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter_h -v 3. Time for processing: 0h 0m 0s 5ms; createsubdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln.list /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:18287,wrap,wrapped-scoring,18287,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['wrap'],['wrapped-scoring']
Integrability,"x accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-patter",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:18658,wrap,wrapped-scoring,18658,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"x seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster iterations to 3; linclust shrimpDB tmp97/17949317426677965256/clu_redundancy tmp97/17949317426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:3351,wrap,wrapped-scoring,3351,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['wrap'],['wrapped-scoring']
Integrability,"x table init: 0h 0m 0s 730ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 5991; Target db start 1 to 5991; [=================================================================] 100.00% 5.99K 4s 202ms . 403.312621 k-mers per position; 5696 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 16 sequences passed prefiltering per query sequence; 20 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 5s 300ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 5991 type: Aminoacid; Target database size: 5991 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 5.99K 0s 226ms ; Time for merging to aln_step2: 0h 0m 0s 1ms; 21329 alignments calculated; 6429 sequence pairs passed the thresholds (0.301421 of overall calculated); 1.073110 hits per query sequence; Time for p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:28206,wrap,wrapped-scoring,28206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped-scoring']
Integrability,"xtension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust 1831648_seqs.mmseqs2db tmp/16479300059278292880/clu_redundancy tmp/16479300059278292880/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nuc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:2778,wrap,wrapped-scoring,2778,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['wrap'],['wrapped-scoring']
Integrability,"y-limit 60G; mmseqs createsubdb viral_clu viral_db viral_rep; ```; Then I merged 2 fastq files with _plass_; `plass mergereads ./OUT/8813_paired_1.fastq ./OUT/8813_paired_2.fastq ./OUT/8813_db --threads 10; `; I thought [this was the way](https://github.com/soedinglab/MMseqs2/issues/436) to feed the next steps, 8813_db would be the query in this case. I reasoned since the database of nonredundant proteins is in nucleotide format and the reads created a nucleotide database the search would be between nucleotide. . **I run** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --search-type 3; `. I got this error ; ```; Unrecognized parameter --search-type; Did you mean ""--seed-sub-mat""?; ```. **Or** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --seed-sub-mat nucl`. and I got this message error; ```; It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:1472,message,message,1472,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['message'],['message']
Integrability,"|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:1707,protocol,protocol,1707,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['protocol'],['protocol']
Integrability,"﻿Hello,. I am working with mmseqs2, I was asking myself about the order of fasta files when I use the command mmseqs _createdb / cluster_. I observed some little differences if I change the order of fasta sequences on the command _createdb_. Command line :. I used these commands :; ; - _mmseqs createdb --dont-shuffle (true/false) file.faa panproteome.db_. - _export TMP_DIR=$(mktemp -d ) && mmseqs cluster panproteome.db families.db ${TMP_DIR} --min-seq-id 0.8 -c 0.8 --threads 2 --kmer-per-seq 80 --max-seqs 300 && rm -rf ${TMP_DIR}_. - _mmseqs createtsv panproteome.db panproteome.db families.db families.tsv --first-seq-as-repr true_. I use : _MMseqs2 Version: 5.9375b_. I took a dataset (available in the attachment) for an example and I have this result :. results :; 		; 	order 1 :; 		dont-shuffle : false  -> cluster numbers :4296; 		dont-shuffle : true  -> cluster numbers : 4290. 	order 2 :; 		dont-shuffle : false -> cluster numbers : 4297; 		dont-shuffle : true -> cluster numbers : 4298. Is it an expected result to obtain different number of cluster depending on fasta sequence order ?. Attachment : fasta sequences ( 2 different order) and clustering files (families.tsv) for each condition.; [results.tar.gz](https://github.com/soedinglab/MMseqs2/files/2379387/results.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/115:1065,depend,depending,1065,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/115,1,['depend'],['depending']
Modifiability,"	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.99; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:1947,extend,extendable,1947,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['extend'],['extendable']
Modifiability,"	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:4640,extend,extendable,4640,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['extend'],['extendable']
Modifiability," 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	62G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; Error: Pre-clustering step died; ```; I also have an error log : . ```; + mmseqs linclust /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 20 -v 3 --force-reuse 1 --split-memory-limit 62G; /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/linclust.sh: line 37: 1000278 Killed ""$MMSEQS"" clust ""$INPUT"" ""${TMP_PATH}/pref_rescore1"" ""${TMP_PATH}/pre_clust"" ${CLUSTER_PAR}. real	8m30.284s; user	12m57.207s; sys	2m3.531s; slurmstepd: error: Detected 1 oom_kill event in StepId=1504095.batch. Some of the step tasks have been OOM Killed.; ```. I see that it's a memory issue but I don't know what to do to solve this.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:9275,extend,extendable,9275,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['extend'],['extendable']
Modifiability," 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	92G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:2748,extend,extendable,2748,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['extend'],['extendable']
Modifiability," '10000']' returned non-zero exit status 1.; ```. ## Steps to Reproduce (for bugs). Put in `input_sequences.fasta` anywhere (it affects single entry fasta and also miltientry fasta) one of those examples:; * `SEGGQDFWL`; * `GSSGLISMPRV`. Setup ColabFold databases from https://github.com/sokrypton/ColabFold/blob/main/setup_databases.sh; Run `colabfold_search input_sequences.fasta /path/to/db_folder search_results`; you will see above crash. **OR**. Go to https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb and try to fold one of the examples, you will see:; > Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Segmentation fault (core dumped); Error: Alignment died; ```. ## Context. If you will extend crashing examples to 12aa then mmseqs will work correctly. Is seems that 12 is some kind of magic barrier in examples I found. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `fcf52600801a73e95fd74068e1bb1afb437d719d` and `edb8223d1ea07385ffe63d4f103af0eb12b2058e`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * `fcf52600801a73e95fd74068e1bb1afb437d719d` compiled from source; * `edb8223d1ea07385ffe63d4f103af0eb12b2058e` downloaded from `https://mmseqs.com/archive/edb8223d1ea07385ffe63d4f103af0eb12b2058e/mmseqs-linux-avx2.tar.gz`; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.16.3; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD Ryzen 9 3950X 16-Core, 64GB RAM; * Operating system and version: Ubuntu 20.0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:3960,extend,extend,3960,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,1,['extend'],['extend']
Modifiability," --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scra",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:4129,extend,extendable,4129,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['extend'],['extendable']
Modifiability," --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:5198,extend,extendable,5198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['extend'],['extendable']
Modifiability," --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Database size: 51992 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 51.99K 0s 346ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 62ms; Sort by rep. sequence 0h 0m 0s 19ms; Time for fill: 0h 0m 0s 27ms; Time for merging to pref: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 567ms; rescorediagonal shrimpDB shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref tmp97/17949317426677965256/linclust/6279588666755106708/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 51.99K 0s 101ms; Time for merging",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:5143,extend,extendable,5143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['extend'],['extendable']
Modifiability," --threads 56 --compressed 0 -v 3 . [=================================================================] 35.67M 9s 733ms; Time for merging to pref_rescore2: 0h 0m 12s 355ms; Time for processing: 0h 0m 38s 935ms; align All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 56 --compressed 0 -v 3 . Compute score and coverage; Query database size: 35665237 type: Aminoacid; Target database size: 35665237 type: Aminoacid; Calculation of alignments; [=================================================================] 35.67M 7m 56s 191ms; Time for merging to aln: 0h 0m 12s 23ms; 118495359 alignments calculated; 45078108 sequence pairs passed the thresholds (0.380421 of overall calculated); 1.263923 hits per query sequence; Time for processing: 0h 8m 32s 609ms; clust All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 56 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 1s 843ms. Size of the sequence database: 35665237; Size of the alignment database: 35665237; Number of c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:9382,extend,extend,9382,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['extend'],['extend']
Modifiability," 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/1646423069375616632",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:5879,extend,extend,5879,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['extend'],['extend']
Modifiability," 0m 1s 151ms; [=================================================================] 1.30M 14s 938ms; Time for merging to pref_0: 0h 0m 0s 523ms; Time for merging target splits: 0h 0m 18s 286ms; Time for merging to pref_0_tmp: 0h 0m 6s 63ms; Time for processing: 11h 52m 0s 943ms; align /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 /tmp//2989869989197200687/search_tmp/6775691152365959592/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1298472 type: Nucleotide; Target database size: 90056195 type: Nucleotide; Calculation of alignments; [=================================================================] 1.30M 1h 24m 48s 423ms; Time for merging to aln: 0h 0m 0s 504ms; 662682155 alignments calculated; 492943101 sequence pairs passed the thresholds (0.743861 of overall calculated); 379.633209 hits per query sequence; Time for processing: 1h 27m 9s 264ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 746ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_merge -v 3 . Tim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:23511,extend,extend,23511,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['extend'],['extend']
Modifiability," 0s 42ms; Time for merging to pref_rescore2: 0h 0m 0s 90ms; Time for processing: 0h 0m 0s 772ms; align ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 31321 type: Aminoacid; Target database size: 31321 type: Aminoacid; Calculation of alignments; [=================================================================] 31.32K 3s 713ms; Time for merging to aln: 0h 0m 0s 107ms; 53166 alignments calculated; 45707 sequence pairs passed the thresholds (0.859704 of overall calculated); 1.459308 hits per query sequence; Time for processing: 0h 0m 4s 203ms; clust ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/aln ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Connected Component; [=================================================================] 31.32K 0s 215ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:16474,extend,extend,16474,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extend']
Modifiability," 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse),",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:3328,extend,extendable,3328,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['extend'],['extendable']
Modifiability," 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:4716,extend,extend,4716,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extend']
Modifiability," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:4515,extend,extendable,4515,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['extend'],['extendable']
Modifiability," Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:2542,extend,extendable,2542,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['extend'],['extendable']
Modifiability," Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Program call:; rescorediagonal tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:6851,extend,extendable,6851,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['extend'],['extendable']
Modifiability," also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 of overall calculated).; 1.097190 hits per query sequence.; Time for merging to aln: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 84ms; clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 854 0s 5ms;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:11840,extend,extend,11840,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['extend'],['extend']
Modifiability," and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; Time for merging to pref: 0h 0m 0s 6ms; Time for processing: 10h 13m 54s 576ms; rescorediagonal JGI JGI tmp/14756877054557405347/pref tmp/1475687705455740534",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:3028,extend,extendable,3028,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['extend'],['extendable']
Modifiability, conda-forge; gawk 4.2.1 h14c3975_1001 conda-forge; krb5 1.16.3 h05b26f9_1001 conda-forge; libcurl 7.64.1 hda55be3_0 conda-forge; libdeflate 1.0 h14c3975_1 bioconda; libedit 3.1.20170329 hf8c457e_1001 conda-forge; libgcc-ng 8.2.0 hdf63c60_1; libssh2 1.8.2 h22169c7_2 conda-forge; libstdcxx-ng 8.2.0 hdf63c60_1; llvm-openmp 8.0.0 hc9558a2_0 conda-forge; mmseqs2 8.fac81 hf3e9acd_1 bioconda; ncurses 6.1 hf484d3e_1002 conda-forge; openmp 8.0.0 0 conda-forge; openssl 1.1.1b h14c3975_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8571acd_11 bioconda; seqtk 1.3 h84994c4_1 bioconda; tk 8.6.9 h84994c4_1001 conda-forge; xz 5.2.4 h14c3975_1001 conda-forge; zlib 1.2.11 h14c3975_1004 conda-forge; ```. </p>; </details>. <details><summary>conda info</summary>; <p>. ```; active environment : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; active env location : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; shell level : 2; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.6.11; conda-build version : 3.11.0; python version : 3.6.7.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime2/li,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188:1544,config,config,1544,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188,1,['config'],['config']
Modifiability," depth 	1000; Similarity type 	2; Threads 	56; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage mode 	1; Max sequence length 	10000; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Alphabet size 	nucl:5,aa:21; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Mask residues 	1; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort.faa All_cohort_tmp//9948387321092861199/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0. Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 4m 46s 360ms; Create directory All_cohort_tmp//9948387321092861199/clu_tmp; linclust All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/clu_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:2773,extend,extendable,2773,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['extend'],['extendable']
Modifiability," only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:5054,extend,extendable,5054,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['extend'],['extendable']
Modifiability," path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb /Users/s/Documents/protein/true_plus300_proteins-13-strains_shortname-group.fa /Volumes/s/tmp/3581369344000996149/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [1718] 0s 24ms; Time for merging to input_h: 0h 0m 0s 10ms; Time for merging to input: 0h 0m 0s 10ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 81ms; Create directory /Volumes/s/tmp/3581369344000996149/clu_tmp; cluster /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu /Volumes/s/tmp/3581369344000996149/clu_tmp --max-seqs 20 -c 0.8 --cov-mode 1 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --min-seq-id 0.5 --remove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:2389,extend,extendable,2389,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['extend'],['extendable']
Modifiability," previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 22 --compressed 0 -v 3 . Compute score and coverage; Query database size: 77815083 type: Aminoacid; Target database size: 77815083 type: Aminoacid; Calculation of alignments; [Error: Alignment step died; Error: Search died. The command is the same as used for previous clustering, the file is not bigger, I have no idea what is the issue. Any help is appreciated, thanks,; G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265:2119,extend,extend,2119,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265,1,['extend'],['extend']
Modifiability," sizeof *state - 1];; ; }; void Random::seed (long x); @@ -73,7 +73,7 @@ void Random::seed (long x); ; // linear congruential initializer; 	for (i = 1; i < sizeof state / sizeof *state; ++i) {; -		state [i] = 1103515245 * state [i - 1] + 12345;; +		state [i] = 1103515245ul * state [i - 1] + 12345ul;; 	}; ; 	rJ = &state [r_off];; @@ -85,7 +85,7 @@ void Random::seed (long x); long Random::number () // uniform random x : 0 <= x <= exp2 (31) - 1; ; {; -	long r;; +	unsigned long r;; ; 	r = *rK;; 	r += *rJ--;; @@ -97,6 +97,6 @@ long Random::number () // uniform random; 			rJ = &state [sizeof state / sizeof *state - 1];; }; 	; - return (r >> 1) &0x7fffffff; // discard the least-random bit; + return (r >> 1) &0x7ffffffful; // discard the least-random bit; }; ```. 3. Instead of [running plain xxd](https://github.com/soedinglab/MMseqs2/blob/master/cmake/MMseqsResourceCompiler.cmake#L35), we generate header files for resource files with the following pattern:; ```; """"""; #ifndef MMSEQS2_XXD_{1}_H_; #define MMSEQS2_XXD_{1}_H_; #include ""mmseqs2/{0}_data.h"". // Use casters to make values act as properties. This is to prevent static variables causing; // ""initialization order fiasco"".; struct {0}_CharCaster {{; operator const unsigned char*() const {{; return reinterpret_cast<const unsigned char*>({0}_data_create()->data);; }}; operator const char*() const {{; return reinterpret_cast<const char*>({0}_data_create()->data);; }}; operator const void*() const {{; return reinterpret_cast<const void*>({0}_data_create()->data);; }}; }};. struct {0}_LenCaster {{; operator unsigned int() const {{; return static_cast<unsigned int>({0}_data_create()->size);; }}; }};. inline constexpr {0}_CharCaster {0};; inline constexpr {0}_LenCaster {0}_len;; ```. where `{0}` is the filename of the respective file. 4. Changing `\n` to `\0` in [this line](https://github.com/soedinglab/MMseqs2/blob/a5d49655330d144788c6e1bf8551d7cc1d356b0c/src/test/TestTranslate.cpp#L15). We hope this is helpful.; Best wishes",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661:3909,variab,variables,3909,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661,1,['variab'],['variables']
Modifiability,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:307,variab,variable,307,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['variab'],['variable']
Modifiability,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/541:1318,config,configuration,1318,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541,1,['config'],['configuration']
Modifiability,"## Expected Behavior. I'm trying to cluster my large protein sequence file (>45billion entries). I want to know how to set the parameters to cluster as soon as possible, and what kind of computer configuration is needed to run the data. And I also want to know, will the running time still be linear in the case of 30 times the test data set of paper ""Clustering huge protein sequence sets in linear time"". ## Current Behavior; mmseqs linclust $input tmp --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1000G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/623:196,config,configuration,196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/623,1,['config'],['configuration']
Modifiability,## Expected Behavior. Using the `--max-seq-length` parameter in `mmseqs linclust` will only return sequences with a length smaller than the setting. ## Current Behavior. Even with the default parameter linclust will return larger sequences (up to 600K nt in my case). Also choosing very large values triggers an integer overflow. ## Steps to Reproduce (for bugs). ```bash; mmseqs linclust foods foods_99 /tmp --cov-mode 0 -c 0.8 --min-seq-id 0.99 --threads 20 --split-memory-limit 250G --max-seq-len 3000000000; ```. ## MMseqs Output (for bugs). ```; ...; Seq. id. threshold 0.99 ; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length -1294967296; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; ...; ```. ## Context. mmseqs version 13.45111. `conda info`:. ```; active environment : metagenomics; active env location : /users/cdiener/miniconda3/envs/metagenomics; shell level : 3; user config file : /users/cdiener/.condarc; populated config files : ; conda version : 4.10.3; conda-build version : not installed; python version : 3.7.8.final.0; virtual packages : __linux=4.15.0=0; __glibc=2.27=0; __unix=0=0; __archspec=1=x86_64; base environment : /users/cdiener/miniconda3 (writable); conda av data dir : /users/cdiener/miniconda3/etc/conda; conda av metadata url : None; channel URLs : https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /users/cdiener/miniconda3/pkgs; /users/cdiener/.conda/pkgs; envs directories : /users/cdiener/miniconda3/envs; /users/cdiener/.conda/envs; platform : linux-64; user-agent : conda/4.10.3 requests/2.26.0 CPython/3.7.8 Linux/4.15.0-121-generic ubuntu/18.04.5 glibc/2.27; UID:GID : 52778:1127; netrc file : None; offline mode : False; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/499:982,config,config,982,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499,2,['config'],['config']
Modifiability,"## Expected Behavior; Be able to specify the parameters gap open and extend costs; ## Current Behavior; Not able to use the two options. ## Steps to Reproduce (for bugs); I have 2 very simple test files, a.fasta and b.fasta: [a.txt](https://github.com/soedinglab/MMseqs2/files/3166780/a.txt), [b.txt](https://github.com/soedinglab/MMseqs2/files/3166779/b.txt) (here attached as txt). I run this command for each file:; `mmseqs.bat createdb <fastafile> <dbname> --dbtype 2 --max-seq-len 38 `. Then `search` as follows:; `mmseqs.bat search aDB bDB alignDB tmp --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open N --gap-extend M `; (integers in place of N, M). The output is in [searchout.txt](https://github.com/soedinglab/MMseqs2/files/3166806/searchout.txt). I then run `convertalis` to summarize:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln""`. Output: [convout.txt](https://github.com/soedinglab/MMseqs2/files/3166817/convout.txt); Note that in the `convertalis `output, the values for gap open and extension are:; ```; Gap open cost 11; Gap extension cost 1; ```. Is this a bug in the output or is it not taking the settings into account? I have tried many combinations of settings and the reported scores are always to same. ## MMseqs Output (for bugs); Output is included above for each command. ## Context; I am trying to get alignment scores for short DNA sequences. Gaps are important as I am looking for scores which are not heavily influenced by gaps and mismatches in general (little penalty). ## Your Environment; 09 May 2019, Windows version from https://mmseqs.com/latest/; Windows 10.0.17763 Build 17763; No issues running MMseqs2, other than errors such as ; ```; posix_madvise returned an error alignDB; posix_madvise returned an error tmp/3046893737278326904/aln; posix_madvise returned an error tmp/3046893737278326904/search/pref_0; ```; when running `search `and `convertalis`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201:69,extend,extend,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201,2,['extend'],['extend']
Modifiability,"## Expected Behavior; Hello, I am mapping a small database of peptide k-mers 8-15 AA length (8,408 sequences, summary length of 77,356) to a translated genome sequence database (756,891 sequences, summary length of 5,925,854,019). The goal is to find all possible 100% sequence matches regardless of the E-value. ; The peptides are known to occur at least once. Following the discussion at: https://github.com/soedinglab/MMseqs2/issues/373; I have tried the following workflow:. ## Steps to Reproduce; `mmseqs createdb IP.fasta IP_DB/IP_DB`; `mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:874,extend,extend,874,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['extend'],['extend']
Modifiability,"## Expected Behavior; I am trying to run mmseqs cluster with the MPI runner option across two nodes (master, slave), but I am unable achieve this effect. I have configured passwordless ssh from master to slave through an ssh-key transfer. SSH can be accomplished through `ssh slave`. Moreover, there is a common NFS mounted to both nodes.; ; ## Steps to Reproduce (for bugs); First, I cd into the NFS directory (`'/mnt'`), then create the DB:. `mmseqs createdb /mnt/QUERY.fasta /mnt/DB`. which runs as expected. Then I run . `RUNNER=""mpirun -np 4 --host master,slave"" mmseqs cluster /mnt/DB /mnt/clu /mnt/tmp`. where /mnt is a NFS that is mounted to both the master and slave nodes. . ## MMseqs Output (for bugs); ```; Program call:; /mnt/DB /mnt/clu /mnt/tmp . MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 20; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:161,config,configured,161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['config'],['configured']
Modifiability,## Expected Behavior; Need to Install the mmseqs (MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1) this particular version ; ## Current Behavior; but I am seeing there is no bin directory so I cant specify the PATH; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; cd /home/username # Navigate to your home directory; unzip MMseqs2.zip # Extract the MMseqs2 ZIP file; cd MMseqs2 # Go into the MMseqs2 directory after extraction; mkdir build # Create a build directory; cd build; cmake .. # Configure the build with cmake; Setting the PATH; export PATH=$HOME/MMseqs2/build/bin:$PATH. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; I am unable find the bin directory in Build folder.; so it is not seetting PATH & MMseqs is not getting in my Terminal. ## Your Environment; Macbook Pro M3 Pro chip; Using SSH and installing in my Home directory of the Server,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/886:572,Config,Configure,572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/886,1,['Config'],['Configure']
Modifiability,"## Expected Behavior; Run rbh using computer clusters.; ## Current Behavior; I am running 'mmseqs rbh' within 1000 jobs in parallel using High-performance computing. But there are always some jobs failed due to different error messages(`STDERR`). ## Steps to Reproduce (for bugs); this is my cmd to run rbh:; ```sh; $ mmseqs rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files; ```; so `$db_name` is a variable and for parallel jobs, it's the element of my name list. ; ## MMseqs Output (for bugs); there are several kinds of `STDERR` files:; ```sh; Could not delete /userfolder/rbh/result/tmp/latest!; ```; or; ```sh; Could not write file tmp/rbh.sh!; ```; and ; ```sh; Failed to execute tmp/rbh.sh with error 26.; ```; Even though the `STDERR` files are different, all `STDOUT` are quite similar: it seems that they all collapse in the middle of the process. The corresponding output is ; ```sh; rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files. MMseqs Version: f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Lo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/239:441,variab,variable,441,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239,1,['variab'],['variable']
Modifiability,"## Expected Behavior; Set RAM to 1.4T as specified by `--split-memory-limit 1400G`; ## Current Behavior; MMseqs set the limit to only 1T RAM; ## Steps to Reproduce (for bugs); I set `--split-memory-limit` to 1400G using the following command; ```; mmseqs easy-linclust {uniprot_sprot,uniprot_trembl,metaclust_nr,MERC,SRC}.fasta \; linclust_results/universedb-100 \; tmp/universedb-100 \; -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 1 \; --split-memory-limit 1400G; ```. ## MMseqs Output (for bugs); In the parameter header printed by MMseqs at the begging, the `Split memory limit` shown as 1T.; ```; MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 1; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 1T # <================ Shown here; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/328:1650,extend,extendable,1650,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/328,1,['extend'],['extendable']
Modifiability,"## Expected Behavior; The search function should complete for any combination of amino acid gap open and gap extension parameters. ## Current Behavior; The search function fails for amino acid gap open penalties below 8 and/or a gap extension penalty of 0. ; It gives an error:; ```; terminate called after throwing an instance of 'Sls::error'; Aborted Error: ; Alignment died.; ```. It fails in the ""align"" step. ## Steps to Reproduce (for bugs). `mmseqs search {dataset} {dataset} {dataset_output} tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0`. Using the following dataset of 74 amino acid sequences:; CAAAPAVMTAGWFDPW; CAKDGSGSYYGWFDPW; CAREGEVEGYNDFWSGYSRDRYYFDYW; CATSFPIRGDPSYYYYYYGMDVW; CARDPRVVVTARMYNWFDPW; CARRSTSRWGYYYMDVW; CARRSYRSSWYYYYGMDVW; CARDPGSRYSGGWYDYYYAMDVW; CARDLERAGGMDVW; CARDWAPTYYDMPSAFDIW; CAHRRGILTEDAFDIW; CAREAYGMDVW; CAREARSRYFDWLPSYYFDYW; CAQGRGGYYSPFDDW; CARDLVWATVSGTMDVW; CARDQEWFRELFLFDYW; CAREGQGTYLDYW; CAKDTGYCGDDCYIKLIRGGPDYW; CARVNGNSNWNFGSYYYYYMDVW; CARRGEAAGIWYFDLW; CARPPRNYYDRSGYYQRAEYFQHW; CARWLQLRSDYYYFGMDVW; CARDGGNAYSSGWYRYYYHMDVW; CARVEWAAAGTFYW; CARAPRERLQWGEYYFDYW; CARRTYYDLWSAYSSTAYYCMDVW; CARGVEDPVVPAAIPWCWFDPW; CARPPQAARIHYYYYMDVW; CARGLISLFRGAIFHYYYGMDVW; CARDYTRGAWFGESLIGGFDNW; CAKNERITMLVVVTLFDYW; CARDRSNLERLVMTFGGIIAGAFDIW; CARHDGSGEMDTITWGPIYYYMDVW; CAIYGYYYYGLDVW; CARTTWGTWIQAWYFDIW; CARLTFGGSGSYYFYYNGMDVW; CAKLLGSGITLDNDAFDIW; CARSPPASYYNPSTGYFDYW; CARRGNYYDSKNWFDPW; CAHRAVILNFDHW; CARDPYDLYGDYGGTFDYW; CAKEGGSGSLRYYYYGMDVW; CAREDYYGSGSLVDPYYYYRMDVW; CATSTAVAGTPDLFDYYYGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAF",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:533,extend,extend,533,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['extend'],['extend']
Modifiability,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/450:1400,flexible,flexible,1400,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450,1,['flexible'],['flexible']
Modifiability,"### Summary. > This pull request introduces an algorithm that reduces the total number of clusters while maintaining linearity. The algorithm captures meaningful information from previously unadopted data in the 'assignGroup' function, allowing for more effective clustering. ### Details. **1 Extended Search Process :**. > For the same k-mer group, the process of combining the representative sequence with each sequence has been extended. The algorithm now calculates sequence dissimilarity using adjacent sequence information. The most dissimilar sequence is selected as the next representative sequence, and this exploration process is repeated. If there are multiple sequences with the same level of dissimilarity, the most recently explored sequence is chosen as the representative sequence. Additionally, the selection of the most dissimilar sequence is limited to sequences that follow the current representative sequence in the search order. **2. Data Structure Challenges**. > The implementation of this method introduced challenges in maintaining the original in-place data structure. To overcome these challenges, a new data structure has been introduced with an additional buffer (slack space) at the end. The new data structure includes a default buffer size of 5%. . **3. Dynamic Memory Allocation**. > If memory becomes insufficient during operation, the structure dynamically resizes by splitting and reallocating memory based on the progress of the previous process. This approach ensures efficient memory usage and prevents potential memory shortages. ### Benchmark Results. > I conducted benchmarking on datasets randomly selected from the UniParc dataset, with sizes of 1.3M, 2.7M, 5.3M, 11M, 21M, 42M, and 85M. The results confirmed that the new algorithm effectively reduces the number of clusters while maintaining linearity, showing no significant time difference compared to the existing Linclust method. Despite these improvements, the algorithm still lags behind the easy-c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873:293,Extend,Extended,293,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873,2,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,"(step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 7780 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 7.78K 0s 362ms ; Time for merging to aln_2: 0h 0m 0s 3ms. 30 alignments calculated.; 30 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.003856 hits per query sequence.; Time for processing: 0h 0m 3s 496ms; mergedbs IP_DB/IP_DB result_DB/result_DB tmp/16138406286044646862/aln_merge tmp/16138406286044646862/aln_2 --compressed 0 -v 3 . Merging the results to result_DB/result_DB; Time for merging to result_DB: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 11ms. ## Your Environment; MMseqs2 Version: 12.113e3; Installed from bioconda. Hardware:; Intel® Xeon(R) W-2175 CPU @ 2.50GHz × 28 CPU; 62.5 GiB RAM. System:; Release 18.04.5 LTS (Bionic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:12022,extend,extend,12022,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['extend'],['extend']
Modifiability,"(truncated result); 88 sequences passed prefiltering per query sequence; 76 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 36ms; Time for processing: 0h 0m 32s 520ms; align ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/pref_step2 ./mmseqs_output/tmp/5351426679731834765/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8338 type: Aminoacid; Target database size: 8338 type: Aminoacid; Calculation of alignments; [=================================================================] 8.34K 17s 958ms; Time for merging to aln_step2: 0h 0m 0s 88ms; 489475 alignments calculated; 8622 sequence pairs passed the thresholds (0.017615 of overall calculated); 1.034061 hits per query sequence; Time for processing: 0h 0m 18s 545ms; clust ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/aln_step2 ./mmseqs_output/tmp/5351426679731834765/clu_step2 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Connected Component; [=================================================================] 8.34K 0s 2ms; Sort entries; Find missing connections; Found 28 new connections.; Reconstruct init",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:31056,extend,extend,31056,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extend']
Modifiability,"); 8 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 51ms; Time for processing: 0h 0m 6s 669ms; align ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/pref_step0 ./mmseqs_output/tmp/5351426679731834765/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 20942 type: Aminoacid; Target database size: 20942 type: Aminoacid; Calculation of alignments; [=================================================================] 20.94K 15s 380ms; Time for merging to aln_step0: 0h 0m 0s 75ms; 172065 alignments calculated; 67554 sequence pairs passed the thresholds (0.392607 of overall calculated); 3.225766 hits per query sequence; Time for processing: 0h 0m 16s 166ms; clust ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/aln_step0 ./mmseqs_output/tmp/5351426679731834765/clu_step0 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Connected Component; [=================================================================] 20.94K 0s 211ms; Sort entries; Find missing connections; Found 98 new connections.;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:21849,extend,extend,21849,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extend']
Modifiability,* Modified workflow source codes to assign `latest` symbolic link to variable `$LATEST`; * Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/551:69,variab,variable,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/551,1,['variab'],['variable']
Modifiability,", the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:1514,extend,extendable,1514,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['extend'],['extendable']
Modifiability,"- adds module taxonomyreport for Kraken-style taxonomy report; - add parameter --taxLineage to par.lca for lca, taxonomy and addtaxonomy. Currently this means there is a variable number of fields in the output, which isn't optimal; - refactored NcbiTaxonomy:; - does not load delnodes.dmp anymore. When a taxon that was seen in a report is not in the taxDB, it could be either through ; - get rid of two maps; instead D is vector mapping TaxID to internal ID; - use TaxID type to better distinguish interal IDs and taxIDs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/197:170,variab,variable,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/197,2,"['refactor', 'variab']","['refactored', 'variable']"
Modifiability,"----------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:4101,extend,extendable,4101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['extend'],['extendable']
Modifiability,"--filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 12 --compressed 0 -v 3 . Compute score and coverage; Query database size: 24598 type: Aminoacid; Target database size: 24598 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 24.60K 0s 159ms ; Time for merging to aln: 0h 0m 0s 22ms. 25322 alignments calculated.; 24830 sequence pairs passed the thresholds (0.980570 of overall calculated).; 1.009432 hits per query sequence.; Time for processing: 0h 0m 0s 211ms; clust experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/aln experiments/tmp//6404161245249296443/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 24.60K 0s 10ms ; Sort entries; Find missing connections; Found 232 new connections.; Reconstruct initial order; [=========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:9392,extend,extend,9392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['extend'],['extend']
Modifiability,"--no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:5892,extend,extendable,5892,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['extend'],['extendable']
Modifiability,"--pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merg",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:4828,extend,extendable,4828,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['extend'],['extendable']
Modifiability,"-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/1646423069375616632",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:2905,extend,extend,2905,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['extend'],['extend']
Modifiability,"-db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 42ms; Time for merging to aln: 0h 0m 0s 4ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 74ms; clust clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 12ms; Sort entries; Find missing connections; F",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:9504,extend,extend,9504,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extend']
Modifiability,"-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:3889,extend,extendable,3889,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['extend'],['extendable']
Modifiability,"-mode 0; We recompute with --createdb-mode 1; Time for merging to input_h: 0h 0m 0s 3ms; Time for merging to input: 0h 0m 0s 3ms; [=======; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 102ms; Create directory tmp/8115150149931881526/clu_tmp; linclust tmp/8115150149931881526/input tmp/8115150149931881526/clu tmp/8115150149931881526/clu_tmp -e 0.001 --min-seq-id 0.4 -c 0.8 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1 . Set cluster mode GREEDY MEM.; kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 77.30K 0s 41ms; Sort kmer 0h 0m 0s 46ms; Sort by rep. sequence 0h 0m 0s 22ms; Time for fill: 0h 0m 0s 11ms; Time for merging to pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:3252,extend,extendable,3252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['extend'],['extendable']
Modifiability,"-remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when y",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:4782,extend,extend,4782,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['extend'],['extend']
Modifiability,"/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:4975,extend,extendable,4975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extendable']
Modifiability,"/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/810",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:35656,config,config,35656,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['config'],['config']
Modifiability,"/uptime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/usleep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uudecode: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uuencode: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/vi: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/volname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/watch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/wc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/wget: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/which: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/whoami: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/whois: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xargs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xz: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/yes: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/zcat: Permission denied; ```. In addition ""mmseqs.bat search ..."" crashes with an error:. `Failed to execute tmp/14080462685954546121/translated_search.sh with error 2.`. Hence, I don't receive any results from mmseqs on the windows platform. ## Context; The environment variable path includes the main path and the directory ""bin/"":. ```; echo %PATH%; ...;c:\Program Files (x86)\mmseqs\;c:\Program Files (x86)\mmseqs\bin\;...; ```. Using ""mmseqs.exe"" from the directory ""bin/"" does not show the warnings, but leads to the same error. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; * Statically-compiled; * Operating system and version: Microsoft Windows [Version 10.0.14393]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:16060,variab,variable,16060,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['variab'],['variable']
Modifiability,"0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Thank you very much. Best,; Sam",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238:1353,extend,extendab,1353,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238,1,['extend'],['extendab']
Modifiability,"0 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediago",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:4067,extend,extendable,4067,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['extend'],['extendable']
Modifiability,"0.00% 4.00K 0s 74ms ; [================================================================>] 99.72% 3.99K eta 0s ; 0.926667 k-mers per position; 434 DB matches per sequence; 0 overflows; 4 sequences passed prefiltering per query sequence; 1 median result list length; 1762 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 5ms; Time for processing: 0h 0m 40s 369ms; align tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 tmp/7935334228278574252/search/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 2 --max-seq-len 10000 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Compute score only; Query database size: 4000 type: Nucleotide; Target database size: 365688 type: Nucleotide; Calculation of alignments; Query sequence 236 has a result with no diagonal information. Please check your database.; Error: Alignment died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used:`df77d9e6cf640fe8990f247441ab44d4f4ad9cdc`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):**_Statically-compiled_**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; _**CPU12 vCPU Intel(R) Xeon(R) Platinum 8255C CPU @ 2.50GHz; memory 43G**_; * Operating system and version:**`Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-121-generic x86_64)`**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:7165,extend,extend,7165,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['extend'],['extend']
Modifiability,"00,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Database size: 51992 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 51.99K 0s 346ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 62ms; Sort by rep. sequence 0h 0m 0s 19ms; Time for fill: 0h 0m 0s 27ms; Time for merging to pref: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 567ms; rescorediagonal shrimpDB shrimpDB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:4626,extend,extendable,4626,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['extend'],['extendable']
Modifiability,"000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:5753,extend,extendable,5753,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['extend'],['extendable']
Modifiability,"00; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 40; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.4; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterlinclust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:9157,extend,extendable,9157,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extendable']
Modifiability,"0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --sp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:3267,extend,extendable,3267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['extend'],['extendable']
Modifiability,"0; Spaced k-mer pattern ; Local temporary path ; Threads 64; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 1; linclust uniref90-DB-wwmj tmp//16518381706844811497/clu_redundancy tmp//16518381706844811497/linclust --cluster-mode 3 --max-iterations 1000 --similarity; -type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignme; nt-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp; -bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:3062,extend,extendable,3062,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['extend'],['extendable']
Modifiability,"16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Input /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 does not exist; Error: Alignment died; Error: First search died; Error: taxonomy died; Error: Search died; ```. Many thanks; Antonio. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 5daca424b162cc5fdf0b9cd151aebed86975cbf6; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE supported, 256G ; * Operating sy",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/433:2089,extend,extend,2089,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433,1,['extend'],['extend']
Modifiability,"1789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 278.90K 0s 59ms; Time for merging to pref_count.tsv: 0h 0m 0s 61ms; Time for processing: 0h 0m 0s 594ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 278905 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/1025387178902",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:5986,extend,extend,5986,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['extend'],['extend']
Modifiability,"1878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extend",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:3500,extend,extendable,3500,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['extend'],['extendable']
Modifiability,"1aa1153fe; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 32000; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 32; Verbosity 3; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 98202; Max orf gaps 2147483647; Skip incomplete orfs false; Find longest orf true; Extend short orfs false; Forward Frames 1,2,3; Reverse Frames 1,2,3; Offset of numeric ids 0; Translation Table 1; Number search iterations 1; Start sensitivity 4; Search steps 1; Sets the MPI runner; Remove Temporary Files false. Tmp tmp folder does not exist or is not a directory.; Created dir tmp; Program call:; /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/QUERY /home/banaeiak/thesis/L aing/MMseqs2ResultsCelegans/DB /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegan s/tmp/5905259317257326532/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483 647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 -- min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 32 -v 3 - s 5.7. MMseqs Version: 2c5dcabb805a4bd6d2db64095782a211aa1153fe; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. resu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/55:2670,Extend,Extend,2670,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55,1,['Extend'],['Extend']
Modifiability,"20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:4830,extend,extend,4830,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['extend'],['extend']
Modifiability,"20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_1 result_20230419_115721/res result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. expandaln result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/res /home/user/project/target_DB/target_DB.idx result_20230419_115721/res_exp --db-load-mode 2 --threads 96 --expansion-mode 0 -e 1.7976931348623157e+308 --expand-filter-clusters 1 --max-seq-id 0.95. Invalid database read for database data file=/home/user/project/target_DB/target_DB.idx, database index=/home/user/project/target_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. ## MMseqs Output (for bugs); [MMseqs output](https://gist.github.com/bchodkowski-vir/a144575014463748bfed089df6a8c03a). ## Context; I wish to run",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:7804,extend,extend,7804,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['extend'],['extend']
Modifiability,"21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster iterations to 3; linclust shrimpDB tmp97/17949317426677965256/clu_redundancy tmp97/17949317426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucle",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:3827,extend,extend,3827,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['extend'],['extend']
Modifiability,"3734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/input_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; summarizeresult tmp/15248047069833069253/result tmp/15248047069833069253/result_best -a 1 --overlap 0 -c 1 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to result_best: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 17ms; convertalis tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result_best result.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to result.tsv: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 11ms; rmdb tmp/15248047069833069253/result_best -v 3 . Time for processing: 0h 0m 0s 2ms; rmdb tmp/15248047069833069253/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/target -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/target_h -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/query -v 3 . Time for processing: 0h 0m 0s 2ms; rmdb tmp/15248047069833069253/query_h -v 3 ; ```. </details>. ## Context; See above. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Wh",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:9210,extend,extend,9210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['extend'],['extend']
Modifiability,"410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:2251,extend,extendable,2251,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['extend'],['extendable']
Modifiability,"426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:4086,extend,extendable,4086,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['extend'],['extendable']
Modifiability,"47483647 --max-accept 2; 147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Compute score and coverage; Query database size: 561568 type: Aminoacid; Target database size: 14926 type: Aminoacid; Calculation of alignments; [=================================================================] 323 0s 62ms; Time for merging into tmp/2730103712073724212/search/reverse_aln by mergeResults: 0h 0m 0s 109ms. 335 alignments calculated.; 323 sequence pairs passed the thresholds (0.964179 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 427ms; swapresults /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing offsets.; [=================================================================] 323 0s 3ms. Reading results.; [=================================================================] 323 0s 0ms. Output database: tmp/2730103712073724212/aln; [=================================================================] 14.93K 0s 154ms. Time for merging into tmp/2730103712073724212/aln by mergeResults: 0h 0m 0s 147ms; Time for processing: 0h 0m 0s 394ms; offsetalignment queryDB tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/aln resultDB --chain-alignments 0; --merge-query 1 --search-type 0 --threads 64 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:5829,extend,extend,5829,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['extend'],['extend']
Modifiability,"526903138997/aln tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; align /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln_merged tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 9m 57s 768ms ; Time for merging to aln: 0h 0m 0s 17ms; 672599536 alignments calculated; 672599536 sequence pairs passed the thresholds (1.000000 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 9m 58s 713ms; rmdb tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 73ms; swapresults /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln alnment/alignment --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 1.79769e+308 --split-memory-limit 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 100.00% 75.23K 8s 163ms . Reading results.; Killed============================> ] 51.07% 38.42K eta 6s ; Error: swapresults died",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:8660,extend,extend,8660,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['extend'],['extend']
Modifiability,"531551203/linclust/8761493678692146066/order_redundancy --threads 40 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 119.25M 2m 56s 532ms ; Time for merging to pref_filter2: 0h 1m 34s 791ms; Time for processing: 0h 5m 27s 349ms; align cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 119253279 type: Nucleotide; Target database size: 119253279 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 119.25M 1h 5m 19s 819ms ; Time for merging to aln: 0h 1m 24s 501ms. 1903287037 alignments calculated.; 119437486 sequence pairs passed the thresholds (0.062753 of overall calculated).; 1.001545 hits per query sequence.; Time for processing: 1h 7m 38s 628ms; clust cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln cluster_tmp/1127447206531551203/linclust/8761493678692146066/clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 49s 674ms. Size of the sequence database: 119253279; Size of the alignment database: 1192",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:7936,extend,extend,7936,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['extend'],['extend']
Modifiability,"5406232727/order_redundancy --threads 128 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 8.79M 22s 293ms; Time for merging to pref_filter2: 0h 0m 4s 651ms; Time for processing: 0h 0m 33s 252ms; align tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 tmp/576731152808920235/linclust/1790908825406232727/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 128 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8785102 type: Nucleotide; Target database size: 8785102 type: Nucleotide; Calculation of alignments; [=================================================================] 8.79M 11m 6s 373ms; Time for merging to aln: 0h 0m 5s 49ms; 1248621641 alignments calculated; 12850181 sequence pairs passed the thresholds (0.010291 of overall calculated); 1.462724 hits per query sequence; Time for processing: 0h 11m 16s 565ms; clust tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/aln tmp/576731152808920235/linclust/1790908825406232727/clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 1s 100ms. Size of the sequence database: 8785102; Size of the alignment database: 8785102; Number of clusters: 6",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:8577,extend,extend,8577,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['extend'],['extend']
Modifiability,"59278292880/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:3512,extend,extendable,3512,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['extend'],['extendable']
Modifiability,"6542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:4234,extend,extendable,4234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['extend'],['extendable']
Modifiability,"67038 k-mers per position; 19293 DB matches per sequence; 0 overflows; 137 sequences passed prefiltering per query sequence; 113 median result list length; 1 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 162ms; Time for processing: 0h 0m 11s 426ms; align tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 tmp/18110643841744502873/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-cor r-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realig n-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 500 type: Aminoacid; Target database size: 20000 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 500 23s 390ms; Time for merging to result: 0h 0m 0s 44ms; 68875 alignments calculated; 12897 sequence pairs passed the thresholds (0.187252 of overall calculated); 25.794001 hits per query sequence; Time for processing: 0h 0m 24s 118ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 -v 3. Time for processing: 0h 0m 0s 12ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/aln_0 -v 3. Time for processing: 0h 0m 0s 0ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/input_0 -v 3. Time for processing: 0h 0m 0s 0ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/aln_merge -v 3. Time for processing: 0h 0m 0s 0ms; convertalis ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:6926,extend,extend,6926,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['extend'],['extend']
Modifiability,"6959338117486175/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mas",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:5462,extend,extendable,5462,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['extend'],['extendable']
Modifiability,"69750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/query_h -v 3 . Time for processing: 0h 0m 0s 0ms. ```; ## Context; I'm trying to match sequences to each other and not count regions with degenerate bases as mismatches. Basically, I'd like the 2 example sequences to match each other with 0 mismatches. The current command produces an output with 13 mismatches (see output section). I'm mostly concern",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:11911,extend,extend,11911,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['extend'],['extend']
Modifiability,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Program call:; createdb final_complete_sequences.fa.gz tmp/3578692915323364718/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ............Time for merging files: 0h 0m 0s 87ms; Time for merging files: 0h 0m 0s 98ms; Time for merging files: 0h 0m 0s 136ms; Time for merging files: 0h 0m 0s 91ms; Time for processing: 0h 0m 2s 526ms; Program call:; cluster tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_tmp -c 0.9 --cov-mode 1 --threads 2 --min-seq-id 0.9 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:2066,extend,extendable,2066,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['extend'],['extendable']
Modifiability,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:4063,extend,extendable,4063,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['extend'],['extendable']
Modifiability,"79/result /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best -a 1 --overlap 0 -e 0.001 -c 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | [=================================================================] 100.00% 0.01 eta -; mmseqs-web-worker_1 | Can not map any alingment results for entry 0!; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 1ms; mmseqs-web-worker_1 | terminate called after throwing an instance of 'std::logic_error'; mmseqs-web-worker_1 | what(): basic_string::_M_construct null not valid; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/alis --sub-mat blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Error: Convert Alignments died; mmseqs-web-worker_1 | Aborted (core dumped); mmseqs-web-worker_1 | 2019/07/02 08:52:20 Execution Error: exit status 1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:13601,extend,extend,13601,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['extend'],['extend']
Modifiability,"81369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:4589,extend,extendable,4589,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['extend'],['extendable']
Modifiability,"83647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:4250,extend,extendable,4250,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"83647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:19853,extend,extendable,19853,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"89027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.11M 1s 487ms; Time for merging to pref_count.tsv: 0h 0m 4s 788ms; Time for processing: 0h 0m 11s 535ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15106287 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:11594,extend,extend,11594,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['extend'],['extend']
Modifiability,"94185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:5041,extend,extendable,5041,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['extend'],['extendable']
Modifiability,"97/linclust --cluster-mode 3 --max-iterations 1000 --similarity; -type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignme; nt-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp; -bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:4275,extend,extendable,4275,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['extend'],['extendable']
Modifiability,"9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/t_orfs ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/t_orfs_aa ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/alis_pdb_rna_sequence --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | [=================================================================] 1 0s 0ms; mmseqs-web-worker_1 | Time for merging to alis_pdb_rna_sequence: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 33ms; mmseqs-web-worker_1 | Removing temporary files; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result ; mmseqs-web-worker_1 | ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:30540,extend,extend,30540,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['extend'],['extend']
Modifiability,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:1961,Config,Configuring,1961,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,1,['Config'],['Configuring']
Modifiability,"; 20 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 5s 300ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 5991 type: Aminoacid; Target database size: 5991 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 5.99K 0s 226ms ; Time for merging to aln_step2: 0h 0m 0s 1ms; 21329 alignments calculated; 6429 sequence pairs passed the thresholds (0.301421 of overall calculated); 1.073110 hits per query sequence; Time for processing: 0h 0m 0s 232ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 5.99K 0s 4ms ; Sort entries; Find missi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:28677,extend,extend,28677,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extend']
Modifiability,"; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb exp.fa tmp2/6664721939282577716/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 24ms; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 1ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 33ms; Create directory tmp2/6664721939282577716/clu_tmp; cluster tmp2/6664721939282577716/input tmp2/6664721939282577716/clu tmp2/6664721939282577716/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/66647219392825777",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:2998,extend,extendable,2998,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['extend'],['extendable']
Modifiability,"; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust 1831648_seqs.mmseqs2db tmp/16479300059278292880/clu_redundancy tmp/16479300059278292880/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:3253,extend,extend,3253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['extend'],['extend']
Modifiability,"; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb /opt/mmseqs/examples/DB.fasta /tmp/mydir/7574787915800795625/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 15ms; Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 16ms; Create directory /tmp/mydir/7574787915800795625/clu_tmp; cluster /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:2898,extend,extendable,2898,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extendable']
Modifiability,"=============================================] 100.00K 0s 144ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 19ms; Time for processing: 0h 0m 2s 119ms; align ./mmseqs_output/tmp/5351426679731834765/seq_seeds.merged ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped_aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 34414 type: Aminoacid; Target database size: 26229 type: Aminoacid; Calculation of alignments; [=================================================================] 34.29K 6m 32s 543ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 85ms; 4335308 alignments calculated; 2294027 sequence pairs passed the thresholds (0.529150 of overall calculated); 66.900757 hits per query sequence; Time for processing: 0h 6m 33s 544ms; filterdb ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped_aln ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 40 --compressed 0 -v 3 . Filtering using regular expression; [=================================================================] 34.29K 1s 15ms; Time for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 70ms; Tim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:40992,extend,extend,40992,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extend']
Modifiability,"=========================================] 855.53K 0s 584ms; Time for merging to pref_filter2: 0h 0m 1s 180ms; Time for processing: 0h 0m 3s 237ms; align tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/pref_filter2 tmp/16479300059278292880/linclust/10067396915876818640/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 112 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 855530 type: Nucleotide; Target database size: 855530 type: Nucleotide; Calculation of alignments; [=================================================================] 855.53K 2m 53s 344ms; Time for merging to aln: 0h 0m 0s 811ms; 12214778 alignments calculated; 932129 sequence pairs passed the thresholds (0.076312 of overall calculated); 1.089534 hits per query sequence; Time for processing: 0h 3m 4s 809ms; clust tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/aln tmp/16479300059278292880/linclust/10067396915876818640/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Set Cover; [=================================================================] 855.53K 0s 54ms; Sort",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:8631,extend,extend,8631,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['extend'],['extend']
Modifiability,"==================================] 100.00% 1 eta -. 602.620000 k-mers per position; 41 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 740ms; align tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 tmp/15248047069833069253/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 1 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 1 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Time for merging to result: 0h 0m 0s 0ms; 1 alignments calculated; 1 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 28ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/input_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; summarizeresult tmp/15248047069833069253/res",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:7611,extend,extend,7611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['extend'],['extend']
Modifiability,"==============================] 100.00% 25.63K 0s 61ms; Time for merging to pref_filter2: 0h 0m 0s 138ms; Time for processing: 0h 1m 40s 346ms; align tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/pref_filter2 tmp97/17949317426677965256/linclust/6279588666755106708/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 20 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 25629 type: Nucleotide; Target database size: 25629 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 25.63K 1s 731ms; Time for merging to aln: 0h 0m 0s 152ms; 209782 alignments calculated; 32736 sequence pairs passed the thresholds (0.156048 of overall calculated); 1.277303 hits per query sequence; Time for processing: 0h 3m 22s 221ms; clust tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/aln tmp97/17949317426677965256/linclust/6279588666755106708/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Clustering mode: Set Cover; [=================================================================] 100.00% 25.63K 0s 25ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:9191,extend,extend,9191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['extend'],['extend']
Modifiability,"=======================] =74.93M 28m 19s 496ms; Time for merging to pref_rescore2: 0h 0m 51s 111ms; Time for processing: 0h 29m 44s 106ms; align tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/input_step_redu; ndancy tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2 tmp//16518381706844811497/linclust/1189823685496030198/aln --sub-mat 'aa:blos; um62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mo; de 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --; add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-sc; ore-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0; -v 3 . Compute score, coverage and sequence identity; Query database size: 74926526 type: Aminoacid; Target database size: 74926526 type: Aminoacid; Calculation of alignments; [=================================================================] 74.93M 3m 46s 500ms; Time for merging to aln: 0h 0m 54s 46ms; 92521862 alignments calculated; 75488967 sequence pairs passed the thresholds (0.815904 of overall calculated); 1.007507 hits per query sequence; Time for processing: 0h 5m 20s 32ms; clust tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/aln tmp//165183; 81706844811497/linclust/1189823685496030198/clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 64 --compressed 0 -v 3 --cluster-w; eight-threshold 0.9 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 10s 117ms. Size of the sequence database: 74926526; Size of ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:9840,extend,extend,9840,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['extend'],['extend']
Modifiability,"===============] 100.00% 500 23s 390ms; Time for merging to result: 0h 0m 0s 44ms; 68875 alignments calculated; 12897 sequence pairs passed the thresholds (0.187252 of overall calculated); 25.794001 hits per query sequence; Time for processing: 0h 0m 24s 118ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 -v 3. Time for processing: 0h 0m 0s 12ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/aln_0 -v 3. Time for processing: 0h 0m 0s 0ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/input_0 -v 3. Time for processing: 0h 0m 0s 0ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/aln_merge -v 3. Time for processing: 0h 0m 0s 0ms; convertalis tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/result alnResult.m8 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 0 --format-output query,targe t,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compresse d 0 -v 3. [=================================================================] 100.00% 500 0s 376ms; Time for merging to alnResult.m8: 0h 0m 0s 57ms; Time for processing: 0h 0m 1s 129ms; rmdb tmp/18110643841744502873/result -v 3. Time for processing: 0h 0m 0s 10ms; rmdb tmp/18110643841744502873/target -v 3. Time for processing: 0h 0m 0s 4ms; rmdb tmp/18110643841744502873/target_h -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp/18110643841744502873/query -v 3. Time for processing: 0h 0m 0s 1ms; rmdb tmp/18110643841744502873/query_h -v 3. Time for processing: 0h 0m 0s 1ms; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src tmp util; [lihuilin@login01 MMseqs2]$; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile ex",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:8237,extend,extend,8237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['extend'],['extend']
Modifiability,"============] 100.00% 154 0s 46ms. 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 845ms; align clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 clu/sim1_tmp/7842071913732967198/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 55ms; Time for merging to aln_step0: 0h 0m 0s 5ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/aln_step0 clu/sim1_tmp/7842071913732967198/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 11ms; Sort entries; Find missing connections; Found 1 new connections.; Reconstruct initial order; [====================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:14472,extend,extend,14472,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extend']
Modifiability,"========> ] 89.54% 138 eta 0s; 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 795ms; align clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 clu/sim2_tmp/12164117771218227067/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 46ms; Time for merging to aln_step0: 0h 0m 0s 4ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/aln_step0 clu/sim2_tmp/12164117771218227067/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 8ms; Sort entries; Find missing connections; Found 1 new connections.; Reconstruct initial order; [===================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:30184,extend,extend,30184,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extend']
Modifiability,"=====] 8.34K 0s 657ms; Clustering step 4; [=================================================================] 8.19K 0s 758ms; Write merged clustering; [=================================================================] 100.00K 0s 956ms; Time for merging to clu: 0h 0m 0s 164ms; Time for processing: 0h 0m 1s 268ms; align ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu ./mmseqs_output/tmp/5351426679731834765/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 100000 type: Aminoacid; Target database size: 100000 type: Aminoacid; Calculation of alignments; [=================================================================] 8.19K 8s 160ms; Time for merging to aln: 0h 0m 0s 15ms; 99829 alignments calculated; 73771 sequence pairs passed the thresholds (0.738974 of overall calculated); 9.012951 hits per query sequence; Time for processing: 0h 0m 8s 437ms; subtractdbs ./mmseqs_output/tmp/5351426679731834765/clu ./mmseqs_output/tmp/5351426679731834765/aln ./mmseqs_output/tmp/5351426679731834765/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 40 --compressed 0 -v 3 . subtractdbs ./mmseqs_output/tmp/5351426679731834765/clu ./mmseqs_output/tmp/5351426679731834765/aln ./mmseqs_output/tmp/5351426679731834765/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 40 --compressed 0 -v 3 . Remov",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:34125,extend,extend,34125,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extend']
Modifiability,"BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 2.20B 2h 9m 12s 463ms; Process file into 17 parts; Generate k-mers list for 1 split; Generate k-mers list for 2 split; Generate k-mers list for 3 split; Generate k-mers list for 4 split; Generate k-mers list for 5 split; Generate k-mers list for 6 split; Generate k-mers list for 7 split; [=================================================================] 2.20B 32m 39s 205ms; Sort kmer 0h 0m 26s 313ms; Sort by rep. sequence 0h 0m 4s 966ms; Generate k-mers list for 8 split; [=================================================================] 2.20B 33m 28s 924ms; Sort kmer 0h 0m 26s 546ms; Sort by rep. sequence 0h 0m 5s 354ms; Generate k",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:4033,extend,extendable,4033,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['extend'],['extendable']
Modifiability,"Dear author,; I am working a NR annotation for a large number of samples, and I find MMseq2 is a better software. So I would like to ask whether I can run faster together or one by one, My server configuration: CPU 144 and memory 500G.; All cat together: 48 G; One is ~200 M",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/523:196,config,configuration,196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/523,1,['config'],['configuration']
Modifiability,"Do you have a receipt for running MMseqs2 using MPI and slurm? I'm trying various strategies but some return errors, some spawn much too many threads on nodes (probably to my lack of expertise here). Did you run the program on cluster?. I have, let's suppose, 2 nodes, 24 threads each (not counting masternode of course). I'd like to use both nodes for clustering. I run the following on masternode:. ```; RUNNER=""mpirun -np 1""; salloc -N 2 mpirun mmseqs cluster nr70_rep nr60 tmp --min-seq-id 0.6 --threads 24; ```; What is the meaning of RUNNER variable here? Where should it be set? On master? On each node? I guess MMseqs2 itself manages further the sub-tasks so I have no intuition how to make it work with slurm. Thank you for any advice here.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/70:547,variab,variable,547,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/70,1,['variab'],['variable']
Modifiability,"E_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salvocos/tmp/test_sonicpara/mmseqs2_src/build; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 40 CPUs 500Gbytes of shared memory; ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:13115,Config,Configuring,13115,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['Config'],['Configuring']
Modifiability,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460:373,portab,portable,373,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460,2,['portab'],['portable']
Modifiability,"GAFDIW; CARHDGSGEMDTITWGPIYYYMDVW; CAIYGYYYYGLDVW; CARTTWGTWIQAWYFDIW; CARLTFGGSGSYYFYYNGMDVW; CAKLLGSGITLDNDAFDIW; CARSPPASYYNPSTGYFDYW; CARRGNYYDSKNWFDPW; CAHRAVILNFDHW; CARDPYDLYGDYGGTFDYW; CAKEGGSGSLRYYYYGMDVW; CAREDYYGSGSLVDPYYYYRMDVW; CATSTAVAGTPDLFDYYYGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAFDYW; CARSTSGSYYYGMDVW; CARDSPFSALGASNDYW; CAKDFGGDNTAMVEYFFDFW; CVRDYGDFYFDYW; CARADPYQLLGQHYYYGMDVW; CARAPLFPTGVLAGDYYYYGMDVW; CAKDRTAVFLFFGLGDAFDIW; CASSSGYLFHSDYW. ## MMseqs Output (for bugs). ```; search //app/database/sequences/sequences //app/database/sequences/sequences; DB //app/clustering/sequences/sequences_output /tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0. MMseqs Version: ad5837b3444728411e6c90f8c6ba9370f665c443; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:2; Gap extension cost nucl:5,aa:0; Zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:2361,extend,extend,2361,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['extend'],['extend']
Modifiability,"HI, I am getting some memory errors when running the cluster module. The amount of memory I have on my cluster is 100GB and the number of threads is 8. When I run the cluster command as below. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238:837,extend,extendab,837,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238,1,['extend'],['extendab']
Modifiability,"Having multiple cpu flags enabled is valid, so we should use if instead of elsif. Otherwise only the first `HAVE_*` variable is actually respected. e.g. before this change we get this on Gentoo:; ```; /usr/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -pipe -frecord-gcc-switches -Wl,-O1 -Wl,--as-needed -Wl,--defsym=__gentoo_check_ldflags__=0 -rdynamic -fsigned-char -mavx2 -mcx16 -Wa,-q -mcx16 -std=c++1y -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm -Wl,-Bstatic -lzstd lib/microtar/libmicrotar.a -Wl,-Bdynamic -lz -lbz2 && :; ```. i.e. only avx2 is respected, sse2/4 is ignored. After change we get:; ```; /usr/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -pipe -frecord-gcc-switches -Wl,-O1 -Wl,--as-needed -Wl,--defsym=__gentoo_check_ldflags__=0 -rdynamic -fsigned-char -mavx2 -mcx16 -Wa,-q -msse4.1 -mcx16 -msse2 -std=c++1y -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm -Wl,-Bstatic -lzstd lib/microtar/libmicrotar.a -Wl,-Bdynamic -lz -lbz2 && :; ```. https://github.com/gentoo/sci/pull/1143. Signed-off-by: Andrew Ammerlaan <andrewammerlaan@gentoo.org>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/533:116,variab,variable,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/533,1,['variab'],['variable']
Modifiability,"Hello! ; I am trying to understand how exactly are bit scores and E-values calculated. I found the formula in [The Statistics of Sequence Similarity Scores](https://www.ncbi.nlm.nih.gov/BLAST/tutorial/Altschul-1.html) and noticed that besides query and target lengths (n, m), it depends on Lambda and K constants, which are tied to the used substitution scores and gap penalties. I found the function `computeEvalue()` https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/util/extractdomains.cpp#L46-L50. I can see those constants are hardcoded, which stands in contradiction to what is described in the document above. Where are those values coming from? I found they are present in Table 1 in [Altschul, S. F., & Gish, W. (1996). [27] Local alignment statistics. Computer Methods for Macromolecular Sequence Analysis, 460–480. doi:10.1016/s0076-6879(96)66029-7 ](https://doi.org/10.1016/S0076-6879(96)66029-7), but not in the same row.; ; For bit score calculation https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/lib/alp/sls_alignment_evaluer.hpp#L159-L162; those are variables indeed, but I had trouble determining how are they set are how they are changing. It it happening here?; https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/alignment/EvalueComputation.h#L48. Thanks in advance for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/731:1141,variab,variables,1141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731,1,['variab'],['variables']
Modifiability,"Hello,. ## Expected Behavior; Output clustering results.; ## Current Behavior; Segmentation in linclust.sh; ## Steps to Reproduce (for bugs); ```; mmseqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=====================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:742,extend,extendable,742,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['extend'],['extendable']
Modifiability,"Hello,. I'm trying to run the search algorithm on a database comprised of over 20k sequences against the uniref100 db. This is the command I'm using and the version, followed by the error after approx. 18 minutes in the run. ##. search ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --split-memory-limit 150G. MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b. mem_align could not allocate memory.; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/3121500954244133633/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; Error: Alignment died. ##. I've tried increasing the memory, thinking this could be the issue, but so far the problem persists. Any help is appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/510:1112,extend,extend,1112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/510,1,['extend'],['extend']
Modifiability,"Hello,. My conda environment is as follows. active environment : ClusterEnv; active env location : /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv; shell level : 2; user config file : /home/sanyalab/.condarc; populated config files : /home/sanyalab/.condarc; conda version : 4.10.1; conda-build version : 3.18.9; python version : 3.7.4.final.0; virtual packages : __linux=2.6.32=0; __glibc=2.12=0; __unix=0=0; __archspec=1=x86_64; base environment : /mnt/common/rh6/annotate/Anaconda3 (writable); conda av data dir : /mnt/common/rh6/annotate/Anaconda3/etc/conda; conda av metadata url : https://repo.anaconda.com/pkgs/main; channel URLs : https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /mnt/common/rh6/annotate/Anaconda3/pkgs; /home/sanyalab/.conda/pkgs; envs directories : /mnt/common/rh6/annotate/Anaconda3/envs; /home/sanyalab/.conda/envs; platform : linux-64; user-agent : conda/4.10.1 requests/2.22.0 CPython/3.7.4 Linux/2.6.32-696.30.1.el6.x86_64 rhel/6.9 glibc/2.12; UID:GID : 101430:237; netrc file : None; offline mode : False. MMseqs installs ok (I think). However, I get a GLIBC error when running `mmseqs --help` like below. `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`. Please advice what to do. Thanks; Ab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461:173,config,config,173,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461,2,['config'],['config']
Modifiability,"Hi!. I copied the tutorial from the wiki into a Jupyter notebook, and configured binder to be able to run it. Here is an example: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/luizirber/MMseqs2/tutorial_in_binder?filepath=tutorial%2Ftutorial.ipynb). ## Notes. - I'm building MMseqs2 from master, but you can also pick a specific tag to put in the binder link. ## TODO. - [ ] Link in README.md? (or at least back in the wiki?); - [ ] Tutorial from wiki failed for me because `--report-mode` is missing in the bioconda package?; - [ ] Preload data during the `postBuild` step in binder? Not sure about this one, since it changes the tutorial a bit, but avoids redownloading everything during runtime.; * Need to at least preload the taxdump, I think binder is blocking the download (is it an FTP link? [binder](https://github.com/binder-examples/getting-data/blob/4c9deceab9e4fbe095e704a3aa11671321e0584f/README.md#large-public-files) blocks FTP downloads...); - [ ] Clean up outputs (don't want to spoil what is the mystery pathogen!); - [ ] Fix path to logo in the intro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/250:70,config,configured,70,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250,1,['config'],['configured']
Modifiability,"Hi,. I'm looking to use the UniRef90 sequences as representatives of gene clusters and then extend these clusters with additional sequences. Is it possible to take the set of ~153 million UniRef90 sequences and indicate that each one should be used as a cluster representative (i.e. if there are X input sequences, I want exactly X clusters)? Ideally, I'd avoid doing any actual clustering here since I've pre-selected the representatives. Thanks for any suggestions or insights you can provide. Cheers,; Donovan",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/671:92,extend,extend,92,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/671,1,['extend'],['extend']
Modifiability,"Hi,. I'm using MMseqs2 for all-vs-all alignments. As indicated in the user guide pdf, I'm using the bash script to perform a fake prefiltering step before aligning. That seems to work, as all alignments are computed, but the results are a bit unexpected:; ```; >Q8CD91; EERVVHWYFKLLDKNSSGDIGKKEIKPFKRFLRKKSKPKKCVKKFVEYCDMNNDKSITVQELMGCLGVTREEGKANTRKRHTPRGNAESSSSNRQPRKQG; >Q95JC9; GPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPPPGPSPPRPPPGPPPQ; ```; I didn't change much of the defaults; ```; mmseqs createdb --dbtype 1 dummyfasta.fasta seq_db; mmseqs_fake_prefilter.sh seq_db seq_db pref; mmseqs align seq_db seq_db pref align_db --alignment-mode 3 -e inf --min-seq-id 0.3; mmseqs convertalis seq_db seq_db align_db check_alignments.tab; ```. ```; query target fident alnlen mismatch gapopen qstart qend tstart tend evalue bits; Q8CD91 Q8CD91 1.000 100 0 0 1 100 1 100 1.707E-71 202; Q8CD91 Q95JC9 1.000 2 0 0 83 84 91 92 4.610E+01 9; Q95JC9 Q95JC9 1.000 100 0 0 1 100 1 100 7.088E-35 108; Q95JC9 Q8CD91 0.333 3 1 0 11 13 21 23 1.508E+02 7; ```; The second alignment's `fident` makes no sense to me. I understand that the e-value is high too, but I really want all pairwise % identities returned so I don't use it for filtering. Do I need to use a different configuration to make this work, or is mmseqs2 just not suitable for this all-vs-all identity task?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/498:1297,config,configuration,1297,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/498,1,['config'],['configuration']
Modifiability,"Hi,. This is more of an enhancement rather than an issue needing fixing, but it would be very helpful for newer users. ## Expected Behavior; I am using mmseq to search for short sequences against some reference database; In Blast, I just need to use -task ""blastn-short"", and it sets default params for me, and I can go explore from there.; I would like there to be a single flag like that in mmseqs, so that quick short sequence searches are possible. ## Current Behavior; Currently I need to set several options that I needed to discover manually, experimentally, because I could not find an easy pattern in docs. If I run mmseqs with default params, I get no results at all. It required me to set up a small project just to discover params that work for my sequence lengths, just to set up a baseline I can then work my way from. For example one of params setups I use: --spaced-kmer-mode 0 -k 8 -e 10. But this is for my case, the flag should probably check several things about input variables before deciding how to run the search. ## Environment; * MMseqs Version: fa4cd2a7ab15a2636b5c1615859a2491d6888300; * CPU: i7; * Operating system and version: Ubuntu 20.04.2 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/451:24,enhance,enhancement,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/451,2,"['enhance', 'variab']","['enhancement', 'variables']"
Modifiability,"Hi,; I was trying to generate the index files of a huge database. To be precise the nr database from blast. It creates the database without problems but when I run the createindex module mmseqs2, it stops with the error. Could not allocate entries memory in IndexTable::initMemory. I'm aware that this is not a bug but the computer I'm trying to run it on runs out of memory. It processes all sequences though and stops right at the end when the index files should have been written. . I still can search the resulting database, its just indexing the database on the fly. The computer has 64 Gb of memory, which is used in the process to 94% before swap is used. Now my question. ; Is there anything I can do, except of extending the hardware to make this work? ; In future I would set the -s parameter to 8 as this gives about the same sensitivity as blast?; Would this further increase the memory usage?. Thank you in advance. Christoph. ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Could not allocate entries memory in IndexTable::initMemory. ## Context; createindex module fails . ## Your Environment; 64 bit latest debian linux ; 24 cpus; 64 gb of RAM; latest git hub version self compiled with cmake.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/49:720,extend,extending,720,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/49,1,['extend'],['extending']
Modifiability,"Hi. I have a question on outputting custom column headers. This [wiki page](https://github.com/soedinglab/mmseqs2/wiki#custom-alignment-format-with-convertalis) states: ; `Column headers can be added to the output with --format-mode 4`. I am using MMseqs2 Version: 13.45111 - when looking at the help text on command line, there does not seem to be a `--format-mode 4` available. Am I missing something?. More importantly: how can I generate column headers?. Thanks in advance. ```; mmseqs convertalis -h; usage: mmseqs convertalis <i:queryDb> <i:targetDb> <i:alignmentDB> <o:alignmentFile> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: align:; --gap-open TWIN Gap open cost [nucl:5,aa:11]; --gap-extend TWIN Gap extension cost [nucl:2,aa:1]; misc:; --format-mode INT Output format: 0: BLAST-TAB, 1: SAM, 2: BLAST-TAB + query/db length, 3: Pretty HTML [0]; --format-output STR Choose comma separated list of output columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen; tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov; qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]. ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/572:723,extend,extend,723,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/572,1,['extend'],['extend']
Modifiability,"Hi; this is not an issue but a potential enhancement we discussed with @martin-steinegger.; We have a seed clustering database that is continuously updated with new sequences. The size of the DB is growing quite fast, and eventually, we will have problems storing and distributing it. As we have many redundant sequences in each cluster. We thought that having a module that takes a DB and then filters it based on a criterion similar to `--diff` from `result2msa` or `result2profile` would be very useful to keep only informative sequences in the clusters. Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/316:41,enhance,enhancement,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316,1,['enhance'],['enhancement']
Modifiability,"I am trying to rewrite github.com/oxpig/anarci to use mmseqs and rust, but I am having some trouble with the converting HMM to mmseqs2 db part. I tried to generate the profile using ffindex_build and from the raw stockholm file, but using both paths at convertprofiledb I get a segmentation fault. ## Expected. Given this alpaca_H.stockholm file: ; ```stockholm; # STOCKHOLM 1.0; #=GF ID alpaca_H; Vicugna_pacos_IGHV3-1*01_IGHJ4*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------YDYWGQGTQVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ7*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------MDYWGKGTLVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ3*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------LDAWGQGTLVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ2*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------LEVWGQGTLVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ6*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------FGSWGQGTQVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ5*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------FEYWGQGTLVTVS-; Vicugna_pacos_IGHV3-3*01_IGHJ4*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNSLKPEDTAVYYCAA--------YDYWGQGTQVTVSS; Vicugna_pacos_IGHV3-3*01_IGHJ7*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNSLKPEDTAVYYCAA--------MDYWGKGTLVTVSS; Vicugna_pacos_IGHV3-3*01_IGHJ3*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNSLKPEDTAVYYCAA--------LDAWGQGTLVTVSS; Vicugna_pacos_IGHV3-3*01_IGHJ2*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/741:15,rewrite,rewrite,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/741,1,['rewrite'],['rewrite']
Modifiability,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:147,extend,extended,147,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['extend'],['extended']
Modifiability,"I'm examining the efficiency of template retrieval using different MMseqs2 configurations for MSA generation, which is crucial for identifying templates via hhsearch. Notably, the **ColabFold MMseqs2 detailed version** involves complex steps like search, expansion, alignment, and filtering, offering high accuracy but with significant time investment. On the other hand, the **MMseqs2 easy search version** simplifies the process, potentially reducing time but at a possible cost to accuracy. Given that my project processes a large volume of PDB chains (around 400k), understanding the trade-offs between these methods is essential. Key inquiries:; **Does the difference in MSA quality between the two MMseqs2 versions significantly affect template identification accuracy?; How can I optimize the MMseqs2 template search to balance efficiency and precision effectively?**; I appreciate any insights or experiences with these tools. <Colabfold mmseqs2>; `def mmseqs_search_monomer(; dbbase: Path,; base: Path,; uniref_db: Path = Path(""uniref30_2202_db""),; template_db: Path = Path(""""), # Unused by default; metagenomic_db: Path = Path(""colabfold_envdb_202108_db""),; mmseqs: Path = Path(""mmseqs""),; use_env: bool = True,; use_templates: bool = False,; filter: bool = True,; expand_eval: float = math.inf,; align_eval: int = 10,; diff: int = 3000,; qsc: float = -20.0,; max_accept: int = 1000000,; prefilter_mode: int = 0,; s: float = 8,; db_load_mode: int = 2,; threads: int = 32,; ):; #Run mmseqs with a local colabfold database set; #; #db1: uniprot db (UniRef30); #db2: Template (unused by default); #db3: metagenomic db (colabfold_envdb_202108 or bfd_mgy_colabfold, the former is preferred); ; uniref_db = Path(""/store/colabfold/db/uniref30_2202_db""); template_db = Path(""/store/colabfold/db/pdb70_220313""); if filter:; # 0.1 was not used in benchmarks due to POSIX shell bug in line above; # EXPAND_EVAL=0.1; align_eval = 10; qsc = 0.8; max_accept = 100000. used_dbs = [uniref_db]; if use_templa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:75,config,configurations,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['config'],['configurations']
Modifiability,"I've been using KOFAMSCAN but it takes forever because it writes a LOT of intermediate files. . I tried making a custom version but the cutoff logic was confusing and it's in a language I'm not familiar with. If you're taking requests, would you consider configuring a KOFAM database?. Also, unrelated question but is there a guide to tuning the MMSEQS parameters for Pfam that most similarly match the Hmmer results? I'd like to replace hmmer with mmseqs in my workflows.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/771:255,config,configuring,255,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/771,1,['config'],['configuring']
Modifiability,"Is there documentation of the spec for SAM format used by `mmseqs`? I have aligned a bunch of protein sequences (both query and target are proteins) that resulted in >7.5M alignments and ; * all of them have 16 in column 2. What does this mean? ; * what is the sequence shown in column 10? Is it that of the target or the query? ; * given the target and query sequences, and the SAM file, is there a way to produce the alignment? I see the start coordinate for the target in column 4, and using the information in the CIGAR string it is feasible to come up with the aligned region of the target sequence (or query, based on the answer to the previous question) but what about the query (or target)? ; * is it possible to include the `MD:Z:` tag and/or the extended CIGAR format to include exact mismatch information? . I am using MMseqs2 Version: 14.7e284 and would be happy to provide example alignments, if needed.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/711:756,extend,extended,756,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/711,1,['extend'],['extended']
Modifiability,"MMseqs2 Version: GITDIR-NOTFOUND; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search 	Sensitive homology search; easy-cluster 	Slower, sensitive clustering; easy-linclust 	Fast linear time cluster, less sensitive clustering; easy-taxonomy 	Taxonomic classification; easy-rbh 	Find reciprocal best hit. Main workflows for database input/output; search 	Sensitive homology search; map 	Map nearly identical sequences; rbh 	Reciprocal best hit search; linclust 	Fast, less sensitive clustering; cluster 	Slower, sensitive clustering; clusterupdate 	Update previous clustering with new sequences; taxonomy 	Taxonomic classification. Input database creation; databases 	List and download databases; createdb 	Convert FASTA/Q file(s) to a sequence DB; createindex 	Store precomputed index on disk to reduce search overhead; convertmsa 	Convert Stockholm/PFAM MSA file to a MSA DB; msa2profile 	Convert a MSA DB to a profile DB. Format conversion for downstream processing; convertalis 	Convert alignment DB to BLAST-tab, SAM or custom format; createtsv 	Convert result DB to tab-separated flat file; convert2fasta 	Convert sequence DB to FASTA format; taxonomyreport 	Create a taxonomy report in Kraken or Krona format. An extended list of all modules can be obtained by calling 'mmseqs -h'. Bash completion for modules and parameters can be installed by adding ""source MMSEQS_HOME/util/bash-completion.sh"" to your ""$HOME/.bash_profile"".; Include the location of the MMseqs2 binary in your ""$PATH"" environment variable.; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; $ which mmseqs; ~/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build/bin/mmseqs; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; MACOS 15",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:5897,extend,extended,5897,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,2,"['extend', 'variab']","['extended', 'variable']"
Modifiability,NEWMAPDB variable missing in updatecluster,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103:9,variab,variable,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103,1,['variab'],['variable']
Modifiability,"[WIP] Add tutorial as notebook, and configure Binder",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/250:36,config,configure,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250,1,['config'],['configure']
Modifiability,"_0: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 5ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; mmseqs-web-worker_1 | [=================================================================] 1 0s 2ms; mmseqs-web-worker_1 | Time for merging to aln: 0h 0m 0s 0ms; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.000000 hits per query sequence.; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 37ms; mmseqs-web-worker_1 | Remove temporary files; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:25254,extend,extend,25254,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['extend'],['extend']
Modifiability,"abase cannot be combined with --createdb-mode 0; We recompute with --shuffle 0. Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 4m 46s 360ms; Create directory All_cohort_tmp//9948387321092861199/clu_tmp; linclust All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/clu_tmp --cluster-mode 2 --threads 56 -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --max-seq-len 10000 --spaced-kmer-mode 0 --remove-tmp-files 1 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by rep. sequence 0h 0m 39s 418ms; Time for fill: 0h 2m 31s 613ms; Time for merging to pref: 0h 0m 0s 1ms; Time for p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:4324,extend,extendable,4324,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['extend'],['extendable']
Modifiability,"all50.mm.db experiments/tmp/ --min-seq-id 0.5; linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5 . MMseqs Version: 	02be0c4ea6183fce9cf45521a8c145d10f3928c1; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Threads 	12; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:4057,extend,extendable,4057,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['extend'],['extendable']
Modifiability,"atches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 /tmp/15358673946673749737/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:5398,extend,extend,5398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['extend'],['extend']
Modifiability,"bstitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:6048,extend,extendable,6048,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['extend'],['extendable']
Modifiability,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1396,config,configuration,1396,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['config'],['configuration']
Modifiability,"ca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:4034,extend,extendable,4034,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['extend'],['extendable']
Modifiability,"ck_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/; total 506G; -rwx------ 1 dportik Domain Users 4.0K Mar 9 20:15 blastp.sh; -rw-r--r-- 1 dportik Domain Users 8.4G Mar 10 02:59 pref_0.0; -rw-r--r-- 1 dportik Domain Users 7.9G Mar 10 02:59 pref_0.1; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 03:00 pref_0.10; -rw-r--r-- 1 dportik Domain Users 9.0G Mar 10 03:00 pref_0.11; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 02:59 pref",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:36116,config,config,36116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['config'],['config']
Modifiability,"context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:10928,extend,extendable,10928,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extendable']
Modifiability,"ct-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:2245,extend,extend,2245,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['extend'],['extend']
Modifiability,"d not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : 1; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.5.11; conda-build version : 3.11.0; python version : 3.6.5.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://repo.anaconda.com/pkgs/pro/linux-64; https://repo.anaconda.com/pkgs/pro/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:6010,config,config,6010,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['config'],['config']
Modifiability,"d to both the master and slave nodes. . ## MMseqs Output (for bugs); ```; Program call:; /mnt/DB /mnt/clu /mnt/tmp . MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 20; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638123540538/clu_redundancy /mnt/tmp/4359821638123540538/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 2 -; -sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:1794,extend,extendable,1794,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['extend'],['extendable']
Modifiability,"dancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:10371,extend,extendable,10371,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extendable']
Modifiability,"db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 34ms; Time for merging to aln: 0h 0m 0s 2ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 142ms; clust clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 8ms; Sort entries; Find missing connections; F",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:25125,extend,extend,25125,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extend']
Modifiability,"de 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.4; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb all_seq.fasta tmp/8115150149931881526/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [Multiline fasta can not be combined with --createdb-mode 0; We recompute with --createdb-mode 1; Time for merging to input_h: 0h 0m 0s 3ms; Time for merging to input: 0h 0m 0s 3ms; [=======; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 102ms; Create directory tmp/8115150149931881526/clu_tmp; linclust tmp/8115150",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:1627,extend,extendable,1627,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['extend'],['extendable']
Modifiability,"dl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/; total 506G; -rwx------ 1 dportik Domain Users 4.0K Mar 9 20:15 blastp.sh; -rw-r--r-- 1 dportik Domain Users 8.4G Mar 10 02:59 pref_0.0; -rw-r--r-- 1 dp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:35889,config,config,35889,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['config'],['config']
Modifiability,"e 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:3241,extend,extend,3241,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['extend'],['extend']
Modifiability,"e aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 144; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; /final/db_profile_vs_consensus/low_1/Genus02938/Genus02938_DB.dbtype exists already!; ```. Yes, `/final/db_profile_vs_consensus/low_1/Genus02938/Genus02938_DB.dbtype` already exists; it was created by `mmseqs search`. I'm not sure why `mmseqs clust` cares? Do you have any ideas - I can't figure this out. Many thanks!!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/844:2632,extend,extendable,2632,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/844,1,['extend'],['extendable']
Modifiability,"e multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment datab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2939,extend,extendable,2939,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['extend'],['extendable']
Modifiability,"e same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1258,config,configuration,1258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['config'],['configuration']
Modifiability,"e temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:19024,extend,extend,19024,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extend']
Modifiability,"e-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:4375,extend,extendable,4375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['extend'],['extendable']
Modifiability,"e-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 7m 46s 594ms; rescorediagonal uniref90-DB-wwmj uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref tmp//16518381706844811497/linclust/11898236; 85496030198/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov; -mode 2 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=======",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:5358,extend,extendable,5358,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['extend'],['extendable']
Modifiability,"e; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 802ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 6712 type: Aminoacid; Target database size: 6712 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 6.71K 0s 264ms ; Time for merging to aln_step1: 0h 0m 0s 1ms; 13873 alignments calculated; 8509 sequence pairs passed the thresholds (0.613350 of overall calculated); 1.267729 hits per query sequence; Time for processing: 0h 0m 0s 270ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 6.71K 0s 8ms ; Sort entries; Find missi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:23845,extend,extend,23845,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extend']
Modifiability,"e; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 1; linclust uniref90-DB-wwmj tmp//16518381706844811497/clu_redundancy tmp//16518381706844811497/linclust --cluster-mode 3 --max-iterations 1000 --similarity; -type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignme; nt-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp; -bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:4014,extend,extend,4014,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['extend'],['extend']
Modifiability,"e; join to DB ; Compute Positions ; Replace transitively . Filtering with a filter files.; ..............................................Time for merging files: 0h 0m 0s 668ms; Time for processing: 0h 0m 2s 11ms; Program call:; align contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/52586018941986723; 32/input_step_redundancy contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref_filter2 contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601; 894198672332/aln --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.99 --seq-id-mode 0 --alt-ali 0 -c 0.6 --cov-mode 1 --max-seq-len 65535 --max-seqs 2147483647 --comp-bias-corr 0 --realign; 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 -v 3 . MMseqs Version: 7.4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0.99; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.6; Coverage Mode 1; Max. sequence length 65535; Max. results per query 2147483647; Compositional bias 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 128; Verbosity 3. Init data structures...; Compute score, coverage and sequence id.; Touch data file contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy ... Done.; Query database type: Nucleotide; Target database type: Nucleotide; **Calculation of Smith-Waterman alignments.; .contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/linclust.sh: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/632:5834,extend,extend,5834,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632,1,['extend'],['extend']
Modifiability,"eads 24; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.8; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb /hps/nobackup/iqbal/dander/amira_panRG_pipeline/Escherichia_coli_panRG_c_0.8_l_0_train_AMR_alleles_removed_mmseqs2/all_sequences.fasta tmp/3198441352783276465/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [95951] 0s 927ms; Time for merging to input_h: 0h 0m 0s 47ms; Time for merging to input: 0h 0m 0s 25ms; Database type: Nucleotide; Time for processing: 0h 0m 1s 143ms; Create directory tmp/3198441352783276465/clu_tmp; cluster tmp/3198441352783276465/input tmp/3198441352783276465/clu tmp/3198441352783276465/clu_tmp --max-seqs 20 -c 0 --cov-mode 5 --spaced-kmer-mode 1 --threads 24 --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --cluster-mode 1 --cluster-reassign 1 --remove-tmp-files 1 . Set cluster sensitivity",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:3127,extend,extendable,3127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['extend'],['extendable']
Modifiability,"eb-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | rmdb /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/aln_merge -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | convertalis /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/alis_pdb_protein_sequence --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 0 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 1ms; docker-compose-mmseqs-web-worker-1 | Time for merging to alis_pdb_protein_sequence: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 3ms; docker-compose-mmseqs-web-worker",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:8587,extend,extend,8587,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['extend'],['extend']
Modifiability,"ed newer image for soedinglab/mmseqs2-app-frontend:version-5; Creating docker-compose_mmseqs-web-redis_1 ... ; Creating docker-compose_mmseqs-web-redis_1 ... done; Creating docker-compose_mmseqs-web-api_1 ... ; Creating docker-compose_mmseqs-web-api_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... done; Attaching to docker-compose_mmseqs-web-redis_1, docker-compose_mmseqs-web-api_1, docker-compose_mmseqs-web-worker_1, docker-compose_mmseqs-web-webserver_1; mmseqs-web-api_1 | 2022/09/22 16:09:10 MMseqs2 Webserver; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Redis version=7.0.4, bits=64, commit=00000000, modified=0, pid=1, just started; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.002 * monotonic clock: POSIX clock_gettime; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Running mode=standalone, port=6379.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # Server initialized; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Ready to accept connections; mmseqs-web-worker_1 | 2022/09/22 16:09:10 MMseqs2 worker; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/databases/pdb_rna_sequence.fasta /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version: 	e1a1c1226e",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:9508,config,config,9508,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,2,['config'],['config']
Modifiability,"efiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; Time for processing: 0h 0m 11s 757ms; align IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 tmp/16138406286044646862/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:6174,extend,extend,6174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['extend'],['extend']
Modifiability,"eotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 278.90K 0s 550ms. Reading results.; [=================================================================] 278.90K 1s 198ms. Output database: /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap; [=================================================================] 69.22K 3s 47ms. Time for merging to aln_swap: 0h 0m 0s 21ms; Time for processing: 0h 0m 10s 409ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln -v 3 . Time for processing: 0h 0m 0s 938ms; mvdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 107ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:7133,extend,extend,7133,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['extend'],['extend']
Modifiability,"ep 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a search against Uniref100. ## Your Environment. IBM SR650 ServerIntel Xeon Silver 4216, 2 CPUs, 2.1Ghz, 64 threads - 1TB DDR4 2933mhz RDIMM - HDD 12TB SAS. Titan X 3584 CUDA core, 12 GB GDDR5X, 480 GB/sec, 11 Tflops.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:5494,extend,extend,5494,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['extend'],['extend']
Modifiability,"er mode GREEDY MEM.; kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 77.30K 0s 41ms; Sort kmer 0h 0m 0s 46ms; Sort by rep. sequence 0h 0m 0s 22ms; Time for fill: 0h 0m 0s 11ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 225ms; rescorediagonal tmp/8115150149931881526/input tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [====",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:3787,extend,extendable,3787,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['extend'],['extendable']
Modifiability,"eshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Prog",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:6489,extend,extendable,6489,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['extend'],['extendable']
Modifiability,"files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediagonal 1831648_seqs.mmseqs2db 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 1.83M 10s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:4600,extend,extendable,4600,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['extend'],['extendable']
Modifiability,"filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:5279,extend,extendable,5279,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['extend'],['extendable']
Modifiability,forge; libcurl 7.64.1 hda55be3_0 conda-forge; libdeflate 1.0 h14c3975_1 bioconda; libedit 3.1.20170329 hf8c457e_1001 conda-forge; libgcc-ng 8.2.0 hdf63c60_1; libssh2 1.8.2 h22169c7_2 conda-forge; libstdcxx-ng 8.2.0 hdf63c60_1; llvm-openmp 8.0.0 hc9558a2_0 conda-forge; mmseqs2 8.fac81 hf3e9acd_1 bioconda; ncurses 6.1 hf484d3e_1002 conda-forge; openmp 8.0.0 0 conda-forge; openssl 1.1.1b h14c3975_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8571acd_11 bioconda; seqtk 1.3 h84994c4_1 bioconda; tk 8.6.9 h84994c4_1001 conda-forge; xz 5.2.4 h14c3975_1001 conda-forge; zlib 1.2.11 h14c3975_1004 conda-forge; ```. </p>; </details>. <details><summary>conda info</summary>; <p>. ```; active environment : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; active env location : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; shell level : 2; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.6.11; conda-build version : 3.11.0; python version : 3.6.7.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime2/linux-64; https://conda.anaconda.org/qiime2/noarch; package cache : /ebio/abt3_project,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188:1600,config,config,1600,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188,1,['config'],['config']
Modifiability,"g k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:4294,extend,extendable,4294,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['extend'],['extendable']
Modifiability,"g k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:3693,extend,extendable,3693,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"g produces less clusters in a single step clustering.; Please use --single-step-clusteringSet cluster iterations to 1; linclust tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/clu_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:5203,extend,extend,5203,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['extend'],['extend']
Modifiability,gap-open and gap-extend not taking effect,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201:17,extend,extend,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201,1,['extend'],['extend']
Modifiability,"ging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu /export/scratch/SRC-50/8871099322051866948/clu_tmp --cluster-mode 2 -e 0.001 --min-seq-id 0.5 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --split-memory-limit 500G --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [==========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:3603,extend,extendable,3603,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['extend'],['extendable']
Modifiability,"h 0m 0s 177ms; Time for processing: 0h 0m 0s 855ms; filterdb tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/pref_filter --filter-file tmp/2730103712073724212/search/reverse_ungapaln --positive-filter 0 . Filtering with filter files.; [=================================================================] 323 0s 12ms; Time for merging into tmp/2730103712073724212/search/pref_filter by mergeResults: 0h 0m 0s 171ms; Time for processing: 0h 0m 0s 397ms; align /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref_filter tmp/2730103712073724212/search/reverse_aln --sub-mat nucl:nucleotide.out,aa:blos; um62.out -a 0 --alignment-mode 2 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2; 147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Compute score and coverage; Query database size: 561568 type: Aminoacid; Target database size: 14926 type: Aminoacid; Calculation of alignments; [=================================================================] 323 0s 62ms; Time for merging into tmp/2730103712073724212/search/reverse_aln by mergeResults: 0h 0m 0s 109ms. 335 alignments calculated.; 323 sequence pairs passed the thresholds (0.964179 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 427ms; swapresults /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing offse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:4961,extend,extend,4961,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['extend'],['extend']
Modifiability,"h 0m 0s 1ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 2ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/search/pref_0 /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/aln --sub-mat blosum62.out -a 1 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; [=================================================================] 100.00% 0.02 0s 0ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.000000 hits per query sequence.; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 49ms; mmseqs-web-worker_1 | offsetalignment /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:9577,extend,extend,9577,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['extend'],['extend']
Modifiability,"hift hash 67; Include only extendable false; Skip repeating k-mers false. Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterlinclust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:n",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:10112,extend,extend,10112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extend']
Modifiability,"hort seq. needs to be at least x% of the other seq. length [0]; --max-rejected INT Maximum rejected alignments before alignment calculation for a query is stopped [2147483647]; --max-accept INT Maximum accepted alignments before alignment calculation for a query is stopped [2147483647]; --score-bias FLOAT Score bias when computing SW alignment (in bits) [0.000]; --realign BOOL Compute more conservative, shorter alignments (scores and E-values not changed) [0]; --realign-score-bias FLOAT Additional bias when computing realignment [-0.200]; --realign-max-seqs INT Maximum number of results to return in realignment [2147483647]; --corr-score-weight FLOAT Weight of backtrace correlation score that is added to the alignment score [0.000]; --gap-open TWIN Gap open cost [aa:11,nucl:5]; --gap-extend TWIN Gap extension cost [aa:1,nucl:2]; --zdrop INT Maximal allowed difference between score values before alignment is truncated (nucleotide alignment only) [40]; clust:; --cluster-mode INT 0: Set-Cover (greedy); 1: Connected component (BLASTclust); 2,3: Greedy clustering by sequence length (CDHIT) [0]; --max-iterations INT Maximum depth of breadth first search in connected component clustering [1000]; --similarity-type INT Type of score used for clustering. 1: alignment score 2: sequence identity [2]; kmermatcher:; --kmer-per-seq INT k-mers per sequence [21]; --kmer-per-seq-scale TWIN Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [aa:0.000,nucl:0.200]; --adjust-kmer-len BOOL Adjust k-mer length based on specificity (only for nucleotides) [0]; --hash-shift INT Shift k-mer hash initialization [67]; --include-only-extendable BOOL Include only extendable [0]; --ignore-multi-kmer BOOL Skip k-mers occurring multiple times (>=2) [0]; profile:; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignmen",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:4029,extend,extend,4029,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,1,['extend'],['extend']
Modifiability,"ilter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 12ms; Time for processing: 0h 0m 0s 36ms; filterdb tmp/16437734971973434362/pref_filter1 tmp/16437734971973434362/pref_filter2 --filter-file tmp/16437734971973434362/order_redundancy. Filtering using file(s); [=================================================================] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem like a memory problem. I tried with the easy-clust workflow and the cluster module, both of which fail at the same point.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:4338,extend,extend,4338,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['extend'],['extend']
Modifiability,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:5745,Config,Configuring,5745,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,1,['Config'],['Configuring']
