quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,ResFinder download fails with fasta entry invalid,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/622:10,down,download,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/622,1,['down'],['download']
Availability,"Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:2389,mask,mask,2389,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,1,['mask'],['mask']
Availability,Resfinder download fails,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/494:10,down,download,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494,1,['down'],['download']
Availability,Run it with an already downloaded BLAST database,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/395:23,down,downloaded,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/395,1,['down'],['downloaded']
Availability,"Running easy-cluster pipeline on a fasta file of protein sequences. Getting 575 messages saying ""Cannot extract identifier from entry nnnnn"" out of 37k input proteins. ; Is this an error or just a warning? ; Are those proteins being clustered or ignored? ; How can I figure out which proteins in my input file are causing the problem so I can fix it? ; Is there a description of the required fasta header format for proper identifier extraction in the manual (I didn't see it)?. Ubuntu 20.04; mmseqs2 v 13.45111. Thanks,; Bill",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/804:181,error,error,181,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/804,1,['error'],['error']
Availability,"S/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile e-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false; LCA ranks; Taxon blacklist 12908,28384; Show taxonomic lineage false; LCA mode 4; Taxonomy output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:2650,Mask,Mask,2650,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,2,['Mask'],['Mask']
Availability,"SIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:2914,Down,Downloads,2914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,Same error as https://github.com/soedinglab/MMseqs2/issues/181,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/180#issuecomment-477696768:5,error,error,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/180#issuecomment-477696768,1,['error'],['error']
Availability,"Same error on clustering protein sequences with `easy-cluster`, command I used: ; ```bash; mmseqs easy-cluster raw/proteins.faa.gz processed/proteins.id50.c90 tmp \; -c 0.9 --min-seq-id 0.5 --threads 16 --cluster-reassign; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-2036788882:5,error,error,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-2036788882,1,['error'],['error']
Availability,Same error. Hope it will be fixed.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-1879609708:5,error,error,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-1879609708,1,['error'],['error']
Availability,"Same here, has tracked it down to this command:. mmseqs tar2db /localscratch/users/latest/gtdb.tar.gz /localscratch/users/latest/tardb --tar-include faa$. The problem comes with the regular expresion used in the option --tar-include, I cannot find why, but if you set it with the $ at the end, it doesn't works. If you remove it it works but obviously it is going to accept more files than desired. . I have tried with different regular expressions, scaping the $, quoting it, etc... no one works, it seems like the tar2db is silently failing when you use there any regular expression, but works when you use a simple string.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120775763:26,down,down,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120775763,2,['down'],['down']
Availability,Search error with iterations,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/79:7,error,error,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79,1,['error'],['error']
Availability,Search with Error: Alignment died,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:12,Error,Error,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['Error'],['Error']
Availability,"See reference to older, closed issue. Was this bug actually fixed, aside from the way you use the command? I still get the same error when using --cluster-reassign:. _Originally posted by @s-devos in https://github.com/soedinglab/MMseqs2/issues/329#issuecomment-771475381_. Input:; ` mmseqs cluster DB_in DB_clustered tmp/ --cluster-reassign --cluster-mode 1 --cov-mode 0` . Error:; `Found 100 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; Error: Clustering step 2 died`. Further inspection shows that --clustering-reassign gives problems with whichever cascaded clustering option used; it only works together with --single-step-clustering, which isn't very useful",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400:128,error,error,128,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400,3,"['Error', 'error']","['Error', 'error']"
Availability,Segmentation Fault,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/187:13,Fault,Fault,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187,1,['Fault'],['Fault']
Availability,Segmentation Fault in result2profile during search,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:13,Fault,Fault,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['Fault'],['Fault']
Availability,Segmentation Fault when using --cluster-reassign,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/415:13,Fault,Fault,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415,1,['Fault'],['Fault']
Availability,Segmentation fault (Error: Alignment died) on ColabFold envdb when sequence length is less than 12 aa long,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:13,fault,fault,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,2,"['Error', 'fault']","['Error', 'fault']"
Availability,Segmentation fault Error: Prefilter died Error: Search step died,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/234:13,fault,fault,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234,3,"['Error', 'fault']","['Error', 'fault']"
Availability,Segmentation fault during prefiltering,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:13,fault,fault,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['fault'],['fault']
Availability,Segmentation fault in linclust,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:13,fault,fault,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['fault'],['fault']
Availability,Segmentation fault mmseqs2 taxonomy,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438:13,fault,fault,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438,1,['fault'],['fault']
Availability,Segmentation fault on mmseq taxonomy,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/212:13,fault,fault,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212,1,['fault'],['fault']
Availability,Segmentation fault when clustering MERC using easy-linclust,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:13,fault,fault,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['fault'],['fault']
Availability,Segmentation fault when running convertalis with -qaln -- alignment is walking off the end,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/863:13,fault,fault,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/863,1,['fault'],['fault']
Availability,Segmentation fault with mmseqs align for linclust results,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/462:13,fault,fault,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/462,1,['fault'],['fault']
Availability,Segmentation fault with results2msa on nucleotide database (cluster),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/282:13,fault,fault,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/282,1,['fault'],['fault']
Availability,Segmentation fault: 11 when run mmseqs result2msa,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/724:13,fault,fault,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/724,1,['fault'],['fault']
Availability,"Sep 2022 16:09:10.003 * Ready to accept connections; mmseqs-web-worker_1 | 2022/09/22 16:09:10 MMseqs2 worker; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/databases/pdb_rna_sequence.fasta /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version: 	e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Converting sequences; mmseqs-web-worker_1 | [=; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence_h: 0h 0m 0s 12ms; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence: 0h 0m 0s 9ms; mmseqs-web-worker_1 | Database type: Aminoacid; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence.lookup: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 60ms; mmseqs-web-worker_1 | indexdb /opt/mmseqs-web/databases/pdb_rna_sequence /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 1023M; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=================================================================] 10.79K 0s 918ms; mmseqs-web-worker_1 | Index table: Masked residues: 4422171; mmseqs-web-worker_1 | Index table: fil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:11228,mask,mask,11228,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (4160 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > Time for fill: 0 h 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Time for processing: 0 h 0 m 0s; > Rescore diagonals. However, I get the following error when there are some identical sequences:. > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (3200 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > ~/tmp/2230240821590219627/linclust/10911929691229894817/linclust.sh: line 18: 28296 Segmentation fault (core dumped) $MMSEQS kmermatcher ""$INPUT"" ""$3/pref"" ${KMERMATCHER_PAR}; > Rescore diagonals. Has anyone seen this before? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282:1277,Mask,Mask,1277,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282,2,"['Mask', 'fault']","['Mask', 'fault']"
Availability,"Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	mpirun -pernode -np 8; Force restart with latest tmp 	false; Remove temporary files 	false. MPI Init; Rank: 0 Size: 8; prefilter human_prot.db /lustre/projects/carlson-group/mmseqs2-project/DBs/UniRef50 ./tmp/4797566427929930176/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:4239,mask,mask-lower-case,4239,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['mask'],['mask-lower-case']
Availability,Should be fixed now. Statically built binaries with the fix will be available at http://mmseqs.com/latest/ in about an hour. We will also make a new release in the next few weeks.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/379#issuecomment-735712461:68,avail,available,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379#issuecomment-735712461,1,['avail'],['available']
Availability,"Since cluster module needs too much memory. (I have 2 million nucleotide seqs, about 30G, and 1T memory, and segment fault occurred). I try to use LINCLUST instead. But I also want a better performance of clustering. I try to increase the --kmer-per-seq, the number of clusters decreased until about --kmer-per-seq 2000 (My shortest sequences are 2000bp). I think this may indicate that the clustering performance has improved. I compared results in a 3G test dataset, between ""Linclust --kmer-per-seq 2000"" and ""Cluster""， the number of cluster produced by former is relatively closed to the latter. . But I still wonder if it make sense to set --kmer-per-seq 2000, since the default is only 20.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/831:117,fault,fault,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831,1,['fault'],['fault']
Availability,So far so good. The program is running smoothly and the kmermatcher step is ended without errors. . ```; kmermatcher data/02_geneclust/plass_assembly_noclust /mnt/lustre/scratch/aauladell/9518450204626139512/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.95 --kmer-per-seq 21 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-m; ode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 48 --compressed 0 -v 3. Database size: 823952135 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 263893 MB; Generate k-mers list for 1 split; [=================================================================] 823.95M 37m 20s 931ms; Sort kmer 0h 11m 29s 726ms; Sort by rep. sequence 0h 2m 46s 392ms; Time for fill: 0h 3m 48s 1ms; Time for merging files: 0h 4m 55s 350ms; Time for processing: 1h 13m 27s 843ms; ```. Thanks!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-499063090:90,error,errors,90,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-499063090,3,"['error', 'mask']","['errors', 'mask', 'mask-lower-case']"
Availability,"So i fixed this error (https://github.com/soedinglab/MMseqs2/commit/d9744e3c28dadd2cc8c03c8c5c8179400d8fb55a + https://github.com/soedinglab/MMseqs2/commit/852f04de365a377b0d24b8382b51c281933d8250). I ran the regression test and there are a lot of failures. I guess some are related to https://github.com/soedinglab/MMseqs2/issues/253 as nucleotide 13-mers (or even worse by default 15-mers) require more than 4GB RAM. But other failures are way worse:; The sensitivity changes slightly in many tests, meaning 32-bit MMseqs2 produces different than 64-bit MMseqs2. This is pretty bad and would require to go through every module invocation separately to track where differences first happen and then find the root cause. This would be very time consuming and for an architecture where you can barely search against any realistically sized database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748:16,error,error,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748,3,"['error', 'failure']","['error', 'failures']"
Availability,"So pretty sure I know what's going on. Doing a tblastx style search against the NT results in over 4B fragments (slightly over 7B). MMseqs2 can search at most against 4B (UINT_MAX) fragments at a time. You could use the `--min-length` parameter to increase the minimum fragment length to cut down on the number of ORFs produced. By default it will extract fragments of at least 30 codons (30*3 nucleotides) long. Getting around this limitation is a longer term goal, that we haven't really decided how to tackle yet.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-802035102:292,down,down,292,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-802035102,1,['down'],['down']
Availability,Solved. Filesystem error.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/784#issuecomment-1828998769:19,error,error,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/784#issuecomment-1828998769,1,['error'],['error']
Availability,Some sequences in there are proprietary. But I can get some public sequences and recreate the error. Those I can send to you.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730411136:94,error,error,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730411136,1,['error'],['error']
Availability,"Somehow downloading trough `conda` always downloaded an old version of the package, using `wget` solved my problem! Thanks again for the help.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1480966168:8,down,downloading,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1480966168,2,['down'],"['downloaded', 'downloading']"
Availability,"Sorry I was traveling. I don't see anything out of the ordinary in your screenshot. ; I still don't really have an idea whats going on. I repeated the UniRef search with your query on the MSA server:; ```; Command being timed: ""mmseqs search mmseq_in_db uniref30_2202_db mmseq_in_res mmseq_in_tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000""; User time (seconds): 13.10; System time (seconds): 21.13; Percent of CPU this job got: 99%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:34.23; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 19188072; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 9091215; Voluntary context switches: 57; Involuntary context switches: 503; Swaps: 0; File system inputs: 0; File system outputs: 8888; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 0; ```. One thing we do differently since we still have enough spare CPU capacity on the server is enable some limited multithreading and parallel processing. We use `--threads 2`, which will hide quite a bit of overhead in your use-case:; ```; User time (seconds): 12.32; System time (seconds): 20.86; Percent of CPU this job got: 132%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.12; ```. And we also start the env-db and template search in parallel to the expand-align steps. ; (`path.colabfold.parallelstages` parameter in the API server). This will hide quite a bit of latency. However, the initial search is still a lot faster for us despite worse CPU/RAM specs. . Can you check if `vmtouch` has actually but everything into RAM? `htop` should look something like this:; ```; root 20 0 605G 605G 605G S 0.0 15.0 6:22.98 /home/steineggerlab/miniforge3/bin/vmtouch -f -t -l -m 4000 colabfold_envdb_202108.idx pd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953:779,fault,faults,779,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953,2,['fault'],['faults']
Availability,"Sorry for the confusion, I'll repeat from the start:. ```; # download PDB with Foldseek; foldseek databases PDB pdb tmp. #; # The command above will download and create many files (might not be exactly the same as listed here):; # pdb prefix:; # pdb, pdb.index, pdb.dbtype <- MMseqs2 DB; # pdb_h, pdb_h.index, pdb_h.dbtype <- MMseqs2 DB; # pdb_ss, pdb_ss.index, pdb_ss.dbtype <- Foldseek specific part; # pdb_ca, pdb_ca.index, pdb_ca.dbtype <- Foldseek specific part; #; # pdb_seq prefix:; # pdb_seq, pdb_seq.index, pdb_seq.dbtype <- MMseqs2 DB; # pdb_seq_h, pdb_seq_h.index, pdb_seq_h.dbtype <- MMseqs2 DB; # pdb_seq_ss, pdb_seq_ss.index, pdb_seq_ss.dbtype <- Foldseek specific; # pdb_seq_ca, pdb_seq_ca.index, pdb_seq_ca.dbtype <- Foldseek specific. # pdb prefix contains only cluster representatives; # pdb_seq prefix contains all entries, therefore use this one for MMseqs2 searches:; mmseqs easy-search query.fasta pdb_seq res.m8 tmp. ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2002540638:61,down,download,61,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2002540638,2,['down'],['download']
Availability,"Sorry for the delay, I am currently quite busy finishing another project. I can't reproduce your issue on our machines.; Since the prefilter call doesn't produce any output at all from mmseqs it looks like its crashing in `MMseqsMPI::init`. ```; void MMseqsMPI::init(int argc, const char **argv) {; #ifdef HAVE_MPI; MPI_Init(&argc, const_cast<char ***>(&argv));; MPI_Comm_rank(MPI_COMM_WORLD, &rank);; MPI_Comm_size(MPI_COMM_WORLD, &numProc);. active = true;. if(!isMaster()) {; Parameters& par = Parameters::getInstance();; par.verbosity = Debug::ERROR;; Debug::setDebugLevel(Debug::ERROR);; }. Debug(Debug::INFO) << ""MPI Init...\n"";; Debug(Debug::INFO) << ""Rank: "" << rank << "" Size: "" << numProc << ""\n"";; #endif; }; ```. This is how it looks like. Since we don't even see the ""MPI Init..."" string. It is probably crashing in `MPI_Init`, `MPI_Comm_rank`, or `MPI_Comm_size`. This points to a faulty OpenMPI installation. Can you run other MPI programs on your machine?. You can also contact me at milot [at] mirdita . de and we can try to debug the issue in a chat session with faster turnaround times. Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-311062480:548,ERROR,ERROR,548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-311062480,3,"['ERROR', 'fault']","['ERROR', 'faulty']"
Availability,"Sorry for the delay. I think the commit https://github.com/soedinglab/MMseqs2/commit/c5594768f9ea8070deeecc329e33d3a486bc95d7 should improve the situation. If no comment fields exist, the name of the first sequence will be chosen. I am not quite happy with the error, since it might be a pretty common use case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96#issuecomment-400233226:261,error,error,261,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96#issuecomment-400233226,1,['error'],['error']
Availability,Sorry for the delay. I was dealing with some private stuff :/. I would drop 32-bit support. Even with the patch it doesn't pass the integration tests and tracking down why would be very low priority as we require a >4GB address space for everything except small databases anyway.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505:163,down,down,163,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505,1,['down'],['down']
Availability,Sorry for the late answer. Milot and I have some deadlines approaching soon. . I could not reproduce the error. The error indicates that MMseqs2 tries to access an out of range offset in the data file `/tmp/global2/nyoungblut/LLMGAG_27929269397/clusters_rep-seqs_db_3_1`. Could you please check the size of this file? Is there any entry in the second column of `/tmp/global2/nyoungblut/LLMGAG_27929269397/clusters_rep-seqs_db_3_1.index` that is greater than the data file size?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-472642101:105,error,error,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-472642101,2,['error'],['error']
Availability,"Sorry for the late reply, . Currently the version of mmseqs I have is `MMseqs2 Version: 13.45111`. The messages I get for the functions are. ```; --msa-format-mode INT Format MSA as: 0: binary cA3M DB; 1: binary ca3m w. consensus DB; 2: aligned FASTA DB; 3: aligned FASTA w. header summary; 4: STOCKHOLM flat file [0]; ```; While for `mmseqs unpackdb` I have; ```; usage: mmseqs unpackdb <i:DB> <o:outDir> [options]; By Milot Mirdita <milot@mirdita.de>; options: common:; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; ```. Do you think that just updating the version will solve the problem? I downloaded the library using the suggested conda command of the github page.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471607391:510,error,errors,510,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471607391,2,"['down', 'error']","['downloaded', 'errors']"
Availability,"Sorry for the late reply. Using wrapped-scoring was originally only supported with `RESCORE_MODE_HAMMING` by now, it should work with all rescore modes, but the error message you have mentioned was unfortunately left in. At that point in the code, `rescorediagonal` is always called with `RESCORE_MODE_ALIGNMENT`, whereas linclust always calls rescorediagonal with `RESCORE_MODE_HAMMING`, which is why you did not see this issue using linclust. I have removed the error message now. Can you check again with the latest version (bfc6f85)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087:161,error,error,161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087,2,['error'],['error']
Availability,"Sorry if this isn't the right forum, but is there a reference database for determining the sensitivity to the first false positive as plotted here to compare the various `-s` and with other packages? . https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter . Or said another way, are the databases/code used for the plot available somewhere? I'm trying to validate another method and am hoping place it accurately/make a fair comparison with other the rest.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/296:338,avail,available,338,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/296,1,['avail'],['available']
Availability,"Sorry to send you too late. ; Would you check if you may download the data from [here](https://drive.google.com/open?id=1pqUXLM6MT1cQVyQkccNDecMRdwNA8Osi) . If you cannot, do you suggest any other place to upload it?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/230#issuecomment-538747139:57,down,download,57,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230#issuecomment-538747139,1,['down'],['download']
Availability,"Sorry, but the thing is that it is related to this specific issue. . When you download Uniref90 from the web (https://www.uniprot.org/downloads) the FASTA has the following name structure: . ```; >UniRef90_Q6GZX3 Uncharacterized protein 002L n=26 Tax=Ranavirus TaxID=10492 RepID=002L_FRG3G; MSIIGATRLQNDKSDTYSAGPCYAGGCSAFTPRGTCGKDWDLGEQTCASGFCTSQPLCAR; ```; Due to the `UniRef90` tag I didn't had a `_mapping` file generated. Finally after checking the files I was able to see what was happening, I removed the tag and everything worked out clean.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-540474108:78,down,download,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-540474108,2,['down'],"['download', 'downloads']"
Availability,"Sorry, didn't get around to look at this. Glad it works now. The ""intended"" way to do this, would have been to you the `databases` workflow to download and create the database. It has its own handling of uniref (and uniprot) based headers, and should be generally slightly better, since it directly uses the information in the header, instead of going through the idmapping. This is the code it executes to make the `_mapping`:; https://github.com/soedinglab/MMseqs2/blob/998c50a01da760713ca2c7580801e94555d23c4d/data/workflow/databases.sh#L476-L483. afterwards `createtaxdb` is called setup the `_taxonomy`, which basically contains the NCBI taxdump.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094345420:143,down,download,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094345420,1,['down'],['download']
Availability,"Sorry, that will not work (at least not without a lot of refactoring). Our error handling would just kill the whole python/r/julia process. You could hack our EXIT macro, but then you would be leaking memory. Do you want all-against-all exact Smith-Waterman alignments (like SWIPE) or also the prefiltering stage?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381918443:75,error,error,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381918443,1,['error'],['error']
Availability,Specifying available RAM when searching large databases.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/738:11,avail,available,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/738,1,['avail'],['available']
Availability,"Sure, sorry.; MMseq2 is version '44bde75f0e9f4d0ffc60970bee13347fe89bcb96'. Is running on a Dell computer with 64 cores, in a 5TB partition of HDD and 1Tb of RAM, and with Ubuntu 18.04 LTS.; I don't find any log file so I attach you the log of the running prior to the fault ( 1>log.txt); Hope that help, thanks!! ; [log.txt](https://github.com/soedinglab/MMseqs2/files/3076480/log.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-482841608:269,fault,fault,269,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-482841608,1,['fault'],['fault']
Availability,"Sure, these are the commands used for performing protein to protein search with a modified substitution matrix (changed the score for X). `mmseqs createdb TestDB_Subject.fa testRun/targetDB; `; `mmseqs createdb TestQuery.fa testRun/queryDB; `; `mmseqs createindex --mask 0 testRun/targetDB testRun/tmp --comp-bias-corr 0 --seed-sub-mat PAM10_modified.out`. `mmseqs search testRun/queryDB testRun/targetDB testRun/resultDB testRun/tmp --comp-bias-corr 0 --mask 0 --sub-mat PAM10_modified.out -a`. `mmseqs convertalis testRun/queryDB testRun/targetDB testRun/resultDB testRun/resultDB.m8 --sub-mat PAM10_modified.out`. The result matrix <img width=""1137"" alt=""ResultTable"" src=""https://user-images.githubusercontent.com/3918230/59648222-e42df700-91b0-11e9-92f1-3aaf27cc2e58.png"">. [TestDB_Subject.txt](https://github.com/soedinglab/MMseqs2/files/3299493/TestDB_Subject.txt); [TestQuery.txt](https://github.com/soedinglab/MMseqs2/files/3299494/TestQuery.txt); [PAM10_modified.txt](https://github.com/soedinglab/MMseqs2/files/3299495/PAM10_modified.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-502917178:266,mask,mask,266,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-502917178,2,['mask'],['mask']
Availability,Sure-; Command:; `head -n 1 /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db*`. Output:; `head: Error reading /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db`. Command: ; `xxd /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db.dbtype`. Output:; `xxd: /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db.dbtype: No such file or directory`. So I modified the command (was missing a file name):; `xxd /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db/mmseqs2_B001_result_db.dbtype`. Output:; `00000000: 0500 0000 ....`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191900319:173,Error,Error,173,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191900319,1,['Error'],['Error']
Availability,"Sure:. **first run**; ```; Program call:; search geneC.db genes.db geneC-v-all_3itr.db tmpC --no-preload --max-seqs 1000 --num-iterations 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	1000; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Tmp tmpC folder does not exist or is not a directory.; Created dir tmpC; Program call:; prefilter geneC.db genes.db tmpC/10139724895635470572/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:891,Mask,Mask,891,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,"T1.tsv tmp1 --threads 12 --compressed 1 . MMseqs Version: 13.45111; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 12; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode fa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:1206,Mask,Mask,1206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947,2,['Mask'],['Mask']
Availability,TA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [#e1fc78 913MiB/2.7GiB(32%) CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0GiB/2.7GiB(39%) CN:5 DL:105MiB ETA:16s]; [#e1fc78 1.1GiB/2.7GiB(43%) CN:5 DL:105MiB ETA:15s]; [#e1fc78 1.2GiB/2.7GiB(46%) CN:5 DL:105MiB ETA:14s]; [#e1fc78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3997,Down,Downloading,3997,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,1,['Down'],['Downloading']
Availability,TA:6s]; [#14821b 2.1GiB/2.7GiB(76%) CN:5 DL:109MiB ETA:5s]; [#14821b 2.2GiB/2.7GiB(79%) CN:5 DL:107MiB ETA:5s]; [#14821b 2.2GiB/2.7GiB(83%) CN:5 DL:105MiB ETA:4s]; [#14821b 2.3GiB/2.7GiB(86%) CN:5 DL:103MiB ETA:3s]; [#14821b 2.4GiB/2.7GiB(90%) CN:5 DL:102MiB ETA:2s]; [#14821b 2.5GiB/2.7GiB(93%) CN:5 DL:102MiB ETA:1s]; [#14821b 2.6GiB/2.7GiB(97%) CN:5 DL:100MiB]; [#14821b 2.7GiB/2.7GiB(99%) CN:1 DL:97MiB]. 10/11 10:32:21 [NOTICE] Download complete: /space/jmd20jns/tmp/13406937569195620773/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 14821b|OK | 105MiB/s|/space/jmd20jns/tmp/13406937569195620773/eukaryota.tar. Status Legend:; (OK):download completed. 10/11 10:32:21 [NOTICE] Downloading 1 item(s). 10/11 10:32:22 [NOTICE] Download complete: /space/jmd20jns/tmp/13406937569195620773/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; c8e316|OK | 20MiB/s|/space/jmd20jns/tmp/13406937569195620773/viruses.tar. Status Legend:; (OK):download completed.; tar2db /space/jmd20jns/tmp/13406937569195620773/bacteria.tar /space/jmd20jns/tmp/13406937569195620773/archea.tar /space/jmd20jns/tmp/13406937569195620773/eukaryota.tar /space/jmd20jns/tmp/13406937569195620773/viruses.tar /space/jmd20jns/tmp/13406937569195620773/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 91ms; Time for merging to msa.lookup: 0h 0m 0s 45ms; Time for processing: 0h 0m 15s 419ms; msa2profile /space/jmd20jns/tmp/13406937569195620773/msa /space/jmd20jns/mmseqs_eggNOG/mmseqs_eggNOG --match-mode 1 --match-ratio 0.5 --threads 64 -v 3 . Finding maximum sequence length and set size.; Error: msa2profile died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762:6111,Down,Download,6111,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762,1,['Down'],['Download']
Availability,TASIZE (1015); Write SEQINDEXSEQOFFSET (1016); Write SEQINDEXDATA (1014); Write ENTRIESNUM (1012); Write SEQCOUNT (1013); Index table: counting k-mers; [=================================================================] 10.84M 1m 9s 665ms; Index table: Masked residues: 61188721; Index table: fill; [=================================================================] 10.84M 1m 30s 911ms; Index statistics; Entries: 3850232186; DB size: 31796 MB; Avg k-mer size: 3.007994; Top 10 k-mers; SGQQRIA	33408; FLLLLLA	30301; ATQAYAV	30153; AVNDSVL	30055; DNALQAS	30055; LAYGSGV	30055; SVAYNPS	30029; GSLGSSV	30023; ISEQEGT	30012; ACNSPVY	30011; Write ENTRIES (2009); Write ENTRIESOFFSETS (2010); Write SEQINDEXDATASIZE (2015); Write SEQINDEXSEQOFFSET (2016); Write SEQINDEXDATA (2014); Write ENTRIESNUM (2012); Write SEQCOUNT (2013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 736ms; Index table: Masked residues: 61279535; Index table: fill; [=================================================================] 10.84M 1m 21s 843ms; Index statistics; Entries: 3850105067; DB size: 31796 MB; Avg k-mer size: 3.007895; Top 10 k-mers; SGQQRIA	32981; FLLLLLA	30126; ATQAYAV	29941; GSLGSSV	29847; EKVLLLL	29841; KLKLNKS	29837; DNALQAS	29818; HALLFPS	29817; SVAYNPS	29814; MLYKVMT	29808; Write ENTRIES (3009); Write ENTRIESOFFSETS (3010); Write SEQINDEXDATASIZE (3015); Write SEQINDEXSEQOFFSET (3016); Write SEQINDEXDATA (3014); Write ENTRIESNUM (3012); Write SEQCOUNT (3013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 501ms; Index table: Masked residues: 61136706; Index table: fill; [=================================================================] 10.84M 1m 21s 674ms; Index statistics; Entries: 3850166774; DB size: 31796 MB; Avg k-mer size: 3.007943; Top 10 k-mers; SGQQRIA	33368; FLLLLLA	30128; ATQAYAV	29916; VLCNGSG	29834; LAYGSGV	29833; SVAYNPS	29819; GSLGSSV	29814; F,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:64223,Mask,Masked,64223,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['Mask'],['Masked']
Availability,TASIZE (2015); Write SEQINDEXSEQOFFSET (2016); Write SEQINDEXDATA (2014); Write ENTRIESNUM (2012); Write SEQCOUNT (2013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 736ms; Index table: Masked residues: 61279535; Index table: fill; [=================================================================] 10.84M 1m 21s 843ms; Index statistics; Entries: 3850105067; DB size: 31796 MB; Avg k-mer size: 3.007895; Top 10 k-mers; SGQQRIA	32981; FLLLLLA	30126; ATQAYAV	29941; GSLGSSV	29847; EKVLLLL	29841; KLKLNKS	29837; DNALQAS	29818; HALLFPS	29817; SVAYNPS	29814; MLYKVMT	29808; Write ENTRIES (3009); Write ENTRIESOFFSETS (3010); Write SEQINDEXDATASIZE (3015); Write SEQINDEXSEQOFFSET (3016); Write SEQINDEXDATA (3014); Write ENTRIESNUM (3012); Write SEQCOUNT (3013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 501ms; Index table: Masked residues: 61136706; Index table: fill; [=================================================================] 10.84M 1m 21s 674ms; Index statistics; Entries: 3850166774; DB size: 31796 MB; Avg k-mer size: 3.007943; Top 10 k-mers; SGQQRIA	33368; FLLLLLA	30128; ATQAYAV	29916; VLCNGSG	29834; LAYGSGV	29833; SVAYNPS	29819; GSLGSSV	29814; FSLCYSP	29805; ILSISKQ	29801; TELKAKV	29800; Write ENTRIES (4009); Write ENTRIESOFFSETS (4010); Write SEQINDEXDATASIZE (4015); Write SEQINDEXSEQOFFSET (4016); Write SEQINDEXDATA (4014); Write ENTRIESNUM (4012); Write SEQCOUNT (4013); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 676ms; Index table: Masked residues: 61264052; Index table: fill; [=================================================================] 10.85M 1m 22s 163ms; Index statistics; Entries: 3850288340; DB size: 31797 MB; Avg k-mer size: 3.008038; Top 10 k-mers; SGQQRIA	33315; FLLLLLA	29996; ATQAYAV	29786; LAYGSGV	29736; AVNDSVL	29728; GSLGSSV	29722; KLKLNKS	29704; S,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:64927,Mask,Masked,64927,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['Mask'],['Masked']
Availability,TASIZE (3015); Write SEQINDEXSEQOFFSET (3016); Write SEQINDEXDATA (3014); Write ENTRIESNUM (3012); Write SEQCOUNT (3013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 501ms; Index table: Masked residues: 61136706; Index table: fill; [=================================================================] 10.84M 1m 21s 674ms; Index statistics; Entries: 3850166774; DB size: 31796 MB; Avg k-mer size: 3.007943; Top 10 k-mers; SGQQRIA	33368; FLLLLLA	30128; ATQAYAV	29916; VLCNGSG	29834; LAYGSGV	29833; SVAYNPS	29819; GSLGSSV	29814; FSLCYSP	29805; ILSISKQ	29801; TELKAKV	29800; Write ENTRIES (4009); Write ENTRIESOFFSETS (4010); Write SEQINDEXDATASIZE (4015); Write SEQINDEXSEQOFFSET (4016); Write SEQINDEXDATA (4014); Write ENTRIESNUM (4012); Write SEQCOUNT (4013); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 676ms; Index table: Masked residues: 61264052; Index table: fill; [=================================================================] 10.85M 1m 22s 163ms; Index statistics; Entries: 3850288340; DB size: 31797 MB; Avg k-mer size: 3.008038; Top 10 k-mers; SGQQRIA	33315; FLLLLLA	29996; ATQAYAV	29786; LAYGSGV	29736; AVNDSVL	29728; GSLGSSV	29722; KLKLNKS	29704; SVAYNPS	29704; ACNSPVY	29692; GQFVLYN	29673; Write ENTRIES (5009); Write ENTRIESOFFSETS (5010); Write SEQINDEXDATASIZE (5015); Write SEQINDEXSEQOFFSET (5016); Write SEQINDEXDATA (5014); Write ENTRIESNUM (5012); Write SEQCOUNT (5013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 230ms; Index table: Masked residues: 61371917; Index table: fill; [=================================================================] 10.84M 1m 21s 243ms; Index statistics; Entries: 3850040390; DB size: 31795 MB; Avg k-mer size: 3.007844; Top 10 k-mers; SGQQRIA	33009; FLLLLLA	30239; ATQAYAV	30076; LAYGSGV	29994; GSLGSSV	29988; SVAYNPS	29975; MVVCGTL	29966; F,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:65631,Mask,Masked,65631,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['Mask'],['Masked']
Availability,TASIZE (4015); Write SEQINDEXSEQOFFSET (4016); Write SEQINDEXDATA (4014); Write ENTRIESNUM (4012); Write SEQCOUNT (4013); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 676ms; Index table: Masked residues: 61264052; Index table: fill; [=================================================================] 10.85M 1m 22s 163ms; Index statistics; Entries: 3850288340; DB size: 31797 MB; Avg k-mer size: 3.008038; Top 10 k-mers; SGQQRIA	33315; FLLLLLA	29996; ATQAYAV	29786; LAYGSGV	29736; AVNDSVL	29728; GSLGSSV	29722; KLKLNKS	29704; SVAYNPS	29704; ACNSPVY	29692; GQFVLYN	29673; Write ENTRIES (5009); Write ENTRIESOFFSETS (5010); Write SEQINDEXDATASIZE (5015); Write SEQINDEXSEQOFFSET (5016); Write SEQINDEXDATA (5014); Write ENTRIESNUM (5012); Write SEQCOUNT (5013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 230ms; Index table: Masked residues: 61371917; Index table: fill; [=================================================================] 10.84M 1m 21s 243ms; Index statistics; Entries: 3850040390; DB size: 31795 MB; Avg k-mer size: 3.007844; Top 10 k-mers; SGQQRIA	33009; FLLLLLA	30239; ATQAYAV	30076; LAYGSGV	29994; GSLGSSV	29988; SVAYNPS	29975; MVVCGTL	29966; FSLCYSP	29963; KLKLNKS	29958; HALLFPS	29956; Write ENTRIES (6009); Write ENTRIESOFFSETS (6010); Write SEQINDEXDATASIZE (6015); Write SEQINDEXSEQOFFSET (6016); Write SEQINDEXDATA (6014); Write ENTRIESNUM (6012); Write SEQCOUNT (6013); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 405ms; Index table: Masked residues: 61034741; Index table: fill; [=================================================================] 10.85M 1m 21s 828ms; Index statistics; Entries: 3850317055; DB size: 31797 MB; Avg k-mer size: 3.008060; Top 10 k-mers; SGQQRIA	32887; FLLLLLA	30184; ATQAYAV	29964; LAYGSGV	29853; GSLGSSV	29847; KLKLNKS	29837; HALLFPS	29834; S,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:66335,Mask,Masked,66335,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['Mask'],['Masked']
Availability,TASIZE (5015); Write SEQINDEXSEQOFFSET (5016); Write SEQINDEXDATA (5014); Write ENTRIESNUM (5012); Write SEQCOUNT (5013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 230ms; Index table: Masked residues: 61371917; Index table: fill; [=================================================================] 10.84M 1m 21s 243ms; Index statistics; Entries: 3850040390; DB size: 31795 MB; Avg k-mer size: 3.007844; Top 10 k-mers; SGQQRIA	33009; FLLLLLA	30239; ATQAYAV	30076; LAYGSGV	29994; GSLGSSV	29988; SVAYNPS	29975; MVVCGTL	29966; FSLCYSP	29963; KLKLNKS	29958; HALLFPS	29956; Write ENTRIES (6009); Write ENTRIESOFFSETS (6010); Write SEQINDEXDATASIZE (6015); Write SEQINDEXSEQOFFSET (6016); Write SEQINDEXDATA (6014); Write ENTRIESNUM (6012); Write SEQCOUNT (6013); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 405ms; Index table: Masked residues: 61034741; Index table: fill; [=================================================================] 10.85M 1m 21s 828ms; Index statistics; Entries: 3850317055; DB size: 31797 MB; Avg k-mer size: 3.008060; Top 10 k-mers; SGQQRIA	32887; FLLLLLA	30184; ATQAYAV	29964; LAYGSGV	29853; GSLGSSV	29847; KLKLNKS	29837; HALLFPS	29834; SVAYNPS	29827; ACNSPVY	29817; FLPLAAY	29796; Write ENTRIES (7009); Write ENTRIESOFFSETS (7010); Write SEQINDEXDATASIZE (7015); Write SEQINDEXSEQOFFSET (7016); Write SEQINDEXDATA (7014); Write ENTRIESNUM (7012); Write SEQCOUNT (7013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 797ms; Index table: Masked residues: 61311938; Index table: fill; [=================================================================] 10.84M 1m 21s 46ms; Index statistics; Entries: 3850086594; DB size: 31795 MB; Avg k-mer size: 3.007880; Top 10 k-mers; SGQQRIA	33346; FLLLLLA	30182; ATQAYAV	30024; KLKLNKS	29930; AVNDSVL	29924; LAYGSGV	29921; MLYKVMT	29906; GS,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:67039,Mask,Masked,67039,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['Mask'],['Masked']
Availability,TASIZE (6015); Write SEQINDEXSEQOFFSET (6016); Write SEQINDEXDATA (6014); Write ENTRIESNUM (6012); Write SEQCOUNT (6013); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 405ms; Index table: Masked residues: 61034741; Index table: fill; [=================================================================] 10.85M 1m 21s 828ms; Index statistics; Entries: 3850317055; DB size: 31797 MB; Avg k-mer size: 3.008060; Top 10 k-mers; SGQQRIA	32887; FLLLLLA	30184; ATQAYAV	29964; LAYGSGV	29853; GSLGSSV	29847; KLKLNKS	29837; HALLFPS	29834; SVAYNPS	29827; ACNSPVY	29817; FLPLAAY	29796; Write ENTRIES (7009); Write ENTRIESOFFSETS (7010); Write SEQINDEXDATASIZE (7015); Write SEQINDEXSEQOFFSET (7016); Write SEQINDEXDATA (7014); Write ENTRIESNUM (7012); Write SEQCOUNT (7013); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 797ms; Index table: Masked residues: 61311938; Index table: fill; [=================================================================] 10.84M 1m 21s 46ms; Index statistics; Entries: 3850086594; DB size: 31795 MB; Avg k-mer size: 3.007880; Top 10 k-mers; SGQQRIA	33346; FLLLLLA	30182; ATQAYAV	30024; KLKLNKS	29930; AVNDSVL	29924; LAYGSGV	29921; MLYKVMT	29906; GSLGSSV	29905; ACNSPVY	29878; LTNVETP	29872; Write ENTRIES (8009); Write ENTRIESOFFSETS (8010); Write SEQINDEXDATASIZE (8015); Write SEQINDEXSEQOFFSET (8016); Write SEQINDEXDATA (8014); Write ENTRIESNUM (8012); Write SEQCOUNT (8013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 400ms; Index table: Masked residues: 61287007; Index table: fill; [=================================================================] 10.84M 1m 21s 849ms; Index statistics; Entries: 3850445130; DB size: 31798 MB; Avg k-mer size: 3.008160; Top 10 k-mers; SGQQRIA	33244; FLLLLLA	30250; ATQAYAV	30105; GLGTVAK	30034; KLKLNKS	30017; LAYGSGV	30007; GSLGSSV	29989; AC,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:67743,Mask,Masked,67743,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['Mask'],['Masked']
Availability,TASIZE (8015); Write SEQINDEXSEQOFFSET (8016); Write SEQINDEXDATA (8014); Write ENTRIESNUM (8012); Write SEQCOUNT (8013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 400ms; Index table: Masked residues: 61287007; Index table: fill; [=================================================================] 10.84M 1m 21s 849ms; Index statistics; Entries: 3850445130; DB size: 31798 MB; Avg k-mer size: 3.008160; Top 10 k-mers; SGQQRIA	33244; FLLLLLA	30250; ATQAYAV	30105; GLGTVAK	30034; KLKLNKS	30017; LAYGSGV	30007; GSLGSSV	29989; ACNSPVY	29970; HALLFPS	29959; ISEQEGT	29956; Write ENTRIES (9009); Write ENTRIESOFFSETS (9010); Write SEQINDEXDATASIZE (9015); Write SEQINDEXSEQOFFSET (9016); Write SEQINDEXDATA (9014); Write ENTRIESNUM (9012); Write SEQCOUNT (9013); Index table: counting k-mers; [=================================================================] 10.85M 1m 9s 678ms; Index table: Masked residues: 61466528; Index table: fill; [=================================================================] 10.85M 1m 30s 622ms; Index statistics; Entries: 3849908410; DB size: 31794 MB; Avg k-mer size: 3.007741; Top 10 k-mers; SGQQRIA	33047; FLLLLLA	30087; ATQAYAV	29938; KLKLNKS	29845; LAYGSGV	29839; SVAYNPS	29821; GSLGSSV	29801; ACNSPVY	29799; KHFCLLP	29784; VVLVLLR	29783; Write ENTRIES (10009); Write ENTRIESOFFSETS (10010); Write SEQINDEXDATASIZE (10015); Write SEQINDEXSEQOFFSET (10016); Write SEQINDEXDATA (10014); Write ENTRIESNUM (10012); Write SEQCOUNT (10013); Index table: counting k-mers; [=================================================================] 10.84M 1m 3s 921ms; Index table: Masked residues: 61076649; Index table: fill; [=================================================================] 10.84M 1m 21s 691ms; Index statistics; Entries: 3850338479; DB size: 31797 MB; Avg k-mer size: 3.008077; Top 10 k-mers; SGQQRIA	32957; FLLLLLA	30300; ATQAYAV	30150; VLCNGSG	30032; LAYGSGV	30032; AVNDSVL	30028; CYGPSYQ	3,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:69150,Mask,Masked,69150,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['Mask'],['Masked']
Availability,"TDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; *** Download Progress Summary as of Wed Sep 27 13:22:54 2023 *** ; ===============================================================================; [#2b99bd 207MiB/51GiB(0%) CN:5 DL:10MiB ETA:1h24m8s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of Wed Sep 27 13:23:54 2023 *** ; ===============================================================================; [#2b99bd 723MiB/51GiB(1%) CN:5 DL:8.7MiB ETA:1h38m40s]; FILE: tmp/3290078511923703767/gtdb.tar.gz;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:2440,error,errors,2440,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['error'],['errors']
Availability,"TENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:2820,Down,Downloads,2820,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"TENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:2538,Down,Downloads,2538,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,TEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3102,Down,Downloads,3102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"TFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//5892805155821804",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:4306,mask,mask,4306,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['mask'],['mask']
Availability,TGGAATTTCATGG	223619; TCGCGCTCTGTAGTG	208663; ACTCACGGAGGAGGG	193225; CAGTGTGTGTAGTGG	183044; Time for index table init: 0h 16m 13s 601ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 10 of 12); Query db start 1 to 1298472; Target db start 67479076 to 75236806; [=================================================================] 1.30M 59m 1s 792ms. 0.917439 k-mers per position; 274723 DB matches per sequence; 277 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1068 sequences with 0 size result lists; Time for merging to pref_0_tmp_9: 0h 0m 4s 398ms; Time for merging to pref_0_tmp_9_tmp: 0h 0m 0s 890ms; Process prefiltering step 11 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.33M 4m 48s 354ms; Index table: Masked residues: 516172937; Index table: fill; [=================================================================] 7.33M 9m 28s 253ms; Index statistics; Entries: 28124885703; DB size: 169123 MB; Avg k-mer size: 26.193341; Top 10 k-mers; GGGGCAGCGTGATTT	293229; TAATCGTGCAGCGGG	261503; GTGCGCAGCGTATCG	247301; CTCTCGGGGGCGTGG	237939; CCACGCCGGGTCGAG	225211; TCCAGGGAGCATGGG	213144; CACGCCAGCTAGGAG	206914; AGTGGAATTTCATGG	203910; ACTCACGGAGGAGGG	177651; CAGTGTGTGTAGTGG	170264; Time for index table init: 0h 14m 59s 9ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 11 of 12); Query db start 1 to 1298472; Target db start 75236807 to 82571160; [=================================================================] 1.30M 23m 9s 242ms. 0.917439 k-mers per position; 265400 DB matches per sequence; 261 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1163 sequences with 0 size result lists; Time for merging to pref_0,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:19978,Mask,Masked,19978,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['Mask'],['Masked']
Availability,"TL; DR: Enabling building against shared system libraries gives better modularity and a better end-user experience. The way that the Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development an",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:637,reliab,reliable,637,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463,2,['reliab'],['reliable']
Availability,"Task: I am looking for amino acid sequences in a genome (nucleotide level) with mmseqs. Equivalent to tblastn. in the output of mmseqs (mmseqs convertalis) I get not only the target in the column but also an underscore and a number (example: expected:chr1 → chr1_123); Start and stop positions are never greater than 66,000. I think the genome sequence has been split into different parts. How can I reassign the position of the parts to the complete genome?; Or did I build the index for the genome incorrectly?; What have I done wrong. Code (MMseqs2 Version: 6.f5a1c):. REF=path to fasta genom; FASTA=path to fasta query; RES=path to output folder; QRY=path to query (folder); TARGET=; TARGET_TMP=; RES_TMP=. BN=$(basename ""$FASTA""); NAME=$(echo $BN| cut -d '.' -f1); QUERY=""$QRY""""$NAME""_db; RESULT=""$RES""""$NAME""_result; RESULT_blastformat=""$RES""""$NAME""_result_mmseq.csv . mmseqs createdb ""$REF"" ""$TARGET""; mmseqs createindex ""$TARGET"" ""$TARGET_TMP"". mmseqs createdb ""$FASTA"" ""$QUERY""; mmseqs search --threads 12 ""$QUERY"" ""$TARGET"" ""$RESULT"" ""$RES_TMP"" -a; mmseqs convertalis --threads 12 ""$QUERY"" ""$TARGET"" ""$RESULT"" ""$RESULT_blastformat""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/470:743,echo,echo,743,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/470,1,['echo'],['echo']
Availability,"Tested the mmseqs master branch after the PR was merged, and the download works now! Thanks @apcamargo Note that issue #729 persists, so taxonomy will not work properly with the GTDB database. However, I will go ahead and close this specific issue for now.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740#issuecomment-1692737339:65,down,download,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740#issuecomment-1692737339,1,['down'],['download']
Availability,"Thank for your report. I copied a wrong file to the Metaclust 2018_01 release. It should be fixed now.; Information on the current release can be found in the latest version of the preprint: https://www.biorxiv.org/content/early/2018/01/05/104034.full.pdf+html. The input set size of the Metaclust did not increase since the first release. The data should be seen as proof of concept for Linclust. We can not commit to such a data intensive procedure at this point. It took weeks to download the full datasets used in this study. We believe that a sequence database based on metagenomic sequences should be offered rather by institutions that have direct access to huge amounts of metagenomic data (e.g. EMBL, NCBI, JGI, Argonne National Lab, ...).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/54#issuecomment-357018695:483,down,download,483,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/54#issuecomment-357018695,1,['down'],['download']
Availability,"Thank you - --max-seqs really works. For now I wanted to make the alignments to include more sequences,; especially near threshold, than they did. Increasing the number of; sequences made the change. Now I can play with inclusion thresholds. niedz., 1 kwi 2018 o 15:57 użytkownik Martin Steinegger <; notifications@github.com> napisał:. > The parameter --max-seqs was always available but there was a stopped; > mmseqs from printing out the parameter. The printout problem should be; > resolved now.; >; > How do you benchmark the performance?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-377788647>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/APQmI4PjSUD8eJYrs1QQNM6xcDq8Rm8Bks5tkNzAgaJpZM4TCzs3>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-378337962:375,avail,available,375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-378337962,1,['avail'],['available']
Availability,"Thank you both! I was testing on a small dataset, with few singleton clusters, and applying clustalo resulted in an error for such clusters (can't align 1 seq). The problem is that this stops the entire workflow, and no output was produced. Also, can the apply command split the output by cluster?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-558543321:116,error,error,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-558543321,1,['error'],['error']
Availability,"Thank you for all the work you have put into MMseqs2. I hope it can support my use case. ## Desired outcome. I would like to make a MMseqs2 target profile database from VOGDB data however I can't find a path to do so. To do this I attempted to process the latest release of the VOGDB files available [here](http://vogdb.org/download) specifically I am using the MSA files in [vog.raw_algs.tar.gz](http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz). Contained in vog.raw_algs.tar.gz are many FASTA formatted MSA files with each file being named after the VOG ID but not containing it in the text of the files. I have tried using a similar workflow to that of the PFAM format and several other approaches to no avail. Here are some of my observations on the situation: . VOGDB is not in stockholm format, unlike PFAM, and convertmsa does not support it. However, instead of raising an error convertmsa produces empty files without alerting the user. To skip preprocessing and run msa2profile command directly requires the datatype and index files to exist, and I don't know how to generate these correctly from the data at hand. Making a database from the MSA data is not a problem and the database can be searched without issue except that VOG IDs are not transferred from the file name. It seems that the problem is only with generating profiles. ## Reproduction / Examples. Example where convertmsa creates files, but they are empty and there is no error. ```BASH; # make temp folders; mkdir vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; # tar xzf vog.raw_algs.tar.gz; # gzip -c *.msa > vog.raw_algs.gz; cd ..; mmseqs convertmsa vog/vog.raw_algs.tar.gz vog/temp/converted; ```. Files are created in vog/temp with the converted prefix, but they are all empty. The only path to an MMseqs2 profile that has any success is to convert the MSA files first into HH-suite compatible hmm files and then to use the hmm to profile p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/440:290,avail,available,290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440,4,"['avail', 'down', 'error']","['avail', 'available', 'download', 'error']"
Availability,"Thank you for analyzing the problem. This helps me a lot. I changed the shebang line to bash. Your run worked just fine. ; The output is ""debug"" output which occures becaues of the -x parameter at the shebang line. ""#!/bin/bash -ex"". I removed this flag and updated the tar file. You can download it here http://github.com/soedinglab/mmseqs2/raw/master/mmseqs-static.tar.gz",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235795180:288,down,download,288,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235795180,1,['down'],['download']
Availability,"Thank you for answering so quickly! I have 1,032,373,897 entries in the input database. And setting the memory to 70G worked perfectly. It's now running. I will also look into setting cod-mode to 1. I am running the clustering with several iterations (100%, 95%, 70% .. etc). So doing it with 100% identity will not be my final result. Thank you for the very helpful advice. One thing I noticed is that, without using the split-memory-limit option the database size was 330.652 MB so the program was splitting the database into 3 files, where it probably should have been splitting it into 4 so no file would be greater than 100G. Could this be a simple error of rounding down instead of rounding up?. Thanks again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549176665:654,error,error,654,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549176665,4,"['down', 'error']","['down', 'error']"
Availability,Thank you for reporting this issue. Could you provide the input files to reproduce the error?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532358998:87,error,error,87,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532358998,1,['error'],['error']
Availability,"Thank you for sharing your example. However I can also not reproduce the error. In your example there is only one alignment to a sequence, which `lca` classifies as `30551	species	Staphylococcus pseudintermedius`. I am running out of ideas how to help. ```; lca gtdb_54kDB top1 /Users/mad/Downloads/top_results/lca. MMseqs Version: 	0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Compressed 	0; LCA ranks; Blacklisted taxa 	12908,28384; Show taxon lineage	false; Threads 	12; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 36283 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Computing LCA; [=================================================================] 100.00% 100 0s 2ms. Taxonomy for 0 entries not found out of 1; Time for merging to lca: 0h 0m 0s 1ms; Time for processing: 0h 0m 17s 334ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537:73,error,error,73,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537,2,"['Down', 'error']","['Downloads', 'error']"
Availability,"Thank you for the answer!. I tried this command (so because I already have this prepared DB). ```; mmseqs nrtotaxmapping /media/tertiary/database_nr/prot.accession2taxid nr_20210908_mmseqDB tax.tsv --threads 6 ; nrtotaxmapping /media/tertiary/database_nr/prot.accession2taxid nr_20210908_mmseqDB tax.tsv --threads 6; ```. But I catched the error . ```; MMseqs Version: 13.45111; Threads 6; Verbosity 3. Loading NCBI taxonomy1ms; names.dmp, nodes.dmp, merged.dmp from NCBI taxdump could not be found!; ```. And now I am trying this one :D . `mmseqs databases NR NR_tax_mmseqs tmp`. For now last databases module works, hope, everything will be alright!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923020460:340,error,error,340,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923020460,1,['error'],['error']
Availability,"Thank you for the fast response and suggestion for a temporary fix. Although, the `--retry*` flags for both curl and wget don't appear to apply for SSL-related connection errors, so neither will retry in this situation. I think it's necessary to perform the retries at the outer-scope—i.e., try the download and check for the file locally.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557764725:171,error,errors,171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557764725,2,"['down', 'error']","['download', 'errors']"
Availability,Thank you for the file. I can not reproduce the bug. ; Could you compile mmseqs2 with debug flags and send me the back trace? . cmake -DCMAKE_BUILD_TYPE=Debug ..; make -j 6; gdb --args mmseqs kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. After GDB started type `r` an after it crashed `bt`.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441411023:395,mask,mask,395,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441411023,1,['mask'],['mask']
Availability,Thank you for the patches! How did you find these errors? ; We are running MMseqs2 in our regression with `asan` and neither of these shows up.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408114683:50,error,errors,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408114683,1,['error'],['errors']
Availability,Thank you for the workflow. I'll try that. For now as I explore the software a little bit (I'm amazed with its speed and scalability) I cluster smaller database. A part of my workflow is generating profiles for pdb_05_rep database based on nr70_rep database:; ```; mmseqs search pdb_05_rep nr70_rep pdb_05_res tmp --num-iterations 3 ; mmseqs result2profile pdb_05_rep nr70_rep pdb_05_res pdb_05_profile; ```; The second command however blasts my bash with these warnings:. > Warning in /opt/install/MMseq2/src/alignment/MsaFilter.cpp:244: filter:; > Filtering removed all sequences in alignment. Inserting back first sequence. Is that OK? Or something went wrong with the procedure?. And further I run:; ```; mmseqs search pdb_05_profile pdb_05_rep pdb_05_pp_res tmp --threads 110 -e 0.05; mmseqs clust pdb_05_profile pdb_05_pp_res pdb_05_pp_clu --threads 110 --cluster-mode 1 --similarity-type 1; ```; and the second procedure outputs many warnings like:. > ERROR: Sequence !; > ERROR: Sequence 19899 does not contain any sequence for key 933920594 does not contain any sequence for key 21608!; > ERROR: Sequence 20595 does not contain any sequence for key 21655!; > ERROR: Sequence 20596 does not contain any sequence for key 21670!; > ERROR: Sequence 2059723896 does not contain any sequence for key !; > ERROR: Sequence 23698 does not contain any sequence for key 7521!; > ERROR: Sequence 23699 does not contain any sequence for key 7526!; > does not contain any sequence for key 21683!. to give only few.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-368807680:959,ERROR,ERROR,959,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-368807680,7,['ERROR'],['ERROR']
Availability,"Thank you for this tip, it worked! But I get many clusters, 997 representative sequences, is there a way to reduce the number of clusters? We are trying to identify general patterns/motifs from these sequences. The command I used is:; mmseqs easy-cluster Peptide_seqs.mod.fasta Peptide_seqs_clu tmp -e inf -k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0 --min-ungapped-score 0 --min-seq-id 0.0 -c 0.0 --cov-mode 1. Thank you!. > I found one memory issue when giving only extremely short sequences to MMseqs2.; > You can probably work around this issue in release 13 by adding one fake sequence that is longer than 20 AA residues to the input file.; > ; > I would also recommend to use the following parameters `-k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0` for clustering such extremely short sequences. You might also want to add `-e inf` as E-values are essentially meaningless for such short sequences. In this case you would only cluster based on seq. id. and coverage.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332:353,mask,mask,353,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332,2,['mask'],['mask']
Availability,Thank you for trying MMseqs2. . Your referenced article is the MMseqs1 paper. Please read the MMseqs2 [article](https://www.nature.com/articles/nbt.3988). The benchmark used to evaluate MMseqs2 is freely available [here](https://bitbucket.org/martin_steinegger/mmseqs-benchmark). . How did you compare the sensitivity of MMseqs2 against PSI-BLAST? We measured the sensitivity up to the first false positive. Our benchmark penalizes high scoring FPs.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-406958840:204,avail,available,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-406958840,1,['avail'],['available']
Availability,"Thank you for your advise and I'll try it later. Here I have another question :. I tried another way. I think download the original data is time-consuming, so I downloaded the GTDB database and other files maunally follow the script of github (data/workflow/databases.sh), which means I have five files in the my GTDB/tmp dir :; > ar122_taxonomy.tsv bac120_taxonomy.tsv download.done gtdb.tar.gz version ; ![image](https://user-images.githubusercontent.com/74159766/155985994-b1f0be32-c4b2-4d88-a69b-f2fbd188f3eb.png). then I run the command at the GTDB dir:; ` mmseqs databases GTDB GTDB_db tmp`. It still download the databsed(although I have downloaded and put them in the tmp dir) ; ![image](https://user-images.githubusercontent.com/74159766/155985685-9b892ce5-4dba-473a-8a91-240b616342ae.png). I don't know what went wrong, hope you can give me some suggestions, thanks a lot!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054225444:110,down,download,110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054225444,5,['down'],"['download', 'downloaded']"
Availability,"Thank you for your quick reply. My apologies, I'm not sure how to check the version? I believe I had compiled from source under Linux back in February 25, 2021. Do you recommend that I delete my current installation and re-install everything? (Or is there a way to easily update mmseq2? I can't seem to find such information in the user guide.). One thing that makes me hesitant about deleting everything is that I had downloaded Swiss-Prot using `mmseqs databases` back in February 2021 and I'm not sure if I can download the same dataset again since Swiss-Prot has been updated since then. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558:419,down,downloaded,419,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558,4,['down'],"['download', 'downloaded']"
Availability,Thank you for your reply.; I have seen that from the documentation and wish I could use it but this module seems not available with my install:; MMseqs2 Version: 4224ae469df44631b5d8e20aa5c7fd9d74d48c0e; I tried to install more a recent version of mmseqs but had kernel issue (FATAL: kernel too old),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-720089354:117,avail,available,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-720089354,1,['avail'],['available']
Availability,"Thank you for your reply; my target sequences are some CDS sequences download from NCBI, and query sequences are some sequences fragment of 300bp; here are some partial sequences of the target and query file.; [https://gist.github.com/hwy7/cd5486d2a61c3b6bfe990a3ada669318](url); Please let me know if you need any more information or if there are specific analyses you would like to perform with this data.; Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747#issuecomment-1706780853:69,down,download,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747#issuecomment-1706780853,1,['down'],['download']
Availability,"Thank you so much for your help!. I have tried adding `--alignment-mode 3`, but I am still strangely getting 0% sequence identity for *all* pairwise comparisons. Please find below the exact steps I'm following:. Using the ""examples"" folder that was downloaded during the mmseqs installation process:. ```; mmseqs createdb examples/QUERY.fasta queryDB; mmseqs cluster queryDB queryDB_clu tmp --min-seq-id 0.3 -c 0.8 --alignment-mode 3. mmseqs alignall queryDB queryDB_clu queryDB_alnall --alignment-mode 3; mmseqs createtsv queryDB queryDB queryDB_alnall queryDB_alnall.tsv; OFS=""\t"" awk 'FNR==NR{a[$1]=$2;next}{$3=a[$3]; print}' queryDB.lookup queryDB_alnall.tsv > queryDB_alnall_newid.tsv; ```. Then in the output file `queryDB_alnall_newid.tsv`, I observe the following. I copied below the first few lines of the file. I believe v5 is sequence identity and everything is zero in that column:. <html xmlns:v=""urn:schemas-microsoft-com:vml""; xmlns:o=""urn:schemas-microsoft-com:office:office""; xmlns:x=""urn:schemas-microsoft-com:office:excel""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=Excel.Sheet>; <meta name=Generator content=""Microsoft Excel 15"">; <link id=Main-File rel=Main-File; href=""file:///C:/Users/Skim20/AppData/Local/Temp/msohtmlclip1/01/clip.htm"">; <link rel=File-List; href=""file:///C:/Users/Skim20/AppData/Local/Temp/msohtmlclip1/01/clip_filelist.xml"">; <style>; <!--table; 	{mso-displayed-decimal-separator:""\."";; 	mso-displayed-thousand-separator:""\,"";}; @page; 	{margin:.75in .7in .75in .7in;; 	mso-header-margin:.3in;; 	mso-footer-margin:.3in;}; tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; br; 	{mso-data-placement:same-cell;}; td; 	{padding-top:1px;; 	padding-right:1px;; 	padding-left:1px;; 	mso-ignore:padding;; 	color:black;; 	font-size:11.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Calibri, sans-serif;; 	mso-font-charset:0;; 	mso-number-format:General;; 	text-align:general;; 	verti",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965794507:249,down,downloaded,249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965794507,1,['down'],['downloaded']
Availability,"Thank you! ; I could not find any error in the `_mapping`, `_nodes.dmp` and `_names.dmp` files. So I assume the database is fine. I have build a small test case but I was not able to reproduce the error. Could you try to search against the database ([gtdbSmallDb.zip](https://github.com/soedinglab/MMseqs2/files/4018390/gtdbSmallDb.zip)) and see if the error occurs?. mmseqs taxonomy gtdb_54kDB gtdb_54kDB /tmp/tax /tmp/tmp . It would be amazing if you could share your script to build the gtdb.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570490407:34,error,error,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570490407,3,['error'],['error']
Availability,"Thank you! Hmm, so I get this message:. MMseqs2 Version: GITDIR-NOTFOUND. I looked through the other Q&A, it looks like this might have been because I downloaded a ZIP folder? (I unfortunately don't recall because I had downloaded mmseq 9 months ago in Feb 2021.)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965833044:151,down,downloaded,151,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965833044,2,['down'],['downloaded']
Availability,"Thank you! I found the fasta causing the issue, and it turns out that when I downloaded it from NCBI, the download did not complete. When I redownloaded, and ran createdb, I did not get the error.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2093302642:77,down,downloaded,77,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2093302642,3,"['down', 'error']","['download', 'downloaded', 'error']"
Availability,Thank you! My homology search only seems to run 300 alignments on the filtered database (uniprotKB/swissprot) even though this protein should be in most bacteria. Perhaps doing the search via protein sequences isn't the way to go for estimating taxonomic commonness. Is there a database with whole bacterial genome sequences available (one genome per fasta)? I could then do a repeat search for my gene's NT sequence against each genome,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669637865:325,avail,available,325,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669637865,1,['avail'],['available']
Availability,"Thank you!. As for silvadb - it would be very helpful! ; When are you planning to release this version on Docker Hub? Or, maybe, this version is already available?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670360006:153,avail,available,153,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670360006,1,['avail'],['available']
Availability,"Thank you, is that `--msa-mode` or `--msa-type` sorry? Even with `--msa-type 2` I still got an error originally about a missing index file, my original command was: `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94#issuecomment-395384699:95,error,error,95,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94#issuecomment-395384699,1,['error'],['error']
Availability,"Thank you, that is useful to know.; IE I clustered at 70% and at 90% but with both - when I downloaded the representative sequences from each cluster and ran these in a MSA tool you would expect to see maximum roughly 70% and 90% pairwise comparisons right? The PIM is the percentage identity matrix. Instead I got values of up to 99% in both.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/841#issuecomment-2090638089:92,down,downloaded,92,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/841#issuecomment-2090638089,1,['down'],['downloaded']
Availability,"Thank you, that seems to be the hint I've needed.; I downloaded the CAZymes database from dbCAN and I can get that one to overflow too. Maybe I can reproduce the issue with that database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592539554:53,down,downloaded,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592539554,1,['down'],['downloaded']
Availability,"Thanks @milot-mirdita This works perfect. ; Last question, if we want to have the associated sequence DB with the subset of sequences in the slimmed down cluster DB. If we use `createsubd` with the original sequence DB and the slimmer cluster DB will only pick the representative sequences, any tips?. Many thanks!; Antonio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-797690051:149,down,down,149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-797690051,1,['down'],['down']
Availability,"Thanks @milot-mirdita! After reinstalling the updated version from git, that error is gone. But I got a new one says:. ```; majoritylca /scratch/ref/hecatomb_databases/virus_uniprot/targetDB ./results/contigs/mmseqs_aa_out/taxonomyResult ./results/contigs/mmseqs_aa_out/lcaDB --tax-lineage 1 --lca-ranks superkingdom,phylum,class,order,family,genus,species . MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Majority threshold 0.5; Vote mode 1; LCA ranks superkingdom,phylum,class,order,family,genus,species; Taxon blacklist 12908,28384; Column with taxonomic lineage 1; Compressed 0; Threads 24; Verbosity 3. Loading NCBI taxonomy; Loading nodes file ... Done, got 2227973 nodes; Loading merged file ... Done, added 56613 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Computing LCA; [====taxonid: 1046081 does not match a legal taxonomy node.; ================================taxonid: 1046081 does not match a legal taxonomy node.; ===============taxonid: 1046081 does not match a legal taxonomy node.; =============. ```. So..do you have any suggestion on this one?. Thank you!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504:77,error,error,77,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504,1,['error'],['error']
Availability,"Thanks Milot!; Indeed it seems that running it with `--format-output fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen` was ended successfully.; Trying to run the `p queryId` after the `bt` when it crashed resulted in the following error:; `(gdb) p queryId; No symbol ""queryId"" in current context.`. I see now that the names of a few of my query IDs are complex/long... So I guess this could be the issue... What would be the best strategy to continue? change the names to something simple like s1, s2, s3, etc., and rerun? Or any other idea? . Thanks!; Haim",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878453492:254,error,error,254,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878453492,2,['error'],['error']
Availability,"Thanks Milot, the --split 1 workaround has worked, specifiying it at index creation time and search time, although it complains about not having enough memory, it finishes:. ```; Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Query database: mmseq-testDB(size=2467); Target database: /junk/databases/mmseqs/nr(size=121935717); Use kmer size 7 and split 1 using split mode 0; Needed memory (699399167230 byte) of total memory (541058265088 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size o f --split or set it to 0 to automatic optimize target database split.; WARNING: Split has to be computed by createindex if precomputed index is used.; Substitution matrices...; Time for init: 0 h 0 m 23s; ```; The index file size is around 300GB, so it's asking more than double.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301116501:641,avail,available,641,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301116501,1,['avail'],['available']
Availability,"Thanks a lot @AndrazMarinc and @milot-mirdita . It worked. Also I found another solution, the file ""prot.accession2taxid"" download from NCBI needs modification. Only two columns (accession.version and taxid) are needed to run createtaxdb.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/856#issuecomment-2222568096:122,down,download,122,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/856#issuecomment-2222568096,1,['down'],['download']
Availability,"Thanks a lot for offering your help, we will check how to make this a project. It's really kind of you. I have tried indexing with --max-seq-len 30000 but the search then run into error:; mmseqs createindex Ath /tmp/ --search-type 3 --max-seq-len 30000; mmseqs search Ath Ath AthDB /tmp --search-type 3 --max-seq-len 30000; Writing results to: AthDB; terminate called after throwing an instance of 'std::logic_error' ] 0.00% 1 eta -; what(): basic_string::_M_construct null not valid; /tmp/16276944363020795345/blastn.sh: line 66: 15898 Aborted ""$MMSEQS"" offsetalignment ""$1"" ""${QUERY}"" ""$2"" ""${TARGET}"" ""$4/aln"" ""$3"" ${OFFSETALIGNMENT_PAR}; Error: Offset step died. Ath, being the genome database (query and target)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-747471744:180,error,error,180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-747471744,2,"['Error', 'error']","['Error', 'error']"
Availability,Thanks a lot for reporting this bug. ; Commit https://github.com/soedinglab/MMseqs2/commit/138ebea099c33a2fbc3c282235b1c839bae1fb43 should now print an error message.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/41#issuecomment-321148628:152,error,error,152,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41#issuecomment-321148628,1,['error'],['error']
Availability,"Thanks a lot for the help, @milot-mirdita . Build PROFILEDB and search with this was successful.; final steps:; > mmseqs search PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile tmp --threads 10 -a -c 0.8 --cov-mode 2 --add-self-matches ; > mmseqs convertalis PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile pbp.found_with_profile.tsv . At this point, everything okay. ; The step below also was performed nicely without errors. ; > mmseqs extractalignedregion PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile pbp.found_with_profile.ALIGNEDREGION . The crash happens here:; > mmseqs convert2fasta pbp.found_with_profile.ALIGNEDREGIONS pbp.found_with_profile.ALIGNEDREGIONS.fa . With this message:; ```; Program call:; convert2fasta pbp.found_with_profile.ALIGNEDREGIONS pbp.found_with_profile.ALIGNEDREGIONS.fa . MMseqs Version: 	7-4e23d; Use ffindex header	false; Verbosity 	3. Could not open data file pbp.found_with_profile.ALIGNEDREGIONS!; ```. But I realised maybe I did everything wrong. . What I want, actually, is the MSA for each cluster with only aligned regions. ; Also, I want the MSA of aligned regions from a search result. The deal is: I have 501 queries single domain, I would to use this against a 17M sequences DB, since the matches probably have at least 1 region contains the same domain as the query, I would like the MSA or even a sequence DB itself contain **only the regions of the match**. ; Extracting only the region of the matches allow me to infer more accurate alignments and phylogeny. Also allow me build specifics models. . Could you provide me a simple workflow to this task?. Thanks in advance.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-458988413:456,error,errors,456,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-458988413,2,['error'],['errors']
Availability,"Thanks a lot for your fast response.; I have tried and I am getting the following error; Invalid database read for id=36855603, database index=../../uniprot.index; getEntryLen: local id (36855603) >= db size (27159746). I have done createindex on the uniprot db but the error remains.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/662#issuecomment-1410163016:82,error,error,82,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/662#issuecomment-1410163016,2,['error'],['error']
Availability,"Thanks a lot for your help, Milot! I am sorry for the late response!; I think the newer release made a progress and it seems swapresults does not give the std::bad_alloc error anymore (see the stdout printout below). However now I'm facing a problem with disk-space usage, it seems my run fills up ~1.2 TB and fails since I have no disk space left. Is there any suggestion of how to reduce the needed disk-space? From your guide I understand that reducing `--max-seqs` and `--max-accept` could be the way to go but I was not sure whether indeed this is the correct direction and what would be reasonable values to use. What I actually need, is only the best hit(s) for my queries. I would be thankful for any advice ;-) . My command: ; `Programs/MMSeqs2/mmseqs/bin/mmseqs easy-search --slice-search --search-type 3 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen"" A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ 1> A2p515F2F4F6_vs_NT_Jan2021.mmseq2.std 2>&1`. The stdout:; ```; easy-search --slice-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:170,error,error,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['error'],['error']
Availability,"Thanks a lot for your reply,. I tried but I am getting assembler error:; /tmp/cccDx2GQ.s: Assembler messages:; /tmp/cccDx2GQ.s:516: Error: no such instruction: `vpbroadcastq %xmm2,%ymm1'; /tmp/cccDx2GQ.s:525: Error: suffix or operands invalid for `vpaddq'; make[2]: *** [lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o] Error 1; make[1]: *** [lib/cacode/CMakeFiles/cacode.dir/all] Error 2; make: *** [all] Error 2. I have; cmake version 2.8.12.2; gcc version 5.5.0 (GCC). Florian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645:65,error,error,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645,6,"['Error', 'error']","['Error', 'error']"
Availability,"Thanks a lot for your response. I tried reducing with ""-k 5"" which improved a bit and then got an error when trying ""-k 4"".; But isn't it doing a BLASTP against translated ORFs anyhow?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/454#issuecomment-843144980:98,error,error,98,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/454#issuecomment-843144980,1,['error'],['error']
Availability,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:434,avail,available,434,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850,2,"['avail', 'down']","['available', 'download']"
Availability,"Thanks a lot! I would suggest to temporarily remove `-DENABLE_WERROR=1` from the cmake calls in Azure and Travis. I'll try to look at your changes in more detail later. I tried the debian binaries on Friday. x64 worked fine, however the ARM build failed in the regression test. I ran it inside QEMU during the night. I hope Travis and the other changes I had done based on sse2neon will be helpful to solve the test failure.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-626641482:416,failure,failure,416,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-626641482,1,['failure'],['failure']
Availability,"Thanks again! . Here are my observations: ; * sensitivity hardly matters (with a restrictive evalue, the results are almost identical. With a permissive evalue, there are slightly more hits with an increased sensitivity) -> I'll stick with `s=1` or `s=2` for speed. ; * In fact, the evalue seems to be the restrictive factor (which makes sense, given that the peptides are so small and the database so large). With the default evalue of `0.001`, only 26k out of 630k peptides generate a match (all of them *are* contained in the database at least once). ; * `--comp-bias-corr 0` and `--mask 0` seem to be advantageous. With a permissive evalue of `1e7`, `630467/630487` peptides are found if the both options are set to 0. If they are set to 1, only 594113/630487 peptides are found. On the first sight, the missing peptides do not look particularly low complexity (e.g. `LASLSSVFFFIISFI`, `LKEKLNRNRENSTAT`, `NEGCNSNSSTPRQNT`). ; * With a sensitivity of `s=1`, `--comp-bias-corr 0` and `--mask 0` and an evalue of `1e7` *almost all* perfect matches are found (`630467/630487`). With `s>=2` and otherwise same settings *all* perfect matches are found. . ---. For now, I will, therefore, use the following settings and see how that works out: ; ```bash; --seed-sub-mat VTML40.out ; -s 2 ; --comp-bias-corr 0 --mask 0; --gap-open 16 ; --gap-extend 2 ; --min-length 9 ; --spaced-kmer-pattern 11011101 ; -e 10000000; -k 6 ; ```. ---. Here are the raw counts of matches. `biascorr = 0` implies `mask = 0`. ; ```console; > wc -l * | sort -n ; 1283115 AE009951.2_sens1_biascorr0_eval0.001_mmseqs.tsv ; 1283126 AE009951.2_sens4_biascorr0_eval0.001_mmseqs.tsv; 1283235 AE009951.2_sens2_biascorr0_eval0.001_mmseqs.tsv; 1419374 AE009951.2_sens1_biascorr1_eval0.001_mmseqs.tsv; 1419971 AE009951.2_sens2_biascorr1_eval0.001_mmseqs.tsv; 1420095 AE009951.2_sens4_biascorr1_eval0.001_mmseqs.tsv; 155001100 AE009951.2_sens1_biascorr1_eval10000000_mmseqs.tsv; 198438767 AE009951.2_sens2_biascorr1_eval10000000_mmseqs.ts",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160:586,mask,mask,586,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160,1,['mask'],['mask']
Availability,Thanks for clarifying. ; So now I'm on version 39572549e20ed90d8e9bb4ea02fd59d6041859be .; I get this error:. Query file: /tmp/2765600628860701936/top1; Target file: uniref100DB; Alignment database: /tmp/2765600628860701936/top1; Start writing file to /tmp/2765600628860701936/aligned; Time for merging files: 0 h 0 m 0 s; Could not get realpath of /tmp/2765600628860701936/top1_h!; Error: Extractalignedregion failed,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381178336:102,error,error,102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381178336,2,"['Error', 'error']","['Error', 'error']"
Availability,"Thanks for maintaining this great software! I'm having an issue with easy-taxonomy using GTDB (but not NCBI with the same query input), described below. Using a conda install of version 15.6f452. . Thanks for any help!. ## Expected Behavior; Completing without error. ## Current Behavior; Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Steps to Reproduce (for bugs). **Install**. ```bash; mamba create -y -n mmseqs2 -c conda-forge -c bioconda -c defaults mmseqs2==15.6f452; conda activate mmseqs2; ```. **DB setup**; ```bash; mmseqs databases GTDB mmseqs2-GTDB-db tmp; ```. **Making small test data**; ```bash; wget -O e-coli.fasta.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/005/845/GCA_000005845.2_ASM584v2/GCA_000005845.2_ASM584v2_genomic.fna.gz. gunzip e-coli.fasta.gz. grep -c "">"" e-coli.fasta; # there is only one contig, so safe to just pull some lines. printf "">contig_1\n"" > contigs.fasta; sed -n '100,1200p' e-coli.fasta >> contigs.fasta; printf "">contig_2\n"" >> contigs.fasta; sed -n '20000,20600p' e-coli.fasta >> contigs.fasta; printf "">contig_3\n"" >> contigs.fasta; sed -n '26000,26200p' e-coli.fasta >> contigs.fasta; # that's 3 contigs: 88,000 bps; 48,000 bps; and 16,000 bps; ```. **Running the program**; ```bash; mmseqs easy-taxonomy contigs.fasta mmseqs2-GTDB-db GTDB-tax-result tax-tmp \; --threads 20 --tax-lineage 1 --compressed 1 --remove-tmp-files 0; ```. ## MMseqs Output (for bugs). Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Context; Trying to get taxonomy output via GTDB with",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806:261,error,error,261,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806,5,"['Error', 'error']","['Error', 'error']"
Availability,Thanks for reporting this bug. It would be great if you could make the used fasta files available. It seems to be a problem while masking the sequence with tantan. Does --mask 0 crash as well?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52#issuecomment-350747754:88,avail,available,88,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52#issuecomment-350747754,3,"['avail', 'mask']","['available', 'mask', 'masking']"
Availability,"Thanks for the quick and detailed feedback! Partial answer:; 1) awk, zlib, bzip2, and omp are included in the FreeBSD base, so no package dependency needed.; 2) Generally, FreeBSD ports respect the user's env regarding build options and of course the binary package has to be pessimistic about hardware. I'll check on the baseline assumptions and what clang -O2 emits, though. I was also thinking of adding a package message suggesting that it be built from source with more agressive optimizations to get better performance. That's trivial to do with FreeBSD ports. I wanted to sneak the commit in before the quarterly branch coming next week so it's at least available in the next quarterly package set, I haven't put much effort into perfecting it yet. With your feedback I should be able to make some good improvements by then.; 3) Do you actually plan to continue support for 32-bit platforms? It's disabled for many bioinformatics ports already.; I'll look into the rest of your comments ASAP.; BTW, this is the first time in my lengthy career I've ported a C++/cmake project to any platform and got a build with zero warnings on the first try. Somebody on your end is doing some good work. ;-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680:661,avail,available,661,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680,2,['avail'],['available']
Availability,"Thanks for the quick reply!. I installed the latest version, now receiving another error:; /tmp/814303472506594710/taxonomy.sh: 23: /tmp/814303472506594710/taxonomy.sh: abspath: not found. And the process dies immediately.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381111417:83,error,error,83,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381111417,1,['error'],['error']
Availability,"Thanks for the reply, I can confirm I get the comparable counts for the number of clusters. 326662, 209915, and 123014; I am assuming the slight difference is in the downloaded data. However, I am confused by the fact that for a specific example (Q07343), the 70% cluster has 7 members whereas the 50% cluster only has 2. This seems... wonky (for want of a better word). I would expect that the number of members would be between the 50% and 90% count... am I missing something about how the tool actually works?. Addendum: I am expecting 2 members of the 50% cluster, per UniRef50 for Swiss-Prot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/220#issuecomment-514089710:166,down,downloaded,166,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/220#issuecomment-514089710,1,['down'],['downloaded']
Availability,"Thanks for the reply. I ran this command: . `mmseqs convertalis /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_query_db/mmseqs_B001_queryDB /Volumes/FireFly_Promise_Pegasus/Databases/mmseqs2_uniref90_db/UniRef90 /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/output.m8`. But received this error:. Input database ""/Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db"" has the wrong type (Generic); Allowed input: Alignment. Does this mean there was an issue with the `mmseqs search` command from the step before?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191535570:540,error,error,540,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191535570,1,['error'],['error']
Availability,Thanks for your detailed report! The issue you are pointing out is indeed a barrier. I noticed this myself. We remap the mmaped prefilter result file every 1 million queries. . I did this since I noticed a huge slow down if the memory of the machine is not enough to hold the whole alignment file in memory. It seems that the kernel paging is quite slow. . I maybe should add a check if the machine has enough memory to keep the whole file in memory.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369901479:216,down,down,216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369901479,1,['down'],['down']
Availability,"Thanks for your detailed response, right now our cluster is under; maintenance so I'll make sure to try what you say and close this issue if; the problem is solved.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-849749638:67,mainten,maintenance,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-849749638,1,['mainten'],['maintenance']
Availability,"Thanks for your fast response!; I can't reproduce the result, still facing problems with short peptides. . My commands are:. ```; mmseqs createdb IP.fasta IP_DB/IP_DB ; mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB . mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0 -k 5; mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0 -k 5. mmseqs search \; --comp-bias-corr 0 --mask 0 -e inf \; --spaced-kmer-pattern 1101101 -k 5 \; --alignment-mode 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp. mmseqs filterdb result_DB/result_DB bestResultDB/bestResultDB; ```. Can you share the full command you used?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-758752094:282,mask,mask,282,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-758752094,3,['mask'],['mask']
Availability,"Thanks for your prompt replies!. mmseqs search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq.outDB $SCRATCHDIR > $SCRATCHDIR/test.log. File $SCRATCHDIR/queryT.mmsq has 10000 lines, which I guess should confirm it has 10000 sequences. . prefilter /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 4.0 . Query database size: 313 type: Aminoacid; Estimated memory consumption: 979M; Target database size: 313 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:96,mask,mask,96,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497,3,['mask'],"['mask', 'mask-lower-case']"
Availability,"Thanks for your quick reply.; Yeah, --mask 0 apparently seems to change something, but the error basically stays the same:; But mentioning the masking, the data we have is already masked with tantan, does this pose a problem for mmseqs?. /local/jelvers/Masterthesis/temp//4778667373760070442/blastp.sh: line 86: 14547 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died. [query.txt](https://github.com/soedinglab/MMseqs2/files/1548211/query.txt); [target.txt](https://github.com/soedinglab/MMseqs2/files/1548212/target.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52#issuecomment-350753413:38,mask,mask,38,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52#issuecomment-350753413,6,"['Error', 'error', 'fault', 'mask']","['Error', 'error', 'fault', 'mask', 'masked', 'masking']"
Availability,"Thanks for your quick response! I wanted to make sure this was an uncommon error before escalating this to our HPC IT. They ended up upgrading the kernel on the node I was using, and the job finished successfully. It looked like some processes still entered D status but there wasn't an NFS timeout like before. This is all a little over my head, but the issue seems to be related to `kernel earlier than kernel-3.10.0-327.42.1.el7`, and the I/O from the analysis. Maybe that can help someone else if they run into issues running `easy-taxonomy` on HPC. I'll go ahead and close this issue now.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-797818932:75,error,error,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-797818932,1,['error'],['error']
Availability,"Thanks for your reply,; I have tried the following commands but got ""Segmentation fault"" right away whenn launching filterresult.; Any idea what could cause this?. mmseqs createdb FASTANUCLFILE FASTANUCLFILE.db; mmseqs cluster FASTANUCLFILE.db FASTANUCLFILE.db.clu /tmp/tmp_mmseqs/ -c 0.5 -s 6; mmseqs filterresult FASTANUCLFILE.db FASTANUCLFILE.db FASTANUCLFILE.db.clu FASTANUCLFILE.db.clu_filt --diff 100; MMseqs Version: fb39ca1ee88313974f285740faa856ea68509193; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Compositional bias 1; Allow deletions false; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 100; Threads 32; Compressed 0; Verbosity 3. Query database size: 19948 type: Nucleotide; Target database size: 19948 type: Nucleotide; Segmentation fault ] 0.00% 1 eta -",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/456#issuecomment-849892198:82,fault,fault,82,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/456#issuecomment-849892198,2,['fault'],['fault']
Availability,"Thanks for your reply,; You are right, I get a DB_clusterupdate and DB_clusterupdate.index when the process finishes. ; The reason why I though clusterupdate didn't finish is that when I try to extract the fasta file from DB_clusterupdate I get the following error:. > `mmseqs createseqfiledb DB_new DB_clusterupdate clu_rm`; > ; > I get another error:; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Min Sequences	1; > Max Sequences	2147483647; > HH format 	false; > Threads 	4; > Verbosity 	3; > ; > ; > Invalid entry in line 1!; > Invalid entry in line 2!; > Invalid entry in line 3!; > Invalid entry in line 4!; > Invalid entry in line 5!; > Invalid entry in line 6!. I thought that maybe DB_new didn't contain the link to the sequences that DB_clusterupdate refers to and the database that merges DB_trimmed and DB_new is missing, probably because clusterupdate stopped before it was generated due to the problems I refer in the first post. But if this is not the case, how can I generate the fasta file from DB_updatecluster? Which database should I use?. Thanks beforehand.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-281028101:259,error,error,259,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-281028101,2,['error'],['error']
Availability,"Thanks for your reply. I just used; ```; conda install -c conda-forge -c bioconda mmseqs2; ```; I thought everything installed properly, but perhaps I missed an error...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895344007:161,error,error,161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895344007,1,['error'],['error']
Availability,"Thanks for your response; that's good news; I'm really looking forward this next release!; But if I want to use the taxid field right away I can still download the code from git and compile it, correct?; Guillaume",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559477953:151,down,download,151,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559477953,1,['down'],['download']
Availability,"Thanks milot-mirdita!. I will take a closer look, but think I may have come up with a solution using bbtools gi2taxid to encode the taxonomy IDs in the fasta headers:. A simple for-do loop script like this:. `for i in *.fna.gz; do; 	F=`basename $i .fna.gz`;. gi2taxid.sh in=${i} out=${F}_taxID.fna.gz \; 	server=t \; 	taxpath=${TAXPATH} \; 	-Xmx64g \; 	pigz=6 unpigz=t bgzip=t preferbgzip=t zl=9;. done;`. This isn't exactly full taxonomy support, but I am then able to pull the taxIDs from either the tophit or lca reports and can analyze them downstream using something like taxonkit (https://bioinf.shenwei.me/taxonkit/). Not as optimal as built in taxonomy support within mmseqs2 and running LCA will be an additional challenge, but it is a partial and useful solution for us. Thanks! Look forward to seeing full NT taxonomy support!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/412#issuecomment-780925754:545,down,downstream,545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/412#issuecomment-780925754,2,['down'],['downstream']
Availability,Thanks! Do I need to download and recompile mmseqs? or can I just replace with the fixed file?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/845#issuecomment-2122641918:21,down,download,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/845#issuecomment-2122641918,1,['down'],['download']
Availability,"Thanks! That worked for splitting the database; however, I ran into an issue when running `mmseqs taxonomy` on each split. The error is:. ```; Error: Prefilter died; Error: First search died; Invalid database read for database data file={SPLIT#_OF_MY_SEQ_DATABASE}; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-468319873:127,error,error,127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-468319873,3,"['Error', 'error']","['Error', 'error']"
Availability,"Thanks! just sent you by email (@mpibpc) link for download the query file (it is ~1Gb size); Thanks for all the help, please let me know if / how I can help more with this :-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-879016235:50,down,download,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-879016235,1,['down'],['download']
Availability,"Thanks!. So I'm currently testing linclust on some simulated data (I'm working on clustering a specific type of sequences: Iso-Seq reads). linclust ran fine for 100,000 and 500,000 reads, but died for 1,000,000 reads with the error below. I'm submitting the job on a node with 512Gb and 32 cores (but running with --threads 8). . ```; Program call:; --threads 8 /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/ccs/ENSEMBL/1000000/ccs.fasta /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_out /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 8; Verbosity 3; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Alphabet size 21; Kmer per sequence 21; Mask Residues 1; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner. Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/ccs/ENSEMBL/1000000/ccs.fasta /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input --max-seq-len 65535 --dont-split-seq-by-len --dont-shuffle --id-offset 0 -v 3. MMseqs Version: 016429915362d184505627148d07f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120:226,error,error,226,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120,1,['error'],['error']
Availability,"Thanks, I don't need the output of the awk call anymore, since I tracked down whats going wrong.; It just a bit tricky to fix correctly and not waste a lot of RAM in doing so.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-497742333:73,down,down,73,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-497742333,1,['down'],['down']
Availability,"Thanks, I’ll give that a try! Will the database be compatible with the current release version, or will I have to use the git version for downstream analysis too?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759212799:138,down,downstream,138,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759212799,1,['down'],['downstream']
Availability,"Thanks. 180 G available. I was cheating here and just testing on a shared node. I was also just running mmseqs myself from the command line (but SemiBin does the same). Do you mean larger chunks, so it runs quicker, rather than smaller chunks?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894191657:14,avail,available,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894191657,1,['avail'],['available']
Availability,"Thanks. tmp is on a local disk, but I only have 1TB availabe. That disk disk space gets full during execution, although I only want to run about 700K sequences against UniRef50. I will try --remove-tmp-files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/478#issuecomment-896412877:52,avail,availabe,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478#issuecomment-896412877,1,['avail'],['availabe']
Availability,"That is odd, I'll try to reproduce the issue sometime until the end of the week. Does the error also happen if you use a memory limit less than the machine has: e.g. `--split-memory-limit 1G`?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/253#issuecomment-562186908:90,error,error,90,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253#issuecomment-562186908,1,['error'],['error']
Availability,"That looks already like an impressive amount of work for a PoC. . A few (disjointed) thoughts:. * How is error management handled in your project? We rely on `exit()` quite heavily as you have probably noticed already and in these cases we don't free memory or file handles anymore either. Refactoring that would be a major undertaking. * We would prefer to not give API/ABI stability guarantees, ideally we would only have to worry about keeping the command line interface as stable as possible. Personally, I would have tried auto-generating bindings by extracting information from `MMseqsBase.cpp` and `Parameters.h/cpp` and keep MMseqs2 as a separate binary around. * Another thing that we have only realized a few years after having started MMseqs2 is that we have essentially build a database management system for sequence data. I think if we had the chance to reimagine MMseqs2 as something new and consumable directly through APIs I would emphasize this aspect. * Do you have any experience with Python and Rust? There is a good chance we will add the first Rust dependency within the next half year or so and we are interesting in investigating something so new modules could be written in Rust instead of C++ (but continue to use the existing C++ classes). This might make the build system much more complicated in the near future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461:105,error,error,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461,1,['error'],['error']
Availability,That's my initial guess actually 😄 I got the same error for MERC and metaclust_nr and I found they all have stop codon symbols in it. I really appreciate your help in investigating this issue. Let me remove `*` symbols and run it again.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649912553:50,error,error,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649912553,1,['error'],['error']
Availability,The `Killed` error message sounds like your job system killed the job for running out of memory. You can use the `--split-memory-Limit` parameter to adjust the maximum memory MMseqs2 is allowed to use. By default it will try to use as much as the system has.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-713695619:13,error,error,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-713695619,1,['error'],['error']
Availability,"The `No datafile could be found` error seems to be caused by the fact that the data file in question is a symlink:. ```; lrwxrwxrwx 1 nyoungblut abt3 82 Jul 23 19:44 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:33,error,error,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319,1,['error'],['error']
Availability,"The `convertalis` command exits with an error when no match is found in the DB. Maybe this could be caught by the web server and an informative message could be displayed in the results page (instead of the standard `Error!`).; ```; mmseqs-web-worker_1 | easy-search /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/job.fasta /opt/mmseqs-web/databases/test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/alis_test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp --dont-shuffle --db-output --db-load-mode 2 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --search-type 3 --strand 2 --greedy-best-hits; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | MMseqs Version: 	d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | Substitution matrix 	blosum62.out; mmseqs-web-worker_1 | Add backtrace 	false; mmseqs-web-worker_1 | Alignment mode 	3; mmseqs-web-worker_1 | E-value threshold 	0.001; mmseqs-web-worker_1 | Seq. id. threshold 	0; mmseqs-web-worker_1 | Min. alignment length 	0; mmseqs-web-worker_1 | Seq. id. mode 	0; mmseqs-web-worker_1 | Alternative alignments 	0; mmseqs-web-worker_1 | Coverage threshold 	0; mmseqs-web-worker_1 | Coverage mode 	0; mmseqs-web-worker_1 | Max sequence length 	65535; mmseqs-web-worker_1 | Compositional bias 	1; mmseqs-web-worker_1 | Realign hits 	false; mmseqs-web-worker_1 | Max reject 	2147483647; mmseqs-web-worker_1 | Max accept 	2147483647; mmseqs-web-worker_1 | Include identical seq. id. 	false; mmseqs-web-worker_1 | Preload mode 	2; mmseqs-web-worker_1 | Pseudo count a 	1; mmseqs-web-worker_1 | Pseudo count b 	1.5; mmseqs-web-worker_1 | Score bias 	0; mmseqs-web-worker_1 | Gap open cost 	11; mmseqs-web-worker_1 | Gap extension cost 	1; mmseqs-web-worker_1 | Threads 	24; mmseqs-web-worker_1 | Compressed 	0; mmseqs-web-worker_1 | Verbosity 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:40,error,error,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,2,"['Error', 'error']","['Error', 'error']"
Availability,"The `createindex` module can not split index, we consider this feature for the future. Just call search without `createindex`. It will split the database automatic according to the maximum available memory or the memory defined with the `--split-memory-limit` parameter.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/161#issuecomment-462115476:189,avail,available,189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161#issuecomment-462115476,1,['avail'],['available']
Availability,"The `databases` module is new, the documentation refers to the latest git version. It will be included in the next MMseqs2 release we are preparing and hopefully release in the next few days. You can already install MMseqs2 from git or download precompiled static binaries to try out the latest features.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584029741:236,down,download,236,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584029741,1,['down'],['download']
Availability,The `databases` workflow downloads this file:; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/genomic_files_reps/gtdb_proteins_aa_reps.tar.gz,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-992990876:25,down,downloads,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-992990876,1,['down'],['downloads']
Availability,"The `expandaln` command fails to properly read index, producing an '`Invalid database read for database data`' error. ## Expected Behavior. Command to run without error messages. ## Current Behavior. Command fails instantly with following error message:. ```; Invalid database read for database data file=db/human.idx, database index=db/human.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); ```bash; mkdir db; mkdir job; mmseqs createdb uniprotkb_human.fasta db/human; mmseqs createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1; mmseqs createdb query.fasta job/qdb. mmseqs search job/qdb db/human job/res job/tmp1 --num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:111,error,error,111,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,3,['error'],['error']
Availability,"The `ln -s` commands are required for `cstranslate` to work. I am confused why the error message is saying `'clu_msa'` while the output name you used for `result2msa` is `cluMsa`. I think something is misnamed. Btw you can also drop the `A /path/to/cs219.lib -D /path/to/context_data.lib` parameters, they are not needed anymore in the latest HH-suite release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-974118499:83,error,error,83,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-974118499,1,['error'],['error']
Availability,The `taxid` field support was added only a few weeks ago and is only available through the latest git version. It will be included in the next release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559467190:69,avail,available,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559467190,1,['avail'],['available']
Availability,"The `unpackdb` command gives me the same output as the byte offset reading approach I was doing. Seems I re-invented that command without knowing it. However, when I run the `unpackdb` command I get a file per query with its alignments in the internal mmseqs2 format, I then want to convert this to the a3m+alignment format with `result2msa --msa-format-mode 6`, but I still get the same error as above, that the file produced by the `unpackdb` command has the wrong type. I don't really understand why this is the case, since previously when I tested the pipeline with a single sequence queryDB this `result2msa` method worked just fine. Similarly, I am able to run the `result2msa` command on the file which I unpack, but then not on the unpacked files. . Is there another command for converting this internal format MSA to the a3m+alignment format (equivalent to result2msa --msa-format-mode 6)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/850#issuecomment-2180483781:388,error,error,388,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/850#issuecomment-2180483781,1,['error'],['error']
Availability,"The above works great! Thanks a lot. . I have another question: my understanding is that `pdb_seq` would be bigger than `pbd`, and therefore have the same [or more] number of found matching sequences than `pdb`. However, I am seeing a decrease as illustrated by the van diagrams below: ; ![image](https://github.com/soedinglab/MMseqs2/assets/8103108/4e44a811-fd66-4c01-883f-196b8b0c2342); ![image](https://github.com/soedinglab/MMseqs2/assets/8103108/a0dd407f-4f3c-4696-a7fe-7ca86d11b1d7). The search parameters used in both cases are the same, as shown below: ; `mmseqs search /tmp/queryDB /root/mmseqs2_db/{db} /tmp/resultDB tmp -a --max-seqs 1 -s 7 --comp-bias-corr 0 --mask 0`. Am I missing anything? . Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2009692254:673,mask,mask,673,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2009692254,1,['mask'],['mask']
Availability,The case of SEQUENCETEST is interesting. ; MMseqs2 maskes the majority this sequence as low complexity. ; For example sequence 0000_A looks like this after low complexity masking:; ```; >0000_A; XXXXEXCXXXXXXXXXXXCXXXXXXXXXXXCXXXXXXXXXXXCXXXXXXXQXXXCEXXST; ```; I have added a flag `--mask` to turn the filter on and off. Please pull the newst version. . Another problem is the amino acid compostion correction we apply on the sequence. The bias correction decrease decrease the --k-score for each k-mer. You can deactive it by using the flag `--comp-bias-corr`. . I could successfuly find all hits by search with the following command:; `mmseqs search DB DB resultDB tmp -a --mask 0 --comp-bias-corr 0`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275321413:51,mask,maskes,51,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275321413,4,['mask'],"['mask', 'maskes', 'masking']"
Availability,"The clustering is available on the website: http://wwwuser.gwdg.de/~compbiol/uniclust/2018_08/; However, there is no Uniclust50 HHsuite database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/384#issuecomment-743114975:18,avail,available,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/384#issuecomment-743114975,1,['avail'],['available']
Availability,The clustering workflow creates a new sequence database (NEWMAPDB) that has consistent identifiers with already existing sequences in OLDDB. All tools further down the pipeline expect NEWMAPDB as input and NEWDB can usually be deleted. I'll update the documentation. Sorry for the confusion. Please let me know if you still have issues.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404560008:159,down,down,159,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404560008,1,['down'],['down']
Availability,"The command I run:; result2msa testDB testDB testDB.clu testDB.msa --msa-format-mode 1 . with output:; MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Allow deletions 	false; Compositional bias 	1; Compositional bias 	1; MSA format mode 	1; Summary prefix 	cl; Skip query 	false; Filter MSA 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	0; Threads 	6; Compressed 	0; Verbosity 	3. [=================================================================] 100.00% 2.85K 0s 1ms ; [=================================================================] 100.00% 2.85K 0s 2ms ; Time for merging to testDB.msa_sequence.ffdata: 0h 0m 0s 33ms; [=================================================================] 100.00% 2.85K 0s 98ms ; [=================================================================] 100.00% 2.85K 0s 99ms ; Time for merging to testDB.msa_header.ffdata: 0h 0m 0s 3ms; Query database size: 2846 type: Aminoacid; Target database size: 2846 type: Aminoacid; Segmentation fault: 11 ] 0.00% 1 eta -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/724:1211,fault,fault,1211,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/724,1,['fault'],['fault']
Availability,The current issues seem to be:; * There seems to be an issue with older gcc and the use of`isnan` in SIMDe; * Alignments on both clang and gcc get stuck eventually; * macOS clang has a weird compile error; * GCC+ASan crashes with an internal error somewhere completely random (might be solved by using a newer gcc?). I don't have time to look at the issues until later this week though :/,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627328740:199,error,error,199,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627328740,2,['error'],['error']
Availability,"The default setting for threads of mmseqs2 is to just use all threads. This is not a safe default, especially if multiple people are working on the same system. One student who does not read the manual *carefully* can crash everything for everyone.; Would you consider setting the default to 1?; I realize this slows things down for people who *don't* read the manual/help-function. But I believe it is better to have safe defaults and mildly punish the people who *don't* read instructions than to have convenient defaults that severely punish everybody else...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/539:324,down,down,324,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/539,1,['down'],['down']
Availability,"The docs for `--split-memory-limit` say that this number should be provided in units of megabytes. However, it looks like it is actually being interpreted as kilobytes. Perhaps there is an inconsistant conversion somewhere, e.g. multiplying by 1024 instead of 1024^2?. ```shell; [saladi1@comet-ln3 mmdb]$ mmseqs search -h | grep mem; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; ```. When I specify `--split-memory-limit 1000000` (1 TB) to `mmseqs search`, it looks like `mmseqs prefilter` is called carrying this parameter through, however, it dies with the following message:. > Can not fit databased into 1024000000 byte. Please use a computer with more main memory. This is odd because, 1024000000 bytes = 1 GB not 1 TB (off by a factor of 1e3). See call and output below. I'm not sure how many places this unit conversion is done, but in the context of `mmseqs prefilter` it does look like the parameter is multiplied by 1024 (as opposed to 1024^2). https://github.com/soedinglab/MMseqs2/blob/d32e75025c1bd419188d4892db863a0f02b30ddf/src/prefiltering/Prefiltering.cpp#L184. ## MMseqs Output; ```shell. [saladi1@comet-30-01 mmdb]$ mmseqs search \; > euk_screen/screenDB \; > uref_euk85_rep/uref_euk85_rep \; > euk_screen_prof \; > mmtemp \; > --local-tmp /scratch/saladi1/22776241/ \; > --remove-tmp-files 1 \; > --split-memory-limit 1000000; search euk_screen/screenDB uref_euk85_rep/uref_euk85_rep euk_screen_prof mmtemp --local-tmp /scratch/saladi1/22776241/ --remove-tmp-files 1 --split-memory-limit 1000000. MMseqs Version: 	fac81fa7a63c1205209d4acbc46ce2209abcaa8a; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/193:528,avail,available,528,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193,1,['avail'],['available']
Availability,"The documentation says in the [""Convert an external MSA into a profile""](https://github.com/soedinglab/mmseqs2/wiki#convert-an-external-msa-into-a-profile) that . > It is possible to use MSAs in FASTA, A3M and CA3M format. . But when I try using an MSA in fasta format to build a profile database and search with it, for example; ```; mmseqs convertmsa myMSA.fasta msaDb; mmseqs msa2profile msaDb profileDB; mmseqs search profileDB targetDB hitDB tmp --start-sens 1 --sens-steps 3 -s 7; ```; I get ; ```; Input tmp/17085414453924316708/pref_0 does not exist; Error: Alignment died; ```; Looking at `mmseqs convertmsa -h`, it says `usage: mmseqs convertmsa <i:msaFile.sto[.gz]> <o:msaDB> [options]`. I tried using a stockholm formatted msa and did the same the above, and was able to search with no errors. Is the documentation wrong about FASTA MSAs being able to be used, or is there some issue? Or perhaps I am mistaken by what the documentation is trying to say.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/437:559,Error,Error,559,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/437,2,"['Error', 'error']","['Error', 'errors']"
Availability,The error is happening in the call for ksw_extz2_sse in BandedNucleotideAligner::align. I have made a few tests with increasing number of sequences in the database. I tested up to 50 000 sequences and it went fine. I have also done a test including the longer sequence and about 5000 other sequences and it went fine.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-612083536:4,error,error,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-612083536,1,['error'],['error']
Availability,"The error occurs with version 9.d36de, but not 8.fac81. Here's the entire log:. ```; $ mmseqs taxonomy -e 1e-5 --max-seqs 200 --lca-ranks ""kingdom:phylum:class:order:family:genus:species"" --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db clusters_rep-seqs.part-14_tax_db tmp_part-14; taxonomy -e 1e-5 --max-seqs 200 --lca-ranks kingdom:phylum:class:order:family:genus:species --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db clusters_rep-seqs.part-14_tax_db tmp_part-14. MMseqs Version: 	9.d36de; Substitution matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	200; Previous max results per query; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:4,error,error,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['error'],['error']
Availability,"The first two issues should be handled as of commit cbb542af98095210bad8399cda02b67487d0bdde.; The third issue is a bit trickier. here's why:; The sliced search workflow (searchslicedtargetprofile.sh) is where the available disk (regular tmp folder) is taken into account to determine the number of profiles to process (the information is passed to it from search). `--local-temp` is a parameter, which is relevant only in MPI mode. Assuming all MPI nodes have the same available disk in their `--local-tmp` (does this even hold?), then the way to take it into account is to set the disk limit in the sliced search workflow as the minimum between the regular tmp folder (on the master node) and the available disk space on the master's `--local-temp` times the number of MPI nodes. However, the number of MPI nodes is determined through quite a complicated logic in the Prefilter constructor, which is called from within the sliced search workflow **after** it calculates the disk space limit. An exit with error could be added from within Prefilter (asking to re-run the program with `--disk-space-limit` equal to local-size x Nnodes) but it is not very elegant as the run already started by then.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/192#issuecomment-631535791:214,avail,available,214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/192#issuecomment-631535791,4,"['avail', 'error']","['available', 'error']"
Availability,The following options (available in `mmseqs search` but not in `mmseqs prefilter`) would be extremely useful when running a prefilter analysis:; ```; -e evalue cut-off; --max-accept max number of hits to report (currently all matches are reported creating very big files); --start-sens start sensitivity; --sens-step-size sensitivity step sizes; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/22:23,avail,available,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/22,1,['avail'],['available']
Availability,"The function summarizealis is not documented in the wiki. But the help messege does not print the relevant information in https://github.com/soedinglab/MMseqs2/blob/6b9388469a41935813f5d207d6d149767feb4c42/src/MMseqsBase.cpp#L1028. Could this be the case for other functions?. I use mmseqs v 14.7e284 installed with mamba. See ; ```; $ mmseqs summarizealis -h. usage: mmseqs summarizealis <i:alignmentDB> <o:summerizedDB> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: common:; --threads INT Number of CPU-cores used (all by default) [16]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]. references:; - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017); - Mirdita M, von den Driesch L, Galiez C, Martin M, Soding J, Steinegger M: Uniclust databases of clustered and deeply annotated protein sequences and alignments. Nucleic Acids Research 45(D1), D170-D176 (2017). ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/680:649,error,errors,649,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/680,1,['error'],['errors']
Availability,"The good news is that the updated code splits the idx rather evenly: . ```; -rw-r--r-- 1 nyoungblut abt3 371M Dec 9 22:32 db.idx.0; -rw-r--r-- 1 nyoungblut abt3 37G Dec 9 22:32 db.idx.1; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.2; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.3; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.4; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.5; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.6; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.7; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.8; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.9; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.10; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.11; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.12; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.13; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.14; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.15; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.16; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.17; -rw-r--r-- 1 nyoungblut abt3 3.0K Dec 9 22:32 db.idx.index; -rw-r--r-- 1 nyoungblut abt3 4 Dec 9 22:32 db.idx.dbtype; ```. The bad news is that `mmseqs search` still generates mmap errors (`Failed to mmap memory dataSize=12723929088`) unless I provide ~240G of memory (parallel=8, h_vmem=29G). So, it appears that splitting the idx more evenly didn't help with the memory requirements for `mmseqs search`. Maybe the issue is that the `idx.1` split is still rather large?. Note: I still require ~240G of memory if I just use 1 thread (parallel=1, h_vmem=240G)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742364404:1256,error,errors,1256,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742364404,1,['error'],['errors']
Availability,"The issue is basically that MMseqs2 cannot extract any putative protein ORFs from the nucleotide reads since the default minimum length threshold is too long. You can reduce this threshold with something like `--min-length 15` (15*3=45 nucl min length). The error message is pretty bad, we should fix this. Btw `plass` include a `mergereads` module to produce merged reads from paired reads and produces a sequence database that can then be read by `mmseqs search` that might be useful to extend some of the read lengths a bit and produce better annotations.; You can also first run the complete `plass` workflow to produce assembled proteins that can be better annotated. Plass will also struggle with the same parameter though and would also need a shorter `--min-length`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322:258,error,error,258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322,1,['error'],['error']
Availability,"The issue is fixed in git, but not part of a release yet. You can download precompiled binaries from https://mmseqs.com/latest that contains the fix or compile MMseqs2 from source.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1741118480:66,down,download,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1741118480,1,['down'],['download']
Availability,"The next step would be to try a MMseqs2 build instrumented with ASan. Sadly ASan doesn't support static builds so you would have to compile MMseqs2 yourself:. ```; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2;; mkdir build; cd build; cmake -DHAVE_SANITIZER=1 -DCMAKE_BUILD_TYPE=ASan ..; make -j $(nproc --all); ```. The new binary in `src/mmseqs` would then hopefully be able to tell what is going wrong:. ```; Path-To-Where-You-Git-Clone/MMseqs2/build/src/mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814313609:969,mask,mask-profile,969,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814313609,1,['mask'],['mask-profile']
Availability,The parameter `--max-seqs` was always available but there was a stopped mmseqs from printing out the parameter. The printout problem should be resolved now. . How do you benchmark the performance?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-377788647:38,avail,available,38,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-377788647,1,['avail'],['available']
Availability,"The parameter was wrongly named. In release 11 it's now called `--shuffle` and 0 means no shuffling and 1 shuffling is enabled. However I would recommend not changing them. They are an internal optimization to help MMseqs2 not lose sensitivity in one specific case. If a machine does not have enough RAM (or if MPI is used) the target database is split and processed into multiple chunks. If one chunk is too redundant/similar/biased then `--max-seqs` can explode within this one chunk and we might lose good hits. By more or less randomly assigning sequences to any chunk we can prevent this. This parameter does not affect the order of the results in the result file (i.e. the `.m8` file). This will still pretty much random, as each query is processed by a different thread and the order of results written is thus not deterministic. If you want a sorted result file I would recommend to use `sort`:; `sort -s -k1,1 result.m8 > result_sorted.m8`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531:409,redundant,redundant,409,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531,1,['redundant'],['redundant']
Availability,"The positions refer to the original sequences, in this case the query positions refer to nucleotide positions and the target positions refer to amino acid positions. The alignment happens on the amino-acid level, after the alignment we recover the original positions with the `offsetalignment` module within the `search` workflow.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/570#issuecomment-1173282206:236,recover,recover,236,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/570#issuecomment-1173282206,1,['recover'],['recover']
Availability,"The prefilter results from the previous run are obscuring the real error. Could you empty the tmp folder and start again?. This part: ""[pwd]/mmseqs_tmp/pref_4_tmp_0.0: File exists""",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/11#issuecomment-274592316:67,error,error,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11#issuecomment-274592316,1,['error'],['error']
Availability,"The regression test finished without errors, however the binary could not be uploaded. Maybe its a problem with the PR. I merged the commit into the master. ; So MMseqs2 is one step closer to be a great taxonomy classification tool. Thanks a lot!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/197#issuecomment-487700932:37,error,errors,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/197#issuecomment-487700932,1,['error'],['errors']
Availability,The representative sequence obtained by easy-linclust is still redundant,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:63,redundant,redundant,63,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['redundant'],['redundant']
Availability,"The seg-fault errors that I'm getting with `mmseqs taxonomy` don't appear to be due to the 2 extra split files. Even when tracking all `*.idx` files so they don't accidentally get deleted, I get the following error:. ```; taxonomy -e 1e-5 --max-seqs 200 --num-iterations 2 --start-sens 1 --sens-steps 3 -s 6 --lca-ranks superkingdom,kingdom,phylum,class,order,family,genus,species --threads 8 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/seqs_tax_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP. MMseqs Version: 	13.45111; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	superkingdom,kingdom,phylum,class,order,family,genus,species; Column with taxonomic lineage 	0; Compressed 	0; Threads 	8; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1e-05; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matchin",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:8,fault,fault,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,3,"['error', 'fault']","['error', 'errors', 'fault']"
Availability,"The static binaries take about one hour to build (running the tests take some time).; GCC 9 would be completely sufficient to compile, we support (and check for) down to GCC 4.9 and clang 5.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771983647:162,down,down,162,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771983647,1,['down'],['down']
Availability,"The version of MMseqs2 is: MMseqs2 Version: 12.113e3. CD-HIT command is: ; `cd-hit -i all_protein_final_95_rep.fasta.1 -c 0.95 -aS 0.9 -d 200 -M 0 -T 40 -g 0 -l 30 -o all_protein_final_95_rep_95_1.fasta`. log of default linclust is; kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N01",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:656,mask,mask,656,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"The version on linuxbrew is 8-fac81, and worked nicely when changing de k-mer size. ```; Program call:; search pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 --threads 10 . MMseqs Version: 8-fac81; Substitution Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Compressed 0; Verbosity 3; Seed Substitution Matrix VTML80.out; Sensitivity 7.5; K-mer size 6; K-score 2147483647; Alphabet size 21; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Mask lower case residues 0; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:970,Mask,Mask,970,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,2,['Mask'],['Mask']
Availability,The whole database is bit large to upload but all of the sequence files are available on NCBI so you can recreate it.; ```; 002572	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Ambystoma_mexicanum/latest_assembly_versions/GCA_002915635.3_AmbMex60DD/GCA_002915635.3_AmbMex60DD_genomic.fna.gz; 002700	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Ormyrus_pomaceus/latest_assembly_versions/GCA_900474385.1_Opom/GCA_900474385.1_Opom_genomic.fna.gz; 002828	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Bombus_difficillimus/latest_assembly_versions/GCA_014737525.1_ASM1473752v1/GCA_014737525.1_ASM1473752v1_genomic.fna.gz; 002956	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Ixodes_persulcatus/latest_assembly_versions/GCA_013358835.1_BMI_IPER_1.0/GCA_013358835.1_BMI_IPER_1.0_genomic.fna.gz; 003084	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Drosophila_paulistorum/latest_assembly_versions/GCA_018151315.1_ASM1815131v1/GCA_018151315.1_ASM1815131v1_genomic.fna.gz; 003212	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Stichodactyla_mertensii/latest_assembly_versions/GCA_011800005.1_ASM1180000v1/GCA_011800005.1_ASM1180000v1_genomic.fna.gz; 003340	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Junonia_litoralis/latest_assembly_versions/GCA_018234725.1_SRR10765697/GCA_018234725.1_SRR10765697_genomic.fna.gz; 003468	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Emesis_heterochroa/latest_assembly_versions/GCA_018236145.1_SRR10158617/GCA_018236145.1_SRR10158617_genomic.fna.gz; 003596	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Armadillidium_vulgare/latest_assembly_versions/GCA_004104545.1_Arma_vul_BF2787/GCA_004104545.1_Arma_vul_BF2787_genomic.fna.gz; 003724	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Rotaria_socialis/latest_assembly_versions/GCA_905331295.1_Rs_AK15_reference_genomic_v1/GCA_905331295.1_Rs_AK15_reference_genomic_v1_genomic.fna.gz; 000675	https://ftp.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/464#issuecomment-908476824:76,avail,available,76,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/464#issuecomment-908476824,1,['avail'],['available']
Availability,"Then I am quite confused :D . Would it be possible to share the FASTA file that causes this error? If not, can you try to ""bisect"" the file and try to convert each half until you identify what entry might be broken.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759874599:92,error,error,92,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759874599,1,['error'],['error']
Availability,"There is not that much downside to increasing the kmer-per-seq to 2000. It will slow down linclust somewhat, but for only 2M entries it shouldn't really matter. You might want to use `--kmer-per-seq-scale` though. This parameter adds additional k-mers linearly based on the sequence length. By default, this is set to 0.2 for nucleotide sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033442320:23,down,downside,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033442320,2,['down'],"['down', 'downside']"
Availability,There you go. . These contigs specifically raise the error I uploaded. . [BL090113.txt](https://github.com/soedinglab/MMseqs2/files/6405609/BL090113.txt),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-830092919:53,error,error,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-830092919,1,['error'],['error']
Availability,These are my commands. ```; mmseqs createdb all.fasta all.mmseq; mmseqs linclust all.mmseq all.cluster tmpDir --threads 20 -e 1e-6 --min-seq-id 0.8 --coverage 0.8; mmseqs createtsv all.mmseq all.mmseq all.cluster all.cluster.tsv; mmseqs result2repseq all.mmseq all.cluster all.representatives; mmseqs result2flat all.mmseq all.mmseq all.representatives all.representatives.fasta --use-fasta-header; ```. I select set of clusters using `all.cluster.tsv` and the point is to recover only the clusters that i want.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/247#issuecomment-559394438:473,recover,recover,473,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/247#issuecomment-559394438,1,['recover'],['recover']
Availability,This error is occures because to the amount of sequences in the set. If there are more threads than sequences the `kmermatcher` module will fail. This should be fixed at the current version a357368b3e336a6a42772fb085fbc141df50b8ac. Could you please checkout the most recent version and rerun it?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/35#issuecomment-309965032:5,error,error,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/35#issuecomment-309965032,1,['error'],['error']
Availability,"This error is very unexpected and I can't imagine how/why it could happen. I don't think it is related to this old issue though. If you can arrange some interactive session, i'd happy to take a look.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-842292089:5,error,error,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-842292089,1,['error'],['error']
Availability,"This feature is only present in git MMseqs2. We still haven't managed to make a new release, since we were busy with other projects and also some personal stuff. Things should hopefully start to stabilize soon, so we might finish up a new MMseqs2 release. In the meantime you can use the precompiled binaries available at https://mmseqs.com/latest.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1159577278:309,avail,available,309,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1159577278,1,['avail'],['available']
Availability,"This feature was meant for turning a bunch of fasta files in form of a DB (e.g., produced by `tar2db`) into a normal MMseqs2 sequence databases. It is being used for this purpose in the `databases` downloader workflow. . If you want to consume sequence dbs and produce new sequence dbs, i would suggest to add a check for the presence of a header db and only then do your new code.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/545#issuecomment-1069315337:198,down,downloader,198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/545#issuecomment-1069315337,1,['down'],['downloader']
Availability,"This isn't really a bug but an idea for improvement: I'd like to know if there's a simple way to tell ""mmseqs databases"" to use a European mirror site to download the uniref family databases. Currently it takes ""mmseqs database"" (and even wget) more than 3 days to download uniref100 from where I am in France (using ftp.uniprot.org/), whereas downloading individual DBs from the Swiss mirror site (https://ftp.expasy.org/databases/uniprot/) takes only a few tens of minutes. Thanks to all your team for your work and for this magnificent tool, mmseqs.; Guillaume",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/791:154,down,download,154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/791,3,['down'],"['download', 'downloading']"
Availability,"This issue is fixed in Git, but not part of a release yet. I think I fixed it shortly after the last release. You can download precompiled binaries at mmseqs.com/latest. These 5 lines are intended to call the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:118,down,download,118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067,1,['down'],['download']
Availability,This looks about right. What's the error message?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1464195021:35,error,error,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1464195021,1,['error'],['error']
Availability,This looks pretty bad:; ```; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; ```. Can you try using `--mask 0`? Also add `-k 5 --spaced-kmer-pattern 110111`. This should allow matching sequences that are 7 residues long.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773238581:170,mask,mask,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773238581,1,['mask'],['mask']
Availability,This might either be a masking thing or a compositonal bias correction issue. In the web-server you can add --mask 0 --comp-bias-corr 0 to both the indexing and search parameters json field (delete the .idx files first). Same parameters for the command line Foldseek.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717#issuecomment-1588561092:23,mask,masking,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717#issuecomment-1588561092,2,['mask'],"['mask', 'masking']"
Availability,"This one should be easy to fix, Martin!. ## Expected Behavior; Help says:; ```; --cov-mode INT 0: coverage of query and target; ...; 5: short seq. needs to be at least x% of the other seq. length [5]. ```. ## Current Behavior; `mmseqs easy-cluster all.faa all tmp --cov-mode 5 -c 0.85 --threads 64; `; exists with error:; Unknown coverage mode 5. ## MMseqs Output (for bugs); ...; ```; cluster tmp/10137019871064957114/input tmp/10137019871064957114/clu tmp/10137019871064957114/clu_tmp --max-seqs 20 -c 0.85 --cov-mode 5 --spaced-kmer-mode 1 --threads 64 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; Unknown coverage mode 5.; Error: Search died. ```. ## Context; Coverage mode 5 is important because it's the only option that ensures that clustered sequences are around same size, which is crucial for determining orthology. Alternatively if size similarity can be ensured otherwise (as a new option), then this option will be freed up to handle alignment coverage proper. This would also be faster since only similarly sized sequences would be compared. ## Your Environment; MMseqs2 version: 12.113e3; Server: 72 thread Intel(R) Xeon(R) CPU E5-2699 v3 @ 2.30GHz; OS: Ubuntu Server 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/371:314,error,error,314,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/371,2,"['Error', 'error']","['Error', 'error']"
Availability,"This option is available for mmseqs search, but not available for mmseqs linclust or mmseqs cluster",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/75#issuecomment-375145376:15,avail,available,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/75#issuecomment-375145376,2,['avail'],['available']
Availability,This should be now available in our newest release: https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1277799240:19,avail,available,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1277799240,2,['avail'],['available']
Availability,This sounds like a filesystem error while closing the result file. Could it be possible that the system ran out of space?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/550#issuecomment-1088800086:30,error,error,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/550#issuecomment-1088800086,1,['error'],['error']
Availability,"Thread 0x2aaac7392700 (LWP 8633)]; [New Thread 0x2aaac7593700 (LWP 8634)]; [New Thread 0x2aaac7794700 (LWP 8635)]; [New Thread 0x2aaac7995700 (LWP 8636)]; [New Thread 0x2aaac7b96700 (LWP 8637)]; [New Thread 0x2aaac7d97700 (LWP 8638)]; [New Thread 0x2aaac7f98700 (LWP 8639)]; [New Thread 0x2aaac8199700 (LWP 8640)]; [New Thread 0x2aaac839a700 (LWP 8641)]; [New Thread 0x2aaac859b700 (LWP 8642)]; [New Thread 0x2aaac879c700 (LWP 8643)]; [New Thread 0x2aaac899d700 (LWP 8644)]; [New Thread 0x2aaac8b9e700 (LWP 8645)]; [New Thread 0x2aaac8d9f700 (LWP 8646)]; [New Thread 0x2aaac8fa0700 (LWP 8647)]; [New Thread 0x2aaac91a1700 (LWP 8648)]; Time for init: 0 h 0 m 2s. Query database: /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db(size=1282204); Process prefiltering step 1 of 1. Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; ............................; Index table: Masked residues: 4639530; Index table: fill...; ...................................................................................................	1 Mio. sequences processed; ............................; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 75296699; DB Size: 1137909162 (byte); Avg Kmer Size: 0.877931; Top 10 Kmers; 	YTGTPK		2496; 	GPGGTT		2371; 	HQSGQR		1210; 	AGDYKP		1057; 	PHFGRQ		943; 	PHLGRQ		837; 	DPVLEP		661; 	PFADTR		653; 	MVQFFP		588; 	NGAAHP		585; Min Kmer Size: 0; Empty list: 66045602. Time for index table init: 0 h 0 m 29s. k-mer similarity threshold: 130; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1282204; Target db start 1 to 1282204; Wrong prefiltering result: Query: 1 -> 1361079913	r; Invalid database read for id=1361079913, database index=/usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db.index; Wrong prefiltering result: Query: 71 -> 1361079913	r; Invalid database ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/37:3416,Mask,Masked,3416,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/37,1,['Mask'],['Masked']
Availability,"Threads 	36; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	36; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Don",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:23189,mask,mask,23189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['mask'],['mask']
Availability,"Time for merging to query_seqs_h: 0h 0m 0s 62ms; Time for merging to query_seqs: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 213ms; splitsequence tmp/7935334228278574252/query_seqs tmp/7935334228278574252/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 96 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 . Query database size: 4000 type: Nucleotide; Estimated memory consumption: 11G; Target database size: 365688 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 100.00% 365.69K 16s 177ms ; Index table: Masked residues: 1079896; Index table: fill; [=================================================================] 100.00% 365.69K 12s 498ms ; Index statistics; Entries: 297952985; DB size: 9896 MB; Avg k-mer size: 0.277490; Top 10 k-mers; GGCGCAGCGCGGTGC	366; TCCGGGCCGCACGGT	330; GTCGCGGCAGCGCCG	209; CAGACGCGCGTGCCG	204; CGCGCGCGTCGCGCG	167; CGCGCGCGTGGCGCG	157; GCTGCGCGCGGCGCG	151; CGCGGGCGTGGCGCG	149; CGTGCGCGTGGCGCG	147; CGCGCGCCCGGCGCG	133; Time for index table init: 0h 0m 39s 203ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:4779,mask,mask-lower-case,4779,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['mask'],['mask-lower-case']
Availability,"Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 14 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 214 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 214 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 214 0s 9ms; Index statistics; Entries: 1312; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 857ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 14; Target db start 1 to 214; [=================================================================] 100.00% 14 0s 45ms. 376.012940 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 6ms; Time for processing: 0h 0m 1s 611ms; swapdb tmp//10798751672030653963/seq_wrong_assigned_pref tmp//10798751672030653",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:28343,Mask,Masked,28343,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['Mask'],['Masked']
Availability,"Tmp tmpfiles/ folder does not exist or is not a directory.; Create dir tmpfiles/; cluster DB_in/fasta_in_db_HC DB_clustered/clustered_HC tmpfiles/ --cluster-reassign 1 --cluster-mode 1 --cov-mode 0. MMseqs Version: 96d452cb432fc4674991a48952deaf24d1787e77; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundan",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:670,Mask,Mask,670,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,2,['Mask'],['Mask']
Availability,"To be clear, as far as I can tell, `mmseqs taxonomy` is completely unusable due to this bug. I'm surprised others have not commented on this earlier. I've reproduced this error multiple times, so it's not stochastic.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-484228558:171,error,error,171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-484228558,2,['error'],['error']
Availability,"To slightly expand on this, `easy-cluster` just calls `cluster` and a few modules to make the clustering tsv file and the FASTA files. It itself doesn't do anything special, however generating the cluster FASTA files is a bit tricky with the currently available MMseqs2 modules, so the `easy-cluster` workflow does that for you. The clustering procedure should be mostly the same since the Linclust paper (the combined Linclust+MMseqs2 clustering). The `--cluster-reassign` parameter to fix hits with sequence-identity/coverages below the given thresholds that were allowed due to the cascading is not described in the paper and the nucleotide clustering was also not available then.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/712#issuecomment-1579953989:252,avail,available,252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/712#issuecomment-1579953989,2,['avail'],['available']
Availability,"Try giving every job an unique tmp folder (e.g., `tmp_${SLURM_JOB_ID}_${SLURM_ARRAY_TASK_ID}`). MMseqs2 also doesn't have a good way to give it a total memory limit, you can approximate a memory limit with `--split-memory-limit`. This should be about 80% of the memory you want MMseqs2 to use (in your case about 40GB, so `--split-memory-limit 40G`). This is relevant if other jobs are running on the same node too, as MMseqs2 will generally try to use all available memory.,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/607#issuecomment-1250809436:457,avail,available,457,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607#issuecomment-1250809436,1,['avail'],['available']
Availability,Trying out NEWMAPDB (soft link) in the following format; `mmseqs createtsv NEWMAPDB NEWMAPDB NEWCLUST NEWCLUST.tsv`. I receive the following error:; Start writing file to NEWCLUST_clu.tsv; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_S_construct null not valid; Aborted,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404861986:141,error,error,141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404861986,1,['error'],['error']
Availability,"Trying the newest commit fixed the issue! Thanks!. However, I now have an issue with batching `mmseqs taxonomy` and then merging the resulting taxonomy database. I previously used `mmseqs mergedbs`, but now I get the following error: . ```; Input database ""/tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/clusters_rep-seqs.part-19_tax_db"" is wrong!; Current input: Taxonomy. Allowed input: Unknown, Index, Nucleotide, Profile, Aminoacid, Alignment, Prefilter, Bi-directional prefilter, Clustering, Offsetted headers, Generic; ```. I don't see any subcommand for merging taxonomy databases. How do I merge taxonomy databases with the most recent version of mmseqs?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516404117:227,error,error,227,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516404117,1,['error'],['error']
Availability,"Trying with the `easy-taxonomy` workflow got me further, but after two rounds of prefiltering I ended up getting:. ```; Error: Lca died; Error: taxonomy died; Error: Search died; ```. Full MMseqs2 output logfile is [here](https://gist.github.com/sean-workman/1d8f5068894c76dfc021cd9db2f5a29a). The `gdb` output says:. ```; Core was generated by `mmseqs lca /home/sdwork/scratch/metagenomics/uniref_db/uniref90 ez_tmp/88137780'.; Program terminated with signal SIGBUS, Bus error.; #0 0x00002adfa621cbf4 in ?? () from /cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/lib64/libc.so.6; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903:120,Error,Error,120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903,4,"['Error', 'error']","['Error', 'error']"
Availability,Tutorial error: Unrecognized parameter --tax-mapping-file,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/823:9,error,error,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823,1,['error'],['error']
Availability,"UPDATE: Index is huge:. ```; total 3.8T; -rwxrwx--- 1 guelou01 nogroup 447G Aug 18 19:33 NCBI_ALL_DB; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 19:34 NCBI_ALL_DB.dbtype; -rwxrwx--- 1 guelou01 nogroup 954M Aug 18 18:11 NCBI_ALL_DB_h; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 18:11 NCBI_ALL_DB_h.dbtype; -rwxrwx--- 1 guelou01 nogroup 195M Aug 18 19:34 NCBI_ALL_DB_h.index; -rwxrwx--- 1 guelou01 nogroup 80K Sep 14 14:31 NCBI_ALL_DB.idx.0; -rwxrwx--- 1 guelou01 nogroup 895G Sep 14 14:31 NCBI_ALL_DB.idx.1; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.2; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.3; -rwxrwx--- 1 guelou01 nogroup 623G Sep 14 14:31 NCBI_ALL_DB.idx.4; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.5; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.6; -rwxrwx--- 1 guelou01 nogroup 4 Sep 14 14:31 NCBI_ALL_DB.idx.dbtype; -rwxrwx--- 1 guelou01 nogroup 1.1K Sep 14 14:31 NCBI_ALL_DB.idx.index; -rwxrwx--- 1 guelou01 nogroup 236M Aug 18 19:34 NCBI_ALL_DB.index; -rwxrwx--- 1 guelou01 nogroup 257M Aug 18 19:34 NCBI_ALL_DB.lookup; -rwxrwx--- 1 guelou01 nogroup 17 Aug 18 18:10 NCBI_ALL_DB.source; ```; And when starting the search the following message is confusing:; ```; Process needs more than 641G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; ```; Adding `--split X` does not have any effect, but does not cause any error. The search now runs for several days with a low CPU usage, only few threads on `idx` files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063:1514,error,error,1514,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063,1,['error'],['error']
Availability,Unexpected Sequence Identity Values for Redundant Sequences,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/861:40,Redundant,Redundant,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/861,1,['Redundant'],['Redundant']
Availability,"Unfortunately no. Also, sorry for don't ask before. So I did this way: ; 1- Download the MMseqs2 Version: aa14ce37feb5eda7231af20259d8f2b659162236 ; 2- Compile as [described here](https://github.com/soedinglab/MMseqs2/#compile-from-source) but changing `cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..` by `cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=. ..` ; 3- Run all steps below:; > mmseqs createdb tcdb_query.nr.fa tcdb_query.nr.db 2>&1 >> log ; > mmseqs createdb all.fa all.db 2>&1 >> log; ; > mmseqs search tcdb_query.nr.db all.db tcdb_result.db tmp --threads 40 -s 7.5 --num-iterations 3 -a --max-seqs 17702628 -c 0.8 --add-self-matches 2>&1 >> log . 4- After crash:; > gdb --args mmseqs align tcdb_query.nr.db all.db tmp/1072319213335698383/pref_0 tmp/1072319213335698383/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 -v 3 . return:; ```; GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-114.el7; Copyright (C) 2013 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/acpguedes/source/MMseqs2/build/bin/mmseqs...done.; (gdb) bt; No stack.; ```. Important note:; I send the STDOUT and STDERR to log file but there are one message that was printed on the screen and not on log file: ; `scoreIdentical has different length L: scoreIdentical has different leng",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510:76,Down,Download,76,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510,1,['Down'],['Download']
Availability,"Update:; ```; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [> ] 0.00% 1 eta /scratch200/urineri/tmp2//13943365082736394582/blastp.sh: line 99: 34827 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. Breakpoint 1, 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; Missing separate debuginfos, use: debuginfo-install bash-4.2.46-28.el7.x86_64; (gdb) bt; (gdb) bt; #0 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; #1 0x000000000041d9de in exit_shell (); #2 0x000000000041c8f9 in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407:197,fault,fault,197,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407,3,"['Error', 'fault']","['Error', 'fault']"
Availability,Use HTTPS instead of FTP for downloading taxdb data,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/251:29,down,downloading,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/251,1,['down'],['downloading']
Availability,"Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(int, const char**, const Command&)':; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp:72:12: warning: unused variable 'splitMode' [-Wunused-variable]; size_t splitMode = pref->getSplitMode();; ^~~~~~~~~; [ 4%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Prefiltering.cpp.o; /var/folders",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:4166,Down,Downloads,4166,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"Using the search workflow (with --comp-bias-corr 0 --mask 0) and convertalis:. `search //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/clustering/tmp -e 0 -s 1.0 --exact-kmer-matching 1 --sub-mat /app/matrices/blosum62-parasail.out --comp-bias-corr 0 --mask 0 `. `convertalis //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self_converted.tsv --format-output query,target,raw --gap-open 11 --gap-extend 1 --sub-mat /app/matrices/blosum62-parasail.out `. I now get values that seem to be within roundoff error (+-1) of parasail values (below). These values still don't give whole numbers when divided by 14, though they are at most 0.07 from whole numbers. Is there any way to get an exact match for Parasail values? I'm guessing at this point it might be a floating point arithmetic issue which may not be easily resolvable. . <html xmlns:v=""urn:schemas-microsoft-com:vml""; xmlns:o=""urn:schemas-microsoft-com:office:office""; xmlns:x=""urn:schemas-microsoft-com:office:excel""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=Excel.Sheet>; <meta name=Generator content=""Microsoft Excel 15"">; <link id=Main-File rel=Main-File; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip.htm"">; <link rel=File-List; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip_filelist.xml"">; <style>; <!--table; 	{mso-displayed-decimal-separator:""\."";; 	mso-displayed-thousand-separator:""\,"";}; @page; 	{margin:.75in .7in .75in .7in;; 	mso-header-margin:.3in;; 	mso-footer-margin:.3in;}; tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; br; 	{mso-data-placement:same-cell;}; td; 	{padding-top:1px;; 	padding-right:1px;; 	padd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920245972:53,mask,mask,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920245972,3,"['error', 'mask']","['error', 'mask']"
Availability,"VX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:2349,Down,Downloads,2349,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/669:1777,Mask,Mask,1777,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669,2,['Mask'],['Mask']
Availability,"Very glad to hear it is not me!. > Still quite puzzled where the error Alignment format is not supported! came from though. It may or may not be a coincidence that the same error was mentioned in #329, also in the context of --cluster-reassign",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774110380:65,error,error,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774110380,2,['error'],['error']
Availability,"Was this bug actually fixed, aside from the way you use the command? I still get the same error when using --cluster-reassign:. Input:; ` mmseqs cluster DB_in DB_clustered tmp/ --cluster-reassign --cluster-mode 1 --cov-mode 0` . Error:; `Found 100 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; Error: Clustering step 2 died`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-771475381:90,error,error,90,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-771475381,3,"['Error', 'error']","['Error', 'error']"
Availability,Was this issue ever resolved? I am getting the same error trying to build a database using blastdbcmd with NCBI nr.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/383#issuecomment-1097182040:52,error,error,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/383#issuecomment-1097182040,1,['error'],['error']
Availability,We are in the process of preparing release 13. This will include all the recent changes in a stable release. It should be done in the next few days/this week. In the meantime you can use the static precompiled binaries downloadable from https://mmseqs.com/latest.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/413#issuecomment-779220175:219,down,downloadable,219,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/413#issuecomment-779220175,1,['down'],['downloadable']
Availability,We currently do not support BLAST database input into MMseqs2. You would need to first generate a database with fasta or just use our `mmseqs database` command to download databases from a preset.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/518#issuecomment-1027636235:163,down,download,163,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/518#issuecomment-1027636235,1,['down'],['download']
Availability,We did not change the format of the taxonomical database. It should be compatible. Also the error you show here happens while closing the database I think. Could you please provide the whole log? Does the error also occur with the newest version of mmseqs?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515720900:92,error,error,92,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515720900,2,['error'],['error']
Availability,"We do not currently have a very easy way to limit memory. For the prefilter (main module for normal sequences searches) you can specify an appropriate `--split` value, that will then reduce the required memory to (I think there is an error in the user guide, have to double check, but this should be the correct formula):. ```; (7 byte * N * L) / #splits + 8 byte * 21^k; ```. We have two more very memory intense modules:`swapresults` and `kmermatcher`. These are very important for profile searches and linclust. Their splitting logic is however not exposed to the command line interface yet. The clustering module also can use a lot of memory, but if you stay with the default cascaded clustering that should not become an issue. A hack to limit how much memory `swapresults`, `kmermatcher` and `prefilter` will use, would be to manually edit `size_t Util::getTotalSystemMemory()` in `commons/Util.cpp`. We will discuss what we can do about this limiting memory issue internally and get back to you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359788065:234,error,error,234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359788065,2,['error'],['error']
Availability,"We do not have any code in mmseqs2 that writes this core dump file. This is a feature of Linux. Core dumps can be deactivated in Linux using ulimit -c 0 (see https://linux-audit.com/understand-and-configure-core-dumps-work-on-linux/). . Normally a core dump occurs because the software crashes. Did you see that MMseqs2 ended with a seg. fault? . If you want a set of stickers though (see https://twitter.com/thesteinegger/status/1201076220957315074), sent me your address via mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-565100808:338,fault,fault,338,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-565100808,1,['fault'],['fault']
Availability,"We downloaded all of the UniProt entries for viruses from the UniProt website, and clustered them with CD-Hit at with -c 0.99. Then we run mmseqs createdb on that file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-795950334:3,down,downloaded,3,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-795950334,1,['down'],['downloaded']
Availability,"We give each sequence an internal identifier and cluster based on these. The accession coming from FASTA headers is only printed out when formatting plain text results (i.e. with `convertalis` or `createtsv`). So it doesn't affect the clustering, but makes downstream processing more difficult. I would recommend to add some suffix to each accession in the input FASTA with e.g. `awk`:; ```; awk '/^>/ { cnt++; $1=$1""_""cnt } { print; }' input.fasta > input_suffix.fasta; mmseqs easy-search input_suffix.fasta targetDB result.m8 tmp; ```; Or with current git MMseqs2 you can pipe the `awk` input directly to MMseqs2:; ```; awk '/^>/ { cnt++; $1=$1""_""cnt } { print; }' input.fasta | mmseqs easy-search stdin targetDB result.m8 tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/270#issuecomment-582873060:257,down,downstream,257,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/270#issuecomment-582873060,1,['down'],['downstream']
Availability,"We have the `filterresult` module since recently, which implements the HHblits alignment filtering algorithm, for slimming down MSAs by pairwise alignments. Here you want the `--diff` parameter to keep only the N most diverse sequences. However you should stick to the non `easy-` modules to use this.; E.g. something like:. ```; mmseqs createdb FILE db; mmseqs cluster db clu tmp ...; mmseqs filterresult db db clu clu_filt --diff 100; mmseqs createseqfiledb db clu_filt fasDB; mmseqs apply fasDB mafftDB -- mafft ...; ```. (This is assuming you are clustering proteins, not quite sure if `filterresult` works for nucleotide sequences).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/456#issuecomment-849693129:123,down,down,123,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/456#issuecomment-849693129,1,['down'],['down']
Availability,"We introduced the module after the 11th release. It will be part of the next one. You can either use the non ""easy"" workflow, i.e. something like:; ```; mmseqs createdb query.fasta qdb; mmseqs createdb target.fasta tdb; mmseqs rbh qdb tdb res tmp; mmseqs convertalis qdb tdb res res.m8; ```. or you can either download precompiled binaries from the latest git commit at https://mmseqs.com/latest or build the code from source.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988:310,down,download,310,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988,1,['down'],['download']
Availability,We now provide containers in the github container registry here:; https://github.com/soedinglab/MMseqs2/pkgs/container/mmseqs2. Maybe these work for you. Alternatively I would recommend to just download the statically compiled binaries into the Docker image (see https://github.com/soedinglab/MMseqs2-App/blob/master/Dockerfile.backend ).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/605#issuecomment-1246367808:194,down,download,194,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/605#issuecomment-1246367808,1,['down'],['download']
Availability,"We recently made cascaded the default, since it performs better and has fewer potential runtime pitfalls. Also please note that switch parameters such as `--single-step-clustering` do not take an argument.; With `--single-step-clustering false` you would run a single step clustering. I'll update the documentation. Sorry about that!. Edit: The missing version number probably means, that you downloaded the ZIP instead of checking out the repository. The compile script cannot figure out the git commit that was used, without the .git folder.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/65#issuecomment-367299944:393,down,downloaded,393,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/65#issuecomment-367299944,1,['down'],['downloaded']
Availability,"We still never implemented a fix for this, the issue is that for very small sets and very low sensitivity settings you can run into the issue that no similar k-mers can be generated given the (very high) similarity threshold. The error doesn't happen once sensitivity or database size increases anymore so it wasn't really a priority to fix. You can get around the issue with a somewhat ugly hack of using the old single step clustering approach instead of the cascaded clustering:. ```; mmseqs easy-cluster --single-step-clustering -s 6 (or higher) [other clustering params] ...; ```. This will become very slow for larger sets but shouldn't matter for small sets.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1781196016:230,error,error,230,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1781196016,1,['error'],['error']
Availability,"We suppress hits like these likely with our false positive suppression mechanisms. You can try disabling masking and compositional bias correction with `--mask 0 --comp-bias-corr 0`. That might help with finding these hits. Additionally, you can also disable E-values as this would not really be a homology search anymore with `-e inf`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/828#issuecomment-2022006658:105,mask,masking,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/828#issuecomment-2022006658,2,['mask'],"['mask', 'masking']"
Availability,"Well, we probably can not call the ""align"" module since it would ""ruin"" the sequence-profile alignments for remote query-target pairs indeed. I wonder if re-scoring using the profile from the last iteration could work. Is it possible to re-score all previously identified targets against the profile from the last iteration? That could guarantee comparable significance metrics across the entire hit list. I have checked how psi-blast is handling this case: it seems to re-score all hits within each iteration. As a ""bypass"" method, I am planning to use the ""nident/qlen"" (number of identical aligned residues divided by query sequence length) ratio as a globally valid measure of alignment goodness, allowing ranking hits regardless to iteration, that is essential for our downstream work.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350#issuecomment-689453353:774,down,downstream,774,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350#issuecomment-689453353,1,['down'],['downstream']
Availability,"What i did was (1) Downloaded gtdb_genomes_reps.tar.gz and then combined all the fa files into one fa file. (2) downloaded ar53_taxonomy.tsv and bac120_taxonomy.tsv, also combined them into one tsv. (3) mmseqs createdb combined.fa gtdb_seqs (4) mmseqs createtaxdb gtdb_seqs tmp --tax-mapping-file combined.tsv --threads 50. There was no error showed in the whole process. However, when I tried to use ""mmseqs taxonomy"" function to seach one contig.fa file, all the contigs were unclassified. Could you please advise where I did wrongly?. Thanks a lot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/884#issuecomment-2322819211:19,Down,Downloaded,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/884#issuecomment-2322819211,3,"['Down', 'down', 'error']","['Downloaded', 'downloaded', 'error']"
Availability,What is the error message? . `Could not allocate foundDiagonals memory in QueryMatcher` should only be possible to happen during the prefiltering stage not the alignment stage.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242908:12,error,error,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242908,1,['error'],['error']
Availability,"What is the final size of the BFD, __unpacked__? I downloaded it successfully, but now am trying to allocate enough storage. https://bfd.mmseqs.com/. Thanks a lot!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/525:51,down,downloaded,51,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/525,1,['down'],['downloaded']
Availability,"What parameters did you use (the log doesn't show the call to `mmseqs (easy-)cluster`)? What MMseqs2 version/commit is this (please compile from a git checkout if you compile from source, not by downloading the tar.gz/zip)?. It seems like you are using the single step clustering, that should be much slower than the cascaded clustering.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765448075:195,down,downloading,195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765448075,1,['down'],['downloading']
Availability,"What we do to construct the GTDB in our `databases` workflow is to download the tar files containing the FASTA files. You can do the same, pack everything into one tar file then call `tar2db` and then `createdb` on the DB created from the previous step.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/798#issuecomment-1888447373:67,down,download,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/798#issuecomment-1888447373,1,['down'],['download']
Availability,"When I am running the mmseq2 in the conda environment to convert the expandable profile databases to MMseqs2 format following the protocol:. mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103_db. error:. Invalid Command: tsv2exprofiledb; Did you mean ""mmseqs convertprofiledb""?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/576:196,error,error,196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/576,1,['error'],['error']
Availability,When I am trying to run mmseq_update on some data set below error was popping up.; ERROR:; mmseqs_update: Problem with data file. Is it empty or is another process readning it?: Invalid argument; commons/DBReader.cpp:49 ffindex_index_parse: /anno/narsapvi/fern_clustering/run/tmp/A.index: Invalid argument; What can be the possible solution for this..!!,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4:60,error,error,60,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"When I got to run this job using mpirun I got this error: . [cpu-23-1:104192] *** Process received signal ***; [cpu-23-1:104192] Signal: Bus error (7); [cpu-23-1:104192] Signal code: Non-existant physical address (2); [cpu-23-1:104192] Failing at address: 0x148bd2954aee; [cpu-23-1:104230] *** Process received signal ***; [cpu-23-1:104230] Signal: Bus error (7); [cpu-23-1:104230] Signal code: Non-existant physical address (2); [cpu-23-1:104230] Failing at address: 0x14758c03a9e9; [cpu-23-1:104233] *** Process received signal ***; [cpu-23-1:104233] Signal: Bus error (7); [cpu-23-1:104233] Signal code: Non-existant physical address (2); [cpu-23-1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:51,error,error,51,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604,4,['error'],['error']
Availability,"When I use createseqfiledb on a clusterDB file, as described in the readme, I get a continuous stream of ""Invalid entry in line x!"" messages, where x are different lines. What does this error mean? The resulting clu_seq file is empty.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/6:186,error,error,186,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6,1,['error'],['error']
Availability,"When running the latest statically compiled version of mmseqs, I receive an error because the software isn't signed. - I am using a Macbook Pro, with Mac OS Sonoma 14.5; - Download mmseqs-osx-universal.tar.gz from https://github.com/soedinglab/MMseqs2/releases/tag/15-6f452; - Unzip and mv bin/mmseqs binary to ~/bin; - When I run the command `mmseqs`, I receive a popup with the text; ```; “mmseqs” cannot be opened because the developer cannot be verified.; ```; and; ```; macOS cannot verify that this app is free from malware.; ```. This can be resolved on the user end by following these instructions:; https://support.apple.com/en-us/102445#openanyway; (that's what I have done). But it would be nice i the software were signed in the first place. On the developer side, these instructions are useful: https://developer.apple.com/developer-id/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/864:76,error,error,76,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/864,2,"['Down', 'error']","['Download', 'error']"
Availability,"Where you able to classify just a single sequence against our gtdb database? Maybe the internal structure of names, nodes and mapping has some error. If you could provide a small subset than I could try to figure out what goes wrong. . If you want a set of stickers though (see https://twitter.com/thesteinegger/status/1201076220957315074), sent me your address via mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-565122021:143,error,error,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-565122021,1,['error'],['error']
Availability,"While clustering a database of about 10 million proteins, we receive lots of ""there must be an error"" messages, e.g.:. there must be an error: 1835775 deleted from 4496505 that now is empty, but not assigned to a cluster; there must be an error: 6964402 deleted from 7957737 that now is empty, but not assigned to a cluster; there must be an error: 2422408 deleted from 2413081 that now is empty, but not assigned to a cluster; ... This is the script running the clustering:; ```; MMSEQS=mmseqs-static_avx2; SEQFILE=eggnog4.proteins.core_periphery.fa.gz; pigz -dc $SEQFILE >$TMPDIR/db.fasta; $MMSEQS createdb $TMPDIR/db.fasta $TMPDIR/db; mkdir $TMPDIR/clutmp; $MMSEQS cluster $TMPDIR/db $TMPDIR/db_clu $TMPDIR/clutmp --cascaded -e 1 --threads 16; ```. The effect is independent from the mmseqs2 binary (your static avx2 binary, self-compiled sse4.1 binary). We run Fedora 25 with 4.9.5 kernel. The machine has 40 cores and 1 TB RAM. Thanks for your help,; Thomas Rattei",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15:95,error,error,95,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15,4,['error'],['error']
Availability,Will the conversion error out if there are missing taxonomic levels and the taxids are alphanumeric instead of numeric?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1819551348:20,error,error,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1819551348,1,['error'],['error']
Availability,"With other clustering modes, I run into the same errors as mentioned earlier here:; #374 . Along with the other issues I am running into, I am under the strong impression that the small size of my sequences (7-20 AA long) Is the problem. Is MMseqs2 suited to handle such data?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-772905780:49,error,errors,49,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-772905780,1,['error'],['errors']
Availability,"With the current version?. ``` mmseqs createindex DF_PP_full100.fa.fixed.mmseqsdb tmp; createindex DF_PP_full100.fa.fixed.mmseqsdb tmp . MMseqs Version: 11.e1a1c. createindex DF_PP_full100.fa.fixed.mmseqsdb tmp . MMseqs Version: 11.e1a1c. indexdb DF_PP_full100.fa.fixed.mmseqsdb DF_PP_full100.fa.fixed.mmseqsdb --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 12 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 100.00% 1.85M 1m 9s 45ms ; Index table: Masked residues: 9292781; Index table: fill; [=================================================================] 100.00% 1.85M 41s 694ms ; Index statistics; Entries: 932473123; DB size: 5823 MB ; Avg k-mer size: 14.569893 ; Top 10 k-mers ; RDWGRP 39946 ; CFVLGR 32839 ; CVRNGS 31368 ; ILTECV 26854 ; APSDIR 20240 ; ESCCGT 19857 ; DGAGDT 18909 ; YQAGTT 18726 ; SSCDAW 18697 ; PNEGGV 18425 ; Write ENTRIES (9) ; Write ENTRIESOFFSETS (10) ; Write SEQINDEXDATASIZE (15) ; Write SEQINDEXSEQOFFSET (16) ; Write SEQINDEXDATA (14) ; Write ENTRIESNUM (12) ; Write SEQCOUNT (13) ; Time for merging to DF_PP_full100.fa.fixed.mmseqsdb.idx: 0h 0m 0s 0ms ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590960979:436,mask,mask,436,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590960979,3,"['Mask', 'mask']","['Masked', 'mask', 'mask-lower-case']"
Availability,"With the database you sent, by sampling 100 sequences at random from my gene catalog i cannot obtain the taxonomy. . If I do `mmseqs taxonomy gtdb_54kDB gtdb_54kDB /tmp/tax /tmp/tmp ` it doesn't throw an error at all. . But if I take this [subsetDB.zip](https://github.com/soedinglab/MMseqs2/files/4019604/subsetDB.zip) of my query FASTA and run a taxonomic analysis with:. ```; mmseqs taxonomy --search-type 1 --threads 2 \; --lca-ranks species:genus:family:order:class:phylum:superkingdom \; subsetDB \; gtdb_54kDB taxresdb /tmp/; ```. I get a `terminate called recursively` error. . Can you run it properly? Sorry for the waste of time. . For the DB building I did the typical act of not saving properly the steps. I try to replicate it tomorrow and I send it right away. But basically I had obtained the names.dmp and nodes.dmp and from the main fasta having all the predicted coding sequences with the names as `>{orf}_{genomeid}` I generated the mapping file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570605791:204,error,error,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570605791,2,['error'],['error']
Availability,With the new version the error is fixed. Thanks,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/470#issuecomment-881273776:25,error,error,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/470#issuecomment-881273776,1,['error'],['error']
Availability,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:67,error,error,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555,1,['error'],['error']
Availability,Would you please consider putting the latest version on conda? At the moment it is not possible to do taxonomy with GTDB using the currently available version.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/760:141,avail,available,141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/760,1,['avail'],['available']
Availability,Wrong Type Database Error,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/429:20,Error,Error,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429,2,['Error'],['Error']
Availability,YAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 18338; Time for index table init: 0h 3m 27s 29ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 8); Query db start 1 to 310097721; Target db start 1 to 16332640; [=================================================================] 100.00% 310.10M 1h 8m 24s 140ms. 28.708682 k-mers per position; 4442 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278135107 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_0: 0h 3m 5s 974ms; Time for merging to orfs_pref_tmp_0_tmp: 0h 1m 47s 272ms; Process prefiltering step 2 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 13s 495ms; Index table: Masked residues: 106418507; Index table: fill; [=================================================================] 100.00% 16.33M 1m 21s 195ms; Index statistics; Entries: 4548155688; DB size: 35790 MB; Avg k-mer size: 3.553247; Top 10 k-mers; SGQQRIA 34453; GPGGKLL 32743; YTGTGKG 22366; DFEQLPH 19519; NVPGWSP 19488; FRYAFPS 19480; RYYVLGW 19462; WRLDFLN 18626; TVDGDFS 18605; QDWVQIP 18405; Time for index table init: 0h 2m 48s 296ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 2 of 8); Query db start 1 to 310097721; Target db start 16332641 to 32661344; [=================================================================] 100.00% 310.10M 1h 4m 27s 775ms. 28.708682 k-mers per position; 4443 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278309329 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_1: 0h 3m 13s 782ms; Time for merging to orfs_pref_tmp_1_tmp: ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:8747,Mask,Masked,8747,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Mask'],['Masked']
Availability,"YAWSWIRQPPGKGLEWMGVIAYD---GSTYYSPSLK-SRTSISRDTSKNQFSLQLSSVTPEDTAVYYCAR--------MDYWGKGTLVTVSS; Vicugna_pacos_IGHV4S1*01_IGHJ3*01 QVQLQESGP-GLVKPSQTLSLTCTVSGGSIT--TSYYAWSWIRQPPGKGLEWMGVIAYD---GSTYYSPSLK-SRTSISRDTSKNQFSLQLSSVTPEDTAVYYCAR--------LDAWGQGTLVTVSS; Vicugna_pacos_IGHV4S1*01_IGHJ2*01 QVQLQESGP-GLVKPSQTLSLTCTVSGGSIT--TSYYAWSWIRQPPGKGLEWMGVIAYD---GSTYYSPSLK-SRTSISRDTSKNQFSLQLSSVTPEDTAVYYCAR--------LEVWGQGTLVTVSS; Vicugna_pacos_IGHV4S1*01_IGHJ6*01 QVQLQESGP-GLVKPSQTLSLTCTVSGGSIT--TSYYAWSWIRQPPGKGLEWMGVIAYD---GSTYYSPSLK-SRTSISRDTSKNQFSLQLSSVTPEDTAVYYCAR--------FGSWGQGTQVTVSS; Vicugna_pacos_IGHV4S1*01_IGHJ5*01 QVQLQESGP-GLVKPSQTLSLTCTVSGGSIT--TSYYAWSWIRQPPGKGLEWMGVIAYD---GSTYYSPSLK-SRTSISRDTSKNQFSLQLSSVTPEDTAVYYCAR--------FEYWGQGTLVTVS-; #=GC RF xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx; //; ```; Given this I would expect a proper db to be able to be built. ## Current Behavior; The convertprofiledb command crashes with a segmentation fault. ## Steps to Reproduce (for bugs); ```bash; mmseqs convertmsa ${BUILD_PIPELINE_FOLDER}/curated_alignments/alpaca_H.stockholm msaDb ; mmseqs msa2profile msaDb alpaca_H_profile ; mmseqs convertprofiledb alpaca_H_profile alpaca_H.db ; ```. ## MMseqs Output (for bugs); ```bash; convertmsa /home/robin/Documents/projects/numerator/anarci/ANARCI/build_pipeline/curated_alignments/alpaca_H.stockholm msaDb . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Identifier field 1; Compressed 0; Verbosity 3. Time for merging to msaDb: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; msa2profile msaDb alpaca_H_profile . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; MSA type 2; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Match mode 0; Match ratio 0.5; Pseudo count mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Compositional bias 1; Compositional bias 1; Global sequence w",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/741:5611,fault,fault,5611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/741,1,['fault'],['fault']
Availability,YNLQGGS 19333; DVDYFPL 18984; VDRLNTQ 18855; TVDGDFS 18644; NKTDFVQ 18455; Time for index table init: 0h 2m 40s 976ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 7 of 8); Query db start 1 to 55235334; Target db start 97995817 to 114328449; [=================================================================] 100.00% 55.24M 42m 6s 113ms. 33.753670 k-mers per position; 12986 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 492915 sequences with 0 size result lists; Time for merging to pref_0_tmp_6: 0h 0m 32s 387ms; Time for merging to pref_0_tmp_6_tmp: 0h 1m 27s 464ms; Process prefiltering step 8 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 6s 351ms; Index table: Masked residues: 106659473; Index table: fill; [=================================================================] 100.00% 16.33M 1m 20s 124ms; Index statistics; Entries: 4547494345; DB size: 35786 MB; Avg k-mer size: 3.552730; Top 10 k-mers; SGQQRIA 34270; GPGGKLL 32617; YTGTGKG 22607; NVPGWSP 19485; RYYVLGW 19470; YNLQGGS 19354; DVDYFPL 18925; VDRLNTQ 18841; TVDGDFS 18621; NKTDFVQ 18404; Time for index table init: 0h 2m 39s 593ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 8 of 8); Query db start 1 to 55235334; Target db start 114328450 to 130661074; [=================================================================] 100.00% 55.24M 42m 14s 235ms. 33.753670 k-mers per position; 12988 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 472779 sequences with 0 size result lists; Time for merging to pref_0_tmp_7: 0h 0m 34s 449ms; Time for merging to pref_0_tmp_7_tmp: 0h 1m 30s,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:31115,Mask,Masked,31115,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Mask'],['Masked']
Availability,"Yeah, I think the base names helps. It would also be helpful if the help doc for each subcommand listed which files are needed for input (eg., *.index and *.dbtype) and which files will be written. . At times, I found out the hard way that a certain subcommand doesn't create all files for the next step in the mmseqs workflow that I'm running, so I have to figure out how to create them after getting the error message stating that I need them (eg., Issue #146)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-463363392:406,error,error,406,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-463363392,1,['error'],['error']
Availability,"Yeah, the first split is ~2x larger than the rest. `sysctl` is not present on the cluster nodes. . I tried using 16 splits & 8 mmseq-search threads, and that cut down on the memory requirement from 296G to *just* 232G",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740568050:162,down,down,162,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740568050,1,['down'],['down']
Availability,"Yes they should produce it. Only the modules that create output for downstream analysis do not `createtsv`, `convertalis`, `convert2fasta`, `result2flat`, `taxonomyreport`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/292#issuecomment-604527513:68,down,downstream,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/292#issuecomment-604527513,1,['down'],['downstream']
Availability,"Yes to my knowledge it was a fresh conda enviroment, I will try again to make sure I have the suggested version. Thank you very much for the availability!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471615417:141,avail,availability,141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471615417,1,['avail'],['availability']
Availability,"Yes, I've tried recompiling several times as well, and receive the same error after successful compilation. When running the command you gave, I get the following error:. Command: ; ```; ~/data/dir/mmseqs2/build-mpi/bin/mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-le",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:72,error,error,72,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,2,['error'],['error']
Availability,"Yes, it doesn't only download a `pdb` (with all its including files), but also a `pdb_seq`. You want to use the later, as that contains all PDB entries, not only the cluster representatives.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1999763062:21,down,download,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1999763062,1,['down'],['download']
Availability,"Yes, the feature is only available in the latest release 14. Did you create a fresh conda environment? Maybe something else was holding back MMseqs2 to the previous release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471613335:25,avail,available,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471613335,1,['avail'],['available']
Availability,"Yes, you can point `createtaxdb` to your existing database with `--ncbi-tax-dump` and `--tax-mapping-file` as described above. In fact that's how the `databases` commands work, they download sequences, create a db with `createdb` and then manually none, one or both of the inputs for `createtaxdb` and call it.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1869249604:182,down,download,182,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1869249604,1,['down'],['download']
Availability,"Yes. This is the gdb output using Debug compiling. ```; Thread 156 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffd0fff7700 (LWP 230283)]; 0x00005555556f98a4 in DistanceCalculator::computeSubstitutionDistance<char> (seq1=0x7ff249252000 ""\037\213\b\b\217-h["",; seq2=0x7ff249252000 ""\037\213\b\b\217-h["", length=295, subMat=0x555555d7a8a0, globalAlignment=false); at /export/premium/software/MMseqs2/src/alignment/DistanceCalculator.h:29; 29 int curr = subMat[static_cast<int>(seq1[pos])][static_cast<int>(seq2[pos])];; (gdb) bt; #0 0x00005555556f98a4 in DistanceCalculator::computeSubstitutionDistance<char> (seq1=0x7ff249252000 ""\037\213\b\b\217-h["",; seq2=0x7ff249252000 ""\037\213\b\b\217-h["", length=295, subMat=0x555555d7a8a0, globalAlignment=false); at /export/premium/software/MMseqs2/src/alignment/DistanceCalculator.h:29; #1 0x00005555556f85d3 in DistanceCalculator::ungappedAlignmentByDiagonal<char> (querySeq=0x7ff249252000 ""\037\213\b\b\217-h["", querySeqLen=295,; dbSeq=0x7ff249252000 ""\037\213\b\b\217-h["", dbSeqLen=295, diagonal=0, subMat=0x555555d7a8a0, alnMode=1); at /export/premium/software/MMseqs2/src/alignment/DistanceCalculator.h:130; #2 0x00005555556f783c in DistanceCalculator::computeUngappedAlignment<char> (querySeq=0x7ff249252000 ""\037\213\b\b\217-h["", querySeqLen=295,; dbSeq=0x7ff249252000 ""\037\213\b\b\217-h["", dbSeqLen=295, diagonal=0, subMat=0x555555d7a8a0, alnMode=1); at /export/premium/software/MMseqs2/src/alignment/DistanceCalculator.h:107; #3 0x00005555556f311b in doRescorediagonal(Parameters&, DBWriter&, DBReader<unsigned int>&, unsigned long, unsigned long) [clone ._omp_fn.0] (); at /export/premium/software/MMseqs2/src/alignment/rescorediagonal.cpp:222; #4 0x00007ffff727895e in ?? () from /usr/lib/x86_64-linux-gnu/libgomp.so.1; #5 0x00007ffff6e326db in start_thread (arg=0x7ffd0fff7700) at pthread_create.c:463; #6 0x00007ffff6b5b88f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95; (gdb); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649899862:114,fault,fault,114,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649899862,1,['fault'],['fault']
Availability,"You are right that it might be a bit fragile. . Exactly, these two workflows need to have something to download files. The workflows are automatically compiled into the binary and executed when the respective workflow is called (that's what either the xxd or perl build time dependency is for). Fetch sounds good, I'll try that out when I get a CirrusCI with FreeBSD going. AVX2 is a bit IIRC ~30% faster than SSE4.1, so it's not super important. The only problem is if no SIMD flags are specified at all. Then we fall back to the scalar intrinsic implementations of SIMDe which are a lot slower (don't have an exact number, but it was a few factors slower).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868454512:103,down,download,103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868454512,1,['down'],['download']
Availability,You can download precompiled binaries for either the latest git commit at https://mmseqs.com/latest/ or for any previous git commit (that successfully compiled) at `mmseqs.com/archive/GIT_COMMIT`. For the commit you want the first commit that compiled after it is mmseqs.com/archive/03f0bcca33a6af3135082957f1cebf8baff7cc61. If you compile from source please follow the instructions in the wiki:; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux. ```; cd MMseqs2 # Go into the MMseqs2 directory after extraction; mkdir build # Create a build directory; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. # Configure the build with cmake; make -j16; make install; Setting the PATH; export PATH=$HOME/MMseqs2/build/bin:$PATH,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849:8,down,download,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849,1,['down'],['download']
Availability,You can download precompiled binaries from: https://mmseqs.com/latest/. you don’t need to compile them yourself,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/845#issuecomment-2122668422:8,down,download,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/845#issuecomment-2122668422,1,['down'],['download']
Availability,You can download the PDB100 through foldseek. That one includes taxonomy information and is compatible with MMseqs2.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1995075130:8,down,download,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1995075130,1,['down'],['download']
Availability,You can download the precompiled static binary that contains the fix (and latest git changes) at https://mmseqs.com/latest in about an hour when all tests pass through successfully.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1208964068:8,down,download,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1208964068,1,['down'],['download']
Availability,"You can set the `MMSEQS_FORCE_MERGE` environment variable (e.g. `export MMSEQS_FORCE_MERGE=1`). The split databases are, however, an IO optimization and not related to memory. Merging after every module invocation can slow MMseqs2 down considerably.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279:231,down,down,231,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279,1,['down'],['down']
Availability,"You can try the new parameter `--prefilter-mode 1` (it might be only available in git mmseqs, you can download precompiled binaries from the last git at https://mmseqs.com/latest). This runs a different prefilter algorithm, that does not need a large amount of RAM, however it relies much more on CPU power. It's much slower for many queries, but might win out for very low number of queries. The sensitivity of this algorithm should beat the standard k-mer based MMseqs2 prefilter at `-s 7.5` slightly. You should be able to run the search command exactly the same way, just replace `-s` with `--prefilter-mode 1`:; ```; mmseqs easy-search query.fasta targetDB_split/targetDB_split_0_32 results/0.m8 tmp --prefilter-mode 1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1903311302:69,avail,available,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1903311302,2,"['avail', 'down']","['available', 'download']"
Availability,"You can use the `filtertaxseqdb` command (https://github.com/soedinglab/MMseqs2/wiki#filtering-a-seqtaxdb) to build a subset of the Uniprot that only contains bacterial sequences. For bacteria you would run (after `createdb/databases`):; ```; mmseqs filtertaxseqdb uniprot uniprot_bak --taxon-list 2; ```. I am also trying to integrate taxonomy information into the NR reliably. Once that's working you would have an even larger resource. . (Btw in the `filtertaxseqdb` module of MMseqs2 release 11 seperating taxon ids by `,` does something weird. I would recommend to use the latest git MMseqs2, statically compiled binaries at https://mmseqs.com/latest).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074:369,reliab,reliably,369,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074,1,['reliab'],['reliably']
Availability,"You definitely need more RAM. Half a billion sequences will require 24GB for reading in the database alone. Linclust, the first clustering step, will not be a limiting factor, but the steps afterwards will be. Depending on how well linclust is able to reduce your dataset, the MMseqs2 prefilter will require up to 500GB RAM for optimal speed, though it will be able to run with much less at a slightly reduced speed. If you only require linclust quality of clustering (down to 50% sequence identity), then 32GB RAM might be enough. For clustering such a large number of sequences with the full MMseqs2 clustering workflow (<50% sequence identity) we recommend at least 64GB to 128GB RAM compute nodes.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459402647:469,down,down,469,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459402647,1,['down'],['down']
Availability,You need to create symlinks in the databases folder:. ```; ln -s uniref30_2202_db_mapping uniref30_2202_db.idx_mapping; ln -s uniref30_2202_db_taxonomy uniref30_2202_db.idx_taxonomy; ```. That is missing in the setup script. My fault.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1498673943:228,fault,fault,228,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1498673943,1,['fault'],['fault']
Availability,You should be able to just call:; ```; mmseqs databases GTDB gtdb tmp; ```. And it will download and setup the latest release for you.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-990818180:88,down,download,88,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-990818180,1,['down'],['download']
Availability,"You want the best hit even at the risk of a false positive best hit?; For that you should add a few more parameters:; ```; mmseqs search ... -e 100000 --comp-bias-corr 0 --mask 0; ```. At this point you might want to use coverage (`-c`) or `--min-aln-len` to filter the results, since you will also get super short hits.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-591741005:172,mask,mask,172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-591741005,1,['mask'],['mask']
Availability,"Your initial idea is sound. The only problem is that `extractalignedregion` does not really support it since it was built for one very specific purpose and should be generalized. I started working on that though I don't quite have time to finish it up. I have an idea for a hack though:; ```; mmseqs prefixid aln aln.tsv --tsv; awk '{ $1 = NR++; print $0; }' aln.tsv > aln_new.tsv; mmseqs tsv2db aln_new.tsv aln_new --output-dbtype 5; mmseqs extractalignedregion query target aln_new target_new --threads 1; awk '{ print $2; }' aln.tsv > target_ids.tsv; mmseqs createsubdb target_ids.tsv target_h target_new_h; sort -k2,2 target_new_h.index | awk '{ $1 = NR++; print $0; }' > target_new_h.index_new; mv -f target_new_h.index_new target_new_h.index; mmseqs cluster target_new clu tmp; ```; I wrote this down without testing, but this should create a valid domain sequence database from the alignment result. If you are interested in actually fixing the `extractalignedregion` module in the MMseqs2 codebase then I could also try guiding you through that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/210#issuecomment-499599504:802,down,down,802,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210#issuecomment-499599504,2,['down'],['down']
Availability,"Your initial run did not work, because it was the wrong sequence database passed to `createtsv`. We should probably give a better error message though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404855346:130,error,error,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404855346,1,['error'],['error']
Availability,"Your kernel/libc versions are very old. I am surprised that conda runs at all. These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. If you compile MMseqs2 on your own from source it might still work, no guarantees though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867849511:85,error,error,85,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867849511,1,['error'],['error']
Availability,"Z-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | 2022/09/22 23:07:17 Process finished gracefully without error; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /ticket/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A HTTP/1.0"" 200 68; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /ticket/type/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A HTTP/1.0"" 200 18; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""POST /tickets HTTP/1.0"" 200 138; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /result/queries/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/7/0 HTTP/1.0"" 200 63; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /result/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/0 HTTP/1.0"" 200 126; ```. ## Context; On a weekly basis, some new sequences are added to the FASTA file. This week, RNA searching stopped working and seems to report errors for all queries. We didn't make any version changes and have been using mmseqs via MMseqs2-App v5 for a long time. Last week's data now shows the same behavior (but was fine a week ago). Indexing for protein and DNA sequences still works as expected. DNA k-mers have size 15. I find it peculiar that the top k-mers for RNA sequences don't contain any U (or T), as it was the case previously. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; docker image distributed by MMseqs2-App. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; N/A. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; 2 CPUs, 16 GB me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:32529,error,errors,32529,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['error'],['errors']
Availability,"Z; >0002_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; ```; #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0000_A,0002_A,0.885; 0000_A,0001_A,0.885; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.885; 0002_A,0002_A,1.000; 0002_A,0001_A,1.000; 0002_A,0000_A,0.885; ```. This doesn't happen in all cases, though. Here is another case with two exact copies and a third sequence that has a small change (QU -> AA) that does not lead to 9 similarities:. #### Fasta; ```; >0000_A; TESTSEAAENCE; >0001_A; TESTSEQUENCE; >0002_A; TESTSEQUENCE; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.833; 0002_A,0002_A,1.000; 0002_A,0000_A,0.833; ```. I wasn't able to deduce what exactly made those two cases behave differently, unfortunately. ## Unexpected Behavior 2:. When I use a very similar sequence as I used in the former example (SEQUENCETEST instead of TESTSEQUENCE), something entirely different happens. These three exact copies show up as unrelated. #### Fasta:; ```; >0000_A; SEQUENCETEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. In this case it also doesn't matter if I edit (CE -> AA) the first sequence:. #### Fasta:; ```; >0000_A; SEQUENAATEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:. ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. ## Unexpected Behavior 3:; It seems like there is a minimal length for sequences, but I'm not sure this error is intended. #### Fasta:; ```; >0000_A; ABCDEFGHIJ; >0001_A; ABCDEFGHIJ; >0002_A; ABCDEFGHIJ; ```. #### Error:; ```; World` Size: 4 aaSize: 3; World Size: World Size: 4 aaSize: 3; World Size: 4World Size: 4 aaSize: 3; World Size: World Size: 4 aaSize: 3; World Size: 4Could not open data file /.../tmp/pref_7!; mv: cannot stat ‘/.../tmp/aln_7’: No such file or directory; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12:2678,error,error,2678,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12,2,"['Error', 'error']","['Error', 'error']"
Availability,"[Documentation] Error in ""Create a seqTaxDB for SILVA"" part",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/340:16,Error,Error,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/340,1,['Error'],['Error']
Availability,"[NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; *** Download Progress Summary as of Wed Sep 27 13:22:54 2023 *** ; ===============================================================================; [#2b99bd 207MiB/51GiB(0%) CN:5 DL:10MiB ETA:1h24m8s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of Wed Sep 27 13:23:54 2023 *** ; ===============================================================================; [#2b99bd 723MiB/51GiB(1%) CN:5 DL:8.7MiB ETA:1h38m40s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of Wed Sep 27 13:24:56 2023 *** ; ===============================================================================; [#2b99bd 1.1GiB/51GiB(2%)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:2702,Down,Downloading,2702,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['Down'],['Downloading']
Availability,"[mmseqslinux.zip](https://github.com/soedinglab/MMseqs2/files/3623807/mmseqslinux.zip). [mmseqwin.zip](https://github.com/soedinglab/MMseqs2/files/3623810/mmseqwin.zip). Thanks for looking into this -- these files should reproduce the error but may be machine/environment dependent. We have had the same error on three PCs (~5-8 years old) but had success today on MacOS on a < 1 year old computer. I don't know if that will help diagnose the issue, but the files should contain the relevant inputs to reproduce the issue, from two different operating systems. Also attaching the stack dump that cygwin provided if it proves to be useful:; [mmseqsstackdumpwindows.zip](https://github.com/soedinglab/MMseqs2/files/3623831/mmseqsstackdumpwindows.zip)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532444906:235,error,error,235,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532444906,2,['error'],['error']
Availability,]; [#14821b 1.8GiB/2.7GiB(65%) CN:5 DL:112MiB ETA:8s]; [#14821b 1.9GiB/2.7GiB(69%) CN:5 DL:112MiB ETA:7s]; [#14821b 2.0GiB/2.7GiB(73%) CN:5 DL:112MiB ETA:6s]; [#14821b 2.1GiB/2.7GiB(76%) CN:5 DL:109MiB ETA:5s]; [#14821b 2.2GiB/2.7GiB(79%) CN:5 DL:107MiB ETA:5s]; [#14821b 2.2GiB/2.7GiB(83%) CN:5 DL:105MiB ETA:4s]; [#14821b 2.3GiB/2.7GiB(86%) CN:5 DL:103MiB ETA:3s]; [#14821b 2.4GiB/2.7GiB(90%) CN:5 DL:102MiB ETA:2s]; [#14821b 2.5GiB/2.7GiB(93%) CN:5 DL:102MiB ETA:1s]; [#14821b 2.6GiB/2.7GiB(97%) CN:5 DL:100MiB]; [#14821b 2.7GiB/2.7GiB(99%) CN:1 DL:97MiB]. 10/11 10:32:21 [NOTICE] Download complete: /space/jmd20jns/tmp/13406937569195620773/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 14821b|OK | 105MiB/s|/space/jmd20jns/tmp/13406937569195620773/eukaryota.tar. Status Legend:; (OK):download completed. 10/11 10:32:21 [NOTICE] Downloading 1 item(s). 10/11 10:32:22 [NOTICE] Download complete: /space/jmd20jns/tmp/13406937569195620773/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; c8e316|OK | 20MiB/s|/space/jmd20jns/tmp/13406937569195620773/viruses.tar. Status Legend:; (OK):download completed.; tar2db /space/jmd20jns/tmp/13406937569195620773/bacteria.tar /space/jmd20jns/tmp/13406937569195620773/archea.tar /space/jmd20jns/tmp/13406937569195620773/eukaryota.tar /space/jmd20jns/tmp/13406937569195620773/viruses.tar /space/jmd20jns/tmp/13406937569195620773/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 91ms; Time for merging to msa.lookup: 0h 0m 0s 45ms; Time for processing: 0h 0m 15s 419ms; msa2profile /space/jmd20jns/tmp/13406937569195620773/msa /space/jmd20jns/mmseqs_eggNOG/mmseqs_eggNOG --match-mode 1 --match-ratio 0.5 --threads 64 -v 3 . Finding maximum sequence length and set size.; Er,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762:6038,Down,Download,6038,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762,1,['Down'],['Download']
Availability,"_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.index; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h.index; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db; * /ebio/abt3_scratch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:18071,Error,Error,18071,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,2,['Error'],['Error']
Availability,_1 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 100000 --offset-result 0 --split 0 --split-mode 2 --comp-bias-corr 1 --diag-score 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 8 -v 3 -s 1 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; Sensitivity 1; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Max. results per query 100000; Offset result 0; Split DB 0; Split mode 2; Compositional bias 1; Diagonal Scoring 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Threads 8; Verbosity 3. Initialising data structures...; Using 8 threads. Use index uniref90.mms.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Query database: subseq_Mms.1(size=32); Target database: uniref90.mms(size=44448995); Use kmer size 7 and split 1 using split mode 0; Needed memory (139010009596 byte) of total memory (67278442496 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size of --split or set it to 0 to automatic optimize target database split.; WARNING: Split has to be computed by createindex if precomputed index is used.; Substitution matrices...; Time for init: 0 h 0 m 12s. Process prefiltering step 0 of 1. tmp/pref_1_tmp_0.0: File exists; Program call:; subseq_Mms.1 uniref90.mms tmp/pref_1 tmp/aln_1 --sub-mat blosum62.out -a --alignment-mode 0 -e 1e-10 --min-seq-id 0 -c 0 --max-seq-len 32000 --max-seqs 100000 --comp-bias-corr 1 --max-rejected 2147483647 --threads 8 -v 3 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; Add backtrace true; Alignment mode 0; E-value threshold 1e-10; Seq. Id Threshold 0; Coverage threshold 0; Max. sequence length 32000; Max. results per query 100000; Compositional bias 1; Profile false; Realign hit false; Max Reject 2147483647; Detect fragments false; Include identical S,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349:3538,avail,available,3538,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349,1,['avail'],['available']
Availability,"_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:2563,mask,mask-profile,2563,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['mask'],['mask-profile']
Availability,"_part-14/8093924424180559474/round2 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Init data structures...; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Compute score and coverage.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ...Time for merging files: 0h 0m 0s 78ms. All sequences processed. 2760008 alignments calculated.; 2676553 sequence pairs passed the thresholds (0.969763 of overall calculated).; 84.362 hits per query sequence.; Time for processing: 0h 0m 15s 472ms; Program call:; mergedbs tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/merged tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/round2. Merging the results to tmp_part-14/8093924424180559474/merged; Done; Time for merging files: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 354ms; Program call:; filterdb tmp_part-14/8093924424180559474/merged tmp_part-14/8093924424180559474/2b_ali --beats-first --filter-column 4 --comparison-operator le. Filter by numerical comparison to first row.; ....Time for merging files: 0h 0m 0s 229ms; Time for processing: 0h 0m 0s 732ms; Program call:; lca /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/2b_ali clusters_rep-seqs.part-14_tax_db --compressed 0 --lca-ranks kingdom:phylum:class:order:family:genus:species --blacklist 12908,28384 --threads 24 -v 3. Loading NCBI taxonomy...; Computing LCA...; Segmentation fault; Error: Lca died; ```. I'm going to try this again with Release 8.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:17914,fault,fault,17914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 16ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 6ms; Index statistics; Entries: 1415; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 50ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 20ms; [================================================================>] 99.58% 238 eta 0s; 20.876247 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 824ms; align ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:16094,Mask,Masked,16094,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['Mask'],['Masked']
Availability,"_tmp/13016959338117486175/query_seqs tmp/3198441352783276465/clu_tmp/13016959338117486175/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 5 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3 . Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 1648954 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to cluster a number of gene sequences with an identity of 0.8 and no minimum length for the aligned portion of the genes. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15.6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Conda; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Slurm-managed cluster computing environment; * Operating system and version: Rocky Linux 8.5 (Green Obsidian)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:16875,Error,Error,16875,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,2,['Error'],['Error']
Availability,`--max-seqs=` should not work and give an error. You have to leave out the equal sign.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407055187:42,error,error,42,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407055187,1,['error'],['error']
Availability,"`--sort-results` is linclust parameter that is confusingly visible within the `search` workflow, please ignore that. And regarding `--max-accept`, i understand now what you want to achieve, sorry it doesn't quite do what you want. ; What it does it go through the prefiltering list in ungapped alignment order from best score to worst score and align again with Smith-Waterman. Each accepted it is added to the result (and the result list is sorted by E-value). Once it has accepted 5, it stop and doesn't consider the rest of the list anymore. . There could be a hit with a lower E-value further down the list than the E-values produced by the first 5 accepted hits. . We have had a request for a parameter like you propose before. We should definite add this parameter. To get the size of the output under control I would propose to just use a larger value for `--max-accept` (e.g. 20). It becomes increasingly unlikely that you will miss the best possible hits. But yeah, we need a new parameter to cover your use-case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/704#issuecomment-1541518714:597,down,down,597,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/704#issuecomment-1541518714,1,['down'],['down']
Availability,"`Could not allocate foundDiagonals memory in QueryMatcher` is the only error message that I received. . I was running this in a `snakemake` pipeline, which tried the run with progressively more memory (240, 480, 720 GB), and each time, I got the error: `Could not allocate foundDiagonals memory in QueryMatcher`, and the log file looked the same (less dots at the end of the log file when less memory was used)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452249730:71,error,error,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452249730,2,['error'],['error']
Availability,`Error in argument --min-seq-id` when using `easy-linclust` or `linclust`,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:1,Error,Error,1,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,1,['Error'],['Error']
Availability,```; mmseqs databases UniProtKB uniprot tmp; ```. should download the latest uniprot and set it up correctly for use with MMseqs2 including taxonomy information.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285411242:57,down,download,57,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285411242,1,['down'],['download']
Availability,```bash; easy-taxonomy results/BG.fastq /home/cbrislawn/dbs/indexes/library results/mmseq2-BG /tmp \; --search-type 3 -s 2 --mask 0 --max-seqs 100 --max-accept 100 --max-rejected 100 . MMseqs Version: 	10.6d92c; ```. `BG.fastq` is simulated data from a single microbe. `library` is based on RefSeq. Thanks for helping me figure this out!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577261731:125,mask,mask,125,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577261731,1,['mask'],['mask']
Availability,"`clusterupdate` only generates one main database file output (eg., `clusters_db`), regardless of `--threads`, while `cluster` and `linclust` generate one file per thread (eg., `--threads=4` generates `clusters_db.0`, `clusters_db.1`, `clusters_db.2`, `clusters_db.3`). This leads to pipeline complications, given that downstream processing of the `clusters_db` may require multiple inputs (`clusters_db.*`) or just one input (`cluster_db`). It would help if clusterupdate and cluster/linclust were consistent. It would be best if cluster/linclust just produced one database file per thread. I'm running `mmseqs2 11.e1a1c`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/362:318,down,downstream,318,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/362,1,['down'],['downstream']
Availability,`clusterupdate` should give you an error and stop executing completely in that case. I am not sure why its not doing that.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404967275:35,error,error,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404967275,1,['error'],['error']
Availability,"`createtaxdb` does a somewhat inefficient procedure of downloading the rather large idmapping file from uniprot and using that for mapping to taxids. I would recommend to use the `databases` workflow, which doesn't need the idmapping. And then creating a subset of the database with a combination of the `createsubdb` module and the `db.lookup` file. The `.lookup` file has a mapping of internal database identifiers to accessions. So you can make a list of database identifiers you want to keep and then call `createsubdb`:. ```; mmseqs createsubdb subset.tsv swissprot swissprot_subset; ```. Alternatively if you want specific taxa in your database you can use the `filtertaxseqdb` module:. ```; mmseqs filtertaxseqdb swissprot swissprot_human --taxon-list 9606; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/346#issuecomment-687244044:55,down,downloading,55,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/346#issuecomment-687244044,1,['down'],['downloading']
Availability,`databases` workflow does not create subdirectories and crashes with an confusing error,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762:82,error,error,82,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762,1,['error'],['error']
Availability,`linclust` implements a splitting mechanism and can process datasets larger than the available memory size. `clusthash` doesn't have a similar mechanism (it's also older and most unused since we have the `linclust` algorithm).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/442#issuecomment-823502799:85,avail,available,85,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/442#issuecomment-823502799,1,['avail'],['available']
Availability,`mmseqs createdb short_seqs.fasta DB_in/fasta_in`; `mmseqs cluster DB_in/fasta_in DB_clu tmp/ -k 5 --spaced-kmer-pattern 110111`. gives:. `User-specified k-mer pattern is not consistent with stated k-mer size; Error: kmermatcher died; Error: linclust died`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773256934:210,Error,Error,210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773256934,2,['Error'],['Error']
Availability,`mmseqs expandaln` error: Invalid database read | getData: local id >= db size,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:19,error,error,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['error'],['error']
Availability,"`mmseqs search --num-iterations 1` generates 1 db file for each thread. For example: `hits_db.0`, `hits_db.1`, `hits_db.2`, `hits_db.3`. However, `mmseqs search --num-iterations 2` (or a larger number of iterations) only generates one ""main"" output file (eg., `hits_db`). This change affects the downstream processing. For instance, if one then uses `mmseqs convertalis` with `hits_db` as the input, but `hits_db.0`, `hits_db.1`, `hits_db.2`, and `hits_db.3` still exist in that same directory from a past run, then `mmseqs convertalis` dies with the error:. ```; Invalid database read for database data file=hits_db, database index=hits_db.index; ```. This is confusing for the user, given that it's not clear which files `mmseqs convertalis` will look for and potentially try to use. Also, there doesn't seem to be any documentation about the altered output in `mmseqs search`. In general, it would be very helpful to have a list of the actual input and output files (eg., `*.dbtype`, `.index`, `.lookup`, etc) generated by each command. Just including some logging info such as ""looking for *.dbtype file... found file XXX.dbtype` would be helpful.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/336:296,down,downstream,296,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/336,2,"['down', 'error']","['downstream', 'error']"
Availability,`mmseqs search --num-iterations 2` alters output files and affects downstream processing,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/336:67,down,downstream,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/336,1,['down'],['downstream']
Availability,a;p_Basidiomycota;-_Agaricomycotina;c_Tremellomycetes;o_Tremellales; ^@1224 phylum Pseudomonadota 1	1	1	1.000 -_cellular organisms;d_Bacteria;p_Pseudomonadota; ^@433 family Acetobacteraceae 1	1	1	1.000 -_cellular organisms;d_Bacteria;p_Pseudomonadota;c_Alphaproteobacteria;o_Rhodospirillales;f_Acetobacteraceae; ^@392733 genus Terriglobus 1	1	1	1.000 -_cellular organisms;d_Bacteria;p_Acidobacteriota;c_Terriglobia;o_Terriglobales;f_Acidobacteriaceae;g_Terriglobus; ^@474952 species Granulicella rosea	1	1	1	1.000 -_cellular organisms;d_Bacteria;p_Acidobacteriota;c_Terriglobia;o_Terriglobales;f_Acidobacteriaceae;g_Granulicella;s$; ^@28211 class Alphaproteobacteria 1	1	1	1.000 -_cellular organisms;d_Bacteria;p_Pseudomonadota;c_Alphaproteobacteria; ^@57723 phylum Acidobacteriota 1	1	1	1.000 -_cellular organisms;d_Bacteria;p_Acidobacteriota; ```. Each job was given 24 threads with 30Gb per thread (720Gb total) - more is possible. ; As there are 24 files and I used 24 threads - I would assume that the error lies somewhere in how the data is put back together?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb sampleX_scaffolds.fasta sampleX_DB; mmseqs taxonomy sampleX_DB /home/mmseqs2/NR/NR sampleX_mmseqs_taxonomy.txt sampleX_temp --tax-lineage 1 --orf-filter 1 --threads 24 --split-memory-limit 500G; ```. ## MMseqs Output (for bugs); [mmseqs.29360353.out.txt](https://github.com/soedinglab/MMseqs2/files/13532025/mmseqs.29360353.out.txt); [mmseqs.29360398.out.txt](https://github.com/soedinglab/MMseqs2/files/13532026/mmseqs.29360398.out.txt). ## Context; Trying to classify metagenomic contigs for kingdom binning. . ## Your Environment; * Git commit used : MMseqs2 Version: 15.6f452; * Which MMseqs version was used: conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; free -m; total used free shared buff/cache available; Mem: 256830 27571 113148 2175 116109 223713; Swap: 131071 9427 121644; ```. ```; flags		: fpu vme de pse t,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/786:2011,error,error,2011,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/786,1,['error'],['error']
Availability,"abases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/g",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:1136,Down,Download,1136,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['Down'],['Download']
Availability,"abet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. splitsequence chrY tmp/4145379299737466142/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to nucl_split_seq_h: 0h 0m 0s 1ms; Time for merging to nucl_split_seq: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 8ms; indexdb tmp/4145379299737466142/nucl_split_seq chrY --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 8 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: indexdb died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:2717,mask,mask,2717,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082,4,"['Error', 'fault', 'mask']","['Error', 'fault', 'mask', 'mask-lower-case']"
Availability,"able 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter phrogs_mmseqs_db/phrogs_profile_db mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins.target_seq mmseqs_target_seq/[bacteria_of_interest]/tmp/15822818178659183495/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 7.0 . Query database size: 38880 type: Profile; Estimated memory consumption: 488M; Target database size: 125 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 125 0s 5ms; Index table: Masked residues: 124; Index table: fill; [=================================================================] 125 0s 6ms; Index statistics; Entries: 25103; DB size: 488 MB; Avg k-mer size: 0.000392; Top 10 k-mers; ALGLAA	2; TTGTAA	2; AAARKA	2; KASRKA	2; TEEALA	2; EDLLRA	2; INGNED	2; ASARED	2; GKHHRD	2; AELKAE	2; Time for index table init: 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:5398,mask,mask,5398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,2,['mask'],"['mask', 'mask-prob']"
Availability,"able 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28ms; Time for processing: 0h 0m 1s 808ms; rescorediagonal tmp/3198441352783276465/input tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.5 -a 0 --cov-mo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:6471,mask,mask,6471,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,2,['mask'],"['mask', 'mask-prob']"
Availability,"ace-limit 0 --remove-tmp-files 0. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Program call:; align /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db /tmp/global2/nyoungblut/LLMGAG_27929269397",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032:4837,Mask,Mask,4837,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032,1,['Mask'],['Mask']
Availability,"achieve this effect. I have configured passwordless ssh from master to slave through an ssh-key transfer. SSH can be accomplished through `ssh slave`. Moreover, there is a common NFS mounted to both nodes.; ; ## Steps to Reproduce (for bugs); First, I cd into the NFS directory (`'/mnt'`), then create the DB:. `mmseqs createdb /mnt/QUERY.fasta /mnt/DB`. which runs as expected. Then I run . `RUNNER=""mpirun -np 4 --host master,slave"" mmseqs cluster /mnt/DB /mnt/clu /mnt/tmp`. where /mnt is a NFS that is mounted to both the master and slave nodes. . ## MMseqs Output (for bugs); ```; Program call:; /mnt/DB /mnt/clu /mnt/tmp . MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 20; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:1143,Mask,Mask,1143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['Mask'],['Mask']
Availability,"ad-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag d",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7028,mask,mask-lower-case,7028,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['mask'],['mask-lower-case']
Availability,add module to recover longest orf per read after fragment elimination during taxonomy assignment.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/832:14,recover,recover,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/832,1,['recover'],['recover']
Availability,"age 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	1; Search steps 	3; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 1.000 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:4709,mask,mask,4709,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"aivan/prog/MMseqs2/build/bin/mmseqs prefilter /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db /usr/lusers/aivan/work/isolates/tmp/2017_06/tmp/pref_step_FRAG --max-seqs 4000 --min-ungapped-score 100 --comp-bias-corr 0 -s 1; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; Program call:; /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db /usr/lusers/aivan/work/isolates/tmp/2017_06/tmp/pref_step_FRAG --max-seqs 4000 --min-ungapped-score 100 --comp-bias-corr 0 -s 1 . MMseqs Version: 	31e25cb081a874f225d443eec307a6254f06a291; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	4000; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	0; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	100; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Threads 	28; Verbosity 	3. Initialising data structures...; Using 28 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (5939332903 byte) of total memory (269768237056 byte); Target database: /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db(Size: 1282204); Substitution matrices...; [New Thread 0x2aaac5d87700 (LWP 8622)]; [New Thread 0x2aaac5f88700 (LWP 8623)]; [New Thread 0x2aaac6189700 (LWP 8624)]; [New Thread 0x2aaac638a700 (LWP 8625)]; [New Thread 0x2aaac658b700 (LWP 8626)]; [New Thread 0x2aaac678c700 (LWP 8627)]; [New Thread 0x2aaac698d700 (LWP 8628)]; [New Thread 0x2aaac6b8e700 (LWP 8629)]; [New Thread 0x2aaac6d8f700 (LWP 8630)]; [New Thread 0x2aaac6f90700 (LWP 8631)]; [New Thread 0x2aaac7191700 (LWP 8632)]; [New Thread 0x2aaac73927",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/37:1484,Mask,Mask,1484,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/37,1,['Mask'],['Mask']
Availability,"ake sure to also post the complete output of MMseqs. You can use gist.github.com for large output. BELLOW is the output =>. Program call:; search queryDB targetDB resultDB tmp. MMseqs Version: 9357bb750290e2862ab4da522f03c971f71cfff3; Substitution Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 4; Compressed 0; Verbosity 3; Seed Substitution Matrix PAM30.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the M",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/171:1296,Mask,Mask,1296,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/171,1,['Mask'],['Mask']
Availability,"al bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 240; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp fal",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/720:1752,Mask,Mask,1752,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720,1,['Mask'],['Mask']
Availability,"alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:3522,Mask,Mask,3522,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['Mask'],['Mask']
Availability,"all50.mm.db experiments/tmp/ --min-seq-id 0.5; linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5 . MMseqs Version: 	02be0c4ea6183fce9cf45521a8c145d10f3928c1; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Threads 	12; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:3944,Mask,Mask,3944,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,2,['Mask'],['Mask']
Availability,and for the original cluster-reassign problem:. ` mmseqs cluster DB_in/artificial_DB DB_clu/set_cover_reassign set_cover_reassign_tmp --cluster-mode 0 --cov-mode 0 --cluster-reassign 1 --mask 0`. gives:. ```; swapdb set_cover_reassign_tmp/17639961554283803127/seq_wrong_assigned_pref set_cover_reassign_tmp/17639961554283803127/seq_wrong_assigned_pref_swaped --threads 16 --compressed 0 -v 3. Input set_cover_reassign_tmp/17639961554283803127/seq_wrong_assigned_pref does not exist; Error: swapdb2 reassign died. ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774039100:187,mask,mask,187,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774039100,2,"['Error', 'mask']","['Error', 'mask']"
Availability,"ani/databases/mmseqsRefSeqCompleteDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5 . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Substitution matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	1e-05; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	3; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	2; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	25; Previous max results per query 	; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames extractorfs mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB tmp/15531098257495296432/q_orfs --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:3137,Mask,Mask,3137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,2,['Mask'],['Mask']
Availability,"ant a search of nucleotide against nucleotides. ## Steps to Reproduce (for bugs). For the creation of the database I followed this ; ```; mmseqs createdb samples.fasta viral_db; mmseqs cluster viral_db viral6_clu tEmp --min-seq-id 0.9 -c 0.8 --cov-mode 2 --remove-tmp-files 1 --threads 1 --split-memory-limit 60G; mmseqs createsubdb viral_clu viral_db viral_rep; ```; Then I merged 2 fastq files with _plass_; `plass mergereads ./OUT/8813_paired_1.fastq ./OUT/8813_paired_2.fastq ./OUT/8813_db --threads 10; `; I thought [this was the way](https://github.com/soedinglab/MMseqs2/issues/436) to feed the next steps, 8813_db would be the query in this case. I reasoned since the database of nonredundant proteins is in nucleotide format and the reads created a nucleotide database the search would be between nucleotide. . **I run** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --search-type 3; `. I got this error ; ```; Unrecognized parameter --search-type; Did you mean ""--seed-sub-mat""?; ```. **Or** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --seed-sub-mat nucl`. and I got this message error; ```; It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:1238,error,error,1238,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['error'],['error']
Availability,"appeared to be fine. ```; # command:; mmseqs databases UniProtKB/Swiss-Prot ""$OUT_DIR""/uniprotkb_swissprot ""$TMP_DIR"" --threads 128 --remove-tmp-files. # output directory:; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB_h.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:1009,Down,Download,1009,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806,1,['Down'],['Download']
Availability,"appingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; $conda activate /project/winter_pea_endophytes_2022/MMseqs. Server:; ceres.scinet.usda; resources allocation; $salloc -p short -N 2 -n 80 -t 12:00:00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/689:1646,error,error,1646,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689,3,"['Error', 'error']","['Error', 'error']"
Availability,"arity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use the clusters to create HMMs. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 12.113e3; * Which MMseqs version was used (Conda install): 12.113e3; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU Model: Intel(R) Xeon(R) CPU E5-2698 v4 @ 2.20GHz, supports sse4_1, sse4_2, MEM Free: 200GB, MEM Total: 256GB; * Operating system and version: Red Hat 4.4.7-18, gcc version 4.4.7 20120313",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/415:1610,fault,fault,1610,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"arts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. extractorfs KLEB_PO07_megahitDB tmp/6964202514022042695/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-; mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-; lookup 0 --threads 32 --compressed 0 -v 3. [=================================================================] 24.08K 1s 376ms; Time for merging to orfs_aa_h: 0h 0m 0s 504ms; Time for merging to orfs_aa: 0h 0m 0s 706ms; Time for processing: 0h 0m 6s 520ms; prefilter tmp/6964202514022042695/orfs_aa /home/sdwork/scratch/metagenomics/uniref_db/uniref90 tmp/6964202514022042695/orfs_pref --sub-mat 'aa:blosum62.out,; nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-siz; e aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale; 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-; load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Query database size: 627284 type: Aminoacid; Estimated memory consumption: 717G; Target database size: 187136236 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:4047,mask,mask,4047,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741,3,['mask'],"['mask', 'mask-lower-case', 'mask-prob']"
Availability,"as a follow up comment, i get this error when run the suggested ""non-easy-search"" commands:. ```; mmseqs createdb query.fasta qdb; mmseqs search qdb target result tmp; mmseqs result2msa qdb target result result_msa; mmseqs unpackdb result_msa outdir; ```. Error:; ```; Cannot open lookup file result_msa.lookup!; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693#issuecomment-1516353048:35,error,error,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693#issuecomment-1516353048,2,"['Error', 'error']","['Error', 'error']"
Availability,"at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Steps to Reproduce (for bugs). **Install**. ```bash; mamba create -y -n mmseqs2 -c conda-forge -c bioconda -c defaults mmseqs2==15.6f452; conda activate mmseqs2; ```. **DB setup**; ```bash; mmseqs databases GTDB mmseqs2-GTDB-db tmp; ```. **Making small test data**; ```bash; wget -O e-coli.fasta.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/005/845/GCA_000005845.2_ASM584v2/GCA_000005845.2_ASM584v2_genomic.fna.gz. gunzip e-coli.fasta.gz. grep -c "">"" e-coli.fasta; # there is only one contig, so safe to just pull some lines. printf "">contig_1\n"" > contigs.fasta; sed -n '100,1200p' e-coli.fasta >> contigs.fasta; printf "">contig_2\n"" >> contigs.fasta; sed -n '20000,20600p' e-coli.fasta >> contigs.fasta; printf "">contig_3\n"" >> contigs.fasta; sed -n '26000,26200p' e-coli.fasta >> contigs.fasta; # that's 3 contigs: 88,000 bps; 48,000 bps; and 16,000 bps; ```. **Running the program**; ```bash; mmseqs easy-taxonomy contigs.fasta mmseqs2-GTDB-db GTDB-tax-result tax-tmp \; --threads 20 --tax-lineage 1 --compressed 1 --remove-tmp-files 0; ```. ## MMseqs Output (for bugs). Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Context; Trying to get taxonomy output via GTDB with lineage info added. Using the NCBI database completes successfully on the same input query. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. - mmseqs2 version 15.6f452 installed with conda; - working on Ubuntu 20.04.4 LTS; - 500 GB memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806:1760,Error,Error,1760,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806,4,"['Error', 'error']","['Error', 'error']"
Availability,"at nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12919340; Target db start 1 to 6459670; [==. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 	13.45111; I'm working in a 240 CPU node cluster, my job submission intends to occupy 128 out of 128 cores available per node, each node has a total memory of 512 GB. Regarding the OS, it's running CentosOS 8.1 and uses Slurm 20.11.0 as a job resource manager, Package Build Env: Spack v0.15, Software Deployment Environment: Lmod 8.2.10 and GCC 8.3.1 as the MPI compiler.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:12792,avail,available,12792,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['avail'],['available']
Availability,"ated to ""word""...; Reading symbols from mmseqs...expanding to full symbols...done.; (gdb) r; Starting program: /home/disque2To/home/romain/logiciel/MMseqs2/build/bin/mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; Program call:; createdb dpann_cpr.faa dpann_cpr_mmseq_db/ . MMseqs Version: 	a951e4dede7e9b52e514119d083ff4ca80ad1565; Max. sequence length 	65535; Split Seq. by len 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; .........................................................Time for merging files: 0h 0m 1s 184ms. Program received signal SIGSEGV, Segmentation fault.; __GI___fileno (fp=0x0) at fileno.c:35; 35	fileno.c: Aucun fichier ou dossier de ce type.; (gdb) bt; #0 __GI___fileno (fp=0x0) at fileno.c:35; #1 0x000000000058a276 in Concat::concatFiles (files=0x1187530, n=32, outFile=0x0); at /home/romain/logiciel/MMseqs2/src/commons/Concat.h:113; #2 0x0000000000588e40 in DBWriter::mergeResults (outFileName=0x117feb0 ""dpann_cpr_mmseq_db/"", ; outFileNameIndex=0x11818e0 ""dpann_cpr_mmseq_db/.index"", dataFileNames=0x1186100, indexFileNames=0x1186320, fileCount=32, ; lexicographicOrder=false) at /home/romain/logiciel/MMseqs2/src/commons/DBWriter.cpp:543; #3 0x0000000000586e74 in DBWriter::close (this=0x7fffffff57e0) at /home/romain/logiciel/MMseqs2/src/commons/DBWriter.cpp:239; #4 0x0000000000619954 in createdb(int, char const**, Command const&) (); #5 0x0000000000555b7f in runCommand (p=..., argc=2, argv=0x7fffffffdc78) at /home/romain/logiciel/MMseqs2/src/commons/Application.cpp:62; #6 0x000000000055634a in main (argc=4, argv",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/141#issuecomment-445211494:1835,fault,fault,1835,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/141#issuecomment-445211494,1,['fault'],['fault']
Availability,"ateindex ./MMseqs2DB/MMseqs2DB ./tmp --threads 48 --search-type 3 `; ## MMseqs Output (for bugs); Didn't collect the stdout/errr =\ only have these from the terminal; ```; Time for merging to nucl_split_seq_h: 0h 5m 44s 19ms; Time for merging to nucl_split_seq: 0h 4m 40s 563ms; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; [>                                                                ] 0.00% 1 eta ./tmp/11929725182862116610/createindex.sh: line 56: 16913 Segmentation fault      ""$MMSEQS"" $INDEXER ""$2/nucl_split_seq"" ""$INPUT"" $INDEX_PAR; Error: indexdb died; ```. ## Context; I'll need to reuse this DB several times, objective is to reduce overall runtime. ; Also, I noticed that seven *.idx[0-6] and seven *.idx.index[0-6] are created in the dir ./MMseqs2DB/ , but only the file MMseqs2DB.idx.0 isn't 0 bytes in size / increases (don't know if this is realted, but it reaches almost exactly 150.0GB (size when createindex crashed).; Any help is appreciated, hopefully I didn't miss something obvious :-); ## Your Environment; `MMseqs2 Version: f966bfa62a2b52d4821e908ac9e25808d1be0b81`; Using the avx2 binary, ; CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; OS: Linux 3.10.0-693.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280:1533,fault,fault,1533,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280,2,"['Error', 'fault']","['Error', 'fault']"
Availability,ation Table 1; Number search iterations 1; Start sensitivity 4; Search steps 1; Sets the MPI runner; Remove Temporary Files false. Tmp tmp folder does not exist or is not a directory.; Created dir tmp; Program call:; /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/QUERY /home/banaeiak/thesis/L aing/MMseqs2ResultsCelegans/DB /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegan s/tmp/5905259317257326532/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483 647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 -- min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 32 -v 3 - s 5.7. MMseqs Version: 2c5dcabb805a4bd6d2db64095782a211aa1153fe; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 32; Verbosity 3. Initialising data structures...; Using 32 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (5736197 byte) of total memory (67263340544 byte); Target database: /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/DB(Size: 982 ); Query database type: Nucleotide; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/QUERY(size=49 535); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 0; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 195; DB Size: 33938 (byte); Avg Kmer Size: 0.0476074; Top 10 Kmers; GGG,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/55:3811,Mask,Mask,3811,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55,1,['Mask'],['Mask']
Availability,"atrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	10; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:3683,mask,mask,3683,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['mask'],['mask']
Availability,"atrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:2981,Mask,Mask,2981,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,2,['Mask'],['Mask']
Availability,"at|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; *** Download Progress Summary as of Wed Sep 27 13:22:54 2023 *** ; ===============================================================================; [#",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:2012,error,errorCode,2012,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['error'],['errorCode']
Availability,"ax-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:5908,mask,mask,5908,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,2,['mask'],"['mask', 'mask-prob']"
Availability,"axDB as per [here](https://github.com/soedinglab/MMseqs2/wiki#taxonomy-assignment). ## Current Behavior; The job begins but is unexpectedly killed (see mmseqs output section below). ## MMseqs Output (for bugs); ```; cfos@pop-os:/data/clustered_nr$ mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; Create directory tmp; createtaxdb nr_rep_seq_db tmp --tax-mapping-file /data/clustered_nr/nr_rep_seq_to_taxid.map -v 3 . MMseqs Version: 	2fad714b525f1975b62c2d2b5aff28274ad57466; NCBI tax dump directory	; Taxonomy mapping file 	/data/clustered_nr/nr_rep_seq_to_taxid.map; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	20; Verbosity 	3. Download taxdump.tar.gz. 02/01 11:29:59 [NOTICE] Downloading 1 item(s); [#b8b044 0B/0B CN:1 DL:0B] ; 02/01 11:30:01 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#b8b044 51MiB/61MiB(84%) CN:1 DL:10MiB] ; 02/01 11:30:08 [NOTICE] Download complete: tmp/taxdump.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; b8b044|OK | 9.1MiB/s|tmp/taxdump.tar.gz. Status Legend:; (OK):download completed.; Loading nodes file ... Done, got 2550743 nodes; Loading merged file ... Done, added 75930 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```; ## Context; I want to search some query sequences locally against a clustered version of the NR database. I downloaded the clustered database and taxonomy files (nr_cluster_taxid_formatted_final.tsv.gz, nr_rep_seq.fasta.gz) from [here](https://osf.io/tejwd/), which was created as per: https://research.arcadiascience.com/pub/resource-nr-clustering/release/3. I then processed the files like so:. ```; gunzip -c nr_cluster_taxid_formatted_final.tsv.gz | cut -f1,2 > nr_rep_seq_to_taxid.map; mmseqs createdb nr_rep_seq.fasta.gz nr_rep_seq_db; ```. After these comp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811:1312,Down,Download,1312,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811,1,['Down'],['Download']
Availability,"b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:2396,mask,mask,2396,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,2,['mask'],"['mask', 'mask-prob']"
Availability,"b 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 3s 166ms; rescorediagonal ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:11289,mask,mask,11289,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,2,['mask'],"['mask', 'mask-prob']"
Availability,"b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 64; Verbosity 3; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0.9; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Alphabet size 21; Kmer per sequence 21; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner. Set cluster mode SET COVER.; Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 -e 0.001 -c 0.8",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120:3423,Mask,Mask,3423,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120,1,['Mask'],['Mask']
Availability,base size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:30545,Mask,Masked,30545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,bash; mmseqs databases PDB mmseqs ~/data/tmp; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; databases PDB mmseqs /home/aomidi/data/tmp. MMseqs Version: 	6f45232ac8daca14e354ae320a4359056ec524c2; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	20; Verbosity 	3. 11/04 11:35:29 [NOTICE] Downloading 1 item(s); *** Download Progress Summary as of Sat Nov 4 11:36:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. *** Download Progress Summary as of Sat Nov 4 11:37:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. *** Download Progress Summary as of Sat Nov 4 11:38:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. *** Download Progress Summary as of Sat Nov 4 11:39:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; --------------------------------------------------------,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/772:1207,Down,Download,1207,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/772,1,['Down'],['Download']
Availability,"batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist """" --tax-lineage 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. **Full output and error attached below**. ```tmp/10336174962539687461/taxonomy_tmp/11653652317365833767/tmp_taxonomy/6923600097584969791/taxonomy.sh: line 58: 78000 Segmentation fault (core dumped) ""$MMSEQS"" lca ""${TARGET}"" ""${LCAIN}"" ""${RESULTS}"" ${LCA_PAR}```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **14.7e284**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; **40 cpus, 700gb RAM**; * Operating system and version:; * Operating System: **CentOS Linux 7 (Core)**; * Kernel: **Linux 3.10.0-1160.62.1.el7.x",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:3184,error,error,3184,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['error'],['error']
Availability,"bioconda has currently no support for ARM. Though there are some open pull requests in bioconda that will enable support for ARM on Linux at some point. . If you want to use MMseqs2 on an ARM machine, please download the ARM64 binaries from the latest GitHub release or from [mmseqs.com/latest](https://mmseqs.com/latest).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/744#issuecomment-1701474028:208,down,download,208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/744#issuecomment-1701474028,1,['down'],['download']
Availability,blastdbcmd: BLAST Database error: No alias or index file found for nucleotide database,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/383:27,error,error,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/383,1,['error'],['error']
Availability,"blastp.sh: line 86: Segmentation fault -> ""PreFilter died""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/55:33,fault,fault,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55,1,['fault'],['fault']
Availability,ble: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 0ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: Masked residues: 0; [=================================================================] 2 0s 15ms; Index table: Masked residues: 0; [=================================================================] 2 0s 66ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 43ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: counting k-mers; [=================================================================] 2 0s 62ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; [=================================================================] 2 0s 34ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: counting k-mers; Index table: counting k-mers; ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:33549,Mask,Masked,33549,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,"bs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 1; mmseqs-web-worker_1 | Target db start 1 to 10754; mmseqs-web-worker_1 | [=================================================================] 1 0s 4ms; mms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:22936,mask,mask,22936,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"bstitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:5933,mask,mask-lower-case,5933,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['mask'],['mask-lower-case']
Availability,c78 1.1GiB/2.7GiB(43%) CN:5 DL:105MiB ETA:15s]; [#e1fc78 1.2GiB/2.7GiB(46%) CN:5 DL:105MiB ETA:14s]; [#e1fc78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106MiB ETA:8s]; [#e1fc78 2.0GiB/2.7GiB(73%) CN:5 DL:106MiB ETA:7s]; [#e1fc78 2.1GiB/2.7GiB(77%) CN:5 DL:107MiB ETA:6s]; [#e1fc78 2.2GiB/2.7GiB(80%) CN:5 DL:107MiB ETA:5s]; [#e1fc78 2.3GiB/2.7GiB(84%) CN:5 DL:107MiB ETA:4s]; [#e1fc78 2.4GiB/2.7GiB(88%) CN:5 DL:108MiB ETA:3s]; [#e1fc78 2.5GiB/2.7GiB(92%) CN:5 DL:108MiB ETA:2s]; [#e1fc78 2.6GiB/2.7GiB(95%) CN:5 DL:108MiB ETA:1s]; [#e1fc78 2.7GiB/2.7GiB(99%) CN:1 DL:107MiB]. 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e1fc78|OK | 105MiB/s|tmp/3093587253482177683/eukaryota.tar. Status Legend:; (OK):download completed. 10/13 10:51:26 [NOTICE] Downloading 1 item(s). 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 0f25a5|OK | 40MiB/s|tmp/3093587253482177683/viruses.tar. Status Legend:; (OK):download completed.; tar2db tmp/3093587253482177683/bacteria.tar tmp/3093587253482177683/archea.tar tmp/3093587253482177683/eukaryota.tar tmp/3093587253482177683/viruses.tar tmp/3093587253482177683/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 94ms; Time for merging to msa.lookup: 0h 0m 0s 47ms; Time for processing: 0h 0m 17s 19ms; msa2profile tmp/3093587253482177683/msa mmseqs_eggNOG/mmseqs_eggNOG --match-mode 1 --match-,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:5509,Down,Download,5509,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,1,['Down'],['Download']
Availability,c78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106MiB ETA:8s]; [#e1fc78 2.0GiB/2.7GiB(73%) CN:5 DL:106MiB ETA:7s]; [#e1fc78 2.1GiB/2.7GiB(77%) CN:5 DL:107MiB ETA:6s]; [#e1fc78 2.2GiB/2.7GiB(80%) CN:5 DL:107MiB ETA:5s]; [#e1fc78 2.3GiB/2.7GiB(84%) CN:5 DL:107MiB ETA:4s]; [#e1fc78 2.4GiB/2.7GiB(88%) CN:5 DL:108MiB ETA:3s]; [#e1fc78 2.5GiB/2.7GiB(92%) CN:5 DL:108MiB ETA:2s]; [#e1fc78 2.6GiB/2.7GiB(95%) CN:5 DL:108MiB ETA:1s]; [#e1fc78 2.7GiB/2.7GiB(99%) CN:1 DL:107MiB]. 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e1fc78|OK | 105MiB/s|tmp/3093587253482177683/eukaryota.tar. Status Legend:; (OK):download completed. 10/13 10:51:26 [NOTICE] Downloading 1 item(s). 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 0f25a5|OK | 40MiB/s|tmp/3093587253482177683/viruses.tar. Status Legend:; (OK):download completed.; tar2db tmp/3093587253482177683/bacteria.tar tmp/3093587253482177683/archea.tar tmp/3093587253482177683/eukaryota.tar tmp/3093587253482177683/viruses.tar tmp/3093587253482177683/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 94ms; Time for merging to msa.lookup: 0h 0m 0s 47ms; Time for processing: 0h 0m 17s 19ms; msa2profile tmp/3093587253482177683/msa mmseqs_eggNOG/mmseqs_eggNOG --match-mode 1 --match-ratio 0.5 --threads 64 -v 3 . Finding maximum sequence length and set size.; Error: msa2profile died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:5721,down,download,5721,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,6,"['Down', 'Error', 'down']","['Download', 'Downloading', 'Error', 'download']"
Availability,"ca-ranks phylum:superphylum:subkingdom:kingdom:superkingdom --threads 24 /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/genes_tax_db /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode 	fa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032:1195,Mask,Mask,1195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032,1,['Mask'],['Mask']
Availability,can mmseqs databases use mirror site for downloading uniref DBs ?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/791:41,down,downloading,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/791,1,['down'],['downloading']
Availability,"case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/18375844090983922724/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 ; -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 160 --compressed 0 -v 3. [====================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:2355,mask,mask,2355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"ccept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Prefilter mode 	0; Exhaustive search mode 	true; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runne",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:2127,Mask,Mask,2127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['Mask'],['Mask']
Availability,"ccept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI ru",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:1702,Mask,Mask,1702,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257,1,['Mask'],['Mask']
Availability,"ccept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7003,mask,mask,7003,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,2,['mask'],"['mask', 'mask-prob']"
Availability,"ce a taxonomy database. ## Current Behavior; Fails to download anything and database creation crashes. Inspection of the ../data/workflow/databases.sh script shows the link to download a .tsv file from the kalamari repo is no longer valid. . ## Steps to Reproduce (for bugs); `mmseqs databases Kalamari kalamari tmp`. ## MMseqs Output (for bugs). ```; databases Kalamari kalamari tmp . MMseqs Version: 	fcf52600801a73e95fd74068e1bb1afb437d719d; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	8; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 14 100 14 0 0 34 0 --:--:-- --:--:-- --:--:-- 34; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 32 0 32 0 0 24 0 --:--:-- 0:00:01 --:--:-- 24; createdb tmp/10928370746232574590/kalamari.fasta kalamari --compressed 0 -v 3 . Converting sequences. Time for merging to kalamari_h: 0h 0m 0s 3ms; Time for merging to kalamari: 0h 0m 0s 3ms; Database type: Nucleotide; The input files have no entry: - tmp/10928370746232574590/kalamari.fasta; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died; ```. ## Context; Updating the link might partially resolve the error. I have tried a manual download of the Kalamari database but can't get the final taxonomy database to be successfully produced. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):MMseqs Version: 	fcf52600801a73e95fd74068e1bb1afb437d719d; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ARMv8 Processor rev 0 (v8l) × 8 ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/531:1346,Error,Error,1346,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/531,3,"['Error', 'down', 'error']","['Error', 'download', 'error']"
Availability,ce length 	32000; > Profile 	false; > Max. results per query 	1; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > ; > Initialising data structures...; > Using 4 threads.; > ; > Cound not find precomputed index. Compute index.; > Query database: tmp/NEWDB.newSeqs(size=182); > Target database: tmp/OLDDB.mapped.repSeq(size=3); > Use kmer size 6 and split 1 using split mode 0; > Needed memory (1381015863 byte) of total memory (25769803776 byte); > Substitution matrices...; > Time for init: 0 h 0 m 1s; > ; > ; > Process prefiltering step 0 of 1; > ; > Index table: counting k-mers...; > WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence.; > WARNING: Sequence (dbKey=21) contains only ATGC. It might be a nucleotide sequence.; > ; > Index table: Masked residues: 0; > Index table: fill...; > Index table: removing duplicate entries...; > Index table init done.; > ; > DB statistic; > Entries: 181; > DB Size: 686130054 (byte); > Avg Kmer Size: 2.11039e-06; > Top 10 Kmers; > 	LRIDDA		1; > 	YSLDDA		1; > 	RRLGEA		1; > 	IGEREA		1; > 	RDKPGA		1; > 	GFTIIA		1; > 	WIRAKA		1; > 	LRRDPA		1; > 	HKRERA		1; > 	KTEKRA		1; > Min Kmer Size: 0; > Empty list: 85765939; > ; > Time for index table init: 0 h 0 m 1s; > ; > ; > k-mer similarity threshold: 103; > k-mer match probability: 0; > ; > Starting prefiltering scores calculation (step 0 of 1); > Query db start 0 to 182; > Target db start 0 to 3; > ; > 67 k-mers per position.; > 0 DB matches per sequence.; > 0 Overflows .; > 0 sequences passed prefiltering per query sequence.; > Median result list size: 0; > 176 sequences with 0 size result lists.; > ; > ; > Time for prefiltering scores calculation: 0 h 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > ; > Overall time for prefiltering run: 0 h 0 m 1s; > Pr,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:8208,Mask,Masked,8208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['Mask'],['Masked']
Availability,ce limit 	0; > Sets the MPI runner 	; > Remove Temporary Files 	false; > ; > Program call:; > prefilter tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 --sub-mat blosum62.out -s 7.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 17702628 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 1 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	65535; > Max. results per query 	17702628; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	true; > Spaced Kmer 	1; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Spaced k-mer pattern 	; > Threads 	15; > Verbosity 	3; > ; > Initialising data structures...; > Using 15 threads.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: 7; > CompBiasCorr: 1; > AlphabetSize: 21; > Masked: 1; > Spaced: 1; > KmerScore: 81; > SequenceType: 0; > Headers1: 1; > Headers2: 0; > ScoreMatrix: blosum62.out; > Substitution matrices...; > Substitution matrices...; > Use kmer size 7 and split 1 using Target split mode.; > Needed memory (68450582001 byte) of total memory (181308646195 byte); > Target database: /databases/fadb/freeze/all.mmseqs(Size: 17702628); > Query database type: Aminoacid; > Target database type: Aminoacid; > Time for init: 0h 3m 7s 669ms; > Query database: tcd,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:3433,Mask,Mask,3433,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['Mask'],['Mask']
Availability,"clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 6ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 2ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 117ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 46ms. 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 845ms; align clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:12895,Mask,Masked,12895,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['Mask'],['Masked']
Availability,"clu_not_accepted_swap: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 70ms; createsubdb tmpfiles//13298481167543164943/clu_not_accepted_swap DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; createsubdb tmpfiles//13298481167543164943/clu DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 10 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 210 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 210 0s 6ms; Index statistics; Entries: 1284; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 989ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10; Target db start 1 to 210; [===========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:27744,mask,mask,27744,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.99 --cov-mode 1 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 . Query database size: 119070883 type: Nucleotide; Estimated memory consumption: 544G; Target database size: 119070883 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 119.07M 11m 59s 618ms ; Index table: Masked residues: 1954198777; Index table: fill; [=================================================================] 100.00% 119.07M 8m 53s 150ms ; Index statistics; Entries: 43365843082; DB size: 248141 MB; Avg k-mer size: 2646841.008423; Top 10 k-mers; AAAAAAA	23063795; AAATTAA	21644433; AATTTAA	21117606; AAAAATT	20537065; AAATTTT	19681970; TTTTTTT	19035614; AATTTTT	18870179; ATTTTTT	17045685; TTTATTT	16633440; ATAAATT	16256141; Time for index table init: 0h 23m 3s 602ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 119070883; Target db start 1 to 119070883; [> ] 0.00% 1 eta -. Here are the files that were so far created in the tmp directory:; -rwx------ 1 btschits biogeo 11721 Apr 16 18:49 cascaded_clustering.sh; -rw-r--r-- 1 btschits biogeo 4 Apr 16 20:38 clu_redundancy.dbtype; -rw-r--r-- 1 btschits biogeo 2631811454 Apr 16 20:38 clu_redundancy.index; -rw-r--r-- 1 btschits biogeo 28134491 Apr 16 20:37 clu_redundancy.0; -rw-r--r-- 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:11045,Mask,Masked,11045,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['Mask'],['Masked']
Availability,"clusthash doesn't seem to use all given threads, and result2flat breaks with ""segmentation fault""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261:91,fault,fault,91,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261,1,['fault'],['fault']
Availability,commit 3c3dc6e924127b9b297b078800228b3fd876452d solved the runtime error on my data. Thanks!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418548672:67,error,error,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418548672,1,['error'],['error']
Availability,"consensus2 .mmseqs_tmp/10144503605536445033/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 48 --compressed 0 -v 3 -s 7.0 . Query database size: 1270615 type: Profile; Estimated memory consumption: 7G; Target database size: 1270615 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1.27M 6s 285ms; Index table: Masked residues: 39476984; Index table: fill; [=================================================================] 1.27M 5s 428ms; Index statistics; Entries: 522806522; DB size: 3479 MB; Avg k-mer size: 8.168852; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1270615; Target db start 1 to 1270615; [=================================================================] 1.27M 2h 31m 44s 357ms. 1266.108246 k-mers per position; 3373560 DB matches per sequence; 626307 overflows; 21 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 601 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 657ms; Time for processing: 2h 32m 1s 811ms; align euk72-90.profile2 euk",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:9095,Mask,Masked,9095,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['Mask'],['Masked']
Availability,convertprofiledb throwing segmentation faults,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/741:39,fault,faults,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/741,1,['fault'],['faults']
Availability,"count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Program call:; rescorediagonal tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:6694,Mask,Mask,6694,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['Mask'],['Mask']
Availability,"cov-mode 1. usage: mmseqs easy-linclust <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]> <o:clusterPrefix> <tmpDir> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: prefilter:; --comp-bias-corr INT Correct for locally biased amino acid composition (range 0-1) [1]; --comp-bias-corr-scale FLOAT Correct for locally biased amino acid composition (range 0-1) [1.000]; --add-self-matches BOOL Artificially add entries of queries with themselves (for clustering) [0]; --alph-size TWIN Alphabet size (range 2-21) [aa:21,nucl:5]; --spaced-kmer-mode INT 0: use consecutive positions in k-mers; 1: use spaced k-mers [0]; --spaced-kmer-pattern STR User-specified spaced k-mer pattern []; --mask INT Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis module) [0]; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [0]; --alignment-output-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; 5: score only (output) cluster format [0]; --wrapped-scoring BOOL Double the (nucleotide) query sequence during the scoring process to allow wrapped diagonal scoring around end and start [0]; -e DOUBLE List matches below this E-value (range 0.0-inf) [1.000E-03]; --min-seq-id FLOAT List matches above this sequence identity (for clustering) (range 0.0-1.0) [0.000]; --min-aln",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:1614,mask,mask-lower-case,1614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,1,['mask'],['mask-lower-case']
Availability,create taxonomy memory error,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/232:23,error,error,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232,1,['error'],['error']
Availability,createtaxdb error /createindex.sh: line 47,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/370:12,error,error,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370,1,['error'],['error']
Availability,"createtsv ""Invalid database read"" error",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/501:34,error,error,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501,1,['error'],['error']
Availability,"ct 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	10000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:2839,Mask,Mask,2839,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['Mask'],['Mask']
Availability,"ct 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:2871,Mask,Mask,2871,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['Mask'],['Mask']
Availability,ct src/CMakeFiles/mmseqs-framework.dir/util/diffseqdbs.cpp.o; [ 72%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/expandaln.cpp.o; [ 73%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractalignedregion.cpp.o; [ 73%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractdomains.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractorfs.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/orftocontig.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/touchdb.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/filterdb.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/gff2db.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/renamedbkeys.cpp.o; [ 76%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/masksequence.cpp.o; [ 76%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/maskbygff.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergeclusters.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergeresultsbyset.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergedbs.cpp.o; [ 78%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/msa2profile.cpp.o; [ 78%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/msa2result.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/nrtotaxmapping.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/countkmer.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/pairaln.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/prefixid.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/profile2pssm.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/profile2neff.cpp.o; [ 81%] Building CXX object ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:21166,mask,maskbygff,21166,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['mask'],['maskbygff']
Availability,"cy ./mmseqs_output/tmp/5351426679731834765/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 20942 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 20942 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 20.94K 0s 601ms; Index table: Masked residues: 6638; Index table: fill; [=================================================================] 20.94K 0s 645ms; Index statistics; Entries: 1435009; DB size: 496 MB; Avg k-mer size: 0.022422; Top 10 k-mers; GPGGTL 342; LDMPDG 185; LGDYKP 145; DVLDMP 119; PFLEAR 69; PFPEAR 65; FDDTDS 59; ADYTFS 55; LITRGY 55; GPGGTT 44; Time for index table init: 0h 0m 2s 668ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 20942; Target db start 1 to 20942; [=================================================================] 20.94K 0s 928ms. 1.256278 k-mers per position; 118 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 8 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 51ms; Time for processing: 0h 0m 6s 669ms; align ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseq",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:20077,Mask,Masked,20077,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['Mask'],['Masked']
Availability,"d 	0; Threads 	64; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Exhaustive search mode 	false; Fil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438:3195,Mask,Mask,3195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438,2,['Mask'],['Mask']
Availability,"d 	0; Threads 	72; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:5869,Mask,Mask,5869,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,2,['Mask'],['Mask']
Availability,"d -db-mode 0 because createbintaxonomy kept crashing as well):; `mmseqs createtaxdb uniref90 tmp --tax-db-mode 0`. Created database for my query sequences:; `mmseqs createdb KLEB_PO07_megahit.fasta KLEB_PO07_megahitDB`. Ran mmseqs taxonomy on cluster with slurm script:; ```; #!/usr/bin/env bash. #SBATCH --job-name=KLEB_PO07_mmseqs; #SBATCH --cpus-per-task=32; #SBATCH --mem=150G; #SBATCH --time=0-3:00; #SBATCH --output=KLEB_PO07_mmseqs.log; #SBATCH --error=KLEB_PO07_mmseqs.err. module load mmseqs2/15-6f452; taxDB=/home/sdwork/scratch/metagenomics/uniref_db/uniref90. mmseqs taxonomy KLEB_PO07_megahitDB $taxDB KLEB_PO07_megahit_result tmp; ```. ## MMseqs Output (for bugs); [Full output can be found in this gist.](https://gist.github.com/sean-workman/531e9d5fc73635dee8c000f9da137fe0). I also see this output in my error file:; `tmp/1193166584733320518/tmp_taxonomy/17149912652888480377/tmp_hsp1/10699950925961740214/blastp.sh: line 135: 8379 Bus error (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""`. ## Context; I created metagenomic assemblies using megahit and metaSPAdes. I am trying to get MMseqs2 working to do taxonomic classification. I am running on Digital Research Alliance of Canada clusters. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15-6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Loaded as a module on a cluster.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: Unsure. I ran `lscpu` on a login node and got what is shown below, but the memory and CPUs that I had for the job were specified in the slurm job script shown above. ```; lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Litt",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838:1582,error,error,1582,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838,1,['error'],['error']
Availability,"d 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 12; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files true; Alignment format 0; Format alignment ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:1417,Mask,Mask,1417,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947,1,['Mask'],['Mask']
Availability,"d 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:5431,mask,mask,5431,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,2,['mask'],"['mask', 'mask-prob']"
Availability,"d from 27334 that now is empty, but not assigned to a cluster. ## MMseqs Output (for bugs); (base) [xshan@node422 blast]$ mmseqs cluster shrimpDB shrimp.clu97 tmp97 --cluster-mode 0 -s 7.5 --min-seq-id 0.97 --min-aln-len 200; Create directory tmp97; cluster shrimpDB shrimp.clu97 tmp97 --cluster-mode 0 -s 7.5 --min-seq-id 0.97 --min-aln-len 200. MMseqs Version: 	bb0a1b3569b9fe115f3bf63e5ba1da234748de23; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	20; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.97; Min alignment length 	200; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:1672,Mask,Mask,1672,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['Mask'],['Mask']
Availability,d-self-matches 1 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	65535; > Max. results per query 	17702628; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	true; > Spaced Kmer 	1; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Spaced k-mer pattern 	; > Threads 	15; > Verbosity 	3; > ; > Initialising data structures...; > Using 15 threads.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: 7; > CompBiasCorr: 1; > AlphabetSize: 21; > Masked: 1; > Spaced: 1; > KmerScore: 81; > SequenceType: 0; > Headers1: 1; > Headers2: 0; > ScoreMatrix: blosum62.out; > Substitution matrices...; > Substitution matrices...; > Use kmer size 7 and split 1 using Target split mode.; > Needed memory (68450582001 byte) of total memory (181308646195 byte); > Target database: /databases/fadb/freeze/all.mmseqs(Size: 17702628); > Query database type: Aminoacid; > Target database type: Aminoacid; > Time for init: 0h 3m 7s 669ms; > Query database: tcdb_query.nr.db(size=13311); > Process prefiltering step 1 of 1; > ; > k-mer similarity threshold: 81; > k-mer match probability: 0; > ; > Starting prefiltering scores calculation (step 1 of 1); > Query db start 1 to 13311; > Target db start 1 to 17702628; > Sequence 421 produces too many hits. Results might be truncated; > Sequence 470 produces too many hits. Results might be truncated; > Sequence 468 produces too many hits. Results might be truncated; > Sequence 1015 produces,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:3923,Mask,Masked,3923,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['Mask'],['Masked']
Availability,"d. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	true; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id.	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > ; > Init data structures...; > Compute score only.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: 7; > CompBiasCorr: 1; > AlphabetSize: 21; > Masked: 1; > Spaced: 1; > KmerScore: 81; > SequenceType: 0; > Headers1: 1; > Headers2: 0; > ScoreMatrix: blosum62.out; > Touch data file tcdb_query.nr.db ... Done.; > Query database type: Aminoacid; > Target database type: Aminoacid; > Calculation of Smith-Waterman alignments.; > Error: Alignment died; > . ## Context; I have two databases, they don't have equal entries but some sequences have 100% identity.; I try to search using --add-self-matches to cluster the result.; The search fails in alignment step when I use this options, without this options the search run well. . ## Your Environment. * Git commit used: 7ca117893675cdca309e2c9dfc444bbc7462e858; * Which MMseqs version was used: Linuxbrew; * Compiler and Cmake: cmake version 3.12.3; * Server specifications: 188Gb ; lscpu:; `; Architecture: x86_64 ; CPU op-mode(s): 32-bit, 64-bit ; Byte Order: Little Endian ; CPU(s): 36 ; On-line CPU(s) list: 0-35 ; Thread(s) per core: 2 ; Core(s) per socket: 18 ; Socket(s): 1 ; NUMA node(s): 1 ; Vendor ID: GenuineIntel ; CPU family: 6 ; Model: 85 ; Model name: Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz ; Stepping: 4 ; CPU MHz: 2680.333 ; BogoMIPS: 4600.00 ; Virtualization: VT-x ; L1d cache: 32K ; L1i cache: 32K ; L2 cache: 1024K ; L3 cache: 25344K ; NUMA node0 CPU(s): 0-35 ; Flags: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:8503,Error,Error,8503,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['Error'],['Error']
Availability,"da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread 0x7ffff5a0f700 (LWP 9088)]; [New Thread 0x7ffff520e700 (LWP 9089)]; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers... Thread 3 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffff5a0f700 (LWP 9088)]; 0x0000000000542911 in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (). ## Context; As already stated above, with smaller databases everything works fine. Even running a small different query set on the target database works just fine, as does the other way round (normal query, reduced target db).; Please tell me if u need the fasta files to recreate this bug. ## Your Environment; MMseqs2 Version: bcb164e42c79555cc521196c7f94f4b0123da048; Self-compiled build, following your description in ""Compile from source""; cmake version 3.5.2; gcc version 4.8.5 (SUSE Linux) ; Memory: 7.7 GiB RAM; openSUSE Leap 42.2, Kernel: 4.4.92-18.36-default, 64 bit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:4623,fault,fault,4623,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['fault'],['fault']
Availability,"dancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:10294,mask,mask-lower-case,10294,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['mask'],['mask-lower-case']
Availability,data/MATRIX.mat is missing and format_substitution_matrix.R is throwing an error,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/294:75,error,error,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/294,1,['error'],['error']
Availability,database download is quite slow,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/542:9,down,download,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542,1,['down'],['download']
Availability,"db tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Simila",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:1431,error,errors,1431,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['error'],['errors']
Availability,"dd backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	5; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/234:5191,Mask,Mask,5191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234,1,['Mask'],['Mask']
Availability,"dd backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	5; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/234:2795,Mask,Mask,2795,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234,1,['Mask'],['Mask']
Availability,"dd orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 3; Start sensitivity 4; Search iterations 3 [5/1999]; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter search_results/qdb db/uniref30_2103_db.idx search_results/tmp/12005814431969335264/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nuc; l:nucleotide.out -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is enough disk space and memory.; I tried to check the process status, and it is always in the `D` status with 100-200% CPU usage ( based on `htop` outputs).; Not sure how I can speed things up at this ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:3858,mask,mask-lower-case,3858,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,1,['mask'],['mask-lower-case']
Availability,"de 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.4; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb all_seq.fasta tmp/8115150149931881526/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [Multiline fasta can not be combined with --createdb-mode 0; We recompute with --createdb-mode 1; Time for merging to input_h: 0h 0m 0s 3ms; Time for merging to input: 0h 0m 0s 3ms; [=======; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 102ms; Create directory tmp/8115150149931881526/clu_tmp; linclust tmp/8115150",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:1529,Mask,Mask,1529,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['Mask'],['Mask']
Availability,"de 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db tmp/425628692068579862/linclust/13628666274102407548/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 10 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	10; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (795683200 byte) of total memory (365681560780 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ................................................; Time for fill: 0 h 0 m 14s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 4s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 2s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 2 s; Time for processing: 0 h 0 m 23s; Rescore dia",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:95418,Mask,Mask,95418,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['Mask'],['Mask']
Availability,"de 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward frames 	1,2,3; > Reverse frames 	1,2,3; > Translation table 	1; > Translate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Lin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:3130,mask,mask,3130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"de 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermat",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2388,mask,mask,2388,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"de 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1 . MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:1764,Mask,Mask,1764,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,2,['Mask'],['Mask']
Availability,"de only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-li",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:2623,mask,mask,2623,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"default matrix with the value ""5"" (except for -1 in X) and that died(!). So that makes me think there is something magic about not being allowed to make diagonal too uniform. . Matrix gen code (modify disperse parameter). ```; import random; alph=""A C D E F G H I K L M N P Q R S T V W Y X"".split(). disperse=0.7; print("" A C D E F G H I K L M N P Q R S T V W Y X""); #print("""",*alph,sep="" ""); for idx,l in enumerate(alph):; scores=[random.uniform(-1.0-disperse,-1.0+disperse) for _ in alph]; if l!=""X"":; scores[idx]=random.uniform(7.0-disperse,7.0+disperse); else:; scores[idx]=random.uniform(-1.0-disperse,-1.0+disperse); print(l,*(""{0:.4f}"".format(s) for s in scores),sep="" ""); ```. Then `identity.out` is produced by `python3 print_identity.py | ../MMseqs2/util/format_substitution_matrix.R > identity.out`. MMseqs call is; 1. `mmseqs createdb data.fasta mydb/mmdb --dbtype 1`; 2. `mmseqs createindex mydb/mmdb mydb/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0`. And here's the output of the 2nd command:. ```; Create dir eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp; createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:1198,mask,mask,1198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526,1,['mask'],['mask']
Availability,do count b 	1.5; > Number search iterations 	1; > Start sensitivity 	4; > sensitivity step size 	1; > Sets the MPI runner 	; > ; > /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp; > /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp; > Program call:; > tmp/NEWDB.newSeqs tmp/OLDDB.mapped.repSeq /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 1 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 -s 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	32000; > Profile 	false; > Max. results per query 	1; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > ; > Initialising data structures...; > Using 4 threads.; > ; > Cound not find precomputed index. Compute index.; > Query database: tmp/NEWDB.newSeqs(size=182); > Target database: tmp/OLDDB.mapped.repSeq(size=3); > Use kmer size 6 and split 1 using split mode 0; > Needed memory (1381015863 byte) of total memory (25769803776 byte); > Substitution matrices...; > Time for init: 0 h 0 m 1s; > ; > ; > Process prefiltering step 0 of 1; > ; > Index table: counting k-mers...; > WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence.; > WARNING: Sequence (dbKey=21) contains only ATGC. It might be a nucleotide sequence.; > ; > Index table: Masked residues: 0; > Index table: fill...; > Index table: removing duplicate entries...; > Index table init done.; > ; > DB statistic; > Entries: 181; > DB Size:,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:7409,Mask,Mask,7409,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['Mask'],['Mask']
Availability,"e 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	2147483647; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3. Substitution matrices...; Use kmer size 5 and split 1 using Target split mode.; Needed memory (20178976034 byte) of total memory (486687909888 byte); Index table: counting k-mers... ```. ## Context; Trying to generate a profile DB from the file `uniclust30_2018_08_hhm_db` contained the 18-08 release of Uniclust30; `http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz`; I am using `convertprofiledb` and then `createindex`... **NOTE:** I have used the same procedure to generate the profile DB using the HHblits profiles for Pfam 31 downloaded from:; `http://wwwuser.gwdg.de/%7Ecompbiol/data/hhsuite/databases/hhsuite_dbs/pfamA_31.0.tgz`. ## Your Environment; > MMseqs Version: 6.f5a1c; [f5a1cdb](https://github.com/soedinglab/MMseqs2/commit/f5a1cdb44c996d6be229226b09ecc687646c0c12); > MMseqs was self-compiled; > gcc (Homebrew gcc 5.5.0_4) 5.5.0; > cmake 3.12.3. ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130:2070,Mask,Mask,2070,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130,1,['Mask'],['Mask']
Availability,"e 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap 	0; Split seq. by length 	true; Database type 	0; Do not shuffle input database 	true; Greedy best hits 	false. Invalid input database and --search-type combination; queryDbType: Aminoacid; targetDbType: Profile; targetSrcDbType: Profile; searchMode: 0; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I should stop updating mmseqs. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; self-compiled: 70d09a2ea505d8b22d80286ae13dd4d9826ea303; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.14.3; CXX=""/usr/local/bin/g++-8"" CC=""/usr/local/bin/gcc-8"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local/biotools ../MMseqs2. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Mac OSX Mojave 10.14.4 (It was working!). * Operating system and version:; As a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/195:3010,Error,Error,3010,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/195,1,['Error'],['Error']
Availability,"e 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; ./kora_db ./kora_db --sub-mat blosum62.out -k 0 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --split 0 --split-memory-limit 0 --threads 40 -v 3. MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	40; Verbosity 	3. Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1380352223 byte) of total memory (486687909888 byte); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers... Index table: Masked residues: 3509; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 455436; DB Size: 514732616 (byte); Avg Kmer Size: 0.00711619; Top 10 Kmers; 	GPGGTL		17; 	LGNATT		8; 	LSLGLS		6; 	GPGGTT		6; 	SGQQAI		5; 	ALGNGK		5; 	LLGPGK		5; 	LVLILL		5; 	LLSLLL		5; 	LILLSL		5; Min Kmer Size: 0; Empty list: 63557059. Write ENTRIES (7); Write ENTRIESOFFSETS (8); Write SEQINDEXDATASIZE (12); Write SEQINDEXSEQOFFSET (13); Write MASKEDSEQINDEXDATA (11); Write ENTRIESNUM (9); Write SEQCOUNT (10); Write META (1); KmerSize: 6; AlphabetSize: 21; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 0; Write SCOREMATRIXNAME (2); Write VERSION (0); Write DBRINDEX (5); ./dbs/tmp_kora//createindex.sh: line 46: 6458 Aborted (core dumped) ""$MMSEQS"" indexdb ""$INPUT"" ""$INPUT"" $INDEX_PAR; Error: indexdb died. *** Error in `/mmseqs_binaries/c97f09/mmseqs': double free or corruption (!prev): 0x0000000000ed34c0 ***; ======= Backtrace: =========; /home/linuxbrew/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:2642,Mask,Masked,2642,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['Mask'],['Masked']
Availability,"e 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using Target split mode.; Needed memory (631391886584 byte) of total memory (129024000000 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size of --split or set it to 0 to automatically optimize target database split.; Write VERSION (0); Write META (1); MaxSeqLength: 65535; KmerSize: 7; CompBiasCorr: 1; AlphabetSize: 21; Masked: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers1: 1; Headers2: 0; Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ........................................................",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/161:2162,avail,available,2162,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161,1,['avail'],['available']
Availability,"e ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1; Threads 	30; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using split mode; Index table: counting k-mers...; ......................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; .............................................................................	1 Mio. sequences processed; ..........................................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; ....................................................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; .....	2 Mio. sequences processed. ... ...................................................................................................	107 Mio. sequences processed; .....",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:2282,mask,mask,2282,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['mask'],['mask']
Availability,"e 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 40; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Prefilter mode 0; Exhaustive search mode false; Filter results during e",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:1742,Mask,Mask,1742,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['Mask'],['Mask']
Availability,"e 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Exact k-mer matching 0 [49/1999]; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 3; Start sensitivity 4; Search iterations 3 [5/1999]; Start sensitivity 4; Search steps 1; Exhausti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:2115,Mask,Mask,2115,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,1,['Mask'],['Mask']
Availability,e 5.2GiB/5.7GiB(92%) CN:5 DL:112MiB ETA:4s]; [#422f0e 5.3GiB/5.7GiB(94%) CN:5 DL:112MiB ETA:3s]; [#422f0e 5.4GiB/5.7GiB(95%) CN:5 DL:112MiB ETA:2s]; [#422f0e 5.5GiB/5.7GiB(97%) CN:5 DL:112MiB ETA:1s]; [#422f0e 5.6GiB/5.7GiB(99%) CN:4 DL:112MiB]. 10/11 10:31:53 [NOTICE] Download complete: /space/jmd20jns/tmp/13406937569195620773/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 422f0e|OK | 111MiB/s|/space/jmd20jns/tmp/13406937569195620773/bacteria.tar. Status Legend:; (OK):download completed. 10/11 10:31:53 [NOTICE] Downloading 1 item(s); [#df1c91 84MiB/85MiB(98%) CN:1 DL:89MiB]. 10/11 10:31:54 [NOTICE] Download complete: /space/jmd20jns/tmp/13406937569195620773/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; df1c91|OK | 88MiB/s|/space/jmd20jns/tmp/13406937569195620773/archea.tar. Status Legend:; (OK):download completed. 10/11 10:31:54 [NOTICE] Downloading 1 item(s); [#14821b 89MiB/2.7GiB(3%) CN:5 DL:95MiB ETA:28s]; [#14821b 200MiB/2.7GiB(7%) CN:5 DL:104MiB ETA:25s]; [#14821b 311MiB/2.7GiB(10%) CN:5 DL:106MiB ETA:23s]; [#14821b 422MiB/2.7GiB(14%) CN:5 DL:108MiB ETA:22s]; [#14821b 533MiB/2.7GiB(18%) CN:5 DL:108MiB ETA:21s]; [#14821b 644MiB/2.7GiB(22%) CN:5 DL:109MiB ETA:19s]; [#14821b 755MiB/2.7GiB(26%) CN:5 DL:109MiB ETA:18s]; [#14821b 866MiB/2.7GiB(30%) CN:5 DL:110MiB ETA:17s]; [#14821b 0.9GiB/2.7GiB(34%) CN:5 DL:110MiB ETA:16s]; [#14821b 1.0GiB/2.7GiB(38%) CN:5 DL:110MiB ETA:15s]; [#14821b 1.1GiB/2.7GiB(42%) CN:5 DL:112MiB ETA:14s]; [#14821b 1.2GiB/2.7GiB(46%) CN:5 DL:112MiB ETA:13s]; [#14821b 1.3GiB/2.7GiB(50%) CN:5 DL:112MiB ETA:12s]; [#14821b 1.4GiB/2.7GiB(54%) CN:5 DL:112MiB ETA:11s]; [#14821b 1.6GiB/2.7GiB(57%) CN:5 DL:112MiB ETA:10s]; [#14821b 1.7GiB/2.7GiB(61%) CN:5 DL:112MiB ETA:9s]; [#14821b 1.8GiB/2.7GiB(65%) CN:5 DL:112MiB ETA:8s]; [#14821b 1.9GiB/2.7GiB(69%) CN:5 DL:1,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762:4152,down,download,4152,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762,1,['down'],['download']
Availability,e 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3. Initialising data structures...; Using 8 threads.; Could not find precomputed index. Compute index.; Touch data file mmseqs_dir/profile/Tenericutes_profile ... Done.; Substitution matrices...; Substitution matrices...; Use kmer size 5 and split 1 using Query split mode.; Needed memory (1005554861 byte) of total memory (487828463616 byte); Target database: mmseqs_dir/profile/Tenericutes_profile(Size: 8162); Index table k-mer threshold: 90; Index table: counting k-mers... Index table: Masked residues: 0; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 293010879; DB Size: 1790738082 (byte); Avg Kmer Size: 71.7443; Top 10 Kmers; KKKKK 1557; KKKNK 1519; KKKKN 1416; NNNNN 1398; KKKNN 1359; KNKNN 1349; NKNNN 1320; KNNNN 1306; KKNKN 1210; NNINN 1188; Min Kmer Size: 0; Empty list: 884115. Time for index table init: 0h 1m 32s 319ms; Query database type: Aminoacid; Target database type: Profile; Time for init: 0h 1m 32s 393ms; Query database: query_dbs/1000562_0(size=1370); Process prefiltering step 1 of 1. k-mer similarity threshold: 90; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1370; Target db start 1 to 8162. 0 k-mers per position.; 32539 DB matches per sequence.; 0 Overflows.; 160 sequences passed prefiltering per query sequence.; Median result list size: 149; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 0m 0s 776ms; Time ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521:4206,Mask,Masked,4206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521,1,['Mask'],['Masked']
Availability,"e `--min-seq-id` is 0.7 and 0.5. The aligned for each of the 3:; ```; mmseqs align ${DB_NAME} ${DB_NAME} ${DB_NAME}_clu${ID_THRESHOLD} ${DB_NAME}_clu${ID_THRESHOLD}_aln -a -e inf; ```; However, it's on the next step that it seems to stall. ; ```; mmseqs result2profile ${DB_NAME} ${DB_NAME} ${DB_NAME}_clu${ID_THRESHOLD}_aln ${DB_NAME}_clu${ID_THRESHOLD}_prof --threads 32; ```. I have 3 machines running in parallel to process these databases at the same time, and they're all stuck on exactly the same point. With CPU utilisation suggesting only 1-2 cores are being used. ; ```; PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 7869 miles 20 0 377.2g 97.8g 46.6g S 88.2 51.8 14d+18h mmseqs ; ```; Here is the output log of the `results2profile`:; ```; ~~ pldb70 Creating Profile: Thu 16 May 09:59:16 BST 2024; result2profile pldb pldb pldb_clu70_aln pldb_clu70_prof --threads 32 . MMseqs Version: 998c50a01da760713ca2c7580801e94555d23c4d; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; E-value threshold 0.001; Mask profile 1; Profile E-value threshold 0.001; Compositional bias 1; Compositional bias 1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Preload mode 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Threads 32; Compressed 0; Verbosity 3. Query database size: 108337839 type: Aminoacid; Target database size: 108337839 type: Aminoacid; [================================================================; ```. In my testing this step was as fast as the others, so I'm confused why this is taking days and seemingly not moving. One of the 3 machines is using mmseqs version 15.6f452, the other two are using 998c50a01da760713ca2c7580801e94555d23c4d.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848:1484,Mask,Mask,1484,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848,1,['Mask'],['Mask']
Availability,"e blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(int, const char**, const Command&)':; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp:72:12: warning",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3958,Down,Downloads,3958,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"e for processing: 0h 0m 0s 0ms; mvdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge_new tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_1 tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 267ms; Time for processing: 0h 0m 0s 790ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 6.0 . Query database size: 2271004 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 294ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 848ms; Index statistics; Entries: 5094244039; DB size: 38915 MB; Avg k-mer size: 3.979878; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 15s 901ms; Process prefiltering step 1 of 1. k-mer similarity ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:11704,mask,mask,11704,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"e haldane exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------. ```. It failed in the last step. ```; mpirun -np 4 cstranslate -i subset.MSA_ca3m.ffdata -o subset.MSA_cs219 -A /home/linuxbrew/anaconda3/data/cs219.lib -D /home/linuxbrew/anaconda3/data/context_data.lib -x 0.4 -c 4 -I ca3m; ```. The complete steps I used are described in this script. ```; #!/usr/bin/env bash. ## define files and parameters here; ## sequence file name like ""NAME.fa"" use only the base name NAME and the script will add the ""*.fa"" grob; BASE=""subset""; HH_CONTEXT_DATA=""/home/linuxbrew/anaconda3/data/context_data.lib""; HH_LIB=""/home/linuxbrew/anaconda3/data/cs219.lib""; THREADS=4; SENSITIVITY=7.5; IDENTITY=0; COVERAGE=0.8; EVALUE=0.00001. CLU_MODE=1. FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s ${SENSITIVITY} --threads ${THREADS} &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e ${EVALUE} \; --min-seq-id ${IDENTITY} -c ${COVERAGE} --threads ${THREADS} &>> ${FILELOG}; echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} --cluster-mode ${CLU_MODE} --threads ${THREADS} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress --threads ${THREADS} &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081:1920,echo,echo,1920,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081,1,['echo'],['echo']
Availability,"e name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.4; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb all_seq.fasta tmp/8115150149931881526/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [Multiline fasta can not be combined with --createdb-mode 0; We recompute with --createdb-mode 1; Time for merging to input_h: 0h 0m 0s 3ms; Time for merging to input: 0h 0m 0s 3ms; [=======; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 2ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:1479,Mask,Mask,1479,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,2,['Mask'],['Mask']
Availability,"e score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 6.5 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8273 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:7350,mask,mask,7350,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"e search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide; Estimated memory consumption: 1T; Target database size: 26422067 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [> ] 0.00% 1 eta -. tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevan",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/697:2379,mask,mask,2379,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697,2,['mask'],"['mask', 'mask-prob']"
Availability,e: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 a,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:30850,Mask,Masked,30850,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,e: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 0ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: Masked residues: 0; [=================================================================] 2 0s 15ms; Index table: Masked residues: 0; [=================================================================] 2 0s 66ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 43ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: counting k-mers; [=================================================================] 2 0s 62ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; [=================================================================] 2 0s 34ms; Index table: M,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:33437,Mask,Masked,33437,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,"e? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result database: CLU_updated; Start writing to clusters.tsv; Invalid database read for database data file=DB_updated_h, database index=DB_updated_h.index; getData: local id (4294967295) >= db size (17); ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment. * _Git commit used:_ 2f66ae897fc813450fa5ef0c78123bd3c41c4717; * _Which MMseqs version was used_: Compilation from source; * _Cmake versions used_: cmake version 3.5.1; * Op",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272:1479,Error,Error,1479,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272,1,['Error'],['Error']
Availability,easy-taxonomy error when using GTDB,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806:14,error,error,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806,1,['error'],['error']
Availability,easy-taxonomy raises a segmentation fault (but I obtain the output?),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447:36,fault,fault,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447,1,['fault'],['fault']
Availability,"eatProbs (this=0x7ffffffbaaa0, letterProbs=0x555556582704); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:373; #2 0x0000555555a8bf6b in tantan::getProbabilities (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, probabilities=0x555556582700); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:470; #3 0x0000555555a8be5f in tantan::maskSequences (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, minMaskProb=0.89999997615814209,; maskTable=0x7ffffffdc530 '\024' <repeats 200 times>...) at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:449; #4 0x000055555597de7b in PSSMMasker::mask (this=0x7ffffffbaca0, centerSequence=..., maskProb=0.899999976, pssmRes=...); at /mnt/disks/kc-ssd/MMseqs2/src/alignment/PSSMMasker.h:25; #5 0x00005555559f916b in result2profile () at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:262; #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86b7 in result2profile (argc=54, argv=0x7fffffffe138, command=..., returnAlnRes=false); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:140; #8 0x00005555559f885c in result2profile (argc=54, argv=0x7fffffffe138, command=...); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:311; #9 0x00005555557ea0b5 in runCommand (p=0x55555641eac0, argc=54, argv=0x7fffffffe138); at /mnt/disks/kc-ssd/MMseqs2/src/commons/Application.cpp:40; #10 0x00005555557eafea in main (argc=56, argv=0x7fffffffe128) at /mnt/disk",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961:1548,mask,maskTable,1548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961,1,['mask'],['maskTable']
Availability,"eating k-mers 	false. Set cluster iterations to 3; linclust shrimpDB tmp97/17949317426677965256/clu_redundancy tmp97/17949317426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:3984,mask,mask,3984,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,2,['mask'],"['mask', 'mask-prob']"
Availability,ect 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Sensitivity 	5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3. Initialising data structures...; Using 40 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1374076390 byte) of total memory (270920568832 byte); Target database: db(Size: 1); Substitution matrices...; Time for init: 0 h 0 m 0s. Quer,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/41:1914,mask,mask,1914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41,1,['mask'],['mask']
Availability,"ect 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	4; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/728:2324,Mask,Mask,2324,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728,1,['Mask'],['Mask']
Availability,ect src/CMakeFiles/mmseqs-framework.dir/util/createtsv.cpp.o; [ 72%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/diffseqdbs.cpp.o; [ 72%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/expandaln.cpp.o; [ 73%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractalignedregion.cpp.o; [ 73%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractdomains.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractorfs.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/orftocontig.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/touchdb.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/filterdb.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/gff2db.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/renamedbkeys.cpp.o; [ 76%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/masksequence.cpp.o; [ 76%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/maskbygff.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergeclusters.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergeresultsbyset.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergedbs.cpp.o; [ 78%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/msa2profile.cpp.o; [ 78%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/msa2result.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/nrtotaxmapping.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/countkmer.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/pairaln.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/prefixid.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/profile2pssm.cpp.o; [ 80%] Building CXX object s,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:21078,mask,masksequence,21078,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['mask'],['masksequence']
Availability,"ecurity protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1; Threads 	30; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using split mode; Index table: counting k-mers...; ......................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; .............................................................................	1 Mio. sequences processed; ..........................................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; ....................................................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; .....	2 Mio. sequences processed. ... ...................................................................................................	107 Mio. sequences processed; ...................................................................................................	108 Mio. sequences processed; ..........................................................................",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:2450,Mask,Mask,2450,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['Mask'],['Mask']
Availability,"ed behavior 1"" case. I compiled and ran MMseqs on openSUSE. Running make produced a lot of warnings, I don't know if this is expected and I can provide the output if you want to. The behavior of case 2 and 3 is unchanged. Case 2 still shows only 3 rows and case 3 still results in an error.; Here is the stdout when running case 2 (outer paths obfuscated):. ```; Program call:; /.../fasta.txt DB . MMseqs Version: 	e5e41af867c566f3fffe479d30bfaa10de77517c; Max. sequence length 	32000; Split Seq. by len 	true; Use fasta header 	false; Offset of numeric ids	0; Verbosity 	3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Program call:; DB . MMseqs Version: 	e5e41af867c566f3fffe479d30bfaa10de77517c; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Split DB 	0; Spaced Kmer 	1; Threads 	4; Verbosity 	3. Substitution matrices...; Use kmer size 6 and split 1 using split mode; Index table: counting k-mers... Index table: Masked residues: 18; Index table: fill...; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Write 5; Write 0; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. ; Program call:; DB DB resultDB tmp -a -s 7.5 . MMseqs Version: 	e5e41af867c566f3fffe479d30bfaa10de77517c; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Profile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	4; Verbosity 	3; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275107869:1229,Mask,Masked,1229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275107869,1,['Mask'],['Masked']
Availability,"edb /shared/projects/phycovir/SONIA/DNAP-BAIT /tmp/MMS6178/15560953143015620527/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [405] 0s 59ms; Time for merging to query_h: 0h 0m 0s 2ms; Time for merging to query: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 76ms; Create directory /tmp/MMS6178/15560953143015620527/search_tmp; search /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/result /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFI",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/728:4819,mask,mask,4819,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728,2,['mask'],"['mask', 'mask-prob']"
Availability,"ee no_e_cutoff/no_e_cutoff.out; mmseqs convertalis queryDB targetDB no_e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my actual goal) to for example perform QC on raw seq data. ## Your Environment; I installed using conda:; ```; # Name Version Build Channel; mmseqs2 12.113e3 h2d02072_2 bioconda; ```; The running server:; ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 256; On-line CPU(s) list: 0-254; Off-line CPU(s) list: 255; Thread(s) per core: 1; Core(s) per socket: 64; Socket(s): 2; NUMA node(s): 2; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7702 64-Core Processor; Stepping: 0. NAME=""Ubuntu""; VERSION=""18.04.4 LTS (Bionic Beaver)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 18.04.4 LTS""; VERSION_ID=""18.04""; HOME_URL=""https://www.ubuntu.com/""; SUPPORT_URL=""https://help.ubuntu.com/""; BUG_REPORT_URL=""https://bugs.launchpad.net/ubuntu/""; PRIVACY_POLICY_URL=""https://www.ubuntu.com/legal/terms-and-policies",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/399:1872,down,down,1872,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399,1,['down'],['down']
Availability,"election 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Report mode 	0; Alignment format 	0; Format alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; First sequence as representative 	false; Target column 	1; Add full header 	false; Sequence source 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0. *skipped some parts of the log that took very little time*. Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 11 sequences passed prefiltering per query sequence; 1 median result list length; 275899073 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 16m 3s 814ms; Time for merging to pref_0_tmp_0_tmp: 0h 26m 19s 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422:3912,Mask,Masked,3912,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422,1,['Mask'],['Masked']
Availability,"elized protein sequence searches and clustering of huge protein sequence d; ata sets. Please cite: M. Steinegger and J. Soding. MMseqs2 enables sensitive protein sequ; ence searching for the analysis of massive data sets. Nature Biotechnology, doi:; 10.1038/nbt.3988 (2017). MMseqs2 Version: b0b8e85f3b8437c10a666e3ea35c78c0ad0d7ec2; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search Sensitive homology search; easy-linsearch Fast, less sensitive homology search; easy-cluster Slower, sensitive clustering; easy-linclust Fast linear time cluster, less sensitive clustering; easy-taxonomy Taxonomic classification; easy-rbh Find reciprocal best hit; …; ```; ## Current Behavior; *no output*; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; Zip file for respective download was extracted, and upon navigating to the mmseqs directory the '--help' help argument was input to test the installation, resulting in no output. ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; - No output is the problem; ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; On this machine I have been having an ongoing issue in which cmd is unable to open in any scenario besides using another user account.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): none; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): statically-compiled ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: n/a; * Server specifications (especially CPU support for AVX2/SSE and amount of syste",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/574:1087,down,download,1087,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574,1,['down'],['download']
Availability,"eload --max-seqs 1000 --num-iterations 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	1000; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Tmp tmpC folder does not exist or is not a directory.; Created dir tmpC; Program call:; prefilter geneC.db genes.db tmpC/10139724895635470572/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 -",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:1137,Mask,Mask,1137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,"eload --max-seqs 1000 --num-iterations 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	1000; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	56; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; prefilter geneC.db genes.db tmpC/13630618462368123119/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:125476,Mask,Mask,125476,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,"emporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638123540538/clu_redundancy /mnt/tmp/4359821638123540538/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 2 -; -sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; -----------------------------------",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:2530,mask,mask,2530,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['mask'],['mask']
Availability,"ence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Initialising data structures...; Using 10 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1294083635 byte) of total memory (365681560780 byte); Target database: tmp/425628692068579862/input_step_redundancy(Size: 77285); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: tmp/425628692068579862/input_step_redundancy(size=77285); Process prefiltering step 1 of 1. Index table: counting k-mers...; .......; Index table: Masked residues: 509041; Index table: fill...; .......; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 5293618; DB Size: 543761708 (byte); Avg Kmer Size: 0.0827128; Top 10 Kmers; 	VGRSYW		716; 	DDHLRE		715; 	AVDHFG		715; 	HGFRAK		715; 	KKYDFR		715; 	DFGFEY		715; 	HWRELK		714; 	FRHWLL		714; 	WRYKQL		714; 	APPPRM		714; Min Kmer Size: 0; Empty list: 63197042. Time for index table init: 0 h 0 m 2s. 	k-mers per position = 1.86941, k-mer match probability: 1.66308e-12; k-mer similarity threshold: 130; k-mer match probability: 1.66308e-12. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 77285; Target db start 1 to 77285; .......; 1 k-mers per position.; 29464 DB matches per sequence.; 0 Overflows.; 14 sequences passed prefiltering per query sequence.; Median result list size: 20; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 0 m 4s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:106877,Mask,Masked,106877,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['Mask'],['Masked']
Availability,"ength 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	250G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:2089,Mask,Mask,2089,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['Mask'],['Mask']
Availability,"ength 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 240; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/720:1545,Mask,Mask,1545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720,1,['Mask'],['Mask']
Availability,"ent length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Exhaustive search mode 	false; Filter results during exhaustive search	",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:1613,Mask,Mask,1613,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['Mask'],['Mask']
Availability,"ent mode 	3; E-value threshold 	0.001; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	8; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Previous max results per query 	; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Databas",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/195:1744,Mask,Mask,1744,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/195,1,['Mask'],['Mask']
Availability,ents calculated.; 258 sequence pairs passed the thresholds (0.271008 of overall calculated).; 258 hits per query sequence.; Time for processing: 0h 0m 15s 798ms; Program call:; mergedbs tmpC/10139724895635470572/profile_0 tmpC/10139724895635470572/aln_new tmpC/10139724895635470572/aln_0 tmpC/10139724895635470572/aln_1 . MMseqs Version:	GITDIR-NOTFOUND; Merge prefixes	; Verbosity 	3. Merging the results to tmpC/10139724895635470572/aln_new; Done; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 23ms; Program call:; result2profile tmpC/10139724895635470572/profile_0 genes.db tmpC/10139724895635470572/aln_0 tmpC/10139724895635470572/profile_1 --sub-mat blosum62.out --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --omit-consensus 0 --no-preload 1 --gap-open 11 --gap-extend 1 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Mask profile 	1; Profile e-value threshold 	0.1; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	0; Pseudo count b 	1.5; Omit Consensus 	false; No preload 	true; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Start computing profiles.; Query database type: Profile; Target database type: Aminoacid; Time for merging files: 0h 0m 0s 112ms; Time for merging files: 0h 0m 0s 7ms. Done.; Time for processing: 0h 0m 16s 74ms; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635470572/pref_2 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:87803,Mask,Mask,87803,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,"eotides against the PFAM profile database. ## Current Behavior; Segfault when reaching the `search` step (after `extractorfs`). ## Steps to Reproduce (for bugs); ```; module load MMseqs2/10-6d92c-foss-2018b; cd /Pfam/directory/. mmseqs convertmsa Pfam-A.full.gz pfam_msa_db; mmseqs msa2profile pfam_msa_db pfam_profile --match-mode 1; mmseqs createindex pfam_profile tmp -k 6 -s 7. PFAM=""location/of/pfam_profile""; K1M=""location/of/input/fasta""; ORFS=""where/to/save/orfs""; RES=""location/of/final/result"". cd ; mmseqs createdb ${K1M} ${ORFS}; mmseqs search ${ORFS} ${PFAM} ${RES} tmp -k 5 -s 7. module unload MMseqs2/10-6d92c-foss-2018b; ```. ## MMseqs Output (for bugs); ```; Caught signal 11 (Segmentation fault: address not mapped to object at address 0x7f6b77d84270); ==== backtrace (tid: 1754) ====; 0 0x0000000000142e40 __memcpy_ssse3() :0; 1 0x00000000004d8b86 PrefilteringIndexReader::getIndexTable() ???:0; 2 0x00000000004cc0c6 Prefiltering::runSplit() ???:0; 3 0x00000000004cc90d Prefiltering::runSplits() ???:0; 4 0x00000000004cd10d Prefiltering::runMpiSplits() ???:0; 5 0x00000000004c2974 prefilter() ???:0; 6 0x000000000044a7d6 runCommand() ???:0; 7 0x0000000000442d29 main() ???:0; 8 0x0000000000021c05 __libc_start_main() ???:0; 9 0x000000000044a46c _start() ???:0; =================================; tmp/14557808422999051349/searchtargetprofile.sh: line 28: 1754 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""${INPUT}"" ""${2}"" ""${TMP_PATH}/; ```. ## Context; I want to find candidate transcription factors in a non-model organism. By aligning translated bulk RNA-seq reads against Pfam, I hope to get matches against known transcription factor families or DNA binding domains. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: release 10-6d92c-foss-2018b; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): for the runs: 1 core, 30Gb memory. CPUs support AVX2, as far as ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/259:771,fault,fault,771,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259,1,['fault'],['fault']
Availability,"ep 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a search against Uniref100. ## Your Environment. IBM SR650 ServerIntel Xeon Silver 4216, 2 CPUs, 2.1Ghz, 64 threads - 1TB DDR4 2933mhz RDIMM - HDD 12TB SAS. Titan X 3584 CUDA core, 12 GB GDDR5X, 480 GB/sec, 11 Tflops.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:5828,fault,fault,5828,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"eproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I am getting error when running ; mmseqs search mmseqs_U90_out/mmseqs-81_queryDB ../MH2_mappingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/689:1176,mask,mask,1176,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689,2,['mask'],"['mask', 'mask-prob']"
Availability,"eq-id 0.90 --kmer-per-seq 40 -c 0.9. MMseqs Version: 290668474611312a94a868bf041b38c8618f5ef6; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 160; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:1339,Mask,Mask,1339,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,2,['Mask'],['Mask']
Availability,eq-len 32000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --threads 4 -v 3 -s 4 -k 0 --k-score 2147483647 --alph-size 21 --offset-result 0 --split 0 --split-mode 2 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --e-profile 0.001 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 100 --pca 1 --pcb 1.5 --num-iterations 1 --start-sens 4 --sens-step-size 1 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Max. results per query 	1; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search iterations 	1; > Start sensitivity 	4; > sensitivity step size 	1; > Sets the MPI runner 	; > ; > /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp; > /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp; > Program call:; > tmp/NEWDB.newSeqs tmp/OLDDB.mapped.repSeq /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 1 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:6044,Mask,Mask,6044,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['Mask'],['Mask']
Availability,"eq.id. and coverage [0]; --sort-results INT Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]; --write-lookup INT write .lookup file containing mapping from internal id, fasta id and file number [0]. examples:; mmseqs easy-linclust examples/DB.fasta result tmp. # Linclust output; # - result_rep_seq.fasta: Representatives; # - result_all_seq.fasta: FASTA-like per cluster; # - result_cluster.tsv: Adjecency list. # Important parameter: --min-seq-id, --cov-mode and -c; # --cov-mode; # 0 1 2; # Q: MAVGTACRPA 60% IGN 60%; # T: -AVGTAC--- 60% 100% IGN; # -c 0.7 - + -; # -c 0.6 + + +. # Cluster nucleotide sequences; mmseqs easy-linclust examples/DB.fasta result tmp --kmer-per-seq-scale 0.3. references:; - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017); - Steinegger M, Soding J: Clustering huge protein sequence sets in linear time. Nature Communications, 9(1), 2542 (2018); Error in argument --min-seq-id; ```; ## Context; I would like to use linclust to cluster sequences at 90 length/90% identity, but the flag `--min-seq-id` keeps throwing an error. is there a different way to specify sequence identity threshold for `easy-linclust`?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): NA; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; ```; mmseqs2 14.7e284 pl5321h893b172_0 bioconda; ```; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: NA; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Apple M1 Max, 64 GB memory,10 CPU; * Operating system and version: Apple, Ventura 13.0. I reproduced the error on Ubuntu AWS EC2 as well with the same version of mmseqs2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:7395,Error,Error,7395,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,3,"['Error', 'error']","['Error', 'error']"
Availability,"eqs search id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN /tmp/ --threads 40 -s 7.5 -a -e 1e-10 --alt-ali 1 &> allvsall.search.log ; mmseqs convertalis id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.tsv --threads 40 ; mmseqs extractalignedregion id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.SEQ --threads 40; mmseqs cluster pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU /tmp/ -e 1e-10 -c 0 -a -s 7.5 --threads 40 ; ```. But it fails in the last step with this message. ```; rescorediagonal pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 1e-10 -c 0.5 -a 1 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 204.52K 0s 215ms; Time for merging files: 0h 0m 0s 94ms; Time for processing: 0h 0m 0s 845ms; clust pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 /tmp//1456503536827778696/linclust/7100099902620488817/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; ```. I think it is happening because of the number of files generated by the `extractalignedregion` module.; If it isn't, how do I get the aligned regions to use in a search? I'm trying to get aligned regions to cluster them to find possible domains in a set of protein. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/210:1827,Error,Error,1827,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210,2,['Error'],['Error']
Availability,"eqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/first /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 24 -s 2 --split-memory-limit 80G --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 2.0. Query database size: 55235334 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 8s 472ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 5s 3ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:21643,mask,mask,21643,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"eqsp.lookup E.faa.mmseqsp_h.dbtype E.faa.vs.C.faa.mmseqsp.bla.0 E.faa.vs.C.faa.mmseqsp.bla.5 E.faa.vs.C.faa.mmseqsp.bla.index.2 E.faa.vs.C.faa.mmseqsp.bla.index.7; > C.faa.mmseqsp_h E.faa E.faa.mmseqsp_h.index E.faa.vs.C.faa.mmseqsp.bla.1 E.faa.vs.C.faa.mmseqsp.bla.6 E.faa.vs.C.faa.mmseqsp.bla.index.3 E.faa.vs.C.faa.mmseqsp.dbtype. The precise output is : . > `Program call:; > convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla; > ; > MMseqs Version: 5d7cecc696fa3dfc60dce1acbe7f30a513ec209f; > Substitution Matrix blosum62.out; > Alignment Format 0; > Format alignment output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; > Translation Table 1; > Gap open cost 11; > Gap extension cost 1; > Database Output false; > Preload mode 0; > Search type 0; > Threads 8; > Compressed 0; > Verbosity 3; > ; > Query database: E.faa.mmseqsp; > Touch data file E.faa.mmseqsp_h ... Done.; > Target database: C.faa.mmseqsp; > Touch data file C.faa.mmseqsp_h ... Done.; > Alignment database: E.faa.vs.C.faa.mmseqsp; > Start writing to E.faa.vs.C.faa.mmseqsp.bla; > Invalid database read for database data file=E.faa.mmseqsp_h, database index=E.faa.mmseqsp_h.index; > getData: local id (4294967295) >= db size (72); > Invalid database read for database data file=Invalid database read for database data file=E.faa.mmseqsp_h, database index=E.faa.mmseqsp_h, database index=Invalid database read for database data file=E.faa.mmseqsp_h, database index=E.faa.m; > mseqsp_h.indexE.faa.mmseqsp_h.index; > E.faa.mmseqsp_h.index; > getData: local id (getData: local id (; > getData: local id (4294967295) >= db size (4294967295) >= db size (724294967295) >= db size (72); > ); > 72). ## Context. I use the newest version (cloned today and compiled with no errors) and some version 2-3 month old. . ## Your Environment. linux, 4 cores, plenty of RAM ... ## FILES. [inputfiles.zip](https://github.com/soedinglab/MMseqs2/files/2979000/inputfiles.zip)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/178:3159,error,errors,3159,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/178,1,['error'],['errors']
Availability,"equence GCF_000967155_db /tmp/11952770628863456989/nucl_split_seq --max-seq-len 65535 --sequence-overlap 0 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Max. sequence length 65535; Overlap between sequences 0; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 15ms; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 320ms; Program call:; extractframes /tmp/11952770628863456989/nucl_split_seq /tmp/11952770628863456989/nucl_split_seq_rev --forward-frames 1 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Forward Frames 1; Reverse Frames 1,2,3; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 5ms; Time for merging files: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 100ms; Program call:; indexdb /tmp/11952770628863456989/nucl_split_seq_rev.dbtype GCF_000967155_db --seed-sub-mat VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 24 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Seed Substitution Matrix VTML80.out; K-mer size 0; Alphabet size 21; Compositional bias 1; Max. sequence length 65535; Mask Residues 1; Mask lower case residues 0; Spaced Kmer 1; Spaced k-mer pattern; Sensitivity 7.5; K-score 0; Check Compatible false; Search type 3; Split DB 0; Split Memory Limit 0; Threads 24; Verbosity 3. Could not open index file /tmp/11952770628863456989/nucl_split_seq_rev.dbtype.index!; Error: indexdb died; ```. ## Context; Bug discovered while using the MMseqs2-app docker image, then tested without the web server. ## Your Environment; * Git commit used: ebddda7ce9d708610eb7b5097917271487a9e459; * MMseqs version used: Docker; * Server specifications: CPU intel xeon silver 4116 (12C/24T) with AVX2 and SSE4 support, 64GB RAM; * Operating system and ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/175:3401,mask,mask,3401,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"er 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter queryDB sequenceDB tmp/837003320692135749/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Target split mode. Searching through 5 splits; Estimated memory consumption: 297G; Target database size: 358983966 type: Aminoacid; Process prefiltering step 1 of 5. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; tmp/837003320692135749/blastp.sh: line 99: 35385 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died. ## Steps to Reproduce (for bugs); $ mmseqs search queryDB sequenceDB resultDB tmp. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Doing a seach of one sequence in the queryDB aginst a larger DB of amino acid sequences. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): home-brew; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: MMseqs2/13-45111; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; * Operating system and version:; * $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; B",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/817:3355,Error,Error,3355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/817,1,['Error'],['Error']
Availability,"er query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3. Initialising data structures...; Using 36 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1100935225 byte) of total memory (365681509171 byte); Target database: /tmp/clu//9559457551393989073/input_step_redundancy(Size: 23030); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: /tmp/clu//9559457551393989073/input_step_redundancy(size=23030); Process prefiltering step 1 of 1. Index table: counting k-mers...; ..; Index table: Masked residues: 81271; Index table: fill...; ..; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 848571; DB Size: 517091426 (byte); Avg Kmer Size: 0.0132589; Top 10 Kmers; 	YTGTPK		215; 	PGFVVC		201; 	TNMHCE		201; 	ISYEFH		201; 	FMHLRK		201; 	KKEEWK		201; 	WKREKP		201; 	MTTCKQ		201; 	IFTFHT		201; 	KKKEAW		199; Min Kmer Size: 0; Empty list: 63445692. Time for index table init: 0h 0m 1s. 	k-mers per position = 1.73369, k-mer match probability: 6.36499e-14; k-mer similarity threshold: 130; k-mer match probability: 6.36499e-14. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 23030; Target db start 1 to 23030; ..; 1 k-mers per position.; 976 DB matches per sequence.; 0 Overflows.; 25 sequences passed prefiltering per query sequence.; Median result list size: 2; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 0 m 1s; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:34892,Mask,Masked,34892,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Masked']
Availability,"er sequence identity) with mmseqs linclust but i've some troubles doing so.; Because of the size of my dataset I work on a distant supercomputer managed with slurm. My version on mmseqs is v14. Previous to clustering with linclust I created a mmseqs DB with : ; ```; mmseqs createdb --dbtype 1 --compressed 1 $NEWSCRATCH/all_BFD_new_parser.fasta $NEWSCRATCH/DB/BFD_DB; ```; Then for the clustering I run this command in my Sbatch script : ; ```; mmseqs linclust $NEWSCRATCH/DB/BFD_DB $NEWSCRATCH/DB/BFD_DB_clu $NEWSCRATCH/DB/tmp --min-seq-id 0.75 \ ; --threads 40 -v 3 --force-reuse 1 --split-memory-limit 92G; ```; I'm able to reserve a node with 40 cores and 156G RAM.; I use **--force-reuse 1** because I had to run my script multiple time (due to error and for resource saving) .; At first I'd a memory error with kmermatcher, which was fixe with **--split-memory-limit**.; The generation of k-mer list took 17 split and I did it in two steps because of time limit on my server. After that I'd two different error.; Just after last split for k-mer list : ; ```; linclust /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 40 -v 3 --force-reuse 1 --split-memory-limit 92G . MMseqs Version: 	f5f780acd64482cd59b46eae0a107f763cd17b4d; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	40; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	fal",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:1123,error,error,1123,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['error'],['error']
Availability,"er-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:4245,mask,mask,4245,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"eredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 237; DB size: 488 MB; Avg k-mer size: 0.000004; Top 10 k-mers; LHNWEA	1; NCKEQA	1; VLRCRA	1; VTFMDC	1; RAHQKC	1; KRKVLC	1; ESKRNC	1; KRHLRC	1; GKKFSC	1; HYKKSC	1; Time for index table init: 0h 0m 0s 897ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:18909,mask,mask,18909,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"ergeclusters`. . `mergeclusters` runs successfully and I get the following output:. ```; mergeclusters myDB deepClusterDB clusteringStep0 clusteringStep1 clusteringStep2. MMseqs Version: f349118312919c4fcc448f4595ca3b3a387018e2; Threads 20; Compressed 0; Verbosity 3. Clustering step 1; [=================================================================] 100.00% 699 0s 22ms; Clustering step 2; [=================================================================] 100.00% 101 0s 26ms; Clustering step 3; [=================================================================] 100.00% 79 0s 29ms; Write merged clustering; [=================================================================] 100.00% 77.44K 0s 54ms; Time for merging to deepClusterDB: 0h 0m 0s 2ms===============> ] 94.08% 72.85K eta 0s; Time for processing: 0h 0m 0s 74ms; ```. However, only the following files get created, and no file just called `deepClusterDB` (no numbers or file extentions) as I would expect. Consequently, I can't do any downstream operations. ; ```; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.0; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.1; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.10; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.11; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.12; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.13; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.14; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.15; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.16; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.17; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.18; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.19; -rw-r--r-- 1 440K Aug 24 20:42 deepClusterDB.2; -rw-r--r-- 1 3.8K Aug 24 20:42 deepClusterDB.3; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.4; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.5; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.6; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.7; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.8; -rw-r--r-- 1 0 Aug 24 20:42 deepClusterDB.9; -rw-r--r-- 1 4 Aug 24 20:42 deepClusterDB.dbtype; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/483:1077,down,downstream,1077,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/483,1,['down'],['downstream']
Availability,"erlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter phrogs_mmseqs_db/phrogs_profile_db mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins.target_seq mmseqs_target_seq/[bacteria_of_interest]/tmp/15822818178659183495/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 7.0 . Query database size: 38880 type: Profile; Estimated memory consumption: 488M; Target database size: 125 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 125 0s 5ms; Index table: Masked residues: 124; Index table: fill; [=================================================================] 125 0s 6ms; Index statistics; Entries: 25103; DB size: 488 MB; Avg k-mer size: 0.000392; Top 10 k-mers; ALGLAA	2; TTGTAA	2; AAARKA	2; KASRKA	2; TEEALA	2; EDLLRA	2; INGNED	2; ASARED	2; GKHHRD	2; AELKAE	2; Time for index table init: 0h 0m 0s 511ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 38880; Target db start 1 to 125; [=mmseqs_targe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:5423,mask,mask-lower-case,5423,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['mask'],['mask-lower-case']
Availability,error with createdb function,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/725:0,error,error,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/725,1,['error'],['error']
Availability,"es --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db clusters_rep-seqs.part-14_tax_db tmp_part-14. MMseqs Version: 	9.d36de; Substitution matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	200; Previous max results per query; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:1474,Mask,Mask,1474,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,2,['Mask'],['Mask']
Availability,"es 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 6 0s 21ms; Time for merging to orfs_aa_h: 0h 0m 0s 276ms; Time for merging to orfs_aa: 0h 0m 0s 415ms; Time for processing: 0h 0m 1s 438ms; prefilter /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_aa ../../../../resources/GTDB/mmseqs_gtdb/GTDB /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 5696 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 124G; Target database size: 106052079 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 35.35M 7m 55s 640ms; Index table: Masked residues: 89908004; Index table: fill; [===> ] 5.00% 1.77M eta 4h 48m 2s; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ~190 Gb, HPC; * Operating system and version: CentOS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479:4738,Mask,Masked,4738,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479,1,['Mask'],['Masked']
Availability,es processed; ...................................................................................................	38 Mio. sequences processed; ...................................................................................................	39 Mio. sequences processed; ...................................................................................................	40 Mio. sequences processed; ...................................................................................................	41 Mio. sequences processed; ...................................................................................................	42 Mio. sequences processed; ...................................................................................................	43 Mio. sequences processed; ...................................................................................................	44 Mio. sequences processed; .....................................................; Index table: Masked residues: 178364514; Index table: fill...; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ...................................................................................................	5 Mio. sequences processed; ...................................................................................................	6 Mio. sequences processed; ...................................................................................................	7 Mio. sequences processed; ......................................................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:9224,Mask,Masked,9224,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,3,['Mask'],['Masked']
Availability,"essing: 0h 0m 0s 38ms; createdb seq.fasta tmp/15248047069833069253/target --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences. Time for merging to target_h: 0h 0m 0s 9ms; Time for merging to target: 0h 0m 0s 8ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 40ms; Create directory tmp/15248047069833069253/search_tmp; search tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result tmp/15248047069833069253/search_tmp -a 1 --alignment-mode 3 -c 1 --cov-mode 1 -s 5.7 --remove-tmp-files 1 . prefilter tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 1 --cov-mode 1 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 1 eta -; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 1 eta -; Index statistics; Entries: 41; DB size: 488 MB; Avg k-mer size: 0.000001; Top 10 k-mers; DFVKIA	1; ATLTKA	1; SEEGLA	1; IWEEIC	1; PFDSKD	1; CLRHLD	1; DMAGTD	1; QNRWRE	1; GENRSE	1; LAKPDF	1; Time for index table init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:5588,mask,mask,5588,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"esubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 9304 type: Aminoacid; Estimated memory consumption: 1007M; Target database size: 9304 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 9.30K 0s 119ms ; Index table: Masked residues: 99774; Index table: fill; [=================================================================] 100.00% 9.30K 0s 66ms ; Index statistics; Entries: 1733458; DB size: 498 MB; Avg k-mer size: 0.027085; Top 10 k-mers; IHDKNI 46; GPGGTL 34; LGGFVY 21; GQQIAR 19; HRLPLL 15; SCLWYL 15; RCKCRW 15; GGTHAY 15; GRGLAY 15; KSRRNY 15; Time for index table init: 0h 0m 0s 736ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9304; Targe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:16616,mask,mask-lower-case,16616,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['mask'],['mask-lower-case']
Availability,"esults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 479ms; Tmp tmp folder does not exist or is not a directory.; extractorfs queryDB tmp/2730103712073724212/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames; 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 101 0s 57ms; Time for merging into tmp/2730103712073724212/q_orfs_aa_h by mergeResults: 0h 0m 0s 174ms; Time for merging into tmp/2730103712073724212/q_orfs_aa by mergeResults: 0h 0m 0s 182ms; Time for processing: 0h 0m 0s 869ms; kmersearch tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/search/pref --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --kmer-per-seq 21 --mask 0 --ma; sk-lower-case 0 --cov-mode 0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . kmersearch tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/search/pref --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --kmer-per-seq 21 --mask 0 --ma; sk-lower-case 0 --cov-mode 0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . Estimated memory consumption 4 MB; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Process file into 1 parts; Generate k-mers list 0; [=================================================================] 14.93K 0s 32ms. Time for fill: 0h 0m 0s 35ms; Sort kmer ... Time for sort: 0h 0m 0s 39ms; Time to find k-mers: 0h 0m 0s 608ms; Time to sort: 0h 0m 0s 0ms; Time for merging into tmp/2730103712073724212/search/pref by mergeResults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 729ms; rescorediagonal /bighub/hub/DB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:2270,mask,mask,2270,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['mask'],['mask']
Availability,"eudo count a 	substitution:1.100,context:1.400; > Pseudo count b 	substitution:4.100,context:5.800; > Score bias 	0; > Realign hits 	false; > Realign score bias 	-0.2; > Realign max seqs 	2147483647; > Correlation score weight 	0; > Gap open cost 	aa:11,nucl:5; > Gap extension cost 	aa:1,nucl:2; > Zdrop 	40; > Threads 	16; > Compressed 	0; > Verbosity 	3; > Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; > Sensitivity 	5.7; > k-mer length 	0; > Target search mode 	0; > k-score 	seq:2147483647,prof:2147483647; > Alphabet size 	aa:21,nucl:5; > Max results per query 	300; > Split database 	0; > Split mode 	2; > Split memory limit 	0; > Diagonal scoring 	true; > Exact k-mer matching 	0; > Mask residues 	1; > Mask residues probability 	0.9; > Mask lower case residues 	0; > Minimum diagonal score 	15; > Selected taxa 	; > Spaced k-mers 	1; > Spaced k-mer pattern 	; > Local temporary path 	; > Rescore mode 	0; > Remove hits by seq. id. and coverage 	false; > Sort results 	0; > Mask profile 	1; > Profile E-value threshold 	0.001; > Global sequence weighting 	false; > Allow deletions 	false; > Filter MSA 	1; > Use filter only at N seqs 	0; > Maximum seq. id. threshold 	0.9; > Minimum seq. id. 	0.0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select N most diverse seqs 	1000; > Pseudo count mode 	0; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward frames 	1,2,3; > Reverse frames 	1,2,3; > Translation table 	1; > Translate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Overlap between sequences 	0; > Sequence split mode 	1; > Header split mode 	0; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	3; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Prefilter mode 	0; > Exhaustive search mode 	false; > Filter results during exhaustive search	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:2576,Mask,Mask,2576,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,1,['Mask'],['Mask']
Availability,"ew Thread 0x2aaae4c8c700 (LWP 9153)]; [New Thread 0x2aaae4e8d700 (LWP 9154)]; [New Thread 0x2aaae508e700 (LWP 9155)]; [New Thread 0x2aaae528f700 (LWP 9156)]; [New Thread 0x2aaae5490700 (LWP 9157)]; [New Thread 0x2aaae5691700 (LWP 9158)]; [New Thread 0x2aaae5892700 (LWP 9159)]; [New Thread 0x2aaae5a93700 (LWP 9160)]; [New Thread 0x2aaae5c94700 (LWP 9161)]; [New Thread 0x2aaae5e95700 (LWP 9162)]; [New Thread 0x2aaae6096700 (LWP 9163)]; [New Thread 0x2aaae6297700 (LWP 9164)]; [New Thread 0x2aaae6498700 (LWP 9165)]; [New Thread 0x2aaae6699700 (LWP 9166)]; [New Thread 0x2aaae689a700 (LWP 9167)]; [New Thread 0x2aaae6a9b700 (LWP 9168)]; [New Thread 0x2aaae6c9c700 (LWP 9169)]; [New Thread 0x2aaae6e9d700 (LWP 9170)]; [New Thread 0x2aaae709e700 (LWP 9171)]; [New Thread 0x2aaae729f700 (LWP 9172)]; [New Thread 0x2aaae74a0700 (LWP 9173)]; [New Thread 0x2aaae76a1700 (LWP 9174)]; [New Thread 0x2aaae78a2700 (LWP 9175)]; Start computing compressed multiple sequence alignments. Program received signal SIGSEGV, Segmentation fault.; 0x00000000004e0415 in result2outputmode () at /usr/lusers/aivan/prog/MMseqs2/src/util/result2profile.cpp:349; 349	 if (res.keep[i + 1]) {; (gdb) bt; #0 0x00000000004e0415 in result2outputmode () at /usr/lusers/aivan/prog/MMseqs2/src/util/result2profile.cpp:349; #1 0x00000000004dd47f in result2outputmode (par=..., outpath=""cluMsa_ca3m_tmp_0"", dbFrom=0, dbSize=1089144, mode=2, referenceDBr=0x8d6ca0) at /usr/lusers/aivan/prog/MMseqs2/src/util/result2profile.cpp:166; #2 0x00000000004ded26 in result2outputmode (par=..., mode=2, mpiRank=0, mpiNumProc=1) at /usr/lusers/aivan/prog/MMseqs2/src/util/result2profile.cpp:564; #3 0x00000000004df6f5 in result2msa (argc=5, argv=0x7fffffffd8d8, command=...) at /usr/lusers/aivan/prog/MMseqs2/src/util/result2profile.cpp:657; #4 0x00000000004d5184 in runCommand (p=..., argc=5, argv=0x7fffffffd8d8) at /usr/lusers/aivan/prog/MMseqs2/src/mmseqs.cpp:361; #5 0x00000000004d54b2 in main (argc=7, argv=0x7fffffffd8c8) at /usr/lusers/aiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/36:2321,fault,fault,2321,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/36,1,['fault'],['fault']
Availability,"extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count a 	0; Pseudo count b 	1.5; Preload mode 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	8; Compressed 	0; Verbosity 	3. Query database size: 1151 type: Aminoacid; Target database size: 41195879 type: Aminoacid; ================================================================= ] 46.43% 535 eta 0s; ==71239==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a0000233e0 at pc 0x55c61d242cd7 bp 0x7fc0f27db1b0 sp 0x7fc0f27db1a0; WRITE of size 1 at 0x61a0000233e0 thread T3; ==71239==AddressSanitizer: while reporting a bug found another one. Ignoring.08K eta 0s; #0 0x55c61d242cd6 in MultipleAlignment::updateGapsInSequenceSet(char**, unsigned long, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:1722,Mask,Mask,1722,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245,1,['Mask'],['Mask']
Availability,"f clusters: 5991. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 23ms; createsubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 -v 3 --subdb-mode 1 . Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 5991 type: Aminoacid; Estimated memory consumption: 996M; Target database size: 5991 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 5.99K 0s 98ms ; Index table: Masked residues: 70106; Index table: fill; [=================================================================] 100.00% 5.99K 0s 74ms ; Index statistics; Entries: 2291730; DB size: 501 MB; Avg k-mer size: 0.035808; Top 10 k-mers; IHDKNI 27; LHDKNI 14; LGGFVY 14; GPGGTL 10; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; HVARAT 9; VHSGRT 9; Time for index table init: 0h 0m 0s 730ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:26296,mask,mask,26296,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,2,['mask'],"['mask', 'mask-prob']"
Availability,"f-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:5456,mask,mask-lower-case,5456,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['mask'],['mask-lower-case']
Availability,"fact, the evalue seems to be the restrictive factor (which makes sense, given that the peptides are so small and the database so large). With the default evalue of `0.001`, only 26k out of 630k peptides generate a match (all of them *are* contained in the database at least once). ; * `--comp-bias-corr 0` and `--mask 0` seem to be advantageous. With a permissive evalue of `1e7`, `630467/630487` peptides are found if the both options are set to 0. If they are set to 1, only 594113/630487 peptides are found. On the first sight, the missing peptides do not look particularly low complexity (e.g. `LASLSSVFFFIISFI`, `LKEKLNRNRENSTAT`, `NEGCNSNSSTPRQNT`). ; * With a sensitivity of `s=1`, `--comp-bias-corr 0` and `--mask 0` and an evalue of `1e7` *almost all* perfect matches are found (`630467/630487`). With `s>=2` and otherwise same settings *all* perfect matches are found. . ---. For now, I will, therefore, use the following settings and see how that works out: ; ```bash; --seed-sub-mat VTML40.out ; -s 2 ; --comp-bias-corr 0 --mask 0; --gap-open 16 ; --gap-extend 2 ; --min-length 9 ; --spaced-kmer-pattern 11011101 ; -e 10000000; -k 6 ; ```. ---. Here are the raw counts of matches. `biascorr = 0` implies `mask = 0`. ; ```console; > wc -l * | sort -n ; 1283115 AE009951.2_sens1_biascorr0_eval0.001_mmseqs.tsv ; 1283126 AE009951.2_sens4_biascorr0_eval0.001_mmseqs.tsv; 1283235 AE009951.2_sens2_biascorr0_eval0.001_mmseqs.tsv; 1419374 AE009951.2_sens1_biascorr1_eval0.001_mmseqs.tsv; 1419971 AE009951.2_sens2_biascorr1_eval0.001_mmseqs.tsv; 1420095 AE009951.2_sens4_biascorr1_eval0.001_mmseqs.tsv; 155001100 AE009951.2_sens1_biascorr1_eval10000000_mmseqs.tsv; 198438767 AE009951.2_sens2_biascorr1_eval10000000_mmseqs.tsv; 212674670 AE009951.2_sens1_biascorr0_eval10000000_mmseqs.tsv; 237331138 AE009951.2_sens4_biascorr1_eval10000000_mmseqs.tsv; 247063054 AE009951.2_sens2_biascorr0_eval10000000_mmseqs.tsv; 249672852 AE009951.2_sens4_biascorr0_eval10000000_mmseqs.tsv; 1308290497 total; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160:1309,mask,mask,1309,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160,2,['mask'],['mask']
Availability,false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Tmp tmpC folder does not exist or is not a directory.; Created dir tmpC; Program call:; prefilter geneC.db genes.db tmpC/10139724895635470572/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	1000; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Threads 	48; Verbosity 	3. Initialising data structures...; Using 48 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 7 and split 3 using Target split mode.; Needed memory (213955223732 byte) of total memory (243154317312 byte); Target database: genes.db(Size: 135880714); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0h 0m 22s 525ms; Query database: geneC.db(size=1); Process prefiltering step 1 of 3. Index table k-mer threshold: 99; Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; .......................................................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:2756,Mask,Mask,2756,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,"fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:2381,mask,mask-lower-case,2381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['mask'],['mask-lower-case']
Availability,fb39ca1ee88313974f285740faa856ea68509193. this is the version that I get; I am not sure if this is correct or I downloaded something wrong.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809804854:112,down,downloaded,112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809804854,1,['down'],['downloaded']
Availability,"filter tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 1.000 . Query database size: 2548633 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 24s 806ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 50s 887ms; Index statistics; Entries: 3111458326; DB size: 27569 MB; Avg k-mer size: 2.430827; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GGQRVAR	38490; LLGPGKT	25908; YDYAIPL	22840; GGRRVAR	21815; PHLGGQR	19799; TPHDFEV	17697; PSLGGQR	13748; FSCSHVV	12988; Time for index table init: 0h 2m 34s 667ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2548633; Target db start 1 to 13003941; [=================================================================] 2.55M 23s 498ms. 7.258993 k-mers per position; 1015 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 1142796 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 915ms; Time for processing: 0h 3m 3s 800ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:4602,Mask,Masked,4602,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['Mask'],['Masked']
Availability,"for NR. . I have download and ensured I have the taxonomy folder; ```; ls -lh /root/mmseqs2_db/taxonomy/; Permissions Size User Date Modified Name; drwxr-sr-x - root 25 Mar 13:35 .ipynb_checkpoints/; .rw-rw-r-- 20M 9019 12 Mar 21:27 citations.dmp; .rw-rw-r-- 4.7M 9019 12 Mar 21:25 delnodes.dmp; .rw-rw-r-- 452 9019 12 Mar 21:20 division.dmp; .rw-rw-r-- 16k 9019 12 Mar 21:27 gc.prt; .rw-rw-r-- 4.9k 9019 12 Mar 21:20 gencode.dmp; .rw-rw-r-- 3.9M 9019 12 Mar 21:25 images.dmp; .rw-rw-r-- 1.4M 9019 12 Mar 21:25 merged.dmp; .rw-rw-r-- 244M 9019 12 Mar 21:27 names.dmp; .rw-rw-r-- 194M 9019 12 Mar 21:27 nodes.dmp; .rw-rw---- 3.1k 4544 27 Apr 2023 readme.txt; .rw-rw-r-- 65M root 12 Mar 21:28 taxdump.tar.gz; ```. But when attempting to extract the fasta and the tax id mapping, I get the following error: ; ```; cd /root/mmseqs2_db; blastdbcmd -db nr -entry all > nr.fna; BLAST Database error: No alias or index file found for nucleotide database [nr] in search path [/root/mmseqs2_db::]; ```; I have ensured that the files for nr are available in that path; ```; ls -lh /root/mmseqs2_db/nr*; Permissions Size User Date Modified Name; .rw-rw-r-- 13G root 15 Mar 16:54 /root/mmseqs2_db/nr; .rw-rw-r-- 4 root 15 Mar 16:54 /root/mmseqs2_db/nr.dbtype; .rw-r--r-- 0 root 25 Mar 13:46 /root/mmseqs2_db/nr.fna; .rw-rw-r-- 779M root 15 Mar 16:54 /root/mmseqs2_db/nr.index; .rw-rw-r-- 790M root 15 Mar 16:55 /root/mmseqs2_db/nr.lookup; .rw-rw-r-- 8 root 15 Mar 16:52 /root/mmseqs2_db/nr.source; .rw-rw-r-- 11 root 15 Mar 17:03 /root/mmseqs2_db/nr.version; .rw-rw-r-- 4.0G root 15 Mar 16:52 /root/mmseqs2_db/nr_h; .rw-rw-r-- 4 root 15 Mar 16:52 /root/mmseqs2_db/nr_h.dbtype; .rw-rw-r-- 748M root 15 Mar 16:55 /root/mmseqs2_db/nr_h.index; .rw-rw-r-- 0 root 15 Mar 16:55 /root/mmseqs2_db/nr_mapping; .rw-rw-r-- 708M root 15 Mar 16:55 /root/mmseqs2_db/nr_taxonomy; ```. nr.fna is still empty. Not sure if this is a required step in order to create the nr_mapping. I would appreciate any help in getting the tax info",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2018057250:1063,error,error,1063,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2018057250,2,"['avail', 'error']","['available', 'error']"
Availability,"for merging to query: 0h 0m 0s 35ms ; Database type: Aminoacid ; Time for processing: 0h 0m 0s 296ms ; Create directory tmp1/1465312676443513838/search_tmp ; search tmp1/1465312676443513838/query mmseqs/mmseqs_clu_rep_db/DB tmp1/1465312676443513838/result tmp1/1465312676443513838/search_tmp --alignment-mode 3 -e 1e-05 -s 6 --max-seqs 1000000 --num-iterations 5 --remove-tmp-files 1 ; ; prefilter tmp1/1465312676443513838/query mmseqs/mmseqs_clu_rep_db/DB.idx tmp1/1465312676443513838/search_tmp/12840997425876760019/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --target-search-mode 0 --k; -score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1000000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob; 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 . Index version: 16 ; Generated by: bb0a1b3569b9fe115f3bf63e5ba1da234748de23; ScoreMatrix: VTML80.out ; Query database size: 1000 type: Aminoacid; Estimated memory consumption: 101G; Target database size: 33611651 type: Aminoacid ; Process prefiltering step 1 of 1; ; k-mer similarity threshold: 118 ; Starting prefiltering scores calculation (step 1 of 1) ; Query db start 1 to 1000 ; Target db start 1 to 33611651 ; [=================================================================] 100.00% 1.00K 53s 841ms ; tmp1/1465312676443513838/search_tmp/12840997425876760019/blastpgp.sh: line 139: 3819000 Segmentation fault (core dumped) $RUNNER $PREF ""$QUERYDB"" ""$2"" ""$TMP_PATH/pref_$STEP"" ${TMP} ; Error: Prefilter died ; Error: Search died ; ```. ## Context. I thought maybe it's due to some special symbols in sequences in the failed fastas or larg",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/774:4575,mask,mask-lower-case,4575,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/774,1,['mask'],['mask-lower-case']
Availability,"frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 10 0s 71ms; Time for merging to orfs_aa_h: 0h 0m 0s 759ms; Time for merging to orfs_aa: 0h 0m 0s 726ms; Time for processing: 0h 0m 3s 54ms; prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 2310 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2310; Target db start 1 to 713072; [=================================================================] 100.00% 2.31K 0s 200ms. 8.191356 k-mers per position; 1212 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2301 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 457ms; Time for processing: 0h 0m 1s 487ms; rescorediagonal tmp//15404483323509150572/taxonomy_tmp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:5215,mask,mask-lower-case,5215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['mask'],['mask-lower-case']
Availability,"frames tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 802.27K 9s 504ms; Time for merging to query_seqs_h: 0h 0m 0s 682ms; Time for merging to query_seqs: 0h 0m 38s 582ms; Time for processing: 0h 0m 52s 983ms; prefilter tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.85 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 112 --compressed 0 -v 3 . Query database size: 1604546 type: Nucleotide; Estimated memory consumption: 105G; Target database size: 802273 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 802.27K 1m 13s 891ms; Index table: Masked residues: 47468793; Index table: fill; [=================================================================] 802.27K 1m 7s 245ms; Index statistics; Entries: 14067080711; DB size: 88684 MB; Avg k-mer size: 13.100990; Top 10 k-mers; CCCTCGCAAGGTTAC	15119; TGGGATCCCCGGGGG	14445; GGTCGGGTCCCGTAG	12691; GGTATCCCCTCGAGG	12523; CATAAAAACCGAGGG	12298; TAAAAACCCCGGGGG	12038; TTTTATTTTATTCTT	9764; CTTAGGGGTTACGTT	9670; GTGTAATCCCTCGAG	9663; CTGAAACCATTCTCG	9602; Time for index table init: 0h 2m 35s 948ms; Process prefiltering step",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:12021,mask,mask-lower-case,12021,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['mask'],['mask-lower-case']
Availability,"fter update to last version of mmseqs and hhsuite, I tried again.; I wrote this script inspired in [this tutorial](https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-hhblits-database). ```; #!/usr/bin/env bash. BASE=""subset""; FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s 7.5 &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e 0.00001 &>> ${FILELOG}. echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; cstranslate -i ${MMSEQMSA} -o ${MMSEQMSA}_cs219 \; -A /home/linuxbrew/anaconda3/data/cs219.lib \; -D /home/linuxbrew/anaconda3/data/context_data.lib \; -x 0.3 -c 4 -I ca3m &>> ${FILELOG}; ```; It only fails on cstranslate with this error:; ```; ERROR: Unable to read input file 'subsetMSA'!; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ...; ```. I'm attaching the the [sequence](https://github.com/soedinglab/MMseqs2/files/3095328/subset.fa.txt), [commands file (source)](https://github.com/soedinglab/MMseqs2/files/3095327/source.sh.txt) and [log file](https://github.com/soedinglab/MMseqs2/files/3095326/job.log.t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503:967,echo,echo,967,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503,1,['echo'],['echo']
Availability,"g k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:4208,mask,mask,4208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"g k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:3607,mask,mask,3607,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"g start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner mpirun --pernode; Force restart using the latest tmp false; Remove Temporary Files false. [node218.cluster:134942] mca: base: component_find: unable to open /usr/mpi/gcc/openmpi-1.6.5/lib/openmpi/mca_mtl_psm: libpsm_infinipath.so.1: cannot open shared object file: No such file or directory (ignored); MPI Init...; Rank: 0 Size: 1; Program call:; prefilter query_dbs/1000562_0 mmseqs_dir/profile/Tenericutes_profile tmp/14349913440832127037/pref --sub-mat blosum62.out -s 5.7 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 . MMseqs Version: da6c1a5a7be5d82719f796b85ce9cbacf9f2162c-MPI; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3. Initialising data structures...; Using 8 threads.; Could not find precomputed index. Compute index.; Touch data file mmseqs_dir/profile/Tenericutes_profile ... Done.; Substitution matrice",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521:2963,mask,mask,2963,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521,1,['mask'],['mask']
Availability,"g step 2; [=================================================================] 100.00% 276 0s 36ms; Write merged clustering; [=================================================================] 100.00% 303 0s 53ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 67ms; createsubdb tmp//10798751672030653963/clu_redundancy DB_in tmp//10798751672030653963/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 3ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 0s 848ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:11500,mask,mask,11500,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"g). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CPU(s): 0-37; NUMA node1 CPU(s): 38-75; NUMA node2 CPU(s): 76-113; NUMA node3 CPU(s): 114-151; Flags: fpu vme de pse tsc msr pae mce ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:3622,avail,available,3622,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['avail'],['available']
Availability,"gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequences //app/database/sequences/sequences; B tmp/17369488595077942690/pref_0 //app/clustering/sequences/sequences_output --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq; -id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 21474; 83647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0; --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:2 --gap-ex; tend nucl:5,aa:0 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score and coverage; Query database size: 74 type: Aminoacid; Target database size: 74 type: Aminoacid; Calculation of alignments; terminate called after throwing an instance of 'Sls::error'; Aborted; Error: Alignment died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ad5837b3444728411e6c90f8c6ba9370f665c443; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): lastest Docker container; * Operating system and version: Windows 10 (Docker in git bash)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:5431,error,error,5431,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,2,"['Error', 'error']","['Error', 'error']"
Availability,"ge 0-1) [1]; --comp-bias-corr-scale FLOAT Correct for locally biased amino acid composition (range 0-1) [1.000]; --add-self-matches BOOL Artificially add entries of queries with themselves (for clustering) [0]; --alph-size TWIN Alphabet size (range 2-21) [aa:21,nucl:5]; --spaced-kmer-mode INT 0: use consecutive positions in k-mers; 1: use spaced k-mers [0]; --spaced-kmer-pattern STR User-specified spaced k-mer pattern []; --mask INT Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis module) [0]; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [0]; --alignment-output-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; 5: score only (output) cluster format [0]; --wrapped-scoring BOOL Double the (nucleotide) query sequence during the scoring process to allow wrapped diagonal scoring around end and start [0]; -e DOUBLE List matches below this E-value (range 0.0-inf) [1.000E-03]; --min-seq-id FLOAT List matches above this sequence identity (for clustering) (range 0.0-1.0) [0.000]; --min-aln-len INT Minimum alignment length (range 0-INT_MAX) [0]; --seq-id-mode INT 0: alignment length 1: shorter, 2: longer sequence [0]; --alt-ali INT Show up to this many alternative alignments [0]; -c FLOAT List matches above this fraction of aligned (covered) residues (see --cov-mo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:1883,avail,available,1883,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,1,['avail'],['available']
Availability,"get database: /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/DB(Size: 982 ); Query database type: Nucleotide; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/QUERY(size=49 535); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 0; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 195; DB Size: 33938 (byte); Avg Kmer Size: 0.0476074; Top 10 Kmers; GGGGGG 13; AAAAGA 4; TTATTT 4; GGGAGA 3; GGAGGA 3; GAGGGG 3; GAGAAT 3; ATAGGA 2; GGGGGA 2; AAAAAG 2; Min Kmer Size: 0; Empty list: 3950. Time for index table init: 0 h 0 m 0s. k-mer similarity threshold: 88; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 49535; Target db start 1 to 982; tmp/5905259317257326532/blastp.sh: line 86: 186247 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PR EFILTER_PAR -s $SENS; Error: Prefilter died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am thinking there is a problem with the fasta files or something as the examples ones provided with the code work fine. . lastly I was wondering if there is any parameters that can be used to limit the number of cores used. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. MMseqs2 Version: 2c5dcabb805a4bd6d2db64095782a211aa1153fe; The MMseqs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/55:5176,fault,fault,5176,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"gle step clustering.; Please use --single-step-clusterlinclust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:10269,mask,mask,10269,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,2,['mask'],"['mask', 'mask-prob']"
Availability,"gnment 0 --min-length 1 --max-length 2147483647 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --start-sens 4 --sens-steps 1 --remove-tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:3732,Mask,Mask,3732,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['Mask'],['Mask']
Availability,"gnment 0 --min-length 1 --max-length 2147483647 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --start-sens 4 --sens-steps 1 --remove-tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651:3654,Mask,Mask,3654,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651,1,['Mask'],['Mask']
Availability,"gnment mode 	2; E-value threshold 	1e-05; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	3; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	2; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	25; Previous max results per query 	; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames extractorfs mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB tmp/15531098257495296432/q_orfs --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --threads 2 --compressed 0 -v 3 . [] 4h 52m 19s 671ms; Time for merging files: 0h 0m 12s 453ms; Time for merging files: 0h 0m 37s 79ms; Time for processing: 4h 53m 13s 946ms; translatenucs tmp/15531098257495296432/q_orfs tmp/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:3391,Mask,Mask,3391,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,1,['Mask'],['Mask']
Availability,"gnment mode 3; Allow wrapped scoring false; E-value threshold 0; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Slice search mode false; Strand selection 1; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files true; Alignment format 0; Format alignment output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output false; Overlap thre",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/379:1938,Mask,Mask,1938,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379,1,['Mask'],['Mask']
Availability,"gnments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	384; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:2392,Mask,Mask,2392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['Mask'],['Mask']
Availability,gs: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3008,Down,Downloads,3008,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,gth 	32000; Split Seq. by len 	true; Use fasta header 	false; Offset of numeric ids	0; Verbosity 	3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Program call:; DB . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	1; Split DB 	0; Spaced Kmer 	1; Threads 	4; Verbosity 	3. Substitution matrices...; Use kmer size 6 and split 1 using split mode; Index table: counting k-mers...; ........WARNING: Sequence (dbKey=82431) contains only ATGC. It might be a nucleotide sequence.; ..WARNING: Sequence (dbKey=102237) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105125) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105031) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105583) contains only ATGC. It might be a nucleotide sequence. Index table: Masked residues: 239357; Index table: fill...; ..........; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Write 5; Write 0; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. ; Program call:; DB DB resultDB tmp -a -s 7.5 --mask 0 --comp-bias-corr 0 . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	0; Profile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	4; Verbosity 	3; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Us,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021:1340,Mask,Masked,1340,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021,1,['Mask'],['Masked']
Availability,"h 0m 1s 477ms. Size of the sequence database: 20942; Size of the alignment database: 20942; Number of clusters: 10966. Writing results 0h 0m 0s 66ms; Time for merging to clu_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 628ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu_step0 ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step1 -v 3 --subdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 7ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 4 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 10966 type: Aminoacid; Estimated memory consumption: 1010M; Target database size: 10966 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 10.97K 0s 560ms; Index table: Masked residues: 4144; Index table: fill; [=================================================================] 10.97K 0s 667ms; Index statistics; Entries: 1798942; DB size: 498 MB; Avg k-mer size: 0.028108; Top 10 k-mers; IGAALA 68; GPGGTL 58; GIVAPG 43; ALTAGI 42; ALGNGK 34; GLGNGK 32; ELPGVN 31; DLLDLP 29; GQQVAR 24; GEQVAR 23; Time for index table init: 0h 0m 2s 664ms; Process prefiltering step 1 of 1. k-mer sim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:24173,mask,mask,24173,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,2,['mask'],"['mask', 'mask-prob']"
Availability,"h pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 --threads 10 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Verbosity 3; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile tmp/457325247790757046/pref --sub-mat blosum62.out -s 7.5 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189:1890,Mask,Mask,1890,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189,1,['Mask'],['Mask']
Availability,"h the error:; ```; [ 94%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasySearch.cpp.o; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp: In function 'int doeasysearch(int, const char**, const Command&, bool)':; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:34: error: 'easysearch_sh' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; | ^~~~~~~~~~~~~; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:49: error: 'easysearch_sh_len' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; ```; (Indicated here are the last few lines only.). ## Steps to Reproduce (for bugs); Compilation tools:; ```; cmake v3.21.4; gcc v10.2.0; openmpi v4.1.1; git v2.31.1; make v3.82; ```; Clone latest `MMseqs2` version with; ```; git clone https://github.com/soedinglab/MMseqs2.git; ```. Follow compilation instructions for linux as provided [here](https://github.com/soedinglab/mmseqs2/wiki#compile-from-source-under-linux) with the following modification:; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DREQUIRE_OPENMP=0 -DCMAKE_INSTALL_PREFIX=. ..; ```; This results in the error indicated above. ## MMseqs Output (for bugs); Some additional data, if necessary, is available [here](https://gist.github.com/vragh/89c426b70c63248c73ff120757149c9d). ## Context; I'm trying to install `MMseqs2` with MPI capabilities so that I can parallelize a large search over multiple `slurm` nodes on a HPC. ## Your Environment; * Commit: the version I cloned should be equivalent to [[fce06b1](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011)](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011) ?; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 2x Intel(R) Xeon(R) Silver 4214; 187 GB total system memory.; * Operating system and version: Scientific Linux 7.9 (Nitrogen).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/633:1402,error,error,1402,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/633,2,"['avail', 'error']","['available', 'error']"
Availability,h.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of tar,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3384,Down,Downloads,3384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"h/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 310097721 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 18s 71ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 52s 198ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 18338; Time for index table init: 0h 3m 27s 29ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 8); Query db start 1 to 310097721; Target db start 1 to 16332640; [=================================================================] 100.00% 310.10M 1h 8m 24s 140ms. 28.708682 k-mers per position; 4442 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 278135107 sequences with 0 size result lists; Time for merging to orfs_pref_tmp_0: 0h 3m 5s 974ms; Time for merging to orfs_pref_tmp_0_tmp: 0h 1m 47s ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:7471,Mask,Masked,7471,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Mask'],['Masked']
Availability,"hed with `core dumped` error and reports `Error: createbintaxonomy failed`. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; mmseqs createdb ""uniprot_2024_03.fasta"" seqdb; ```; then; ```; mmseqs createtaxdb seqdb tmp ; ```. We attempted to vary `--tax-db-mode`, `--tax-mapping-mode`, and `--threads` parameters but observed the same behavior. Any help would be highly appreciated. We are able to reproduce this issue with a minimal database containing 1000 sequences. ## MMseqs Output (for bugs). ```; > mmseqs createtaxdb seqdb tmp ; createtaxdb seqdb tmp . MMseqs Version: 15.6f452; NCBI tax dump directory; Taxonomy mapping file ; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 48; Verbosity 3. Loading nodes file ... Done, got 2601214 nodes; Loading merged file ... Done, added 79743 merged nodes.; Loading names file ... Done; mmseqs: malloc.c:2379: sysmalloc: Assertion `(old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.; Aborted (core dumped); Error: createbintaxonomy failed; ```. ## Context. We are trying to create a custom taxonomy database for MSA, such that the resulting .a3m files contain taxonomy information. Is a taxonomy database already available for download for uniprot_2024_03 for similar releases?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. Linux 64-bit, 256G memory; MMseqs Version: 15.6f452",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871:1298,Error,Error,1298,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871,3,"['Error', 'avail', 'down']","['Error', 'available', 'download']"
Availability,"hes 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 -v 3 . MMseqs Version: 7.4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0.99; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.6; Coverage Mode 1; Max. sequence length 65535; Max. results per query 2147483647; Compositional bias 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 128; Verbosity 3. Init data structures...; Compute score, coverage and sequence id.; Touch data file contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy ... Done.; Query database type: Nucleotide; Target database type: Nucleotide; **Calculation of Smith-Waterman alignments.; .contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/linclust.sh: line 73: 121353 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTD; B"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; Error: linclust died; Error: Search died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 7.4e23d. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; statically-compiled using conda. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Nodes: 1; Cores per node: 128; Memory: 240.00 GB. * Operating system and version:; linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/632:6859,fault,fault,6859,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632,4,"['Error', 'fault']","['Error', 'fault']"
Availability,"hm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Input /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 does not exist; Error: Alignment died; Error: First search died; Error: taxonomy died; Error: Search died; ```. Many thanks; Antonio. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 5daca424b162cc5fdf0b9cd151aebed86975cbf6; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE supported, 256G ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/433:2376,Error,Error,2376,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433,4,['Error'],['Error']
Availability,"hreshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; [Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:2982,fault,fault,2982,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"iB/2.7GiB(83%) CN:5 DL:105MiB ETA:4s]; [#14821b 2.3GiB/2.7GiB(86%) CN:5 DL:103MiB ETA:3s]; [#14821b 2.4GiB/2.7GiB(90%) CN:5 DL:102MiB ETA:2s]; [#14821b 2.5GiB/2.7GiB(93%) CN:5 DL:102MiB ETA:1s]; [#14821b 2.6GiB/2.7GiB(97%) CN:5 DL:100MiB]; [#14821b 2.7GiB/2.7GiB(99%) CN:1 DL:97MiB]. 10/11 10:32:21 [NOTICE] Download complete: /space/jmd20jns/tmp/13406937569195620773/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 14821b|OK | 105MiB/s|/space/jmd20jns/tmp/13406937569195620773/eukaryota.tar. Status Legend:; (OK):download completed. 10/11 10:32:21 [NOTICE] Downloading 1 item(s). 10/11 10:32:22 [NOTICE] Download complete: /space/jmd20jns/tmp/13406937569195620773/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; c8e316|OK | 20MiB/s|/space/jmd20jns/tmp/13406937569195620773/viruses.tar. Status Legend:; (OK):download completed.; tar2db /space/jmd20jns/tmp/13406937569195620773/bacteria.tar /space/jmd20jns/tmp/13406937569195620773/archea.tar /space/jmd20jns/tmp/13406937569195620773/eukaryota.tar /space/jmd20jns/tmp/13406937569195620773/viruses.tar /space/jmd20jns/tmp/13406937569195620773/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 91ms; Time for merging to msa.lookup: 0h 0m 0s 45ms; Time for processing: 0h 0m 15s 419ms; msa2profile /space/jmd20jns/tmp/13406937569195620773/msa /space/jmd20jns/mmseqs_eggNOG/mmseqs_eggNOG --match-mode 1 --match-ratio 0.5 --threads 64 -v 3 . Finding maximum sequence length and set size.; Error: msa2profile died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Static",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762:6337,down,download,6337,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762,1,['down'],['download']
Availability,"ia-dustmasked tmp --ncbi-tax-dump ~/04.db/krakenuniq/taxonomy --tax-mapping-file ~/04.db/krakenuniq/library/nt-bacteria.fna.map; mmseqs createdb BIN_REASSEMBLY/reassembled_bins/bin.18.strict.fa test; mmseqs taxonomy --threads 16 test ~/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked test_res tmp --search-type 3; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 3; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/697:1708,mask,mask,1708,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697,1,['mask'],['mask']
Availability,"ias 1 ; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800 ; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 16; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 1000000; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1 ; Profile E-value threshold 0.001 ; Global sequence weighting false ; Allow deletions false ; Filter MSA 1 ; Use filter only at N seqs 0 ; Maximum seq. id. threshold 0.9 ; Minimum seq. id. 0.0 ; Minimum score per column -20 ; Minimum coverage 0 ; Select N most diverse seqs 1000 ; Pseudo count mode 0 ; Min codons in orf 30 ; Max codons in length 32734 ; Max orf gaps 2147483647 ; Contig start mode 2 ; Contig end mode 2 ; Orf start mode 1 ; Forward frames 1,2,3 ; Reverse frames 1,2,3 ; Translation table 1 ; Translate orf 0 ; Use all table starts false ; Offset of numeric ids 0 ; Create lookup 0 ; Add orf stop false ; Overlap between sequences 0 ; Sequence split mode 1 ; Header split mode 0 ; Chain overlapping alignments 0 ; Merge query 1 ; Search type 0 ; Search iterations 5 ; Start sensitivity 4 ; Search steps 1 ; Prefilter mode 0 ; Exhaustive search mode false ; Filter results during exhaustive search 0 ; Strand selection 1 ; LCA search mode false ; Disk space limit 0 ; MPI r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/774:1973,Mask,Mask,1973,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/774,1,['Mask'],['Mask']
Availability,id; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Ind,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:30738,Mask,Masked,30738,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,"ignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. results per query 	200; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	false; LCA Ranks 	kingdom:phylum:class:order:family:genus:species; Blacklisted Taxa 	12908,28384; LCA Mode 	3;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:2484,Mask,Mask,2484,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['Mask'],['Mask']
Availability,"ignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	48; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:6801,Mask,Mask,6801,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['Mask'],['Mask']
Availability,"ignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	10000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:2620,Mask,Mask,2620,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['Mask'],['Mask']
Availability,"ignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaust",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:2652,Mask,Mask,2652,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['Mask'],['Mask']
Availability,"ignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 64; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 35; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp fal",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:1808,Mask,Mask,1808,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['Mask'],['Mask']
Availability,"ilarity-type 1`) instead of the default identity (`--similarity-type 2`) . ## Current Behavior; Using either parameter gives the same clustering output. . ## Steps to Reproduce (for bugs); Input: ; [artificial6.txt](https://github.com/soedinglab/MMseqs2/files/5995767/artificial6.txt); commands:; ` mmseqs createdb artificial6.fasta in/DB_in`; ` mmseqs cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1`; or; ` mmseqs cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2`. Both results lead to identical .tsv files. Update: adding `--comp-bias-corr 0` gives similar results. ## MMseqs Output (for bugs). similarity type 1: ; Create directory clu/sim1_tmp; cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:1044,mask,mask,1044,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['mask'],['mask']
Availability,"ilarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:6458,mask,mask-lower-case,6458,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['mask'],['mask-lower-case']
Availability,"iles have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; *** Download Progress Summary as of Wed Sep 27 13:22:54 2023 *** ; ===============================================================================; [#2b99bd 207MiB/51GiB(0%) CN:5 DL:10MiB ETA:1h24m8s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:2145,Down,Download,2145,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['Down'],['Download']
Availability,"imit, such as 10G for ten gigabyte or 1T for one terabyte of RAM. ...so I'm using `--split-memory-limit` with 80% of the RAM provided for the qsub job. However, I always get the error:. ```; search --threads 8 -e 1e-3 --max-accept 1 --max-seqs 100 -s 6 --num-iterations 2 --split 0 --split-memory-limit 160G /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/hits_seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_TMP09. MMseqs Version: 	11.e1a1c; E-value threshold 	0.001; Max accept 	1; Threads 	8; Sensitivity 	6; Max results per query 	100; Split database 	0; Split memory limit 	160G; Search iterations 	2. Failed to mmap memory dataSize=321859477504 File=/ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db.idx. Error 12.; ```. Even if I reduce `--split-memory-limit` to 50% or just 20% of the total memory provided for the qsub job, the job still dies with the same error. Maybe I'm not understanding or using `--split-memory-limit` correctly??. I'm using UniRef90 as the db. If I use 336G for the job mem limit, then the `mmseq search` job runs without an error. . ## Steps to Reproduce (for bugs). `mmseqs search` on UniRef90 to provide a large RAM requirement for the job. . ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338:1472,error,error,1472,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338,1,['error'],['error']
Availability,importing simtk.openmm error,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/727:23,error,error,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/727,1,['error'],['error']
Availability,"ince it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would be important to rank all hits of a query based on a globally valid significance measure that would allow the comparison of Hit-Target significances across iterations as well. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM, i5-3320M CPU; * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:3710,down,downloaded,3710,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['down'],['downloaded']
Availability,"ineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 80G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive searc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:3085,Mask,Mask,3085,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,2,['Mask'],['Mask']
Availability,"ing the UniRef90 database. ## Current Behavior; After a first round of prefilter, rescorediagonal is executed, some merge steps are executed, new tmp directories are created, and the program dies partway through the second round of prefilter. ## Steps to Reproduce (for bugs); Downloaded the UniRef90 database with wget:; `wget https://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz`. Decompressed with gunzip, then ran createdb:; `mmseqs createdb uniref90.fasta uniref90`; ; Augmented with taxonomic information (used -db-mode 0 because createbintaxonomy kept crashing as well):; `mmseqs createtaxdb uniref90 tmp --tax-db-mode 0`. Created database for my query sequences:; `mmseqs createdb KLEB_PO07_megahit.fasta KLEB_PO07_megahitDB`. Ran mmseqs taxonomy on cluster with slurm script:; ```; #!/usr/bin/env bash. #SBATCH --job-name=KLEB_PO07_mmseqs; #SBATCH --cpus-per-task=32; #SBATCH --mem=150G; #SBATCH --time=0-3:00; #SBATCH --output=KLEB_PO07_mmseqs.log; #SBATCH --error=KLEB_PO07_mmseqs.err. module load mmseqs2/15-6f452; taxDB=/home/sdwork/scratch/metagenomics/uniref_db/uniref90. mmseqs taxonomy KLEB_PO07_megahitDB $taxDB KLEB_PO07_megahit_result tmp; ```. ## MMseqs Output (for bugs); [Full output can be found in this gist.](https://gist.github.com/sean-workman/531e9d5fc73635dee8c000f9da137fe0). I also see this output in my error file:; `tmp/1193166584733320518/tmp_taxonomy/17149912652888480377/tmp_hsp1/10699950925961740214/blastp.sh: line 135: 8379 Bus error (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""`. ## Context; I created metagenomic assemblies using megahit and metaSPAdes. I am trying to get MMseqs2 working to do taxonomic classification. I am running on Digital Research Alliance of Canada clusters. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838:1083,error,error,1083,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838,1,['error'],['error']
Availability,"ing: 0h 0m 0s 2ms; prefilter tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 -s 5.7 . Query database size: 4 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 2 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 2 0s 2ms; Index table: Masked residues: 18; Index table: fill; [=================================================================] 2 0s 2ms; Index statistics; Entries: 8669; DB size: 8192 MB; Avg k-mer size: 0.000008; Top 10 k-mers; AAATAAACAAAAAAA	2; TTAGATCGAAAAAAA	2; AACCAACTAAAAAAA	2; TCCTTTCTCAAAAAA	2; CCAAAATAACAAAAA	2; TTGAATGCACAAAAA	2; AATGTGCTACAAAAA	2; GCAATTAACCAAAAA	2; CTCTGGTACGAAAAA	2; GGGTGGAATGAAAAA	2; Time for index table init: 0h 0m 7s 405ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4; Target db start 1 to 2; [================================================] 4 ================0s 6ms; =; 0.991092 k-mers per position; 4326 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 2 median result list length; 2 sequences with 0 size result lists; Time for mergi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:7575,Mask,Masked,7575,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['Mask'],['Masked']
Availability,"init done. DB statistic; Entries: 75296699; DB Size: 1137909162 (byte); Avg Kmer Size: 0.877931; Top 10 Kmers; 	YTGTPK		2496; 	GPGGTT		2371; 	HQSGQR		1210; 	AGDYKP		1057; 	PHFGRQ		943; 	PHLGRQ		837; 	DPVLEP		661; 	PFADTR		653; 	MVQFFP		588; 	NGAAHP		585; Min Kmer Size: 0; Empty list: 66045602. Time for index table init: 0 h 0 m 29s. k-mer similarity threshold: 130; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1282204; Target db start 1 to 1282204; Wrong prefiltering result: Query: 1 -> 1361079913	r; Invalid database read for id=1361079913, database index=/usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db.index; Wrong prefiltering result: Query: 71 -> 1361079913	r; Invalid database read for id=getDbKey: local id (1361079913) >= db size (1282204); 1361079913, database index=/usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db.index; getDbKey: local id (1361079913) >= db size (1282204); Wrong prefiltering result: Query: 111 -> 1361079913	r; Invalid database read for id=; Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x2aaac5d87700 (LWP 8622)]; 0x00002aaaabb70dcd in __run_exit_handlers () from /usr/lib64/libc.so.6; Missing separate debuginfos, use: debuginfo-install glibc-2.17-106.el7_2.8.x86_64 libgcc-4.8.5-4.el7.x86_64 libgomp-4.8.5-4.el7.x86_64 libstdc++-4.8.5-4.el7.x86_64 zlib-1.2.7-15.el7.x86_64; (gdb) bt; #0 0x00002aaaabb70dcd in __run_exit_handlers () from /usr/lib64/libc.so.6; #1 0x00002aaaabb70eb5 in exit () from /usr/lib64/libc.so.6; #2 0x00000000005de79f in DBReader<unsigned int>::getDbKey (this=0x8b8f10, id=1361079913) at /usr/lusers/aivan/prog/MMseqs2/src/commons/DBReader.cpp:344; #3 0x0000000000548023 in Prefiltering::writePrefilterOutput (this=0x7fffffffda10, qdbr=0x8b8f10, dbWriter=0x7fffffffcc80, thread_idx=1, id=0, prefResults=..., seqIdOffset=0, diagonalScoring=true, resultOffsetPos=0, maxResults=4000); at /usr/lusers/aivan/prog/MMseqs2/src/prefiltering/Prefil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/37:4772,fault,fault,4772,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/37,1,['fault'],['fault']
Availability,"input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 19ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 3ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 975ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 35ms. 125.182478 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 657ms; align tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:20346,Mask,Masked,20346,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['Mask'],['Masked']
Availability,"ior; I installed release 14-7e284 via conda yesterday and tried to download various databases via the databases module. The following error messages were generated for GTDB; other databases were generated without errors. I thought problems with GTDB were fixed in previous versions (e.g., see issue [#742](https://github.com/soedinglab/MMseqs2/pull/742)), but perhaps changes were reverted in the latest release via conda?. Here are the relevant error messages (full output also included below):. 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:997,Down,Download,997,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['Down'],['Download']
Availability,ior; Segfaults during prefilter stage due to:. ```; Query database: /share/input.fasta(size=0); ```. ## Steps to Reproduce (for bugs); * Create a FASTA file containing 1 sequence.; * Run `mmseqs createdb input.fasta db`; * `rm -rf tmp && mkdir tmp`; * Run `mmseqs search input.fasta db test tmp`. ## MMseqs Output (for bugs); ```; Program call:; input.fasta db test tmp . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Sensitivity 	5; K-mer size 	0; K-score 	2147483647; Alphabet size,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/41:1172,Mask,Mask,1172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41,1,['Mask'],['Mask']
Availability,"ior; Starting from nr which was already downloaded, generate all of the required files to run mmseqs taxonomy to assign taxonomy to metagenome assembled genomes. ## Current Behavior; nr.fnaDB_mapping is empty (ls -thor reveals it is 0 bytes and mmseqs easy-taxonomy displays ""nr.fnaDB_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.""). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; #Download nr; wget ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz; gunzip nr.gz; #Make a blastdb and diamond db of nr; makeblastdb -in nr -dbtype prot; diamond makedb --in nr -d nr.dmnd; #Prepare taxonomy database for mmseqs2; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; rm taxdump.tar.gz; blastdbcmd -db nr -entry all > nr.fna; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.fna.taxidmapping; mmseqs createdb nr.fna nr.fnaDB && \; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I want to use MMseqs2 to assign taxonomy to contig-level metagenome-assembled genomes. I had previously downloaded nr as above, so hopefully the way I downloaded it works for MMseqs? I could alternatively re-download nr entirely with the mmseqs workflows, but would prefer not to do that if possible for consistency with analyses that are already done and used the version of nr that I have downloaded. I don't think versioning is actually a problem as I downloaded nr within the past couple months. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; I am using a conda environment created using `conda install -c bioconda mmseqs2` on April 19, 2023.; version: 14.7e284 (via conda list in activated environment)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/701:1356,down,downloaded,1356,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701,5,['down'],"['download', 'downloaded']"
Availability,"iosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/349:1440,avail,available,1440,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349,1,['avail'],['available']
Availability,"is job using mpirun I got this error: . [cpu-23-1:104192] *** Process received signal ***; [cpu-23-1:104192] Signal: Bus error (7); [cpu-23-1:104192] Signal code: Non-existant physical address (2); [cpu-23-1:104192] Failing at address: 0x148bd2954aee; [cpu-23-1:104230] *** Process received signal ***; [cpu-23-1:104230] Signal: Bus error (7); [cpu-23-1:104230] Signal code: Non-existant physical address (2); [cpu-23-1:104230] Failing at address: 0x14758c03a9e9; [cpu-23-1:104233] *** Process received signal ***; [cpu-23-1:104233] Signal: Bus error (7); [cpu-23-1:104233] Signal code: Non-existant physical address (2); [cpu-23-1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . mmseqs createdb ""${Q",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:1138,error,error,1138,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604,1,['error'],['error']
Availability,is mmseqs latest version available to use?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387:25,avail,available,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387,1,['avail'],['available']
Availability,"ist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; cache_alignment	: 64; address sizes	: 44 bits physical, 48 bits virtual; power management:; ```; free; ```; total used free shared buff/cache available; Mem: 528377212 3193792 142947764 9564 382235656 523907652; Swap: 0 0 0. ```; * Operating system and version:; cat /etc/redhat-release ; CentOS Linux release 7.3.1611 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:6910,avail,available,6910,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,1,['avail'],['available']
Availability,"it 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment database: 45461840; Number of clusters: 44582196; Writing results 0h 0m 16s 390ms; ```. ## Your Environment. Version with error: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Version without error: 14014cd0ec50049f796f153ea8a72164ff4b8b45. Both are self compiled on the same operating system (Debian 9 Stretch). . uname -mrs gives; Linux 4.19.0-0.bpo.6-amd64 x86_64. Running on 8 core 60gb machine (with 2 hyperthreads). Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:4185,error,error,4185,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,2,['error'],['error']
Availability,"it into many parts. Is it possible to consolidate them?. Commands (search, flat file generation, then cstranslate):; ```; ~/apps/mmseqs2/git/build/bin/mmseqs search \; euk_screen_split/screenDB_split_0_100 \; uref_euk85_repDB_lfs/uref_euk85_rep \; euk_screen_split_prof/screenDB_split_0_100 \; $MMTEMP \; -a \; --local-tmp /scratch/$USER/$SLURM_JOB_ID \; --split-memory-limit 150000000. ~/apps/mmseqs2/git/build/bin/mmseqs result2msa \; euk_screen_split/screenDB_split_0_100 \; uref_euk85_repDB_lfs/uref_euk85_rep \; euk_screen_split_prof/screenDB_split_0_100 \; euk_screen_split_flat/screenDB_split_0_100 \; --threads 24 \; --compress. ~/apps/hh-suite/git/build/bin/cstranslate \; -i ""euk_screen_split_msa/screenDB_split_0_100"" \; -o ""euk_screen_split_msa/screenDB_split_0_100_cs219"" \; -f -x 0.3 -c 4 -I ca3m; ```. Output of `cstranslate`; ```; - 13:12:38.156 ERROR: In /home/saladi1/apps/hh-suite/git/src/ffindexdatabase.cpp:11: FFindexDatabase:. - 13:12:38.156 ERROR: could not open file 'euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata'. Reading context library for pseudocounts from internal ...; Reading abstract state alphabet from internal ...; ```. Files do exist:. ```; [saladi1@comet-ln3 mmdb]$ ls -1 euk_screen_split_msa/screenDB_split_0_100*; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.0; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.1; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.10; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.11; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.12; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.13; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.14; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.15; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.16; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.17; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.18; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.19; euk_screen_split_msa/screenDB_split_0_100_ca",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/191#issuecomment-491998440:1178,ERROR,ERROR,1178,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/191#issuecomment-491998440,1,['ERROR'],['ERROR']
Availability,"ith a segmentation fault. ## Steps to Reproduce (for bugs); ```bash; mmseqs convertmsa ${BUILD_PIPELINE_FOLDER}/curated_alignments/alpaca_H.stockholm msaDb ; mmseqs msa2profile msaDb alpaca_H_profile ; mmseqs convertprofiledb alpaca_H_profile alpaca_H.db ; ```. ## MMseqs Output (for bugs); ```bash; convertmsa /home/robin/Documents/projects/numerator/anarci/ANARCI/build_pipeline/curated_alignments/alpaca_H.stockholm msaDb . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Identifier field 1; Compressed 0; Verbosity 3. Time for merging to msaDb: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; msa2profile msaDb alpaca_H_profile . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; MSA type 2; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Match mode 0; Match ratio 0.5; Pseudo count mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Compositional bias 1; Compositional bias 1; Global sequence weighting false; Filter MSA 1; Use filter only at N seqs 0; Minimum coverage 0; Minimum seq. id. 0.0; Minimum score per column -20; Maximum seq. id. threshold 0.9; Select N most diverse seqs 1000; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Skip query false; Gap pseudo count 10; Threads 4; Compressed 0; Verbosity 3. Finding maximum sequence length and set size.; [=================================================================] 100.00% 1 eta -; Time for merging to alpaca_H_profile_h: 0h 0m 0s 0ms; Time for merging to alpaca_H_profile: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; convertprofiledb alpaca_H_profile alpaca_H.db . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Threads 4; Compressed 0; Verbosity 3. zsh: segmentation fault (core dumped) mmseqs convertprofiledb alpaca_H_profile alpaca_H.db; ```; ## Your Environment; Version: MMseqs2 Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; OS: Manjaro Linux on x64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/741:7400,fault,fault,7400,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/741,1,['fault'],['fault']
Availability,"ix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Compressed 0; Verbosity 3; Seed Substitution Matrix VTML80.out; Sensitivity 7.5; K-mer size 6; K-score 2147483647; Alphabet size 21; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Mask lower case residues 0; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Force restart using the latest tmp false; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile.idx tmp/6822607060114486044/pref --sub-mat blosum62.out --seed-sub-mat VTML80.ou",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:1260,Mask,Mask,1260,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['Mask'],['Mask']
Availability,"ject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	48; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:7020,Mask,Mask,7020,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['Mask'],['Mask']
Availability,"ject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:3741,Mask,Mask,3741,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['Mask'],['Mask']
Availability,"just-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3696,mask,mask,3696,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediagonal 1831648_seqs.mmseqs2db 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:4457,mask,mask,4457,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,2,['mask'],"['mask', 'mask-prob']"
Availability,"k profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files false. prefilter query_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/t_orfs_aa /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 589824T -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 96 --compressed 1 -v 3 -s 6.0 . Query database size: 727664 type: Aminoacid; Estimated memory consumption: 60T; Target database size: 13319670203 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; Error: Prefilter died; Error: Search step died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:3548,mask,mask,3548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510,4,"['Error', 'mask']","['Error', 'mask', 'mask-lower-case']"
Availability,"k-mer size: 0.000640; mmseqs-web-worker_1 | Top 10 k-mers; mmseqs-web-worker_1 | AAGAGA	872; mmseqs-web-worker_1 | CGGACA	532; mmseqs-web-worker_1 | AAGACG	524; mmseqs-web-worker_1 | AGAGCC	460; mmseqs-web-worker_1 | AAGCGC	453; mmseqs-web-worker_1 | AAAGGG	440; mmseqs-web-worker_1 | CGAGGG	403; mmseqs-web-worker_1 | AGCCAG	386; mmseqs-web-worker_1 | GCGCAG	385; mmseqs-web-worker_1 | AACAGG	323; mmseqs-web-worker_1 | Write ENTRIES (9); mmseqs-web-worker_1 | Write ENTRIESOFFSETS (10); mmseqs-web-worker_1 | Write SEQINDEXDATASIZE (15); mmseqs-web-worker_1 | Write SEQINDEXSEQOFFSET (16); mmseqs-web-worker_1 | Write SEQINDEXDATA (14); mmseqs-web-worker_1 | Write ENTRIESNUM (12); mmseqs-web-worker_1 | Write SEQCOUNT (13); mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence.idx: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 3s 688ms; mmseqs-web-worker_1 | touchdb /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version:	e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 47ms; mmseqs-web-worker_1 | 2022/09/22 16:09:14 Process finished gracefully without error; ```. For comparison, logs looked like this when the RNA indexing was working:; ```; mmseqs-web-worker_1 | indexdb /tmp/16248551593497607411/nucl_split_seq /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:13670,error,error,13670,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['error'],['error']
Availability,"k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:19210,mask,mask,19210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [======================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:5135,mask,mask,5135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"l bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 32. Target split mode. Searching through 9 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================] 100.00% 23.11M 27m 25s 83ms; Index table: Masked residues: 122354587; Index table: fill; tmp/17913398511991990568/createindex.sh: line 56: 114573 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Envir",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/540:2782,mask,mask-lower-case,2782,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540,1,['mask'],['mask-lower-case']
Availability,"l the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering steps together. You can reconstruct the 50 (and a 70) clustering from the 30% alignments, and that's what it does (it does it with a roundabout regex, because we didn't have expression filters back then).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:1341,down,down,1341,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067,1,['down'],['down']
Availability,"l:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	2; Max sequence length 	10000; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	fal",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:1810,Mask,Mask,1810,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,2,['Mask'],['Mask']
Availability,"lated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:17664,fault,fault,17664,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,3,"['Error', 'fault']","['Error', 'fault']"
Availability,"ld 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; pan.db /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:3215,mask,mask,3215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['mask'],['mask']
Availability,"ld cluster. The tool works great overall!. I'm using a fairly strict criterion for clustering using linclust, attempting to do as much as I can before I use mmseqs. The parameters are ->; -e 0.1 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --kmer-per-seq 30 --kmer-per-seq-scale 0.3 -k 50 --cluster-mode 1 --max-iterations 50000 --seq-id-mode 2 --threads 16. I have used comically large values of (e / kmer-per-seq) and I still find thousands of such pairs that should have been clustered. Unfortunately, I cannot share the sequences because I don't own them. But I could report further that if I only use the two sequences (that are being missed in a population of sequences) on their own, linclust clusters them using the same pipeline. Next, I used the same two clusters with an 'outgroup' sequences, and I found the expected outcome - the two close by sequences were clustered whereas the outgroup was not. I begin to lose sensitivity as I start using more and more sequences in the population, which leads me to believe that the loss of sensitivity could be down the pre-filters/heuristics/e-value. If I manually 'cascade' the representative sequences from the first step using linclust again (instead of mmseqs, hence 'cascade'), I don't gain any appreciable sensitivity. So when provided a large population, linclust is missing these pairs many times (I tried to 'cascade' several times, but using linclust alone. What I find surprising is that these two sequences must share at least one kmer (in fact they must share many), so they must have been compared to each other, and they qualify all hard filters (coverage / alignment score), and yet they were missed. It's also possible both of them were compared to a third 'representative' sequence of a different cluster, and both of them did not make the cut. Still, they should have been compared to each other in a cluster of two because of their shared kmers. Is their a temporary file that documents which kmers were selected from a particular seq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923001759:1344,down,down,1344,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923001759,1,['down'],['down']
Availability,"le 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:3528,mask,mask-lower-case,3528,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['mask'],['mask-lower-case']
Availability,"le 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:6502,mask,mask-lower-case,6502,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['mask'],['mask-lower-case']
Availability,"le 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob; 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 . Index version: 16 ; Generated by: bb0a1b3569b9fe115f3bf63e5ba1da234748de23; ScoreMatrix: VTML80.out ; Query database size: 1000 type: Aminoacid; Estimated memory consumption: 101G; Target database size: 33611651 type: Aminoacid ; Process prefiltering step 1 of 1; ; k-mer similarity threshold: 118 ; Starting prefiltering scores calculation (step 1 of 1) ; Query db start 1 to 1000 ; Target db start 1 to 33611651 ; [=================================================================] 100.00% 1.00K 53s 841ms ; tmp1/1465312676443513838/search_tmp/12840997425876760019/blastpgp.sh: line 139: 3819000 Segmentation fault (core dumped) $RUNNER $PREF ""$QUERYDB"" ""$2"" ""$TMP_PATH/pref_$STEP"" ${TMP} ; Error: Prefilter died ; Error: Search died ; ```. ## Context. I thought maybe it's due to some special symbols in sequences in the failed fastas or larger size of proteins. Seems not, since ""X"" symbols where in completed fastas as well, as well as protein length ~30K or short. dividing these fasta files to a set of smaller solves this problem for a subset of new, but still leaves some with the same error. I can send an example fasta if it's needed. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used: MMseqs2 Version: b22d5f6d02cb27ebc2cd931d8d20fe92ff54b8a8, got with wget, avx2 ; Node info:; 2 x NVIDIA Tesla V100 SXM2 GPU with 32GB RAM, connected by nvlink; 2 x 8 core Intel(R) Xeon(R) Gold 6244 CPU @ 3.60GHz (total 16 cores); 768GB DDR4 RAM; 387GB SSD scratch disk. (however, run on different machines, the same problem)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/774:5884,error,error,5884,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/774,1,['error'],['error']
Availability,"le 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:3917,mask,mask-lower-case,3917,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['mask'],['mask-lower-case']
Availability,"le 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:4649,mask,mask-lower-case,4649,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['mask'],['mask-lower-case']
Availability,"le databases on my local machine, however I am encountering an error when running the tsv2exprofiledb command. The command runs, but fails halfway through with the below error messages. ## Steps to Reproduce (for bugs); For uniref30: mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103; For colabfold metagenomic db: mmseqs tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db. ## MMseqs Output (for bugs); ### uniref30: ; tsv2exprofiledb uniref30_2103 uniref30_2103_db. MMseqs Version: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; Verbosity 3. tsv2db uniref30_2103.tsv uniref30_2103_db_tmp --output-dbtype 0 -v 3. Output database type: Aminoacid; Time for merging to uniref30_2103_db_tmp: 0h 0m 29s 721ms; Time for processing: 0h 3m 27s 506ms; compress uniref30_2103_db_tmp uniref30_2103_db -v 3. Can not set mode for uniref30_2103_db.0!. ### colabfold_env_db_202108_db:. mmseqs tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db; tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db. MMseqs Version: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; Verbosity 3. tsv2db colabfold_envdb_202108.tsv colabfold_envdb_202108_db_tmp --output-dbtype 0 -v 3. Output database type: Aminoacid; Time for merging to colabfold_envdb_202108_db_tmp: 0h 3m 36s 590ms; Time for processing: 0h 20m 26s 68ms; compress colabfold_envdb_202108_db_tmp colabfold_envdb_202108_db -v 3. Failed to mmap memory dataSize=38374278339 File=colabfold_envdb_202108_db_tmp. Error 12. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; * Which MMseqs version was used: Compiled from source; * Operating system and version: Ubuntu WSL2 on Windows 10. I've tried deleting and redownloading the databases to account for possible file corruption, my only other thought is that it could be a memory issue, since I am trying to do this locally with only 8GB RAM. Any help would be much appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/530:1548,Error,Error,1548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/530,1,['Error'],['Error']
Availability,le k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: counting k-mers; [=================================================================] 2 0s 62ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; [=================================================================] 2 0s 34ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: counting k-mers; Index table: counting k-mers; [=[=================================================================] 2 0s 21ms; Index table: Masked residues: 0; ================================================================[=================================================================] 2 0s 28ms; [=================================================================] 2 0s 18ms; Index table: Masked residues: 0; ] 2 0s 28ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 22ms; [=================================================================] 2 0s 72ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 138ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: fill; [=================================================================] 2 0s 15ms; [=================================================================] 2 0s 44ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 19ms; Index table: fill; [=================================================================] 2 0s 0m,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:34981,Mask,Masked,34981,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,le: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ] 2 0s 57ms; Index table: Masked residues: 0; [=================================================================] 2 0s 41ms; Index table: Masked residues: 0; [=================================================================] 2 0s 25ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 0ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: Masked residues: 0; [=================================================================] 2 0s 15ms; Index table: Masked residues: 0; [=================================================================] 2 0s 66ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [==================================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:32778,Mask,Masked,32778,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,"lease ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	24; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Clust",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:1722,Mask,Mask,1722,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['Mask'],['Mask']
Availability,les (x86)\mmseqs\\bin/more: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mountpoint: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mpstat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mt: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nice: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nmeter: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nohup: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nslookup: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/od: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/patch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pgrep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pidof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ping: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ping6: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pipe_progress: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pkill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/popmaildir: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/printenv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/printf: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ps: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pscan: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pstree: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pwd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pwdx: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/readlink: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/realpath: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/reform,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:8716,ping,ping,8716,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['ping'],['ping']
Availability,"les//13298481167543164943/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 10 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 210 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 210 0s 6ms; Index statistics; Entries: 1284; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 989ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10; Target db start 1 to 210; [=================================================================] 10 0s 14ms. 487.061439 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 609ms; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:28200,Mask,Masked,28200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['Mask'],['Masked']
Availability,les: 0h 0m 0s 167ms; Time for processing: 0h 0m 0s 520ms; Program call:; createsubdb tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Verbosity	3. Start writing to file tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy; Time for merging files: 0h 0m 0s 89ms; Time for processing: 0h 0m 0s 527ms; Program call:; prefilter tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 20 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 0 --pca 1 --pcb 1.5 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3. Initialising data structures...; Using 2 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1160320116 byte) of total memory (1886452531 byte); Target database: tmp/3578692915323364718/clu_tmp/3024874387480789614/,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:17577,mask,mask,17577,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['mask'],['mask']
Availability,lib/zstd/programs/fileio.c: line 2303. assert(error>=0 || error<=1);,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/295:46,error,error,46,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/295,2,['error'],['error']
Availability,lign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	64; Verbosity 	3; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. /root/tmp/blast; /root/tmp/blast; Program call:; mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 64 -v 3 -s 4 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	64; Verbosity 	3. Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: mmseq-testDB(size=2467); Target database: /junk/databases/mmseqs/nr(size=121935717); Use kmer size 7 and split 0 using split mode 0; tmp/blastp.sh: línea 60: 68389 Excepc,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:2839,mask,mask,2839,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,1,['mask'],['mask']
Availability,"lignment mode 	2; E-value threshold 	1e-05; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	200; Previous max results per query; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false; LCA ranks 	kingdom:phylum:class:order:family:genus:species; Blacklisted taxa 	12908,28384; Show taxon lineage 	false; LCA mode 	3; Taxo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:1724,Mask,Mask,1724,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['Mask'],['Mask']
Availability,"lignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	4; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaust",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/728:2105,Mask,Mask,2105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728,1,['Mask'],['Mask']
Availability,"lignments.cpp:285:94: warning: ‘querySeq’ may be used uninitialized in this function [-Wmaybe-uninitialized]; printSeqBasedOnAln(result, querySeq, res.qStartPos, backtrace, false);; ^; /galaxy/home/ksahlin/prefix/source/MMseqs2/src/util/convertalignments.cpp:160:19: note: ‘querySeq’ was declared here; Sequence *querySeq;; ^; [ 52%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/convertkb.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/convertmsa.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/convertprofiledb.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/createdb.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/dbtype.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/indexdb.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/offsetalignment.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/createseqfiledb.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/createsubdb.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/createtsv.cpp.o; /galaxy/home/ksahlin/prefix/source/MMseqs2/src/util/createtsv.cpp: In function ‘int createtsv(int, const char**, const Command&)’:; /galaxy/home/ksahlin/prefix/source/MMseqs2/src/util/createtsv.cpp:58:62: error: ‘SIZE_T_MAX’ was not declared in this scope; const size_t targetColumn = (par.targetTsvColumn == 0) ? SIZE_T_MAX : par.targetTsvColumn - 1;; ^; src/CMakeFiles/mmseqs-framework.dir/build.make:1838: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/util/createtsv.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/util/createtsv.cpp.o] Error 1; CMakeFiles/Makefile2:377: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:16552,error,error,16552,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,4,"['Error', 'error']","['Error', 'error']"
Availability,linclust error: alignment step died,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265:9,error,error,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265,1,['error'],['error']
Availability,"llion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 13.45111; OS: Ubuntu 22.04; CPU: Intel(R) Core(TM) i9-13900K; Memory: 64GB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/730:1210,Mask,Mask,1210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730,4,"['Error', 'Mask']","['Error', 'Mask']"
Availability,"lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. indexdb refDB/NR refDB/NR --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 100G -v 3 --threads 48 . Target split mode. Searching through 41 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 920ms; Index table: Masked residues: 61238522; Index table: fill; [=================================================================] 10.84M 1m 25s 193ms; Index statistics; Entries: 3850121923; DB size: 31796 MB; Avg k-mer size: 3.007908; Top 10 k-mers; SGQQRIA	33175; FLLLLLA	30439; ATQAYAV	30261; LAYGSGV	30200; CYGPSYQ	30190; SVAYNPS	30179; ACNSPVY	30160; GSLGSSV	30151; HALLFPS	30146; ISEQEGT	30145; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 858ms; Index table: Masked residues: 61454634; Index table: fill; [=================================================================] 10.85M 1m 22s 65ms; Index statistics; Entries: 3849611059; DB size: 31793 MB; Avg k-mer size: 3.007509; Top 10 k-mers; SGQQRIA	33182; FLLLLLA	29650; ATQAYAV	29520; GLGTVAK	29423; KLKLNKS	29407; LAYGSGV	29406; GSLGSSV	29390; MLYKVMT	29388; AC",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:62127,Mask,Masked,62127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['Mask'],['Masked']
Availability,"lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 1 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 4 . Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 194; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Time for merging to human.idx: 0h 0m 0s 0ms; Time for processing: 0h 0m 11s 156ms; ```. expandaln:; ```; expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 . MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Expansion mode 0; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Max sequence length 65535; Score bias 0; Compositional bias 1; Co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:4276,Mask,Masked,4276,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,1,['Mask'],['Masked']
Availability,"lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta input_script5/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 32ms; Time for merging to qdb: 0h 0m 0s 47ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 226ms; Create directory input_script5/tmp1; search input_script5/qdb uniref30_2302_db input_script5/res input_script5/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000 ; prefilter input_script5/qdb uniref30_2302_db.idx input_script5/tmp1/16308606893082150349/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:96,prof:80 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ## Context; I am trying to do a mmseqs2 colabfold search locally.; However, the local result doesn't match the MSA server results.; To reproduce the server results, I am trying to find out which option the MSA server is actually using. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): bb0a1b3569b9fe115f3bf63e5ba1da234748de23 or 14.7e284; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled or anaconda ; * For self-compiled and Homebre",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:2898,mask,mask,2898,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,2,['mask'],"['mask', 'mask-prob']"
Availability,"lse; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:3263,mask,mask,3263,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,2,['mask'],"['mask', 'mask-lower-case']"
Availability,lse; mmseqs-web-worker_1 | Max reject 	2147483647; mmseqs-web-worker_1 | Max accept 	2147483647; mmseqs-web-worker_1 | Include identical seq. id. 	false; mmseqs-web-worker_1 | Preload mode 	2; mmseqs-web-worker_1 | Pseudo count a 	1; mmseqs-web-worker_1 | Pseudo count b 	1.5; mmseqs-web-worker_1 | Score bias 	0; mmseqs-web-worker_1 | Gap open cost 	11; mmseqs-web-worker_1 | Gap extension cost 	1; mmseqs-web-worker_1 | Threads 	24; mmseqs-web-worker_1 | Compressed 	0; mmseqs-web-worker_1 | Verbosity 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Sensitivity 	5.7; mmseqs-web-worker_1 | K-mer size 	0; mmseqs-web-worker_1 | K-score 	2147483647; mmseqs-web-worker_1 | Alphabet size 	21; mmseqs-web-worker_1 | Max results per query 	300; mmseqs-web-worker_1 | Previous max results per query; mmseqs-web-worker_1 | Split database 	0; mmseqs-web-worker_1 | Split mode 	2; mmseqs-web-worker_1 | Split memory limit 	0; mmseqs-web-worker_1 | Diagonal scoring 	1; mmseqs-web-worker_1 | Exact k-mer matching 	0; mmseqs-web-worker_1 | Mask residues 	1; mmseqs-web-worker_1 | Mask lower case residues 	0; mmseqs-web-worker_1 | Minimum diagonal score 	15; mmseqs-web-worker_1 | Spaced k-mers 	1; mmseqs-web-worker_1 | Spaced k-mer pattern; mmseqs-web-worker_1 | Local temporary path; mmseqs-web-worker_1 | Rescore mode 	0; mmseqs-web-worker_1 | Remove hits by seq. id. and coverage 	false; mmseqs-web-worker_1 | Sort results 	0; mmseqs-web-worker_1 | Global diagonal rescoring 	false; mmseqs-web-worker_1 | Mask profile 	1; mmseqs-web-worker_1 | Profile e-value threshold 	0.001; mmseqs-web-worker_1 | Use global sequence weighting 	false; mmseqs-web-worker_1 | Filter MSA 	1; mmseqs-web-worker_1 | Maximum seq. id. threshold 	0.9; mmseqs-web-worker_1 | Minimum seq. id. 	0; mmseqs-web-worker_1 | Minimum score per column 	-20; mmseqs-web-worker_1 | Minimum coverage 	0; mmseqs-web-worker_1 | Select N most diverse seqs 	1000; mmseqs-web-worker_1 | Omit consensus 	fals,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:2477,Mask,Mask,2477,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,2,['Mask'],['Mask']
Availability,"lternative alignments 0; Coverage threshold 0 ; Coverage mode 0; Max sequence length 65535 ; Compositional bias 1; Compositional bias 1 ; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800 ; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 16; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 1000000; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1 ; Profile E-value threshold 0.001 ; Global sequence weighting false ; Allow deletions false ; Filter MSA 1 ; Use filter only at N seqs 0 ; Maximum seq. id. threshold 0.9 ; Minimum seq. id. 0.0 ; Minimum score per column -20 ; Minimum coverage 0 ; Select N most diverse seqs 1000 ; Pseudo count mode 0 ; Min codons in orf 30 ; Max codons in length 32734 ; Max orf gaps 2147483647 ; Contig start mode 2 ; Contig end mode 2 ; Orf start mode 1 ; Forward frames 1,2,3 ; Reverse frames 1,2,3 ; Translation table 1 ; Translate orf 0 ; Use all table starts false ; Offset of numeric ids 0 ; Create lookup 0 ; Add orf stop false ; Overlap between sequences 0 ; Sequence split mode 1 ; Header split mode 0 ; Chain overlapping alignments 0 ; Merge query 1 ; Search type 0 ; Search iterations 5 ; Start sensitivity 4 ; Search steps 1 ; Prefilter mode 0 ; Exhaustive search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/774:1766,Mask,Mask,1766,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/774,1,['Mask'],['Mask']
Availability,"lue threshold 0.0001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 3; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:2328,Mask,Mask,2328,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,1,['Mask'],['Mask']
Availability,"lurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + STRATEGY=; + hasCommand aria2c; + command -v aria2c; + hasCommand curl; + command -v curl; + STRATEGY=' CURL'; + hasCommand wget; + command -v wget; + STRATEGY=' CURL WGET'; + '[' ' CURL WGET' = '' ']'; + '[' '!' -f COLABDB_READY ']'; + mmseqs createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1; createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabet size 	aa:21,nucl:5; Compositional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583:2258,Mask,Mask,2258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583,2,['Mask'],['Mask']
Availability,"lus300_proteins-13-strains_shortname-group.fa /Users/s/Documents/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1; Create directory /Volumes/s/tmp; easy-cluster /Users/s/Documents/Albatros/short_name-Group/true_plus300_proteins-13-strains_shortname-group.fa /Users/s/Documents/Albatros/protein/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	1; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:1160,Mask,Mask,1160,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['Mask'],['Mask']
Availability,"lust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:4873,mask,mask,4873,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,2,['mask'],"['mask', 'mask-prob']"
Availability,"ly extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:2726,mask,mask,2726,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"m (once again) stuck on the `cstranslate` step. It looks like `cstranslate` doesnt know that `.ffdata` is split into many parts. Is it possible to consolidate them?. Commands (search, flat file generation, then cstranslate):; ```; ~/apps/mmseqs2/git/build/bin/mmseqs search \; euk_screen_split/screenDB_split_0_100 \; uref_euk85_repDB_lfs/uref_euk85_rep \; euk_screen_split_prof/screenDB_split_0_100 \; $MMTEMP \; -a \; --local-tmp /scratch/$USER/$SLURM_JOB_ID \; --split-memory-limit 150000000. ~/apps/mmseqs2/git/build/bin/mmseqs result2msa \; euk_screen_split/screenDB_split_0_100 \; uref_euk85_repDB_lfs/uref_euk85_rep \; euk_screen_split_prof/screenDB_split_0_100 \; euk_screen_split_flat/screenDB_split_0_100 \; --threads 24 \; --compress. ~/apps/hh-suite/git/build/bin/cstranslate \; -i ""euk_screen_split_msa/screenDB_split_0_100"" \; -o ""euk_screen_split_msa/screenDB_split_0_100_cs219"" \; -f -x 0.3 -c 4 -I ca3m; ```. Output of `cstranslate`; ```; - 13:12:38.156 ERROR: In /home/saladi1/apps/hh-suite/git/src/ffindexdatabase.cpp:11: FFindexDatabase:. - 13:12:38.156 ERROR: could not open file 'euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata'. Reading context library for pseudocounts from internal ...; Reading abstract state alphabet from internal ...; ```. Files do exist:. ```; [saladi1@comet-ln3 mmdb]$ ls -1 euk_screen_split_msa/screenDB_split_0_100*; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.0; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.1; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.10; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.11; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.12; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.13; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.14; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.15; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.16; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.17; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/191#issuecomment-491998440:1075,ERROR,ERROR,1075,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/191#issuecomment-491998440,1,['ERROR'],['ERROR']
Availability,"m 0s 29ms; Writing results to: /tmp//2989869989197200687/result; [=================================================================] 514.46K 49s 642ms. Time for merging to result: 0h 0m 0s 988ms; Time for processing: 0h 0m 58s 569ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3 . [====terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; **Error: Convert Alignments died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 1f302134aa1c6c7c4e2b9da272fd26af33860780; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:26336,Error,Error,26336,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['Error'],['Error']
Availability,"m 19s 622ms; Time for processing: 0h 0m 57s 140ms; prefilter tmp/576731152808920235/query_seqs tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12919340; Target db start 1 to 6459670; [==. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 	13.45111; I'm working in a 240 CPU node cluster, my job submission intends to occupy 128 out of 128 cores available per node, each node has a total memory of 512 GB. Regarding the OS, it's running ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:11838,Mask,Masked,11838,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['Mask'],['Masked']
Availability,"m call:; createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	2147483647; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3. Substitution matrices...; Use kmer size 5 and split 1 using Target split mode.; Needed memory (20178976034 byte) of total memory (486687909888 byte); Index table: counting k-mers... ```. ## Context; Trying to generate a profile DB from the file `uniclust30_2018_08_hhm_db` contained the 18-08 release of Uniclust30; `http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz`; I am using `convertprofiledb` and then `createindex`... **NOTE:** I have used the same procedure to generate the profile DB using the HHblits profiles for Pfam 31 downloaded from:; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130:1801,mask,mask,1801,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130,1,['mask'],['mask']
Availability,"m60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(int, const char**, const Command&)':; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp:72:12: warning: unused variable 'splitMode' [-Wunused-variable]; size_t splitMode = pref->getSplitMode();; ^~~~~~~",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:4063,Down,Downloads,4063,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"m62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide; Estimated memory consumption: 1T; Target database size: 26422067 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [> ] 0.00% 1 eta -. tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. system:linux; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 56; On-line CPU(s) list: 0-55; Thread(s) per core: 1; Core(s) per socket: 28; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 106; Model name: Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/697:3031,Error,Error,3031,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697,3,['Error'],['Error']
Availability,mapping is empty sounds like something went wrong while creating this tsv files I mentioned. Could you please write down the steps you took to generate the tax mapping?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872502834:116,down,down,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872502834,1,['down'],['down']
Availability,"mary as of Sat Nov 4 11:38:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. *** Download Progress Summary as of Sat Nov 4 11:39:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. *** Download Progress Summary as of Sat Nov 4 11:40:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. [#64439b 0B/0B CN:1 DL:0B]; 11/04 11:40:29 [ERROR] CUID#7 - Download aborted. URI=https://ftp.wwpdb.org/pub/pdb/derived_data/pdb_seqres.txt.gz; Exception: [AbstractCommand.cc:340] errorCode=2 Timeout.; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/772:2847,ERROR,ERROR,2847,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/772,3,"['Down', 'ERROR', 'error']","['Download', 'ERROR', 'errorCode']"
Availability,"mat alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb query.fasta tmp/5560041094345909208/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 23ms; Time for merging to query: 0h 0m 0s 22ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 105ms; Create directory tmp/5560041094345909208/search_tmp; search tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/result tmp/5560041094345909208/search_tmp --alignment-mode 3 -s 7 --remove-tmp-files 1 . prefilter tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/search_tmp/4325254035791307643/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3 -s 7.0 . Query database size: 14 type: Aminoacid; Estimated memory consumption: 23G; Target database size: 6263739 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 6.26M 33s 798ms; Index table: Masked residues: 16716549; Index table: fill; [=================================================================; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:4141,mask,mask,4141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257,4,"['Mask', 'mask']","['Masked', 'mask', 'mask-lower-case', 'mask-prob']"
Availability,"matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile e-value threshold 0.001; Use global sequence weighting false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 10; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files true; ```. ## Context; I ran 1000 parallel jobs, and there are 20+ failed files while other files have no problems. And for those failed files, there is no e",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/239:2097,Mask,Mask,2097,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239,1,['Mask'],['Mask']
Availability,"max-accept 1 --max-seqs 100 -s 6 --num-iterations 2 --split 0 --split-memory-limit 160G /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/hits_seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_TMP09. MMseqs Version: 	11.e1a1c; E-value threshold 	0.001; Max accept 	1; Threads 	8; Sensitivity 	6; Max results per query 	100; Split database 	0; Split memory limit 	160G; Search iterations 	2. Failed to mmap memory dataSize=321859477504 File=/ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db.idx. Error 12.; ```. Even if I reduce `--split-memory-limit` to 50% or just 20% of the total memory provided for the qsub job, the job still dies with the same error. Maybe I'm not understanding or using `--split-memory-limit` correctly??. I'm using UniRef90 as the db. If I use 336G for the job mem limit, then the `mmseq search` job runs without an error. . ## Steps to Reproduce (for bugs). `mmseqs search` on UniRef90 to provide a large RAM requirement for the job. . ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_2 conda-forge; libstdcxx-ng 9.2.0 hdf63c6",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338:1663,error,error,1663,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338,1,['error'],['error']
Availability,"me $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 32; Compressed 0; Verbosity 3. Query database size: 1480080 type: Aminoacid; Estimated memory consumption: 5G; Target database size: 1480080 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 6; Index table: counting k-mers; [=================================================================] 1.48M 3s 585ms; Index table: Masked residues: 4728698; Index table: fill. ## Your Environment; I'm using the latest release of MMSeqs2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382:2021,Mask,Mask,2021,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382,3,['Mask'],"['Mask', 'Masked']"
Availability,me for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 51ms; mergedbs tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/clu_accepted_plus_wrong tmp//10798751672030653963/clu_accepted tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln_ocol --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//10798751672030653963/clu_accepted_plus_wrong; [=================================================================] 100.00% 214 0s 1ms; Time for merging to clu_accepted_plus_wrong: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; tsv2db tmp//10798751672030653963/missing.single.seqs tmp//10798751672030653963/missing.single.seqs.db --output-dbtype 6 --compressed 0 -v 3. Output database type: Clustering; Time for merging to missing.single.seqs.db: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; mergedbs DB_in tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single tmp//10798751672030653963/clu_accepted_plus_wrong tmp//10798751672030653963/missing.single.seqs.db --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single; [=================================================================] 100.00% 303 0s 0ms; Time for merging to clu_accepted_plus_wrong_plus_single: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; clust DB_in tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single DB_clu --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 8ms; Sort entries; Find missing connections; Found 99 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; *** Error in Alignment format is not supported!; Segmentation fault (core dumped); Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:33423,Error,Error,33423,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,3,"['Error', 'fault']","['Error', 'fault']"
Availability,"me for processing: 0h 0m 0s 277ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu_not_accepted_swap ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned -v 3 . Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 28ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/seq_seeds -v 3 . Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 16ms; prefilter ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned ./mmseqs_output/tmp/5351426679731834765/seq_seeds.merged ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 26229 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34414 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 34.41K 1s 394ms; Index table: Masked residues: 8741; Index table: fill; [=================================================================] 34.41K 1s 378ms; Index statistics; Entries: 6295744; DB size: 524 MB; Avg k-mer size: 0.098371; Top 10 k-mers; DVLDMP 2320; PDVMRM 1368; DRQVAY 1181; PFPEAR 738; MPLGAT 728; MPMGAT 703; GQQVAR 620; ADYTFS 597; LTFLYV 568; VLLALS 518; Time for index table init: 0h 0m 4s 142ms; Process prefiltering step 1 of 1.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:37861,mask,mask,37861,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,2,['mask'],"['mask', 'mask-prob']"
Availability,"memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:3517,mask,mask,3517,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"ments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	56; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	300G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaust",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/594:1774,Mask,Mask,1774,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594,1,['Mask'],['Mask']
Availability,"mer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-sel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3923,mask,mask,3923,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,2,['mask'],"['mask', 'mask-lower-case']"
Availability,mers; Index table k-mer threshold: 114 at k-mer size 6 ; [=================================================================] 2 0s 34ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: counting k-mers; Index table: counting k-mers; [=[=================================================================] 2 0s 21ms; Index table: Masked residues: 0; ================================================================[=================================================================] 2 0s 28ms; [=================================================================] 2 0s 18ms; Index table: Masked residues: 0; ] 2 0s 28ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 22ms; [=================================================================] 2 0s 72ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 138ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: fill; [=================================================================] 2 0s 15ms; [=================================================================] 2 0s 44ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 19ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: fill; [=================================================================] 2 0s 21ms; Index table: fill; Index table: fill; [=================================================================] 2 0,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:35288,Mask,Masked,35288,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,"mes 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 48 --compressed 0 -v 3 -s 7.0 . Query database size: 1270615 type: Profile; Estimated memory consumption: 7G; Target database size: 1270615 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1.27M 6s 285ms; Index table: Masked residues: 39476984; Index table: fill; [=================================================================] 1.27M 5s 428ms; Index statistics; Entries: 522806522; DB size: 3479 MB; Avg k-mer size: 8.168852; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:8548,mask,mask,8548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,2,['mask'],"['mask', 'mask-prob']"
Availability,metaclust50 and metaclust95 was clustered by mmseqs2. It is only available as gzip fasta. I was wondering if it is possible to get hhsuite compatible format of metaclust so that I can use hhblits to search my query against it.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/24:65,avail,available,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/24,1,['avail'],['available']
Availability,"mino acid sequences with 100% coverage. I expect after going through the prefiltering step and alignment step I would see 100% identical hits. ; ## Current Behavior; Instead I found hits with of approximately 93% with reported mismatches of 22 with the same e-values as those with 100% identity. ; ## Steps to Reproduce (for bugs). Attached is the example sequence I found for this bug ([redundant.zip](https://github.com/user-attachments/files/16111570/redundant.zip)). Protein sequence is 303 AA in length with fake names given to the same sequence. I ran the following commands to create the alignment file where I found the issue. . ```; mmseqs createdb redundant.fasta sequenceDB; mmseqs kmermatcher sequenceDB prefilterDB; mmseqs align sequenceDB sequenceDB prefilterDB alignmentDB; mmseqs convertalis sequenceDB sequenceDB alignmentDB alignmentFile; ```. ## MMseqs Output (for bugs); Below is the TSV file of the resulting alignment. As you can see these identical sequences sometimes match at 100% others at 93% with some amount of mismatch and all the same bit-scores etc. ; ![Screenshot from 2024-07-05 10-47-23](https://github.com/soedinglab/MMseqs2/assets/44539035/4d073d41-99e7-4abc-b057-70974cde7ab0). ## Context. I am attempting to replicate some uniref clusters and found this irregularity and chose to isolate and replicate the issue by creating a completely redundant database. This may be a related to #688 . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 6f45232ac8daca14e354ae320a4359056ec524c2. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled from release 15-6f452. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; AMD 3950X with 128GB DDR4 RAM. * Operating system and version:; Ubuntu 22.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/861:1438,redundant,redundant,1438,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/861,1,['redundant'],['redundant']
Availability,"mit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'm working right now:. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; Address sizes: 43 bits physical, 48 bits virtual; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 1; Socket(s): 24; NUMA node(s): 1; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6136 CPU @ 3.00GHz; Stepping: 4; CPU MHz: 2999.999; BogoMIPS: 5999.99; Hypervisor vendor: VMware; Virtualization type: full; L1d cache: 768 KiB; L1i cache: 768 KiB; L2 cache: 24 MiB; L3 cache: 594 MiB; NUMA node0 CPU(s): 0-23. Any help would be really appreciated!. EDIT: I believe I might be doing something wrong. If I understand the output correctly:. 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 medi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/669:5028,fault,fault,5028,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669,2,"['Error', 'fault']","['Error', 'fault']"
Availability,mmary as of Wed Sep 27 14:58:12 2023 *** ; ===============================================================================; [#2b99bd 50GiB/51GiB(98%) CN:5 DL:6.2MiB ETA:1m38s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of Wed Sep 27 14:59:13 2023 *** ; ===============================================================================; [#2b99bd 51GiB/51GiB(99%) CN:5 DL:5.6MiB ETA:46s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. [#2b99bd 51GiB/51GiB(99%) CN:1 DL:6.6MiB] ; 09/27 14:59:56 [NOTICE] Download complete: tmp/3290078511923703767/gtdb.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 2b99bd|OK | 8.9MiB/s|tmp/3290078511923703767/gtdb.tar.gz. Status Legend:; (OK):download completed. 09/27 14:59:57 [NOTICE] Downloading 1 item(s). 09/27 14:59:57 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#8eef3f 51MiB/54MiB(95%) CN:1 DL:4.9MiB] ; 09/27 15:00:10 [NOTICE] Download complete: tmp/3290078511923703767/bac120_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8eef3f|OK | 4.2MiB/s|tmp/3290078511923703767/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 09/27 15:00:10 [NOTICE] Downloading 1 item(s); [#c371fe 880KiB/1.0MiB(81%) CN:1 DL:268KiB] ; 09/27 15:00:15 [NOTICE] Download complete: tmp/3290078511923703767/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; c371fe|OK | 273KiB/s|tmp/3290078511923703767/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; tar2db tmp/3290078511923703767/gtdb.tar.g,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:34511,Down,Downloading,34511,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['Down'],['Downloading']
Availability,mmseq2 taxonomy error if using old database,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221:16,error,error,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221,1,['error'],['error']
Availability,mmseqs cluster error,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/218:15,error,error,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/218,1,['error'],['error']
Availability,mmseqs download will no longer get the most up-to-date nr/nt databases,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/893:7,down,download,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/893,1,['down'],['download']
Availability,mmseqs easy-search with .fasta files dies without a descriptive error message,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/718:64,error,error,64,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/718,1,['error'],['error']
Availability,"mmseqs fails to recover 100% ID hit on first iteration, fails with increased iterations",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/641:16,recover,recover,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/641,1,['recover'],['recover']
Availability,mmseqs search report error and Alignment died when --num-iterations >= 2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:21,error,error,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['error'],['error']
Availability,mmseqs taxonomy Error: orf filter prefilter died / Error: Search died,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/556:16,Error,Error,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556,2,['Error'],['Error']
Availability,"mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:3201,Mask,Mask,3201,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['Mask'],['Mask']
Availability,"mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 3ms; Time for processing: 0h 1m 40s 35ms; extractframes tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 19.83K 0s 62ms; Time for merging to query_seqs_h: 0h 0m 0s 261ms; Time for merging to query_seqs: 0h 1m 40s 122ms; Time for processing: 0h 8m 20s 689ms; prefilter tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 20 --compressed 0 -v 3. Query database size: 39650 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 19825 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [=================================================================] 100.00% 19.83K 0s 193ms; Index table: Masked residues: 3096; Index table: fill; [=================================================================] 100.00% 19.83K 0s 133ms; Index statistics; Entries: 5861616; DB size: 8225 MB; Avg k-mer size: 0.005459; Top 10 k-mers; GTACGTGAATTGAAT	10331; AAACTGGGAGAAGAT	9920; AAGGGGGGGCCGGTT	9235; CGAACGTGGGAACGG	8944; GGGGAAAGGCTGGGG	7283; TCGATTACGGTAACG	6945; GTGCGCAGCGTATCG	6389; CCCGGCTCACGAATG	5538; ACTGCG",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:12587,mask,mask,12587,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,2,['mask'],"['mask', 'mask-prob']"
Availability,"mory's issue since only 8G Ram is used, i use 128 thread and 400G Ram, i believe it's enough for this cluster. The strange thing is -- when i decrease seq num to 7.5 million, it works just fine, i am confused what makes it stuck. ## Current Behavior. mmseqs cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128; cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128 . MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary file",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:1101,Mask,Mask,1101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['Mask'],['Mask']
Availability,"mp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 41ms; filterdb /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 --filter-file /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 757 0s 4ms; Time for merging to pref_filter2: 0h 0m 0s 62ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/linclust.sh: line 68: 88046 Segmentation fault: 11 $RUNNER ""$MMSEQS"" rescorediagonal ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/pref_rescore2"" ${UNGAPPED_ALN_PAR}; Error: Ungapped alignment step died; Error: linclust died; Error: Search died. Running on Mac intel i9 and mmseqs2 14-7e284. Thank you all for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:9915,fault,fault,9915,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,4,"['Error', 'fault']","['Error', 'fault']"
Availability,mp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; [=================================================================] 100.00% 0.02 0s 6ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 3ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 2ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 73ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Using 24 threads.; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Estimated memory consumption 12072 MB; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 2; mmseqs-web-worker_1 | Target db start 1 to 117752; [=========================================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:7232,mask,mask,7232,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"mp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/clu_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:4487,mask,mask,4487,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,2,['mask'],"['mask', 'mask-prob']"
Availability,"mp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:10559,failure,failure,10559,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['failure'],['failure']
Availability,"mpatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Threads 	48; Verbosity 	3. Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; tantan: warning: possible numeric inaccuracy ] 0.00% 1 eta -; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:1788,fault,fault,1788,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323,1,['fault'],['fault']
Availability,"mpfiles//13298481167543164943/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 237 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 237 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 237 0s 39ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 237 0s 9ms; Index statistics; Entries: 1403; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 25ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [=================================================================] 237 0s 19ms. 20.483280 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 707ms; align tmpfiles",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:16000,Mask,Masked,16000,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['Mask'],['Masked']
Availability,"mpirun is a kind of linux command.; But it has two kinds of very different version: OpenMPI , MPICH. A bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: (Open MPI) 1.10.2; No bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: 3.3a2 (After googled this number, I found this is from MPICH). The bug reports:; Corrupt memory, too many entries!. Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted. mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[38952,1],10]; Exit code: 1. Error: Prefilter died. So could you tell me which mpirun is the base of mmseqs ?; Or How to do with this bug?; Thank you very much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/213:780,Error,Error,780,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213,1,['Error'],['Error']
Availability,"mplete steps I used are described in this script. ```; #!/usr/bin/env bash. ## define files and parameters here; ## sequence file name like ""NAME.fa"" use only the base name NAME and the script will add the ""*.fa"" grob; BASE=""subset""; HH_CONTEXT_DATA=""/home/linuxbrew/anaconda3/data/context_data.lib""; HH_LIB=""/home/linuxbrew/anaconda3/data/cs219.lib""; THREADS=4; SENSITIVITY=7.5; IDENTITY=0; COVERAGE=0.8; EVALUE=0.00001. CLU_MODE=1. FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s ${SENSITIVITY} --threads ${THREADS} &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e ${EVALUE} \; --min-seq-id ${IDENTITY} -c ${COVERAGE} --threads ${THREADS} &>> ${FILELOG}; echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} --cluster-mode ${CLU_MODE} --threads ${THREADS} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress --threads ${THREADS} &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; mpirun -np ${THREADS} cstranslate -i ${MMSEQMSA}_ca3m.ffdata -o ${MMSEQMSA}_cs219 \; -A ${HH_LIB} \; -D ${HH_CONTEXT_DATA} \; -x 0.3 -c 4 -I ca3m &>> ${FILELOG}; ```. Quiet the same of the previous one. If I change the last step to; ```; cstranslate -f -i ${MMSEQMSA}_ca3m.ffdata -o ${MMSEQMSA}_cs219 -A ${HH_LIB} -D ${",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081:2155,echo,echo,2155,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081,2,['echo'],['echo']
Availability,"ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/seq_wrong_assigned tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 126 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 126 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 126 0s 1ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 981ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 126; [=================================================================] 100.00% 2 0s 4ms. 0.000000 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 582ms; swapdb tmp//7897776346521331899/seq_wrong_assigned_pref tmp//7897776346521331899/seq_w",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:28475,Mask,Masked,28475,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['Mask'],['Masked']
Availability,ms; mergeclusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newClusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step2 --threads 12 --compressed 0 -v 3. Clustering step 1; [=================================================================] 6 0s 1ms; Clustering step 2; [=================================================================] 6 0s 4ms; Clustering step 3; [=================================================================] 6 0s 8ms; Clustering step 4; [=================================================================] 6 0s 11ms; Write merged clustering; [=================================================================] 6 0s 16ms; Time for merging to newClusters: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 31ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newClusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/clusters_db.0 --preserve-keys. No datafile could be found for /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust!; Error: Dbconcat died; ```. </details>,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:34879,Error,Error,34879,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['Error'],['Error']
Availability,"mseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40; Tmp cluster_tmp folder does not exist or is not a directory.; Create dir cluster_tmp; cluster ../so245_combined_assembly_mmseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40 . MMseqs Version: 	61ca48883b50714be51fc35fc9b77325ffde53fb; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:1381,Mask,Mask,1381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,2,['Mask'],['Mask']
Availability,"mseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; Create directory tmp; createtaxdb nr_rep_seq_db tmp --tax-mapping-file /data/clustered_nr/nr_rep_seq_to_taxid.map -v 3 . MMseqs Version: 	2fad714b525f1975b62c2d2b5aff28274ad57466; NCBI tax dump directory	; Taxonomy mapping file 	/data/clustered_nr/nr_rep_seq_to_taxid.map; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	20; Verbosity 	3. Download taxdump.tar.gz. 02/01 11:29:59 [NOTICE] Downloading 1 item(s); [#b8b044 0B/0B CN:1 DL:0B] ; 02/01 11:30:01 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#b8b044 51MiB/61MiB(84%) CN:1 DL:10MiB] ; 02/01 11:30:08 [NOTICE] Download complete: tmp/taxdump.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; b8b044|OK | 9.1MiB/s|tmp/taxdump.tar.gz. Status Legend:; (OK):download completed.; Loading nodes file ... Done, got 2550743 nodes; Loading merged file ... Done, added 75930 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```; ## Context; I want to search some query sequences locally against a clustered version of the NR database. I downloaded the clustered database and taxonomy files (nr_cluster_taxid_formatted_final.tsv.gz, nr_rep_seq.fasta.gz) from [here](https://osf.io/tejwd/), which was created as per: https://research.arcadiascience.com/pub/resource-nr-clustering/release/3. I then processed the files like so:. ```; gunzip -c nr_cluster_taxid_formatted_final.tsv.gz | cut -f1,2 > nr_rep_seq_to_taxid.map; mmseqs createdb nr_rep_seq.fasta.gz nr_rep_seq_db; ```. After these completed successfully, I tried to create the taxdb as per the above:. ```; mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; ```. But the job was killed. Questions:; * Was it likely killed because",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811:1544,down,download,1544,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811,1,['down'],['download']
Availability,"mseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.9; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:2118,Mask,Mask,2118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,2,['Mask'],['Mask']
Availability,"mum coverage 	0; > Select n most diverse seqs 	1000; > Omit Consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward Frames 	1,2,3; > Reverse Frames 	1,2,3; > Translation Table 	1; > Use all table starts 	false; > Offset of numeric ids 	0; > Add Orf Stop 	false; > Number search iterations 	3; > Start sensitivity 	4; > Search steps 	1; > Run a seq-profile search in slice mode 	false; > Strand selection 	1; > Disk space limit 	0; > Sets the MPI runner 	; > Remove Temporary Files 	false; > ; > Program call:; > prefilter tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 --sub-mat blosum62.out -s 7.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 17702628 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 1 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	65535; > Max. results per query 	17702628; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	true; > Spaced Kmer 	1; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Spaced k-mer pattern 	; > Threads 	15; > Verbosity 	3; > ; > Initialising data structures...; > Using 15 threads.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:2863,mask,mask,2863,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['mask'],['mask']
Availability,"my output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. prefilter ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs.idx temp/9118733262229857306/tmp_hsp1/5064659849361391999/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --s; plit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7. Index version: 16; Generated by: 98c37f3c32b222632ada6011504380e91351276b; ScoreMatrix: VTML80.out; Query database size: 6282 type: Aminoacid; split was set to 5 but at least 8 are required. Please run with default paramerters; Target split mode. Searching through 5 splits; Estimated memory consumption: 138G; Process needs more than 113G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 213522593 type: Aminoacid; Process prefiltering step 1 of 5. k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 5); Query db start 1 to 6282; Target db start 1 to 42795128; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:4496,mask,mask,4496,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"n 1 --dont-shuffle 1 --id-offset 0 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ............Time for merging files: 0h 0m 0s 87ms; Time for merging files: 0h 0m 0s 98ms; Time for merging files: 0h 0m 0s 136ms; Time for merging files: 0h 0m 0s 91ms; Time for processing: 0h 0m 2s 526ms; Program call:; cluster tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_tmp -c 0.9 --cov-mode 1 --threads 2 --min-seq-id 0.9 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:3265,Mask,Mask,3265,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['Mask'],['Mask']
Availability,"n alnDB_reassign -a --threads 24 --comp-bias-corr 0 -e 9007199254740992; mmseqs convertalis protfamDB protfamDB alnDB_reassign aln_to_clustreps.m8; awk '$4<50{print}' aln_to_clustreps.m8 | sort -nk4,4 | head; ```. ```; 45656_3631 1137799_3214 0.950 20 1 0 79 98 423 442 2.607E-05 51; 45656_3631 217204_6534 0.809 21 4 0 79 99 695 715 1.266E-04 49; 45656_3631 2571105_3757 0.761 21 5 0 79 99 695 715 3.266E-04 48; 45656_3631 668_9026 0.761 21 5 0 79 99 714 734 1.155E-03 46; 489_1270 489_2691 1.000 21 0 0 1 21 1 21 3.857E-05 50; 33968_38 33968_2958 0.833 24 4 0 92 115 128 151 2.956E-04 48; 1550024_4392 1608583_1648 0.720 25 7 0 6 30 7 31 2.660E-04 48; 2527978_7844 2527978_861 0.920 25 2 0 1 25 1 25 1.690E-05 52; 45656_3631 191863_3100 0.880 25 3 0 75 99 282 306 8.777E-08 58; 1128665_3036 709876_1980 0.653 26 9 0 43 68 211 236 2.419E-03 45; ```. For example, in the first row of output above, the alignment length is 20 residues for a query sequence that is 100 residues long. My clustering parameters (-c 0.5 --cov-mode 2) should prevent a target sequence w/ alignment length <50 residues from joining this cluster, right?. On a related note, I noted this line in my clustering output log:; ```; Combining cluster mode 0 in combination with coverage mode 2 can produce wrong results.; Please use --cov-mode 2; ```; And found this comment from a previous issue:; `The cluster mode 0 (set cover) requires a bi-directional coverage criteria. If it is used with unidirectional coverage than it pick representative sequences that do not fulfill the clustering criteria anymore.`; `Originally posted by @martin-steinegger in` https://github.com/soedinglab/MMseqs2/issues/218#issuecomment-580978693. It seems like my choice of parameters is at fault, and that I would probably have clusters that more closely obey the criteria if I used cov-mode 0 and cluster-mode 0 (set cover, query AND target coverage), or cov-mode 1 and cluster-mode 2 (CD-hit-like, target coverage). Am I understanding correctly?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/585#issuecomment-1220229129:2165,fault,fault,2165,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/585#issuecomment-1220229129,1,['fault'],['fault']
Availability,"n(R) Gold 6130 CPU @ 2.10GHz; stepping : 4; microcode : 0x2007006; cpu MHz : 2100.000; cache size : 22528 KB; physical id : 0; siblings : 32; core id : 0; cpu cores : 16; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 22; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req pku ospke md_clear flush_l1d arch_capabilities; vmx flags : vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml ept_mode_based_exec tsc_scaling; bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit mmio_stale_data; bogomips : 4200.00; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:. $ free; total used free shared buff/cache available; Mem: 791192240 20105804 63519620 33656 707566816 765066152; Swap: 0 0 0; ```; * Operating system and version:; ```; $ cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=22.04; DISTRIB_CODENAME=jammy; DISTRIB_DESCRIPTION=""Ubuntu 22.04.3 LTS""; PRETTY_NAME=""Ubuntu 22.04.3 LTS""; <truncated>; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:5871,avail,available,5871,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['avail'],['available']
Availability,"n: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:2461,Mask,Mask,2461,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['Mask'],['Mask']
Availability,"nDWCIb3/view?usp=drive_link; 2) Install mmseqs2 v15.6f452; 3) Run:; ```; mmseqs easy-cluster all_sequences.fasta mmseqs_output tmp --cluster-mode 1 --cluster-reassign 1 --threads 24 -c 0.0 --cov-mode 5 --min-seq-id 0.8; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Create directory tmp; easy-cluster /hps/nobackup/iqbal/dander/amira_panRG_pipeline/Escherichia_coli_panRG_c_0.8_l_0_train_AMR_alleles_removed_mmseqs2/all_sequences.fasta mmseqs_output/mmseqs_output tmp --cluster-mode 1 --cluster-reassign 1 --threads 24 -c 0.0 --cov-mode 5 --min-seq-id 0.8 . MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0; Coverage mode 5; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 24; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.8; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:1841,Mask,Mask,1841,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,2,['Mask'],['Mask']
Availability,"nMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:17:18: error: field ‘prev’ has incomplete type ‘Except_Frame_T’; Except_Frame_T prev;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:16:8: note: definition of ‘struct Except_Frame_T’ is not complete until the closing brace; struct Except_Frame_T {; ^; src/CMakeFiles/mmseqs-framework.dir/build.make:542: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:2572,error,error,2572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,1,['error'],['error']
Availability,n_* to tmp/search/aln_*: No such file or directory; > mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; > mv: rename tmp/input_* to tmp/search/input_*: No such file or directory; > Program call:; > tmp/toBeClusteredSeparately tmp/newClusters tmp --sub-mat blosum62.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 --alignment-mode 0 -e 0.001 --min-seq-id 0 --max-rejected 2147483647 --max-accept 2147483647 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	32000; > Profile 	false; > Max. results per query 	300; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id. 	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Target Coverage threshold 	0; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Cluster mode 	0; > Max depth connected component	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Sets the MPI runner 	; > ; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Alphabet size 	3; > Seq. Id Threshold 	0; > Max. sequence length	32000; > Threads 	4; > Verbosity 	3; > ; > Y -> F; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > S -> A; > N -> D; > L -> I; > H -> E; > K -> E; > P -> C; > E -> D; > C -> A; > I -> F; > G ->,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:13403,Mask,Mask,13403,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['Mask'],['Mask']
Availability,"nal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; prefilter geneC.db genes.db tmpC/13630618462368123119/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 56 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	1000; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Threads 	56; Verbosity 	3. Initialising data structures...; Using 56 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 7 and split 3 using Target split mode.; Needed memory (230985702428 byte) of total memory (364787",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:126525,mask,mask,126525,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['mask'],['mask']
Availability,"nal bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:1940,Mask,Mask,1940,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741,1,['Mask'],['Mask']
Availability,"nal bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 40; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Prefilter mode 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:1949,Mask,Mask,1949,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['Mask'],['Mask']
Availability,"name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.99; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:1796,Mask,Mask,1796,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,2,['Mask'],['Mask']
Availability,nce length	32000; Mask Residues 	1; Split DB 	0; Spaced Kmer 	1; Threads 	4; Verbosity 	3. Substitution matrices...; Use kmer size 6 and split 1 using split mode; Index table: counting k-mers...; ........WARNING: Sequence (dbKey=82431) contains only ATGC. It might be a nucleotide sequence.; ..WARNING: Sequence (dbKey=102237) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105125) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105031) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105583) contains only ATGC. It might be a nucleotide sequence. Index table: Masked residues: 239357; Index table: fill...; ..........; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Write 5; Write 0; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. ; Program call:; DB DB resultDB tmp -a -s 7.5 --mask 0 --comp-bias-corr 0 . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	0; Profile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	4; Verbosity 	3; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	100; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	. /,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021:1667,mask,mask,1667,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021,1,['mask'],['mask']
Availability,"nclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/708:2251,Mask,Mask,2251,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708,2,['Mask'],['Mask']
Availability,"nclude-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediagonal 1831648_seqs.mmseqs2db 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:4482,mask,mask-lower-case,4482,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['mask'],['mask-lower-case']
Availability,"nd aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I want to also implement a ""uniclust70"" -> uniclust50 -> uniclust30, which line(s) should I look for? Let me know if I have missed anything.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7554,mask,mask,7554,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,5,"['Error', 'mask']","['Error', 'mask', 'mask-lower-case']"
Availability,"nd empty tmp folders. mmseqs cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Create directory tmp; cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	100",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:1707,Mask,Mask,1707,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,2,['Mask'],['Mask']
Availability,"ndex; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); Error: Offset step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 15.6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): latest 15.6f452 installed by conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 1T memory; * Operating system and version: CentOS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:35422,Error,Error,35422,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['Error'],['Error']
Availability,"neage 1; Compressed 0; Threads 32; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 200G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive sear",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/577:1871,Mask,Mask,1871,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577,2,['Mask'],['Mask']
Availability,"negger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir> [options]. prefilter options 	default 	description [value range]; --comp-bias-corr 	0 	correct for locally biased amino acid composition [0,1] ; --add-self-matches 	false 	artificially add entries of queries with themselves (for clustering); -s 	5.700 	sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive [1.0,7.5]; -k 	0 	k-mer size in the range (0: set automatically to optimum) ; --k-score 	2147483647	k-mer threshold for generating similar-k-mer lists ; --alph-size 	21 	alphabet size [2,21] ; --offset-result 	0 	Offset result list ; --split 	0 	Splits input sets into N equally distributed chunks. The default value sets the best split automatically. createindex can only be used with split 1.; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; --diag-score 	1 	use diagonal score for sorting the prefilter results [0,1] ; --exact-kmer-matching 	0 	only exact k-mer matching [0,1] ; --mask 	1 	0: w/o low complexity masking, 1: with low complexity masking; --min-ungapped-score 	15 	accept only matches with ungapped alignment score above this threshold; --spaced-kmer-mode 	1 	0: use consecutive positions a k-mers; 1: use spaced k-mers ; --spaced-kmer-pattern 	 	User-specified spaced k-mer pattern ; --local-tmp 	 	Path where some of the temporary files will be created ; --disk-space-limit 	0 	Set the maximum disk space (in Mb) to use for reverse profile searches. Defaults (0) to all available disk space in the temp folder. align options 	default 	description [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the alignment: 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungappe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:5426,avail,available,5426,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['avail'],['available']
Availability,"netsurfp seems to not be really open source, so I can't find exactly whats going wrong. . I found this https://github.com/Eryk96/NetSurfP-3.0/blob/main/nsp2/netsurfp2_dev/preprocessing/mmseqs.py, but it looks somewhat different to your error message. I would recommend to make a fake mmseqs script that fixes the issue for netsurfp:; ```; mv /opt/conda/envs/netsurfp/bin/mmseqs /opt/conda/envs/netsurfp/bin/mmseqs_real; cat << 'HERE' > /opt/conda/envs/netsurfp/bin/mmseqs; #!/bin/sh ; export MMSEQS_FORCE_MERGE=1; mmseqs_real ""${@}""; HERE; chmod +x /opt/conda/envs/netsurfp/bin/mmseqs; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197679944:236,error,error,236,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197679944,1,['error'],['error']
Availability,"ng 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	20; Gap extension cost 	3; Zdrop 	40; Threads 	28; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:VTML40.out,aa:VTML40.out; Sensitivity 	12; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	11011101; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	1; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	1; Search steps 	3; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:3444,Mask,Mask,3444,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['Mask'],['Mask']
Availability,"ng results 0h 0m 0s 66ms; Time for merging to clu_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 628ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu_step0 ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step1 -v 3 --subdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 7ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 4 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 10966 type: Aminoacid; Estimated memory consumption: 1010M; Target database size: 10966 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 10.97K 0s 560ms; Index table: Masked residues: 4144; Index table: fill; [=================================================================] 10.97K 0s 667ms; Index statistics; Entries: 1798942; DB size: 498 MB; Avg k-mer size: 0.028108; Top 10 k-mers; IGAALA 68; GPGGTL 58; GIVAPG 43; ALTAGI 42; ALGNGK 34; GLGNGK 32; ELPGVN 31; DLLDLP 29; GQQVAR 24; GEQVAR 23; Time for index table init: 0h 0m 2s 664ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10966; Target db start ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:24198,mask,mask-lower-case,24198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['mask'],['mask-lower-case']
Availability,"ng the discussion at: https://github.com/soedinglab/MMseqs2/issues/373; I have tried the following workflow:. ## Steps to Reproduce; `mmseqs createdb IP.fasta IP_DB/IP_DB`; `mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:1276,mask,mask,1276,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['mask'],['mask']
Availability,"ng ~631GB. The `createdb` was finished well without any weirdo message. ; But below follow the log of `createindex`. ```; Program call:; createindex nr.DB tmp --split-memory-limit 126000000 --threads 15 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using Target split mode.; Needed memory (631391886584 byte) of total memory (129024000000 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size of --split or set it to 0 to automatically optimize target database split.; Write VERSION (0); Write META (1); MaxSeqLength: 65535; KmerSize: 7; CompBiasCorr: 1; AlphabetSize: 21; Masked: 1; Spaced: 1; KmerScore: 0; Sequenc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/161:1436,mask,mask,1436,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161,1,['mask'],['mask']
Availability,"ng); -s 	5.700 	sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive [1.0,7.5]; -k 	0 	k-mer size in the range (0: set automatically to optimum) ; --k-score 	2147483647	k-mer threshold for generating similar-k-mer lists ; --alph-size 	21 	alphabet size [2,21] ; --offset-result 	0 	Offset result list ; --split 	0 	Splits input sets into N equally distributed chunks. The default value sets the best split automatically. createindex can only be used with split 1.; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; --diag-score 	1 	use diagonal score for sorting the prefilter results [0,1] ; --exact-kmer-matching 	0 	only exact k-mer matching [0,1] ; --mask 	1 	0: w/o low complexity masking, 1: with low complexity masking; --min-ungapped-score 	15 	accept only matches with ungapped alignment score above this threshold; --spaced-kmer-mode 	1 	0: use consecutive positions a k-mers; 1: use spaced k-mers ; --spaced-kmer-pattern 	 	User-specified spaced k-mer pattern ; --local-tmp 	 	Path where some of the temporary files will be created ; --disk-space-limit 	0 	Set the maximum disk space (in Mb) to use for reverse profile searches. Defaults (0) to all available disk space in the temp folder. align options 	default 	description [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the alignment: 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; -e 	0.001 	list matches below this E-value [0.0, inf] ; --min-seq-id 	0.000 	list matches above this sequence identity (for clustering) [0.0,1.0]; --seq-id-mode 	0 	0: alignment length 1: shorter, 2: longer sequence ; --alt-ali 	5 	Show up to this many alternative alignments ; -c 	0.000 	list matches above this fraction ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:5592,mask,mask,5592,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,3,['mask'],"['mask', 'masking']"
Availability,"ngth 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:1727,Mask,Mask,1727,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741,1,['Mask'],['Mask']
Availability,"nks again! . Here are my observations: ; * sensitivity hardly matters (with a restrictive evalue, the results are almost identical. With a permissive evalue, there are slightly more hits with an increased sensitivity) -> I'll stick with `s=1` or `s=2` for speed. ; * In fact, the evalue seems to be the restrictive factor (which makes sense, given that the peptides are so small and the database so large). With the default evalue of `0.001`, only 26k out of 630k peptides generate a match (all of them *are* contained in the database at least once). ; * `--comp-bias-corr 0` and `--mask 0` seem to be advantageous. With a permissive evalue of `1e7`, `630467/630487` peptides are found if the both options are set to 0. If they are set to 1, only 594113/630487 peptides are found. On the first sight, the missing peptides do not look particularly low complexity (e.g. `LASLSSVFFFIISFI`, `LKEKLNRNRENSTAT`, `NEGCNSNSSTPRQNT`). ; * With a sensitivity of `s=1`, `--comp-bias-corr 0` and `--mask 0` and an evalue of `1e7` *almost all* perfect matches are found (`630467/630487`). With `s>=2` and otherwise same settings *all* perfect matches are found. . ---. For now, I will, therefore, use the following settings and see how that works out: ; ```bash; --seed-sub-mat VTML40.out ; -s 2 ; --comp-bias-corr 0 --mask 0; --gap-open 16 ; --gap-extend 2 ; --min-length 9 ; --spaced-kmer-pattern 11011101 ; -e 10000000; -k 6 ; ```. ---. Here are the raw counts of matches. `biascorr = 0` implies `mask = 0`. ; ```console; > wc -l * | sort -n ; 1283115 AE009951.2_sens1_biascorr0_eval0.001_mmseqs.tsv ; 1283126 AE009951.2_sens4_biascorr0_eval0.001_mmseqs.tsv; 1283235 AE009951.2_sens2_biascorr0_eval0.001_mmseqs.tsv; 1419374 AE009951.2_sens1_biascorr1_eval0.001_mmseqs.tsv; 1419971 AE009951.2_sens2_biascorr1_eval0.001_mmseqs.tsv; 1420095 AE009951.2_sens4_biascorr1_eval0.001_mmseqs.tsv; 155001100 AE009951.2_sens1_biascorr1_eval10000000_mmseqs.tsv; 198438767 AE009951.2_sens2_biascorr1_eval10000000_mmseqs.tsv;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160:990,mask,mask,990,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160,1,['mask'],['mask']
Availability,"nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:2156,avail,available,2156,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['avail'],['available']
Availability,"nly-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:5974,mask,mask,5974,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,2,['mask'],"['mask', 'mask-prob']"
Availability,"nment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --search-type 0 --num-iterations 1 --start-sens 4 --sens-steps 1 --slice-search 0 --strand 1 --disk-space-limit 0 --force-reuse 0 --remove-tmp-files 0. Program call:; prefilter clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/tmp_hsp1/12507882511714639255/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 200 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7. Initialising data structures...; Using 24 threads.; Substitution matrices...; Substitution matrices...; Could not find precomputed index. Compute index.; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Use kmer size 7 and split 1 using Target split mode.; Needed memory (83288349429 byte) of total memory (973956888576 byte); Target database: /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus(Size: 22555708); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0h 0m 14s 497ms; Query database: clusters_rep-seqs_db_14_30(size=40624); Process prefiltering step 1 of 1. Index table k-mer threshold: 122; Index table:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:5516,mask,mask,5516,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"nome, so they should match perfectly. (Next, I'll run it on genes that might not perfectly match the reference as they can have some differences in the third char of each coddon.). ## Current Behavior; When running a nucleotides search I get ~5K results, most of them are long enough and mapped well.; When running a translated search I get 89K results that are very short and non of them covers the entire gene.; I assume that this is not a bug but rather an intended behavior. What am I missing?. ## Steps to Reproduce (for bugs); the files can be found here:; query - https://files.cs.huji.ac.il/morani/cds_from_genomic.fna; target - https://files.cs.huji.ac.il/morani/GCF_000011885.1_ASM1188v1_genomic.fna ; translated search command -` mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_translated.m8 tmp --search-type 2 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`; regular search command - `mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_nucleotides.m8 tmp --search-type 3 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`. ## MMseqs Output (for bugs); output files:; translated search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_translated.m8; regular search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_nucleotides.m8. ## Context; For a pipeline I'm designing, I'm comparing a few tools that can search for gene in a reference genome. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used : 15.6f452; * Downloaded using conda; * Server info:; NAME=""Debian GNU/Linux""; VERSION_ID=""10""; VERSION=""10 (buster)""; VERSION_CODENAME=buster; ID=debian; HOME_URL=""https://www.debian.org/""; SUPPORT_URL=""https://www.debian.org/support""; BUG_REPORT_URL=""https://bugs.debian.org/"". Thanks! ; Netta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/796:1906,Down,Downloaded,1906,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/796,1,['Down'],['Downloaded']
Availability,"nput --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0. Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 4m 46s 360ms; Create directory All_cohort_tmp//9948387321092861199/clu_tmp; linclust All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/clu_tmp --cluster-mode 2 --threads 56 -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --max-seq-len 10000 --spaced-kmer-mode 0 --remove-tmp-files 1 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by re",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:4198,mask,mask,4198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"nput_step_redundancy: 0h 0m 0s 21ms; Time for processing: 0h 0m 0s 92ms; extractframes tmp/3198441352783276465/clu_tmp/13016959338117486175/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 100.00% 9.78K 0s 59ms ; Time for merging to query_seqs_h: 0h 0m 0s 439ms; Time for merging to query_seqs: 0h 0m 0s 494ms; Time for processing: 0h 0m 2s 117ms; prefilter tmp/3198441352783276465/clu_tmp/13016959338117486175/query_seqs tmp/3198441352783276465/clu_tmp/13016959338117486175/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 5 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3 . Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 1648954 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to cluster a number of gene sequences with an identity of 0.8 and no minimum length for the aligned portion of the genes. ## Your Environment; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:16326,mask,mask,16326,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,2,['mask'],"['mask', 'mask-prob']"
Availability,ns 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Force restart using the latest tmp false; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile.idx tmp/6822607060114486044/pref --sub-mat blosum62.out --seed-sub-mat VTML80.out -s 7.5 -k 6 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 --compressed 0 -v 3 . Initialising data structures...; Using 10 threads.; Substitution matrices...; Substitution matrices...; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1064365435 byte) of total memory (181308646195 byte); Target database: pfam_profile.idx(Size: 17772); Query database type: Aminoacid; Target database type: Profile; Time for init: 0h 4m 18s 41ms; Query database: pbps.neighbors.DB(size=1364570); Process prefiltering step 1 of 1. k-mer similarity threshold: 90; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1364570; Target db start 1 to 17772; ................................................................................................... 1 Mio. sequences processed; ....................................; 0 k-mers per position.; 49304 DB matches per sequence.; 1 Overflows.; 286 sequences passed prefiltering per query sequence.; Median result list size: 300; 11 sequences with 0 size result,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:2858,Mask,Masked,2858,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['Mask'],['Masked']
Availability,"nslate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Linux version 3.10.0-1160.6.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) )",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:3829,Error,Error,3829,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,1,['Error'],['Error']
Availability,"nt length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	1; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	4000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777:1919,Mask,Mask,1919,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777,1,['Mask'],['Mask']
Availability,"nt length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	1; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:6906,Mask,Mask,6906,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['Mask'],['Mask']
Availability,"nt length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	1; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	8; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:2878,Mask,Mask,2878,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['Mask'],['Mask']
Availability,"nucl:5,aa:0. MMseqs Version: ad5837b3444728411e6c90f8c6ba9370f665c443; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:2; Gap extension cost nucl:5,aa:0; Zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:3382,Mask,Mask,3382,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,2,['Mask'],['Mask']
Availability,"nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: g++ version 10.3.0, cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): SLURM system, called; `salloc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:5192,error,error,5192,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,2,"['error', 'fault']","['error', 'fault']"
Availability,"o Reproduce (for bugs). a) Get the input sequences which here I have split into 3 files to fit into Github's upload limits:. [my_seqs.1of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608041/my_seqs.1of3.fasta.gz); [my_seqs.2of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608046/my_seqs.2of3.fasta.gz); [my_seqs.3of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608047/my_seqs.3of3.fasta.gz). b) Consolidate the 3 chunks:. zcat my_seqs.*.fasta.gz > /tmp/my_seqs.fasta. c) Execute and expose the bug:. /opt/mmseqs/bin/mmseqs easy-cluster \; /tmp/my_seqs.fasta /tmp/my_seqs/result /tmp/my_seqs/tmp \; --dbtype 2 --threads 8 --local-tmp /tmp \; --cluster-reassign -s 7.5 --cov-mode 0 -c 0.98 --cluster-mode 2 --min-seq-id 0.99 -v 1. and the bug is shown below. ## MMseqs Output (for bugs). /tmp/my_seqs/tmp/5280277461515018798/clu_tmp/18196956704942050314/nucleotide_clustering.sh: line 48: 4723 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died. ## Context. In my hands, this bug is exposed only when the number of nucleotide sequences is in the order of millions. For small sets (thousands) the execution completes uneventfully. I have tried the precompiled AVX2 version, the SSE4.1 version, I have tried my own compilation of the latest release (15-6f452, Oct 31 2023) and also the latest github version (f6c9880) and other variations. All attempts led to the exact same bug. I have tried also with other three input datasets. All four crash in the same way. All four are in the order of 3 to 4million nucleotide sequences. When I subset the sequences to about 200K sequences, easy-cluster runs to completion. ## Your Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; C",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:1141,fault,fault,1141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,3,"['Error', 'fault']","['Error', 'fault']"
Availability,"o Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:1374,down,download,1374,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['down'],['download']
Availability,"o families_kmer-per-seq80_max-seqs300_2.tsv; Done. ```; Then i obtain :. `grep ""GCF_002025345.1_ASM202534v1_genomic_04754"" families_kmer-per-seq80_max-seqs300_2.tsv`. ```; GCF_002025345.1_ASM202534v1_genomic_04754	GCF_002025345.1_ASM202534v1_genomic_04754; ```; But if i use MMseqs2 by remplacing /tmp/test by /tmp/clu and families_kmer-per-seq80_max-seqs300_2.db by panproteome.db_clu it produces the same result as you. `mmseqs cluster panproteome.db panproteome.db_clu /tmp/clu/ --kmer-per-seq 80 --max-seqs 300`. ```; Program call:; panproteome.db panproteome.db_clu /tmp/clu/ --kmer-per-seq 80 --max-seqs 300 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/clu/ folder does not exist or is not a directory.; Created dir /tmp/clu/; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set clust",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:20483,Mask,Mask,20483,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Mask']
Availability,"o have scrambled the name-sequence associations. Particularly for the JGI sequence IDs (the Uniprot IDs that I checked seemed to be ok). ## Steps to Reproduce (for bugs); input:; ``` bash; wget https://metaclust.mmseqs.com/2018_06/metaclust_nr.fasta.gz; gunzip metaclust_nr.fasta.gz; grep -A1 GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1; ```. output:; ```; >GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1 # 1 # 249 # 1 # ID=3271246_1;partial=11;start_type=Edge;rbs_motif=None;rbs_spacer=None;gc_cont=0.582; HIGGTHYQNHHDFDPYLARVQQGELPVYRALTPSADERLIREFILQLKLGQVSRAYFQKKFGIELCERFRAPFQTLADWGLLA; ```. input:; ``` ; wget http://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar xvf colabfold_envdb_202108.tar.gz; grep GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1 colabfold_envdb_202108_h.tsv; ```. output:; ```; 117269648 GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1; ```. input:; ```; grep 117269648 colabfold_envdb_202108_seq.tsv; ```. output:; ```; 117269648 MAYTLPELSYDYAALEPHVDAETMRIHHDLHHAGYMNKLNAALEKYPEFFEKGIEDLMRNLDKIPEDVRGGVKNNGGGYFNHNLFWESMSPDGGAPEGELKDAIEKSFGSFDEMKEKFSNAAATQFGSGWAWLYKESDGSLGITNTSNQDIPFAEGRTLLMNLDVWEHSYYLKYQNKRPDYIENWWNVLNWKGVAEKFKS; ```. I then go to; ```; https://genome.jgi.doe.gov/portal/pages/dynamicOrganismDownload.jsf?organism=GraSoiStandDraft_25; ```; and download the scaffolds for that sample. I then make a blast database and blast the two sequences; ```; >metaclust; HIGGTHYQNHHDFDPYLARVQQGELPVYRALTPSADERLIREFILQLKLGQVSRAYFQKKFGIELCERFRAPFQTLADWGLLA. >colabfold_envdb_202108; MAYTLPELSYDYAALEPHVDAETMRIHHDLHHAGYMNKLNAALEKYPEFFEKGIEDLMRNLDKIPEDVRGGVKNNGGGYFNHNLFWESMSPDGGAPEGELKDAIEKSFGSFDEMKEKFSNAAATQFGSGWAWLYKESDGSLGITNTSNQDIPFAEGRTLLMNLDVWEHSYYLKYQNKRPDYIENWWNVLNWKGVAEKFKS; ```; against the scaffolds using tblastn.; I get a perfect match on scaffold3271246 for the metaclust sequence, but the best match from the colabfold_envdb_202108 sequence has about 50% identity.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/560:1579,down,download,1579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/560,1,['down'],['download']
Availability,obacteriota; ```. Each job was given 24 threads with 30Gb per thread (720Gb total) - more is possible. ; As there are 24 files and I used 24 threads - I would assume that the error lies somewhere in how the data is put back together?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb sampleX_scaffolds.fasta sampleX_DB; mmseqs taxonomy sampleX_DB /home/mmseqs2/NR/NR sampleX_mmseqs_taxonomy.txt sampleX_temp --tax-lineage 1 --orf-filter 1 --threads 24 --split-memory-limit 500G; ```. ## MMseqs Output (for bugs); [mmseqs.29360353.out.txt](https://github.com/soedinglab/MMseqs2/files/13532025/mmseqs.29360353.out.txt); [mmseqs.29360398.out.txt](https://github.com/soedinglab/MMseqs2/files/13532026/mmseqs.29360398.out.txt). ## Context; Trying to classify metagenomic contigs for kingdom binning. . ## Your Environment; * Git commit used : MMseqs2 Version: 15.6f452; * Which MMseqs version was used: conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; free -m; total used free shared buff/cache available; Mem: 256830 27571 113148 2175 116109 223713; Swap: 131071 9427 121644; ```. ```; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 invpcid_single ssbd mba ibrs ibpb stibp ibrs_enhanced fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local split_lock_detect wbnoinvd dtherm arat pln pts hwp hwp_act_window hwp_pkg_req avx512vbmi umi,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/786:2887,avail,available,2887,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/786,1,['avail'],['available']
Availability,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1841,ERROR,ERROR,1841,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476,6,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"ode 	0; > Alternative alignments 	0; > Coverage threshold 	0; > Coverage mode 	0; > Max sequence length 	65535; > Compositional bias 	1; > Realign hits 	false; > Max reject 	2147483647; > Max accept 	2147483647; > Include identical seq. id. 	false; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	nucl:5,aa:11; > Gap extension cost 	nucl:2,aa:1; > Zdrop 	40; > Threads 	32; > Compressed 	0; > Verbosity 	3; > Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; > Sensitivity 	5.7; > k-mer length 	0; > k-score 	2147483647; > Alphabet size 	nucl:5,aa:21; > Max results per query 	300; > Split database 	0; > Split mode 	2; > Split memory limit 	0; > Diagonal scoring 	true; > Exact k-mer matching 	0; > Mask residues 	1; > Mask lower case residues 	0; > Minimum diagonal score 	15; > Spaced k-mers 	1; > Spaced k-mer pattern 	; > Local temporary path 	; > Rescore mode 	0; > Remove hits by seq. id. and coverage	false; > Sort results 	0; > Mask profile 	1; > Profile E-value threshold 	0.1; > Global sequence weighting 	false; > Allow deletions 	false; > Filter MSA 	1; > Maximum seq. id. threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select N most diverse seqs 	1000; > Omit consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward frames 	1,2,3; > Reverse frames 	1,2,3; > Translation table 	1; > Translate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:1679,Mask,Mask,1679,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,1,['Mask'],['Mask']
Availability,"ode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median re",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:3659,mask,mask,3659,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,2,['mask'],"['mask', 'mask-prob']"
Availability,"ode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 177.98K 0s 684ms; Time for merging to q_orfs_aa_h: 0h 0m 0s 101ms; Time for merging to q_orfs_aa: 0h 0m 0s 105ms; Time for processing: 0h 0m 1s 79ms; prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:4453,mask,mask,4453,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"ode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 3; Start sensitivity 4; Search iterations 3 [5/1999]; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter search_results/qdb db/uniref30_2103_db.idx search_results/tmp/12005814431969335264/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nuc; l:nucleotide.out -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is eno",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:3833,mask,mask,3833,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,2,['mask'],"['mask', 'mask-prob']"
Availability,"ode = pref->getSplitMode();; ^~~~~~~~~; [ 4%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Prefiltering.cpp.o; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:4152:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6032:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6048:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6075:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6103:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6172:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6183:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:7662:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:7899:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:8136:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:9108:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:9699:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:10356:suffix or operands invalid for `movq'; make[2]: *** [src/prefiltering/CMakeFiles/prefiltering.dir/Prefiltering.cpp.o] Error 1; make[1]: *** [src/prefiltering/CMakeFiles/prefiltering.dir/all] Error 2; make: *** [all] Error 2; ```. On the other hand, I cloned the repo again just now and compiled it with `AppleClang 6.1.0.6020053` and it compiled successfully. I'm not sure how, but the command line options for threads, verbosity and min-seq-id are definitely being parsed ...but like you said, it isn't actually using the threads with clang.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:6617,Error,Error,6617,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,3,['Error'],['Error']
Availability,"of_res'), PosixPath('../db_sources/colabfold_envdb_202108_db'), PosixPath('results_700_only_456_fasta_700_5/res_env'), PosixPath('results_700_only_456_fasta_700_5/tmp'), '--threads', '64', '--num-iterations', '3', '--db-load-mode', '2', '-a', '-s', '8', '-e', '0.1', '--max-seqs', '10000']' returned non-zero exit status 1.; ```. ## Steps to Reproduce (for bugs). Put in `input_sequences.fasta` anywhere (it affects single entry fasta and also miltientry fasta) one of those examples:; * `SEGGQDFWL`; * `GSSGLISMPRV`. Setup ColabFold databases from https://github.com/sokrypton/ColabFold/blob/main/setup_databases.sh; Run `colabfold_search input_sequences.fasta /path/to/db_folder search_results`; you will see above crash. **OR**. Go to https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb and try to fold one of the examples, you will see:; > Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Segmentation fault (core dumped); Error: Alignment died; ```. ## Context. If you will extend crashing examples to 12aa then mmseqs will work correctly. Is seems that 12 is some kind of magic barrier in examples I found. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `fcf52600801a73e95fd74068e1bb1afb437d719d` and `edb8223d1ea07385ffe63d4f103af0eb12b2058e`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * `fcf52600801a73e95fd74068e1bb1afb437d719d` compiled from source; * `edb8223d1ea07385ffe63d4f103af0eb12b2058e` downloaded from `https://mmseqs.com/archive/edb8223d1ea07385ffe63d4f103af0eb12b2058e/mmseqs-linux-avx2.tar.gz`; * F",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:3685,error,error,3685,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,1,['error'],['error']
Availability,"ogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs V",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473:1878,mask,mask,1878,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473,2,['mask'],"['mask', 'mask-lower-case']"
Availability,oh the error still exists in the newest version,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/274#issuecomment-586035999:7,error,error,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/274#issuecomment-586035999,1,['error'],['error']
Availability,"ok, in that case, how should I change the commands I used above to download the `pdb_seq`?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2002495113:67,down,download,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2002495113,1,['down'],['download']
Availability,"ok, updated output (ran the gdb as suggested):; ```; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . MMseqs Version: 	f966bfa62a2b52d4821e908ac9e25808d1be0b81; Seed substitution matrix	nucl:nucleotide.out,aa:VTML80.out; K-mer size 	15; Alphabet size 	21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Threads 	48; Verbosity 	3. Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; tantan: warning: possible numeric inaccuracy ] 0.00% 1 eta -; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or d",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:251,mask,mask,251,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323,4,"['Mask', 'mask']","['Mask', 'mask', 'mask-lower-case']"
Availability,"okup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:4407,mask,mask-lower-case,4407,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['mask'],['mask-lower-case']
Availability,"olumn with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 2; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479:1900,Mask,Mask,1900,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479,2,['Mask'],['Mask']
Availability,"ome sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:1357,Mask,Mask,1357,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['Mask'],['Mask']
Availability,"ompressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:3759,mask,mask,3759,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"omz1_200m.fna /d/Databases/Kegg/sram/mmseqs/kegg test.m8 tmp --start-sens 1 --sens-steps 3 -s 6 --strand 2 --max-seqs 1 . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	1; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode	false; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:1088,Mask,Mask,1088,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,2,['Mask'],['Mask']
Availability,"ong time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.9; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:1425,error,error,1425,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['error'],['error']
Availability,"ons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Input database ""/mount-nfs/mydataset/single_train_sequences.fasta"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ```. ## Context; I am trying to extract the pssm for a big fasta file following this steps:; https://github.com/soedinglab/MMseqs2/issues/580; Unfortunately, only the easy-search is working and not the search. If I tried to just use the easy-search I get the same message as above when I try to run the ""result2profile"" script. I also tried to extract a single sequence from my fasta file, and I got the same error.; Here is the single fasta file that I am trying to test with :; ```; >A0A8I6GHU0 tr|A0A8I6GHU0|A0A8I6GHU0_RAT U6 snRNA-associated Sm-like protein LSm1 OS=Rattus norvegicus OX=10116 GN=Lsm1 PE=3 SV=1; HCISSLKLTAFFKRSFLLSPEKHLVLLRDGRTLIGFLRSIDQFANLVLHQTVERIHVGRK; YGDIPRGIFVVRGENVVLLGEIDLEKESDTPLQQVSIEEILEEQRVEQQSRLEAEKLKVQ; ALKDRGLSIPRADTLDEY; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Which MMseqs version was used: latest version from conda.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU support both AVX2/SSE and the server has 450GB of memory; * Operating system and version: Ubuntu 20.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/720:3359,error,error,3359,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720,1,['error'],['error']
Availability,"or bugs). Navigate to `matchy233/MMseqs-playgrond/data` and run the following command to make a profile database:. ```shell; mmseqs createdb query_new.fasta querydb ; mmseqs databases UniProtKB/Swiss-Prot swissprot; mmseqs search querydb swissprot resultdb tmp; mmseqs result2profile querydb swissprot resultdb profiledb; ```; Build `mmseqs-playground` using the following command:. ```; cd <project_root>; mkdir -p build; cd build; cmake ..; make -j 64; ```; And then run `mmseqs-playground printprofie` on `profiledb` created just now. ```shell; build/src/mmseqs-playground printprofile data/profiledb --threads 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```shell; $ build/src/mmseqs-playground printprofile data/tmp/profile --threads 1; printprofile data/tmp/profile --threads 1. MMseqs Version: 34aa577a8f1c4269993fcd755526db4f742c5e86; Threads 1; k-mer length 0; Verbosity 3. Error: sequence length does not match.; Expected equence length: 310; Actual sequence length: 165; ```. ![image](https://user-images.githubusercontent.com/32197833/170818420-30aeb0b4-2f69-462e-ab90-74001fc5a04b.png). ## Context. All the code is available at [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). It is (at least imitating) a MMseqs-derived project. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 34aa577a8f1c4269993fcd755526db4f742c5e86; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detec",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:2728,Error,Error,2728,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,1,['Error'],['Error']
Availability,"or by using the ```easy-cluster``` or ```easy-linclust``` commands, a proper Fasta file should be created with the representative sequences. ## Current Behavior. A Fasta file is created that does not contain sequences but only the sequences IDs : . ```; >sequence_1; sequence_1; >sequence_2; sequence_2; >sequence_3; sequence_3; ```. ## Steps to Reproduce (for bugs). Run ```easy-cluster``` or ```easy-linclust``` on a protein Fasta file. ## MMseqs Output (for bugs). ```; Program call:; easy-cluster final_complete_sequences.fa.gz clusteringDB tmp --cov-mode 1 -c 0.9 --min-seq-id 0.9 --threads 2 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Program call:; createdb final_complete_sequences.fa.gz tmp/3578692915323364718/input --max-seq-len 65535 --dont-split-seq-by-len 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:1268,Mask,Mask,1268,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['Mask'],['Mask']
Availability,"orary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 2.20B 2h 9m 12s 463ms; Process file into 17 parts; Generate k-mers list for 1 split; Generate k-mers list for 2 split; Generate k-mers list for 3 split; Generate k-mers list for 4 split; Generate k-mers list for 5 split; Generate k-mers list for 6 split; Generate k-mers list for 7 split; [=================================================================] 2.20B 32m 39s 205ms; Sort kmer 0h 0m 26s 313ms; Sort by rep. sequence 0h 0m 4s 966ms; Generate k-mers list for 8 split; [=======",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:3889,mask,mask,3889,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,2,['mask'],"['mask', 'mask-prob']"
Availability,order.; ..; Add missing connections.; ..; Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 23030; Size of the alignment database: 23030; Number of clusters: 18417; Program call:; /tmp/clu//9559457551393989073/clu_step0 /tmp/clu//9559457551393989073/input_step_redundancy /tmp/clu//9559457551393989073/input_step1 . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/clu//9559457551393989073/input_step1; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/clu//9559457551393989073/input_step1 /tmp/clu//9559457551393989073/input_step1 /tmp/clu//9559457551393989073/pref_step1 --sub-mat blosum62.out -s 3.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	3.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3. Initialising data structures...; Using 36 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1084772113 byte) of total memory (365681509171 byte); Target database: /tmp/clu//9559457551393989073/input_step1,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:38911,mask,mask,38911,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['mask'],['mask']
Availability,ore 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	100; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	. /...; /...; Program call:; DB DB /.../tmp/pref_7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 0 --diag-score 1 --mask 0 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 -s 7 . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Sub Matrix 	blosum62.out; Sensitivity 	7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Profile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	0; Diagonal Scoring 	1; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	4; Verbosity 	3. Initialising data structures...; Using 4 threads. Use index DB.sk6; Index version: 774909490; KmerSize: 6; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: DB(size=105589); Target database: DB(size=105589); Use kmer size 6 and split 1 using split mode 0; Needed memory (1603741184 byte) of total memory (8340369408 byte); Substitution matrices...; Time for init: 0 h 0 m 1s. Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 6; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Cache database ; Read IndexTable ... Done; k-mer similarity threshold: 77; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 105589; Target db start 0 to 105589; ........WARNING: Sequence (dbKey=82431) contains only ATGC. It might be a nucleotide sequence.; ..,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021:3329,Mask,Mask,3329,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021,1,['Mask'],['Mask']
Availability,"orr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:3924,mask,mask,3924,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,2,['mask'],"['mask', 'mask-prob']"
Availability,"ory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3. Initialising data structures...; Using 2 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1160320116 byte) of total memory (1886452531 byte); Target database: tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy(Size: 103377); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0h 0m 0s 207ms; Query database: tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy(size=103377); Process prefiltering step 1 of 1. Index table k-mer threshold: 130; Index table: counting k-mers...; ..........; Index table: Masked residues: 402243; Index table: fill...; ..........; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 2960353; DB Size: 529762118 (byte); Avg Kmer Size: 0.0462555; Top 10 Kmers; 	DFGTPF		324; 	PCTMEI		202; 	DGGHTL		201; 	PSTSWQ		201; 	SPYKSW		201; 	YTSSHY		200; 	GYWLHW		154; 	HWVPRY		134; 	DVFGIW		107; 	GYWLRW		99; Min Kmer Size: 0; Empty list: 61816461. Time for index table init: 0h 0m 5s 492ms; 	k-mers per position = 1.85326, k-mer match probability: 1.27642e-13; k-mer similarity threshold: 130; k-mer match probability: 1.27642e-13. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 103377; Target db start 1 to 103377; ..........; 1 k-mers per position.; 128 DB matches per sequence.; 0 Overflows.; 5 sequences passed prefiltering per query sequence.; Median result list size: 3; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 0m 6s 697ms; Time for merging files: 0h 0m 0s 263ms; Time for process",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:18954,Mask,Masked,18954,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['Mask'],['Masked']
Availability,"ory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb SRC.fasta /export/scratch/SRC-50/8871099322051866948/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [2022891328] 19m 44s 787ms; Time for merging to input_h: 0h 15m 26s 958ms; Time for merging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:1812,Mask,Mask,1812,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,2,['Mask'],['Mask']
Availability,"ory-limit 70G --split-mode 2 --split 4 --compressed 1. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Create directory tmp; cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:1757,Mask,Mask,1757,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['Mask'],['Mask']
Availability,"ositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove tempora",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:1826,Mask,Mask,1826,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['Mask'],['Mask']
Availability,"ositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 1 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 4 . Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 194; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEX",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:3699,mask,mask-lower-case,3699,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,1,['mask'],['mask-lower-case']
Availability,"osity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	100G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sens",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:92680,Mask,Mask,92680,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,2,['Mask'],['Mask']
Availability,"otation; ```; createdb input.fasta input_script7/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 31ms; Time for merging to qdb: 0h 0m 0s 31ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 145ms; Create directory input_script7/tmp1; search input_script7/qdb uniref30_2302_db input_script7/res input_script7/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000 ; prefilter input_script7/qdb uniref30_2302_db.idx input_script7/tmp1/1006494840762416450/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta input_script5/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 32ms; Time for merging to qdb: 0h 0m 0s 47ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 226ms; Create directory input_script5/tmp1; search input_script5/qdb uniref30_2302_db input_script5/res input_script5/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000 ; prefilter input_script5/qdb uniref30_2302_db.idx input_script5/tmp1/16308606893082150349/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:96,prof:80 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:1781,mask,mask-lower-case,1781,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,1,['mask'],['mask-lower-case']
Availability,out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Exten,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3478,Down,Downloads,3478,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefilterin,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3572,Down,Downloads,3572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Km,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3666,Down,Downloads,3666,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3760,Down,Downloads,3760,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3854,Down,Downloads,3854,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(int, const char**, const Command&)':; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp:72:12: warning: unused variable 'splitMode' [-Wunused-variable]; size_t splitMode = pref->getSplitMode();; ^~~~~~~~~; [ 4%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Prefiltering.cpp.o; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:4152:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6032:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6048:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6075:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6103:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6172:suffix or operands invalid for `movq'; /var/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:4795,Down,Downloads,4795,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + STRATEGY=; + hasCommand aria2c; + command -v aria2c; + hasCommand curl; + command -v curl; + STRATEGY=' CURL'; + hasCommand wget; + command -v wget; + STRATEGY=' CURL WGET'; + '[' ' CURL WGET' = '' ']'; + '[' '!' -f COLABDB_READY ']'; + mmseqs createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1; createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabet size 	aa:21,nucl:5; Compositional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabet size 	aa:21,nucl:5; Compositional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Ma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583:2307,Mask,Mask,2307,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583,1,['Mask'],['Mask']
Availability,"output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist """" --tax-lineage 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. **Full output and error attached below**. ```tmp/10336174962539687461/taxonomy_tmp/11653652317365833767/tmp_taxonomy/6923600097584969791/taxonomy.sh: line 58: 78000 Segmentation fault (core dumped) ""$MMSEQS"" lca ""${TARGET}"" ""${LCAIN}"" ""${RESULTS}"" ${LCA_PAR}```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **14.7e284**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; **40 cpus, 700gb RAM**; * Operating system and version:; * Operating System: **CentOS Linux 7 (Core)**; * Kernel: **Linux 3.10.0-1160.62.1.el7.x86_64**. [job-mmseqs_easytax_050523_error.txt](https://github.com/soedinglab/MMseqs2/files/11426489/job-mmseqs_easytax_050523_error.txt); [job-mmseqs_easytax_050523_out.txt](https://github.com/soedinglab/MMseqs2/files/11426490/job-mmseqs_e",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:3344,fault,fault,3344,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['fault'],['fault']
Availability,ov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 26 --compressed 0 -v 3 -s 0.5 . Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 11 sequences passed prefiltering per query sequence; 1 median result list length; 275899073 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 16m 3s 814ms; Time for merging to pref_0_tmp_0_tmp: 0h 26m 19s 322ms; Process prefiltering step 2 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 18m 46s 598ms; Index table: Masked residues: 338371908; Index table: fill; [===========================Terminated; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:32820,Mask,Masked,32820,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591,1,['Mask'],['Masked']
Availability,"ownloading NR database using ```mmseqs databases NR NR tmp```; ## Current Behavior; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/668:1192,down,download,1192,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668,2,"['Error', 'down']","['Error', 'download']"
Availability,"p --cluster-mode 2 -e 0.001 --min-seq-id 0.5 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --split-memory-limit 500G --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:4000,mask,mask,4000,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"p pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Create directory tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1; search BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/first tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1 --alignment-mode 1 -e 0.0001 --max-rejected 5 --max-accept 30 --threads 36 -s 3 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1. prefilter BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1/10054445979770264072/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 36 --compressed 0 -v 3 -s 3.0. Query database size: 355695 type: Aminoacid; Estimated memory consumption: 2T; Target database size: 532633656 type: Aminoacid; Index table k-mer threshold: 152 at k-mer size 7; Index table: counting k-mers. ```. Thank you.; Best,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:4368,mask,mask,4368,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,3,['mask'],"['mask', 'mask-lower-case', 'mask-prob']"
Availability,"p, it would take 4000 k-mers if I set --kmer-per-seq-scale 0.2? My sequences have an average length of about 20kbp, so theoretically, --kmer-per-seq-scale 0.2 might yield results similar to or better than --kmer-per-seq 2000? However, when I tested --kmer-per-seq-scale with values of 0.2, 1, and 20, I found that the number of clusters did not significantly differ from running Linclust with default parameter. The number of clusters was roughly twice as many as when using --kmer-per-seq 2000. As an example, I examined the largest cluster (containing 19,000 sequences) obtained using --kmer-per-seq 2000 . I inspected the length distribution of sequences within this cluster. The cumulative total sequences counts of the top four sequence lengths was 14,000, as follows [seq count, seq length]: ; 1274 4413.0, ; 2985 4411.0, ; 3397 5350.0, ; 7109 4409.0. ; I think most of these sequences should be highly similar, indicating that this clustering is relatively accurate.; I took some individual examples from this cluster to examine the results of --kmer-per-seq-scale and found that some nearly identical sequences (same length, 99% identity) were not clustered together when using --kmer-per-seq-scale. Meanwhile the largest cluster of --kmer-per-seq-scale 1 contains only 6341 seqs.; As a side note, I set the threshold to 95% identity and 85% coverage. . Overall, from my test results, I'm uncertain if there are issues with --kmer-per-seq-scale. Setting it doesn't seem to increase clustering sensitivity as expected. However, perhaps this is because I don't fully understand its principle, so I'm hoping to consult you on this matter. > There is not that much downside to increasing the kmer-per-seq to 2000. It will slow down linclust somewhat, but for only 2M entries it shouldn't really matter.; > ; > You might want to use `--kmer-per-seq-scale` though. This parameter adds additional k-mers linearly based on the sequence length. By default, this is set to 0.2 for nucleotide sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917:1765,down,downside,1765,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917,2,['down'],"['down', 'downside']"
Availability,"p/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28ms; Time for processing: 0h 0m 1s 808ms; rescorediagonal tmp/3198441352783276465/input tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.5 -a 0 --cov-mode 5 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compres",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:6496,mask,mask-lower-case,6496,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['mask'],['mask-lower-case']
Availability,"p/9045538653068861586/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 ; > ; > [=================================================================] 100.00% 2.67M 0s 919ms ; > Time for merging to query_seqs_split_h: 0h 0m 0s 832ms; > Time for merging to query_seqs_split: 0h 0m 0s 878ms; > Time for processing: 0h 0m 3s 919ms; > prefilter tmp/7701176895607249840/search_tmp/9045538653068861586/query_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/target_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 2670930 type: Nucleotide; > Target split mode. Searching through 18 splits; > Estimated memory consumption: 326G; > Target database size: 100684280 type: Nucleotide; > Process prefiltering step 1 of 18; > ; > Index table k-mer threshold: 0 at k-mer size 15 ; > Index table: counting k-mers; > Segmentation fault (core dumped) ] 0.00% 1 eta -; > Error: Prefilter died; > Error: Search step died; > Error: Search died; > . ## Context. Hi I am trying to run an nucleotide-nucleotide search in mmseq2 with a custom database. This error does not occur with a different, smaller nucleotide database. Thank you very much for this amazing tool and all your hard work. ## Your Environment. I am us",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:6800,mask,mask,6800,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,2,['mask'],"['mask', 'mask-prob']"
Availability,"p/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15288254 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 75ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 6s 52ms; Hard disk might not have enough free space (1T left).The prefilter result might need up to 40T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15288254; Target db start 1 to 69220; [=================================================================] 15.29M 16m 57s 724ms. 0.965255 k-mers per position; 6486 DB matches per sequence; 5917 overflows; 0 queries produce too many hits (truncated result); 816 sequences passed prefiltering per query sequence; 0 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:12606,Mask,Masked,12606,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,1,['Mask'],['Masked']
Availability,"p/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 23551830 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 211ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 6s 967ms; Hard disk might not have enough free space (622G left).The prefilter result might need up to 62T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 23551830; Target db start 1 to 69220; [=================================================================] 23.55M 26m 33s 986ms. 0.965963 k-mers per position; 6331 DB matches per sequence; 9167 overflows; 0 queries produce too many hits (truncated result); 784 sequences passed prefiltering per query sequence;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:19261,Mask,Masked,19261,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,1,['Mask'],['Masked']
Availability,"p2 ./mmseqs_output/tmp/5351426679731834765/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 8338 type: Aminoacid; Estimated memory consumption: 1003M; Target database size: 8338 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 8.34K 0s 514ms; Index table: Masked residues: 3074; Index table: fill; [=================================================================] 8.34K 0s 572ms; Index statistics; Entries: 1408015; DB size: 496 MB; Avg k-mer size: 0.022000; Top 10 k-mers; GPGGTL 37; GLGNGK 26; ALGNGK 23; DLLDLP 21; FDDTDS 20; NGGSLK 17; DLLDMP 17; DVLDMP 17; GEQVAR 16; FDDTDT 16; Time for index table init: 0h 0m 2s 591ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8338; Target db start 1 to 8338; [=================================================================] 8.34K 26s 907ms. 903.365687 k-mers per position; 4641 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 88 sequences passed prefiltering per query sequence; 76 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 36ms; Time for processing: 0h 0m 32s 520ms; align ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:29305,Mask,Masked,29305,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['Mask'],['Masked']
Availability,"parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide sear",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:2597,Mask,Mask,2597,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,2,['Mask'],['Mask']
Availability,"pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` error did not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## con",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:4819,Error,Error,4819,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['Error'],['Error']
Availability,"pe 1`; 2. `mmseqs createindex mydb/mmdb mydb/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0`. And here's the output of the 2nd command:. ```; Create dir eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp; createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatibl",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:1799,Mask,Mask,1799,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526,2,['Mask'],['Mask']
Availability,pe: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer th,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:30271,Mask,Masked,30271,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,"peed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 31 100 31 0 0 41 0 --:--:-- --:--:-- --:--:-- 41; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 51.3G 100 51.3G 0 0 1565k 0 9:33:26 9:33:26 --:--:-- 2662k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 54.4M 100 54.4M 0 0 1374k 0 0:00:40 0:00:40 --:--:-- 939k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 1080k 100 1080k 0 0 489k 0 0:00:02 0:00:02 --:--:-- 491k; tar2db tmp/14668141768776664068/gtdb.tar.gz tmp/14668141768776664068/tardb --tar-include faa.gz$ --threads 8 -v 3. Time for merging to tardb: 0h 0m 0s 28ms; Time for merging to tardb.lookup: 0h 0m 0s 13ms; Time for processing: 0h 7m 32s 203ms; createdb tmp/14668141768776664068/tardb outpath/GTDB --compressed 0 -v 3. Converting sequences; Cannot open outpath/GTDB.source for writing; Error: createdb died. ## Context; Please note that I get this error on _both_ my local computer and on my server; using different methods of installation. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 2fad714b525f1975b62c2d2b5aff28274ad57466 (local MacOSX computer) as well as MMseqs2 Version: 15.6f452 (on Linux server); * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Installed with both conda (linux server) and using the MacOSX binary available on the mmseqs download page (local computer); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): for Linux server: supports AVX2, 1TB RAM. for local MacOSX computer: supports AVX2 (I think?), 16 GB RAM; * ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/809:2038,Error,Error,2038,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/809,1,['Error'],['Error']
Availability,"pen cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	92G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:3340,mask,mask-lower-case,3340,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['mask'],['mask-lower-case']
Availability,"perf is not available on the high mem node on which I'm running the real workload, but is oddly available on the login node. Would that output be helpful?. ```; + 51.95% 32.34% mmseqs_perf libc-2.17.so [.] __memcpy_ssse3_back; + 45.94% 29.54% mmseqs_perf mmseqs [.] QueryMatcher::match; + 35.99% 35.99% mmseqs_perf [unknown] [k] 0xffffffffa55bb7c0; 0.63% 0.58% mmseqs_perf mmseqs [.] KmerGenerator::calculateArrayProduct; + 0.56% 0.56% mmseqs_perf mmseqs [.] memcpy@plt; 0.22% 0.22% mmseqs_perf ld-2.17.so [.] do_lookup_x; 0.20% 0.20% mmseqs_perf libc-2.17.so [.] __memset_sse2; 0.20% 0.00% mmseqs_perf [unknown] [.] 0x0000000000000030; 0.15% 0.00% mmseqs_perf [unknown] [.] 0000000000000000; 0.14% 0.14% mmseqs_perf libc-2.17.so [.] _IO_file_underflow@@GLIBC_2.2.5; 0.13% 0.13% mmseqs_perf ld-2.17.so [.] _dl_lookup_symbol_x; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] _dl_sysdep_start; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] dl_main; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] _dl_relocate_object; 0.06% 0.06% mmseqs_perf [unknown] [k] 0xffffffffa55c6280; ```. [perf.data.txt](https://github.com/soedinglab/MMseqs2/files/10458945/perf.data.txt). I will see if I can get perf on the real node if needed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397300351:12,avail,available,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397300351,2,['avail'],['available']
Availability,"performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` error did not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:4999,Error,Error,4999,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,2,"['Error', 'error']","['Error', 'error']"
Availability,persisten segmentation fault error across different contig datasets,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/632:23,fault,fault,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632,2,"['error', 'fault']","['error', 'fault']"
Availability,persistent result2flat died segmentation fault in many fastas,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/617:41,fault,fault,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617,1,['fault'],['fault']
Availability,"plicate entries...; Index table init done. DB statistic; Entries: 293010879; DB Size: 1790738082 (byte); Avg Kmer Size: 71.7443; Top 10 Kmers; KKKKK 1557; KKKNK 1519; KKKKN 1416; NNNNN 1398; KKKNN 1359; KNKNN 1349; NKNNN 1320; KNNNN 1306; KKNKN 1210; NNINN 1188; Min Kmer Size: 0; Empty list: 884115. Time for index table init: 0h 1m 32s 319ms; Query database type: Aminoacid; Target database type: Profile; Time for init: 0h 1m 32s 393ms; Query database: query_dbs/1000562_0(size=1370); Process prefiltering step 1 of 1. k-mer similarity threshold: 90; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1370; Target db start 1 to 8162. 0 k-mers per position.; 32539 DB matches per sequence.; 0 Overflows.; 160 sequences passed prefiltering per query sequence.; Median result list size: 149; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 0m 0s 776ms; Time for merging files: 0h 0m 0s 9ms; Could not move result tmp/14349913440832127037/pref_tmp_0 to final location tmp/14349913440832127037/pref!; --------------------------------------------------------------------------; mpirun has exited due to process rank 0 with PID 134942 on; node node218.cluster exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", but exited without calling ""finalize"".; By rule, all processes that call ""init"" MUST call ""finalize"" prior to; exiting or it will be considered an ""abnormal termination"". This may have caused other processes in the application to be; terminated by signals sent by mpirun (as reported here).; --------------------------------------------------------------------------; Error: Prefilter died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521:6245,Error,Error,6245,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521,1,['Error'],['Error']
Availability,"ponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; *** Download Progress Summary as of Wed Sep 27 13:22:54 2023 *** ; ===============================================================================; [#2b99bd 207MiB/51GiB(0%) CN:5 DL:10MiB ETA:1h24m8s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of Wed Sep 27 13:23:54 2023 *** ; ===============================================================================; [#2b99bd 723MiB/51GiB(1%) CN:5 DL:8.7MiB ETA:1h38m40s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of Wed Sep 27 13:24:56 2023 *** ; ===============================================================================; [#2b99bd 1.1GiB/51GiB(2%) CN:5 DL:6.5MiB ETA:2h11m31s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of Wed Sep 27 13:25:58 2023 *** ; =====================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:2878,Down,Download,2878,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['Down'],['Download']
Availability,"positional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 1 --split-memory-limit 0 -v 3 --threads 56 . Estimated memory consumption: 780G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================tmp2/7152678087979496025/createindex.sh: line 56: 37309 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Your En",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583:4278,mask,mask,4278,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583,2,['mask'],"['mask', 'mask-prob']"
Availability,"positional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	15; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. splitsequence chrY tmp/4145379299737466142/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to nucl_spl",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:1433,Mask,Mask,1433,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082,2,['Mask'],['Mask']
Availability,"pp:319; 319	 foregroundBeg[i] = (b * b2fProbs[i] + f * f2f0) * lrRow[(int)seqPtr[-i-1]];; (gdb) bt; #0 0x0000555555a8d40b in tantan::Tantan::calcForwardTransitionAndEmissionProbs (this=0x7ffffffbaaa0); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:319; #1 0x0000555555a8d845 in tantan::Tantan::calcRepeatProbs (this=0x7ffffffbaaa0, letterProbs=0x555556582704); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:373; #2 0x0000555555a8bf6b in tantan::getProbabilities (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, probabilities=0x555556582700); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:470; #3 0x0000555555a8be5f in tantan::maskSequences (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, minMaskProb=0.89999997615814209,; maskTable=0x7ffffffdc530 '\024' <repeats 200 times>...) at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:449; #4 0x000055555597de7b in PSSMMasker::mask (this=0x7ffffffbaca0, centerSequence=..., maskProb=0.899999976, pssmRes=...); at /mnt/disks/kc-ssd/MMseqs2/src/alignment/PSSMMasker.h:25; #5 0x00005555559f916b in result2profile () at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:262; #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86b7 in result2profile (argc=54, argv=0x7fffffffe138, command=..., returnAlnRes=false); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:140; #8 0x00005555559f885c in result2profile (argc=54, argv=0x7ffff",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961:1176,mask,maskSequences,1176,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961,1,['mask'],['maskSequences']
Availability,"pped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:4678,mask,mask,4678,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"prefilter ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --k-score 2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 5.7. Query database size: 25293 type: Aminoacid; Estimated memory consumption: 18G; Target database size: 3570076 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 3.57M 8s 444ms; Index table: Masked residues: 11969832; Index table: fill; [=================================================================] 100.00% 3.57M 8s 228ms; Index statistics; Entries: 1027253274; DB size: 6366 MB; Avg k-mer size: 16.050832; Top 10 k-mers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:3801,Mask,Masked,3801,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['Mask'],['Masked']
Availability,prefilter step died when running easy-search: Segmentation fault (core dumped),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:59,fault,fault,59,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,1,['fault'],['fault']
Availability,"pressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=================================================================] 1.08K 0s 508ms; Time for merging to aln_0: 0h 0m 0s 8ms; 19048 alignments calculated; 15817 sequence pairs passed the thresholds (0.830376 of overall calculated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . M",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:17188,mask,mask-profile,17188,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,1,['mask'],['mask-profile']
Availability,"prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Database size: 51992 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 51.99K 0s 346ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 62ms; Sort by rep. sequence 0h 0m 0s 19ms; Time for fill: 0h 0m 0s 27ms; Time for merging to pref: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 567ms; rescorediagonal shrimpDB shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref tmp97/17949317426677965256/linclust/6279588666755106708/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:5001,mask,mask,5001,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,2,['mask'],"['mask', 'mask-prob']"
Availability,"prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1 . MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower ca",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:1812,Mask,Mask,1812,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,1,['Mask'],['Mask']
Availability,"ps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # or mmseqs createdb genome.ffn collection_db; mmseqs cluster collection_db collection_clu temp; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	8; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. **It is unclear from the input if a translated or nucleotide se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/507:1961,Mask,Mask,1961,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507,2,['Mask'],['Mask']
Availability,"pt 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	2; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:2079,Mask,Mask,2079,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['Mask'],['Mask']
Availability,"put_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 5ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 908ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 24ms. 15.668402 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 591ms; align tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//78977763",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:16234,Mask,Masked,16234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['Mask'],['Masked']
Availability,"put_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 628ms; extractframes tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 6.46M 24s 391ms; Time for merging to query_seqs_h: 0h 0m 3s 920ms; Time for merging to query_seqs: 0h 0m 19s 622ms; Time for processing: 0h 0m 57s 140ms; prefilter tmp/576731152808920235/query_seqs tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:11365,mask,mask,11365,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"qs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	5; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	1; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:1925,Mask,Mask,1925,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['Mask'],['Mask']
Availability,"qs Version: da6c1a5a7be5d82719f796b85ce9cbacf9f2162c-MPI; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 8; Compressed 0; Verbosity 3; Sensitivity 5.7; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner mpirun --pernode; Force restart using the latest tmp false; Remove Temporary Files false. [node218.cluster:134942] mca: base: component_find: unable to open /usr/mpi/gcc/openmpi-1.6.5/lib/openmpi/mca_mtl_psm: libpsm_infinipath.so.1: cannot open shared objec",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521:1561,Mask,Mask,1561,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521,1,['Mask'],['Mask']
Availability,"qs search profileDB1 profileDB1_consensus resultDB2 tmp --add-self-matches -a # Add your cluster criteria here; # cluster the results ; mmseqs clust profileDB1 resultDB2 profileDB1_clu; ```. I can run `mmseqs search` without issue but when I run `mmseqs clust` I get the following error:. ```; Create directory /final/db_cluster/low_1/Genus02938/Genus02938_DB; cluster /final/db_profile/low_1/Genus02938/Genus02938_DB /final/db_profile_vs_consensus/low_1/Genus02938/Genus02938_DB /final/db_cluster/low_1/Genus02938/Genus02938_DB. MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 144; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name; Clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/844:1350,Mask,Mask,1350,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/844,2,['Mask'],['Mask']
Availability,"qs_h by mergeResults: 0h 0m 0s 0ms; Time for merging into tmp/274686171214568767/query_seqs by mergeResults: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; splitsequence tmp/274686171214568767/query_seqs tmp/274686171214568767/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 8 --compressed 0 -v 3 ; ; Time for processing: 0h 0m 0s 1ms; prefilter tmp/274686171214568767/query_seqs_split tmp/274686171214568767/target_seqs_split tmp/274686171214568767/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 4G -c 0.99 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 2.0 ; ; Query database size: 20 type: Nucleotide; Error: Prefilter died; Error: Search step died. Command error:; Cannot fit databased into 4G. Please use a computer with more main memory.; ```. fasta file content is:; ```; >1; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >2; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >3; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATTTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >4; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATGTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >5; CCATGCGTAGAGCTAACGAGCCAGCGGAAAGCGTGAGGCGCTTTTAAGCATGGCGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTAGGTTCG; >6; CCATGCGTAGAGCTTACGAGCCAGCGGAAAGCGTGAGGCGCTATTAAGCATGGGGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTACGTTCG; >7; ATCTCGTCCCGAGAATTCTAAGCCTCAACATCTATGAGTTATGAGGTTAGCCGAAAAAGCACGTGGTGGCGCCCACCGACTGTTCCCAGACTGTAGCTCT; >8; TTGTTCTGTCAAGGCCCGACCTTCATCGCGGCCGATTCCTTCTGCGGACCATACCGTCCTGATACTTTGGTCATGTTTCC",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/253:3443,Error,Error,3443,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253,2,['Error'],['Error']
Availability,"qs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 250G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 . Query database size: 1298472 type: Nucleotide; Target split mode. Searching through 12 splits; Estimated memory consumption: 216G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.80M 6m 27s 363ms; Index table: Masked residues: 517008537; Index table: fill; [=================================================================] 7.80M 11m 24s 325ms; Index statistics; Entries: 27958919735; DB size: 168174 MB; Avg k-mer size: 26.038773; Top 10 k-mers; GGGGCAGCGTGATTT	319478; TAATCGTGCAGCGGG	292128; GTGCGCAGCGTATCG	276641; CTCTCGGGGGCGTGG	257406; ACAGTTAGTATGTGT	233646; TCCAGGGAGCATGGG	230906; AGTGGAATTTCATGG	224146; TCGCGCTCTGTAGTG	209357; ACTCACGGAGGAGGG	193555; GCCAACTCTAGGGAG	184395; Time for index table init: 0h 18m 59s 10ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 12); Query db start 1 to 1298472; Target db start 1 to 7796647; [=================================================================] 1.30M 55m 45s 390ms. 0.917439 k-mers per position; 255666 DB matches per sequence; 279 overflows; 0 queries produce too many hits (truncated result); 42 sequences passed prefiltering per query sequence; 45 median result list length; 1236 sequences with 0 size result lists; Time for merging to pref_0_tmp_0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:6595,Mask,Masked,6595,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['Mask'],['Masked']
Availability,"quence identity [2]; kmermatcher:; --kmer-per-seq INT k-mers per sequence [21]; --kmer-per-seq-scale TWIN Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [aa:0.000,nucl:0.200]; --adjust-kmer-len BOOL Adjust k-mer length based on specificity (only for nucleotides) [0]; --hash-shift INT Shift k-mer hash initialization [67]; --include-only-extendable BOOL Include only extendable [0]; --ignore-multi-kmer BOOL Skip k-mers occurring multiple times (>=2) [0]; profile:; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignment (score only); 2: local alignment; 3: global alignment; 4: longest alignment fulfilling window quality criterion [0]; --dbtype INT Database type 0: auto, 1: amino acid 2: nucleotides [0]; --shuffle BOOL Shuffle input database [1]; --createdb-mode INT Createdb mode 0: copy data, 1: soft link data and write new index (works only with single line fasta/q) [1]; --id-offset INT Numeric ids in index file are offset by this value [0]; common:; --threads INT Number of CPU-cores used (all by default) [10]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; --sub-mat TWIN Substitution matrix file [aa:blosum62.out,nucl:nucleotide.out]; --max-seq-len INT Maximum sequence length [65535]; --db-load-mode INT Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]; --remove-tmp-files BOOL Delete temporary files [1]; --force-reuse BOOL Reuse tmp filse in tmp/latest folder ignoring parameters and version changes [0]; --mpi-runner STR Use MPI on compute cluster with this MPI command (e.g. ""mpirun -np 42"") []; expert:; --filter-hits BOOL Filter hits by seq.id. and coverage [0]; --sort-results INT Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]; --write-lookup INT write .l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:5823,error,errors,5823,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,1,['error'],['errors']
Availability,"quence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Tmp tmpC folder does not exist or is not a directory.; Created dir tmpC; Program call:; prefilter geneC.db genes.db tmpC/10139724895635470572/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	1000; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Threads 	48; Verbosity 	3. Initialising data structures...; Using 48 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 7 and split 3 using Target split mode.; Needed memory (213955223732 byte) of total memory (243154",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:2259,mask,mask,2259,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['mask'],['mask']
Availability,"quences. When running mmseqs2 `easy-cluster` like this:; ```; mmseqs easy-cluster test.fasta out.db tmp --min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:1049,mask,mask,1049,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['mask'],['mask']
Availability,"r 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:4684,mask,mask,4684,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,2,['mask'],"['mask', 'mask-prob']"
Availability,"r length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:2882,mask,mask,2882,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,2,['mask'],"['mask', 'mask-prob']"
Availability,"r query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Initialising data structures...; Using 10 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1094599205 byte) of total memory (365681509171 byte); Target database: /tmp/test/9465698490903227639/input_step_redundancy(Size: 27782); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 1s. Query database: /tmp/test/9465698490903227639/input_step_redundancy(size=27782); Process prefiltering step 1 of 1. Index table: counting k-mers...; ..; Index table: Masked residues: 266508; Index table: fill...; ..; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 1182627; DB Size: 519095762 (byte); Avg Kmer Size: 0.0184785; Top 10 Kmers; 	YTGTPK		230; 	PGFVVC		201; 	TNMHCE		201; 	GSPYYE		201; 	ISYEFH		201; 	FMHLRK		201; 	KKEEWK		201; 	WKREKP		201; 	MTTCKQ		201; 	IFTFHT		201; Min Kmer Size: 0; Empty list: 63346238. Time for index table init: 0h 0m 0s. 	k-mers per position = 1.5412, k-mer match probability: 7.54641e-14; k-mer similarity threshold: 130; k-mer match probability: 7.54641e-14. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 27782; Target db start 1 to 27782; ..; 1 k-mers per position.; 1604 DB matches per sequence.; 0 Overflows.; 27 sequences passed prefiltering per query sequence.; Median result list size: 2; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 0 m 1s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 0 m 2s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:15249,Mask,Masked,15249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Masked']
Availability,"r-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3651,mask,mask,3651,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"rage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:4541,Mask,Mask,4541,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['Mask'],['Mask']
Availability,"rapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 200G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files true; Report mode 0; Alignment format 0; Fo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/577:2082,Mask,Mask,2082,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577,1,['Mask'],['Mask']
Availability,"rbose http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz; `. > Extract the downloaded archive . > Convert the hhm file (uniclust30_2018_08_hhm_db) to MMseqs profile DB; `mseqs convertprofiledb uniclust30_2018_08_hhm_db profile_from_hmm --threads 30 -v 3; `. > Generate the index; `mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3`. ## MMseqs Output (for bugs); ```; > mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3; Program call:; createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	2147483647; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3. Substitution matrices...; Use kmer size 5 and sp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130:1068,Mask,Mask,1068,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130,1,['Mask'],['Mask']
Availability,"rce restart with latest tmp 	false; Remove temporary files 	false. extractorfs kelp_database tmp/3499313520568641582/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2; --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-; starts 0 --id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 714.62K 18s 1ms; Time for merging to q_orfs_aa_h: 0h 0m 17s 230ms; Time for merging to q_orfs_aa: 0h 0m 22s 109ms; Time for processing: 0h 1m 20s 933ms; prefilter tmp/3499313520568641582/q_orfs_aa uniref50 tmp/3499313520568641582/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --sp; lit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lo; wer-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed ; 0 -v 3 -s 5.7 . Query database size: 61153309 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 99G; Target database size: 48531432 type: Aminoacid; Process prefiltering step 1 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.26M 1m 44s 733ms; Index table: Masked residues: 187925951; Index table: fill; [=================================================================] 24.26M 3m 17s 822ms; Index statistics; Entries: 6286866786; DB size: 45739 MB; Avg k-mer size: 4.911615; Top 10 k-mers; DFEQLPH	32892; NVPGWSP	32831; FRYAFPS	32736; RYYVLGW	32688; WRLDFLN	31763; TVDGDFS	31579; NKTDFVQ	31135; QDWVQIP	30874; LDGAYVP	30051; ETGRYNV	29832; Ti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/478:3426,mask,mask,3426,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478,2,['mask'],"['mask', 'mask-lo']"
Availability,"rd frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	mpirun -pernode -np 8; Force restart with latest tmp 	false; Remove temporary files 	false. MPI Init; Rank: 0 Size: 8; prefilter human_prot.db /lustre/projects/carlson-group/mmseqs2-project/DBs/UniRef50 ./tmp/4797566427929930176/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:4214,mask,mask,4214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,2,['mask'],"['mask', 'mask-prob']"
Availability,"re-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:5999,mask,mask-lower-case,5999,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['mask'],['mask-lower-case']
Availability,"re-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:5611,mask,mask,5611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,2,['mask'],"['mask', 'mask-prob']"
Availability,reads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write DBR2INDEX (7); mmseqs-web-worker_1 | Write DBR2DATA (8); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write HDR2INDEX (20); mmseqs-web-worker_1 | Write HDR2DATA (21); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=================================================================] 10.75K 1s 426ms; mmseqs-web-worker_1 | Index table: Masked residues: 29698; mmseqs-web-worker_1 | Index table: fill; mmseqs-web-worker_1 | [=================================================================] 10.75K 0s 783ms; mmseqs-web-worker_1 | Index statistics; mmseqs-web-worker_1 | Entries: 6377423; mmseqs-web-worker_1 | DB size: 8228 MB; mmseqs-web-worker_1 | Avg k-mer size: 0.005939; mmseqs-web-worker_1 | Top 10 k-mers; mmseqs-web-worker_1 | GAGTGGTTAGGCGGA	1170; mmseqs-web-worker_1 | TGAAACGGCCCCCAC	886; mmseqs-web-worker_1 | CCCCCAAGGGACAGT	883; mmseqs-web-worker_1 | GGGTAGTCCGCAGGC	882; mmseqs-web-worker_1 | TTGGTAAGCCACGGC	882; mmseqs-web-worker_1 | GGGGCAGCGTGATTT	882; mmseqs-web-worker_1 | TGGTAAGTCCAGACG	882; mmseqs-web-worker_1 | AACGATTAATCGGAG	865; mmseqs-web-worker_1 | ATTAGGGGCCAAACG	855; mmseqs-web-worker_1 | TTCAGCAAGCGACTT	854; mmseqs-web-worker_1 | Write ENTRIES (9); mmseqs-web-worker_1 | Write ENTRIESOFFSETS (10); mmseqs-web-worker_1 | Write SEQINDEXDATASIZE (15); mmseqs-web-worker_1 | Write SEQINDEXSEQOFFSET (16); mmseqs-web-worker_1 | Write SEQINDEXDATA (14); mmseqs-,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:15093,Mask,Masked,15093,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['Mask'],['Masked']
Availability,"reatedb query.fasta tmp_easy_search/6745795380167965363/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 0ms; Time for merging to query: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 4ms; Create directory tmp_easy_search/6745795380167965363/search_tmp; search tmp_easy_search/6745795380167965363/query target_DB tmp_easy_search/6745795380167965363/result tmp_easy_search/6745795380167965363/search_tmp -a 1 --alignment-mode 3 --threads 96 -s 5.7 --sort-results 0 --remove-tmp-files 0 . prefilter tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 -s 5.7 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:5373,mask,mask,5373,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,2,['mask'],"['mask', 'mask-prob']"
Availability,"reatesubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step1"". # go down to 90% (this step is needed to create big clusters); STEP=1; INPUT=""$TMPPATH/input_step1""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:4300,down,down,4300,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['down'],['down']
Availability,recover longest orf after fragment elimination,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/832:0,recover,recover,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/832,1,['recover'],['recover']
Availability,"reen_prof mmtemp --local-tmp /scratch/saladi1/22776241/ --remove-tmp-files 1 --split-memory-limit 1000000. MMseqs Version: 	fac81fa7a63c1205209d4acbc46ce2209abcaa8a; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	64; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	1000000; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path 	/scratch/saladi1/22776241/; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-prof",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/193:2559,Mask,Mask,2559,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193,2,['Mask'],['Mask']
Availability,"reshold 	0; Coverage mode 	2; Max sequence length 	10000; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:1860,Mask,Mask,1860,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['Mask'],['Mask']
Availability,"residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. createindex colabfold_envdb_202108_db tmp. MMseqs Version: 75af0c82edf34587548bacc865cfa1d2261a9696; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 32. Target split ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/540:1914,Mask,Mask,1914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540,1,['Mask'],['Mask']
Availability,result2msa --allow-deletion - Segmentation fault,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/167:43,fault,fault,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/167,1,['fault'],['fault']
Availability,result2msa --compress - Segmentation fault,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/36:37,fault,fault,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/36,1,['fault'],['fault']
Availability,result2msa segmentation fault (Linux/MacOS) and cygwin error (Windows),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229:24,fault,fault,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229,2,"['error', 'fault']","['error', 'fault']"
Availability,"rf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile tmp/457325247790757046/pref --sub-mat blosum62.out -s 7.5 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 10; Verbosity 3. Initialising data structures...; Using 10 threads.; Use index pfam_profile.sk6; Index version: 12; Generated by: 7-4e23d; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: 2; Headers1: 1; Headers2: 0; ScoreMatrix: blosum62.out; Error: Prefilter died; ```. Pretty sure it isn't a memory problem. Also, seams that the kmer size required at `createindex` step are not the same as the `search` step, even passing these parameters in the command call.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189:3435,Mask,Mask,3435,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189,3,"['Error', 'Mask']","['Error', 'Mask', 'Masked']"
Availability,"rging to query: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Database type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Time for merging to query.lookup: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Tmp /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp folder does not exist or is not a directory.; docker-compose-mmseqs-web-worker-1 | prefilter /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 7.5 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Estimated memory consumption: 1G; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Process prefiltering step 1 of 1; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | k-mer similarity threshold: 96; docker-compose-mmseqs-web-worker-1 | Starting prefiltering scores calculation (step 1 of 1); docker-compose-mmseqs-web-worker-1 | Q",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:3018,mask,mask,3018,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"rix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	10000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:2570,Mask,Mask,2570,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,2,['Mask'],['Mask']
Availability,"rnative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:4515,mask,mask,4515,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"rnative alignments ; -c 	0.000 	list matches above this fraction of aligned (covered) residues (see --cov-mode); --cov-mode 	0 	0: coverage of query and target, 1: coverage of target, 2: coverage of query 3: target seq. length needs be at least x% of query length, 4: query seq. length needs be at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:7664,mask,mask-profile,7664,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,2,['mask'],"['mask', 'mask-profile']"
Availability,"rop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; [=================================================================Segmentation fault; Error: Create profile died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * Which MMseqs version was used:Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 32-core, 256 GB ram, vmtouch'ed target into memory (crash happens either way though); * Operating system and version: Debian GNU/Linux 11 (bullseye)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:6821,fault,fault,6821,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"rt mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --k-score 2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 5.7. Query database size: 25293 type: Aminoacid; Estimated memory consumption: 18G; Target database size: 3570076 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 3.57M 8s 444ms; Index table: Masked residues: 11969832; Index table: fill; [=================================================================] 100.00% 3.57M 8s 228ms; Index statistics; Entries: 1027253274; DB size: 6366 MB; Avg k-mer size: 16.050832; Top 10 k-mers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:3261,mask,mask,3261,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"rt,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | [=================================================================] 1 0s 0ms; mmseqs-web-worker_1 | Time for merging to alis_pdb_rna_sequence: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 33ms; mmseqs-web-worker_1 | Removing temporary files; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | 2022/09/22 23:07:17 Process finished gracefully without error; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /ticket/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A HTTP/1.0"" 200 68; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /ticket/type/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A HTTP/1.0"" 200 18; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""POST /tickets HTTP/1.0"" 200 138; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /result/queries/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/7/0 HTTP/1.0"" 200 63; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /result/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/0 HTTP/1.0"" 200 126; ```. ## Context; On a weekly basis, some new sequences are added to the FAS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:31728,error,error,31728,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['error'],['error']
Availability,"rt-results 0 --global-alignment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --merge-query 1 --search-type 0 --num-iterations 1 --start-sens 4 --sens-steps 1 --slice-search 0 --strand 1 --disk-space-limit 0 --force-reuse 0 --remove-tmp-files 0. prefilter clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/tmp_hsp1/2842639954524457022/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7. Using 24 threads.; Estimated memory consumption 413414 MB; Target database size: 119988216 type: Aminoacid; Query database size: 40624 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 119.99M 14m 40s 186ms; Index table: Masked residues: 372860390; Index table: fill; [=================================================================] 100.00% 119.99M 20m 55s 996ms; Index statistics; Entries: 38076912867; DB size: 227643 MB; Avg k-mer size: 29.747588; Top 10 k-mers; SGQQRIA	281769; GPGGKLL	259328; GQQVARA	172987; YTGTGKG	166889; GGQRVAR	143134; LLGPGKT	113836; LSGQQAI	94348; GGRRVAR	94149; ALGSGKS	92540; GRFVVEV	90006; Time for ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:4708,mask,mask,4708,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,2,['mask'],"['mask', 'mask-lower-case']"
Availability,running MMseq2 clusterupdate on publicly available clusters not in MMseq2 format,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/735:41,avail,available,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/735,1,['avail'],['available']
Availability,"rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy/mapping_genomes --tax-mapping-mode 1 --threads 128 -v 3 . Loading nodes file ... Done, got 113318 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Error: createtaxdb died; ```. Any tips? Thanks.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:1507,Down,Download,1507,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806,3,"['Down', 'Error', 'down']","['Download', 'Error', 'download']"
Availability,"ry_seqs_split_h: 0h 0m 0s 832ms; > Time for merging to query_seqs_split: 0h 0m 0s 878ms; > Time for processing: 0h 0m 3s 919ms; > prefilter tmp/7701176895607249840/search_tmp/9045538653068861586/query_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/target_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 2670930 type: Nucleotide; > Target split mode. Searching through 18 splits; > Estimated memory consumption: 326G; > Target database size: 100684280 type: Nucleotide; > Process prefiltering step 1 of 18; > ; > Index table k-mer threshold: 0 at k-mer size 15 ; > Index table: counting k-mers; > Segmentation fault (core dumped) ] 0.00% 1 eta -; > Error: Prefilter died; > Error: Search step died; > Error: Search died; > . ## Context. Hi I am trying to run an nucleotide-nucleotide search in mmseq2 with a custom database. This error does not occur with a different, smaller nucleotide database. Thank you very much for this amazing tool and all your hard work. ## Your Environment. I am using a google cloud VM with 64 CPUs and 416 GBs of memory on an ubuntu operating system, version 20.04. I install mmseq with the command. static build with AVX2 (fastest); `wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; tar xvfz mmseqs-linux-avx2.tar.gz; export PATH=$(pwd)/mmseqs/bin/:$PATH; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:7379,fault,fault,7379,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,5,"['Error', 'error', 'fault']","['Error', 'error', 'fault']"
Availability,"s 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 48 --compressed 0 -v 3 -s 7.0 . Query database size: 1270615 type: Profile; Estimated memory consumption: 7G; Target database size: 1270615 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1.27M 6s 285ms; Index table: Masked residues: 39476984; Index table: fill; [=================================================================] 1.27M 5s 428ms; Index statistics; Entries: 522806522; DB size: 3479 MB; Avg k-mer size: 8.168852; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:8573,mask,mask-lower-case,8573,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['mask'],['mask-lower-case']
Availability,"s 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:2421,mask,mask-lower-case,2421,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['mask'],['mask-lower-case']
Availability,"s 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Prefilter mode 	0; Exhaustive search mode 	true; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 75233 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 . Query database size: 75233 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 75233 type: Aminoacid; Index table k-mer threshold: 91 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 75.23K 0s 271ms ; Index table: Masked residues: 52417; Index table: fill; [=================================================================] 100.00% 75.23K 0s 415ms ; Index statistics; Entries: 23045881; DB size: 620 MB; Avg k-mer size: 0.360092; Top 10 k-mers; GGNQHH	4218; NTSHHH	3502; NYHFDY	2183; LEVYHY	2100; VTDHHH	1805; TPMRHS	1770; GWNHFP	1732; LIWRGT	1732; GLYIHL	1684; WAHVSS	1682; Time for index table init: 0h 0m 1s 16ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:3727,mask,mask-lower-case,3727,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['mask'],['mask-lower-case']
Availability,"s --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --threads 2 --compressed 0 -v 3 . [] 4h 52m 19s 671ms; Time for merging files: 0h 0m 12s 453ms; Time for merging files: 0h 0m 37s 79ms; Time for processing: 4h 53m 13s 946ms; translatenucs tmp/15531098257495296432/q_orfs tmp/15531098257495296432/q_orfs_aa --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 2 . [] 4h 49m 49s 475ms; Time for merging files: 0h 0m 13s 279ms; Time for processing: 4h 50m 4s 882ms; prefilter tmp/15531098257495296432/q_orfs_aa /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 3 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 1.0 . Using 2 threads.; Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Estimated memory consumption 372556 MB; Target database size: 134985288 type: Aminoacid; Query database size: 12189231 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12189231; Target db start 1 to 134985288; [] 5h 25m 52s 523ms. 5.520466 k-mers per position; 7748 DB matches per sequence; 0 overflows; 11 sequences passed prefiltering per query sequence; 8 median result list length; 2084890 sequences with 0 size result lists. Time for prefiltering scores calculation: 5h 25m 59s 596ms; Time for merging files: 0h 0m 17s 47ms; Time for processing: 5h 28m 30s 1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:4966,mask,mask,4966,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 9 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 210 0s 27ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 210 0s 8ms; Index statistics; Entries: 1285; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 174ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 210; [=================================================================] 100.00% 9 0s 11ms. 460.860859 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 801ms; swapdb tmp//538598962955004214/seq_wrong_assigned_pref tmp//538598962955004214/se",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:28185,Mask,Masked,28185,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['Mask'],['Masked']
Availability,"s 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta input_script5/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 32ms; Time for merging to qdb: 0h 0m 0s 47ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 226ms; Create directory input_script5/tmp1; search input_script5/qdb uniref30_2302_db input_script5/res input_script5/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000 ; prefilter input_script5/qdb uniref30_2302_db.idx input_script5/tmp1/16308606893082150349/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:96,prof:80 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ## Context; I am trying to do a mmseqs2 colabfold search locally.; However, the local result doesn't match the MSA server results.; To reproduce the server results, I am trying to find out which option the MSA server is actually using. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): bb0a1b3569b9fe115f3bf63e5ba1da234748de23 or 14.7e284; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled or anaconda ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:2923,mask,mask-lower-case,2923,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,1,['mask'],['mask-lower-case']
Availability,"s 66ms; connected component mode; Total time: 0h 0m 0s 90ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 237. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 96ms; createsubdb tmpfiles//13298481167543164943/clu_step0 tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 237 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 237 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 237 0s 39ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 237 0s 9ms; Index statistics; Entries: 1403; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 25ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:15543,mask,mask,15543,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"s by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2808,mask,mask,2808,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:14794,mask,mask,14794,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,5,"['Error', 'mask']","['Error', 'mask', 'mask-lower-case']"
Availability,"s map`, using a simple test run command: `mmseqs map --threads 24 -s 2 -c 0 MY_queryDB MY_targetDB MY_outDB MY_tmp_dir`, and I'm getting the following output + error:. ```; mseqs map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/; Program call:; map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:1086,Mask,Mask,1086,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['Mask'],['Mask']
Availability,"s module. The following error messages were generated for GTDB; other databases were generated without errors. I thought problems with GTDB were fixed in previous versions (e.g., see issue [#742](https://github.com/soedinglab/MMseqs2/pull/742)), but perhaps changes were reverted in the latest release via conda?. Here are the relevant error messages (full output also included below):. 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ==",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:1201,error,error,1201,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['error'],['error']
Availability,"s on a node with 500gb memory. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. It will be difficult to send you my sequence file. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; createdb genecatalog/input.faa genecatalog/input_mmseqdb/db. MMseqs Version: 11.e1a1c. Converting sequences; [=================================================================================================== 1 Mio. sequences processed; =================================================================================================== 2 Mio. sequences processed; =================================================================================================== 3 Mio. sequences processed; ... =================================================================================================== 260 Mio. sequences processed; =================================================================================================== 261 Mio. sequences processed; =======================================================================================; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. slurm error:; `slurmstepd: error: Detected 1 oom-kill event(s) in step 33218922.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/315:1442,error,error,1442,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/315,2,['error'],['error']
Availability,s processed; ...................................................................................................	16 Mio. sequences processed; ...................................................................................................	17 Mio. sequences processed; ...................................................................................................	18 Mio. sequences processed; ...................................................................................................	19 Mio. sequences processed; ...................................................................................................	20 Mio. sequences processed; ...................................................................................................	21 Mio. sequences processed; ...................................................................................................	22 Mio. sequences processed; .......................................................; Index table: Masked residues: 8669313; Index table: fill...; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ...................................................................................................	5 Mio. sequences processed; ...................................................................................................	6 Mio. sequences processed; ...................................................................................................	7 Mio. sequences processed; .......................................................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:9387,Mask,Masked,9387,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['Mask'],['Masked']
Availability,"s with similar response time as that in mmseqs colabfold api.; Is there a solution for ColabFold multimer prediction msa search with a good speed(not fastest, but faster) with 256GB memeory?; ## Current Behavior; for 1 sequence pair(164 mers and 6 mers) input, local mmseqs msa server use more than 4 hours to process, even much slower than Alphafold orig MSA local running at the same local hardware environment.; **I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.**; **Is this very low speed caused by I didn't keep all database into memory?**; >HAGPIA; ## Steps to Reproduce (for bugs); I follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFIL",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690:1188,down,download,1188,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690,1,['down'],['download']
Availability,"s, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Your Environment; * Git commit used:; I tried on my personal machine and a compute node (PBS), similar behaviour in both. ; Personal machine MMseqs2 Version: 48a037a2e2cf5ea140c6c5de357b7147e5310b4d.; Server MMseqs2 Version: 2a8c5f00f820c5c9a577676707095ef17bcff04a.; * Which MMseqs version was used: Statically-compiled; * Server specifications:; Server: (2a8c5f00f820c5c9a577676707095ef17bcff04a); CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; Personal machine: (48a037a2e2cf5ea140c6c5de357b7147e5310b4d); CPU: Intel Core i7-8700 6-Core model: bits: 64 type: L2 cache: 12.0 MiB ; Memory: 15.33 GB; * Operating system and version:; Personal machine: Linux Mint 19.2 Tina Kernel: 4.15.0-72-generic x86_64; ; Server: Linux 3.10.0-693.el7.x86_64. Thanks for developing and maintaining this totally amazing tool !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261:2313,error,errors,2313,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261,1,['error'],['errors']
Availability,"s. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-un",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:13009,Error,Error,13009,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,3,['Error'],['Error']
Availability,"s/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per query sequence.; Time for alignments calculation: 0 h 0 m 1s; - checkReturnCode 'Alignment died'; - '[' 0 -ne 0 ']'; - '[' 4 -gt 4 ']'; - NEXTINPUT=/home/zcx/Program/MMseqs/2.0/test/tmp/input_step4; - '[' 4 -lt 4 ']'; - let SENS=SENS+SENS_STEP_SIZE; - INPUT=/home/zcx/Program/MMseqs/2.0/test/tmp/input_step4; - '[' 5 -le 4 ']'; - mv -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 resultDB; - mv -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4.index resultDB.index; - checkReturnCode 'Could not move result to resultDB'; - '[' 0 -ne 0 ']'; - '[' -n '' ']'. Why was there an 'Could not move result to resultDB' error code even though the ""resultDB"" and ""resultDB.index"" file was correctly generated?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:6359,error,error,6359,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['error'],['error']
Availability,"s/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:17:18: error: field ‘prev’ has incomplete type ‘Except_Frame_T’; Except_Frame_T prev;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:16:8: note: definition of ‘struct Except_Frame_T’ is not complete until the closing brace; struct Except_Frame_T {; ^; src/CMakeFiles/mmseqs-framework.dir/build.make:542: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. ## Context; i wanted to build an mpi enabled sse4 as this is not distributed. ## Your Environment; git version from today. ```; cat /etc/issue; Ubuntu 16.04.5 LTS. $ cat /proc/cpuinfo | grep -m1 sse; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts mmx fxsr sse sse2 ss syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts nopl xtopology tsc_reliable nonstop_tsc aperfmperf pni pclmulqdq ssse3 cx16 pcid sse4_1 sse4_2 x2apic popcnt aes xsave avx hypervisor lahf_lm epb kaiser dtherm ida arat pln pts; ```. any suggestions welcome!; thanks; a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:3454,Error,Error,3454,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,3,['Error'],['Error']
Availability,"s/nuc_mmseq_DB \; ${dbdir}/gtdb_54kDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```. The taxonomy DB is made through the last release of GTDB without applying a cluster, as discussed in #244 . . The db is as follows: . ```; -rw-r--r-- 1 aauladell bio 54G 28 nov 11:05 gtdb_54kDB; -rw-r--r-- 1 aauladell bio 4 28 nov 11:07 gtdb_54kDB.dbtype; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 3,0G 28 nov 11:00 gtdb_54kDB_h; -rw-r--r-- 1 aauladell bio 4 28 nov 11:01 gtdb_54kDB_h.dbtype; -rw-r--r-- 1 aauladell bio 3,9G 28 nov 11:09 gtdb_54kDB_h.index; -rw-r--r-- 1 aauladell bio 4,3G 28 nov 11:08 gtdb_54kDB.index; -rw-r--r-- 1 aauladell bio 4,6G 28 nov 11:14 gtdb_54kDB.lookup; -rw-r--r-- 1 aauladell bio 2,7G 28 nov 15:43 gtdb_54kDB_mapping; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_merged.dmp; -rw----r-- 1 aauladell bio 1,8M 28 nov 15:43 gtdb_54kDB_names.dmp; -rw----r-- 1 aauladell bio 3,0M 28 nov 15:43 gtdb_54kDB_nodes.dmp; ```. ## Current Behavior. Instead, it raises an `out_of_range` error with a `terminate called recursively` after running for 20 hours. . ## MMseqs Output (for bugs). Raises the following error: ; ```; terminate called recursively; terminate called after throwing an instance of 'std::out_of_range/mnt/lustre/scratch/aauladell/databases/gtdb-r89_54k/tmp//14536420861195881021/taxonomy.sh: line 99: 34258 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```. The output log: ; [mmseqs_lca_log.txt](https://github.com/soedinglab/MMseqs2/files/3955181/mmseqs_lca_log.txt). ## Context; Taxonomic classification of a gene catalog with around 500000 seqs. ; ; ## Your Environment. MMseqs2 Version: 0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 36 threads and 400 Gb RAM.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256:1286,error,error,1286,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256,2,['error'],['error']
Availability,"s; Time for merging to pre_clust: 0h 1m 31s 28ms; Time for processing: 0h 5m 19s 116ms; createsubdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/input_step_redundancy -v 3 --subdb-mode 1 ; Time for merging to input_step_redundancy: 0h 0m 34s 71ms; Time for processing: 0h 1m 29s 221ms; createsubdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter1 -v 3 --subdb-mode 1 ; Time for merging to pref_filter1: 0h 0m 45s 806ms; Time for processing: 0h 1m 48s 52ms; filterdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter1 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter2 --filter-file /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy --threads 96 --compressed 0 -v 3 ; Filtering using file(s); [=================================================================] 245.75M 2m 9s 682ms; Time for merging to pref_filter2: 0h 2m 9s 511ms; Time for processing: 0h 6m 15s 7ms; Segmentation fault (core dumped); Error: Ungapped alignment step died; Error: Search died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `dc054792d1b1d091380638a712ee7566aba2bb38`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: **cmake 3.10.2**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; * Operating system and version: **Ubuntu 18.04**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:5267,fault,fault,5267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,3,"['Error', 'fault']","['Error', 'fault']"
Availability,"sDependencyWarning: urllib3 (1.26.12) or chardet (3.0.4) doesn't match a supported version!; warnings.warn(""urllib3 ({}) or chardet ({}) doesn't match a supported ""; Creating network ""docker-compose_default"" with the default driver; Creating volume ""docker-compose_redis-volume"" with default driver; Pulling mmseqs-web-redis (redis:alpine)...; alpine: Pulling from library/redis; Digest: sha256:dc1b954f5a1db78e31b8870966294d2f93fa8a7fba5c1337a1ce4ec55f311bc3; Status: Downloaded newer image for redis:alpine; Pulling mmseqs-web-api (soedinglab/mmseqs2-app-backend:version-5)...; version-5: Pulling from soedinglab/mmseqs2-app-backend; Digest: sha256:cb3937c294b3e666af4f4a424af0b7c4adc4f5469e2f309651b9a852731d786d; Status: Downloaded newer image for soedinglab/mmseqs2-app-backend:version-5; Pulling mmseqs-web-webserver (soedinglab/mmseqs2-app-frontend:version-5)...; version-5: Pulling from soedinglab/mmseqs2-app-frontend; Digest: sha256:30690f07999e0d1d7eccfe63c40df2b11d246590f094014e16987ed5d74d06d9; Status: Downloaded newer image for soedinglab/mmseqs2-app-frontend:version-5; Creating docker-compose_mmseqs-web-redis_1 ... ; Creating docker-compose_mmseqs-web-redis_1 ... done; Creating docker-compose_mmseqs-web-api_1 ... ; Creating docker-compose_mmseqs-web-api_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... done; Attaching to docker-compose_mmseqs-web-redis_1, docker-compose_mmseqs-web-api_1, docker-compose_mmseqs-web-worker_1, docker-compose_mmseqs-web-webserver_1; mmseqs-web-api_1 | 2022/09/22 16:09:10 MMseqs2 Webserver; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Redis version=7.0.4, bits=64, commit=00000000, modified=0, pid=1, just started; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Wa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:8515,Down,Downloaded,8515,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['Down'],['Downloaded']
Availability,s]; [#422f0e 4.3GiB/5.7GiB(76%) CN:5 DL:112MiB ETA:12s]; [#422f0e 4.5GiB/5.7GiB(78%) CN:5 DL:112MiB ETA:11s]; [#422f0e 4.6GiB/5.7GiB(80%) CN:5 DL:112MiB ETA:10s]; [#422f0e 4.7GiB/5.7GiB(82%) CN:5 DL:112MiB ETA:9s]; [#422f0e 4.8GiB/5.7GiB(84%) CN:5 DL:112MiB ETA:8s]; [#422f0e 4.9GiB/5.7GiB(86%) CN:5 DL:112MiB ETA:7s]; [#422f0e 5.0GiB/5.7GiB(88%) CN:5 DL:112MiB ETA:6s]; [#422f0e 5.1GiB/5.7GiB(90%) CN:5 DL:112MiB ETA:5s]; [#422f0e 5.2GiB/5.7GiB(92%) CN:5 DL:112MiB ETA:4s]; [#422f0e 5.3GiB/5.7GiB(94%) CN:5 DL:112MiB ETA:3s]; [#422f0e 5.4GiB/5.7GiB(95%) CN:5 DL:112MiB ETA:2s]; [#422f0e 5.5GiB/5.7GiB(97%) CN:5 DL:112MiB ETA:1s]; [#422f0e 5.6GiB/5.7GiB(99%) CN:4 DL:112MiB]. 10/11 10:31:53 [NOTICE] Download complete: /space/jmd20jns/tmp/13406937569195620773/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 422f0e|OK | 111MiB/s|/space/jmd20jns/tmp/13406937569195620773/bacteria.tar. Status Legend:; (OK):download completed. 10/11 10:31:53 [NOTICE] Downloading 1 item(s); [#df1c91 84MiB/85MiB(98%) CN:1 DL:89MiB]. 10/11 10:31:54 [NOTICE] Download complete: /space/jmd20jns/tmp/13406937569195620773/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; df1c91|OK | 88MiB/s|/space/jmd20jns/tmp/13406937569195620773/archea.tar. Status Legend:; (OK):download completed. 10/11 10:31:54 [NOTICE] Downloading 1 item(s); [#14821b 89MiB/2.7GiB(3%) CN:5 DL:95MiB ETA:28s]; [#14821b 200MiB/2.7GiB(7%) CN:5 DL:104MiB ETA:25s]; [#14821b 311MiB/2.7GiB(10%) CN:5 DL:106MiB ETA:23s]; [#14821b 422MiB/2.7GiB(14%) CN:5 DL:108MiB ETA:22s]; [#14821b 533MiB/2.7GiB(18%) CN:5 DL:108MiB ETA:21s]; [#14821b 644MiB/2.7GiB(22%) CN:5 DL:109MiB ETA:19s]; [#14821b 755MiB/2.7GiB(26%) CN:5 DL:109MiB ETA:18s]; [#14821b 866MiB/2.7GiB(30%) CN:5 DL:110MiB ETA:17s]; [#14821b 0.9GiB/2.7GiB(34%) CN:5 DL:110MiB ETA:16s]; [#14821b 1.0GiB/2.7GiB(38%) C,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762:3722,down,download,3722,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762,1,['down'],['download']
Availability,"s``` results, I occasionally get a null bite (in ```vim``` it looks like ```^@```), which breaks a line in the downstream analysis. See attached screenshots in Vim and Libreoffice, the ```tsv``` itself also attached (truncated, see lines 89–90).; ![issue-libreoffice](https://github.com/soedinglab/MMseqs2/assets/17991942/e198caa5-7c2d-405e-a91d-97595e0bf569); ![issue-vim](https://github.com/soedinglab/MMseqs2/assets/17991942/04fc1f53-22f3-4efb-95a3-39a044a9a353); [mmseqs-issue.tsv.zip](https://github.com/soedinglab/MMseqs2/files/14981527/mmseqs-issue.tsv.zip). ## Steps to Reproduce (for bugs); ```; # Create a taxonomyDB from PR2 database; # Get 'pr2_version_5.0.0_SSU_taxo_long.fasta' here: https://github.com/pr2database/pr2database/releases/download/v5.0.0/pr2_version_5.0.0_SSU_taxo_long.fasta.gz); # Uses seqkit and taxonkit programs (github.com/shenwei356). sed 's/_/ /' pr2_version_5.0.0_SSU_taxo_long.fasta > pr2_to_mmseqs.fasta; echo -e ""domain\tsupergroup\tdivision\tsubdivision\tclass\torder\tfamily\tgenus\tspecies"" > pr2_tax; cat pr2_to_mmseqs.fasta | seqkit seq -n | sed 's/[^|]*|[^|]*|[^|]*|//' | sed 's/|/\t/g' >> pr2_tax; cat pr2_tax | taxonkit create-taxdump -O pr2_taxdump; cat pr2_to_mmseqs.fasta | seqkit seq -n | sed 's/[^|]*|[^|]*|[^|]*|//' | cut -d '|' -f 9 | taxonkit name2taxid --data-dir pr2_taxdump > pr2_name2taxid; paste <(cat pr2_to_mmseqs.fasta | seqkit seq -ni) <(cat pr2_name2taxid | cut -f2) > pr2_taxidmap; mmseqs createdb pr2_to_mmseqs.fasta pr2; mmseqs createtaxdb pr2 tmp --ncbi-tax-dump pr2_taxdump --tax-mapping-file pr2_taxidmap; mmseqs createindex pr2. # Search; mmseqs prefilter lcB1_97 pr2.idx lcB1_97_pref -s 2.0 --exact-kmer-matching 1 --max-seq-len 500 -c 0.9 --cov-mode 2; mmseqs align lcB1_97 pr2.idx lcB1_97_pref lcB1_97_aln -a 1 -e 1e-30 --alignment-mode 3 --alignment-output-mode 0 --min-aln-len 130 -c 0.9 --cov-mode 2 --max-seq-len 500 --max-accept 30; mmseqs filterdb lcB1_97_aln lcB1_97_aln_flt --beats-first --filter-column 4 --comparis",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:1040,echo,echo,1040,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['echo'],['echo']
Availability,"scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. align /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /scratch/jobs/56067190/14902988131097346952/pref_0 /tmp/560",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:3682,Mask,Mask,3682,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,1,['Mask'],['Mask']
Availability,"scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:1452,Mask,Mask,1452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,1,['Mask'],['Mask']
Availability,"scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3385,mask,mask,3385,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"se 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 7m 46s 594ms; rescorediagonal uniref90-DB-wwmj uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref tmp//16518381706844811497/linclust/11898236; 85496030198/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:5214,mask,mask,5214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,2,['mask'],"['mask', 'mask-prob']"
Availability,se...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 7 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Total time: 0 m 0s; > ; > Size of the sequence database: 176; > Size of the alignment database: 176; > Number of clusters: 169; > Program call:; > tmp/order_redundancy tmp/toBeClusteredSeparately tmp/input_step_redundancy ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Start writing to file tmp/input_step_redundancy; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/input_step_redundancy tmp/input_step_redundancy tmp/pref --sub-mat blosum62.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	32000; > Profile 	false; > Max. results per query 	300; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > ; > Initialising data structures...; > Using 4 threads.; > ; > Cound not find precomputed index. Compute index.; > Query database: tmp/input_step_redundancy(size=169); > Target database: tmp/input_step_redundancy(size=169); > Use kmer size 6 and split 1 using split mode 0; > Needed memory (1381292076 byte) of total memory (25769803776 byte); > Substitution matrices...; > Time for init: 0 h 0 m 0s; > ; > ; > ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:15994,mask,mask,15994,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['mask'],['mask']
Availability,"se; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	fal",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:1895,Mask,Mask,1895,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,2,['Mask'],['Mask']
Availability,"se; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, usin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438:3415,Mask,Mask,3415,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438,1,['Mask'],['Mask']
Availability,"se; E-value threshold 	1e-05; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	1; Search steps 	3; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:2223,Mask,Mask,2223,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,1,['Mask'],['Mask']
Availability,"se; LCA ranks 	kingdom:phylum:class:order:family:genus:species; Blacklisted taxa 	12908,28384; Show taxon lineage 	false; LCA mode 	3; Taxonomy output mode 	0; Match sequences by their id. 	false; Remove temporary files 	false; MPI runner. search clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/first tmp_part-14/17957680840564044329/tmp_hsp1 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3 --seed-sub-mat VTML80.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --spaced-kmer-mode 1 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --merge-query 1 --search-type 0 --num-iterations 1 --start-sens 4 --sens-steps 1 --slice-search 0 --strand 1 --disk-space-limit 0 --force-reuse 0 --remove-tmp-files 0. prefilter clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/tmp_hsp1/2842639954524457022/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:3559,mask,mask,3559,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,3,['mask'],"['mask', 'mask-lower-case', 'mask-profile']"
Availability,"se; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURAR",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:3684,mask,mask-lower-case,3684,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['mask'],['mask-lower-case']
Availability,"search_tmp/16020913209305565279/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 12 --compressed 1 -v 3 . [=================================================================] 100.00% 10.00K 0s 19ms ; Time for merging to q_orfs_aa_h: 0h 0m 0s 0ms; Time for merging to q_orfs_aa: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/160209132093",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:4396,mask,mask,4396,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; * Operating system and version: Ubuntu Linux 16.04.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:2098,Error,Error,2098,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,4,['Error'],['Error']
Availability,sept. 29 00:11 uniref90.mms.index. mmseqs createindex uniref90/uniref90.mms --split 10 --threads 20; Program call:; uniref90/uniref90.mms --split 10 --threads 20 . MMseqs Version: ab6d7b3105611a0860c801603997f1721785916a; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; max. sequence length 32000; Split DB 10; spaced Kmer 1; Threads 20; Verbosity 3. Substitution matrices...; Index table: counting k-mers...; .WARNING: Sequence (dbKey=10870) contains only ATGC. It might be a nucleotide sequence.; .................................................................................................. 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: Masked residues: 26370434; Index table: fill...; ................................................................................................... 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Index table: counting k-mers...; ................................................................................................... 1 Mio. sequences processed; ...........................................................................................WARNING: Sequence (dbKey=5712154) contains only ATGC. It might be a nucleotide sequence.; ........ 2 Mio. sequen,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3:1954,Mask,Masked,1954,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3,1,['Mask'],['Masked']
Availability,"seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3846,mask,mask,3846,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"seqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5 . MMseqs Version: 	8c79865b60025674b9c825fd7238bd0b95503bc7; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	5; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/234:2575,Mask,Mask,2575,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234,4,['Mask'],['Mask']
Availability,"seqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:17:18: error: field ‘prev’ has incomplete type ‘Except_Frame_T’; Except_Frame_T prev;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:16:8: note: definition of ‘struct Except_Frame_T’ is not complete until the closing brace; struct Except_Frame_T {; ^; src/CMakeFiles/mmseqs-framework.dir/build.make:542: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. ## Context; i wanted to build an mpi enabled sse4 as this is not distributed. ## Your Environment; git version from today. ```; cat /etc/issue; Ubuntu 16.04.5 LTS. $ cat /proc/cpuinfo | grep -m1 sse; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts mmx fxsr sse sse2 ss syscall nx rdtscp lm constant",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:2967,error,error,2967,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,1,['error'],['error']
Availability,"seqs2/tree/14-7e284) and GTDB r214, using a Linux server (Ubuntu 22.04 LTS; CPU with SSE/AVX2 support and 512 GB RAM). Although there is a lot of overlap with the post by @mlcoleman previously and the discussion by @mherold1 , I include some details below about the problems I ran into and how I addressed them. ## Problem description; After making a seqdb for the GTDB, there seems to be a collision of genome IDs between different genomes in the seqdb's `gdtb.lookup` file. As mentioned by @mlcoleman , these ID collisions seem to disrupt mmseqs taxonomy workflows downstream. ## Steps to reproduce; 1. Download `gtdb.tar.gz` as done in the `data/workflow/databases.sh` script (or you can just run: `wget -o gdtb.tar.gz https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/genomic_files_reps/gtdb_proteins_aa_reps.tar.gz`); 2. Import `gtdb.tar.gz` as a tardb via `mmseqs tar2db gtdb.tar.gz tardb --tar-include 'faa.gz$'`; 3. Run `mmseqs createdb tardb gtdb`. `mmseqs createdb` finishes without error, but the resulting `gtdb.lookup` file seems to assign the wrong genome IDs (resulting in ID collisions) for any genomes with an ID over 65535. Meanwhile, the correct IDs seem to be assigned in `gtdb.source`. #### For example:. Last few lines of `gtdb.source` (`tail gtdb.source`):; ```; 85195 RS_GCF_014201515.1; 85196 RS_GCF_003977665.1; 85197 RS_GCF_007922615.2; 85198 GB_GCA_002389765.1; 85199 RS_GCF_001440475.1; 85200 GB_GCA_015059865.1; 85201 GB_GCA_900546895.1; 85202 GB_GCA_017621015.1; 85203 GB_GCA_015486425.1; 85204 GB_GCA_934565415.1; ```; It seems like the left column is the genome ID, and the right column is the genome name in the GTDB. Everything seems OK with this file. Last few lines of `gtdb.lookup` (`tail gtdb.lookup`); ```; 256163105 CAKTHQ010000047.1_16 19668; 256163106 CAKTHQ010000050.1_5 19668; 256163107 CAKTHQ010000052.1_8 19668; 256163108 CAKTHQ010000056.1_1 19668; 256163109 CAKTHQ010000058.1_10 19668; 256163110 CAKTHQ010000061.1_12 19668; 256163111 CAKTHQ010",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:1109,error,error,1109,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625,1,['error'],['error']
Availability,sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort res,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:4951,mask,mask,4951,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['mask'],['mask']
Availability,sequence as representative 	false; Target column 	1; Add full header 	false; Sequence source 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0. *skipped some parts of the log that took very little time*. Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 11 sequences passed prefiltering per query sequence; 1 median result list length; 275899073 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 16m 3s 814ms; Time for merging to pref_0_tmp_0_tmp: 0h 26m 19s 322ms; Process prefiltering step 2 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 18m 46s 598ms; Index table: Masked residues: 338371908; Index table: fill; [===========================Terminated,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422:5181,Mask,Masked,5181,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422,1,['Mask'],['Masked']
Availability,"sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:1677,Mask,Mask,1677,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741,2,['Mask'],['Mask']
Availability,"shold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:2; Gap extension cost nucl:5,aa:0; Zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequence",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:3591,Mask,Mask,3591,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['Mask'],['Mask']
Availability,"shold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 83); Query db start 1 to 20588; Target db start 1 to 207919; ...; ```. ## Context; I'm running this on a cluster with aarch64 (actually A64FX) CPU architecture. The cluster also has limited memory per node -- only 32 GB. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; * Which MMseqs version was used: self compiled; * For self-compiled and Homebrew: : GCC 12.1 ,OpenMPI 4.1.4, CMAKE 3.22. Build command: `cmake -DCMAKE_BUILD_TYPE=RELEASE -DNATIVE_ARCH=0 -DCMAKE_C_FLAGS=""-O3 -mcpu=a64fx"" -DCMAKE_CXX_FLAGS=""-O3 -mcpu=a64fx"" -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45 ..`; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): A64FX and 32 Gb of ram; * Operating system and version: Rocky Linux 8.4. I'm wondering if the per-node memory limitation is also limiting the number of threads that can be used, or is there something about how I'm calling mmseqs that I should be changing in order to utilize 48 cores/threads per node? I've tried setting the value of `--threads` to 48, to the total number of cores available on all nodes, and not setting it at all. In each case, the max # of threads/cores used per node is 12. Thanks!; Dave",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:6567,avail,available,6567,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['avail'],['available']
Availability,"sing Target split mode.; Needed memory (1380352223 byte) of total memory (486687909888 byte); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers... Index table: Masked residues: 3509; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 455436; DB Size: 514732616 (byte); Avg Kmer Size: 0.00711619; Top 10 Kmers; 	GPGGTL		17; 	LGNATT		8; 	LSLGLS		6; 	GPGGTT		6; 	SGQQAI		5; 	ALGNGK		5; 	LLGPGK		5; 	LVLILL		5; 	LLSLLL		5; 	LILLSL		5; Min Kmer Size: 0; Empty list: 63557059. Write ENTRIES (7); Write ENTRIESOFFSETS (8); Write SEQINDEXDATASIZE (12); Write SEQINDEXSEQOFFSET (13); Write MASKEDSEQINDEXDATA (11); Write ENTRIESNUM (9); Write SEQCOUNT (10); Write META (1); KmerSize: 6; AlphabetSize: 21; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 0; Write SCOREMATRIXNAME (2); Write VERSION (0); Write DBRINDEX (5); ./dbs/tmp_kora//createindex.sh: line 46: 6458 Aborted (core dumped) ""$MMSEQS"" indexdb ""$INPUT"" ""$INPUT"" $INDEX_PAR; Error: indexdb died. *** Error in `/mmseqs_binaries/c97f09/mmseqs': double free or corruption (!prev): 0x0000000000ed34c0 ***; ======= Backtrace: =========; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x6e5d1)[0x7f40f5a595d1]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x73db6)[0x7f40f5a5edb6]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x74b03)[0x7f40f5a5fb03]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_ZN23PrefilteringIndexReader15createIndexFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8DBReaderIjESA_P10BaseMatrixibbiiii+0x10be)[0x49147e]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z7indexdbiPPKcRK7Command+0x223)[0x4c1f33]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z10runCommandRK7CommandiPPKc+0x30)[0x442470]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(main+0x62)[0x4386c2]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(__libc_start_main+0xf5)[0x7f40f5a0c075]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:3483,Error,Error,3483,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['Error'],['Error']
Availability,"sion of the master database. ## Current Behavior; The new database includes only copies of an entry in the original index which is not in the filter file and is repeated for number of ids present in filter file. ## Steps to Reproduce (for bugs); I am able to reproduce with a small 8 sequence fasta file which is a subset of an old uniref90 download and a single entry filter file.; [uniref90_head.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2847259/uniref90_head.fasta.gz); [uniref90_head_subset.txt](https://github.com/soedinglab/MMseqs2/files/2847255/uniref90_head_subset.txt); ```; mmseqs createdb uniref90_head.fasta uniref90_head.mmsdb; mmseqs createsubdb uniref90_head_subset.txt uniref90_head.mmsdb uniref90_head.subset.mmsdb; mmseqs createsubdb uniref90_head_subset.txt uniref90_head.mmsdb_h uniref90_head.filt.mmsdb_h; ```; Then the resulting uniref90_head.filt.mmsdb_h only has a single entry (UniRef90_Q197F8 Uncharacterized protein 002R n=1 Tax=Invertebrate iridescent virus 3 TaxID=345201 RepID=002R_IIV3 ; ) which is from the fasta but not the id from the filter file (UniRef90_Q6GZX2). ## MMseqs Output (for bugs); No errors given. Only run times. ## Context; I am trying to implement a reciprocal best hits approach. I am searching a fasta file of genes against a uniref90 fasta file. Both are fasta's of amino acids. The forward search (query=genes, target=uniref) goes fine and the reverse search (query=uniref, target=genes) works fine with the full database. Reciprocal best hits were found. To speed up the reverse search I wanted to filter uniref to only include the best hits from the forward search. To do this I used `createsubdb` with the top hits from the forward search as the filter file. The search (query=filtered uniref, target=genes) ran successfully but no alignments were found. Based on this I investigated the _h file from the sub-database and saw the problem. ## Your Environment; Used on a CentOS 7 server and installed via conda. Version is 7.4e23d.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/162:1215,error,errors,1215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/162,1,['error'],['errors']
Availability,"sity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.0001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 3; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:2280,Mask,Mask,2280,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,2,['Mask'],['Mask']
Availability,size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search iterations 	1; > Start sensitivity 	4; > sensitivity step size 	1; > Sets the MPI runner 	; > ; > /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp; > /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp; > Program call:; > tmp/NEWDB.newSeqs tmp/OLDDB.mapped.repSeq /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 1 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 -s 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	32000; > Profile 	false; > Max. results per query 	1; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > ; > Initialising data structures...; > Using 4 threads.; > ; > Cound not find precomputed index. Compute index.; > Query database: tmp/NEWDB.newSeqs(size=182); > Target database: tmp/OLDDB.mapped.repSeq(size=3); > Use kmer size 6 and split 1 using split mode 0; > Needed memory (1381015863 byte) of total memory (25769803776 byte); > Substitution matrices...; > Time for init: 0 h 0 m 1s; > ; > ; > Process prefilt,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:6956,mask,mask,6956,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['mask'],['mask']
Availability,"sk 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 spli",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:5135,mask,mask,5135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,2,['mask'],"['mask', 'mask-prob']"
Availability,sked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ] 2 0s 57ms; Index table: Masked residues: 0; [=================================================================] 2 0s 41ms; Index table: Masked residues: 0; [=================================================================] 2 0s 25ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Ind,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:32041,Mask,Masked,32041,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,slurmstepd: error: poll(): Bad address tmp/4045178716233794437/blastp.sh: line 99:,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/689:12,error,error,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689,1,['error'],['error']
Availability,small error in Readme,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/119:6,error,error,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/119,1,['error'],['error']
Availability,"ssed 0 -v 3 . [=================================================================] 100.00% 1.32M 0s 321ms ; Time for merging to query_seqs_h: 0h 0m 0s 490ms; Time for merging to query_seqs: 0h 0m 2s 39ms; Time for processing: 0h 0m 3s 738ms; splitsequence tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 100.00% 2.64M 0s 246ms ; Time for merging to query_seqs_split_h: 0h 0m 0s 507ms; Time for merging to query_seqs_split: 0h 0m 0s 573ms; Time for processing: 0h 0m 2s 178ms; prefilter tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/target_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 2.0 . Query database size: 2644526 type: Nucleotide; Target split mode. Searching through 13 splits; Estimated memory consumption: 247G; Target database size: 99637107 type: Nucleotide; Process prefiltering step 1 of 13. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: Prefilter died; Error: Search step died; Error: First search died. ```. ## Environment; * AMD EPYC 7502P 32-Core Processor; * 320GB memory; * OS:; Ubuntu 20.04.2 LTS; Kernel: 5.4.0-70-generic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438:6705,mask,mask,6705,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438,6,"['Error', 'fault', 'mask']","['Error', 'fault', 'mask', 'mask-lower-case']"
Availability,"st result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	20; Gap extension cost 	3; Zdrop 	40; Threads 	28; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:VTML40.out,aa:VTML40.out; Sensitivity 	12; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:2100,mask,mask,2100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['mask'],['mask']
Availability,std::bad_alloc error with convertalis,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:15,error,error,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['error'],['error']
Availability,"stive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/tmp/17728638439372299279/first /data/ct/tmp/17728638439372299279/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . prefilter /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/query_seqs_split /data/ct/datenbank/silva_mmseqs/silva.idx /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 18G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; ^C===============> ] 25.00% 2.00K eta 5m 1s . **Runs of Intel computer**; [kabru@bwp-cfdmain test]$ mmseqs taxonomy testdb ~/datenbank/silvadb testx_result tmp; taxonomy testdb /home/kabru/datenbank/silvadb testx_result tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy outp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:3784,mask,mask,3784,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"t 	1; Threads 	48; Verbosity 	3. Init data structures...; Compute score, coverage and sequence id.; Using 1 threads.; Query database type: Profile; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; Time for merging files: 0h 0m 0s 8ms. All sequences processed. 952 alignments calculated.; 258 sequence pairs passed the thresholds (0.271008 of overall calculated).; 258 hits per query sequence.; Time for processing: 0h 0m 15s 798ms; Program call:; mergedbs tmpC/10139724895635470572/profile_0 tmpC/10139724895635470572/aln_new tmpC/10139724895635470572/aln_0 tmpC/10139724895635470572/aln_1 . MMseqs Version:	GITDIR-NOTFOUND; Merge prefixes	; Verbosity 	3. Merging the results to tmpC/10139724895635470572/aln_new; Done; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 23ms; Program call:; result2profile tmpC/10139724895635470572/profile_0 genes.db tmpC/10139724895635470572/aln_0 tmpC/10139724895635470572/profile_1 --sub-mat blosum62.out --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --omit-consensus 0 --no-preload 1 --gap-open 11 --gap-extend 1 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Mask profile 	1; Profile e-value threshold 	0.1; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	0; Pseudo count b 	1.5; Omit Consensus 	false; No preload 	true; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Start computing profiles.; Query database type: Profile; Target database type: Aminoacid; Time for merging files: 0h 0m 0s 112ms; Time for merging files: 0h 0m 0s 7ms. Done.; Time for processing: 0h 0m 16s 74ms; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:87515,mask,mask-profile,87515,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['mask'],['mask-profile']
Availability,"t 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	384; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:2611,Mask,Mask,2611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['Mask'],['Mask']
Availability,"t 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; Time for merging to pref: 0h 0m 0s 6ms; Time f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:2907,mask,mask-lower-case,2907,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['mask'],['mask-lower-case']
Availability,"t 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 63437 Segmentation fault $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:3912,Mask,Mask,3912,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,7,"['Error', 'Mask', 'error', 'fault']","['Error', 'Mask', 'error', 'fault']"
Availability,"t fine. ; Both the complete call for the search workflow ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; as well as the explicit call for the prefilter module only ./mmseqs prefilter ""query"" ""target"" ""result"" are running as expected. ## Current Behavior; Using bigger files for query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Di",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:1093,fault,fault,1093,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['fault'],['fault']
Availability,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/477:1301,mask,mask,1301,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477,4,"['Mask', 'mask']","['Mask', 'mask', 'mask-lower-case']"
Availability,"t k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:4929,mask,mask,4929,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"t length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/478:1442,Mask,Mask,1442,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478,2,['Mask'],['Mask']
Availability,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimate",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:26512,mask,mask,26512,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:5270,mask,mask,5270,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,52,['mask'],"['mask', 'mask-lower-case']"
Availability,"t,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 1 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 4 . Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 19",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:3674,mask,mask,3674,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,2,['mask'],"['mask', 'mask-prob']"
Availability,"t3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa; result2msa /hdd/mmtestoutput3/mmseqs_files/in.mmdb /hdd/humanref/jhhutargetDB /hdd/mmtestoutput3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 	0.001; Allow deletions 	false; Add internal id. 	false; Compositional bias 	1; Filter MSA 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Threads 	4; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit consensus 	false; Skip query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Start computing multiple sequence alignments.; Query database size: 11 type: Aminoacid; Target database size: 20667 type: Aminoacid; [> ] 0.00% 1 eta [======> ] 10.00% 2 etaSegmentation fault (core dumped). Windows 7 static compile (different db/query file):. F:\>mmseqs result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkou; t2/mmseqs_files/out.mm_search plsworkout2/mmseqs_files/out.mm_msa; result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkout2/mmseqs_f; iles/out.mm_search plsworkout2/mmseqs_files/out.mm_msa. MMseqs Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 0.001; Allow deletions false; Add internal id. false; Compositional bias 1; Filter MSA 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Threads 8; Compress MSA false; Summarize headers false; Summary prefix cl; Omit consensus false; Skip query false; Gap open cost 11; Gap extension cost 1; Compressed 0; Verbosity 3. Start computing multiple sequence alignments.; Query database size: 19 type: Aminoacid; Ta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229:1727,fault,fault,1727,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229,1,['fault'],['fault']
Availability,"t; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. indexdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:2679,mask,mask,2679,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526,1,['mask'],['mask']
Availability,"ta.gz`. Decompressed with gunzip, then ran createdb:; `mmseqs createdb uniref90.fasta uniref90`; ; Augmented with taxonomic information (used -db-mode 0 because createbintaxonomy kept crashing as well):; `mmseqs createtaxdb uniref90 tmp --tax-db-mode 0`. Created database for my query sequences:; `mmseqs createdb KLEB_PO07_megahit.fasta KLEB_PO07_megahitDB`. Ran mmseqs taxonomy on cluster with slurm script:; ```; #!/usr/bin/env bash. #SBATCH --job-name=KLEB_PO07_mmseqs; #SBATCH --cpus-per-task=32; #SBATCH --mem=150G; #SBATCH --time=0-3:00; #SBATCH --output=KLEB_PO07_mmseqs.log; #SBATCH --error=KLEB_PO07_mmseqs.err. module load mmseqs2/15-6f452; taxDB=/home/sdwork/scratch/metagenomics/uniref_db/uniref90. mmseqs taxonomy KLEB_PO07_megahitDB $taxDB KLEB_PO07_megahit_result tmp; ```. ## MMseqs Output (for bugs); [Full output can be found in this gist.](https://gist.github.com/sean-workman/531e9d5fc73635dee8c000f9da137fe0). I also see this output in my error file:; `tmp/1193166584733320518/tmp_taxonomy/17149912652888480377/tmp_hsp1/10699950925961740214/blastp.sh: line 135: 8379 Bus error (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""`. ## Context; I created metagenomic assemblies using megahit and metaSPAdes. I am trying to get MMseqs2 working to do taxonomic classification. I am running on Digital Research Alliance of Canada clusters. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15-6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Loaded as a module on a cluster.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: Unsure. I ran `lscpu` on a login node and got what is shown below, but the memory and CPUs that I had for the job were specified in the slurm job script shown ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838:1450,error,error,1450,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838,1,['error'],['error']
Availability,"ta/clustered_nr/nr_rep_seq_to_taxid.map; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	20; Verbosity 	3. Download taxdump.tar.gz. 02/01 11:29:59 [NOTICE] Downloading 1 item(s); [#b8b044 0B/0B CN:1 DL:0B] ; 02/01 11:30:01 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#b8b044 51MiB/61MiB(84%) CN:1 DL:10MiB] ; 02/01 11:30:08 [NOTICE] Download complete: tmp/taxdump.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; b8b044|OK | 9.1MiB/s|tmp/taxdump.tar.gz. Status Legend:; (OK):download completed.; Loading nodes file ... Done, got 2550743 nodes; Loading merged file ... Done, added 75930 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```; ## Context; I want to search some query sequences locally against a clustered version of the NR database. I downloaded the clustered database and taxonomy files (nr_cluster_taxid_formatted_final.tsv.gz, nr_rep_seq.fasta.gz) from [here](https://osf.io/tejwd/), which was created as per: https://research.arcadiascience.com/pub/resource-nr-clustering/release/3. I then processed the files like so:. ```; gunzip -c nr_cluster_taxid_formatted_final.tsv.gz | cut -f1,2 > nr_rep_seq_to_taxid.map; mmseqs createdb nr_rep_seq.fasta.gz nr_rep_seq_db; ```. After these completed successfully, I tried to create the taxdb as per the above:. ```; mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; ```. But the job was killed. Questions:; * Was it likely killed because of exhausting my available RAM? ; - If so, is there a way to restrict it during taxdb creation? I tried out `--split-memory-limit 50G` but got `Unrecognized parameter ""--split-memory-limit""`; * Was it killed for a different reason, e.g. disk space?; - The disk the database is stored on has 95 GB free at the moment, and the main db fil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811:1838,down,downloaded,1838,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811,1,['down'],['downloaded']
Availability,"ta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:1159,Mask,Mask,1159,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,2,['Mask'],['Mask']
Availability,"tabase cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [Multiline fasta can not be combined with --createdb-mode 0; We recompute with --createdb-mode 1; Time for merging to input_h: 0h 0m 0s 3ms; Time for merging to input: 0h 0m 0s 3ms; [=======; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 102ms; Create directory tmp/8115150149931881526/clu_tmp; linclust tmp/8115150149931881526/input tmp/8115150149931881526/clu tmp/8115150149931881526/clu_tmp -e 0.001 --min-seq-id 0.4 -c 0.8 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1 . Set cluster mode GREEDY MEM.; kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [==========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:3110,mask,mask,3110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,2,['mask'],"['mask', 'mask-prob']"
Availability,"tabase type: Aminoacid; Time for processing: 0h 12m 9s 179ms; Tmp /export/tmp/MERC/4233864688410091672/clu_tmp folder does not exist or is not a directory.; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:2122,mask,mask,2122,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"tal time: 0h 0m 0s 705ms. Size of the sequence database: 10966; Size of the alignment database: 10966; Number of clusters: 8338. Writing results 0h 0m 0s 47ms; Time for merging to clu_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 815ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step2 -v 3 --subdb-mode 1 . Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 8ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 8338 type: Aminoacid; Estimated memory consumption: 1003M; Target database size: 8338 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 8.34K 0s 514ms; Index table: Masked residues: 3074; Index table: fill; [=================================================================] 8.34K 0s 572ms; Index statistics; Entries: 1408015; DB size: 496 MB; Avg k-mer size: 0.022000; Top 10 k-mers; GPGGTL 37; GLGNGK 26; ALGNGK 23; DLLDLP 21; FDDTDS 20; NGGSLK 17; DLLDMP 17; DVLDMP 17; GEQVAR 16; FDDTDT 16; Time for index table init: 0h 0m 2s 591ms; Process prefiltering step 1 of 1. k-mer similar",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:28764,mask,mask,28764,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,2,['mask'],"['mask', 'mask-prob']"
Availability,"ted like:. >1006013; ATGGAAGCTACGAAGTCGTCGAAACAAAATTGTTGCAACCCGGTTAAGAAACCCGGACCC; GTTTCAATTGATCATGTTCTCTTAGCTCTCCGTGAGACAAGAGAAGAGCGAGATTTACGA; ATCAGGAGCTTATTCAGTTTCTTTGATTCTGAGAATGTTGGTTACTTAGATTGTGCTCAA; ATTGAGAAGGGGTTATGTGCGCTTCAAATCCCAAGTGGGTATAAATACGCTAAGGAGTTG; TTTAGGGTTTGTGATGCGAATAGAGATGGGCGTGTGGATTATCATGAGTTTCGTAGATAT; ATGGATGATAAGGAGCTTGAGCTGTATAGAATCTTTCAAGCTATTGATGTTGAGCATAAT; GGTTGTATTTCTCCTGAGGGACTTTGGGATTCACTCGTTAAAGCTGGGATTGAGATAAAA; GATGAGGAGCTTGCTCGTTTTGTGGAACATGTTGACAAGGACAATGATGGAATCATTATG; TTTGAAGAATGGAGAGATTTTCTTTTGCTGTACCCTCACGAAGCTACCATTGAAAATATA. >1006013 is the taxmony id we got to unique the sequence. i can create the database by: `mmseqs createdb xxx targetDB`. but when try to createindex by `mmseqs createindex targeDB index`; it throws issue:. `Program call:; prot index. MMseqs Version: 	87f530e8aedc0970c8ec16cb2d33b7507d56cf59; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	32000; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	true; Split DB 	0; Split Memory Limit 	0; Threads 	4; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; /db/prot index/orfs --min-length 30 --max-length 98202 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --id-offset 0 --threads 4. MMseqs Version: 	87f530e8aedc0970c8ec16cb2d33b7507d56cf59; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/76:1103,Mask,Mask,1103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/76,1,['Mask'],['Mask']
Availability,"tep$STEP"" ""$TMPPATH/aln_step$STEP"" --min-seq-id 0.9 -c 0.95 --cov-mode 1; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_frag"" ${CLUSTER_FRAG_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_frag.index"" > ""$TMPPATH/order_frag""; mmseqs createsubdb ""$TMPPATH/order_frag"" $INPUT ""$TMPPATH/input_step_redundancy"". # filter redundancy; INPUT=""$TMPPATH/input_step_redundancy""; mmseqs clusthash $INPUT ""$TMPPATH/aln_redundancy"" --min-seq-id 0.9; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_redundancy.index"" > ""$TMPPATH/order_redundancy""; mmseqs createsubdb ""$TMPPATH/order_redundancy"" $INPUT ""$TMPPATH/input_step0"". # go down to 90%; STEP=0; INPUT=""$TMPPATH/input_step0""; # Remove the fragments from the prefilter, in order not to recompute prefilter; mmseqs createsubdb ""$TMPPATH/order_redundancy"" ""$TMPPATH/pref_step_FRAG"" ""$TMPPATH/pref_step_FRAG_filtered""; mmseqs filterdb ""$TMPPATH/pref_step_FRAG_filtered"" ""$TMPPATH/pref_step$STEP"" --filter-file ""$TMPPATH/order_redundancy""; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step1"". # go down to 90% (this step is needed to create big clusters); STEP=1; INPUT=""$TMPPATH/input_step1""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:2787,down,down,2787,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['down'],['down']
Availability,"tep_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 276 0s 28ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 276 0s 5ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 36ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [================================================================] =276 0s 28ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 852ms; align tmpfiles/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:11883,Mask,Masked,11883,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['Mask'],['Masked']
Availability,"ter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 3.5 . Query database size: 2328975 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 146 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 355ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 643ms; Index statistics; Entries: 5077775275; DB size: 38820 MB; Avg k-mer size: 3.967012; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 16s 755ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 146; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2328975; Target db start 1 to 13003941; [=================================================================] 2.33M 2m 23s 577ms. 183.593905 k-mers per position; 20689 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 54469 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 793ms; Time for processing: 0h 5m 46s 599ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:7977,Mask,Masked,7977,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['Mask'],['Masked']
Availability,"ter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 6.0 . Query database size: 2271004 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 294ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 848ms; Index statistics; Entries: 5094244039; DB size: 38915 MB; Avg k-mer size: 3.979878; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 15s 901ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 118; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2271004; Target db start 1 to 13003941; [=================================================================] 2.27M 43m 26s 530ms. 3262.541404 k-mers per position; 476704 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 18145 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 779ms; Time for processing: 0h 46m 49s 482ms; align tmp/9700814981231218113/search_tmp/106276056861700154",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:12186,Mask,Masked,12186,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['Mask'],['Masked']
Availability,"terations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000"". mmseqs search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ```; ## MMseqs Output (for bugs); ### With single-quotation; ```; createdb input.fasta input_script7/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 31ms; Time for merging to qdb: 0h 0m 0s 31ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 145ms; Create directory input_script7/tmp1; search input_script7/qdb uniref30_2302_db input_script7/res input_script7/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000 ; prefilter input_script7/qdb uniref30_2302_db.idx input_script7/tmp1/1006494840762416450/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta input_script5/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 32ms; Time for merging to qdb: 0h 0m 0s 47ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 226ms; Create directory input_script5/tmp1; search input_script5/qdb uniref30_2302_db input_script5/res input_script5/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000 ; prefilter input_script5/qdb uniref30_2302_db.idx input_script5/tmp1/16308606893082150349/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:1756,mask,mask,1756,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,2,['mask'],"['mask', 'mask-prob']"
Availability,"th 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 1.98M 1m 21s 501ms; Time for merging to orfs_aa_h: 0h 2m 11s 439ms; Time for merging to orfs_aa: 0h 2m 30s 736ms; Time for processing: 0h 7m 50s 411ms; prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 310097721 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 18s 71ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 52s 198ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 183",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:6908,mask,mask,6908,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"thanks very much for @milot-mirdita . Could you explain more on my questions, thanks in advance!!!; 1. the python version ""colabfold_search"" is the file ""colabfold/mmseqs/search.py"", yes?. 2. colabfold_search.sh is mostly for Batch searches. The difference of between Batch searches and single query searches.; Batch searches: input a few hundred to thousands of sequences **as one input set**, and get the only 1 msa sequences set. ; single query searches: input 1 sequence or 2 sequences as a pair as one input set, and get the only 1 msa sequences set.; **If we run multiple ""single query searches"" in parallel or in batch, this is not batch searches, yes?**. 3. when I run mmseqs msa server locally, it succees for ticket/msa, but failed for ""ticket/pair"".; could you check the mmseqs log file and give me instructions?; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145675/log-mmseqs-msa-server.log). Input taxonomy database ""/mnt/sdc/colabfold_db/uniref30_2202_db.idx"" is missing files:; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_mapping; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_nodes.dmp; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_names.dmp; ...; 2023/04/04 12:29:49 Execution Error: open /home/qcdong/codes/ColabFold/MsaServer/jobs/3m6olJuvf_TV0UTKJxnGu3V3YnMxyHkkj915xg/pair.a3m: no such file or directory",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670:1223,Error,Error,1223,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670,1,['Error'],['Error']
Availability,"the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:349,error,error,349,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476,2,['error'],['error']
Availability,"the protocol is ok. The error is caused by the incomplete completion of the previous step, because the computer crashed. a seqTaxDB from an existing BLAST database following the protocol:; https://github.com/soedinglab/mmseqs2/wiki#create-a-seqtaxdb-from-an-existing-blast-database",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/566#issuecomment-1140146484:24,error,error,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/566#issuecomment-1140146484,1,['error'],['error']
Availability,the website to download ssu.fna for GTDB doesn't work,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548:15,down,download,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548,1,['down'],['download']
Availability,"then do --split 2 or --split 3, that will bring the memory requirements down to half or a third, at a modest loss of search speed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301119414:72,down,down,72,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301119414,1,['down'],['down']
Availability,"ther, it didn't work out (I don't know if size was the issue, but I was in a hurry), so I split the file in two and clustered each separately (that worked). I then combined two outputs (*rep_seq.fasta) into a single file that I wanted to cluster once more (cca 75 mil sequences). However, it always dies in the same way, although I tried changing memory settings and threads. This file is not bigger than the previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265:955,error,error,955,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265,1,['error'],['error']
Availability,"there must be an error: xx deleted from xx that now is empty, but not assigned to a cluster",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:17,error,error,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['error'],['error']
Availability,"this isn't the correct place for such questions.; I am using mmseqs2 to implement a process similar to that used by [colabfold's mmseqs_search_monomer()](https://github.com/sokrypton/ColabFold/blob/main/colabfold/mmseqs/search.py). ; I have the following process:; 1. First I create a queryDB from a fasta file with many sequences in it. `mmseqs createdb queries.fasta queryDB`; 2. Next I run the `search`, `expandaln`, `align`, and `filterresult` commands pretty much as described in the colabfold code. . The output of the `filterresult` command generates 20 files, in my case the base name is `res_exp_align_filter` and then there are also `res_exp_align_filter.{0..19}`, plus `.dbtype` and `.index` files. . My next step was to generate MSA alignments for each of my query strings. I tried passing the `res_exp_align_filter` file to the result2msa command which works, however this doesn't give the output that I want since I want one MSA file per query sequence. ; Instead I tried the following, I concatenated all the `res_exp_align_filter` files as follows: `cat res_exp_align_filter.{0..19} > res_exp_align_filter.all`. I then used the `res_exp_align_filter.index` file to get the byte offsets for each query and read the appropriate section of the concatenated file. This seems to work, at least insofar that I get what looks like properly aligned sections, with more overlapping targets at the top and less overlapping sequences towards the end. I then write these sections to separate files `./tmp/query`. Finally I try to pass these new files to the `result2msa` command, but then I get the following error:. ```; Input database ""/tmp/query"" has wrong type (Generic); Allowed inputs:; - Alignment; - Prefilter; - Bi-directional prefilter; - Clustering; ```. I'm wondering if there is a simpler way of doing this, and if not why can't I pass the subset of the `res_exp_align_filter` file into the result2msa command even though it has the same structure as the `res_exp_align_filter` file.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/850:1827,error,error,1827,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/850,1,['error'],['error']
Availability,threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Sensitivity 	5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3. Initialising data structures...; Using 40 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1374076390 byte) of total memory (270920568832 byte); Target database: db(Size: 1); Substitution matrices...; Time for init: 0 h 0 m 0s. Query database: /share/input.fasta(size=0); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 188; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 16342; DB Size: 686227020 (byte); Avg Kmer Size: 0.000190541; Top 10 Kmers; 	RHCCAA		1; 	QCICAA		1; 	WSQFAA		1; 	WQPHAA		1; 	HPKLAA		1; 	GHLLAA		1; 	WRPNAA		1; 	PHCQAA		1; 	HRCQAA		1; 	FHNQAA		1; Min Kmer Size: 0; Empty list: 8574,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/41:2391,Mask,Mask,2391,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41,1,['Mask'],['Mask']
Availability,"tide.out -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Index version: 16; Generated by: fcf52600801a73e95fd74068e1bb1afb437d719d; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 209335862 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Segmentation fault (core dumped); Error: Alignment died; Traceback (most recent call last):; File ""/home/x/genomic/alphafold2/venv38alphafold2/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 100, in mmseqs_search; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(metagenomic_db), base.joinpath(""res_env""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 21, in run_mmseqs; subprocess.check_call([mmseqs] + params); File ""/usr/lib/python3.8/subprocess.py"", line 364, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '[PosixPath('/home/x/genomic/mmseqs2/MMseqs2/build/bin/mmseqs'), 'search', PosixPath('results_700_only_456_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:1616,fault,fault,1616,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"tide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 83); Query db start 1 to 20588; Target db start 1 to 207919; ...; ```. ## Context; I'm running this on a cluster with aarch64 (actually A64FX) CPU architecture. The cluster also has limited memory per node -- only 32 GB. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; * Which MMseqs version was used: self compiled; * For self-compiled and Homebrew: : GCC 12.1 ,OpenMPI 4.1.4, CMAKE 3.22. Build command: `cmake -DCMAKE_BUILD_TYPE=RE",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:4852,Mask,Masked,4852,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['Mask'],['Masked']
Availability,"tig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details abou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:4382,mask,mask,4382,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,2,['mask'],"['mask', 'mask-prob']"
Availability,"til.so.1 (0x00002b8052d74000); 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00002b8052f77000); 	/lib64/ld-linux-x86-64.so.2 (0x00002b8050d02000); 	libnuma.so.1 => /lib64/libnuma.so.1 (0x00002b80531b1000); 	libltdl.so.7 => /lib64/libltdl.so.7 (0x00002b80533bd000); Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 8 . MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	8; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false; ```. And this the stderr:. ```; MCW rank 0 bound to socket 0[core 0[hwt 0-1]], socket 0[core 1[hwt 0-1]], socket 0[core 2[hwt 0-1]], socket 0[core 3[hwt 0-1]], socket 0[core 4[hwt 0-1]], socket 0[core 5[hwt 0-1]], socket 0[core 6[hwt 0-1]], socket 0[core 7[hwt 0-1]]: [BB/BB/BB/BB/BB/BB/BB/BB][../../../../../../../..][../../../../../../../..][../../../../../../../..]; + '[' -z /ngs/software/mmseqs/mmseqs-MPI ']'; + '[' 4 -ne 4 ']'; + '[' '!' -f mmseq-testDB ']'; + '[' '!' -f /junk/databases/mmseqs",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230:2884,Mask,Mask,2884,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230,1,['Mask'],['Mask']
Availability,"tion fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:2129,Mask,Mask,2129,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['Mask'],['Mask']
Availability,tion: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Maske,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:31042,Mask,Masked,31042,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,"tity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` error did not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : 1; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:5126,Error,Error,5126,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['Error'],['Error']
Availability,"tmp 	true; MPI runner 	. Set cluster mode SET COVER.; kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 2.20B 2h 9m 12s 463ms; Process file into 17 parts; Generate k-mers list for 1 split; Generate k-mers list for 2 split; Generate k-mers list for 3 split; Generate k-mers list for 4 split; Generate k-mers list for 5 split; Generate k-mers list for 6 split; Generate k-mers list for 7 split; [=================================================================] 2.20B 32m 39s 205ms; Sort kmer 0h 0m 26s 313ms; Sort by rep. sequence 0h 0m 4s 966ms; Generate k-mers list for 8 split; [=====================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:3914,mask,mask-lower-case,3914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['mask'],['mask-lower-case']
Availability,"tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. Error:; ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. ## MMseqs Output (for bugs); ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --al",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/627:1424,error,error,1424,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627,3,"['Error', 'error']","['Error', 'error']"
Availability,"tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provid",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:3998,Mask,Mask,3998,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['Mask'],['Mask']
Availability,"tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Program call:; extractorfs /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036/2495337974437510140/q_orfs --min-length ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651:3920,Mask,Mask,3920,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651,1,['Mask'],['Mask']
Availability,"tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; getData: local id (4294967295) >= db size (184470); Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; getData: local id (4294967295) >= db size (184470); getData: local id (4294967295) >= db size (184470); Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; getData: local id (4294967295) >= db size (184470); Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; getData: local id (4294967295) >= db size (184470); Segmentation fault; Error: Rescore with hamming distance step died; ```. For other metagenome datasets, this version of mmseqs2 seems to be working fine.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537552315:2687,fault,fault,2687,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537552315,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 280714 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 80ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 68ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5s 578ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 280714; Target db start 1 to 69220; [=================================================================] 280.71K 5s 447ms. 0.936617 k-mers per position; 8306 DB matches per sequence; 48 overflows; 0 queries produce too many hits (truncated result); 1271 sequences passed prefiltering per query sequence; 0 median result list length; 248942 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:7026,Mask,Masked,7026,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,1,['Mask'],['Masked']
Availability,"tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15106287 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 73ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 66ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5s 2ms; Hard disk might not have enough free space (1T left).The prefilter result might need up to 39T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15106287; Target db start 1 to 69220; [=================================================================] 15.11M 8m 6s 441ms. 0.965152 k-mers per position; 6491 DB matches per sequence; 5875 overflows; 0 queries produce too many hits (truncated result); 813 sequences passed prefiltering per query sequence; 0 med",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:9089,Mask,Masked,9089,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['Mask'],['Masked']
Availability,"to Reproduce (for bugs); -download gtdb.tar.gz; `mmseqs createdb tardb gtdb`; -execute shell commands in databases.sh to create nodes.dmp, names.dmp, mapping_genomes (these files all seem to be fine); `mmseqs createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file ""tmp/taxonomy/mapping_genomes"" --tax-mapping-mode 1`. ## MMseqs Output (for bugs); -no errors or warnings; ```; createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file tmp/taxonomy/mapping_genomes --tax-mapping-mode 1 . MMseqs Version: 	14.7e284; NCBI tax dump directory	tmp/taxonomy; Taxonomy mapping file 	tmp/taxonomy/mapping_genomes; Taxonomy mapping mode 	1; Taxonomy db mode 	1; Threads 	28; Verbosity 	3; ```. if I understand correctly, the gtdb.lookup file should have 3 columns: proteinNumber (0.. 256163114), proteinID, sourceGenomeNumber : ; ```; 0 NZ_CP009512.1_1 1; 1 NZ_CP009512.1_33 1; 2 NZ_CP009512.1_65 1; 3 NZ_CP009512.1_97 1; 4 NZ_CP009512.1_129 1; 5 NZ_CP009512.1_161 1; 6 NZ_CP009512.1_193 1; 7 NZ_CP009512.1_225 1; 8 NZ_CP009512.1_257 1; 9 NZ_CP009512.1_289 1; 10 NZ_CP009512.1_321 1; ```; however, my gtdb.lookup file has entries from different genomes pointing to the same source genome number. e.g. ; ```; 0 NZ_CP009512.1_1 1; 100 NZ_CP009512.1_3201 1; 101 NZ_CP009512.1_3233 1; 102180795 NZ_JAAOIZ010000001.1_5 1 #should point to source genome 65537; 102180796 NZ_JAAOIZ010000001.1_37 1 #should point to source genome 65537; 102181002 JAJXZV010000318.1_2 2 #should point to source genome 65538; 102181003 JAJXZV010000021.1_4 2 #should point to source genome 65538; 104066383 NC_007181.1_8 2; 104066384 NC_007181.1_40 2; ```; the highest source genome number found in the gtdb.lookup file is 65535, and then it seems to start over at 1 duplicating ids...?. ## Your Environment; MMseqs2 Version: 14.7e284; tried with both latest binary download and conda install; Linux my.local 3.10.0-1160.76.1.el7.x86_64 #1 SMP Wed Aug 10 16:21:17 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729:2172,down,download,2172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729,1,['down'],['download']
Availability,"to Reproduce (for bugs); Run an easy-search. Specift an e-value threshold < 1E-45; ; ## MMseqs Output (for bugs); ```; MMseqs Version: 12.113e3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Slice search mode false; Strand selection 1; Disk space limit 0; MPI runner; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/379:1729,Mask,Mask,1729,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379,2,['Mask'],['Mask']
Availability,"to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 221 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 221 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 221 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 221 0s 17ms; Index statistics; Entries: 1337; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 985ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 221; Target db start 1 to 221; [=================================================================] 100.00% 221 0s 31ms. 190.836300 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 644ms; align tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//5385989",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:20102,Mask,Masked,20102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['Mask'],['Masked']
Availability,"total memory required. Order of magnitude suffices can be passed to --split-memory-limit, such as 10G for ten gigabyte or 1T for one terabyte of RAM. ...so I'm using `--split-memory-limit` with 80% of the RAM provided for the qsub job. However, I always get the error:. ```; search --threads 8 -e 1e-3 --max-accept 1 --max-seqs 100 -s 6 --num-iterations 2 --split 0 --split-memory-limit 160G /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/hits_seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_TMP09. MMseqs Version: 	11.e1a1c; E-value threshold 	0.001; Max accept 	1; Threads 	8; Sensitivity 	6; Max results per query 	100; Split database 	0; Split memory limit 	160G; Search iterations 	2. Failed to mmap memory dataSize=321859477504 File=/ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db.idx. Error 12.; ```. Even if I reduce `--split-memory-limit` to 50% or just 20% of the total memory provided for the qsub job, the job still dies with the same error. Maybe I'm not understanding or using `--split-memory-limit` correctly??. I'm using UniRef90 as the db. If I use 336G for the job mem limit, then the `mmseq search` job runs without an error. . ## Steps to Reproduce (for bugs). `mmseqs search` on UniRef90 to provide a large RAM requirement for the job. . ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338:1317,Error,Error,1317,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338,1,['Error'],['Error']
Availability,"tput/tmp/5351426679731834765/seq_wrong_assigned_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 26229 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34414 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 34.41K 1s 394ms; Index table: Masked residues: 8741; Index table: fill; [=================================================================] 34.41K 1s 378ms; Index statistics; Entries: 6295744; DB size: 524 MB; Avg k-mer size: 0.098371; Top 10 k-mers; DVLDMP 2320; PDVMRM 1368; DRQVAY 1181; PFPEAR 738; MPLGAT 728; MPMGAT 703; GQQVAR 620; ADYTFS 597; LTFLYV 568; VLLALS 518; Time for index table init: 0h 0m 4s 142ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 26229; Target db start 1 to 34414; [=================================================================] 26.23K 1m 58s 7ms. 775.834912 k-mers per position; 60277 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 193 sequences passed prefiltering per query sequence; 200 median result list length; 0 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 56ms; Time for processing: 0h 2m 5s 612ms; swapdb ./mmseqs_output/tmp/5351426679731834",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:38402,Mask,Masked,38402,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['Mask'],['Masked']
Availability,truct initial order.; .; Add missing connections.; .; Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 18417; Size of the alignment database: 18417; Number of clusters: 16967; Program call:; /tmp/clu//9559457551393989073/clu_step1 /tmp/clu//9559457551393989073/input_step1 /tmp/clu//9559457551393989073/input_step2 . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/clu//9559457551393989073/input_step2; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/clu//9559457551393989073/input_step2 /tmp/clu//9559457551393989073/input_step2 /tmp/clu//9559457551393989073/pref_step2 --sub-mat blosum62.out -s 6 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3. Initialising data structures...; Using 36 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1079694853 byte) of total memory (365681509171 byte); Target database: /tmp/clu//9559457551393989073/input_step2(S,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:44058,mask,mask,44058,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['mask'],['mask']
Availability,"true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/test folder does not exist or is not a directory.; Created dir /tmp/test; Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panproteome.db /tmp/test/9465698490903227639/clu_redundancy /tmp/test/9465698490903227639/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	fal",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:2430,mask,mask,2430,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['mask'],['mask']
Availability,"tutorial](https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-hhblits-database). ```; #!/usr/bin/env bash. BASE=""subset""; FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s 7.5 &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e 0.00001 &>> ${FILELOG}. echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; cstranslate -i ${MMSEQMSA} -o ${MMSEQMSA}_cs219 \; -A /home/linuxbrew/anaconda3/data/cs219.lib \; -D /home/linuxbrew/anaconda3/data/context_data.lib \; -x 0.3 -c 4 -I ca3m &>> ${FILELOG}; ```; It only fails on cstranslate with this error:; ```; ERROR: Unable to read input file 'subsetMSA'!; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ...; ```. I'm attaching the the [sequence](https://github.com/soedinglab/MMseqs2/files/3095328/subset.fa.txt), [commands file (source)](https://github.com/soedinglab/MMseqs2/files/3095327/source.sh.txt) and [log file](https://github.com/soedinglab/MMseqs2/files/3095326/job.log.txt). Added "".txt"" to upload easily. I really appreciate any help to debug this error. Thanks in advance.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503:1267,echo,echo,1267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503,4,"['ERROR', 'echo', 'error']","['ERROR', 'echo', 'error']"
Availability,"txt). It should also be noted that if --max-seq-len is used in createdb to split some of the input sequences, the createindex does not fails!. ## Steps to Reproduce (for bugs); mmseqs createdb korarchaeum_cryptofilum kora_db; mmseqs createindex kora_db /tmp/. ## MMseqs Output (for bugs); createdb call:; ```; Program call:; ./korarchaeum_cryptofilum ./kora_db -v 3 . MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 9ms>; ```. createindex call:; ```; Program call:; ./kora_db ./tmp/ -v 3. MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	40; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; ./kora_db ./kora_db --sub-mat blosum62.out -k 0 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --split 0 --split-memory-limit 0 --threads 40 -v 3. MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	40; Verbosity 	3. Substitut",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:1391,Mask,Mask,1391,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['Mask'],['Mask']
Availability,ty	3. Start writing to file /tmp/clu//9559457551393989073/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/clu//9559457551393989073/input_step_redundancy /tmp/clu//9559457551393989073/input_step_redundancy /tmp/clu//9559457551393989073/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 0 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3. Initialising data structures...; Using 36 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1100935225 byte) of total memory (365681509171 byte); Target database: /tmp/clu//9559457551393989073/input_step_redundancy(Size: 23030); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: /tmp/clu//9559457551393989073/input_step_redundancy(size=23030); Process prefiltering step 1 of 1. Index table: counting k-mers...; ..; Index table: Masked residues: 81271; Index table: fill...; ..; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 848571; DB Size: 517091426 (byte); Avg Kmer Size: 0.013258,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:34101,Mask,Mask,34101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Mask']
Availability,ty	3. Start writing to file /tmp/test/9465698490903227639/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 0 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Initialising data structures...; Using 10 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1094599205 byte) of total memory (365681509171 byte); Target database: /tmp/test/9465698490903227639/input_step_redundancy(Size: 27782); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 1s. Query database: /tmp/test/9465698490903227639/input_step_redundancy(size=27782); Process prefiltering step 1 of 1. Index table: counting k-mers...; ..; Index table: Masked residues: 266508; Index table: fill...; ..; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 1182627; DB Size: 519095762 (byte); Avg Kmer Size: 0.0184,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:14458,Mask,Mask,14458,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Mask']
Availability,"ty to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:2673,mask,mask,2673,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"uDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 ; --split-memory-limit 500; linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 500; MMseqs Version: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 16; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1e-10; Seq. id. threshold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:1602,Mask,Mask,1602,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,2,['Mask'],['Mask']
Availability,"ubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 -v 3 --subdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 3.5 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 6712 type: Aminoacid; Estimated memory consumption: 998M; Target database size: 6712 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 6.71K 0s 98ms ; Index table: Masked residues: 74049; Index table: fill; [=================================================================] 100.00% 6.71K 0s 81ms ; Index statistics; Entries: 2455512; DB size: 502 MB; Avg k-mer size: 0.038367; Top 10 k-mers; IHDKNI 28; GPGGTL 17; LGGFVY 14; GQQVAR 10; SGQQAI 9; RDKELL 9; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; Time for index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6712; Target db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:21493,mask,mask-lower-case,21493,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['mask'],['mask-lower-case']
Availability,"ubstitution matrix aa:blosum62.out,nucl:nucleotide.out ; Add backtrace false; Alignment mode 3 ; Alignment mode 0; Allow wrapped scoring false ; E-value threshold 1e-05; Seq. id. threshold 0 ; Min alignment length 0; Seq. id. mode 0 ; Alternative alignments 0; Coverage threshold 0 ; Coverage mode 0; Max sequence length 65535 ; Compositional bias 1; Compositional bias 1 ; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800 ; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 16; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 1000000; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1 ; Profile E-value threshold 0.001 ; Global sequence weighting false ; Allow deletions false ; Filter MSA 1 ; Use filter only at N seqs 0 ; Maximum seq. id. threshold 0.9 ; Minimum seq. id. 0.0 ; Minimum score per column -20 ; Minimum coverage 0 ; Select N most diverse seqs 1000 ; Pseudo count mode 0 ; Min codons in orf 30 ; Max codons in length 32734 ; Max orf gaps 2147483647 ; Contig start mode 2 ; Contig end mode 2 ; Orf start mode 1 ; Forward frames 1,2,3 ; Reverse frames 1,2,3 ; Translation table 1 ; Translate orf 0 ; Use all table starts false ; Offset of numeric ids 0 ; Create lookup 0 ; Add orf stop false ; Ov",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/774:1718,Mask,Mask,1718,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/774,2,['Mask'],['Mask']
Availability,"ubstitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 40; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:1694,Mask,Mask,1694,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,2,['Mask'],['Mask']
Availability,"ubstitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; [=================================================================Segmentation fault; Error: Create profile died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * Which MMseqs version was used:Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server sp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:6181,mask,mask-profile,6181,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['mask'],['mask-profile']
Availability,"ueryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Str",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:1233,Mask,Mask,1233,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,4,['Mask'],['Mask']
Availability,ues: 0; Index table: counting k-mers; Index table: counting k-mers; [=[=================================================================] 2 0s 21ms; Index table: Masked residues: 0; ================================================================[=================================================================] 2 0s 28ms; [=================================================================] 2 0s 18ms; Index table: Masked residues: 0; ] 2 0s 28ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 22ms; [=================================================================] 2 0s 72ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 138ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: fill; [=================================================================] 2 0s 15ms; [=================================================================] 2 0s 44ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 19ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: fill; [=================================================================] 2 0s 21ms; Index table: fill; Index table: fill; [=================================================================] 2 0s 0ms; [=================================================================] 2 0s 47ms; Index table: fill; [=================================================================] 2 0s 12ms; Index tabl,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:35482,Mask,Masked,35482,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['Mask'],['Masked']
Availability,"ugs); Mseqs Version: 15.6f452; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; !!! cut the part here to make it smaller !!!; 76 Mio. sequences processed; Time for merging to uniref90-DB-wwmj_h: 0h 0m 28s 629ms; Time for merging to uniref90-DB-wwmj: 0h 0m 52s 227ms; Database type: Aminoacid; Time for processing: 0h 8m 25s 481ms. cluster uniref90-DB-wwmj uniref90-DB-wwmj_clu tmp/ --cov-mode 2 -c 0.8 --min-seq-id 0.9 . MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 2; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 64; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:1774,Mask,Mask,1774,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,2,['Mask'],['Mask']
Availability,"ugs); install the latest version (MMseqs2 Release 14-7e284, 13 Oct 2022, precompiled AVX2) in /opt and run as shown in the help:. mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir. ## MMseqs Output (for bugs). ```; mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir; Create directory /tmp/mydir; easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files true; Force restart with latest tmp fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:1711,Mask,Mask,1711,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['Mask'],['Mask']
Availability,"ul:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The fai",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:3976,mask,mask,3976,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"ult /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. MMseqs2 Version: 14.7e284; Statically-compiled. Use a compute node using the following SLURM reservation: ""srun -p fast --exclusive --pty bash"". Compute node has 54 cores and 256 Go RAM; Operating System: CentOS Linux 7 (Core); CPE OS Name: cpe:/o:centos:centos:7; Kernel: Linux 3.10.0-1160.6.1.el7.x86_64; Architecture: x86-64; AVX2/SSE = yes for both",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/728:5465,Mask,Masked,5465,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728,3,"['Error', 'Mask']","['Error', 'Masked']"
Availability,"um seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Force restart using the latest tmp false; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile.idx tmp/6822607060114486044/pref --sub-mat blosum62.out --seed-sub-mat VTML80.out -s 7.5 -k 6 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 --compressed 0 -v 3 . Initialising data structures...; Using 10 threads.; Substitution matrices...; Substitution matrices...; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1064365435 byte) of total memory (181308646195 byte); Target database: pfam_profile.idx(Size: 17772); Query database type: Aminoacid; Target database type: Profile; Time for init: 0h 4m 18s 41ms; Query database: pbps.neighbors.DB(size=1364570); Process prefiltering step 1 of 1. k-mer similarity threshold: 90; k-mer match probability: 0. Star",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:2452,mask,mask,2452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"um62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	4; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/728:2055,Mask,Mask,2055,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728,2,['Mask'],['Mask']
Availability,"um62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:1827,Mask,Mask,1827,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,2,['Mask'],['Mask']
Availability,"um62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:2602,Mask,Mask,2602,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,2,['Mask'],['Mask']
Availability,"umeric ids 0; Compressed 0; Verbosity 3. Converting sequences; !!! cut the part here to make it smaller !!!; 76 Mio. sequences processed; Time for merging to uniref90-DB-wwmj_h: 0h 0m 28s 629ms; Time for merging to uniref90-DB-wwmj: 0h 0m 52s 227ms; Database type: Aminoacid; Time for processing: 0h 8m 25s 481ms. cluster uniref90-DB-wwmj uniref90-DB-wwmj_clu tmp/ --cov-mode 2 -c 0.8 --min-seq-id 0.9 . MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 2; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 64; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:1822,Mask,Mask,1822,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['Mask'],['Mask']
Availability,"undancy""; mmseqs createsubdb ""$TMPPATH/order_redundancy"" $INPUT ""$TMPPATH/input_step0"". # go down to 90%; STEP=0; INPUT=""$TMPPATH/input_step0""; # Remove the fragments from the prefilter, in order not to recompute prefilter; mmseqs createsubdb ""$TMPPATH/order_redundancy"" ""$TMPPATH/pref_step_FRAG"" ""$TMPPATH/pref_step_FRAG_filtered""; mmseqs filterdb ""$TMPPATH/pref_step_FRAG_filtered"" ""$TMPPATH/pref_step$STEP"" --filter-file ""$TMPPATH/order_redundancy""; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step1"". # go down to 90% (this step is needed to create big clusters); STEP=1; INPUT=""$TMPPATH/input_step1""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:3507,down,down,3507,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['down'],['down']
Availability,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:1507,down,download,1507,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555,2,['down'],"['download', 'downloadFile']"
Availability,user guide error and unknown output format,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2:11,error,error,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2,2,['error'],['error']
Availability,"uster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Than",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238:1228,mask,mask,1228,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"uster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:3398,mask,mask,3398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,2,['mask'],"['mask', 'mask-prob']"
Availability,"ut when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result database: CLU_updated; Start writing to clusters.tsv; Invalid database read for database data file=DB_updated_h, database index=DB_updated_h.index; getData: local id (4294967295) >= db size (17); ```. ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272:1177,error,error,1177,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272,1,['error'],['error']
Availability,"ut,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 0; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 32; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 32. Target split mode. Searching through 9 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================] 100.00% 23.11M 27m 25s 83ms; Index table: Masked residues: 122354587; Index table: fill; tmp/17913398511991990568/createindex.sh: line 56: 114573 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; ```; ## Context; Providing context helps us come",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/540:2757,mask,mask,2757,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540,2,['mask'],"['mask', 'mask-prob']"
Availability,"ut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3 -s 4.0. Query database size: 6 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34258 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 34.26K 0s 519ms; Index table: Masked residues: 72412; Index table: fill; [=================================================================] 34.26K 0s 429ms; Index statistics; Entries: 9905952; DB size: 544 MB; Avg k-mer size: 0.154780; Top 10 k-mers; GPGGTL	164; GQQVAR	114; GLGNGK	80; GEGGVV	73; GPGGTT	69; LLDPAL	54; SGGSLR	53; LLGPGK	49; GQQIAR	49; GQQLAR	48; Time for index table init: 0h 0m 1s 840ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 34258; [=================================================================] 6 0s 2ms. 37.492909 k-mers per position; 726 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 3 sequences passed prefiltering per query sequence; 4 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 4ms; Time for processing: 0h 0m 2s 431ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:3367,Mask,Masked,3367,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['Mask'],['Masked']
Availability,"ut_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 222 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 222 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 222 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 222 0s 3ms; Index statistics; Entries: 1342; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 970ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 222; Target db start 1 to 222; [=================================================================] 100.00% 222 0s 52ms. 196.811469 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 11ms; Time for processing: 0h 0m 1s 704ms; align tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//107",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:20267,Mask,Masked,20267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['Mask'],['Masked']
Availability,"v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; * ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:17118,avail,available,17118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['avail'],['available']
Availability,"value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036 --sub-mat blosum62.out -s 2 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 -v 3 --rescore-mode 2 --filter-hits 0 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 1 --global-alignment 0 --min-length 1 --max-length 2147483647 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --start-sens 4 --sens-steps 1 --remove-tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Inclu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:2436,mask,mask,2436,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['mask'],['mask']
Availability,"value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036 --sub-mat blosum62.out -s 2 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 -v 3 --rescore-mode 2 --filter-hits 0 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 1 --global-alignment 0 --min-length 1 --max-length 2147483647 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --start-sens 4 --sens-steps 1 --remove-tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Inclu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651:2358,mask,mask,2358,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651,1,['mask'],['mask']
Availability,"verhead of building the index table on the fly. Please cite:; Steinegger, M. & Soding, J. Sensitive protein sequence searching for the analysis of massive data sets. bioRxiv XXXX (2016). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:sequenceDB> <o:indexDB> <tmpDir> [options]. prefilter options default description [value range]; -k 0 k-mer size in the range [6,7] (0: set automatically to optimum); --alph-size 21 alphabet size [2,21] ; --split 0 splits target set in n equally distributed chunks. In default the split is automatically set; --spaced-kmer-mode 1 0: use consecutive positions a k-mers; 1: use spaced k-mers . clustlinear options default description [value range]; -k 0 k-mer size in the range [6,7] (0: set automatically to optimum); --alph-size 21 alphabet size [2,21] . common options default description [value range]; --sub-mat blosum62.out amino acid substitution matrix file ; --max-seq-len 32000 Maximum sequence length [1,32768] ; --threads 32 number of cores used for the computation (uses all cores by default); -v 3 verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. 1 Database paths are required; ```. When I omit the `<o:indexDB> <tmpDir>` parameters in the command line, the createindex command still fails:. ```; -bash-4.2$ mmseqs createindex uniref90.mms --split 8 --threads 8; Program call:; uniref90.mms --split 8 --threads 8 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; Max. sequence length 32000; Split DB 8; Spaced Kmer 1; Threads 8; Verbosity 3. Substitution matrices...; Use kmer size 7 and split 8 using split mode; Index table: counting k-mers...; .WARNING: Sequence (dbKey=10870) contains only ATGC. It might be a nucleotide sequence.; .................................................................................................. 1 Mio. sequences processed; ............................................................................................",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251876135:1392,error,errors,1392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251876135,1,['error'],['errors']
Availability,"vior; i am doing a cluster process on 15 million seq, but i am stuck on rescorediagonal, watch with top command, i find it's not memory's issue since only 8G Ram is used, i use 128 thread and 400G Ram, i believe it's enough for this cluster. The strange thing is -- when i decrease seq num to 7.5 million, it works just fine, i am confused what makes it stuck. ## Current Behavior. mmseqs cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128; cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128 . MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:1051,Mask,Mask,1051,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,2,['Mask'],['Mask']
Availability,"w wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 80G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files true; Report mode 0; Alignment format 0; For",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:3294,Mask,Mask,3294,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Mask'],['Mask']
Availability,"when I run ; mmseqs formatalignment queryDB targetDB resultDB resultDB.2 --format-mode 1 --add-backtrace; mmseqs complaint:. Convert a ffindex alignment database to BLAST tab or SAM flat file.; USAGE: <queryDb> <targetDb> <alignmentDB> <outFile>. Designed and implemented by Martin Steinegger martin.steinegger@mpibpc.mpg.de. Parameter Name Type & Value Description; --format-mode [int: 1] Output format BLAST TAB=0, PAIRWISE=1, or SAM=2 ; -v [int: 3] Verbosity level: 0=NOTHING, 1=ERROR, 2=WARNING, 3=INFO ; Unrecognized parameter --add-backtrace",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-245790663:482,ERROR,ERROR,482,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-245790663,1,['ERROR'],['ERROR']
Availability,"when I run the mmseqs2 to search sequence, I encounter a an error at blastp.sh:. $ mmseqs createdb queryDB.fasta queryDB; $ mmseqs createdb targetDB.fasta targetDB; $ mmseqs createindex targetDB; $ mkdir -p tmp/; $ mmseqs search queryDB targetDB resultDB tmp --use-index. Program call:; queryDB targetDB resultDB tmp --use-index . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:60,error,error,60,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['error'],['error']
Availability,"wing the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:1701,mask,mask,1701,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['mask'],['mask']
Availability,with --mask 0: . `mmseqs cluster ../DB_in/fasta_in_db_HC DB_clu tmp/ --mask 0 --cov-mode 0 --cluster-mode 0 --cluster-reassign 1`. `Alignment format is not supported! ] 0.00% 1 eta -; 31Alignment format is not supported!; 31Error: Clustering step 2 died`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773240865:7,mask,mask,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773240865,2,['mask'],['mask']
Availability,with the latest release (11-e1a1c) I also get the same error reported above:. Clustering mode: Set Cover; [=================================================================] 17.92K 0s 5ms; Sort entries; Find missing connections; Found 16944 new connections.; Reconstruct initial order; Alignment format is not supported!; Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-663085284:55,error,error,55,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-663085284,2,"['Error', 'error']","['Error', 'error']"
Availability,"x 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:3472,Mask,Mask,3472,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,2,['Mask'],['Mask']
Availability,"x 	blosum62.out; > Add backtrace 	true; > Alignment mode 	2; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Seq. Id. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Spaced k-mer pattern 	; > Rescore mode 	0; > Remove hits by seq.id. and coverage 	false; > Sort results 	0; > In substitution scoring mode, performs global alignment along the diagonal	false; > Mask profile 	1; > Profile e-value threshold 	0.1; > Use global sequence weighting 	false; > Filter MSA 	1; > Maximum sequence identity threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	1000; > Omit Consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward Frames 	1,2,3; > Reverse Frames 	1,2,3; > Translation Table 	1; > Use all table starts 	false; > Offset of numeric ids 	0; > Add Orf Stop 	false; > Number search iterations 	3; > Start sensitivity 	4; > Search steps 	1; > Run a seq-profile search in slice mode 	false; > Strand selection 	1; > Disk space limit 	0; > Sets the MPI runner 	; > Remove Temporary Files 	false; > ; > Program call:; > prefilter tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 --sub-mat blosum62.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:1664,Mask,Mask,1664,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['Mask'],['Mask']
Availability,"x and sse) I receive this output. ```; n8942188@lyra03:~/test_mmseqs2> /home/n8942188/various_programs/mmseqs2/bin/mmseqs convertalis mmseqstest_nucl.fasta_QDB mmseqtest_prots.fasta_TDB mmseqtest_SDB mmseqtest_SDB.m8 --threads 1; Program call:; mmseqstest_nucl.fasta_QDB mmseqtest_prots.fasta_TDB mmseqtest_SDB mmseqtest_SDB.m8 --threads 1. MMseqs Version: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; Alignment Format 0; No preload false; Early exit false; Database Output false; Threads 1; Verbosity 3. Query Header file: mmseqstest_nucl.fasta_QDB_h; Use index mmseqstest_nucl.fasta_QDB.sk6; Index version: 5.0.0; Generated by: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; KmerSize: 6; AlphabetSize: 21; Mask: 1; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 1; ScoreMatrix: blosum62.out; Target Header file: mmseqtest_prots.fasta_TDB_h; Use index mmseqtest_prots.fasta_TDB.sk6; Index version: 5.0.0; Generated by: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; KmerSize: 6; AlphabetSize: 21; Mask: 1; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 1; ScoreMatrix: blosum62.out; Alignment database: mmseqtest_SDB; Start writing file to mmseqtest_SDB.m8; Invalid database read for database data file=mmseqstest_nucl.fasta_QDB_h, database index=; ```. All the previous steps seem to work correctly (createdb, createindex, search) and have contents inside their files. For example, running head on the _QDB_h and _TDB_h files return the below result (both _h files are identical since my query is the nucleotide version of the prot sequence). ```; evm.model.utg902.1.8.5abb479e; evm.model.utg902.1.9.5abb479e; evm.model.utg902.1.10.5abb479e; evm.model.utg1004.80; evm.model.utg8847.1_evm.model.utg8847.2.3.5abb479e; evm.model.utg8847.1_evm.model.utg8847.2; evm.model.utg8847.1_evm.model.utg8847.2.5.5abb479e; evm.model.utg1937.4; evm.model.utg12562.19; ```. Head of the mmseqstest_nucl.fasta_QDB_h_index file == . ```; 1 0 32; 2 32 32; 3 64 33; 4 97 23; 5 120 53; 6 173 42; 7 215 53; 8",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994:1241,Mask,Mask,1241,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994,1,['Mask'],['Mask']
Availability,"x reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:2090,Mask,Mask,2090,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['Mask'],['Mask']
Availability,"x reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Exact k-mer matching 0 [49/1999]; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 3; Start sensitivity 4; Search iterations 3 [5/1999]; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space lim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:2307,Mask,Mask,2307,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,1,['Mask'],['Mask']
Availability,"x.7 nrDB.index ; nrDB_h nrDB.idx.10 nrDB.idx.3 nrDB.idx.8 nrDB.lookup; nrDB_h.dbtype nrDB.idx.11 nrDB.idx.4 nrDB.idx.9 nrDB_mapping ; nrDB_h.index nrDB.idx.12 nrDB.idx.5 nrDB.idx.dbtype nrDB.source; nrDB nrDB.idx.0 nrDB.idx.13 nrDB.idx.6 nrDB.idx.index nrDB_taxonomy. ```. I know that this is at least a valid aminoacid database since I an search against it and get hits. However, I cannot use the `taxonomyreport` command on the results since it tells me that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401:1819,down,downloaded,1819,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401,1,['down'],['downloaded']
Availability,"xpected Behaviour; I'm trying to follow the documentation to get a profile output file from an input multiple sequence alignment (MSA) file in protein aligned fasta format, but it is complaining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGK",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:995,Error,Error,995,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['Error'],['Error']
Availability,"xpectedly killed (see mmseqs output section below). ## MMseqs Output (for bugs); ```; cfos@pop-os:/data/clustered_nr$ mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; Create directory tmp; createtaxdb nr_rep_seq_db tmp --tax-mapping-file /data/clustered_nr/nr_rep_seq_to_taxid.map -v 3 . MMseqs Version: 	2fad714b525f1975b62c2d2b5aff28274ad57466; NCBI tax dump directory	; Taxonomy mapping file 	/data/clustered_nr/nr_rep_seq_to_taxid.map; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	20; Verbosity 	3. Download taxdump.tar.gz. 02/01 11:29:59 [NOTICE] Downloading 1 item(s); [#b8b044 0B/0B CN:1 DL:0B] ; 02/01 11:30:01 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#b8b044 51MiB/61MiB(84%) CN:1 DL:10MiB] ; 02/01 11:30:08 [NOTICE] Download complete: tmp/taxdump.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; b8b044|OK | 9.1MiB/s|tmp/taxdump.tar.gz. Status Legend:; (OK):download completed.; Loading nodes file ... Done, got 2550743 nodes; Loading merged file ... Done, added 75930 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```; ## Context; I want to search some query sequences locally against a clustered version of the NR database. I downloaded the clustered database and taxonomy files (nr_cluster_taxid_formatted_final.tsv.gz, nr_rep_seq.fasta.gz) from [here](https://osf.io/tejwd/), which was created as per: https://research.arcadiascience.com/pub/resource-nr-clustering/release/3. I then processed the files like so:. ```; gunzip -c nr_cluster_taxid_formatted_final.tsv.gz | cut -f1,2 > nr_rep_seq_to_taxid.map; mmseqs createdb nr_rep_seq.fasta.gz nr_rep_seq_db; ```. After these completed successfully, I tried to create the taxdb as per the above:. ```; mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811:1351,Down,Download,1351,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811,1,['Down'],['Download']
Availability,"xtendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --in",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2947,mask,mask,2947,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,2,['mask'],"['mask', 'mask-lower-case']"
Availability,y 	3. Start computing profiles.; Query database type: Profile; Target database type: Aminoacid; Time for merging files: 0h 0m 0s 112ms; Time for merging files: 0h 0m 0s 7ms. Done.; Time for processing: 0h 0m 16s 74ms; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635470572/pref_2 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	1000; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Threads 	48; Verbosity 	3. Initialising data structures...; Using 48 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 7 and split 3 using Target split mode.; Needed memory (213441943732 byte) of total memory (243154317312 byte); Target database: genes.db(Size: 135880714); Query database type: Profile; Target database type: Aminoacid; Time for init: 0h 0m 15s 188ms; Query database: tmpC/10139724895635470572/profile_1(size=1); Process prefiltering step 1 of 3. Index table k-mer threshold: 0; Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; ...............................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:89289,Mask,Mask,89289,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,"y 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Sensitivity 	5.7; mmseqs-web-worker_1 | K-mer size 	0; mmseqs-web-worker_1 | K-score 	2147483647; mmseqs-web-worker_1 | Alphabet size 	21; mmseqs-web-worker_1 | Max results per query 	300; mmseqs-web-worker_1 | Previous max results per query; mmseqs-web-worker_1 | Split database 	0; mmseqs-web-worker_1 | Split mode 	2; mmseqs-web-worker_1 | Split memory limit 	0; mmseqs-web-worker_1 | Diagonal scoring 	1; mmseqs-web-worker_1 | Exact k-mer matching 	0; mmseqs-web-worker_1 | Mask residues 	1; mmseqs-web-worker_1 | Mask lower case residues 	0; mmseqs-web-worker_1 | Minimum diagonal score 	15; mmseqs-web-worker_1 | Spaced k-mers 	1; mmseqs-web-worker_1 | Spaced k-mer pattern; mmseqs-web-worker_1 | Local temporary path; mmseqs-web-worker_1 | Rescore mode 	0; mmseqs-web-worker_1 | Remove hits by seq. id. and coverage 	false; mmseqs-web-worker_1 | Sort results 	0; mmseqs-web-worker_1 | Global diagonal rescoring 	false; mmseqs-web-worker_1 | Mask profile 	1; mmseqs-web-worker_1 | Profile e-value threshold 	0.001; mmseqs-web-worker_1 | Use global sequence weighting 	false; mmseqs-web-worker_1 | Filter MSA 	1; mmseqs-web-worker_1 | Maximum seq. id. threshold 	0.9; mmseqs-web-worker_1 | Minimum seq. id. 	0; mmseqs-web-worker_1 | Minimum score per column 	-20; mmseqs-web-worker_1 | Minimum coverage 	0; mmseqs-web-worker_1 | Select N most diverse seqs 	1000; mmseqs-web-worker_1 | Omit consensus 	false; mmseqs-web-worker_1 | Min codons in orf 	30; mmseqs-web-worker_1 | Max codons in length 	32734; mmseqs-web-worker_1 | Max orf gaps 	2147483647; mmseqs-web-worker_1 | Contig start mode 	2; mmseqs-web-worker_1 | Contig end mode 	2; mmseqs-web-worker_1 | Orf start mode 	1; mmseqs-web-worker_1 | Forward frames 	1,2,3; mmseqs-web-worker_1 | Reverse frames 	1,2,3; mmseqs-web-worker_1 | Translation table 	1; mmseqs-web-worker_1 | Use all table starts 	false; mmseqs-web-worker_1 | Offset of numeric ids ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:2947,Mask,Mask,2947,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['Mask'],['Mask']
Availability,"y 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile e-value threshold 0.001; Use global sequence weighting false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 10; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files true; ```. ## Context; I ran 1000 parallel jobs, and there are 20+ failed files while other files have no problems. And for those failed files, there is no error msg if I run them manually. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; `f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; `cmake version 3.10.2`; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; NAME=""Ubuntu""; VERSION=""18.04.3 LTS (Bionic Beaver)""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/239:3100,error,error,3100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239,1,['error'],['error']
Availability,"y-limit 60G; mmseqs createsubdb viral_clu viral_db viral_rep; ```; Then I merged 2 fastq files with _plass_; `plass mergereads ./OUT/8813_paired_1.fastq ./OUT/8813_paired_2.fastq ./OUT/8813_db --threads 10; `; I thought [this was the way](https://github.com/soedinglab/MMseqs2/issues/436) to feed the next steps, 8813_db would be the query in this case. I reasoned since the database of nonredundant proteins is in nucleotide format and the reads created a nucleotide database the search would be between nucleotide. . **I run** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --search-type 3; `. I got this error ; ```; Unrecognized parameter --search-type; Did you mean ""--seed-sub-mat""?; ```. **Or** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --seed-sub-mat nucl`. and I got this message error; ```; It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:1480,error,error,1480,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['error'],['error']
Availability,"y_h: 0h 0m 0s 0ms; Time for merging to query: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 4ms; Create directory tmp_easy_search/6745795380167965363/search_tmp; search tmp_easy_search/6745795380167965363/query target_DB tmp_easy_search/6745795380167965363/result tmp_easy_search/6745795380167965363/search_tmp -a 1 --alignment-mode 3 --threads 96 -s 5.7 --sort-results 0 --remove-tmp-files 0 . prefilter tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 -s 5.7 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/67457953801679",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:5398,mask,mask-lower-case,5398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['mask'],['mask-lower-case']
Availability,"y_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 100.00% 9.78K 0s 59ms ; Time for merging to query_seqs_h: 0h 0m 0s 439ms; Time for merging to query_seqs: 0h 0m 0s 494ms; Time for processing: 0h 0m 2s 117ms; prefilter tmp/3198441352783276465/clu_tmp/13016959338117486175/query_seqs tmp/3198441352783276465/clu_tmp/13016959338117486175/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 5 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3 . Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 1648954 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to cluster a number of gene sequences with an identity of 0.8 and no minimum length for the aligned portion of the genes. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15.6f452; * Which MMseqs versio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:16351,mask,mask-lower-case,16351,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['mask'],['mask-lower-case']
Availability,"ype 1`; or; ` mmseqs cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2`. Both results lead to identical .tsv files. Update: adding `--comp-bias-corr 0` gives similar results. ## MMseqs Output (for bugs). similarity type 1: ; Create directory clu/sim1_tmp; cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers pe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:1577,Mask,Mask,1577,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,2,['Mask'],['Mask']
Availability,"z All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a . ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id.	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3. Compute score, coverage and sequence identity; Query database size: 1233743 type: Nucleotide; Target database size: 1233743 type: Nucleotide; Calculation of alignments; **Segmentation fault**===============================================>] 99.07% 509.65K eta 0s . ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/462:2013,fault,fault,2013,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/462,1,['fault'],['fault']
Availability,"zcat the gzipped fq file before execute mmseqs easy-search change nothing, the error remains the same. ```; easy-search B5177-2-N919D_T1_interleaved.fq pfama_20230914/pfam-a-full B5177-2-N919D_T1.tsv tmp1 --threads 12 --compressed 1 . MMseqs Version: 13.45111; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 12; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:79,error,error,79,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947,1,['error'],['error']
Availability,"ze 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	1; Verbosity 	3. Initialising data structures...; Using 1 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1025282101 byte) of total memory (182764221235 byte); Target database: /tmp//589280515582180421/input_step_redundancy(Size: 1); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 10s. Query database: /tmp//589280515582180421/input_step_redundancy(size=1); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 24; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 17; DB Size: 512000102 (byte); Avg Kmer Size: 2.65625e-07; Top 10 Kmers; 	HYLQFA		1; 	YPSFNA		1; 	YQADPD		1; 	FQDPTF		1; 	AHWGYF		1; 	PNTSAH		1; 	YWGLAK		1; 	WLQYKK		1; 	ANHWQL		1; 	TFAAWL		1; Min Kmer Size: 0; Empty list: 63999983. Time for index table init: 0 h 0 m 2s. 	k-mers per position = 0.354331, k-mer match probability: 2.22507e-308; k-mer similarity threshold: 130; k-mer match probability: 2.22507e-308. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 1. 0 k-mers per position.; 17 DB matches per sequence.; 0 Overflows.; 1 sequences passed prefiltering per query sequence.; Median result list size: 1; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 0 m 12s; Program call:; /tmp//589280515582180",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:14266,Mask,Masked,14266,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['Mask'],['Masked']
Availability,"| ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 1ms; docker-compose-mmseqs-web-worker-1 | Time for merging to alis_pdb_protein_sequence: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 3ms; docker-compose-mmseqs-web-worker-1 | Removing temporary files; docker-compose-mmseqs-web-worker-1 | rmdb /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | 2023/06/12 21:32:54 Process finished gracefully without error; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""GET /ticket/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg HTTP/1.0"" 200 68; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""GET /ticket/type/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg HTTP/1.0"" 200 18; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""POST /tickets HTTP/1.0"" 200 138; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""GET /result/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/0 HTTP/1.0"" 200 161; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""GET /result/queries/q5hCr61",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:10036,error,error,10036,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['error'],['error']
Availability,"﻿Hello,. I am working with mmseqs2, I was asking myself about the order of fasta files when I use the command mmseqs _createdb / cluster_. I observed some little differences if I change the order of fasta sequences on the command _createdb_. Command line :. I used these commands :; ; - _mmseqs createdb --dont-shuffle (true/false) file.faa panproteome.db_. - _export TMP_DIR=$(mktemp -d ) && mmseqs cluster panproteome.db families.db ${TMP_DIR} --min-seq-id 0.8 -c 0.8 --threads 2 --kmer-per-seq 80 --max-seqs 300 && rm -rf ${TMP_DIR}_. - _mmseqs createtsv panproteome.db panproteome.db families.db families.tsv --first-seq-as-repr true_. I use : _MMseqs2 Version: 5.9375b_. I took a dataset (available in the attachment) for an example and I have this result :. results :; 		; 	order 1 :; 		dont-shuffle : false  -> cluster numbers :4296; 		dont-shuffle : true  -> cluster numbers : 4290. 	order 2 :; 		dont-shuffle : false -> cluster numbers : 4297; 		dont-shuffle : true -> cluster numbers : 4298. Is it an expected result to obtain different number of cluster depending on fasta sequence order ?. Attachment : fasta sequences ( 2 different order) and clustering files (families.tsv) for each condition.; [results.tar.gz](https://github.com/soedinglab/MMseqs2/files/2379387/results.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/115:694,avail,available,694,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/115,1,['avail'],['available']
Deployability,	-4	0	-2	1	4	-1; 285	H	-4	-3	-2	-2	-2	-3	9	-4	-2	-4	-3	0	-3	-1	-1	-2	-3	-5	-3	0; 286	G	0	-2	-3	-3	-3	5	-3	-1	-2	-2	-3	-2	-3	-3	-3	-2	-2	2	-3	-3; 287	F	-4	-3	-4	-4	7	-4	-2	-1	-4	-1	-1	-4	-4	-4	-4	-4	-1	-2	7	2; 288	H	0	-2	-3	-2	2	-3	4	1	-2	1	1	-2	-3	1	-2	-2	0	0	-2	0; 289	S	0	-1	-1	-2	-2	0	-2	-3	-1	0	-2	2	-2	-2	-2	3	0	-3	6	-1; 290	M	-3	-2	-4	-3	4	-4	-2	0	-2	2	6	-3	-3	-2	-3	-3	-2	-1	-1	0; 291	A	2	-1	-2	-2	0	1	-2	-2	-1	-2	-2	-1	-2	-2	1	1	0	-2	-2	-2; 292	R	-2	-3	0	-1	-4	2	-2	-4	1	-3	-3	-1	4	-1	4	-2	0	-4	-3	-3; 293	A	2	-1	-3	-3	2	-2	-3	1	-2	1	2	-3	-2	-3	-3	-2	-2	1	-2	-1; 294	L	-3	-1	-4	-4	-1	-4	-4	2	-3	3	2	-4	-3	-3	-3	-3	-2	2	-2	-2; 295	D	-2	-2	4	1	-4	-2	-2	-3	-1	-4	-4	0	6	-1	-2	1	-2	-4	-4	-3; 296	E	0	-2	0	4	-4	-2	-1	-2	0	-3	-2	-1	2	4	-1	-1	-1	0	-3	-2; 297	G	2	-1	-2	-2	-4	5	-3	-3	-2	-4	-3	-1	-2	-3	-3	-1	-2	-3	-3	-3; 298	R	-3	-3	-2	-1	-3	-3	-1	-2	2	0	-1	-1	-2	2	5	-2	-2	-2	-3	-2; 299	Q	0	-2	-1	1	-3	-2	-1	-2	1	-2	-2	-1	-2	4	1	0	0	0	-3	-2; 300	A	3	-1	-3	-2	2	-2	-3	-1	-2	-1	3	-3	-2	-2	-2	-1	-1	0	-2	-1; 301	I	0	4	-2	-2	-2	-3	-2	2	-1	1	-1	1	-2	1	1	-2	-1	1	-2	-2; 302	D	-3	-3	6	3	-4	-3	-1	-4	0	-4	-4	0	-1	-1	1	0	-2	-4	-4	-3; 303	E	-3	-3	2	5	-3	-3	-1	0	1	-3	-3	-1	-1	2	0	-1	-2	-2	-3	-2; 304	A	2	-1	-3	-2	-2	-2	-3	3	-2	0	3	-3	-2	-2	-2	-1	-1	0	-3	-2; 305	A	3	-1	-2	-2	-3	1	-2	-1	-2	-2	-2	-1	-1	-2	-2	1	1	0	-3	-2; 306	A	3	0	-1	-1	-3	-1	-2	-2	-1	-2	-2	-1	-1	-2	-2	3	0	-1	-3	-2; 307	V	1	-1	-3	-3	4	-2	-2	0	-3	-1	-1	-3	-2	-3	-3	-2	-2	3	-1	0; 308	L	-3	-1	-4	-3	0	-4	-3	0	-3	5	3	-4	-3	-3	-3	-3	-2	0	-1	-1; 309	Q	-2	-2	-1	0	-3	4	0	-3	0	-3	-2	0	-1	4	-1	-1	-1	-3	-2	-2; 310	A	2	-1	-1	0	-3	-1	-1	-2	3	-2	-2	-1	-1	0	0	0	-1	-1	-2	-1; 311	H	-2	-3	-1	0	-2	-2	7	-3	0	-2	-1	0	-2	4	0	-1	-1	-3	-1	0; 312	F	-4	-2	-4	-4	7	-3	-1	0	-4	0	0	-3	-4	-4	-3	-3	-2	-1	1	3; 313	G	-1	-2	-1	-2	-3	6	-2	-4	-2	-4	-3	0	-2	-2	-2	0	-2	-3	-1	-3; 314	T	-1	0	-1	-1	-1	-1	-1	0	-1	-1	-1	0	-1	-1	-1	0	5	0	-1	-1. ## Your Environment. * Operating system and version: Ubuntu 22.04.4 LTS; * I'm Using MMseqs2 Version: 15.6f452 installed with bioconda,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/847:21045,install,installed,21045,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/847,1,['install'],['installed']
Deployability,"	1; > Start sensitivity 	4; > sensitivity step size 	1; > Sets the MPI runner 	; > Cluster mode 	0; > Max depth connected component 	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Match sequences by their ID 	false; > ; > Program call:; > DB_trimmed DB_new tmp/removedSeqs tmp/mappingSeqs tmp/newSeqs --threads 4 -v 3 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Match sequences by their ID	false; > Threads 	4; > Verbosity 	3; > ; > ===================================================; > ====== Filter out the new from old sequences ======; > ===================================================; > Program call:; > tmp/newSeqs DB_new tmp/NEWDB.newSeqs ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Start writing to file tmp/NEWDB.newSeqs; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > === Update the old clustering with the new keys ===; > ===================================================; > Program call:; > DB_trimmed_clu tmp/OLDCLUST.mapped --mapping-file tmp/mappingSeqs ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Filter column 	1; > Filter regex 	^.*$; > Positive filter 	true; > Filter file 	; > Mapping file 	tmp/mappingSeqs; > Threads 	4; > Verbosity 	3; > trim the results to one column 	false; > Extract n lines 	0; > Numerical comparison operator 	; > Numerical comparison value 	0; > Sort (increasing:1, decreasing: 2, shuffle: 3) the entries by numerical value	0; > ; > Mapping keys by file tmp/mappingSeqs; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > ======= Extract representative sequences ==========; > ===================================================; > Program call:; > DB_new DB_new tmp/OLDCLUST.mapped tmp/OLDDB.mapped.repSeq --only-rep-seq ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d57",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:2992,Update,Update,2992,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['Update'],['Update']
Deployability,"	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. I don't know if the error is right at the start using _plass_ int this context or with the _map_ command. Could you let me know how to proceed to use paired fastq data with the 'map pipeline'? ; Thanks for your help!. ## Context. After clustering all the proteins found in several samples I am trying to estimate the relative abundance of proteins in a non-redundant database considering the paired read files I have. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; using MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1 or 12 in a cluster ; and the plass-linux-sse41.tar.gz executable for plass. ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:3924,pipeline,pipeline,3924,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['pipeline'],['pipeline']
Deployability," #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM ; i5-3320M CPU with sse3, sse4_1, sse4_2 and avx supported; commands to compile:. * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/349:2243,RELEASE,RELEASE,2243,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349,2,"['RELEASE', 'install']","['RELEASE', 'install']"
Deployability," ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:4890,RELEASE,RELEASE,4890,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['RELEASE'],['RELEASE']
Deployability, (x86)\mmseqs\\bin/mkfifo: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mknod: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mktemp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/more: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mountpoint: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mpstat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mt: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nice: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nmeter: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nohup: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nslookup: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/od: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/patch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pgrep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pidof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ping: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ping6: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pipe_progress: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pkill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/popmaildir: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/printenv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/printf: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ps: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pscan: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pstree: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pwd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pwdx: Permi,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:8506,patch,patch,8506,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['patch'],['patch']
Deployability," --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is enough disk space and memory.; I tried to check the process status, and it is always in the `D` status with 100-200% CPU usage ( based on `htop` outputs).; Not sure how I can speed things up at this stage. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): b768f48f0bd73688b6a68132159a97f7b6310f03; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-complied ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc 6.1 ; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel(R) Xeon(R) CPU E5-2680 v4 @ 2.40GHz, support AVX2/SSE, total 503 G memory (`free -g`); * Operating system and version: Red Hat Enterprise Linux Server release 7.6 (Maipo)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:5624,release,release,5624,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,1,['release'],['release']
Deployability," --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse), and have compiled MMseqs2 from source with the DHAVE_MPI=1 flag when invoking cmake. Thank you for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:4043,install,installations,4043,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['install'],['installations']
Deployability," > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-sc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:5217,RELEASE,RELEASE,5217,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['RELEASE'],['RELEASE']
Deployability," CXX=""$(brew --prefix)/bin/gcc-6"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; -- The CXX compiler identification is GNU 6.2.0; -- Checking whether CXX compiler has -isysroot; -- Checking whether CXX compiler has -isysroot - yes; -- Checking whether CXX compiler supports OSX deployment target flag; -- Checking whether CXX compiler supports OSX deployment target flag - yes; -- Check for working CXX compiler: /usr/local/bin/gcc-6; -- Check for working CXX compiler: /usr/local/bin/gcc-6 -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Sourcedir /Users/moorer/Downloads/mmseqs2; -- Projectdir /Users/moorer/Downloads/mmseqs2; -- Compiler is GNU; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Failed; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Co",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:432,deploy,deployment,432,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,2,['deploy'],['deployment']
Deployability," Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap 	0; Split seq. by length 	true; Database type 	0; Do not shuffle input database 	true; Greedy best hits 	false. Invalid input database and --search-type combination; queryDbType: Aminoacid; targetDbType: Profile; targetSrcDbType: Profile; searchMode: 0; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I should stop updating mmseqs. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; self-compiled: 70d09a2ea505d8b22d80286ae13dd4d9826ea303; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.14.3; CXX=""/usr/local/bin/g++-8"" CC=""/usr/local/bin/gcc-8"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local/biotools ../MMseqs2. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Mac OSX Mojave 10.14.4 (It was working!). * Operating system and version:; As above.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/195:3714,RELEASE,RELEASE,3714,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/195,1,['RELEASE'],['RELEASE']
Deployability," initial order. Add missing connections. Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 1; Size of the alignment database: 1; Number of clusters: 1; Program call:; pan.db /tmp//589280515582180421/clu /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/clu_step0 . MMseqs Version:	GITDIR-NOTFOUND; Threads 	24; Verbosity	3. List amount 2; Clustering step 1...; Clustering step 2...; Writing the results...; Time for merging files: 0 h 0 m 0 s; ...done. ```. ```; Program call:; pan.db pan.db fam.db fam.tsv --first-seq-as-repr true . MMseqs Version: 	GITDIR-NOTFOUND; first sequence as respresentative	true. Query file is pan.db; Data file is fam.db; Start writing file to fam.tsv; Done.; ```. ## Context. These 2 sequences come from a vibro cholerae genome. . ## Your Environment. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): GITDIR-NOTFOUND (corresponds to the last release: 2-23394). * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled using GNU Make 3.81 and cmake version 2.8.12.2. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: self-compiled using GNU Make 3.81 and cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; less /proc/cpuinfo; processor : 0; vendor_id : AuthenticAMD; cpu family : 21; model : 2; model name : AMD Opteron(tm) Processor 6344 ; stepping : 0; cpu MHz : 2599.862; cache size : 2048 KB; physical id : 0; siblings : 12; core id : 0; cpu cores : 6; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext; fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good no",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:18140,release,release,18140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['release'],['release']
Deployability," is an improvement, the situation is still far from ideal. ## Input data; 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). ## Expected behavior; Each protein from my assemblies will align to zero or one representative sequence with identity > 90% and coverage > 90%. Due to heuristics, I would not be surprised if there were a couple of such proteins, but with one standing out in terms of identity %. ## Current behavior. Some of the proteins align to many (more than 100) representative sequences with pident over 90%. ### Default easy-cluster. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 ```. A single protein aligns up to 147 representative sequences with average pident of 97%. ### Cluster reassign. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign```. A single protein aligns up to 164 representative sequences with average pident of 97%. ### Single-step clustering. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering```. A single protein aligns up to 244 representative sequences with average pident of 96%. ## Command to align to representative sequences. ```mmseqs easy-search probe-proteins/probes.faa {cluster_dir}/rep_seq.fasta probes.m8 tmp --min-seq-id 0.9 -c 0.9```. However, the same result was obtained when checking the representative sequences with DIAMOND. Probe proteins are a subset of the assembled proteins from my analysis which mapped to the most original UHGP representative sequences. ## MMseqs2 version used; MMseqs2 Release 14-7e284. ## -. Is there anything else I could do that I am missing to improve these results? Would be grateful for any tips, thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1322374871:2489,Release,Release,2489,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1322374871,1,['Release'],['Release']
Deployability,![image](https://github.com/soedinglab/MMseqs2/assets/8847420/85e21069-5f6c-49ca-a55a-7c98fe77be9a). ## Your Environment; * mmseqs version 15.6f452; * System version; Distributor ID: Ubuntu; Description: Ubuntu 20.04.6 LTS; Release: 20.04; Codename: focal,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/784:224,Release,Release,224,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/784,1,['Release'],['Release']
Deployability,"""MMseqs2 Version: 7e2840992948ee89dcc336522dc98a74fe0adf00"". ## Expected Behavior. mmseqs easy-cluster --help. says that running this command. mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir. I should get two FASTAs and one .tsv. Quoting the help:. examples:; mmseqs easy-cluster examples/DB.fasta result tmp; # Cluster output; # - result_rep_seq.fasta: Representatives; # - result_all_seq.fasta: FASTA-like per cluster; # - result_cluster.tsv: Adjacency list. ## Current Behavior. No FASTA or .tsv is created. See current output:. ls -l /tmp/mydir; total 0; drwxr-xr-x. 2 igregore igregore 120 May 25 01:48 7574787915800795625; lrwxrwxrwx. 1 igregore igregore 19 May 25 01:48 latest -> 7574787915800795625. ## Steps to Reproduce (for bugs); install the latest version (MMseqs2 Release 14-7e284, 13 Oct 2022, precompiled AVX2) in /opt and run as shown in the help:. mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir. ## MMseqs Output (for bugs). ```; mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir; Create directory /tmp/mydir; easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:762,install,install,762,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,2,"['Release', 'install']","['Release', 'install']"
Deployability,"## Context. Hi!. We're currently looking for a replacement for CD-HIT-EST for clustering genes in nucleotide space. We have a few conditions when clustering. The CD-HIT-COMMAND is straightforward:. ```; cd-hit-est -i genes.fa -o cluster.fa -c 0.95 -T 64 -M 0 -G 0 -aS 0.9 -g 1 -r 0 -d 0; ```. Basically, we want to perform greedy clustering at 95% identity and at least 90% of the shorter gene should be aligned. The longest sequence of a cluster should become the representative and a member of a cluster should not align against any other representative with a better score/percid. We have now come up with the following command(s):. ```; mmseqs createdb genes.fa genes.mmseqs.db --dbtype 2 --shuffle 0. mmseqs cluster genes.mmseqs.db genes.mmseqs.cluster tmp --kmer-per-seq-scale 0 --kmer-per-seq 1000 \; -s 4 --max-seq-len 80000 --remove-tmp-files 0 --cluster-mode 2 --min-seq-id 0.95 --threads 64 --cov-mode 1 \; -c 0.9 --spaced-kmer-mode 0 --alignment-mode 3 --cluster-reassign 1; ```. The key parameter seems to be `--spaced-kmer-mode 0` as this prevents very similar sequences being placed in different clusters. as reported by others (#831 #489). Using these parameters the clustering compares quite well against the clusters produced by cd-hit:; ```; mmseqs clusters = 13'471'787; cdhit clusters = 13'640'333; runtime(mmseqs) / runtime(cdhit) = 0.09; Rand Score: 0.99; Adjusted Rand Score: 0.91; V-measure: 0.99; ```. So it seems that mmseqs is slightly overclustering (might be due to local vs global alignment) and the cluster consistency metrics indicate that even the cluster membership (and not only the representatives) seem to be mostly correct. . I would like to get your feedback on the command(s) before I make this our standard (nucleotide) gene clustering pipeline. Do you think there are other parameters that could be tweaked?. ## Your Environment; version: `6f45232ac8daca14e354ae320a4359056ec524c2`; Downloaded static binary from GitHub. Best and thanks,; Hans",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/836:1778,pipeline,pipeline,1778,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/836,1,['pipeline'],['pipeline']
Deployability,"## Context; I am using PHARROKA (available on Github) to annotate bacteriophage genomes. MMseq2 is a required dependency. It was working perfectly on my MacBook Pro purchased in 2011. I recently switched to a new one (MacBook M3-pro) and it is not working anymore (see the above PHARROKA output involving MMseqs). I am very far from being a developer and I am only a self-taught bioinformatician. I am thus seeking help !. I used Brew to install MMseqs, my OS is Mac OS X Sonoma 14.4.1. Thanks !. Nico",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/834:438,install,install,438,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834,1,['install'],['install']
Deployability,"## Context; It appears that the documentation gives only 5 parameters for clusterupdate:; mmseqs clusterupdate oldDB newDB oldDB_clustering outDB tmp. However, from the code, it seems that mmseq2 actually requires 6 input parameters:; mmseqs clusterupdate OLDB NEWDB OLDCLUST NEWMAPDB NEWCLUST TMP_PATH. I am not sure what NEWMAPDB is vs NEWDB, and so I've tried running the code giving a unique name to each. The clustering appears to run, but the tools for generating fasta and tsv results fail (see detail below) . ## Expected Behavior; Looking to generate fasta and tsv results from updated clusters with a new database that contains both the old database and a set of new sequences. . ## Current Behavior; While clustering appears to run, I am not able to successfully generate fasta and tsv files. ; For the fasta, I get output that looks like the following: ; Entry does not contain a header!2509593Entry 4480592Entry ; Entry 1542108 does not contain a header! does not contain a header!4479347 does not contain a header!Entry ; 4477267; Entry ; Entry ; 5003334. For tsv, the tool fails with:; MMseqs Version: 	f3b88f27def72ac5392131b98e079930f3b087c7; first sequence as respresentative	false; Target column 	0; Add Full Header 	false. Query file is x; Data file is x_clu ; Start writing file to x.tsv; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_S_construct null not valid; Aborted. This issue was also brought to the attention of Dr. Söding in a recent email . Thank you, . Irena",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103:587,update,updated,587,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103,1,['update'],['updated']
Deployability,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:102,install,installation,102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,5,"['Release', 'install']","['Release', 'install', 'installation', 'installed']"
Deployability,"## Expected Behavior--. I am clustering NGS sequences with linclust (using the createdb database) from protein fasta files incorporating multiple named barcodes present in the fasta IDs. Each ID consists of a number to which the barcode name is appended (e.g. 689_dog). The expected output of createtsv is two columns, the first consisting of the IDs of the representative cluster member (689_dog), and the second consisting of IDs of the cluster members, including the barcode name (689_dog, 435_owl, 691_rat, etc.). . ## Current Behavior--; ; The first column is OK. The second column TSV output consists only of the numbers (689, 435, 691, etc.). It is essential that I have the barcode name for further processing of tabular formatted cluster information. Your documentation states that unkown ID formats are parsed to include everything before the first white space. This is not the case here. I have tried other delimiters (e.g. :, -) or no delimiters, and in each case the second column lists only the numbers. BTW, the clustering works very well, as assessed by inspection of output fasta or MSA files. ## Your Environment--. MMseqs2 Version: 11.e1a1c. installed from Bioconda. Run on Ubuntu 18.04 under Windows10 WSL1 on a 12-thread processor with 48GB RAM. mmseqs createdb csgtag10.fa csgtagDB; mmseqs linclust csgtagDB csgtagDB_CL DB_clu.tmp --add-self-matches -a 1 --min-seq-id 0.96; mmseqs createtsv csgtagDB csgtagDB_CL csgtagDB_CL_TSV (faulty output). mmseqs createseqfiledb csgtagDB csgtagDB_CL csgtagDB_CL_SEQ; mmseqs result2flat csgtagDB csgtagDB csgtagDB_CL_SEQ csgtagDB_CL_SEQ.fasta (OK output); mmseqs result2msa csgtagDB csgtagDB csgtagDB_CL csgtagDB_CL_MSA (OK output). I hope that this is an easy code fix. mmseqs is great open-source clustering software that can be run efficiently on my desktop. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/319:1161,install,installed,1161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/319,1,['install'],['installed']
Deployability,## Expected Behavior. - indexdb command should process RNA sequences and report k-mers of size 15; - a search with a RNA sequence on this database should finish gracefully. ## Current Behavior. - indexdb on RNA sequences treats them as protein sequence (?) and creates k-mers of size 6; - a search with a RNA sequence on this database results in an error. ## Steps to Reproduce (for bugs). 1. Install v5-2e4efbf of MMseqs2-App; ```; cd /opt/mmseqs; git clone https://github.com/soedinglab/MMseqs2-App.git; cd MMseqs2-App; git checkout v5-2e4efbf; ```; 3. Create `/opt/mmseqs/MMseqs2-App/docker-compose/databases/pdb_rna_sequence.fasta` with some test RNA sequences:; ```; >4QEI_2; GCGCCGCUGGUGUAGUGGUAUCAUGCAAGAUUCCCAUUCUUGCGACCCGGGUUCGAUUCCCGGGCGGCG; >6Q8V_1; GGCGAAGAACCGGGGAGCC; >5DO4_3; GGGAAXAAAGXUGAAGUXXUUAXXX; >1VQL_1; UUGGCUACUAUGCCAGCUGGUGGAUUGCUCGGCUCAGGCGCUGAUGAAGGACGUGCCAAGCUGCGAUAAGCCAUGGGGAGCCGCACGGAGGCGAAGAACCAUGGAUUUCCGAAUGAGAAUCUCUCUAACAAUUGCUUCGCGCAAUGAGGAACCCCGAGAACUGAAACAUCUCAGUAUCGGGAGGAACAGAAAACGCAAUGUGAUGUCGUUAGUAACCGCGAGUGAACGCGAUACAGCCCAAACCGAAGCCCUCACGGGCAAUGUGGUGUCAGGGCUACCUCUCAUCAGCCGACCGUCUCGACGAAGUCUCUUGGAACAGAGCGUGAUACAGGGUGACAACCCCGUACUCGAGACCAGUACGACGUGCGGUAGUGCCAGAGUAGCGGGGGUUGGAUAUCCCUCGCGAAUAACGCAGGCAUCGACUGCGAAGGCUAAACACAACCUGAGACCGAUAGUGAACAAGUAGUGUGAACGAACGCUGCAAAGUACCCUCAGAAGGGAGGCGAAAUAGAGCAUGAAAUCAGUUGGCGAUCGAGCGACAGGGCAUACAAGGUCCCUCGACGAAUGACCGACGCGCGAGCGUCCAGUAAGACUCACGGGAAGCCGAUGUUCUGUCGUACGUUUUGAAAAACGAGCCAGGGAGUGUGUCUGCAUGGCAAGUCUAACCGGAGUAUCCGGGGAGGCACAGGGAAACCGACAUGGCCGCAGGGCUUUGCCCGAGGGCCGCCGUCUUCAAGGGCGGGGAGCCAUGUGGACACGACCCGAAUCCGGACGAUCUACGCAUGGACAAGAUGAAGCGUGCCGAAAGGCACGUGGAAGUCUGUUAGAGUUGGUGUCCUACAAUACCCUCUCGUGAUCUAUGUGUAGGGGUGAAAGGCCCAUCGAGUCCGGCAACAGCUGGUUCCAAUCGAAACAUGUCGAAGCAUGACCUCCGCCGAGGUAGUCUGUGAGGUAGAGCGACCGAUUGGUGUGUCCGCCUCCGAGAGGAGUCGGCACACCUGUCAAACUCCAAACUUACAGACGCCGUUUGACGCGGGGAUUCCGGUGCGCGGGGUAAGCCUGUGUACCAGGAGGGGAACAACCCAGAGAUAGGUUAAGGUCCCCAAGUGUGGAUUAAGUGUAAUCCUCUGAAGGUGGUCUCGAGCCCUAGACAGCCGGGAGGUGAGCUUAGAAG,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:393,Install,Install,393,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['Install'],['Install']
Deployability,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/541:39,update,update,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541,17,"['Release', 'configurat', 'update']","['Release', 'configuration', 'update', 'updated', 'updates']"
Deployability,"## Expected Behavior. Created a `idx` file with `mmseqs createindex`. Input is big, uniref30.; I was expecting the resulting `.idx.index` to show me how large each ""chunk"" in the idx database is... ## Current Behavior. ...however, sizes in .idx.index are truncated to 32-bit. ## Steps to Reproduce (for bugs). I did not create the idx file, I only get to inspect the idx.index afterwards.; So, we have 3 files; ```; 214G uniref30_2302_db.idx; 4 uniref30_2302_db.idx.dbtype; 506 uniref30_2302_db.idx.index; ```; ```; $ cat uniref30_2302_db.idx.index. 0	0	3; 1	4096	49; 2	8192	4331; 3	162806448128	1075201; 4	162419372032	387072001; 5	24576	1016217777; 6	1016246272	1492528074; 7	6803742720	1236666921; 8	16630345728	1431766172; 9	162807525376	3738374247; 10	209495576576	1650065417; 12	228709240832	9; 13	228709244928	9; 14	220025933824	93370172; 15	219735580672	9; 16	219735584768	290347937; 18	99666493440	1236666921; 19	109493096448	250490302; 20	99666493440	1236666921; 21	109493096448	250490302; 22	20480	41; 23	16384	1; 24	152693260288	1016217777; 25	153709481984	119952652; ```. Copy pasta that into LibreOffice or whatever, add up the length column: adds up to only 15 GB ish!. Lets look at key 9 aka `ENTRIES` and the following key 10 aka `ENTRIESOFFSETS`.; Their offsets are `162807525376` and `209495576576`, ie `ENTRIES` should be of size 209495576576-162807525376=46688051200 but `index` says it's 3738374247 ie 10x too small.; Correct size in hex is: ADED32000 and size in index DED31067:; ```; A_DED32000; DED31067; ```; ie. the leading bits got truncated off. The few extra bytes difference are from rounding up to page boundary. On linux. Installed from prebuilt `https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz`. Not sure where and how this happens... the code looks fine. ; There is one 32-bit `length` here https://github.com/soedinglab/MMseqs2/blob/master/src/commons/DBReader.h#L61 but i'm not sure how it would come into play with creating the `.idx.index`.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/868:1655,Install,Installed,1655,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/868,1,['Install'],['Installed']
Deployability,"## Expected Behavior. I am following this tutorial https://github.com/soedinglab/MMseqs2/wiki/Tutorials#metagenomic-pathogen-detection , specially the **'Annotating the catalogue'** section, I followed this to search for Pfam domains in several genomes. The pipeline looks great and worked fine. From the tutorial, I understood column 5 is the e-value, the first 2 are self-explanatory and I am also familiar with the blast output but in this case I got 11 columns and I am not fully sure this tsv is similar. . My question is can I have a list of all the columns so I can parse it accordingly? Thanks ; ; Sorry if this info is elsewhere but I couldn't find it I also searched here the issues but I couldn't find it. ## Current Behavior. I got a tsv file with rows like this. `genome1 PF20143.1 100 0.412 3.484E-23 156 291 298 73 205 259`. ## Steps to Reproduce (for bugs). ## MMseqs Output (for bugs). I followed this tutorial https://github.com/soedinglab/MMseqs2/wiki/Tutorials#metagenomic-pathogen-detection no bug or anomaly in this case. ## Context. Sorry if the question is similar to https://github.com/soedinglab/MMseqs2/issues/434 but I don't even have the list of column headers in this cae. . ## Your Environment. MMseqs2 Version: 13.45111; Ubuntu 20.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/458:258,pipeline,pipeline,258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/458,1,['pipeline'],['pipeline']
Deployability,"## Expected Behavior. I expect `--split 16` for `mmseqs createindex` to generate 16 `*.idx` files. Instead, I'm getting 18:. ```; mmseqs_tax_target/mmseqs_tax.db.idx.0; mmseqs_tax_target/mmseqs_tax.db.idx.1; mmseqs_tax_target/mmseqs_tax.db.idx.10; mmseqs_tax_target/mmseqs_tax.db.idx.11; mmseqs_tax_target/mmseqs_tax.db.idx.12; mmseqs_tax_target/mmseqs_tax.db.idx.13; mmseqs_tax_target/mmseqs_tax.db.idx.14; mmseqs_tax_target/mmseqs_tax.db.idx.15; mmseqs_tax_target/mmseqs_tax.db.idx.16; mmseqs_tax_target/mmseqs_tax.db.idx.17; mmseqs_tax_target/mmseqs_tax.db.idx.2; mmseqs_tax_target/mmseqs_tax.db.idx.3; mmseqs_tax_target/mmseqs_tax.db.idx.4; mmseqs_tax_target/mmseqs_tax.db.idx.5; mmseqs_tax_target/mmseqs_tax.db.idx.6; mmseqs_tax_target/mmseqs_tax.db.idx.7; mmseqs_tax_target/mmseqs_tax.db.idx.8; mmseqs_tax_target/mmseqs_tax.db.idx.9; ```. Pipeline software (eg., snakemake) generally requires keeping track of all (important) output files produced; otherwise, untracked output files can accidentally be deleted, which is is causing some downstream problems (eg., seg-fault errors for `mmseqs taxonomy`). . ## Steps to Reproduce (for bugs). ```; mmseqs createindex --threads 8 --split 16 mmseqs_tax.db mmseqs_tax_target/tmp/; ```. ## Your Environment. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 1_gnu conda-forge; bzip2 1.0.8 h7f98852_4 conda-forge; ca-certificates 2021.1.19 h06a4308_1; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 h0b5b191_1005 conda-forge; libffi 3.3 h58526e2_2 conda-forge; libgcc-ng 9.3.0 h2828fa1_18 conda-forge; libgomp 9.3.0 h2828fa1_18 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; libstdcxx-ng 9.3.0 h6de172a_18 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; mmseqs2 13.45111 h95f258a_1 bioconda; openssl 1.1.1k h7f98852_0 conda-forge; pigz 2.6 h27826a3_0 conda-forge; seqkit 0.15.0 0 bioconda; seqtk 1.3 h5bf99c6_3 bioconda; wget 1.20.1 h22169c7_0 conda-forge; zlib 1.2.11 h516909a_1010 conda-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432:845,Pipeline,Pipeline,845,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432,1,['Pipeline'],['Pipeline']
Deployability,"## Expected Behavior. I expected to run an alignment with `mmseqs search` and then convert the alignment into a custom tabular format with `mmseqs convertalis`. ## Current Behavior. Running `mmseq convertails` fails with `Can not open index file seqDB.index`. ## Steps to Reproduce (for bugs). Download refseq representative microbial genomes:. ```; curl https://www.ncbi.nlm.nih.gov/projects/r_gencoll/ftp_service/nph-gc-ftp-service.cgi/\?HistoryId\=NCID_1_163497961_130.14.18.97_5555_1588507183_4102358427_0MetA0_S_HStore\&QueryKey\=1\&ReleaseType\=RefSeq\&FileType\=GENOME_FASTA\&Flat\=true >genomes.tar; tar xf genomes.tar; ```. Generate the index:. ```; mmseqs createdb ncbi-genomes-2020-05-03/*fna.gz seqDB; mmseqs createindex --threads 48 --search-type 2 seqDB tmp; ```. Align anything, like this holliday junction resolvase:. ```; >1FZR_1|Chains A,B,C,D|ENDONUCLEASE I|Enterobacteria phage T7 (10760); VGAFRSGLEDKVSKQLESKGIKFEYEEWKVPYVIPASNHTYTPDFLLPNGIFVKTKGLWESDDRKKHLLIREQHPELDIRIVFSSSRTKLYKGSPTSYGEFCEKHGIKFADKLIPAEWIKEPKKEVPFDRLKRKGGKK; ```. ```; mmseqs createdb query.fa queryDB; mmseqs search -s 7.5 --max-seqs 2147483647 -a 1 queryDB seqDB alignDB tmp; ```. Now, we try to extract the alignment information:. ```; mmseqs convertalis queryDB seqDB alignDB aln.tab; ... # error; Can not open index file seqDB.index!; ```. ## Context. Why am I missing the .index file? This is a rather large target sequence set, and so I see things are broken up into many smaller index files. But there is not one main .index. ## Your Environment. This is a recent debian system (not sure which version) and I'm running a build of mmseqs that I set up in guix. https://github.com/ekg/guix-genomics/blob/master/mmseqs2.scm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/305:538,Release,ReleaseType,538,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/305,1,['Release'],['ReleaseType']
Deployability,"## Expected Behavior. I want to remove a sequence that is a substring of a longer sequence. Looking at https://github.com/soedinglab/MMseqs2/issues/104. I can use `--min-seq-id 1.0 -c 0.9 --cov-mode 1`. So give a `test` file like:; ```; >a; ATTGCATCGAGCAGCGACGAGCTATCGACGATCGATCGATCGATCGATGCATCGATGCATCGATCGATCGATCGTACGATGCATTTTTACGAGCATCGGA; >b; ATTGCATCGAGCAGCGACGAGCTAT; ```. Where `>b` is a substring of `>a`, and it should be removed. ## Current Behavior. If I run:; ```bash; mmseqs easy-cluster test t_OUT t_tmp --min-seq-id 1 --cov-mode 1 -c 0.9; ```. And check the clusters, I still have two clusters:; ```bash; $ cat t_OUT_cluster.tsv; a a; b b. $ cat t_OUT_rep_seq.fasta; >a; ATTGCATCGAGCAGCGACGAGCTATCGACGATCGATCGATCGATCGATGCATCGATGCATCGATCGATCGATCGTACGATGCATTTTTACGAGCATCGGA; >b; ATTGCATCGAGCAGCGACGAGCTAT; ```. ## Steps to Reproduce (for bugs). You can execute:; ```bash; echo "">a"" > test; echo ""ATTGCATCGAGCAGCGACGAGCTATCGACGATCGATCGATCGATCGATGCATCGATGCATCGATCGATCGATCGTACGATGCATTTTTACGAGCATCGGA"" >> test; echo "">b"" >> test; echo ""ATTGCATCGAGCAGCGACGAGCTAT"" >> test. mmseqs easy-cluster test t_OUT t_tmp --min-seq-id 1 --cov-mode 1 -c 0.9; ```. ## Your Environment. I am using a conda installation on a conda env (on a linux server), with version:; ```; MMseqs Version: 15.6f452; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/794:1199,install,installation,1199,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/794,1,['install'],['installation']
Deployability,## Expected Behavior. I would like to query a transcriptome against NT db and retrieve taxonomy. I generated the NT db according to your docs (with compression enabled). Then I convert my transcriptome to a mmseqs2 db and try to query via:. `mmseqs taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp`. But I get a segfault... UPDATE:; I also get a segfault when executing `search` or `taxonomy` against a pre-compiled database downloaded via `databases`.; UPDATE 2:; Also happens with the latest Docker image.; UPDATE 3:; Tried a very small toy fasta. Also segfaults. ## Current Behavior. Execution of `mmseqs taxonomy` fails with segfault. It tried several versions of mmseqs2 binary:; * Last provided AVX2; * Last provided SSE4; * Self-compiled AVX2; * Older version (Release 12-113e3 - AVX2). -> All fail. ## Steps to Reproduce (for bugs). Create DB for query:; `mmseqs createdb ../transcripts.fasta Transcripts_mmseqs2`; Get taxonomy:; `mmseqs taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp`. These are the files I generated from NT as the target database (does anything look off?):; ```; -rw-rw-r-- 1 user user 129522020819 Apr 14 17:03 nt.fnaDB; -rw-rw-r-- 1 user user 4 Apr 14 17:03 nt.fnaDB.dbtype; -rw-rw-r-- 1 user user 1766255879 Apr 14 17:03 nt.fnaDB.index; -rw-rw-r-- 1 user user 1657557037 Apr 14 17:05 nt.fnaDB.lookup; -rw-rw-r-- 1 user user 9 Apr 14 16:58 nt.fnaDB.source; -rw-rw-r-- 1 user user 7644438631 Apr 14 16:58 nt.fnaDB_h; -rw-rw-r-- 1 user user 4 Apr 14 16:58 nt.fnaDB_h.dbtype; -rw-rw-r-- 1 user user 1609915648 Apr 14 17:03 nt.fnaDB_h.index; -rw-rw-r-- 1 user user 1043159832 Apr 14 17:21 nt.fnaDB_mapping; -rw-rw-r-- 1 user user 640718438 Apr 14 17:17 nt.fnaDB_taxonomy; ```. ## MMseqs Output (some paths & filenames redacted); ```; Create directory tmp; taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp . MMseqs Version: 	19064f27c8d86fcdcd3daad60f6db70f6360f30b; ORF filter 	1; ORF filter e-v,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438:350,UPDATE,UPDATE,350,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438,4,"['Release', 'UPDATE']","['Release', 'UPDATE']"
Deployability,"## Expected Behavior. I'm doing a search of proteins against another protein database using high sensitivity and high number of iterations (`-s 7.5 --num-iterations 4`). ## Current Behavior. I get an error:. ```; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; /scratch/aoh/qwfp/4982015852642442181/blastpgp.sh: line 81: 24849 Aborted (core dumped) $RUNNER ""$MMSEQS"" result2profile ""$QUERYDB"" ""$2"" ""$TMP_PATH/aln_0"" ""$TMP_PATH/profile_$STEP"" ${TMP}; ```. However, when I use `--num-iterations 1`, I don't get the error. ## Steps to Reproduce (for bugs). I took a small sample of sequences to reproduce the error. ```; mmseqs createdb two.fa two.db; mmseqs createdb rest.fa rest.db; mmseqs search two.db rest.db two_v_rest.db /scratch/aoh/qwfp -s 7.5 --num-iterations 4; ```. Here are the files used to recreate the error. [rest.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890804/rest.fa.txt); [two.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890805/two.fa.txt). ## MMseqs Output (for bugs). [mmseqs.err.txt](https://github.com/soedinglab/MMseqs2/files/1890802/mmseqs.err.txt); [mmseqs.out.txt](https://github.com/soedinglab/MMseqs2/files/1890803/mmseqs.out.txt). ## Your Environment. * Git commit used: `2cfdedc95f6a998826f45a7594971751a5e535f3`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * Operating system and version: Fedora release 24 server edition. Here are the outputs from `make` and `cmake` from when I compiled mmseqs like so:. ```; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. 1> cmake.out.txt 2> cmake.err.txt; make -j32 1> make.out.txt 2> make.err.txt; make install 1> make_install.out.txt 2> make_install.err.txt; ```. [mmseqs_build_output.tar.gz](https://github.com/soedinglab/MMseqs2/files/1890845/mmseqs_build_output.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/79:1461,release,release,1461,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79,3,"['RELEASE', 'install', 'release']","['RELEASE', 'install', 'release']"
Deployability,"## Expected Behavior. I'm trying to cluster my large protein sequence file (>45billion entries). I want to know how to set the parameters to cluster as soon as possible, and what kind of computer configuration is needed to run the data. And I also want to know, will the running time still be linear in the case of 30 times the test data set of paper ""Clustering huge protein sequence sets in linear time"". ## Current Behavior; mmseqs linclust $input tmp --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1000G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/623:196,configurat,configuration,196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/623,1,['configurat'],['configuration']
Deployability,"## Expected Behavior. I'm trying to run `clusterupdate`, but I'm running into the error:. ```; diffseqdbs /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/user_genes/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/removedSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/mappingSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs --use-seq-id 0 --threads 80 --compressed 0 -v 3. Time for processing: 0h 0m 0s 170ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 94ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. [=================================================================] 68.86K 0s 267ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 402ms; Time for processing: 0h 0m 0s 980ms; ===================================================; ======== ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333:686,Update,Update,686,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333,1,['Update'],['Update']
Deployability,"## Expected Behavior. Running a cluster analysis in all 128 cores. ## Current Behavior. I'm running a clustering analysis to leave out redundant sequences in a big dataset of approximately 10 millon DNA sequences of lengths varying between 1150 and 1250 bp. The problem I'm having is that it looks like the program is running in a single core instead of the 128 threads I tell the program to use, hence it takes a really long time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:773,Release,Release,773,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['Release'],['Release']
Deployability,"## Expected Behavior. The generation of LCA taxonomy through the following command. . ```sh; mmseqs taxonomy --threads 36 --search-type 3 \; --lca-ranks species:genus:family:order:class:phylum:superkingdom \; data/annotation/putative_genes/nuc_mmseq_DB \; ${dbdir}/gtdb_54kDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```. The taxonomy DB is made through the last release of GTDB without applying a cluster, as discussed in #244 . . The db is as follows: . ```; -rw-r--r-- 1 aauladell bio 54G 28 nov 11:05 gtdb_54kDB; -rw-r--r-- 1 aauladell bio 4 28 nov 11:07 gtdb_54kDB.dbtype; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 3,0G 28 nov 11:00 gtdb_54kDB_h; -rw-r--r-- 1 aauladell bio 4 28 nov 11:01 gtdb_54kDB_h.dbtype; -rw-r--r-- 1 aauladell bio 3,9G 28 nov 11:09 gtdb_54kDB_h.index; -rw-r--r-- 1 aauladell bio 4,3G 28 nov 11:08 gtdb_54kDB.index; -rw-r--r-- 1 aauladell bio 4,6G 28 nov 11:14 gtdb_54kDB.lookup; -rw-r--r-- 1 aauladell bio 2,7G 28 nov 15:43 gtdb_54kDB_mapping; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_merged.dmp; -rw----r-- 1 aauladell bio 1,8M 28 nov 15:43 gtdb_54kDB_names.dmp; -rw----r-- 1 aauladell bio 3,0M 28 nov 15:43 gtdb_54kDB_nodes.dmp; ```. ## Current Behavior. Instead, it raises an `out_of_range` error with a `terminate called recursively` after running for 20 hours. . ## MMseqs Output (for bugs). Raises the following error: ; ```; terminate called recursively; terminate called after throwing an instance of 'std::out_of_range/mnt/lustre/scratch/aauladell/databases/gtdb-r89_54k/tmp//14536420861195881021/taxonomy.sh: line 99: 34258 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```. The output log: ; [mmseqs_lca_log.txt](https://github.com/soedinglab/MMseqs2/files/3955181/mmseqs_lca_log.txt). ## Context; Taxonomic classification of a gene catalog with around 500000 seqs. ; ; ## Your Environment. MMseqs2 Version: 0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Which MMseqs versio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256:363,release,release,363,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256,1,['release'],['release']
Deployability,## Expected Behavior. Using the `--max-seq-length` parameter in `mmseqs linclust` will only return sequences with a length smaller than the setting. ## Current Behavior. Even with the default parameter linclust will return larger sequences (up to 600K nt in my case). Also choosing very large values triggers an integer overflow. ## Steps to Reproduce (for bugs). ```bash; mmseqs linclust foods foods_99 /tmp --cov-mode 0 -c 0.8 --min-seq-id 0.99 --threads 20 --split-memory-limit 250G --max-seq-len 3000000000; ```. ## MMseqs Output (for bugs). ```; ...; Seq. id. threshold 0.99 ; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length -1294967296; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; ...; ```. ## Context. mmseqs version 13.45111. `conda info`:. ```; active environment : metagenomics; active env location : /users/cdiener/miniconda3/envs/metagenomics; shell level : 3; user config file : /users/cdiener/.condarc; populated config files : ; conda version : 4.10.3; conda-build version : not installed; python version : 3.7.8.final.0; virtual packages : __linux=4.15.0=0; __glibc=2.27=0; __unix=0=0; __archspec=1=x86_64; base environment : /users/cdiener/miniconda3 (writable); conda av data dir : /users/cdiener/miniconda3/etc/conda; conda av metadata url : None; channel URLs : https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /users/cdiener/miniconda3/pkgs; /users/cdiener/.conda/pkgs; envs directories : /users/cdiener/miniconda3/envs; /users/cdiener/.conda/envs; platform : linux-64; user-agent : conda/4.10.3 requests/2.26.0 CPython/3.7.8 Linux/4.15.0-121-generic ubuntu/18.04.5 glibc/2.27; UID:GID : 52778:1127; netrc file : None; offline mode : False; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/499:1098,install,installed,1098,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499,1,['install'],['installed']
Deployability,"## Expected Behavior. [Peptide_seqs.fasta.txt](https://github.com/soedinglab/MMseqs2/files/6430389/Peptide_seqs.fasta.txt); I tried to use the attached fasta file to do the easy-cluster using the following command:; mmseqs easy-cluster Peptide_seqs.fasta Peptide_seqs_clu tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. ## Current Behavior; Alignment step died; Linclust died; Search died. ## Steps to Reproduce (for bugs); mmseqs easy-cluster Peptide_seqs.fasta Peptide_seqs_clu tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. ## MMseqs Output (for bugs); [test_MMseqs2.out.txt](https://github.com/soedinglab/MMseqs2/files/6430406/test_MMseqs2.out.txt). ## Your Environment; Install MMseqs2 on an HPC with conda install -c conda-forge -c bioconda mmseqs2, which was successful. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/449:664,Install,Install,664,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449,2,"['Install', 'install']","['Install', 'install']"
Deployability,"## Expected Behavior. `asan` and `msan` should not detect issues. ## Current Behavior. We ran address sanitizer and memory sanitizer on mmseqs2 and they flagged a few issues. #### asan. 1. ODR violation over `binary_name`.; 2. Possible signed overflow in random number generation using unsigned integer types.; 3. '[initialisation order fiasco](https://github.com/google/sanitizers/wiki/AddressSanitizerInitializationOrderFiasco)'. #### msan; 4. String not terminated. ## Fixes. We fixed these issues, respectively, by:. 1. Changing [this line](https://github.com/soedinglab/MMseqs2/blob/master/src/mmseqs.cpp#L5) to:; ```; __attribute__ ((weak)) const char* binary_name = ""mmseqs"";; ```. 2. Applying this patch to [lib/alp/njn_random.cpp](https://github.com/soedinglab/MMseqs2/blob/master/lib/alp/njn_random.cpp):. ```; --- a/lib/alp/njn_random.cpp; +++ b/lib/alp/njn_random.cpp; @@ -50,19 +50,19 @@ namespace {; ; 	const size_t r_off = 12;; ; -	long	state [33] = {; -	static_cast <long> (0xd53f1852), static_cast <long> (0xdfc78b83), static_cast <long> (0x4f256096), static_cast <long> (0xe643df7),; -	static_cast <long> (0x82c359bf), static_cast <long> (0xc7794dfa), static_cast <long> (0xd5e9ffaa), static_cast <long> (0x2c8cb64a),; -	static_cast <long> (0x2f07b334), static_cast <long> (0xad5a7eb5), static_cast <long> (0x96dc0cde), static_cast <long> (0x6fc24589),; -	static_cast <long> (0xa5853646), static_cast <long> (0xe71576e2), static_cast <long> (0xdae30df), static_cast <long> (0xb09ce711),; -	static_cast <long> (0x5e56ef87), static_cast <long> (0x4b4b0082), static_cast <long> (0x6f4f340e), static_cast <long> (0xc5bb17e8),; -	static_cast <long> (0xd788d765), static_cast <long> (0x67498087), static_cast <long> (0x9d7aba26), static_cast <long> (0x261351d4),; -	static_cast <long> (0x411ee7ea), static_cast <long> (0x393a263), static_cast <long> (0x2c5a5835), static_cast <long> (0xc115fcd8),; -	static_cast <long> (0x25e9132c), static_cast <long> (0xd0c6e906), static_cast <long> (0xc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661:706,patch,patch,706,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661,1,['patch'],['patch']
Deployability,"## Expected Behavior. `mmseqs databases eggNOG /mmseqs/eggnog tmp --threads 16` should prepare the eggNOG database. ## Current Behavior. The following error is produced:. ```; databases eggNOG /mmseqs/eggnog tmp --threads 16. MMseqs Version: 	11.e1a1c; Threads 	16. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6440; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6192; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6440 0 --:--:-- --:--:-- --:--:-- 6440; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 161 100 161 0 0 6192 0 --:--:-- --:--:-- --:--:-- 6192; tar2db tmp/4327021748121712355/bacteria tmp/4327021748121712355/archea tmp/4327021748121712355/eukaryota tmp/4327021748121712355/viruses tmp/4327021748121712355/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --compressed 0 -v 3. Cannot open file tmp/4327021748121712355/bacteria; Error: msa2profile died; ```. mmseqs installed via Conda. All other databases can be prepared as expected, just not eggNOG.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/344:1241,install,installed,1241,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/344,1,['install'],['installed']
Deployability,## Expected Behavior. createdb creates a database with no error. ## Current Behavior. createdb stalls and stops reporting once 10962815327 sequences have been added and fails to make progress. Is there a limit to the number of sequences that can be in a database?. ## Steps to Reproduce (for bugs). `/custom_install/installations/mmseqs-nonmpi/MMseqs2/build/bin/mmseqs createdb ../2020-04-19-in.fa/part-* inDB --createdb-mode 1`. ## MMseqs Output (for bugs). ```; MMseqs Version: 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; Database type 0; Shuffle input database true; Createdb mode 1; Offset of numeric ids 0; Compressed 0; Verbosity 3; Shuffle database can not be combined with --createdb-mode 0.; We recompute with --shuffle 0.; Converting sequences; [10962815327] 2h 14m 39s 271ms; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303:316,install,installations,316,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303,1,['install'],['installations']
Deployability,"## Expected Behavior. mmseqs easy-cluster should finish without errors. ## Current Behavior. ```; Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 972066 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1) Download the FASTA at this link https://drive.google.com/file/d/1YPNMj2gL8zNUv9aiRo7dLJawanDWCIb3/view?usp=drive_link; 2) Install mmseqs2 v15.6f452; 3) Run:; ```; mmseqs easy-cluster all_sequences.fasta mmseqs_output tmp --cluster-mode 1 --cluster-reassign 1 --threads 24 -c 0.0 --cov-mode 5 --min-seq-id 0.8; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Create directory tmp; easy-cluster /hps/nobackup/iqbal/dander/amira_panRG_pipeline/Escherichia_coli_panRG_c_0.8_l_0_train_AMR_alleles_removed_mmseqs2/all_sequences.fasta mmseqs_output/mmseqs_output tmp --cluster-mode 1 --cluster-reassign 1 --threads 24 -c 0.0 --cov-mode 5 --min-seq-id 0.8 . MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0; Coverage mode 5; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:714,Install,Install,714,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['Install'],['Install']
Deployability,"## Expected Behavior; A successful install into the conda invironment. ## Current Behavior; Calling `conda install -c conda-forge -c bioconda mmseqs2` is returning:. ```; PackagesNotFoundError: The following packages are not available from current channels:. - mmseqs2. Current channels:. - https://conda.anaconda.org/conda-forge/linux-aarch64; - https://conda.anaconda.org/conda-forge/noarch; - https://conda.anaconda.org/bioconda/linux-aarch64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-aarch64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/r/linux-aarch64; - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. ## Steps to Reproduce (for bugs); 1. Open a terminal and activate your conda environment; 2. `conda install -c conda-forge -c bioconda mmseqs2`. ## MMseqs Output (for bugs); See above ""Current Behavior"" section. ## Context; Installing via conda. ## Your Environment; I am using conda 23.5.2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/744:35,install,install,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/744,4,"['Install', 'install']","['Installing', 'install']"
Deployability,"## Expected Behavior; Align 2Gb sequence to 1Gb vertebrate genome like BLASTN.; ## Current Behavior; Stuck on `prefilter` for days.; ## Steps to Reproduce (for bugs); The command I used is:; ```; mmseqs easy-search ${Query} ${Target} altseq.toref tmp --min-seq-id 0.9 -c 0.8 --cov-mode 1 --max-seq-len 100000000 --exact-kmer-matching 1 --search-type 3 --mask 0 --threads 16 --split-memory-limit 96G --format-output query,target,fident,nident,qcov,tcov,evalue,bits; ```. ## Context; Considering the ultra-fast speed of MMseqs2, I want to use MMseqs2 to replace BLASTN in my pipeline. In my case, the reference genome is about 1 Gb (max chromosome ~45Mb), and the query sequences are about 2 Gb (max length: ~3.5Mb, mean length:~60Kb). Could I do this with MMseqs2? If so, what parameters do I need to adjust? and how long should I expect to complete this alignment?. ## Your Environment; * MMseqs2 Version: 13.45111. Build by conda. **Server specifications**; * 64bit: Yes; * AVX2: Yes; * SSE4.1: Yes; * 40 Cores; * 768 GB RAM. **Operating system and version:**; * openSUSE Leap 15.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/618:573,pipeline,pipeline,573,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/618,1,['pipeline'],['pipeline']
Deployability,"## Expected Behavior; Cluster a fasta input using `easy-cluster` because `linclust` sometimes removes important sequences. ## Current Behavior; \> 50% tested fastas die with a result2flat error. ```; <BASEDIR>/tmp//13463384132153814128/easycluster.sh: line 48: 36628 Segmentation fault (core dumped) ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_seqs"" ""${TMP_PATH}/all_seqs.fasta"" ${VERBOSITY_PAR}; Error: result2flat died; ```. ## Steps to Reproduce (for bugs); Cluster a [fasta (link)](https://gist.github.com/xonq/88b4d1f90c438b9b99f2d0e27bd3c604) with `easy-cluster` via a python subprocess. Full paths changed to <BASE_DIR> in log.; In this specific case:; `easy-cluster <BASE_DIR>/cormil2.1_9109.fa <BASE_DIR>/working/cormil2.1_9109_c0.4_v0.65 <BASE_DIR>/working/tmp/ --min-seq-id 0.65 --threads 1 --compressed 1 --cov-mode 0 -c 0.4 -e 0.1 -s 7.5 `. ## MMseqs Output (for bugs); [Error log](https://gist.github.com/xonq/51e40f3edf79ebd1531a725b26c52654). ## Context; I'm running a pipeline that calls on `easy-cluster` to truncate large fastas for phylogenetic reconstruction. >50% of these runs fail with easy-cluster. I don't want to use `linclust` because I've observed that it throws out important sequences from clusters here and there. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled from miniconda via Bioconda channel; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it""; * Operating system and version: Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/617:1020,pipeline,pipeline,1020,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617,1,['pipeline'],['pipeline']
Deployability,"## Expected Behavior; Compile the specific version [MMseqs2 71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1 (May 28, 2023)](https://github.com/soedinglab/MMseqs2/archive/71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1.zip) under Linux. I encounter a similar error as [here](https://github.com/soedinglab/MMseqs2/issues/480). And the mentioned package `libgcc-ng` has been installed. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. `cd MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; export PATH=/home/liuhongbin/database/colabfoldMSA/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build/bin/:$PATH`. no errors were observed here. ## MMseqs Output (for bugs); error:. (colabfoldMSA) liuhongbin@node7:~/database/colabfoldMSA/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build$ ./bin/mmseqs; ./bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; g++ (GCC) 5.4.0; cmake version 3.28.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; uname -a | grep x86_64; Linux node7 3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; * Operating system and version:; CentOS Linux release 8 (Core). * packages in curre",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/795:358,install,installed,358,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/795,3,"['RELEASE', 'install']","['RELEASE', 'install', 'installed']"
Deployability,"## Expected Behavior; Completes databases workflow, creating GTDB database. ## Current Behavior; Error occurs near the end of the workflow.; Files created: ```gtdb gtdb.dbtype gtdb_h gtdb_h.dbtype gtdb_h.index gtdb.index gtdb.source tmp```. ## Steps to Reproduce (for bugs); ```mmseqs databases GTDB gtdb tmp```. ## MMseqs Output (for bugs). ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	13.45111; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	128; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 43.1M 100 43.1M 0 0 4930k 0 0:00:08 0:00:08 --:--:-- 6278k. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed. 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; 100 334 100 334 0 0 6185 0 --:--:-- --:--:-- --:--:-- 6185; tar2db tmp/18048483634160780024/gtdb.tar.gz tmp/18048483634160780024/tardb --tar-include faa$ --threads 128 -v 3 . Time for merging to tardb: 0h 0m 0s 113ms; Time for merging to tardb.lookup: 0h 0m 0s 110ms; Time for processing: 0h 0m 0s 443ms; createdb tmp/18048483634160780024/tardb gtdb --compressed 0 -v 3 . Converting sequences. Time for merging to gtdb_h: 0h 0m 0s 25ms; Time for merging to gtdb: 0h 0m 0s 24ms; Database type: Nucleotide; The input files have no entry: - tmp/18048483634160780024/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died; The process 'mmseqs' has failed.; ```. ## Context; Downloading GTDB db. ## Your Environment; Using conda installation of mmseqs (MMseqs2 Version: 13.45111); 128cpu/1000GB mem. Support for AVX2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561:1625,install,installation,1625,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561,1,['install'],['installation']
Deployability,"## Expected Behavior; Completion of download and db creation for GTDB. ## Current Behavior; I installed release 14-7e284 via conda yesterday and tried to download various databases via the databases module. The following error messages were generated for GTDB; other databases were generated without errors. I thought problems with GTDB were fixed in previous versions (e.g., see issue [#742](https://github.com/soedinglab/MMseqs2/pull/742)), but perhaps changes were reverted in the latest release via conda?. Here are the relevant error messages (full output also included below):. 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseComma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:94,install,installed,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,5,"['install', 'release']","['installed', 'release', 'releases']"
Deployability,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/501:71,update,update,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501,9,['update'],"['update', 'updated', 'updatedDB']"
Deployability,"## Expected Behavior; Hi there! I am hoping to cluster a fasta file of contigs from an assembly of 134 samples. . ## Current Behavior; Getting error message that entries are longer than max sequence length of 65535 ([see error output](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e)). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. Command: `mmseqs easy-cluster scaffolds.fasta MRN_clustered tmp`. ## MMseqs Output (for bugs); [See output here](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e). ## Context; Am I missing an option for controlling max sequence length in mmseqs? Allowing for large contigs would be helpful in this context of a cross-assembly from 134 samples, containing 422691 sequences ranging in length from 679 kbp to 127 bp. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: MMseqs2 Version: 8.fac81; * Which MMseqs version was used: Installed via miniconda on ubuntu server. ; * Server specifications: 80 core server, 1.5 TB memory; * Operating system and version: ubuntu 16.04.5. Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/183:1049,Install,Installed,1049,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/183,1,['Install'],['Installed']
Deployability,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480:118,install,install,118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480,2,['install'],"['install', 'installed']"
Deployability,"## Expected Behavior; I am trying to cluster based on similarity (`--similarity-type 1`) instead of the default identity (`--similarity-type 2`) . ## Current Behavior; Using either parameter gives the same clustering output. . ## Steps to Reproduce (for bugs); Input: ; [artificial6.txt](https://github.com/soedinglab/MMseqs2/files/5995767/artificial6.txt); commands:; ` mmseqs createdb artificial6.fasta in/DB_in`; ` mmseqs cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1`; or; ` mmseqs cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2`. Both results lead to identical .tsv files. Update: adding `--comp-bias-corr 0` gives similar results. ## MMseqs Output (for bugs). similarity type 1: ; Create directory clu/sim1_tmp; cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:805,Update,Update,805,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['Update'],['Update']
Deployability,"## Expected Behavior; I am trying to cluster small protein fragments (7-25 AA long) with MMseqs2 using the most sensitive settings. As I am only interested in highly similar proteins, I use a high ID threshold and expect lots of clusters. ## Current Behavior; However, the amount of clusters produced exceeds the number of unique sequences present in my data. Further inspection shows that this is because **_100% identical sequences end up in different clusters_**. ## Steps to Reproduce (for bugs); These are the steps I follow starting from my fasta file and ending in clustering results:. `mmseqs createdb <fasta-file> fasta_in`; `mmseqs cluster fasta_in fasta_clustered tmp --min-seq-id 0.9`. These unexpected results are also found when:; - using a lower `--min-seq_id` of 0.8;; - using the non-standard similarity type `--similarity type` 1;; - using `--cluster-mode` 1. In addition, the amount of clusters produced are fluctuating heavily when the order of sequences in the FASTA file are shuffled beforehand, ranging between 250-450 using the same settings (notably, when only 246 unique sequences are present). Am I overseeing something? Do I need to reconsider my parameters given the short size of my fragments?. Update: Further inspection revealed that clustering using only a high sensitivity (`-s 7.5`) but no minimum ID threshold removes this bug, but combining this sensitivity with any ID threshold over 0.80 reintroduces the problem. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used : 96d452cb432fc4674991a48952deaf24d1787e77; * Which MMseqs version was used: Statically-compiled; * Operating system and version: linux-gnu; Ubuntu 16.04.6 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398:1225,Update,Update,1225,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398,1,['Update'],['Update']
Deployability,"## Expected Behavior; I am using mmseqs2 to cluster a list of ~4500 protein domains. My fasta file looks like this:; ```; >0; KHRNMHCKVSLLDDTVYECVVEKHAKGQDLLKRVCEHLNLLEEDYFGLAIWDNATSKTWLDSAKEIKKQVRGVPWNFTFN; >1; VEHHTFFRLTSTDTIPKSKFLALGSKFRYSGRTQAQTRQASALIDRPAPHFERTASKRASRSLDGAAAVDSADRSPRPTS; >2; ERLDGENIYIRHSNLMLEDLDKSQEEIKKHHASISELKKNFMESVPEPRPSEWDKRLSTHSPFRTLNINGQIPTGEGPPL; ...; ```. I am using the following commands to cluster them:; ```; mmseqs createdb domains.fasta domains; mkdir tmp; mmseqs cluster domains domains_clu tmp --min-seq-id 0.25; ```. When I ran this a few days ago locally on my mac, this returned 8 files (`domains_clu.0` through `domains_clu.7`), and they all had sequences. ## Current Behavior. I just installed mmseqs2 on a remote cluster and ran these commands again, and now they return 48 files (`domains_clu.0` through `domains_clu.47`), and all of them are empty except `domains_clu.0`, `domains_clu.12`, and `domains_clu.14`. The data is identical to before. ## MMseqs Output; Output for `createdb domains.fasta domains`:; ```; MMseqs Version: 	14.7e284; Database type 	0; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [4445] 0s 67ms; Time for merging to domains_h: 0h 0m 0s 36ms; Time for merging to domains: 0h 0m 0s 34ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 214ms; ```. The mmseqs cluster output is here: https://gist.github.com/lillianpetersen/b3344457890808097554467726d74e60. ## Your Environment; To install I used:; `mamba install -c conda-forge -c bioconda mmseqs2`. version:; ```; $ mmseqs version; 14.7e284; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/716:731,install,installed,731,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/716,3,['install'],"['install', 'installed']"
Deployability,"## Expected Behavior; I am using the easy cluster pipeline to cluster sequences with min-seq-id = 0.5. So, the centroids of the clusters should be less than 50% identical. . ## Current Behavior; However, when I am running a sanity check to make sure that the centroids are indeed less than 50% identical I get . 1. # Centroids with identity > 50%: ~10000; 2. # Centroids with identity < 70%: ~9000; 3. # Centroids with identity > 90%: ~500; 4. # Centroids with identity == 100%: ~70. So, identities of around 50% were expected. But anything over 90% and especially 100% identical was a surprise. ; ; ## Steps to Reproduce (for bugs); **Clustring Pipeline:** ; mmseqs easy-cluster sequences.fasta mmseqs_clustered tmp -s 7.5 -c 0.8 --cov-mode 0 --min-seq-id 0.5 --cluster-reassign --alignment-mode 3. **Sanity Check:**; 1. mmseqs createdb mmseqs_clustered_rep_seq.fasta DataBases/SeqDB; 2. mmseqs createindex DataBases/SeqDB tmp; 3. mmseqs search DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB tmp --min-seq-id 0.5 -s 7.0 -c 0.8 --cov-mode 0 --alignment-mode 3; 4. mmseqs convertalis DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB Alignment_Results --format-output ""query,target,evalue,pident""; 5. FIlter of Alignment_Results: Remove rows where QueryID == TargetID (They will always have 100% identity)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/612:50,pipeline,pipeline,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612,2,"['Pipeline', 'pipeline']","['Pipeline', 'pipeline']"
Deployability,"## Expected Behavior; I have tried different ways to install mmseqs into a Docker image, non seem to work. And using Brew works well on my local machine but inside a Docker image, it also doesn't work. I tried using the mmseqs2 docker image on Docker hub, it installed but I am currently having a ""pip install"" issue. Pip doesn't work to install other Python packages.; ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/605:53,install,install,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/605,4,['install'],"['install', 'installed']"
Deployability,"## Expected Behavior; I want to update my clusters after a database update (in which I add new sequences but also delete sequences compared to the old database). ; The clusterupdate command works, but when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result data",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272:32,update,update,32,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272,3,['update'],"['update', 'updated']"
Deployability,"## Expected Behavior; I was testing the example of `mmseqs easy-search examples/QUERY.fasta examples/DB.fasta alnRes.m8 tmp`. But I didn't see `alnRes.m8` in aimed `tmp` folder.; ## Current Behavior; ```; [lihuilin@login01 MMseqs2]$ ls; azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src util; [lihuilin@login01 MMseqs2]$ mmseqs easy-search examples/QUERY.fasta examples/DB.fasta alnResult.m8 tmp; Create directory tmp; easy-search examples/QUERY.fasta examples/DB.fasta alnResult.m8 tmp. MMseqs Version: 87e7103d289029dc3345f85ea9a4c4c6d6416e46; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 40; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Glo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:243,pipeline,pipelines,243,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['pipeline'],['pipelines']
Deployability,"## Expected Behavior; I'm running `mmseqs createdb` on a large fasta file. I have checked that every entry is ""valid"" (only valid AA characters, can be read by biopython, there are no spaces between `>` and the accession ids). I expect successful db creation or graceful error handling. . Is there a way to ignore invalid fasta entries in db creation? . ## Current Behavior; Fails with error: ""Fasta entry <entry> is invalid"". ## Steps to Reproduce (for bugs); `mmseqs createdb` . ## MMseqs Output (for bugs); ```; Fasta entry <entry> is invalid; ```. ## Your Environment; MMseqs2 Version: 13.45111; installed with conda",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763:600,install,installed,600,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763,1,['install'],['installed']
Deployability,"## Expected Behavior; I'm trying to follow the workflow in the readme for [clustering using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) but I keep getting the following error during the `search` step.; ## Current Behavior; ```; Could not get realpath of cog0303.fa_DB_CLU_0.7_0.5_repseq_h!; Error: Create profile died; ```. ## Steps to Reproduce (for bugs). ```; wget ftp://ftp.ncbi.nih.gov/pub/wolf/COGs/COG0303/cog0303.fa; touch cog0303.fa; mmseqs2/bin/mmseqs createdb cog0303.fa cog0303.fa_DB; mmseqs2/bin/mmseqs cluster cog0303.fa_DB cog0303.fa_DB_CLU_0.7_0.5 /tmp -s 6 --min-seq-id 0.7 -c 0.5 --cluster-mode 1; mmseqs2/bin/mmseqs createsubdb cog0303.fa_DB_CLU_0.7_0.5 cog0303.fa_DB cog0303.fa_DB_CLU_0.7_0.5_repseq; mmseqs2/bin/mmseqs search cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq_search /tmp --num-iterations 3 --add-self-matches; mmseqs2/bin/mmseqs clust cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq_search cog0303.fa_DB_CLU_0.7_0.5_repseq_search_clust --cluster-mode 1 -s 6; ```. ## Your Environment; I'm running this in an EC2 c5.4xlarge instance with the following OS information; ```; NAME=""Ubuntu""; VERSION=""16.04.4 LTS (Xenial Xerus)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 16.04.4 LTS""; VERSION_ID=""16.04""; HOME_URL=""http://www.ubuntu.com/""; SUPPORT_URL=""http://help.ubuntu.com/""; BUG_REPORT_URL=""http://bugs.launchpad.net/ubuntu/""; VERSION_CODENAME=xenial; UBUNTU_CODENAME=xenial; MemTotal=31897300 kB; ```; I downloaded MMseqs2 Release 6-f5a1c from github with the SSE4.1 version of the binary. Any idea what I'm doing wrong?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/131:1574,Release,Release,1574,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/131,1,['Release'],['Release']
Deployability,"## Expected Behavior; I'm using the option cluster-reassign as you suggest in the issue #397, but I had an error with deleted sequence. ## Steps to Reproduce (for bugs). `mmseqs cluster MY_DB OUTPATH/MY_CLUST OUTPATH/MY_TMP --max-seqs 400 -c 0.8 --comp-bias-corr 1 -s 4 --kmer-per-seq 80 --alignment-mode 2 --min-seq-id 0.8 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647 --cluster-mode 0 --cluster-reassign --threads 36`. ## MMseqs Output (for bugs); https://gist.github.com/jpjarnoux/895db4452f8745445add1833b9b704a6. ## Context; I'm using mmseqs2 in a pipeline. At this step I already cluster my db two times. ## Your Environment; I'm using the latest version 13.git45111",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/421:562,pipeline,pipeline,562,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/421,1,['pipeline'],['pipeline']
Deployability,"## Expected Behavior; It should compile. ## Current Behavior; It doesn't compile. ## Steps to Reproduce (for bugs); I did (after a ""git pull"" in my MMseqs2 directory):; CXX=""/usr/local/bin/g++-8"" CC=""/usr/local/bin/gcc-8"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local/biotools ../MMseqs2; make. ## MMseqs Output (for bugs); [ 41%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/sysctl.h:83,; from /usr/local/biotools/MMseqs/MMseqs2/src/commons/Util.cpp:15:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ucred.h:94:2: error: '_Atomic' does not name a type; _Atomic u_long cr_ref; /* reference count */; ^~~~~~~; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; make: *** [all] Error 2. ## Context; tried in an iMac, and a Mac Pro. Xcode 10.2, and gcc-8 (homebrew).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/182:247,RELEASE,RELEASE,247,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/182,1,['RELEASE'],['RELEASE']
Deployability,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:140,RELEASE,RELEASE,140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,1,['RELEASE'],['RELEASE']
Deployability,"## Expected Behavior; Multiple Threads are used when specified. ## Current Behavior; The threads are not fully used.; Although the output generates multiple output files, the execution time is same as the one observed when specifying --threads 1. ## Steps to Reproduce (for bugs); Install MMseqs2 using brew. `brew install mmseqs2`. ## Context; MMseqs2 installed using homebrew.; libomp: stable 9.0.1 was also installed using brew. NOTE: everything works fine when using the OSX binaries provided in the MMseqs2 web-page",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/289:281,Install,Install,281,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289,4,"['Install', 'install']","['Install', 'install', 'installed']"
Deployability,"## Expected Behavior; My colleagues and I have noticed an unexpected behavior with linclust (using the easy-linclust pipeline in particular), it appears to not be clustering identical sequences unless -c == 1 or --min-seq-id == 1 or < 0.9. We're not sure if we're misunderstanding the functionality of the linclust options or if there is a bug. Here are the FASTA contents for the sequences I have been testing with (note they are all identical):. ```; >Dupe; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe2; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe3; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; ```. ## Current Behavior; Below are a set of commands we've tested. Note that defaults for alignment-mode and cov-modes were used in the example commands, however we have tried the other modes and the same results are exhibited. The -a flag ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/206:117,pipeline,pipeline,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206,1,['pipeline'],['pipeline']
Deployability,## Expected Behavior; Need to Install the mmseqs (MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1) this particular version ; ## Current Behavior; but I am seeing there is no bin directory so I cant specify the PATH; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; cd /home/username # Navigate to your home directory; unzip MMseqs2.zip # Extract the MMseqs2 ZIP file; cd MMseqs2 # Go into the MMseqs2 directory after extraction; mkdir build # Create a build directory; cd build; cmake .. # Configure the build with cmake; Setting the PATH; export PATH=$HOME/MMseqs2/build/bin:$PATH. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; I am unable find the bin directory in Build folder.; so it is not seetting PATH & MMseqs is not getting in my Terminal. ## Your Environment; Macbook Pro M3 Pro chip; Using SSH and installing in my Home directory of the Server,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/886:30,Install,Install,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/886,2,"['Install', 'install']","['Install', 'installing']"
Deployability,"## Expected Behavior; Nt database indexed; ## Current Behavior; Nt database index never-ending; ## Steps to Reproduce (for bugs); ```; mmseqs createdb nt.fa nt -v 3 ; mmseqs createtaxdb nt tmp --threads 8 --tax-mapping-file ${uncompress_dir}/taxidmapping --ncbi-tax-dump ${ncbi-tax-dump} -v 3; mmseqs createindex nt tmp --threads 8 --split-memory-limit 200G --search-type 2 -v 3; ```. ## MMseqs Output (for bugs); In the link, there is the output of mmseq and the strace output when the software never end( mmseqs indexdb command).; https://gist.github.com/braffes/022572a4d9506f8910b281864a459ede. ## Context. The first and the second step work as expected, but the last step seems to never end. It is blocked on this command:; ```; mmseqs indexdb tmp/16033012438524647487/orfs_aa nt --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 2 --split 0 --split-memory-limit 200G -v 3 --threads 8; ```; One core is always on 100% CPU but not nothing happens. . I try to do this step with the scheduler(slurm) and localy, but that's the same result. After few try, I try to decrease the size of the fasta file(385Go to 172Go), and it worked.; It could be a problem of scaling? If yes, can it be related to the type in DBReader being unsigned int in indexdb.cpp?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; The problem is encountered for the two following versions MMseqs2/12-113e3 and MMseqs2/13-45111; 96 cores; 2To RAM; CentOS Linux release 8.3.2011",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/426:1676,release,release,1676,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426,1,['release'],['release']
Deployability,"## Expected Behavior; Producing a cluster. ## Current Behavior; Error of clustering. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb test.faa test.db; mmseqs cluster test.db test.clu tmp --min-seq-id 0.9; test.faa is attached in the gist. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; https://gist.github.com/matveykolesnik/43a90e7404e11881c29e2c80d79c5fec. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I am using mmseq2 for clustering of protein sequences in automatic pipeline, and I faced with the problem when mmseq2 fails to process fasta files that consist of repeated same sequences, like this:; >record1; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; >record2; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; ...; Perhaps it would be worth to add handling of such fasta files. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/180:724,pipeline,pipeline,724,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/180,1,['pipeline'],['pipeline']
Deployability,"## Expected Behavior; Search the homologs of my query. ## Current Behavior; I use easy-search mode to search for homologs using a fasta file with multiple amino acid sequences as the query. The target file is a compressed folder that contains some independent genome files. An error appeared when translated_search.sh was running and the job was killed. ## Steps to Reproduce (for bugs); `mmseqs easy-search query.fasta individual.fna.tar.gz result.m8 tmp --cov-mode 0 -c 0.7 -e 0.00001`. ## MMseqs Output (for bugs); `/scratch/yw/tmp/16423424779017399508/search_tmp/8870872946056358031/translated_search.sh: line 45: 982 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}`. ## Context. ## Your Environment; MMseqs2 Version: 12.113e3 (conda); Operating system: Red Hat Enterprise Linux Server release 6.10 (Santiago)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/366:811,release,release,811,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366,1,['release'],['release']
Deployability,"## Expected Behavior; Successful Completion; ## Current Behavior; Error Thrown despite the Temp directory having over 100GB space.; ## Steps to Reproduce (for bugs); 1. Install MMSeqs2 under Conda: DONE NO ERRORS; `conda install -c conda-forge -c bioconda mmseqs2`. 2. Create Sequence DB: DONE NO ERRORS; `mmseqs createdb AllPeptide.fasta AllPeptide_DB --dbtype 1 --write-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/415:169,Install,Install,169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415,2,"['Install', 'install']","['Install', 'install']"
Deployability,"## Expected Behavior; Summary: Running linclust or clust with a very big database leads to a heavy slowdown in the rescorediagonal part. Expected the job to continue much faster. It releases a warning that says `Can not touch X into main memory` and the job continues running.; ## Current Behavior; The job is stuck at rescorediagonal with no output after several hours. The job is however accesing the indexes inside of the temporary folder.; Is there anyway to fix this? Or speed it up?; ## MMSeqs Output; linclust JGI JGI_nr tmp --cluster-mode 2 --cov-mode 1 -c 0.99 --min-seq-id 0.95 --split-memory-limit 300G . MMseqs Version: 	c498f51053e2f550a4ab4bee534b0ef80033a2b3; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Threads 	96; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.99; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Resco",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:182,release,releases,182,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['release'],['releases']
Deployability,"## Expected Behavior; The example file https://raw.githubusercontent.com/soedinglab/mmseqs2/master/examples/DB.fasta should be clustered; ## Current Behavior; After the installation of MMseqs Version: 1c45613a4166130d040b52241dc66f7d687f4e54 it fails when prefiltering with:. **Error: Could not allocate memory by memalign. Please report this bug to developers** . ## Steps to Reproduce (for bugs). mmseqs createdb DB.fasta DB; mkdir tmp; mmseqs cluster DB cluDB tmp. ## MMseqs Output (for bugs); Line [391](https://gist.github.com/genomewalker/dc566892b5300bc62e166dac844a9b65#file-mmseqs_v1c45613a4166130d040b52241dc66f7d687f4e54-L391). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Homebrew . * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.8.1 and g++ (Homebrew GCC 7.1.0 --without-multilib) 7.1.0. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): MacBook Pro (Retina, 13-inch, Late 2013) with 2.6 GHz Intel Core i5 and 16 GB 1600 MHz DDR3; * Operating system and version: Mac OS X 10.12.4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/29:169,install,installation,169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/29,1,['install'],['installation']
Deployability,"## Expected Behavior; Using easy-search for multiple alignment (non-duplicate PDB seqs against Uniref100). . I've run this on a cloud instance (64G RAM), and a local server with 256G RAM. It completed the search on the server in 9 hours, producing an output file of 41G. . I expected it to finish running on the cloud at a slower speed because the target DB was split into more chunks (87 splits on the cloud VS 7 splits on the server). ## Current Behavior; On the cloud, however, after the prefiltering step, both ""align"" and ""convertalis"" logged a message ""Can not touch X into main memory"". The job will stay hanging but not produce any more logging or output files (there were a bunch of output files X.0, X.1, X.2.. not merged outputs). I killed it after 2 days. UPDATE: I've also tried to set --split-memory-limit 40G, it did finish running (in 16 hours) and produced a single output file, despite still displaying the message ""can not touch X into memory"". Also, the output file is larger than the output I got from running on the server previously (cloud VS server = 67G/41G, 109912025 lines/ 65303318 lines). I can't figure out what could cause the differences, given the same input files, same script (except for adding --split-memory-limit). So my two questions are:; 1) What's up with the warning ""Can not touch X into main memory""? ; 2) Why are the output files different?. ## Steps to Reproduce (for bugs); `mmseqs easy-search pdb_unique_seqs_all.fasta uniref100.fasta output/pdb_uniref100_6cpu_s3_e10minus3 tmp/ -a -s 3 --threads 6 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar,qaln,taln`; ## MMseqs Output (for bugs); Log file for running on cloud instance WITHOUT setting --split-memory-limit, no merged output, job hanging.; [log_easysearch.txt](https://github.com/user-attachments/files/16683740/log_easysearch.txt). Log file for running on the cloud WITH setting --split-memory-limit 40G, finished running with a single outpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/877:768,UPDATE,UPDATE,768,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/877,1,['UPDATE'],['UPDATE']
Deployability,"## Expected Behavior; Using these lines I tried to create a tsv file containing all alignment details for all clustered sequences, including the singletons:. ```; mmseqs cluster sequenceDB resultDb tmp; mmseqs createtsv sequenceDB sequenceDB resultDb resultDb.tsv; mmseqs align sequenceDB sequenceDB resultDb alignDB -a --add-self-matches; mmseqs convertalis sequenceDB sequenceDB alignDB alignDB.tsv; ```. ## Current Behavior; Looking at the resultDb.tsv file and the alignDB.tsv files I see differences between the number of sequences in the former compared to the latter. The resultDb.tsv contains all parent-child combinations for all sequences that I used to cluster, which is what I expect. However, the alignDB.tsv file contains far less alignment details. At first I thought that the singletons were left out, but that doesn't seem to be the case. Am I missing something? Or is this a bug?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb /mmseqs/examples/DB.fasta DB; mmseqs cluster DB resultDB tmp; mmseqs createtsv DB DB resultDB resultDB.tsv; mmseqs align DB DB resultDB alignDB -a --add-self-matches; mmseqs convertalis DB DB alignDB alignDB.tsv; wc -l alignDB.tsv; > 19924; wc -l resultDB.tsv; > 20000; ```. ## Environment; MMseqs2 Version: ""c5ebe52978a9e944d73bad70cfb538c91309dd8e""; Statcs install AVX2 for linux; Server supports AVX2, 64 cpu's 500G memory; Operating System: CentOS Linux 7 (Core) CPE OS Name: cpe:/o:centos:centos:7 Kernel: Linux 3.10.0-1062.4.1.el7.x86_64 Architecture: x86-64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/268:1313,install,install,1313,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268,1,['install'],['install']
Deployability,"## Expected Behavior; When running a command on a machine with multiple cores, all the output files should be combined into a single final results file. ## Current Behavior; All the files are numbered `1` to `n` where `n` is the number of cores. . ## Steps to Reproduce (for bugs); This happens with many commands (e.g. `mmseqs cluster` `mmseqs lca`, `mmseqs taxonomy`, etc). ## Context; Each file is numbered individually, but a better output would be to combine all outputs to a single file. . A trivial solution is to add `--threads 1` to the command, but that seems to be anti-use-case. The number of files is dependent on the number of cores. `cat results.? results.?? > results` is a trivial solution, but clumsy to implement for every `mmseqs` call in a pipeline. In addition, the current `mmseqs` solution doesn't work well with (for e.g.) `snakemake` that is expecting specific files. ## Your Environment; MMseqs2 Version: c75fe9acf701d9dee97b68dcbbda92fa7b1fc2de; Running on CentOS 8.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/292:761,pipeline,pipeline,761,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/292,1,['pipeline'],['pipeline']
Deployability,"## Expected Behavior; When running with highly reduced databases with the size of lower than 1MB, it works just fine. ; Both the complete call for the search workflow ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; as well as the explicit call for the prefilter module only ./mmseqs prefilter ""query"" ""target"" ""result"" are running as expected. ## Current Behavior; Using bigger files for query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:695,install,installed,695,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['install'],['installed']
Deployability,"## Expected Behavior; `mmseqs download` would be expected to download an up-to-date version of the target 'nr' and 'nt' databases. ## Current Behavior; The download FASTA targets for the 'nr' and 'nt' databases are no longer being updated by NCBI. Explanation: focusing on 'NR' as an example, the URL in [databases.sh](https://github.com/soedinglab/MMseqs2/blob/87e7103d289029dc3345f85ea9a4c4c6d6416e46/data/workflow/databases.sh#L500) points to https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/nr.gz. The README in that FTP location states:. > In April 2024, the BLAST FASTA files in this directory will no longer be; available. You can easily generate FASTA files yourself from the formatted; BLAST databases by using the BLAST utility blastdbcmd that comes with the; standalone BLAST programs. See NCBI Insights for more details; https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/. Indeed, the nr.gz file was last updated on 2024-02-07. Looking in the [parent directoy](https://ftp.ncbi.nlm.nih.gov/blast/db), the various NR database files have been updated as recently as 2024-10-02. Therefore, the download targets for mmseqs2 are out of date by about 8 months, and this problem will get worse over time. . NCBI's solution for users is to download the blast-format files and then generate their own FASTA files:. > * Sequences in FASTA format can be generated from the pre-formatted databases by using the blastdbcmd utility;. Obviously this isn't ideal for many users, and it's been getting [at least some hate](https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/). ## Solution; Unless NCBI backflips on their decision, the only solution would be to change the `mmseqs databases` workflow for these databases to have an intermediate (slow) step of extracting a FASTA file before the `mmseqs createdb` step is run. However, this would obviously require extra dependencies, i.e. the `blastdbcmd`. Otherwise, I suppose you could host periodic b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/893:231,update,updated,231,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/893,2,['update'],['updated']
Deployability,"## Expected Behavior; get standard annotation output --> works on some files and does not work on other files. ## Current Behavior; Error:; Input tmp/11852343083329585076/search_tmp/14954657116245379907/search/pref does not exist. ## Steps to Reproduce + MMseqs Output ; [code.txt](https://github.com/soedinglab/MMseqs2/files/4857796/code.txt). ## Context; mmseqs easy-search fastq files. ## Your Environment; MMseqs Version: 	11.e1a1c; conda install -c conda-forge -c bioconda mmseqs2; Ubuntu 20.04 LTS, 64-bit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/325:443,install,install,443,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/325,1,['install'],['install']
Deployability,"## Expected Behavior; mmseqs2 successfully linclust a 49 sequence protein fasta. ## Current Behavior; mmseqs2 complain Kmer array overflow. ## Steps to Reproduce (for bugs); ```bash; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs createdb DB.fasta DB -v 1; mkdir tmp; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs linclust DB DB_clu tmp -c 0.9 --cov-mode 1 --threads 1 -v 1; ```. ## MMseqs Output (for bugs); ```; Kmer array overflow. currKmerArrayOffset=0, kmerBufferPos=1024, kmerArraySize=1024.; Error: kmermatcher died; ```. ## Context; The input file DB.fasta and all intermediate files are attached.; [linclust_3300021621.zip](https://github.com/soedinglab/MMseqs2/files/4199615/linclust_3300021621.zip). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; ``MMseqs2 Version: 481696b5f426f991211894d8a855bf9d60065c8f``; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; https://mmseqs.com/latest/mmseqs-linux-sse41.tar.gz; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt; * Operating system and version:; ```; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/274:1826,release,release,1826,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/274,2,"['Release', 'release']","['Release', 'release']"
Deployability,"## Expected Behavior; nuc reads would align to aa DB. ## Current Behavior; `Input tmp1/15265602719800494645/search_tmp/18256837363344165166/search/pref does not exist`. ## Steps to Reproduce (for bugs); [B5177-2-N919D_T1_interleaved.fq.gz](https://github.com/soedinglab/MMseqs2/files/12657942/B5177-2-N919D_T1_interleaved.fq.gz); DB_TARGET_PATH_NAME is the pfam DB downloaded with mmseqs. ```; mmseqs \; easy-search \; <(zcat B5177-2-N919D_T1_interleaved.fq.gz) \; $DB_TARGET_PATH_NAME \; B5177-2-N919D_T1.tsv \; tmp1 \; \; --threads 12 \; --compressed; ```. ## MMseqs Output (for bugs); No output. ## Context; i try another fasta file, things went well. But with the uploaded file as input, i get the error said `Input tmp1/15265602719800494645/search_tmp/18256837363344165166/search/pref does not exist`, could not figure why. ## Your Environment; mmseqs version: 13.45111; conda installed ; Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-153-generic x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754:882,install,installed,882,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754,1,['install'],['installed']
Deployability,"## Expected Behavior; tmp folder creation should work just as for other commands. ## Current Behavior; `mmseqs enrich profileDB UniRef50DB profileEnrichedDB /tmp` fails with ; ""Path does not exist or is not a directory. Cannot create temporary folder .""; It's the same for any tmp location, and it only affects `enrich`. Specifying /tmp with other mmseqs commands works. ## Your Environment; MMseqs Version: 113e3212c137d026e297c7540e1fcd039f6812b1 (latest release); static (MMseqs2-Linux-SSE4_1.tar.gz),; no AVX2, CentOS Linux 7",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/353:457,release,release,457,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/353,1,['release'],['release']
Deployability,"## Intention; I am trying perform an exhaustive all against all search of a large database with sensitivity similar to blast. The database contains approximately 73,000 sequences with an average length around 300 amino acids. Process is killed while reading results with the error swapresults died. . On Linux mint and using MMseqs2 Release 15-6f452. ## output; cahoonlab@lagbb-bcecmint:~$ mmseqs search Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 alnment/alignment tmp --exhaustive-search -s 8; search Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 alnment/alignment tmp --exhaustive-search -s 8 . MMseqs Version: 	78ae2c5b8dba889079745e8013deeb30c3ac8a1a; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:333,Release,Release,333,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['Release'],['Release']
Deployability,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/450:1376,pipeline,pipelines,1376,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450,1,['pipeline'],['pipelines']
Deployability,"#b8b044 0B/0B CN:1 DL:0B] ; 02/01 11:30:01 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#b8b044 51MiB/61MiB(84%) CN:1 DL:10MiB] ; 02/01 11:30:08 [NOTICE] Download complete: tmp/taxdump.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; b8b044|OK | 9.1MiB/s|tmp/taxdump.tar.gz. Status Legend:; (OK):download completed.; Loading nodes file ... Done, got 2550743 nodes; Loading merged file ... Done, added 75930 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```; ## Context; I want to search some query sequences locally against a clustered version of the NR database. I downloaded the clustered database and taxonomy files (nr_cluster_taxid_formatted_final.tsv.gz, nr_rep_seq.fasta.gz) from [here](https://osf.io/tejwd/), which was created as per: https://research.arcadiascience.com/pub/resource-nr-clustering/release/3. I then processed the files like so:. ```; gunzip -c nr_cluster_taxid_formatted_final.tsv.gz | cut -f1,2 > nr_rep_seq_to_taxid.map; mmseqs createdb nr_rep_seq.fasta.gz nr_rep_seq_db; ```. After these completed successfully, I tried to create the taxdb as per the above:. ```; mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; ```. But the job was killed. Questions:; * Was it likely killed because of exhausting my available RAM? ; - If so, is there a way to restrict it during taxdb creation? I tried out `--split-memory-limit 50G` but got `Unrecognized parameter ""--split-memory-limit""`; * Was it killed for a different reason, e.g. disk space?; - The disk the database is stored on has 95 GB free at the moment, and the main db file (from `mmseqs createdb`) is 88.7GB. I haven't tried freeing up more space yet in case this is not the issue. ## Your Environment; * Git commit used: 2fad714b525f1975b62c2d2b5aff28274ad574",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811:2079,release,release,2079,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811,1,['release'],['release']
Deployability,"--:--:-- --:--:-- 41; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 51.3G 100 51.3G 0 0 1565k 0 9:33:26 9:33:26 --:--:-- 2662k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 54.4M 100 54.4M 0 0 1374k 0 0:00:40 0:00:40 --:--:-- 939k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 1080k 100 1080k 0 0 489k 0 0:00:02 0:00:02 --:--:-- 491k; tar2db tmp/14668141768776664068/gtdb.tar.gz tmp/14668141768776664068/tardb --tar-include faa.gz$ --threads 8 -v 3. Time for merging to tardb: 0h 0m 0s 28ms; Time for merging to tardb.lookup: 0h 0m 0s 13ms; Time for processing: 0h 7m 32s 203ms; createdb tmp/14668141768776664068/tardb outpath/GTDB --compressed 0 -v 3. Converting sequences; Cannot open outpath/GTDB.source for writing; Error: createdb died. ## Context; Please note that I get this error on _both_ my local computer and on my server; using different methods of installation. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 2fad714b525f1975b62c2d2b5aff28274ad57466 (local MacOSX computer) as well as MMseqs2 Version: 15.6f452 (on Linux server); * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Installed with both conda (linux server) and using the MacOSX binary available on the mmseqs download page (local computer); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): for Linux server: supports AVX2, 1TB RAM. for local MacOSX computer: supports AVX2 (I think?), 16 GB RAM; * Operating system and version: Linux server: Rocky Linux 8.9 local computer: macOS Monterey 12.7.2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/809:2625,Install,Installed,2625,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/809,1,['Install'],['Installed']
Deployability,--p 00000000 00:00 0; 7f40cc7f9000-7f40ccff9000 rw-p 00000000 00:00 0; 7f40ccff9000-7f40ccffa000 ---p 00000000 00:00 0; 7f40ccffa000-7f40cd7fa000 rw-p 00000000 00:00 0; ```. ## Context; The input file is part of the QfO 2011 dataset.; ftp://ftp.ebi.ac.uk/pub/databases/reference_proteomes/previous_releases/qfo_release-2011_04; As I previously wrote if --max-seq-len is used in createdb to split some of the input sequences createindex does not fail!. For example:; ```; mmseqs createdb --max-seq-len 1000 korarchaeum_cryptofilum kora_db; mmseqs createindex kora_db /tmp/; ```; Would create the DB idx file without failing. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: c97f09f3fe8f45aa133004f95e43c509c947196b (NOTE: the error also happened with earlier versions); * Which MMseqs version was used: self-compiled using GNU Make 4.2.1 and cmake version 3.12.0 (make and cmake installed using Linux-brew); * For self-compiled and Homebrew:; ```; -- The CXX compiler identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_E,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:11113,install,installed,11113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['install'],['installed']
Deployability,". 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner; Force restart using the latest tmp false; Remove Temporary Files false. Could not create symlink of tmp/5177011769629871693!. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I got a remote VM from a university lab in which I run the project. everything was going quite well (compilation, installation, creating the DBs) but when I wanted to pre-compute the index of targetDB, I got this weird error with no further details to solve it. I don't know if it is related to the privileges granted to me in the VM or the version of MMseqs. Would you please suggest some hints/help?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 9357bb750290e2862ab4da522f03c971f71cfff3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc version 4.8.5 & cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Architecture : x86_64 / Processor : 4x Intel Xeon E312xx (Sandy Bridge) / Memory : 196.62 GiB / Instruction set: SSE4_1; * Operating system and version: CentOS 7.6.1810",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/171:2660,install,installation,2660,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/171,1,['install'],['installation']
Deployability,". My conda environment is as follows. active environment : ClusterEnv; active env location : /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv; shell level : 2; user config file : /home/sanyalab/.condarc; populated config files : /home/sanyalab/.condarc; conda version : 4.10.1; conda-build version : 3.18.9; python version : 3.7.4.final.0; virtual packages : __linux=2.6.32=0; __glibc=2.12=0; __unix=0=0; __archspec=1=x86_64; base environment : /mnt/common/rh6/annotate/Anaconda3 (writable); conda av data dir : /mnt/common/rh6/annotate/Anaconda3/etc/conda; conda av metadata url : https://repo.anaconda.com/pkgs/main; channel URLs : https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /mnt/common/rh6/annotate/Anaconda3/pkgs; /home/sanyalab/.conda/pkgs; envs directories : /mnt/common/rh6/annotate/Anaconda3/envs; /home/sanyalab/.conda/envs; platform : linux-64; user-agent : conda/4.10.1 requests/2.22.0 CPython/3.7.4 Linux/2.6.32-696.30.1.el6.x86_64 rhel/6.9 glibc/2.12; UID:GID : 101430:237; netrc file : None; offline mode : False. MMseqs installs ok (I think). However, I get a GLIBC error when running `mmseqs --help` like below. `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`. Please advice what to do. Thanks; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461:1280,install,installs,1280,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461,1,['install'],['installs']
Deployability,"/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; *** Download Progress Summary as of Wed Sep 27 13:22:54 2023 *** ; ===========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:1951,release,releases,1951,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['release'],['releases']
Deployability,"0 --:--:-- --:--:-- --:--:-- 41; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 51.3G 100 51.3G 0 0 1565k 0 9:33:26 9:33:26 --:--:-- 2662k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 54.4M 100 54.4M 0 0 1374k 0 0:00:40 0:00:40 --:--:-- 939k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 1080k 100 1080k 0 0 489k 0 0:00:02 0:00:02 --:--:-- 491k; tar2db tmp/14668141768776664068/gtdb.tar.gz tmp/14668141768776664068/tardb --tar-include faa.gz$ --threads 8 -v 3. Time for merging to tardb: 0h 0m 0s 28ms; Time for merging to tardb.lookup: 0h 0m 0s 13ms; Time for processing: 0h 7m 32s 203ms; createdb tmp/14668141768776664068/tardb outpath/GTDB --compressed 0 -v 3. Converting sequences; Cannot open outpath/GTDB.source for writing; Error: createdb died. ## Context; Please note that I get this error on _both_ my local computer and on my server; using different methods of installation. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 2fad714b525f1975b62c2d2b5aff28274ad57466 (local MacOSX computer) as well as MMseqs2 Version: 15.6f452 (on Linux server); * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Installed with both conda (linux server) and using the MacOSX binary available on the mmseqs download page (local computer); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): for Linux server: supports AVX2, 1TB RAM. for local MacOSX computer: supports AVX2 (I think?), 16 GB RAM; * Operating system and version: Linux server: Rocky Linux 8.9 local computer: macOS Monte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/809:2179,install,installation,2179,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/809,1,['install'],['installation']
Deployability,"0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl526_1 bioconda; perl-exporter 5.72 pl526_1 bioconda; perl-file-util 4.161950 pl526_3 bioconda; perl-lib 0.63 pl526_1 bioconda; pigz 2.3.4 hed695b0_1 conda-forge; pip 20.1.1 py_1 conda-forge; prodigal 2.6.3 h516909a_2 bioconda; python 3.8.4 cpython_h425cb1d_0 conda-forge; python_abi 3.8 1_cp38 conda-forge; readline 8.0 he28a2e2_2 conda-forge; seqkit 0.13.2 0 bioconda; setuptools 49.2.0 py38h32f6830_0 conda-forge; sqlite 3.32.3 hcee41ef_1 conda-forge; tk 8.6.10 hed695b0_0 conda-forge; vsearch 2.15.0 h2d02072_0 bioconda; wget 1.20.1 h22169c7_0 conda-forge; wheel 0.34.2 py_1 conda-forge; xz 5.2.5 h516909a_1 conda-forge; zlib 1.2.11 h516909a_1006 conda-forge; ```. ## Notes. I had previously copies (hopefully) all relevant ""old"" gene database files from one directly to another. Maybe I missed an associated file, which is causing the issue. ; A major hassle of using mmseqs is all of the associated files (eg., `.dbtype`, `.index`, `.lookup`, etc). These are not discussed in the documentation and just assumed to be present with the ""main"" files. This is especially a big hassle when using snakemake, nextflow, drake, or other pipeline software.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333:5565,pipeline,pipeline,5565,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333,1,['pipeline'],['pipeline']
Deployability,"05.1 NZ_CP009512.1_8; RS_GCF_000970205.1 NZ_CP009512.1_9; RS_GCF_000970205.1 NZ_CP009512.1_10; ```. You can then do a JOIN operation between the `gtdb.lookup` table, the `genome_orf_mapping.tsv` table, and the `gtdb.source` table to link the genome IDs in `gtdb.source` to `gtdb.lookup`. Save an output file with the same format as `gdtb.lookup` but with the genome IDs from `gtdb.source`. Use this new file to replace the old `gtdb.lookup`. Here is some rough python/pandas code to do this (note this is slow and uses ~100 GB of RAM):. ```python; import pandas as pd. lookup_data = pd.read_csv('gtdb.lookup', sep='\t', header=None); lookup_data.columns = ['gene-id','gene-name','genome-id']. source_data = pd.read_csv('gtdb.source', sep='\t', header=None); source_data.columns = ['genome-id','genome-name']. genome_orf_mapping = pd.read_csv('genome_orf_mapping.tsv', sep='\t', header=None); genome_orf_mapping.columns = ['genome-name','gene-name']. # Perform the JOIN; lookup_data_corrected = lookup_data.rename(columns={'genome-id':'genome-id-old'})\; .merge(genome_orf_mapping, on='gene-name', how='left', validate='m:1')\; .merge(source_data, on='genome-name', how='left', validate='m:1'). lookup_data_gene_corrected.drop(columns=['genome-id-old','genome-name'])\; .to_csv('gtdb.lookup.corrected', sep='\t', header=None, index=False); # Replace gtdb.lookup with this newly saved file; ```. After making this fix, I could run `mmseqs createtaxdb` and get a taxdb that seemed to work fine with the `mmseqs easy-taxonomy` pipeline, matching my expected results (as mentioned under ""Consequences"" above). Maybe because I corrected `gdtb.lookup` before making the taxdb, I didn't need to edit any other mapping files as mentioned by @mlcoleman . I can't guarantee this workaround is 100% correct because I do not understand all the database files generated by mmseqs. However, the workaround seems to do the trick for my data for the time being. Hope this helps before a longer-term solution is ready.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:7528,pipeline,pipeline,7528,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625,1,['pipeline'],['pipeline']
Deployability,"10.6d92c is the latest release, however we have been working on the next release. The `databases` module will be included in the next release. If you want to try it out already please refer to the install static or compile from source sections of the user guide:. For Linux:; https://github.com/soedinglab/MMseqs2/wiki#install-static-linux-version; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux; For macOS:; https://github.com/soedinglab/MMseqs2/wiki#install-static-macos-version",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103:23,release,release,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103,12,"['install', 'release']","['install', 'install-static-linux-version', 'install-static-macos-version', 'release']"
Deployability,"2 1.529E-92 100.000 F*TFPDLLSRKFFLFTFIHLLLLQWFKALPYSILILIKLLIKRNFFFYKTSARQFWRFLLPASCSAVSGFLHFRLTFPAQPYFSAARISPQSQPQLHLLRASPVRWTAFQSISHLRETGCVPLKSTHVLCVDTVSYTHLTLQTILLVQISVAAVQ FQTFPDLLSRKFFLFTFIHLLLLQWFKALPYSILILIKLLIKRNFFFYKTSARQFWRFLLPASCSAVSGFLHFRLTFPAQPYFSAARISPQSQPQLHLLRASPVRWTAFQSISHLRETGCVPLKSTHVLCVDTVSYTHLTLQTILLVQISVAAVQ 155 156 1 155 0.994 2661169 -_cellular organisms;d_Eukaryota;-_Sar;-_Alveolata;p_Ciliophora;-_Intramacronucleata;c_Armophorea;o_Metopida;f_Metopidae;g_Metopus;s_Metopus contortus; EP00831_Metopus_contortus_T000356 EP00831_Metopus_contortus_P049864 5.174E-135 100.000 LQQKLLL*MEILIQL*QISIGPRTVTTTGISMDTKVEPTLTNIDIENYDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVVEGEVNPIFTNIDIENYDEGITIKVDADGDGDDDDGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSD LQQKLLLQMEILIQLQQISIGPRTVTTTGISMDTKVEPTLTNIDIENYDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVVEGEVNPIFTNIDIENYDEGITIKVDADGDGDDDDGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSD 215 215 1 215 1.000 2661169 -_cellular organisms;d_Eukaryota;-_Sar;-_Alveolata;p_Ciliophora;-_Intramacronucleata;c_Armophorea;o_Metopida;f_Metopidae;g_Metopus;s_Metopus contortus; ```; In Translation table 6, two additional codons code for glutamine instead of ending the translation. From the NCBI's ```gencode.dmp```, standard above, 6th below:; ```; FFLLSSSSYY**CC*WLLLLPPPPHHQQRRRRIIIMTTTTNNKKSSRRVVVVAAAADDEEGGGG; FFLLSSSSYYQQCC*WLLLLPPPPHHQQRRRRIIIMTTTTNNKKSSRRVVVVAAAADDEEGGGG. ```; The sequences above are from Metopus ciliates [that do use the Tr. table 6](https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?mode=Info&id=5964&lvl=3&lin=f&keep=1&srchmode=1&unlock). This may affect downstream analyses. Environment:; ```; $ mmseqs version; 8799829d213f31b647fc69e0572a0c828c5aaf63; $ cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=22.04; DISTRIB_CODENAME=jammy; DISTRIB_DESCRIPTION=""Ubuntu 22.04.2 LTS""; PRETTY_NAME=""Ubuntu 22.04.2 LTS""; <...>; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/686:2664,release,release,2664,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/686,1,['release'],['release']
Deployability,"3841744502873/target tmp/18110643841744502873/result alnResult.m8 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 0 --format-output query,targe t,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compresse d 0 -v 3. [=================================================================] 100.00% 500 0s 376ms; Time for merging to alnResult.m8: 0h 0m 0s 57ms; Time for processing: 0h 0m 1s 129ms; rmdb tmp/18110643841744502873/result -v 3. Time for processing: 0h 0m 0s 10ms; rmdb tmp/18110643841744502873/target -v 3. Time for processing: 0h 0m 0s 4ms; rmdb tmp/18110643841744502873/target_h -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp/18110643841744502873/query -v 3. Time for processing: 0h 0m 0s 1ms; rmdb tmp/18110643841744502873/query_h -v 3. Time for processing: 0h 0m 0s 1ms; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src tmp util; [lihuilin@login01 MMseqs2]$; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src tmp util; [lihuilin@login01 MMseqs2]$ cd tmp; [lihuilin@login01 tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cat latest; cat: latest: Is a directory; [lihuilin@login01 tmp]$ cd latest; [lihuilin@login01 latest]$ ls; [lihuilin@login01 latest]$ cd ..; [lihuilin@login01 tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cd 18110643841744502873; [lihuilin@login01 18110643841744502873]$ ls; [lihuilin@login01 18110643841744502873]$; ```; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for larg",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:8958,pipeline,pipelines,8958,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['pipeline'],['pipelines']
Deployability,"4-linux-gnu/libasan.so.4+0x37d2f); #1 0x7fc0f70d7f5f (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0x16f5f); #2 0x7fc0f70ceed9 in GOMP_parallel (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0xded9); #3 0x7ffc996a2d2f (<unknown module>). SUMMARY: AddressSanitizer: heap-buffer-overflow /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:168 in MultipleAlignment::updateGapsInSequenceSet(char**, unsigned long, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, unsigned int*, bool); Shadow bytes around the buggy address:; 0x0c347fffc620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; =>0x0c347fffc670: 00 00 00 00 00 00 00 00 00 00 00 00[fa]fa fa fa; 0x0c347fffc680: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c347fffc690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==71239==ABORTING; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:5846,update,updateGapsInSequenceSet,5846,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245,1,['update'],['updateGapsInSequenceSet']
Deployability,"4163985984779/order_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; filterdb tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter1 tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter2 --filter-file tmp/8115150149931881526/clu_tmp/13790714163985984779/order_redundancy --threads 64 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 31.44K 0s 20ms; Time for merging to pref_filter2: 0h 0m 0s 88ms; Time for processing: 0h 0m 0s 360ms; rescorediagonal tmp/8115150149931881526/clu_tmp/13790714163985984779/input_step_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/input_step_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter2 tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=========Error: Ungapped alignment step died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): a14688744081c15439fa3092eec9dfd8be40440b; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Source install from github ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU Make 4.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): SSE4; * Operating system and version: gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:7584,install,install,7584,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['install'],['install']
Deployability,"85; Min Kmer Size: 0; Empty list: 66045602. Time for index table init: 0 h 0 m 29s. k-mer similarity threshold: 130; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1282204; Target db start 1 to 1282204; Wrong prefiltering result: Query: 1 -> 1361079913	r; Invalid database read for id=1361079913, database index=/usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db.index; Wrong prefiltering result: Query: 71 -> 1361079913	r; Invalid database read for id=getDbKey: local id (1361079913) >= db size (1282204); 1361079913, database index=/usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db.index; getDbKey: local id (1361079913) >= db size (1282204); Wrong prefiltering result: Query: 111 -> 1361079913	r; Invalid database read for id=; Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x2aaac5d87700 (LWP 8622)]; 0x00002aaaabb70dcd in __run_exit_handlers () from /usr/lib64/libc.so.6; Missing separate debuginfos, use: debuginfo-install glibc-2.17-106.el7_2.8.x86_64 libgcc-4.8.5-4.el7.x86_64 libgomp-4.8.5-4.el7.x86_64 libstdc++-4.8.5-4.el7.x86_64 zlib-1.2.7-15.el7.x86_64; (gdb) bt; #0 0x00002aaaabb70dcd in __run_exit_handlers () from /usr/lib64/libc.so.6; #1 0x00002aaaabb70eb5 in exit () from /usr/lib64/libc.so.6; #2 0x00000000005de79f in DBReader<unsigned int>::getDbKey (this=0x8b8f10, id=1361079913) at /usr/lusers/aivan/prog/MMseqs2/src/commons/DBReader.cpp:344; #3 0x0000000000548023 in Prefiltering::writePrefilterOutput (this=0x7fffffffda10, qdbr=0x8b8f10, dbWriter=0x7fffffffcc80, thread_idx=1, id=0, prefResults=..., seqIdOffset=0, diagonalScoring=true, resultOffsetPos=0, maxResults=4000); at /usr/lusers/aivan/prog/MMseqs2/src/prefiltering/Prefiltering.cpp:758; #4 0x00000000005494d4 in Prefiltering::runSplit () at /usr/lusers/aivan/prog/MMseqs2/src/prefiltering/Prefiltering.cpp:643; #5 0x00002aaaab4fcde5 in ?? () from /usr/lib64/libgomp.so.1; #6 0x00002aaaab923dc5 in start_thread () from /usr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/37:4945,install,install,4945,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/37,1,['install'],['install']
Deployability,"904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:10490,install,installations,10490,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['install'],['installations']
Deployability,":183 - Removing output directory Output/ROSA-like as -f or --force was specified.; 2024-04-23 09:26:28.676 | INFO | __main__:main:95 - Starting Pharokka v1.7.1; 2024-04-23 09:26:28.676 | INFO | __main__:main:96 - Command executed: Namespace(infile='Input/ROSA-like/rosa-like.fasta', outdir='Output/ROSA-like', database='Databases', threads='1', force=True, prefix='Default', locustag='ROSA-like', gene_predictor='default', meta=False, split=False, coding_table='11', evalue='1E-05', fast=False, mmseqs2_only=False, meta_hmm=False, dnaapler=False, custom_hmm='', genbank=False, terminase=True, terminase_strand='pos', terminase_start='1', skip_extra_annotations=False, skip_mash=False, minced_args='', mash_distance=0.2, citation=False); 2024-04-23 09:26:28.676 | INFO | __main__:main:97 - Repository homepage is https://github.com/gbouras13/pharokka; 2024-04-23 09:26:28.676 | INFO | __main__:main:98 - Written by George Bouras: ***@***.***; 2024-04-23 09:26:28.676 | INFO | __main__:main:100 - Checking database installation in Databases.; 2024-04-23 09:26:28.677 | INFO | __main__:main:103 - All databases have been successfully checked.; 2024-04-23 09:26:28.677 | INFO | __main__:main:119 - Checking dependencies.; 2024-04-23 09:26:28.777 | INFO | input_commands:check_dependencies:379 - Phanotate version found is v1.6.5; 2024-04-23 09:26:28.778 | INFO | input_commands:check_dependencies:388 - Phanotate version is ok.; Traceback (most recent call last):; File ""/Users/Nico/miniforge3/envs/HieVi/bin/pharokka.py"", line 7, in <module>; exec(compile(f.read(), __file__, 'exec')); File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/pharokka.py"", line 489, in <module>; main(); File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/pharokka.py"", line 128, in main; ) = check_dependencies(args.skip_mash); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/input_commands.py"", line 407, in check_dependencies; mmseqs_major_version =",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2071616310:1419,install,installation,1419,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2071616310,1,['install'],['installation']
Deployability,; Done.; Time for processing: 0h 0m 0s 831ms; Program call:; result2repseq tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_rep --threads 2 -v 3. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Threads 	2; Verbosity	3. Start computing representative sequences.; ..........; Time for merging files: 0h 0m 0s 505ms; Time for processing: 0h 0m 1s 206ms; Program call:; result2flat tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_rep tmp/3578692915323364718/req_seq.fasta --use-fasta-header -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Use fasta header	true; Verbosity 	3. Query file is tmp/3578692915323364718/input; Target file is tmp/3578692915323364718/input; Data file is tmp/3578692915323364718/clu_rep; Start writing file to tmp/3578692915323364718/req_seq.fasta; Done.; Time for processing: 0h 0m 0s 724ms; Program call:; createseqfiledb tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_seqs --threads 2 -v 3. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Min Sequences	1; Max Sequences	2147483647; HH format 	false; Threads 	2; Verbosity 	3. Time for merging files: 0h 0m 0s 526ms; Time for processing: 0h 0m 1s 303ms; Program call:; result2flat tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_seqs tmp/3578692915323364718/all_seqs.fasta -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Use fasta header	false; Verbosity 	3. Query file is tmp/3578692915323364718/input; Target file is tmp/3578692915323364718/input; Data file is tmp/3578692915323364718/clu_seqs; Start writing file to tmp/3578692915323364718/all_seqs.fasta; Done.; Time for processing: 0h 0m 1s 39ms; ```. ## Your Environment. * The problems is present with releases 5-9375b and 4-0b8cc but not on release 3-be8f6 . ; * Tested with pre-compiled binaries for Linux-AVX2; * Operating system and version: Amazon Linux 2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:25324,release,releases,25324,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,2,['release'],"['release', 'releases']"
Deployability,"; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned in #729 involving the `gtdb.lookup` file. Taxonomy results will be unreliable until #729 is fixed. ## Your Environment; In",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:1893,release,release,1893,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['release'],['release']
Deployability,"; MW853947.1 MK378188.1; MW853947.1 MK378206.1; MW853947.1 MK378218.1; MW853947.1 MK378220.1; MW853947.1 MK378224.1; MW853947.1 MN326163.1; MW853947.1 MN326174.1; MW853947.1 ON698674.1; ```. #### 3. Manually convert the sequence into reverse complement; Using `seqkit seq` function to convert my self-assembled sequence into its reverse complement sequence and keep those public sequence remain original.; ```; cat <(seqkit grep -r -p 'SRS-*' orig_seqs.fasta | seqkit seq -r -p ) <(seqkit grep -v -r -p 'SRS-*' orig_seqs.fasta) > reversed_seqs.fasta; ```. #### 4. Try to cluster the manually processed sequences (Show easy-cluster for instance); ```; mmseqs easy-cluster --min-seq-id 0.8 --cov-mode 1 -c 0.8 reversed_seqs.fasta 80ANI_cluster_rev tmp_cluster_rev; ```; Then checked the clustered TSV, these sequenced clustered into one cluster; ```; MW853947.1 MW853947.1; MW853947.1 SRS4197851-k119_5014; MW853947.1 SRS4197849-k141_10057; MW853947.1 SRS4197855-k141_655; MW853947.1 SRS4197862-k141_2526; MW853947.1 SRS4197863-k119_8432; MW853947.1 SRS4197864-k141_4618; MW853947.1 SRS4197865-k141_388; MW853947.1 SRS4197870-k141_8439; MW853947.1 SRS4197873-k141_1626; MW853947.1 SRS4197876-k119_3788; MW853947.1 SRS4197879-k119_11748; MW853947.1 SRS4197880-k119_434; MW853947.1 SRS4197978-k119_13091; MW853947.1 SRS4197981-k141_1571; MW853947.1 SRS4197986-k141_7862; MW853947.1 SRS11964275-k141_133602; MW853947.1 KU745627.1; MW853947.1 MK378157.1; MW853947.1 MK378172.1; MW853947.1 MK378179.1; MW853947.1 MK378188.1; MW853947.1 MK378206.1; MW853947.1 MK378218.1; MW853947.1 MK378220.1; MW853947.1 MK378224.1; MW853947.1 MN326163.1; MW853947.1 MN326174.1; MW853947.1 ON698674.1; ```. ## MMseqs Output (for bugs); Please kindly refer `Steps to Reproduce`. ## Context; NA. ## Your Environment; * Which MMseqs version was used: 15.6f452 (conda installed); * Server specifications: Intel Processor with SSE4.2 AVX2 support w/ 64GB RAM; * Operating system and version: CentOS Linux release 7.8.2003 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/858:3771,install,installed,3771,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/858,2,"['install', 'release']","['installed', 'release']"
Deployability,"; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 7780 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 7.78K 0s 362ms ; Time for merging to aln_2: 0h 0m 0s 3ms. 30 alignments calculated.; 30 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.003856 hits per query sequence.; Time for processing: 0h 0m 3s 496ms; mergedbs IP_DB/IP_DB result_DB/result_DB tmp/16138406286044646862/aln_merge tmp/16138406286044646862/aln_2 --compressed 0 -v 3 . Merging the results to result_DB/result_DB; Time for merging to result_DB: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 11ms. ## Your Environment; MMseqs2 Version: 12.113e3; Installed from bioconda. Hardware:; Intel® Xeon(R) W-2175 CPU @ 2.50GHz × 28 CPU; 62.5 GiB RAM. System:; Release 18.04.5 LTS (Bionic Beaver) 64-bit ; Kernel Linux 5.4.0-58-generic x86_64; MATE 1.20.1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:12899,Install,Installed,12899,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,2,"['Install', 'Release']","['Installed', 'Release']"
Deployability,"=================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned in #729 involving the `gtdb.lookup` file. Taxonomy results will be unreliable until #729 is fixed. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 14.7e284; * Which MMseqs version was used: conda install; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: N/A; * Server specifications: CPU with SSE and AVX2 support, 512 GB RAM; * Operating system and version: Ubuntu 22.04.3 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:2995,install,install,2995,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['install'],['install']
Deployability,"=============================] 323 0s 3ms. Reading results.; [=================================================================] 323 0s 0ms. Output database: tmp/2730103712073724212/aln; [=================================================================] 14.93K 0s 154ms. Time for merging into tmp/2730103712073724212/aln by mergeResults: 0h 0m 0s 147ms; Time for processing: 0h 0m 0s 394ms; offsetalignment queryDB tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/aln resultDB --chain-alignments 0; --merge-query 1 --search-type 0 --threads 64 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 2ms; Writing results to: resultDB; ==[===============================================================] 101 0s 3ms. Time for merging into resultDB by mergeResults: 0h 0m 0s 169ms; Time for processing: 0h 0m 1s 64ms; convertalis queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB resultDB.m8 . MMseqs Version: 	10.6d92c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	11; Gap extension cost 	1; Database output 	false; Preload mode 	0; Search type 	0; Threads 	64; Compressed 	0; Verbosity 	3. [=================================================================] 101 0s 8ms; Time for merging into resultDB.m8 by mergeResults: 0h 0m 0s 160ms; Time for processing: 0h 0m 1s 306ms. ## Context; There is no informations in the manual about this cmd, maybe i miss up some steps . ## Your Environment; I use the version 10.6d92c install with conda. * Server specifications; 512 GO RAM; 64 CPU. * Operating system and version: linux last release. Thanks a lot for your help !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:7861,install,install,7861,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,2,"['install', 'release']","['install', 'release']"
Deployability,"> Both me and Martin develop on Macs and we didn't really have any issues.; > What macOS version are you running? I am not sure where to begin to reproduce the issue. The update happened yesterday (both system and Xcode), and I had the brilliant idea of also installing: /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg. To ensure having the /usr/lib and /usr/include directories (from the command-line Xcode tools).; That changed ""ucred.h"" for a version containing that dreaded ""_Atomic"" thing, not found in the previous ""ucred.h"".",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/182#issuecomment-477695697:171,update,update,171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/182#issuecomment-477695697,2,"['install', 'update']","['installing', 'update']"
Deployability,"> From column 7 and column 9 are all zero. It seems that the residue number is 0-indexed. I'll take a closer look at format-mode 0. It should be 1-indexed, but the format convertion might also be buggy. > For example, for the first hit, if the match start and end is 0 and 37 for query, you cannot have alignment length 796 residues. Please make sure you execute the ""mmseqs search"" with --add-backtrace (-a in the new version), that should only be possible if there are no backtrace information included in the search. If nothing else is specified MMseqs2 just computes the alignment score and the end position of the alignment. > This will output a pseudo fasta format file containing seqID, queryCov, targetCov, and evalue. The current createfasta (new version result2flat --use-fasta-header) tool should provide this functionality. Sorry for the delays, we were busy prepearing the first release (including source code, updated documentation and paper preprint). MMseqs2 is now open source. Please use the new binary. It is still compatible with old databases. We renamed some tools make the naming more consistent.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-247754766:892,release,release,892,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-247754766,2,"['release', 'update']","['release', 'updated']"
Deployability,"> Hi Florian,; > ; > Thanks a lot for your pull request. I added some comments. One thing that I am unsure about is the removal of delnodes however. I added that explicitly since an old Uniclust release can have taxids that are already removed in the latest NCBI taxonomy. Then we either get an error or we ignore the protein in Uniprot/Uniclust. Hi Milot, thansk for looking through it! Re deleted nodes: Does it matter whether a taxon that is encountered in a result, but is not in the taxonomy database, is from a deleted taxon or a new taxon (which is not in the taxonomy database)? In both cases the taxon can be ignored (or an error can be thrown). I do agree it can be useful to know whether it's the one case or the other.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/197#issuecomment-487404454:195,release,release,195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/197#issuecomment-487404454,1,['release'],['release']
Deployability,"> Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: **mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au (data.ace.uq.edu.au)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found.** ... ... **awk -F'\[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory)**; > ; > Any help on this will be appreciated. Hi，; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna; Can you give me some advice? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073:696,release,releases,696,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073,1,['release'],['releases']
Deployability,"> MMseqs2 has a limitation to databases of at most ~4 billion sequences (`UINT_MAX`). You have to cluster in multiple splits. @martin-steinegger should be able to help with an example. Hi, sorry for bothering but any update on this?. For now I am splitting the protein into multiple fasta, each containing at most 2billion sequences. I will then use the clusthash and linclust on each split. Finally, some tools like mergedb will be used and do a further clusterhash/linclust. I am wondering whether this is the correct way to do since I cannot find related information in the documentation.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/495#issuecomment-939536444:217,update,update,217,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/495#issuecomment-939536444,1,['update'],['update']
Deployability,"> This looks like it installed a really old version of MMseqs2. Did you install the software through conda into a new environment?. Yes, i used conda to install. I also tried reinstalling and ran the codes. the error repeats.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-2002309687:21,install,installed,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-2002309687,3,['install'],"['install', 'installed']"
Deployability,"> You can use https://gist.github.com to post the log.; > ; > Alternatively, the call to MMseqs2 alone would already help with diagnosing the issue.; ============================================================; Thank you very much for your reply.; I just solved the bug very fortunatelly; The method is to install mpich ; ============================; Download hydra-3.3.1(https://www.mpich.org/downloads/); ./configure --prefix=$DIR/mpich; make; make install; add the mpirun in the end of your .bashrc; =============================; Best wishes",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/213#issuecomment-506283448:307,install,install,307,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213#issuecomment-506283448,2,['install'],['install']
Deployability,"> `--report-mode` will be in release 11, exists currently only in git. Noted!. > I am however not sure I want to binder version in the main repository. Is it possible to add and run it from the GitHub wiki repo (https://github.com/soedinglab/MMseqs2.wiki)?. I think it is possible (because it's a git repo), but I never tried that with binder. Will report back.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/250#issuecomment-561373205:29,release,release,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250#issuecomment-561373205,1,['release'],['release']
Deployability,"> export MMSEQS_FORCE_MERGE=1. It show me the same problem; MMseqs2 installed through conda，and the version is 13.45111; And i have tried run the command:'mmseqs result2msa example_out/mmseqs_files/in.mmdb db/swissprot example_out/mmseqs_files/out.mm_search example_out/mmseqs_files/out.mm_msa':; MMseqs Version: 13.45111; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Allow deletions false; Compositional bias 1; MSA format mode 0; Summary prefix cl; Skip query false; Filter MSA 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Threads 256; Compressed 0; Verbosity 3. [=================================================================] 100.00% 500 0s 0ms ; [=================================================================] 100.00% 567.48K 0s 244ms ; Time for merging to out.mm_msa_sequence.ffdata: 0h 0m 0s 107ms; [=================================================================] 100.00% 500 0s 2ms ; [=================================================================] 100.00% 567.48K 0s 133ms ; Time for merging to out.mm_msa_header.ffdata: 0h 0m 0s 64ms; Query database size: 500 type: Aminoacid; Target database size: 567483 type: Aminoacid; [=================================================================] 100.00% 500 0s 490ms ; Time for merging to out.mm_msa_ca3m.ffdata: 0h 0m 0s 17ms; Time for processing: 0h 0m 1s 666ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197655603:68,install,installed,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197655603,1,['install'],['installed']
Deployability,"> this is something that is annoyingly non-obvious since forever. We should definitely improve this. Hello,; Is this somehow fixed in a recent release?; Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/662#issuecomment-1988657202:143,release,release,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/662#issuecomment-1988657202,1,['release'],['release']
Deployability,@AlvaroRodriguezDelRio I just noticed that you use a super old version of MMSeqs2. I would recommend you to update it. We fixed many bug in the mean time. . The cluster mode 0 (set cover) requires a bi-directional coverage criteria. If it is used with unidirectional coverage than it pick representative sequences that do not fulfill the clustering criteria anymore.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/218#issuecomment-580978693:108,update,update,108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/218#issuecomment-580978693,1,['update'],['update']
Deployability,"@Benjamin-Lee yes, I agree this would be great but there is currently no way in MMseqs2 to add header lines. ; We already discussed this and we might add the feature in future releases.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/434#issuecomment-814574630:176,release,releases,176,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/434#issuecomment-814574630,1,['release'],['releases']
Deployability,@Guillaume-Marseille is there any update on this issues?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-571352026:34,update,update,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-571352026,1,['update'],['update']
Deployability,"@apcamargo Thanks for opening this PR. In order for this code to work, I think one more change is also needed, in line 139 (`VERSION` has now become `VERSION.txt`):. Current code:; ```; downloadFile ""https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION"" ""${TMP_PATH}/version""; ```. Revised:; ```; downloadFile ""https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt"" ""${TMP_PATH}/version""; ```. Mind making this change as well? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/742#issuecomment-1692621476:244,release,releases,244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/742#issuecomment-1692621476,2,['release'],['releases']
Deployability,@fbreitwieser does mmseqs2 works with Pavian now? :) could you please update the format description at the wiki https://github.com/soedinglab/MMseqs2/wiki#taxonomy-assignment-using-mmseqs-taxonomy,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/203#issuecomment-492070879:70,update,update,70,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/203#issuecomment-492070879,1,['update'],['update']
Deployability,@fstrozzi the new release is out. Please check it out!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120#issuecomment-428343198:18,release,release,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120#issuecomment-428343198,1,['release'],['release']
Deployability,@genomewalker yes I belive that you can get a similar result using the coverage parameters. . @adimil @genomewalker I am intending to build a all-against-all search as module in MMseqs2 soon. I will update you if it is ready.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-376403999:199,update,update,199,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-376403999,1,['update'],['update']
Deployability,@ksahlin I try to cluster also a huge set of sequences > 100 mio. proteins but it does not have any problems. Do you use nucleotide sequences? Is it possible to get access to them? . Update: I have now also clustered 115 mio. nucleotide sequences and it did not crash. . Could you also try to delete the `linclust_tmpdir` and rerun it?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418178571:183,Update,Update,183,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418178571,1,['Update'],['Update']
Deployability,"@martin-steinegger @milot-mirdita ; I have questions regarding the integration of this PR with the master branch. 1\) Our new algorithm uses[ 6 additional bytes](https://github.com/soedinglab/MMseqs2/pull/873/files#diff-01a2b94815f4cfc3201aa5f9a0108d6c01627ea12246d61963965559afb9a220) to store the adjacent information per each sequence, so the memory needed per sequence increases from 16 to 22 bytes. So if we were to pack our new linclust together with the old one, and use a parameter to choose between the two at runtime, quite a lot of memory would be wasted for users of old-linclust. Should I consider a prettier way of integrating the two, like dividing the structs and functions used for each version under the hood?; Or can we just assume that our users would be happier with the new version regardless of the increased memory usage?. 2\) If we were to replace linclust with our new version, should we provide the option to use the original version, or should we just totally replace it, or stage it for deprecation? I'm not sure how much this change would affect our users, or how many would want to use the old version instead of the new.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2311834168:67,integrat,integration,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2311834168,2,['integrat'],"['integrating', 'integration']"
Deployability,"@martin-steinegger I have tested by passing the same `-s` when creating the indexes, following are the results: . >Using same `-s` as `search` in `createindex` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a*-a* | 10107 | 23.81 |; | b*-b* | 23206 | 42.43 |; | a*-b* | 8155 | 26.46 |; | b*-a* | 8390 | 37.12 |. They are just slightly different. > If you index a database with MMseqs2 then all k-mers are stored if no sensitivity -s is provided to createindex ; ; Actually I thought that could have been the problem. . In the early versions of MMseqs I had noticed the difference when running without the indexed DBs, but it was not that much, and the only side-effect was a slight increase in the overall execution time (maybe 10~20% slower).; Nevertheless, now it runs faster and matches less, which is caused from what you explained about I guess. . > Do you have a small example that I could use the reproduce this issue? . Yes, get the 2 small proteomes I used from the following link ; https://send.firefox.com/download/8d4ac7f72e90671b/#ioryCshD4vIZCAPxd30CCw. I will do another couple of tests to see if I can increase the accuracy when no indexing is performed. . `UPDATE`; @martin-steinegger I think just found the problem... ; When running `search` without selecting the matrix for pre-filtering the number of hits, as well as the running times, go back to what expect. The differences are caused in this case by the use of the default VTML in the prefiltering step. As you can see from the following table, the results are much more reasonable. >Without `--seed-sub-mat nucl:nucleotide.out,aa:blosum62.ou` in `search` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 10209 | 29.87 |; | b-b | 23523 | 52.05 |; | a-b | 8281 | 32.13 |; | b-a | 8533 | 45.62 |; ; I confirm this is only happening when using blosum62 in the `prefilter` step",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537:1208,UPDATE,UPDATE,1208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537,1,['UPDATE'],['UPDATE']
Deployability,"@martin-steinegger I haven't encountered the problems anytime recently, but I also haven't used mmseqs2 much recently. I am planning using it more soon, so I can let you know. Is mmseqs2 updated on bioconda?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-513135871:187,update,updated,187,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-513135871,1,['update'],['updated']
Deployability,"@martin-steinegger a related question. Using the latest release 5-9375b (the precompiled AVX2 binaries to be precise), and the new ```easy-linclust``` command I have seen that the *_req_seq.fasta file that is created is also not a proper Fasta file. Instead of having the aminoacid sequences of the representatives, I have the sequences IDs, like this . ```; >sequence_1; sequence_1; >sequence_2; sequence_2; ```. Is it a bug ? . Thanks!. Edit: I've found this happening with both release 5 and 4, I've opened an issue https://github.com/soedinglab/MMseqs2/issues/120",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/114#issuecomment-423197655:56,release,release,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/114#issuecomment-423197655,2,['release'],['release']
Deployability,"@milot-mirdita ; Some template black magic seems pretty convenient (albeit a little dangerous). I'll try looking into it and check if it breaks anything. > But martin is also right, a 30% increase in RAM is not that much. Then if integrating the new linclust into our old version with dynamic memory allocation gets too ugly, I'll consider giving up on the 6 bytes of memory, or even removing the old version entirely. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2313991678:230,integrat,integrating,230,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2313991678,1,['integrat'],['integrating']
Deployability,"@milot-mirdita Below is the log file from one of the runs. Looks like it's running out of memory, before the job dies. ; <img width=""1438"" alt=""image"" src=""https://user-images.githubusercontent.com/9979661/191375197-838700eb-51d2-4d9c-9be1-efa1c4b9e9a9.png"">. [chunk00_clustering_stdout.log](https://github.com/soedinglab/MMseqs2/files/9611572/chunk00_clustering_stdout.log). And here is the job efficiency report from SLURM; ```; Job ID: 359779; Cluster: aion; User/Group: sbusi/clusterusers; State: OUT_OF_MEMORY (exit code 0); Nodes: 1; Cores per node: 128; CPU Utilized: 10:13:07; CPU Efficiency: 1.00% of 42-16:44:48 core-walltime; Job Wall-clock time: 08:00:21; Memory Utilized: 206.26 GB; Memory Efficiency: 92.08% of 224.00 GB; ```. Do you think merely providing more cores will do the trick or is there something else that I'm missing?. Thank you!. *UPDATE*: Tried the run with more cores, but across 6 nodes - didn't really expect it to work given your last comment, but was worth the shot; ```; Job ID: 360184; Cluster: aion; User/Group: sbusi/clusterusers; State: OUT_OF_MEMORY (exit code 0); Nodes: 6; Cores per node: 128; CPU Utilized: 09:26:34; CPU Efficiency: 0.23% of 172-18:08:00 core-walltime; Job Wall-clock time: 05:23:55; Memory Utilized: 1.21 TB (estimated maximum); Memory Efficiency: 92.41% of 1.31 TB (1.75 GB/core); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252977214:859,UPDATE,UPDATE,859,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252977214,1,['UPDATE'],['UPDATE']
Deployability,@milot-mirdita I'm running into this same issue. Any update on progress?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-625418051:53,update,update,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-625418051,1,['update'],['update']
Deployability,"@milot-mirdita Thanks for the quick response and for the data type fix! I tested the latest master branch, and the `gtdb.lookup` file seems to be correct now after running `mmseqs databases gtdb results tmp`. Taxonomy results look as expected when running `mmseqs easy-taxonomy` using this updated GTDB database. (I did not test the awk code you included, but thanks for writing this.). I think it's OK to close this issue now. Thanks again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1695134383:290,update,updated,290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1695134383,1,['update'],['updated']
Deployability,"@milot-mirdita We have not uploaded MMSeqs2 version 13 to Debian yet. The deadline for updates for the forthcoming stable release of Debian is but a few days away. Should we; 1. Upload MMSeqs2 version 13, but drop 32-bit architectures; or; 2. Upload MMSeqs2 version 13 + some patches cherry picked; or; 3. Keep MMSeqs2 version 12 for Debian ""Bullseye"". Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-792862255:87,update,updates,87,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-792862255,3,"['patch', 'release', 'update']","['patches', 'release', 'updates']"
Deployability,@milot-mirdita could you write an update?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/59#issuecomment-362435441:34,update,update,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/59#issuecomment-362435441,1,['update'],['update']
Deployability,"@milot-mirdita does the formula on Brew (linuxbrew) are updated? ; I'm trying again with my current version, but in a few minutes, I'll try to update.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483313984:56,update,updated,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483313984,2,['update'],"['update', 'updated']"
Deployability,"@milot-mirdita is there any update on this issue?. I'm on an Intel Mac (multithreading disabled) with MMseqs2 release 15.6f452 and still seeing very strange behavior from this pipeline. Using two protein FASTA files (~225 normal-length proteins each), where there are many homologs spanning the full range of percent identities and the following command:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp; ```. I get an empty output file, despite a really nice set of outputs from the `easy-search` pipeline in just a few seconds. Even stranger, when I try to make `easy-linsearch` only find high-identity HSPs, with the following:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp --min-seq-id 0.8 -c 0.8; ```. The memory utilization as profiled in the Apple `Activity Monitor` very quickly exceeds 250 GB (system only has 64 GB, so I think this means we are in disk swap territory), and I'm not sure how long it would take to finish - I killed the job after about a half hour of waiting. Input files are attached, in case you have any interest in attempting to reproduce the issue. [aa_1.fasta.gz](https://github.com/user-attachments/files/16267985/aa_1.fasta.gz); [aa_2.fasta.gz](https://github.com/user-attachments/files/16267986/aa_2.fasta.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834:28,update,update,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834,4,"['pipeline', 'release', 'update']","['pipeline', 'release', 'update']"
Deployability,"@milot-mirdita out of curiosity, any plans for a release in the next while?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1209671759:49,release,release,49,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1209671759,1,['release'],['release']
Deployability,"@milot-mirdita thanks for your reply; https://github.com/sokrypton/ColabFold/blob/main/colabfold_search.sh; in the ""colabfold_search.sh"" file , there are reminds at first ""Do not use this script. Use the python colabfold_search instead"".; **why not advice us to this ""colabfold_search.sh"" scripts? what is ""python colabfold_search""?**; Maybe the current ""colabfold_search.sh"" is need to update, at least it does not work with the script in readme.; `colabfold_search input_sequences.fasta /path/to/db_folder msas`. For single sequences, **the sufficient RAM** means: 768GB-1024GB RAM to stay resident in RAM and have enough RAM spare for worker processes, yes?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495415310:387,update,update,387,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495415310,1,['update'],['update']
Deployability,"@milot-mirdita yes, i installed the latest version (from https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz ) and see the same error.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759783355:22,install,installed,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759783355,1,['install'],['installed']
Deployability,"@mr-c yes, we will soon release a new version! Thank you so much for this great work.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/321#issuecomment-649476038:24,release,release,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/321#issuecomment-649476038,1,['release'],['release']
Deployability,"@nick-youngblut I am sorry about the multi output. The main reason for them is to avoid IO. Slow IO system can take hours/days to merge tera bytes of data and MMseqs2 modular architecture require multiple IO steps unlike other aligners. The IO step is especially critical if the search was performed using many threads since the merging runs single threaded. ; However, every module should create a `.dbtype` file at the end, which can be used to check if the module finished successfully. . The `clusterupdate` is one of the modules that needs ground up rebuild. Too much of its logic is done in Bash steps that do not verify the consistency correctly. . I am a bit confused why your `clusterupdate` uses `extractorfs`. What is your exact setup? Do you try to update protein clusters using genomes?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179:761,update,update,761,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179,1,['update'],['update']
Deployability,@nick-youngblut could you please try to run your example on the newest release?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-524199674:71,release,release,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-524199674,1,['release'],['release']
Deployability,"@ppflrs I have rebuilt the metaclust database by adding new identifier and reclustering everything. Every protein source should be now labeled with uniq identifier which can be used to traced the protein to the JGI, OM-RGC, Uniprot or NCBI. ; The new release is available here https://metaclust.mmseqs.com/2018_06/ ; ; The identifier looks like this now. >RifCSPlowO2_12_1023861.scaffolds.fasta_scaffold367679_1 # 24 # 428 # -1 # ID=367679_1;partial=00;start_type=ATG;rbs_motif=None;rbs_spacer=None;gc_cont=0.435. `RifCSPlowO2_12` identifies the JGI project. The project can be accessed the following way (you need an JGI account): . https://genome.jgi.doe.gov/portal/pages/dynamicOrganismDownload.jsf?organism=RifCSPlowO2_12. Within the project the contig is contained in the file `1023861.scaffolds.fasta` at fasta record `scaffold367679_1`. . The rest of the header contains the prodigal prediction information. . I have also added a file metaclust_50_cluster.fasta.gz which contains all cluster member in a fasta like fromat https://github.com/soedinglab/MMseqs2/wiki#cluster-fasta-like-format.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/87#issuecomment-399853855:251,release,release,251,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/87#issuecomment-399853855,1,['release'],['release']
Deployability,"A quick comment, in case it should help other users in a similar situation: it took me a while to understand why the performance of mmseqs2 search speed was at least an order of magnitude slower on our compute cluster than it was on a single server. It turns out the UniRef90 target DB index file with sufficient split (16) to accommodate the modest node RAM (32GB) was over 200GB in size and therefore too large to fit on the limited node local disks, so it stayed on the network shared disk bay (nonetheless with reasonable Infiniband 40Gb/s connection to the nodes). With such a configuration the mmseqs2 search jobs on the nodes were endlessly I/O bound, using a ~20% fraction of a core instead of the 16 cores available. As soon as I deleted the target DB index files (_sk7_), the mmseqs2 search jobs distributed on the cluster nodes performed again really well!; So in a nutshell, I would recommend not using pre-indexed DB files on a compute cluster when these large files can't reside on a local disk, and instead use on the fly indexing which of course induces a significant overhead, but orders of magnitude less significant than the actual index file access on shared network storage. And of course this on the fly indexing overhead becomes less important as the query DB gets larger :) With large query DBs, I'm very impressed by the speed of (non MPI) distributed mmeseqs on our modest cluster (whilst providing excellent sensitivity of course)!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252239392:582,configurat,configuration,582,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252239392,1,['configurat'],['configuration']
Deployability,"A short update: I started working on this, however found some potential weirdness in result2msa that I want to look first before pushing the changes. Should be done in the next few days.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-642054816:8,update,update,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-642054816,1,['update'],['update']
Deployability,ARM64 installation issue - M3 chip MacBook Pro,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/834:6,install,installation,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834,1,['install'],['installation']
Deployability,"According the main `mmseqs` help doc (mmseqs2 v7.4e23d):. ```; convertalis 	Convert alignment DB to BLAST-tab format, SAM flat file, or to raw pairwise alignments; ```. However, `mmseqs convertalis` doesn't actually seem to have any option for generating a SAM file. Am I just missing this feature in the `mmseqs convertalis` docs or maybe the help docs need to be updated?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/143:365,update,updated,365,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/143,1,['update'],['updated']
Deployability,After testing few strategies I zipped all the commands along with logs for you to have a look after which commands and in which moments the errors occurred. I also attach those with comments to show how the clustering went and with what time efficiency. I understand that I should patch the source and run the software again in the suspected steps to printout the problems?. [logs.zip](https://github.com/soedinglab/MMseqs2/files/1815637/logs.zip),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/72#issuecomment-373386179:281,patch,patch,281,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/72#issuecomment-373386179,1,['patch'],['patch']
Deployability,"Agree with @meren . Releases and tags are important mostly for reproducibility, and also for developers to announce milestones to users. Additionally when using [semantic versioning](http://semver.org/) tags have very specific meanings that can help users a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/46#issuecomment-339996541:20,Release,Releases,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/46#issuecomment-339996541,1,['Release'],['Releases']
Deployability,"Ah sorry, the instructions missed a step and wouldnt work with a release build anyway. Could you paste a few of the query headers here (or send an email)? I can try to figure out what's going wrong with them.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878454729:65,release,release,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878454729,1,['release'],['release']
Deployability,"Ah that looks like a bug, it should print out the default value. The new values are:; ```; pca = MultiParam<PseudoCounts>(PseudoCounts(1.1, 1.4));; pcb = MultiParam<PseudoCounts>(PseudoCounts(4.1, 5.8));; ```; The first value is `--pseudo-cnt-mode 0` the second one is `--pseudo-cnt-mode 1`. Profile databases with the newer commits won't work anymore with 13 and before. Yes, we are planing to make a new release, but there is a lot going on :/ Hopefully soon.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059455251:406,release,release,406,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059455251,1,['release'],['release']
Deployability,"Ah yes, the bioconda version has some known issues. We added quite a lot of testing this recent days and fixed many issues. Could you please try the most recent version? We will make a new release soon.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488123531:189,release,release,189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488123531,1,['release'],['release']
Deployability,"Ah, ok that actually does make sense. It's not using the OS tar because I was running it through a singularity container. So I'm guessing whatever tar was built into the container had the issue. I tried the standard command again but with a conda install of mmseqs2 and it worked fine. Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-939298426:247,install,install,247,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-939298426,1,['install'],['install']
Deployability,"Amazing! I would install by compiling source, but my cluster only has g++ v9.8.5. . Are the static linux versions updated? I just tried reinstalling with ; ```; wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz ; tar xvzf mmseqs-linux-avx2.tar.gz; export PATH=$(pwd)/mmseqs/bin/:$PATH; ``` ; but the changes aren't reflected there yet.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771981251:17,install,install,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771981251,2,"['install', 'update']","['install', 'updated']"
Deployability,"Another issue I notice is that not all representative sequences in 30% are found in 50% or 70%, i.e. the clustering is not ""hierarchical"". I added the following lines to extract the representative sequences from the clustered. ; ```; mmseqs createsubdb $OUTDIR/uniclust50_${RELEASE} $SEQUENCE_DB $OUTDIR/uniclust50_${RELEASE}_rep; mmseqs convert2fasta $OUTDIR/uniclust50_${RELEASE}_rep uniclust50_rep.fasta; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1592093360:274,RELEASE,RELEASE,274,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1592093360,3,['RELEASE'],['RELEASE']
Deployability,"Any updates on this? I've also run into the same issue creating a profile database from a MSA, and using the profile database to search my target database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-766283679:4,update,updates,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-766283679,1,['update'],['updates']
Deployability,"Any updates on this? I've tried a couple of things, but I still got the ""Invalid database read for database data file"" error. Do I have to somehow subset the *_h and *.index files in addition to the database file?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-471331643:4,update,updates,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-471331643,1,['update'],['updates']
Deployability,Any updates on what caused the issue? I'm running into the same error with protein fastas I downloaded from ncbi's ftp for bacterial proteins: https://ftp.ncbi.nlm.nih.gov/refseq/release/bacteria/*.faa.gz,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2079914524:4,update,updates,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2079914524,2,"['release', 'update']","['release', 'updates']"
Deployability,Are your profiles in the MMseqs2 clusters format? If yes than you can update the cluster database by following the next steps. (0) search the profiles against the set of new proteins.; (1) use `swapresults` to get mapping of protein to profile.; (2) use `filterdb ... --extract-lines 1` to extract the top hit for each protein. ; (3) trim only the first column since the cluster format just has only the sequence identifier. This can be done with `fliterdb ... --trim-to-one-column`.; (4) swap again to get a profile (cluster) to protein mapping `swapresults`.; (5) use `mergedbs` to combine your old database with your new database. This is really hardcore mmseqs internal knowledge. We will offer a MMseqs2 tutorial at the ECCB18 if you want to learn more about its internals.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/108#issuecomment-408477910:70,update,update,70,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/108#issuecomment-408477910,2,['update'],['update']
Deployability,"Awesome! I pulled down the new commit, removed the old build directory and followed the installation instructions in the readme but run into an error ( cmake 3.7.1 and g++ v4.9). Should I remove the whole github repo for a clean installation or is this compilation error something that was introduced in the commit?; See log below. ```; [ksahlin@desmond build]$ cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; -- The CXX compiler identification is GNU 4.9.2; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /galaxy/home/ksahlin/prefix/source/MMseqs2; -- Project Directory: /galaxy/home/ksahlin/prefix/source/MMseqs2; -- Compiler is GNU ; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.1 extensions, using flags: -march=native -msse4.1 -mfpmath=sse; -- Found ZLIB; -- Performing Test HAVE_ZLIB_C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:88,install,installation,88,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,3,"['RELEASE', 'install']","['RELEASE', 'installation']"
Deployability,Awesome! Thank you for such the quick turn around. What is the best way to update my installation?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457664224:75,update,update,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457664224,2,"['install', 'update']","['installation', 'update']"
Deployability,"Based on your suggestions, I have made a few little changes to the original script. In particular, I turned off `OMP_PROC_BIND` and changed the `--max-seq-len` and `--target-cov 0.95` flags. I didn't yet replace line 112-114 with cluster reassignment.; ```; #!/bin/bash -ex; [ ""$#"" -lt 2 ] && echo ""Please provide <sequenceDB> <outDir>"" && exit 1;; [ ! -f ""$1"" ] && echo ""Sequence database $1 not found!"" && exit 1;; [ -d ""$2"" ] && echo ""Output directory $2 exists already!"" && exit 1;. function abspath() {; if [ -d ""$1"" ]; then; (cd ""$1""; pwd); elif [ -f ""$1"" ]; then; if [[ $1 == */* ]]; then; echo ""$(cd ""${1%/*}""; pwd)/${1##*/}""; else; echo ""$(pwd)/$1""; fi; fi; }. RELEASE=""${3:-$(date ""+%Y_%m"")}""; SHORTRELEASE=""${4:-$(date ""+%y%m"")}"". INPUT=$1; OUTDIR=$2/$RELEASE. TMPPATH=$OUTDIR/tmp; mkdir -p $TMPPATH. OUTDIR=$(abspath $OUTDIR); TMPPATH=$(abspath $TMPPATH). PREFILTER_COMMON=""$COMMON""; PREFILTER_FRAG_PAR=""--min-ungapped-score 100 --comp-bias-corr 0 -s 1 ${PREFILTER_COMMON}""; PREFILTER1_PAR=""-c 0.9 --comp-bias-corr 1 -s 2 ${PREFILTER_COMMON}""; PREFILTER2_PAR=""-c 0.8 --comp-bias-corr 1 -s 6 ${PREFILTER_COMMON}""; ALIGNMENT_COMMON=""$COMMON -e 0.001 --max-seq-len 32768 --max-rejected 2147483647""; ALIGNMENT0_PAR=""-c 0.9 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 0 ${ALIGNMENT_COMMON}""; ALIGNMENT1_PAR=""-c 0.8 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; ALIGNMENT2_PAR=""-c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; CLUSTER_FRAG_PAR=""--cluster-mode 2""; CLUSTER0_PAR=""--cluster-mode 2""; CLUSTER1_PAR=""--cluster-mode 0""; CLUSTER2_PAR=""--cluster-mode 0""; SEARCH_PAR=""$COMMON --profile --k-score 100""; CSTRANSLATE_PAR=""-x 0.3 -c 4 -A $HHLIB/data/cs219.lib -D $HHLIB/data/context_data.lib -I ca3m -f -b"". SEQUENCE_DB=""$OUTDIR/uniprot_db"". export OMP_PROC_BIND=false; mmseqs createdb ""$INPUT"" ""${SEQUENCE_DB}"". STEP=""_FRAG""; INPUT=""${SEQUENCE_DB}""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STE",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:670,RELEASE,RELEASE,670,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,2,['RELEASE'],['RELEASE']
Deployability,"Because we don't develop the .sh script anymore and it's not up-to-date. The development is happening in the python version now. If you want to use the server - with fast response times, like our has - you need a server with ~1TB permanently committed RAM. Anything less will not work.; `colabfold_search` does not have this issue, however, it has slightly different performance pitfalls to look out for. Single query searches will remain slow, with `colabfold_search`. Our proposed workflow is to gather a few hundred to thousands of queries. Do the MSA generation stage with `colabfold_search` and then batch predict them with `colabfold_batch`. Edit: the python `colabfold_search` is also pip-installed together with `colabfold_batch`. If you installed with localcolabfold (recommended) or with pip. You will have both available.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497:696,install,installed,696,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497,2,['install'],['installed']
Deployability,"Behavior; Segfault when reaching the `search` step (after `extractorfs`). ## Steps to Reproduce (for bugs); ```; module load MMseqs2/10-6d92c-foss-2018b; cd /Pfam/directory/. mmseqs convertmsa Pfam-A.full.gz pfam_msa_db; mmseqs msa2profile pfam_msa_db pfam_profile --match-mode 1; mmseqs createindex pfam_profile tmp -k 6 -s 7. PFAM=""location/of/pfam_profile""; K1M=""location/of/input/fasta""; ORFS=""where/to/save/orfs""; RES=""location/of/final/result"". cd ; mmseqs createdb ${K1M} ${ORFS}; mmseqs search ${ORFS} ${PFAM} ${RES} tmp -k 5 -s 7. module unload MMseqs2/10-6d92c-foss-2018b; ```. ## MMseqs Output (for bugs); ```; Caught signal 11 (Segmentation fault: address not mapped to object at address 0x7f6b77d84270); ==== backtrace (tid: 1754) ====; 0 0x0000000000142e40 __memcpy_ssse3() :0; 1 0x00000000004d8b86 PrefilteringIndexReader::getIndexTable() ???:0; 2 0x00000000004cc0c6 Prefiltering::runSplit() ???:0; 3 0x00000000004cc90d Prefiltering::runSplits() ???:0; 4 0x00000000004cd10d Prefiltering::runMpiSplits() ???:0; 5 0x00000000004c2974 prefilter() ???:0; 6 0x000000000044a7d6 runCommand() ???:0; 7 0x0000000000442d29 main() ???:0; 8 0x0000000000021c05 __libc_start_main() ???:0; 9 0x000000000044a46c _start() ???:0; =================================; tmp/14557808422999051349/searchtargetprofile.sh: line 28: 1754 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""${INPUT}"" ""${2}"" ""${TMP_PATH}/; ```. ## Context; I want to find candidate transcription factors in a non-model organism. By aligning translated bulk RNA-seq reads against Pfam, I hope to get matches against known transcription factor families or DNA binding domains. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: release 10-6d92c-foss-2018b; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): for the runs: 1 core, 30Gb memory. CPUs support AVX2, as far as I can tell.; * Operating system and version: CentOS 7",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/259:1881,release,release,1881,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259,1,['release'],['release']
Deployability,"Building on `linux-rocky8-x86_64`. I've just been patching it for Spack, so figured I'd push it across. These changes are as per https://gcc.gnu.org/gcc-13/porting_to.html",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/714#issuecomment-1584672490:50,patch,patching,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/714#issuecomment-1584672490,1,['patch'],['patching']
Deployability,Can you post the output of `ldd /usr/local/bin/mmseqs` and `make clean build` in wip/mmseqs2? I wonder if my build is picking up some optional dependency that yours is not. I'm guessing you don't have many packages installed on the VM. Thanks...,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870790679:215,install,installed,215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870790679,1,['install'],['installed']
Deployability,"Can you try the newest MMseqs2 release? 7 is really ancient. MMseqs2 is however really not well tested for clustering whole genomes/long contigs. You might have more luck in running only linclust and not the whole clustering workflow. > PS: Y'all are ANGELS for keeping up with all the users and issues listed for mmseqs. Seriously grateful, hoping you have ample funding to keep the devs happy... 🥲",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/632#issuecomment-1293776287:31,release,release,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632#issuecomment-1293776287,1,['release'],['release']
Deployability,"Can you use the `MMSEQS_ARCH` cmake flag to fix the mips build? I could add a flag like HAVE_ARM8 for MIPS. However, I am not sure we want to add code that is not regularly tested by continuous integration.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562:183,continuous,continuous,183,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"Careful about the parameters though, they are not quite the same for the two tools, if I remember correctly. I would recommend to install `libopenmpi-dev` (or your OS equivalent) and rebuild the HH-suite, it will detect the presence of MPI and build cstranslate_mpi, ffindex_apply_mpi, hhblits_mpi etc.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/83#issuecomment-383552461:130,install,install,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/83#issuecomment-383552461,1,['install'],['install']
Deployability,Cluster update speedup,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/269:8,update,update,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269,1,['update'],['update']
Deployability,Compiling from zip results in this `GITDIR-NOTFOUND`.; I would recommend to download MMseqs2 again (the latest release from conda or from github releases or compile from source) and try again.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965838444:111,release,release,111,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965838444,2,['release'],"['release', 'releases']"
Deployability,Conda install is failing with PackagesNotFoundError:,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/744:6,install,install,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/744,1,['install'],['install']
Deployability,Conda release of latest version,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/760:6,release,release,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/760,1,['release'],['release']
Deployability,"Conda should be up to date, so you should be able to just update the package.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590301981:58,update,update,58,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590301981,1,['update'],['update']
Deployability,"Could you please install the latest git version? I think I know whats going on, the latest commit should fix the issue. Another thing that you can do to fix your current run is:; ```; cp est00001DB.dbtype /tmp/3706626149599022609/top1.dbtype; ```. And rerun the same command.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381098368:17,install,install,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381098368,1,['install'],['install']
Deployability,Could you please try to reproduce the issue with the latest MMseqs2 release? Your build is quite old the issue might have already been fixed in the meantime. Please try this release: https://github.com/soedinglab/MMseqs2/releases/tag/8-fac81; We were able to execute your example successfully with it.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/186#issuecomment-482225245:68,release,release,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/186#issuecomment-482225245,3,['release'],"['release', 'releases']"
Deployability,Could you please try to rerun the clustering the same dataset with the latest release? We have since improved the handling of long sequence and the issue might already be resolved.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604144335:78,release,release,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604144335,1,['release'],['release']
Deployability,Could you please update your version and recreate the index there was a bug in this version. ; If the bug still persists please could you please send us the debug backtrace? ; To debug first compile MMseqs2 in debug mode. cmake -DCMAKE_BUILD_TYPE=Debug .. ; make . And then run the alignment with gdb . gdb --args mmseqs align tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 tmp/18071041534032520912/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 15 -v 3. After the crash just type . bt,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-437061143:17,update,update,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-437061143,1,['update'],['update']
Deployability,Could you try to update to the latest release and see if the error still happens? I cannot reproduce it locally.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-804121974:17,update,update,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-804121974,2,"['release', 'update']","['release', 'update']"
Deployability,Could you try using the latest git version? I think we already fixed the issue and the fix should be part of the next release (sorry for the delay).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/344#issuecomment-678089285:118,release,release,118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/344#issuecomment-678089285,1,['release'],['release']
Deployability,Could you try with the latest release? Your issue was most likely fixed in the meantime.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809598914:30,release,release,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809598914,1,['release'],['release']
Deployability,Dear MMseqs Team!; the command:; `mmseqs createdb /home/db/HH/nr /home/db/HH/uniclust/output/2020_12/uniprot_db --max-seq-len 14000`; fails with error:; `Unrecognized parameter --max-seq-len`; I'm using that withing HHsuite uniclust generating pipeline. Is that option still supported?. I compiled mmseqs2 today from git repo.; mmseqs command reports: `MMseqs2 Version: GITDIR-NOTFOUND`,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/384:244,pipeline,pipeline,244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/384,1,['pipeline'],['pipeline']
Deployability,"Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). I think it's probably salvageable. I'll need to look over your output in detail. Another question: This was clustered using easy-linclust not using easy-cluster right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616:157,update,update,157,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616,1,['update'],['update']
Deployability,"Dear Milot,. Thanks you for recommending the use of updated version and fixing performance issues. There were 3 billion sequences which clustered in 1 billion using was-cluster approach. I do not want to re-cluster the version of data I processed previously since I annotated these ~1 billion sequences and used in different projects already. As it seems, It may not be good idea to use db files from easy-cluster output. Do you think it is useful to create a new db (EBdb) out of easy-cluster output of the previous run, using rep_seq.fasta, and use EBdb as a template to compare newer sequences I want to cluster and finally update the EBdb to EBdb_new?. Intikhab. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 12:42; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module result2repseq. I think I fixed the performance issue in the latest commit cc7d7da<https://github.com/soedinglab/MMseqs2/commit/cc7d7da30ec779d6a2e886438f8295f59e2192f1>. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the easy- workflows yet. I'd recommend to stick to the basic commands as shown in the user guide. -; You",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337:52,update,updated,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337,4,['update'],"['update', 'updated']"
Deployability,"Dear Murat,. We consider every commit that has passed the regression pipeline on CodeShip as stable (see the codeship badge). . However we are aware about policies at many institutes to only allow using tagged stable software versions. We are currently preparing a pipeline to easily produce stable tagged releases on all relevant platforms (GitHub Releases, Homebrew, Linuxbrew, Bioconda, Docker, etc.). We hope to have this done soon. Until then please use either the latest static build (that one has always passed the regression pipeline) or the latest regression pipeline passing commit. Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/46#issuecomment-339919158:69,pipeline,pipeline,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/46#issuecomment-339919158,6,"['Release', 'pipeline', 'release']","['Releases', 'pipeline', 'releases']"
Deployability,"Dear author,; I am working a NR annotation for a large number of samples, and I find MMseq2 is a better software. So I would like to ask whether I can run faster together or one by one, My server configuration: CPU 144 and memory 500G.; All cat together: 48 G; One is ~200 M",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/523:196,configurat,configuration,196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/523,1,['configurat'],['configuration']
Deployability,"Dear colleagues,. I'm Paul DE BOISSIER, PhD student at the IBDM, in Marseille, France.; I'm developing a pipeline in which the first step is an orthologous search. For that, I already implemented a RBH search and an access to OrthoDB.; My problem is that OrthoDB is not quite complete and the RBH took a lot of time to run.; I discussed with my supervisor, Bianca Habermann, and we think that using MMseqs2 can help us a lot to reduce our running time. So, I have deeply read the documentation but maybe I missed something. My pipeline is running with refseq as the main database, especially for the RBH, with all the files in .pal, .pos,...; My problem is that I want to use my already existing blast database with MMseqs2 but I don't find any options to create the MMseqs2 database from such database.; Obviously, I read about the function ""databases"" which downloads the database, and I can use NR or UniProtKB but I don't want to redownload a whole database as I have not a lot of space in our servers, especially as we share it among the team. Do you know how I can manage it please ?. Best. DE BOISSIER Paul; PhD Student - Computational Biology Group; IBDM – Institut de Biologie du Développement de Marseille; paul.de-boissier@univ-amu.fr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/395:105,pipeline,pipeline,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/395,2,['pipeline'],['pipeline']
Deployability,"Dear developer,; I'm using the GTDB database to assign the taxonomic label for my contigs, I have downloaded the GTDB from the predefined database by the command `mmseqs databases GTDB /my_path/GTDB tmp`, then I run the command:; ```; mmseqs taxonomy filter_contig_gclust_MMseqdb $GTDB_db/GTDB filter_contig_gclust_GTDB_res tmp --threads 80 --remove-tmp-files; mmseqs createtsv filter_contig_gclust_MMseqdb filter_contig_gclust_GTDB_res filter_contig_gclust_GTDB_res.tsv; ```; finally, I found there are some thing wrong, for the taxid and the taxon name cannot be found in the NCBI taxonomy database, and they are not match. ; here are part of the results:. > k99_16878 1840 genus Faecalimonas 2 2 1 0.920; k99_25114_2 11880 species Anaerosporobacter mobilis 2 2 2 1.000; k99_30336_3 176 genus Clostridium 1 1 1 1.000; k99_11777_2 888 species Hafnia paralvei 1 1 1 1.000; k99_13149_3 11909 species Fournierella massiliensis 1 1 1 1.000; k99_53411_3 38757 species Faecalimonas sp900550975 2 2 1 0.950. I noticed the module `Create a seqTaxDB for GTDB` in the wiki page, I think maybe even though I downloaded the predefined database, I still need to do these process (build name.dmp, node.dmp from GTDB taxonomy), am I right?. If so, the problem is that the website `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna` isn't work, Can you help me ,please ?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548:1311,release,releases,1311,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548,1,['release'],['releases']
Deployability,Deleted sequences should also be handled correctly now. Also we were not very consistent with producing the same parameters as the normal clustering workflow would have produced. Cluster update should now be in quite a bit better shape.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-684083474:187,update,update,187,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-684083474,1,['update'],['update']
Deployability,"Depending on, how strict you are with the pairwise sequence identity between cluster members, I have two different answers for you. You can start with the highest sequence identity threshold (e.g. 90%) and then continue clustering that clustering down to the next lowest threshold (e.g. 50%) and then the next one (e.g. 30%). However, while that approach will be fast. When two 50% sequence identity clusters are merged into one 30% cluster. The sequence identity of the new representative with the merged members can drop below 30%. For our Uniclust databases, we solved the issue by clustering straight down to 30%, and then reusing the alignment results to also produce a 50% clustering, but the step from 90% to 30% is quite a bit slower than 90%->50%->30%:; https://github.com/soedinglab/uniclust-pipeline/blob/develop/uniclust_workflow.sh#L143",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/84#issuecomment-384807058:802,pipeline,pipeline,802,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/84#issuecomment-384807058,1,['pipeline'],['pipeline']
Deployability,Did using a newer release help? I am trying to see what should be urgently dealt with before a new release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-776908014:18,release,release,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-776908014,2,['release'],['release']
Deployability,"Did you inted to compile with MPI? Could you please send me your cmake call and output? ; If you do not want to use MPI you can specify `cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..`. The MPI compiled version can not be used as stand alone binary. You have to specificy an MPI runner and the amount of nodes you want to run your code. E.g. `RUNNER=""mpirun -np 42"" mmseqs search queryDB targetDB resultDB tmp`. . I also see that your query set has the size 0. `Query database: tara_test.faa(size=0)`. How did you build this query set? Could you please send us your workflow?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251317885:175,Release,Release,175,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251317885,1,['Release'],['Release']
Deployability,"Do you have macports installed by chance?; Might be a conflict between it and homebrew, you should use either or, not both. (https://github.com/Homebrew/legacy-homebrew/issues/45258). Another thing that you can try to install `binutils` from homebrew, but I don't think thats it. And a second thing: Try updating your xcode to the latest available version, it might also ship a newer assembler and linker (as/ld). I think the brew gcc still uses the system assembler and linker.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265058952:21,install,installed,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265058952,2,['install'],"['install', 'installed']"
Deployability,Docker image update to fix debian-slim update issue,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/541:13,update,update,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541,2,['update'],['update']
Deployability,Does it work with the default `-k 5`? Could you also please check if the issue might be resolved in the new release?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483307823:108,release,release,108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483307823,1,['release'],['release']
Deployability,Does the issue also happen in the newest release?; Could you capture the full log of the different runs and upload those?. Sending us the data via email or similar is also not possible?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590249182:41,release,release,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590249182,1,['release'],['release']
Deployability,Does this issue also happen in release 14?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759739245:31,release,release,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759739245,1,['release'],['release']
Deployability,Done! We released a new version: https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1277796659:9,release,released,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1277796659,2,['release'],"['released', 'releases']"
Deployability,"Due to changes in the way it handles includes, `MMseqs2` wasn't building with `gcc13`. These 4 files required patching to make them behave ...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/714:110,patch,patching,110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/714,1,['patch'],['patching']
Deployability,"Exactly, run the prefilter command with:; ```; perf record -g -F 250 -- mmseqs prefilter ....rest-of-arguments---; ```; This will generate a `perf.data` file that contains the perfomance profiling information. It can be viewed with ; ```; perf report; or ; perf annotate; ```. You should compile with `cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo` so that mmseqs contains debug symbols. This is not 100% the same as RelWithDebInfo uses `-O2` and Release uses `-O3` but it shouldn't really have a huge difference.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397214190:441,Release,Release,441,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397214190,1,['Release'],['Release']
Deployability,"Exactly, you can also use the precompiled binaries at https://mmseqs.com/latest/. I've also added links to the corresponding user guide commits for older releases:; https://github.com/soedinglab/MMseqs2/wiki",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559496490:154,release,releases,154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559496490,2,['release'],['releases']
Deployability,"Excellent, I will update and give it a shot.; Thanks so much for your response and extremely fast update.; Your program/code is really remarkable stuff, thank you so much for sharing it with the open source community.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/206#issuecomment-496204510:18,update,update,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206#issuecomment-496204510,2,['update'],['update']
Deployability,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460:186,install,installed,186,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460,7,['install'],"['install', 'installed', 'installing']"
Deployability,Fail installation on make,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/347:5,install,installation,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347,1,['install'],['installation']
Deployability,Finish up SIMDe integration,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/321:16,integrat,integration,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/321,1,['integrat'],['integration']
Deployability,"Firstly, thank you for making and maintaining such a great tool!. ## Expected Behavior; When performing a search (or similar function like 'taxonomy'), when providing an evalue of `-e 1e-50`, I would expect to have results filtered according to this evalue. ## Current Behavior; No results are returned/all results are filtered out, even though there should be hits with evalues smaller than 1e-50. (i.e. I can see the hits when I use an `-e 1e-30`). ## Steps to Reproduce (for bugs); The input files and outputs are here [didi_e_issue_mmseqs.zip](https://github.com/soedinglab/MMseqs2/files/5872895/didi_e_issue_mmseqs.zip); ```; conda install -c bioconda mmseqs2; mmseqs createdb query_fasta.fasta queryDB; mmseqs createdb target_fasta.fasta targetDB; mkdir no_e_cutoff; mkdir 30; mkdir 50; mmseqs search queryDB targetDB no_e_cutoff/resultDB tmp --search-type 3 >&1 | tee no_e_cutoff/no_e_cutoff.out; mmseqs convertalis queryDB targetDB no_e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my act",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/399:637,install,install,637,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399,1,['install'],['install']
Deployability,"Fix was just merged, the updated brew package should now work correctly multi-threaded. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/289#issuecomment-604142976:25,update,updated,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289#issuecomment-604142976,1,['update'],['updated']
Deployability,Fixed the issue in latest master. I'll make a new app release soon too.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/215#issuecomment-510868729:54,release,release,54,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/215#issuecomment-510868729,1,['release'],['release']
Deployability,"For MPI you have to compile MMseq2 yourself with MPI development headers/libraries installed and `cmake -DHAVE_MPI=1 ...`. The `-MPI` version suffix on any MMseqs2 module call will show up if you compiled it correctly. Then you have to define one environment variable `RUNNER` that contains your MPI runner call. E.g.:; ```; export RUNNER=""mpirun --pernode; ```; Make sure to start only one MPI process per compute node (`--pernode` parameter in this case). The parallelization within a node still happens over OpenMP. . MMseqs2 workflows (search, cluster, ...) will automatically use the `$RUNNER` environment variable to parallelize modules that support it (e.g. `prefilter`, `align`, ...). . If you call MMseqs2 modules directly (e.g. again `prefilter`) you have to do a normal MPI call:; ```; mpirun --pernode mmseqs prefilter ...; ```. We don't really have a list of MPI enabled MMseqs2 modules, except for looking in the code for modules that call `MMseqsMPI::init`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462771446:83,install,installed,83,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462771446,1,['install'],['installed']
Deployability,"For the `nr` we have the specialized `nrtotaxmapping` module. You give it the [accession2taxid](https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/) files and the NR sequence database (from `createdb`) and it will create the correct `_mapping` file. It should be quite a bit cheaper than the `awk` command used in `createtaxdb` (see https://github.com/soedinglab/MMseqs2/blob/master/data/workflow/databases.sh#L415 on how it's used). For that you have to upgrade to the latest MMseqs2 release though. The latest release also has the `nr` included in the `databases` downloader script, which utilizes this module internally.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922868395:462,upgrade,upgrade,462,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922868395,3,"['release', 'upgrade']","['release', 'upgrade']"
Deployability,"Forgot to update you, df69c26e1c9aaeaa3f5d72fd6e782d02742b2b0c fixed the issue. You can use git head again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/347#issuecomment-688527651:10,update,update,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347#issuecomment-688527651,1,['update'],['update']
Deployability,"Frameshift aignments are very useful for Nanopore data, where indels are common. It can also be used for virus-related research, as [some phages have conversed programmed frameshifts](https://www.cell.com/fulltext/S1097-2765(04)00539-8) in important genes. DIAMOND supports frameshift-aware alignments since [version 0.9.14](https://github.com/bbuchfink/diamond/releases/tag/v0.9.14). This is a simple explanation in their documentation:. > Penalty for frameshifts in DNA-vs-protein alignments. Values around 15 are reasonable for this parameter. Enabling this feature will have the aligner tolerate missing bases in DNA sequences and is most recommended for long, error-prone sequences like MinION reads. In the pairwise output format, frameshifts will be indicated by `\` and `/` for a shift by +1 and -1 nucleotide in the direction of translation respectively.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/417:362,release,releases,362,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/417,1,['release'],['releases']
Deployability,"GCC should not be necessary. Clang works fully in all kinds of configurations.; We introduced our own env variable `MMSEQS_NUM_THREADS` to limit threads globally if `--threads` cannot be (conveniently) set. I limited my VM to 2GB and couldn't get it to crash in the same way during `SLICEPROFILE` (the OOM killer always killed it, it didn't crash in posix_memalign). How exactly did you compile it when it hang with SSE?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868879967:63,configurat,configurations,63,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868879967,1,['configurat'],['configurations']
Deployability,"Git SHA1 hash values are used in multiple ways that make for unpleasantness for anyone who has to package this code:; * In tags such as 12-113e3 which determines the version download URL; * In directory names such as MMseqs2-113e3212c137d026e297c7540e1fcd039f6812b1; * In the output of ""mmseqs version"", which defaults to the long-form SHA1 for building from git or ""GIT-NOTFOUND"" if compiled from downloads unless the builder defines VERSION_OVERRIDE at cmake. There are big disadvantages to this scheme:; * SHA1 hashes aren't monotonic, so someone has to look at the complete commit history to figure out whether the installed version; * There are 3 pieces of info, the major version, the long hash, and the number of digits in the shortened hash, that have to be transmitted when updating a package; * GIT-NOTFOUND is a really ugly string to get. Please use semantic versioning, which is ordered and standard.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/396:619,install,installed,619,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396,1,['install'],['installed']
Deployability,"Got it. So what files should be present in a minimal installation? For now, I'm installing everything in data in addition to the two files your install target does. I haven't had time to play with mmseqs2 yet and probably won't for a while, but I want to the FreeBSD port to work out-of-the-box for a typical user.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868467572:53,install,installation,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868467572,3,['install'],"['install', 'installation', 'installing']"
Deployability,"Hello there, . I want to create a taxonomy db from the GTDB release 89. . I have found that Annotree presents a file with all the predicted gene sequences here:; [https://data.ace.uq.edu.au/public/misc_downloads/annotree/r89/](https://data.ace.uq.edu.au/public/misc_downloads/annotree/r89/). From this I could obtain a db easily and generate a tab-separating mapping file explicitly pointing to a genome: . ```; NZ_FWXU01000077.1_1 RS_GCF_900176345.1; NZ_FWXU01000059.1_5 RS_GCF_900176345.1; NZ_FWXU01000047.1_9 RS_GCF_900176345.1; NZ_FWXU01000020.1_25 RS_GCF_900176345.1; NZ_FWXU01000020.1_57 RS_GCF_900176345.1; NZ_FWXU01000020.1_89 RS_GCF_900176345.1; NZ_FWXU01000018.1_9 RS_GCF_900176345.1; NZ_FWXU01000018.1_41 RS_GCF_900176345.1; NZ_FWXU01000018.1_73 RS_GCF_900176345.1; NZ_FWXU01000018.1_105 RS_GCF_900176345.1; ```; There is also a taxonomy file [here](https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/) in which for each genome there is the taxonomic information in the following structure: . ```; RS_GCF_900234795.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Methylobacterium;s__Methylobacterium extorquens; RS_GCF_000012905.2	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhodobacterales;f__Rhodobacteraceae;g__Rhodobacter_A;s__Rhodobacter_A sphaeroides; GB_GCA_003096615.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Methylobacterium;s__Methylobacterium organophilum; GB_GCA_002709955.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__UBA8366;f__GCA-2696645;g__GCA-2696645;s__GCA-2696645 sp002709955; RS_GCF_001556125.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Bosea;s__Bosea sp001556125; RS_GCF_001555965.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Sphingomonadales;f__Sphingomonadaceae;g__Sphingomonas;s__Sphingomonas sp001555965; RS_GCF_900101505.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/244:60,release,release,60,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/244,2,['release'],"['release', 'releases']"
Deployability,"Hello! . First of all, I must confess that I have been using MMseqs2 for several years now and it has made my life much happier since then :smile:. I just saw that in the latest version you have enabled the option to run a workflow for profile-profile search, which is great news!. However, I have installed that version and have been searching the wiki and help and can't find how to run it. is there a specific command for it or am I missing something?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/634:298,install,installed,298,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/634,1,['install'],['installed']
Deployability,"Hello! . So I had some time to look it up. From the whole fasta I sent I had only problems with a subset of sequences. Out of the 2248 sequences I obtained the result for 2164, creating the report and the `*lca.tsv` file I am interested in. So there were 84 sequences without the taxonomy. Now the error was different and I think maybe more informative. [mmseqs_test_362352_4294967294.out.txt](https://github.com/soedinglab/MMseqs2/files/6467556/mmseqs_test_362352_4294967294.out.txt); [mmseqs_test_362352_4294967294.err.txt](https://github.com/soedinglab/MMseqs2/files/6467557/mmseqs_test_362352_4294967294.err.txt). You seem to not have any error for this sequences: . [the_no_taxonomoed.txt](https://github.com/soedinglab/MMseqs2/files/6467583/the_no_taxonomoed.txt). The database version I am using is downloaded through the last release. ; Could you share the DB you were using to check if that is the problem? . Or else we can try to arrange the interactive connection :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-839919421:834,release,release,834,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-839919421,1,['release'],['release']
Deployability,"Hello!. I've installed mmseqs2 to CentOS 7 with linuxbrew.; I'm trying to search best hits with iterative approach suggested in manual:. `mmseqs search ""$query"" ""$target"" result tmp --start-sens 1 --sens-steps 3 -s 7 --max-accept 1`; ; I've compared this method with BLAST on a small dataset. However mmseqs2 produces not a best hit but just some hit. For example:. `PS064S07MM_81253 fig|6666666.201545.peg.1407 0.509 1167 572 0 0 1167 0 1155 0.00E+00 1101` . If I run the standard search:. `mmseqs search ""$query"" ""$target"" result tmp`. I see the same best hit as in BLAST with the best score and e-value. Here is the convertalis output till the real best hit appears:. `PS064S07MM_81253 fig|6666666.201634.peg.2302 0.536 1172 543 0 0 1167 0 1172 0.00E+00 1182 ; PS064S07MM_81253 fig|451640.5.peg.1619 0.685 1172 369 0 0 1168 0 1172 0.00E+00 1599 ; PS064S07MM_81253 fig|1125712.3.peg.1765 0.518 1178 567 0 0 1165 0 1178 0.00E+00 1137 ; PS064S07MM_81253 fig|553184.4.peg.556 0.528 1170 552 0 0 1165 0 1170 0.00E+00 1158 ; PS064S07MM_81253 fig|633147.4.peg.496 0.521 1179 564 0 0 1167 0 1179 0.00E+00 1147 ; PS064S07MM_81253 fig|428126.7.peg.233 0.693 1171 359 0 0 1165 0 1171 0.00E+00 1619 ; PS064S07MM_81253 fig|1121444.3.peg.1136 0.531 1169 548 0 0 1167 0 1169 0.00E+00 1165 ; PS064S07MM_81253 fig|755731.4.peg.2885 0.547 1176 532 0 0 1168 0 1176 0.00E+00 1216 ; PS064S07MM_81253 fig|1118059.3.peg.6 0.523 1176 560 0 0 1168 0 1176 0.00E+00 1151 ; PS064S07MM_81253 fig|545697.3.peg.2439 0.543 1178 538 0 0 1168 0 1178 0.00E+00 1206 ; PS064S07MM_81253 fig|938293.3.peg.417 0.524 1176 559 0 0 1166 0 1176 0.00E+00 1152 ; PS064S07MM_81253 fig|879305.3.peg.501 0.529 1173 552 0 0 1166 0 1173 0.00E+00 1163 ; PS064S07MM_81253 fig|655811.4.peg.25 0.538 1167 539 0 0 1158 0 1167 0.00E+00 1184 ; PS064S07MM_81253 fig|525254.4.peg.863 0.525 1172 556 0 0 1166 0 1172 0.00E+00 1151 ; PS064S07MM_81253 fig|6666666.201634.peg.2160 0.548 1169 528 0 0 1168 0 1169 0.00E+00 1213 ; PS064S07MM_81253 fig|6666666.201633",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/67:13,install,installed,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/67,1,['install'],['installed']
Deployability,"Hello, ; I want to use MMseqs2 to cluster nucleotide sequences from different patients. I use WSL on windows with MMseqs2 version 13-45111+ds-2 by compiling from source. Firslty, I have created separate fasta files using python from an original dataframe containing nucleotide sequences and their IDs. Then, I placed the resulting fasta files in WSL under user/MMseqs2/build/tests and ran the following command: ""mmseqs createdb tests/output1.fasta test/DB1"" while in the ""MMseqs2"" root. However, I get the following error message: ""Cannot open test/DB1.source for writing"". Can you please help me? I apologise in advance if the problem is basic and I've made a mistake in the installation or execution procedure.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/725:677,install,installation,677,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/725,1,['install'],['installation']
Deployability,"Hello,. I downloaded and set up the Uniref100 database for the taxonomy pipeline according to the instructions, but when I run the taxonomy command, the output says `Computed index is too large. Avoid using the index`. It also says `split was set to 5 but at least 8 are required. Please run with default paramerters` even though I never adjusted the default. Are these things I should be worried about, and could I be doing something different to make this search more efficient? I know it is a huge database. Full traceback of commands below. Thank you in advance,; -Matt. ## Commands to set up the taxonomy database; ```; mmseqs databases UniRef100 uniref100.mmseqs tmp. mmseqs createtaxdb uniref100.mmseqs tmp --threads 8; createtaxdb uniref100.mmseqs tmp --threads 8. mmseqs createindex uniref100.mmseqs tmp --threads 8; createindex uniref100.mmseqs tmp --threads 8; ```. ## Search commands; ```; mmseqs createdb N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.faa N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db. mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_42; 5.proteins.taxonomy temp --threads 8; ```. ## Full traceback of search command; ```; mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8; Tmp temp folder does not exist or is not a directory.; Create dir temp; taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:72,pipeline,pipeline,72,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,1,['pipeline'],['pipeline']
Deployability,"Hello,. I have installed mmseqs2 in linux with anaconda with the following command (the one shown in your documentation):; conda install -c conda-forge -c bioconda mmseqs2. Now I am trying to run the following command. mmseqs cluster DB DB_clu tmp --strand 1. In order to consider only the forward and not the reverse strand. However I see that the --strand option is not available. I have found the --strand option in the https://github.com/soedinglab/MMseqs2/blob/master/src/commons/Parameters.cpp file. Is there any way to consider only the forward strand for cluster my data? . Thank you so much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/657:15,install,installed,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/657,2,['install'],"['install', 'installed']"
Deployability,"Hello,. I have installed mmseqs2 using conda. This has worked ok. The installed package has the following version attributes. `mmseqs2 11.e1a1c h2d02072_0 bioconda`. However, when I go to perform an RBH, using easy-rbh as mentioned in the userguide, I get the error below. `Invalid Command: easy-rbh`; `Did you mean ""mmseqs easy-search""?`. I think easy-rbh is not updated for conda installation. Please advice what to do. Thanks; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/332:15,install,installed,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332,4,"['install', 'update']","['installation', 'installed', 'updated']"
Deployability,"Hello,; ## Current Behavior; When I include ```qaln``` and ```taln``` fields in my ```convertalis``` results, I occasionally get a null bite (in ```vim``` it looks like ```^@```), which breaks a line in the downstream analysis. See attached screenshots in Vim and Libreoffice, the ```tsv``` itself also attached (truncated, see lines 89–90).; ![issue-libreoffice](https://github.com/soedinglab/MMseqs2/assets/17991942/e198caa5-7c2d-405e-a91d-97595e0bf569); ![issue-vim](https://github.com/soedinglab/MMseqs2/assets/17991942/04fc1f53-22f3-4efb-95a3-39a044a9a353); [mmseqs-issue.tsv.zip](https://github.com/soedinglab/MMseqs2/files/14981527/mmseqs-issue.tsv.zip). ## Steps to Reproduce (for bugs); ```; # Create a taxonomyDB from PR2 database; # Get 'pr2_version_5.0.0_SSU_taxo_long.fasta' here: https://github.com/pr2database/pr2database/releases/download/v5.0.0/pr2_version_5.0.0_SSU_taxo_long.fasta.gz); # Uses seqkit and taxonkit programs (github.com/shenwei356). sed 's/_/ /' pr2_version_5.0.0_SSU_taxo_long.fasta > pr2_to_mmseqs.fasta; echo -e ""domain\tsupergroup\tdivision\tsubdivision\tclass\torder\tfamily\tgenus\tspecies"" > pr2_tax; cat pr2_to_mmseqs.fasta | seqkit seq -n | sed 's/[^|]*|[^|]*|[^|]*|//' | sed 's/|/\t/g' >> pr2_tax; cat pr2_tax | taxonkit create-taxdump -O pr2_taxdump; cat pr2_to_mmseqs.fasta | seqkit seq -n | sed 's/[^|]*|[^|]*|[^|]*|//' | cut -d '|' -f 9 | taxonkit name2taxid --data-dir pr2_taxdump > pr2_name2taxid; paste <(cat pr2_to_mmseqs.fasta | seqkit seq -ni) <(cat pr2_name2taxid | cut -f2) > pr2_taxidmap; mmseqs createdb pr2_to_mmseqs.fasta pr2; mmseqs createtaxdb pr2 tmp --ncbi-tax-dump pr2_taxdump --tax-mapping-file pr2_taxidmap; mmseqs createindex pr2. # Search; mmseqs prefilter lcB1_97 pr2.idx lcB1_97_pref -s 2.0 --exact-kmer-matching 1 --max-seq-len 500 -c 0.9 --cov-mode 2; mmseqs align lcB1_97 pr2.idx lcB1_97_pref lcB1_97_aln -a 1 -e 1e-30 --alignment-mode 3 --alignment-output-mode 0 --min-aln-len 130 -c 0.9 --cov-mode 2 --max-seq-len 500 --max-ac",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:837,release,releases,837,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['release'],['releases']
Deployability,"Hello,; I'm running `mmseqs search` on Travis virtual machine for integration test purpose.; The issue I have is that mmseqs requires more memory than it's available on the machine.; The dataset I'm using consists of 10 sequences, where each is 100 nucleotides long.; Is there a possibility to overcome this behaviour?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb dna.fasta queryDB; mmseqs createdb dna.fasta targetDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99; ```. ## MMseqs Output (for bugs); ```; Error executing process > 'search (1)'. Caused by:; Process `search (1)` terminated with an error exit status (1). Command executed:. mmseqs createdb query.1.fasta queryDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G; mmseqs createtsv queryDB targetDB outputDB chunk_alignment_tsv. Command exit status:; 1. Command output:; Omit consensus 568767/qfalse; Min codons in orf 	30; Max codons in length uery_seq32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode _seqs_sp2; Orf start mode a:VTML801; Forward frames corr 1 -1,2,3; Reverse frames 1.5 --th1,2,3; Translation table 	1; Translate orf de 0; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query se a com1; Search type 	3; Number search iterations 	1; Start sensitivity work/ac/4; Search steps 	1; Run a seq-profile search in slice modeging to false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false; ; search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G ; ; MMseqs Version: 	6d92cd21676ccc36531f2852f7eb747f6389435f; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	3; E-value thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/253:66,integrat,integration,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253,1,['integrat'],['integration']
Deployability,Here is my initial clustering update:; `mmseqs clusterupdate Uniprot_Unreviewed_Zmays /home/ec2-user/MMSeqs2/Uniprot_Unreviewed_Zmays_Tomato_Dmagna_kmer20_results/Uniprot_Unreviewed_Zmays_Tomato_Dmagna Uniprot_Unreviewed_Zmays_clu Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu ./tmp`. And the tsv generation:; `mmseqs createtsv ./Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu.tsv`. tsv error message:; ```; MMseqs Version: f3b88f27def72ac5392131b98e079930f3b087c7; first sequence as respresentative false; Target column 0; Add Full Header false. Query file is ./Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB; Target file is Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB; Data file is Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu; Start writing file to Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu.tsv; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_S_construct null not valid; Aborted; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404865556:30,update,update,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404865556,1,['update'],['update']
Deployability,"Here is the gdb outputs:. $ gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --com",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:1021,configurat,configuration,1021,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840,2,['configurat'],['configuration']
Deployability,Here's the reproducible example: [reprod_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/4995028/reprod_example.tar.gz). I ran the following on it:. ```; mmseqs clusterupdate --threads 12 genes_db all_genes/genes_db clusters_db out_db clusters_out_db tmp; ```. ...and got the error:. ```; [...]; Clustering step 1; [=================================================================] 100.00% 6 0s 0ms; Clustering step 2; [=================================================================] 100.00% 6 0s 5ms; Clustering step 3; [=================================================================] 100.00% 6 0s 6ms; Clustering step 4; [=================================================================] 100.00% 6 0s 9ms; Write merged clustering; [=================================================================] 100.00% 6 0s 13ms; Time for merging to newClusters: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 25ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/newClusters /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/clusters_out_db --preserve-keys. No datafile could be found for /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust!; Error: Dbconcat died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135:991,update,updated,991,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135,3,['update'],"['updated', 'updatedClust']"
Deployability,"Hi - I ran the easy-search command (newest release, 6f452, self-compiled with cmake 3.25.2 and gcc 12.2.0) on a Linux system with the example query and database file from the MMseqs2 repository and encountered an unexpected behaviour. The BLAST tab output format never includes gap openings (even though many alignments should contain them) and the bit score deviates from what e.g. BLAST reports for the same alignments. To give an example, the pretty html output contains the following alignment for query ```C0QTH6``` and subject ```A0A059IV01```:. ```; Q 0 IGAGVAIGAAAGGGAAGLGNAIRGVLEGMARNPNMGGKLLTTMFIGMALIETFVLYGLLIAIIFLF; T 0 IAIGLAVFGMLGAG-LGIANIFSAMLNGIARNPESEGKMKSYVYIGAAMVEIMGLLAFVLAMLLIF; ```. However, when running the same search but producing a BLAST tab output, the gap is not present (i.e. 0 gap openings):. ```; C0QTH6	A0A059IV01	0.333 66 43	0	43	108	9	73	3.416E-07 48; ```. BLAST produces basically the same alignment (the gap is moved by one but it should create the same score due to the pairing):. ```; Query 43 IGAGVAIGAAAGGGAAGLGNAIRGVLEGMARNPNMGGKLLTTMFIGMALIETFVLYGLLIAIIFLF 108; I G+A+ G G G+ N +L G+ARNP GK+ + ++IG A++E L ++A++ +F; Sbjct 9 IAIGLAVFGMLGAGL-GIANIFSAMLNGIARNPESEGKMKSYVYIGAAMVEIMGLLAFVLAMLLIF 73; ```. Here, the BLAST tab format also includes the gap and it leads to a different bit score compared to MMseqs2. ```; C0QTH6	A0A059IV01	33.333 66 43	1	43	108	9	73	4.79e-08 46.2; ```. My exact calls (for the BLAST tab output) are:. ```; mmseqs createdb DB.fasta db_mmseqs2. mmseqs easy-search \; QUERY.fasta \; db_mmseqs2 \; out.m8 \; tmp \; -s 7.5 \; --search-type 3 \; --threads 4 \; --max-seqs 10000 \; --comp-bias-corr 0 \; --comp-bias-corr-scale 0 \; -e 1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/792:43,release,release,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/792,1,['release'],['release']
Deployability,"Hi . I was trying to install the new release [compiling from the source](https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux). ; It always worked in my machine but in this new release, something fails on the `make` step. ```; $ make; [ 1%] Built target microtar; [ 3%] Built target cacode; [ 8%] Built target alp; [ 8%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:27:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h: In function 'simde__m128 simde_x_mm_abs_ps(simde__m128)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse.h:926:74: error: '_mm512_abs_ps' was not declared in this scope; return _mm512_castps512_ps128(_mm512_abs_ps(_mm512_castps128_ps512(a)));; ^; In file included from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse3.h:30:0,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/ssse3.h:30,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse4.1.h:31,; from /home/linuxbrew/stow/tmp/MMseqs2/lib/ksw2/ksw2_extz2_sse.cpp:35:; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h: In function 'simde__m128d simde_x_mm_abs_pd(simde__m128d)':; /home/linuxbrew/stow/tmp/MMseqs2/lib/simde/simde/x86/sse2.h:408:74: error: '_mm512_abs_pd' was not declared in this scope; return _mm512_castpd512_pd128(_mm512_abs_pd(_mm512_castpd128_pd512(a)));; ^; lib/ksw2/CMakeFiles/ksw2.dir/build.make:81: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o' failed; make[2]: *** [lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o] Error 1; CMakeFiles/Makefile2:720: recipe for target 'lib/ksw2/CMakeFiles/ksw2.dir/all' failed; make[1]: *** [lib/ksw2/CMakeFiles/ksw2.dir/all] Error 2; Makefile:148: recipe for target 'all' failed; make: *** [all] Error 2; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/347:21,install,install,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347,3,"['install', 'release']","['install', 'release']"
Deployability,"Hi @SilasK, sorry again for the delay.; Could you expand a bit on what you want to achieve?; (1) Do you want to ""update"" your profiles, by adding new sequences to that profile?; This is a bit tricky, we would need to provide something similar to the cluster updating, but for a search instead. The tricky part is, that the sequence databases of the profiles and the new sequences have to be merged first, while retaining the profile identifiers. (2) Do you just want to know what profile this protein should belong to? Step (0) to (2) is already enough for that. I can look into (1), if this is what you need. I am a bit busy with another paper submission currently, so I might need some time.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/108#issuecomment-410701279:113,update,update,113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/108#issuecomment-410701279,1,['update'],['update']
Deployability,"Hi @martin-steinegger ,; many thanks for this update. From our first tests we see a clear improvement in this scenario and we are now able to find more exact matches with MMSeqs2 than before and even compared to Diamond.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-395755566:46,update,update,46,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-395755566,2,['update'],['update']
Deployability,"Hi @martin-steinegger, I've been getting this exact same error, not sure what could be happening. I am using the latest version of mmseqs2 ([`14-7e284`](https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284)). What other information could I provide to help debug?. Thank you,; Vini",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258#issuecomment-1581777454:191,release,releases,191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258#issuecomment-1581777454,1,['release'],['releases']
Deployability,"Hi @milot-mirdita ,. I found this 1046081 in our targetDB.lookup file, which looks like this:. ```; >grep 1046081 targetDB.lookup; 1046081	A0A0U2C0X9	0; ```. I wondered if the new version of mmseqs expects this file to be in a different configuration? Like maybe no row number, but directly ""A0A0U2C0X9""? Or what format of the ""legal taxonomy node"" it looks for?. Thank you!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759696735:237,configurat,configuration,237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759696735,1,['configurat'],['configuration']
Deployability,"Hi @milot-mirdita ,. Thank you, I installed the mpi version, but I used just the normal mode, let me try your advice.; And, I also get an another error:; /opt/gridengine/default/spool/cngb-compute-e05-9/job_scripts/6073613: line 1: /MMseqs2/build/bin/mmseqs: Unknown error 521; Do you have any idea about this **unknown error 521**?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876580228:34,install,installed,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876580228,1,['install'],['installed']
Deployability,"Hi @milot-mirdita ,; thanks for the reply, we are still testing the different options, for the moment we have seen a small improvement adding these parameters (e.g. we are able to find exact matches for 10-15 more sequences). . I have put online the almost 500 sequences for which we completely miss the exact match against themselves. You can download the Fasta file from here: https://www.dropbox.com/s/jf88389zuj2nddn/missed_exact_matches_mmseqs2.fasta.gz?dl=0. These are part of the UniRef90 2018_04 release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394364168:504,release,release,504,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394364168,1,['release'],['release']
Deployability,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:120,install,install,120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999,6,"['configurat', 'install', 'patch', 'update']","['configuration', 'install', 'patches', 'updated']"
Deployability,"Hi @milot-mirdita, thanks! I updated the mmseqs to the latest version and set the --split-memory-limit parameter to 250G, this time I didn't get that error, but it threw me another error:. ```. Not enough memory to process at once need to split; [=================================================================tmp/2319642838547372155/clu_tmp/15550839581876067830/linclust.sh: line 26: 344 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: Search died; finished; slurmstepd: error: Detected 1 oom-kill event(s) in step 30119673.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ```; The command I'm using is like this:. `mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 250G`. Could you give me some help on that?. Thanks so much!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611:29,update,updated,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611,1,['update'],['updated']
Deployability,"Hi @milot-mirdita,. I have successfully installed the precompiled version of the latest mmseqs. But when I run my script It keeps throwing me an error says:. ```; Input database ""./results/contigs/mmseqs_aa_out/taxonomyResult"" is wrong!; Current input: Taxonomy. Allowed input: Alignment; ```. when I switch to the old version, I don't see this error. . Is there any advice on that?. Thanks very much!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-756416360:40,install,installed,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-756416360,1,['install'],['installed']
Deployability,"Hi @silvainp @milot-mirdita @martin-steinegger !. I came across this old issue while googling because I encountered pretty much the same problem and this didn't seem to have been resolved yet. I can confirm that I got very similar outputs to @silvainp in a clustering problem I've been working on. The issue persisted with the most recent release (15) of mmseqs2. After some I found that there was a (silent) issue in my input FAA files: they were corrupted due to a few binary characters that were accidentally introduced in an upstream step. **Once I manually cleared all binary characters, clustering worked as intended**. This may have been the issue here as well, although ofc hard to tell from a distance. What's important imo is that the `createdb` step did _not_ catch these and threw no error/warning. @milot-mirdita I don't want to tinker with the code for a pull request, but I'd suggest building in a check to validate the input fasta files in the db-building step. Best regards,. Sebastian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129:339,release,release,339,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129,2,['release'],['release']
Deployability,"Hi Ann,. Thank you for guiding me so far. I did a bit of digging around in the temporary files. I'll call the two close sequences with one mismatch between them seqA and seqB. What I found was that they were both found within a larger cluster in the pref database with seqC (cluster head). seqC is about 20% different to both seqA and seqB, but their ungapped alignment scores may not reflect that. In the pref.tsv (createtsv pref); seqC seqB 5 0; seqC seqB 5 0. In the pref_rescore1.index file (pref_rescore1.1 - pref_rescore1.16 are in binary format, and I wasn't sure if that is the one you are referring to), I only see two rows that contain seqA and seqB. seqA seqA 100 0; seqB seqB 100 0. After the pipeline finishes, all three sequences seqA-C end up being separate clusters. Also, I'm using 10000 unique sequences in the input, so should one expect 10000-choose-2 pairs in the pref database? The total number of rows in the pref database is 69737, which is 0.13% of the total number of pairs. I had run linclust with these parameters in this run-; -e 1 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --kmer-per-seq 100 --kmer-per-seq-scale 0 -k 15 --cluster-mode 1 --max-iterations 50000 --seq-id-mode 2 --threads 16 --remove-tmp-files 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923572541:705,pipeline,pipeline,705,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923572541,2,['pipeline'],['pipeline']
Deployability,"Hi Ann,. Thank you for the quick response. I'm currently using - f349118312919c4fcc448f4595ca3b3a387018e2 - which was the latest version as of last month. The entire point of this exercise, for me, is to understand, algorithmically, why linclust-only misses clusters that it perhaps should cluster. The tool works great overall!. I'm using a fairly strict criterion for clustering using linclust, attempting to do as much as I can before I use mmseqs. The parameters are ->; -e 0.1 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --kmer-per-seq 30 --kmer-per-seq-scale 0.3 -k 50 --cluster-mode 1 --max-iterations 50000 --seq-id-mode 2 --threads 16. I have used comically large values of (e / kmer-per-seq) and I still find thousands of such pairs that should have been clustered. Unfortunately, I cannot share the sequences because I don't own them. But I could report further that if I only use the two sequences (that are being missed in a population of sequences) on their own, linclust clusters them using the same pipeline. Next, I used the same two clusters with an 'outgroup' sequences, and I found the expected outcome - the two close by sequences were clustered whereas the outgroup was not. I begin to lose sensitivity as I start using more and more sequences in the population, which leads me to believe that the loss of sensitivity could be down the pre-filters/heuristics/e-value. If I manually 'cascade' the representative sequences from the first step using linclust again (instead of mmseqs, hence 'cascade'), I don't gain any appreciable sensitivity. So when provided a large population, linclust is missing these pairs many times (I tried to 'cascade' several times, but using linclust alone. What I find surprising is that these two sequences must share at least one kmer (in fact they must share many), so they must have been compared to each other, and they qualify all hard filters (coverage / alignment score), and yet they were missed. It's also possible both of them were compared to a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923001759:1010,pipeline,pipeline,1010,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923001759,1,['pipeline'],['pipeline']
Deployability,"Hi Antonio,. You can do something like this:. ```; mmseqs cluster db clu tmp; mmseqs align db db clu aln -a; mmseqs createtsv db db aln aln.tsv; ```. The `-a` parameter computes the whole backtrace, you can also use `--alignment-mode 3`, but that computes the backtrace anyway since it needs it for the seq. id. ; `--alignment-mode` 1 and 2 only approximate the sequence identity. Thank you for the feedback! We will add this to the FAQ and also discuss if it make sense to provide the same output also for Uniclust in future releases.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/13#issuecomment-276091695:526,release,releases,526,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/13#issuecomment-276091695,2,['release'],['releases']
Deployability,"Hi MMseqs2 team,. I am completely new to MMseqs2 and simply want to taxonomically classify a few (30 max.) amino acid sequences that I retrieved from my pipeline. For this, I want to use the Uniref90 repository and I started with creating the database and indexed:. mmseqs createdb uniref90.fasta uniref90_DB; mmseqs createindex uniref90_DB uniref90_index --threads 16; mmseqs createtaxdb uniref90_DB tmp. I did the same for my queries:; mmseqs createdb queries.fa queries_DB; mmseqs createindex queries_DB queries_index. Then, I searched the query database against the Uniref90 database:; mmseqs search queries_DB uniref90_DB queries_search_result uniref90_index --threads 16. Finally, I applied LCA taxonomy:; mmseqs taxonomy Untersee/SRR17021127_orf_nosZ_only_DB uniref90_DB taxonomyResult tmp --tax-lineage 1 . This is the output:; MMseqs Version: 	12ba202798016f7f8880be11d792592fdb674448; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	1; Compressed 	0; Threads 	128; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nuc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/708:153,pipeline,pipeline,153,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708,1,['pipeline'],['pipeline']
Deployability,"Hi Martin and Milot. Thanks for the nice software. So far it's working well for my applications. ## Context; Not a bug or problem but a use question. Sorry for opening an issue... Let me know if there is a user forum or better place to ask. With `mmseqs filterdb <i:resultDB> <o:resultDB>` is it possible to extract multiple best hits? for example if multiple queries have the same bitscore/evalue to the same target? Is it some combination of the ` --filter-regex` and the `--comparison-operator` options? For example `--filter-regex <bitscore column> --comparison-operator ge`?. Also do you have any particular parameter recommendations for searching metagenomic short reads against a target database? I'm searching overlapped metagenomic reads (average insert size of ~215 bp) against a custom 58x10^6 sequence protein database). Currently, I'm using default `mmseqs prefilter` and `mmseqs align` options with `-s 4` and `--cov-mode 2 -c 0.7` so that at least 70% of the read must align to target. Wondering if you have any additional or better recommendations for this use case. I read the ECCB tutorial which sort of addresses this question, but because I'm not searching assemblies I want more sensitivity than the `mmseqs map` workflow. thanks very much!; -shane. ## Your Environment; mmseqs version: Release 7-4e23d (4e23d5f1d13a435c7b6c9406137ed68ce297e0fc)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/152:1308,Release,Release,1308,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/152,1,['Release'],['Release']
Deployability,"Hi Martin, it looks like this fix has not been pushed to bioconda. When I install from source all is good and the bug is fixed. However, when I use the conda install the bug remains.; Would it be possible to push the latest version of Mmseqs2 to bioconda?; Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/206#issuecomment-500815580:74,install,install,74,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206#issuecomment-500815580,2,['install'],['install']
Deployability,"Hi Martin; ffindex_apply is awesome, I've been playing around and it is quite straight forward to plug it in our pipeline avoiding the generation of the files. Just for reference, a quick example on how to perform a MSA for each cluster with >= 10 members:; ```; #!/bin/bash. SEQS=$(perl -ne 'print $_' ""${1}""); if [ ""$(echo ""${SEQS}"" | grep -c '>')"" -ge 10 ]; then; echo ""Num seqs: $(echo ""${SEQS}"" | grep -c '>')""; REP=""$(echo ""${SEQS}"" | head -n 1 | cut -f 2 -d '|')""; ALN=cluster_""$(grep -n ""${REP}"" DB_clu_wide.tsv | cut -f1 -d ':')"".aln; famsa-1.2.1-osx <(echo ""${SEQS}"") ""${ALN}""; fi; ```; and we run it like:; ```; ffindex_apply DB_db_fa DB_db_fa.index -- bash aln.sh; ```. Many thanks!; Antonio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343730359:113,pipeline,pipeline,113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343730359,1,['pipeline'],['pipeline']
Deployability,"Hi Milot,. Thank you once again for the quick follow up. I've conducted a grid search to understand this issue myself, and I have used a kmer size of 10, with or without the spaced kmer mode previously, and found the same issue. Here are the parameters used for that run - ; --kmer-per-seq-scale 0 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --cluster-mode 2 --spaced-kmer-mode 0 -k 10 --threads 16 --adjust-kmer-len 0 --ignore-multi-kmer 0. In other attempts, I have not used the kmer size parameter, and the pipeline automatically chooses 17 in that case, and the issue persists. In these pipelines with -c set to 0.99, and min-seq-id set to 0.99, I get excellent specificity (with a few or no clusters that have members that shouldn't be there), but about ~40% of all the representative sequences have another representative sequence in vicinity (Levenshtein distance of less than 10 out of 2500-3000 bp). This fraction drops to about ~15% if I use min-seq-id of 0.95, so I do find a gain in sensitivity. But 15% of all representative sequences is still quite a high number. What I don't understand is why those representative sequences weren't linked together with an edge when they check all boxes.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923043155:505,pipeline,pipeline,505,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923043155,2,['pipeline'],"['pipeline', 'pipelines']"
Deployability,"Hi Milot,. thanks for the super-quick fix. Have tried it with the new version and we don't get any error messages anymore :). Best,; Thomas. > Am 03.02.2017 um 16:24 schrieb Milot Mirdita <notifications@github.com>:; > ; > Hi Thomas,; > ; > Martin pushed an update earlier. Just pull the latest version and try again. You don't have to change anything else.; > ; > Best,; > Milot; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-277423828:258,update,update,258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-277423828,1,['update'],['update']
Deployability,"Hi Mohammed,; I removed the --target-cov parameter and replaced it with a new parameter --cov-mode 1. The documentation was also updated:; https://github.com/soedinglab/MMseqs2/wiki#how-to-set-the-right-alignment-coverage-to-cluster. Why its automatically choosing the cascaded clustering:; We implemented some heuristics to automatically choose the best parameters originally for the clustering. Maybe we have to rethink that decision and remove those. Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/39#issuecomment-316998868:129,update,updated,129,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/39#issuecomment-316998868,1,['update'],['updated']
Deployability,"Hi Raphael,; Sorry for the delay, I found some more issues with the profile search workflow. I am working on resolving those currently. I will update this issue once its ready, which should be soon.; Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/59#issuecomment-362593172:143,update,update,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/59#issuecomment-362593172,1,['update'],['update']
Deployability,"Hi Ryan,. I updated the readme, it looks like you are using clang, which won't support OpenMP:. > Please install and use gcc from Homebrew, if you want to compile MMseqs2 on MacOS. The default MacOS clang compiler does not support OpenMP and MMseqs2 will not be able to run multithreaded. Use the following cmake call:; > ; > CXX=""$(brew --prefix)/bin/gcc-6"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. Not sure about the verbosity issue. Can you post the whole log?. Edit: Also please do not use the same folder (**.**) for the tmp folder, make a separate empty one.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-264623760:12,update,updated,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-264623760,3,"['RELEASE', 'install', 'update']","['RELEASE', 'install', 'updated']"
Deployability,"Hi Salvatore,. The Uniclust profiles need a different strategy to search against. The default profile search only works for at most a couple of 100k profiles, after that the memory requirements explode. We are currently working on a different profile search strategy for large databases. I'll update you once its ready. Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130#issuecomment-432997653:293,update,update,293,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130#issuecomment-432997653,1,['update'],['update']
Deployability,"Hi Silas,; Thanks for your interest in this feature. We are working on this module. Everything is technically implemented, but the tests show that the sensitivity is not yet good enough. We will keep you updated in the next weeks about the progress on this. Cheers,; Clovis.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/95#issuecomment-396214009:204,update,updated,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/95#issuecomment-396214009,1,['update'],['updated']
Deployability,"Hi There,. I'm having problems trying to install fix #309. https://github.com/soedinglab/MMseqs2/pull/309. When trying to checkout the fix code I get an error.; https://github.com/soedinglab/MMseqs2/pull/309/commits/bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; It appear that this commit is not part of the mmeseq main branch. . see below:. # git clone https://github.com/soedinglab/MMseqs2.git; Cloning into 'MMseqs2'...; remote: Enumerating objects: 284, done.; remote: Counting objects: 100% (284/284), done.; remote: Compressing objects: 100% (206/206), done.; remote: Total 34346 (delta 175), reused 143 (delta 78), pack-reused 34062; Receiving objects: 100% (34346/34346), 27.68 MiB | 13.72 MiB/s, done.; Resolving deltas: 100% (26632/26632), done.; Checking out files: 100% (968/968), done. # git checkout bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; fatal: Not a git repository (or any parent up to mount point /powerapps); Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). I also tried to download the SIMD as a sub module.; https://github.com/simd-everywhere/simde; And integrated it with mmeseq with no success. Can you please share a guide on how to install mmesq2 from source with this fix. Your help is much appreciated. Thanks. BR,; Eyal.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464:41,install,install,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464,6,"['install', 'integrat']","['install', 'integrated']"
Deployability,"Hi Thomas,. Martin pushed an update earlier. Just pull the latest version and try again. You don't have to change anything else. Best,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-277275421:29,update,update,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-277275421,1,['update'],['update']
Deployability,Hi all i seem to be getting an error at the end of downloading the NR database. ## Expected Behavior; downloading NR database using mmseqs databases NR outpath/NCBI_NR tmp. ## Current Behavior; Download goes well until the end where i get an error. createdb tmp/2421402983074857069/nr.gz outpath/NCBI_NR --compressed 0 -v 3 . Converting sequences; Cannot open outpath/NCBI_NR.source for writing. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. running on ubuntu 22.04.2; installed using conda; MMseqs version 14.7e284; intel,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/691:527,install,installed,527,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/691,1,['install'],['installed']
Deployability,"Hi and thank you for your bug report. Would you mind switching to MMseqs2, our new and much improved release? MMseqs1 is not supported anymore. With that said, it looks like your A.index file is corrupted. Check if it has the expected number of lines (=number of clusters) and also if for every line there are three values.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-250732627:101,release,release,101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-250732627,1,['release'],['release']
Deployability,"Hi everyone,. ## Expected Behavior. I would to construct clustering or align sequences with `cluster` or `search`. I'm following the example of [uniclust](https://github.com/soedinglab/uniclust-pipeline/blob/master/uniclust_workflow.sh) to create different family. . ## Current Behavior. When I try to align my sequences from a subdatabase, the `prefiler` stay at the `index table : fill` step. At the begin I though to a memory problem, because my code work on a little dataset (100 000 proteins) but not on biggest (3 billions). So I add `--split-memory-limit`. On one test it was working but not on the other (maybe by chance). . ## Steps to Reproduce (for bugs). `mmseqs prefilter $DB_name $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exac",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382:194,pipeline,pipeline,194,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382,1,['pipeline'],['pipeline']
Deployability,"Hi folks! Thanks for maintaining this software. I've been trying to set up the GTDB database for taxonomy analysis, but can't seem to get the database set up regardless of the computer used (I've tried both my Linux server as well as my own Mac laptop; mmseqs was installed using conda on the server and using the MacOSX binary available on the mmseqs installation page on the laptop). Details are below. Thanks in advance for any light you can shed on the issue!. ## Expected Behavior; Creation of a taxonomy database using GTDB as the database. ## Current Behavior; the createdb step dies after downloading the GTDB database. ## Steps to Reproduce (for bugs); command:; mmseqs databases GTDB outpath/GTDB tmp. ## MMseqs Output (for bugs). bash-3.2$ bin/mmseqs databases GTDB outpath/GTDB tmp; databases GTDB outpath/GTDB tmp. MMseqs Version: 2fad714b525f1975b62c2d2b5aff28274ad57466; Tsv false; Force restart with latest tmp false; Remove temporary files false; Compressed 0; Threads 8; Verbosity 3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 31 100 31 0 0 41 0 --:--:-- --:--:-- --:--:-- 41; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 51.3G 100 51.3G 0 0 1565k 0 9:33:26 9:33:26 --:--:-- 2662k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 54.4M 100 54.4M 0 0 1374k 0 0:00:40 0:00:40 --:--:-- 939k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 1080k 100 1080k 0 0 489k 0 0:00:02 0:00:02 --:--:-- 491k; tar2db tmp/14668141768776664068/gtdb.tar.gz tmp/14668141768776664068/tardb --tar-include faa.gz$ --threads 8 -v 3. Time for merging to tardb: 0h 0m 0s 28ms; Time for merging to tardb.lookup: 0h 0m 0s 13ms; Time for processing: 0h 7m 32s 203ms; createdb tmp/14668141768776664068/tardb outpath/GTDB --compressed 0 -v 3. Converting sequences; Cannot o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/809:264,install,installed,264,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/809,2,['install'],"['installation', 'installed']"
Deployability,"Hi may ask a similar question, but I am using easy-linclust, i.e. my command line is:; `mmseqs easy-linclust input.fasta clusterResult tmp --min-seq-id 0.95 -c 0.95`; Do I use the same formula to calculate RAM usage? ; My FASTA is 1TB in size, has 2B sequences, average sequence length is 650 base pairs, and the alphabet is 4. ; I tried running this on an instance with 200GB of RAM, and it failed after more than 4 days, I assume that's where a step in the pipeline comes that requires more RAM, but it's expensive for me to keep trying different setups (both money wise and time wise). ; Can I use (or should I use) the --split-memory-limit option here as well..?; These were my instance resources for the run that I described; ![Screenshot 2024-05-09 at 12 21 50](https://github.com/soedinglab/MMseqs2/assets/16819349/0a9ed7a0-5829-46de-bbda-8277025423ed)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/808#issuecomment-2102424577:459,pipeline,pipeline,459,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/808#issuecomment-2102424577,1,['pipeline'],['pipeline']
Deployability,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348:564,update,update,564,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348,2,['update'],['update']
Deployability,"Hi soedinglab,. I am running the `nf-core/funcscan` pipeline to assign taxonomy to contigs using MMseqs2 with the GTDB database. My contigs are around 100-200 MB in size, and I am running the pipeline on a machine with the following specs:; - 36 cores; - 256 GB RAM. Despite utilizing all available resources, `mmseq2` takes more than 4 hours per sample and does not finish. I am wondering if this runtime is normal or if there are ways to optimize the process to make it faster. . **Questions:**; 1. What are the common bottlenecks when running MMseqs2 with the GTDB database, and how can I address them?; 2. What is the expected runtime for MMseqs2 on contigs of this size?; 3. Are there specific MMseqs2 settings (e.g., sensitivity, database partitioning) that could help speed up the analysis without compromising too much accuracy?. Any advice or insights from your experience with MMseqs2 and GTDB would be appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/895:52,pipeline,pipeline,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/895,2,['pipeline'],['pipeline']
Deployability,Hi! I didn't test search anymore. Now I'm using only clustering with MMSeqs 2. But I've done several searches before with this result and didn't do anything with mmseqs installation. My version is 1-c7a89.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/67#issuecomment-371223988:169,install,installation,169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/67#issuecomment-371223988,1,['install'],['installation']
Deployability,Hi! I have tried to use the `databases` module but it is still not available. Is the new MMseqs version not released yet or have you decided to not add this module?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-847729258:108,release,released,108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-847729258,1,['release'],['released']
Deployability,"Hi, ; I am using mmseqs taxonomy, and following the taxonomy assignment workflow, using uniref100 as a target DB. . the entire workflow works great, until the ""mmseqs taxonomy"" command. ; The first search seems to be working good, however, I am getting an error in the second search, and the process dies. . MMseqs call:; mmseqs taxonomy est00001DB uniref100DB uniref100DB.tsv /ncbi-taxdump/ queryLcaDB /tmp/ --threads 25. ## MMseqs Output . Program call:; /tmp/3706626149599022609/top1 uniref100DB /tmp/3706626149599022609/top1 /tmp/3706626149599022609/aligned --extract-mode 2 . MMseqs Version:	2.23394; Extract mode	2; Threads 	80; Verbosity 	3. Query file: /tmp/3706626149599022609/top1; Target file: uniref100DB; Alignment database: /tmp/3706626149599022609/top1; Start writing file to /tmp/3706626149599022609/aligned; Set sym link from /tmp/3706626149599022609/top1_h to /tmp/3706626149599022609/aligned_h; Set sym link from /tmp/3706626149599022609/top1_h.index to /tmp/3706626149599022609/aligned_h.index; Done.; Time for merging files: 0 h 0 m 1 s; Time for processing: 0 h 0 m 25s; Please recreate your database or add a .dbtype file to your sequence/profile database.; Error: Second search died. I am using version 2.23394 installed through conda environment, ubuntu 16.04 server; Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/80:1235,install,installed,1235,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80,1,['install'],['installed']
Deployability,"Hi, ; I'm running into the same error. My installation is via conda, so, has this been pushed to conda yet, or should I be compiling from source?. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626146091:42,install,installation,42,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626146091,1,['install'],['installation']
Deployability,"Hi, ; I'm using the mmseqs2 to assign the taxonomic label for my human gut microbiota contigs, Here I have two questions and any suggestion would be nice,. 1. I have noticed that there are many prebuiled dabatabse which includ GTDB ,but in the wiki page there is a section about `Create a seqTaxDB for GTDB`, does this step have been integrated in the pre-established GTDB database? ; 2. I have tried differert database to run the taxonomy module, finally, I found there are little consistance at the species level between any two database ,I tried swissprot, uniref50 , uniref90 , nr, and GTDB, so I'm confused which database should be adopt, is there any recommendation? by the way, it's bacteria. Is there any preference? The results in your paper use the refseq database ,so what if you change another database?. I do need your help, please,Thanks a lot !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/546:334,integrat,integrated,334,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/546,1,['integrat'],['integrated']
Deployability,"Hi, I do these ordinal names in Python when I run a pipeline that uses MMSeqs2 as a backend.; You need to rank the clusters by size, and top-down number it. This output:; ```; a a; a b; a c; a d; e e; e f; e h; i i; i j; ```; might become something like this:. ```; 0 a; 0 b; 0 c; 0 d; 1 e; 1 f; 1 h; 2 i; 2 j; ```. I hope I help someway.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/405#issuecomment-774499447:52,pipeline,pipeline,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/405#issuecomment-774499447,1,['pipeline'],['pipeline']
Deployability,"Hi, I have been using MMseqs2 to obtain clusters of multiple sequence files and then obtain each sequence's taxonomy. I followed this pipeline:. ```; mmseqs easy-cluster ${rawfas[@]} newcluster tmp --min-seq-id 0.3 -c 0.5 --cov-mode 1 --cluster-mode 2 -e 0.001 -s 6; mmseqs createdb ${rawfas[@]} queryDB_all; mmseqs taxonomy queryDB $TXDB clusterTax tmp --lca-mode 4 --split-memory-limit 60G \; --lca-ranks superkingdom,phylum,class,order,family,genus; mmseqs createtsv queryDB clusterTax ../clusterTax.tsv; ```. The output of these is a clusterRes_cluster.tsv file including the representative sequences and the cluster members, and a clusterTax file with the taxonomy for each sequence. My question is, is there any MMseqs2 implementation to obtain the common taxonomy for each cluster, like an LCA algorithm applied to all the sequences belonging to each cluster, or something similar? Or another software that allows me to do that?. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/815:134,pipeline,pipeline,134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/815,1,['pipeline'],['pipeline']
Deployability,"Hi, Thanks always for the nice tool!; I have clustered a large sequence set with `mmseqs linclust `, and now I want to add some sequences and update the clustering result with `mmseqs clusterupdate`. But it seemed that `mmseqs clusterupdate` updates clustering results with the `mmseqs cluster` algorithm but not `mmseqs linclust `.; I am guessing this because all the parameters of `mmseqs clusterupdate` match with `mmseqs cluster`, but not `mmseqs linclust `. Is it correct?; Is it possible to update clustering with `mmseqs linclust ` algorithm?. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/630:142,update,update,142,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/630,3,['update'],"['update', 'updates']"
Deployability,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/212:603,release,release,603,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212,2,"['install', 'release']","['installed', 'release']"
Deployability,"Hi, while benchmarking your tool I came across an issue clustering with `--cov-mode 1`. Clusterable pairs remain in the representative set that should be found by the search workflow. Steps to reproduce this using release 14 and the astral95 set (http://scop.berkeley.edu/downloads/scopeseq-2.08/astral-scopedom-seqres-gd-sel-gs-bib-95-2.08.fa):. ```; mmseqs cluster astral95 out . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; # self-search the representatives; mmseqs search reps reps reps.self . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; mmseqs convertalis reps reps reps.self reps.self.tsv; awk '{ if($1!=$2) print }' reps.self.tsv | wc -l; 1231; ```. Running the same command lines using release 11 and `--cluster-mode 2` results in 9 hits instead of 1231. Looks like a bug or am I not understanding something?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/664:214,release,release,214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/664,2,['release'],['release']
Deployability,"Hi,. After update to last version of mmseqs and hhsuite, I tried again.; I wrote this script inspired in [this tutorial](https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-hhblits-database). ```; #!/usr/bin/env bash. BASE=""subset""; FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s 7.5 &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e 0.00001 &>> ${FILELOG}. echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; cstranslate -i ${MMSEQMSA} -o ${MMSEQMSA}_cs219 \; -A /home/linuxbrew/anaconda3/data/cs219.lib \; -D /home/linuxbrew/anaconda3/data/context_data.lib \; -x 0.3 -c 4 -I ca3m &>> ${FILELOG}; ```; It only fails on cstranslate with this error:; ```; ERROR: Unable to read input file 'subsetMSA'!; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ...; ```. I'm attaching the the [sequence](https://github.com/soedinglab/MMseqs2/files/3095328/subset.fa.txt), [commands file (source)](https://github.com/soedinglab/MMseqs2/files/3095327/source.sh.txt) and [log file](https://github.com/soedinglab/MMseqs2/files/3095326/job",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503:11,update,update,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503,1,['update'],['update']
Deployability,"Hi,. I am experiencing a similar/the same issue when running convertalis. I've used a previous version a few months ago with no issues, so this seems like it's been introduced since then. When using the latest release (2-23394, I tried both avx and sse) I receive this output. ```; n8942188@lyra03:~/test_mmseqs2> /home/n8942188/various_programs/mmseqs2/bin/mmseqs convertalis mmseqstest_nucl.fasta_QDB mmseqtest_prots.fasta_TDB mmseqtest_SDB mmseqtest_SDB.m8 --threads 1; Program call:; mmseqstest_nucl.fasta_QDB mmseqtest_prots.fasta_TDB mmseqtest_SDB mmseqtest_SDB.m8 --threads 1. MMseqs Version: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; Alignment Format 0; No preload false; Early exit false; Database Output false; Threads 1; Verbosity 3. Query Header file: mmseqstest_nucl.fasta_QDB_h; Use index mmseqstest_nucl.fasta_QDB.sk6; Index version: 5.0.0; Generated by: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; KmerSize: 6; AlphabetSize: 21; Mask: 1; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 1; ScoreMatrix: blosum62.out; Target Header file: mmseqtest_prots.fasta_TDB_h; Use index mmseqtest_prots.fasta_TDB.sk6; Index version: 5.0.0; Generated by: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; KmerSize: 6; AlphabetSize: 21; Mask: 1; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 1; ScoreMatrix: blosum62.out; Alignment database: mmseqtest_SDB; Start writing file to mmseqtest_SDB.m8; Invalid database read for database data file=mmseqstest_nucl.fasta_QDB_h, database index=; ```. All the previous steps seem to work correctly (createdb, createindex, search) and have contents inside their files. For example, running head on the _QDB_h and _TDB_h files return the below result (both _h files are identical since my query is the nucleotide version of the prot sequence). ```; evm.model.utg902.1.8.5abb479e; evm.model.utg902.1.9.5abb479e; evm.model.utg902.1.10.5abb479e; evm.model.utg1004.80; evm.model.utg8847.1_evm.model.utg8847.2.3.5abb479e; evm.model.utg8847.1_evm.mod",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994:210,release,release,210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994,1,['release'],['release']
Deployability,"Hi,. I am interested in computing all pairwise sequence identities in a given cluster. I believe mmseqs alignall accomplishes this task, but I am getting unexpected results. Using the ""examples"" folder that was downloaded during the mmseqs installation process, I created the following clusters:. `mmseqs createdb examples/QUERY.fasta queryDB`; `mmseqs cluster queryDB queryDB_clu tmp --min-seq-id 0.3 -c 0.8`; `mmseqs createtsv queryDB queryDB queryDB_clu queryDB_clu.tsv`. I then use mmseqs alignall to compute all pairwise sequence identities in each cluster:. `mmseqs alignall queryDB queryDB_clu queryDB_alnall`; `mmseqs createtsv queryDB queryDB queryDB_alnall queryDB_alnall.tsv`; `OFS=""\t"" awk 'FNR==NR{a[$1]=$2;next}{$3=a[$3]; print}' queryDB.lookup queryDB_alnall.tsv > queryDB_alnall_newid.tsv`. Unfortunately, the pairwise sequence identities that get calculated seem incorrect. For instance, when you compare the sequence P40148 against itself, I get a sequence identity less than 100% (i.e., 93.1%). Below is an example line from the output file `queryDB_alnall_newid.tsv`:. `P40148 P40148 P40148 192 0.931 2.952E-59 -1 96 97 -1 96 97`. Alternatively, I tried specifying alignment mode of 3 (because I think that's also the default of `mmseqs cluster`):. `mmseqs alignall queryDB queryDB_clu queryDB_alnall --alignment-mode 3`. Then I strangely get 0% sequence identity for *all* pairwise comparisons. E.g,:; `P40148 P40148 P40148 192 0.000 2.952E-59 0 96 97 0 96 97`. I am a non-scientist learning how to use mmseqs, so I may be missing something obvious. I would be very grateful for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503:240,install,installation,240,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503,1,['install'],['installation']
Deployability,"Hi,. I am trying to use MMseqs2 to cluster a large protein database, splitting the work into batch jobs. I followed the search example from https://github.com/soedinglab/mmseqs2/wiki#how-to-run-mmseqs2-on-multiple-servers-using-batch-systems, searching batches of the database against the whole database. Then I am trying to use search results to compute clusters with the `clust` subcommand. Here is my script:; ```; $MMSEQS createdb $INFASTA $DB; $MMSEQS splitdb $DB ${DB}_split --split $NUM_SPLITS. for i in $(ls ${DB}_split_*_$NUM_SPLITS) ; do; $MMSEQS search $i $DB ${i}_search tmp; done. $MMSEQS mergedbs ${DB}_split_0_${NUM_SPLITS}_search ${DB}_search $(awk 'BEGIN {for (i=1;i < '$NUM_SPLITS';i++) printf(""'$DB'_split_%d_'$NUM_SPLITS'_search "", i);}'). $MMSEQS clust ${DB} ${DB}_search ${DB}_clust ; ```; `mmseqs clust` gives `Sequence db size != result db size` error. Is there a way to combine the search results into one results database or compute clusters for each of my database batch and merge them, or any other way do clustering on a batch system (without MPI)? . ## Your Environment; Linux CentOs.; MMseqs2 Release 14-7e284: https://github.com/soedinglab/MMseqs2/releases/download/14-7e284/mmseqs-linux-avx2.tar.gz",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/764:1124,Release,Release,1124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/764,2,"['Release', 'release']","['Release', 'releases']"
Deployability,"Hi,. I am using a strategy that I have been using for some time successfully but since the last update, it has stopped working. The idea is to group the sequences and generate an MSA for each cluster to generate models for each MSA and compare all models with hhsearch. So after compiling my cluster, I use `createseqfiledb` and then use` apply` with clustalo. Exactly the apply step has returned me some errors and it never finishes. The usual pipeline is:; ```; # .... a lot of clusters hierarchically prepared ; mmseqs mergeclusters sbps.DB sbps.CLU $(\ls -d1t id_0cov_0.8evalue_* | tac | sed 's/$/\/MMseqsClust/' | xargs ) --threads 30 ; mmseqs createtsv sbps.DB sbps.DB sbps.CLU sbps.CLU.tsv --threads 40. mmseqs createseqfiledb sbps.DB sbps.CLU sbps.CLU.SEQ --threads 30 --min-sequences 3. ## errors from this point; mmseqs apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --output-order=input-order --threads=1 --iter=5 ; ```. The error is exemplified by this:; ```; apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --threads=1 --iter=5 . MMseqs Version:	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Threads 	30; Compressed	0; Verbosity 	3. Start applying.; write stdin1: Bad address ] 0.00% 1 eta -; ERROR: Sequence 'WP_078846918.1/28-316' has 0 residues; FATAL: Reading sequence file '-' failed; ERROR: Sequence 'WP_082295029.1/41-339' has 0 residues ] 2.09% 29 eta 2h 51m 21s ; FATAL: Reading sequence file '-' failed; Entry 30 exited with error code 1!. ```. I may share the `sbps.DB` and `sbps.CLU` and associated files to check, but I'm sure that they are fine. Just tell me how to send to you. But I don't know if the issue happens in `createseqfiledb` but since it doesn't return any error message and the files seem okay, the problem may be the STDIN.; Searching sequences like `WP_082295029.1/41-339` in the files I was able to find it and the sequence is the same as the initial fasta file. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/230:96,update,update,96,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230,2,"['pipeline', 'update']","['pipeline', 'update']"
Deployability,"Hi,. I have not heard from you guys for two days now. Is there any sort of update. . Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357578307:75,update,update,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357578307,1,['update'],['update']
Deployability,"Hi,. I have quite a big number of protein sequences that I want to cluster. I tried to cluster them together, it didn't work out (I don't know if size was the issue, but I was in a hurry), so I split the file in two and clustered each separately (that worked). I then combined two outputs (*rep_seq.fasta) into a single file that I wanted to cluster once more (cca 75 mil sequences). However, it always dies in the same way, although I tried changing memory settings and threads. This file is not bigger than the previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 21474836",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265:647,install,installed,647,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265,1,['install'],['installed']
Deployability,"Hi,. I have seen that in the mmseqs user guide, there is a part about how to preprocess the GTDB database. I am still confusing after reading that. I want to ask if there is more details about how to build the database from the latest GTDB data (https://data.ace.uq.edu.au/public/gtdb/data/releases/release202/202.0/) for mmseqs taxonomy? . Thanks for your any suggestions. Sincerely; Shaojun",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/514:290,release,releases,290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514,1,['release'],['releases']
Deployability,"Hi,. I have written a tool called pharokka (https://github.com/gbouras13/pharokka) that annotates bacteriophage genomes. Pharokka uses mmseqs2 to match predicted CDS to the PHROGs (https://phrogs.lmge.uca.fr), CARD and VFDB databases using mmseqs2 which follows the method at https://phrogs.lmge.uca.fr/READMORE.php. Mmseqs2 is amazingly fast especially for large input metaviromes, so it's a brilliant choice for this clustering - thanks for developing it!. I am coming across a problem with the new version released 10 days ago. With v 13.4511, the 3 mmseqs2 searches take approximately 5-10 minutes in total depending on input, architecture and threads used. However, since mmseqs2 v14-7e284 has been released, users of pharokka have reported that the mmseqs2 step hangs indefinitely (at least 20+ hours) when pharokka with mmseqs2 v14-7e284 is installed with bioconda. I have replicated the issue on my machines also. . The relevant lines in pharokka are 358-369:. https://github.com/gbouras13/pharokka/blob/3b8f7ae207b367366765f482c9dce1dd2cccee80/bin/processes.py#L358 . # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625:509,release,released,509,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625,3,"['install', 'release']","['installed', 'released']"
Deployability,"Hi,. I use a new install of mmseqs2 and I change the temporary directory. Now it's work. . Thanks for your help.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-744279206:17,install,install,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-744279206,1,['install'],['install']
Deployability,"Hi,. I'm trying to learn the workflow through the tutorial. unfortunately, the commands in the tutorials are wrong according to the program codes. i followed this steps. # Download the database; wget http://wwwuser.gwdg.de/~compbiol/mmseqs2/tutorials/uniprot_sprot_2018_03.fasta.gz; wget http://wwwuser.gwdg.de/~compbiol/mmseqs2/tutorials/uniprot_sprot_2018_03_mapping.tsv.gz; gunzip uniprot_sprot_2018_03_mapping.tsv.gz. # Create a taxonomically annotated sequence database; mmseqs createdb uniprot_sprot_2018_03.fasta.gz uniprot_sprot; mmseqs createtaxdb uniprot_sprot tmp --tax-mapping-file uniprot_sprot_2018_03_mapping.tsv . (mmseq2) cyborg@skynet:~/root_dev$ mmseqs createtaxdb uniprot_sprot tmp --tax-mapping-file uniprot_sprot_2018_03_mapping.tsv; mmseqs createtaxdb:; Annotates a sequence database with NCBI taxonomy information. The program will download the Uniprot taxMappingFile and ncbi-taxdump-folder if only two arguments are passed. Please cite:; Steinegger, M. & Soding, J. MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:sequenceDB> [<i:taxMappingFile> <i:ncbi-taxdump-folder>] <tmpDir> [options]. common options	default 	description [value range]; -v	3 	verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. Unrecognized parameter --tax-mapping-file; Did you mean ""-v""?. if there are any updates to the codes, please let me know. -Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/823:1478,update,updates,1478,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823,1,['update'],['updates']
Deployability,"Hi,. I'm using MMseqs2 for all-vs-all alignments. As indicated in the user guide pdf, I'm using the bash script to perform a fake prefiltering step before aligning. That seems to work, as all alignments are computed, but the results are a bit unexpected:; ```; >Q8CD91; EERVVHWYFKLLDKNSSGDIGKKEIKPFKRFLRKKSKPKKCVKKFVEYCDMNNDKSITVQELMGCLGVTREEGKANTRKRHTPRGNAESSSSNRQPRKQG; >Q95JC9; GPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPPPGPSPPRPPPGPPPQ; ```; I didn't change much of the defaults; ```; mmseqs createdb --dbtype 1 dummyfasta.fasta seq_db; mmseqs_fake_prefilter.sh seq_db seq_db pref; mmseqs align seq_db seq_db pref align_db --alignment-mode 3 -e inf --min-seq-id 0.3; mmseqs convertalis seq_db seq_db align_db check_alignments.tab; ```. ```; query target fident alnlen mismatch gapopen qstart qend tstart tend evalue bits; Q8CD91 Q8CD91 1.000 100 0 0 1 100 1 100 1.707E-71 202; Q8CD91 Q95JC9 1.000 2 0 0 83 84 91 92 4.610E+01 9; Q95JC9 Q95JC9 1.000 100 0 0 1 100 1 100 7.088E-35 108; Q95JC9 Q8CD91 0.333 3 1 0 11 13 21 23 1.508E+02 7; ```; The second alignment's `fident` makes no sense to me. I understand that the e-value is high too, but I really want all pairwise % identities returned so I don't use it for filtering. Do I need to use a different configuration to make this work, or is mmseqs2 just not suitable for this all-vs-all identity task?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/498:1297,configurat,configuration,1297,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/498,1,['configurat'],['configuration']
Deployability,"Hi,. I’m sorry but I can’t help. I couldn't use it at the end because of that problem.; Best,; Ana. > On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***>> wrote:; > ; > ; > Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/> (data.ace.uq.edu.au <http://data.ace.uq.edu.au/>)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory); > ; > Any help on this will be appreciated; > ; > Hi，; > How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working; > https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna>; > Can you give me some advice? Thanks a lot.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA>.; > You are receiving this because you commented.; > . ---------------------------------------------; Ana María Cabello Pérez, PhD. Centro Oceanográfico de Málaga (IEO-CSIC); Instituto Español de Oceanografía; Puerto Pesquero s/n; 29640 Fuengirola, Málaga, Spain ; Tel: +34 95 219 71 24 ; ***@***.***; ---------------------------------------------",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1664078972:931,release,releases,931,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1664078972,2,['release'],['releases']
Deployability,"Hi,; I am new to MMSeqs2. It is really a good tool. However, I have 2 queries, may be basic too. But I want your opinions.; In an attempt to build a set of 30-90% sequence similarity, I removed the redundant hits myself firstly and then deployed a minimum sequence identity threshold of 30% and coverage 1 (All 92 input sequences are close homologues and so I want to avoid the partial match to build the good set), it resulted in 52 hits. So, now as you are guiding, the multiple resultant cluster sets have the sequence identity lesser than 30%, but the 52 hits share a sequence identity > 30%. Is this correct that this way my reduced set of 52 hits contains the sequences that are 30-90% identical?. Further, why is it that for another sequence-group, the resultant set spans the same 45 sequences for both 30% and 90% cutoffs. So, does it mean that the length of atleast 1 representative sequence is bigger and it spans multiple sequences in either of these ranges to result in the same set? How should this result be defined?; Thanks for your clarifications.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/173:237,deploy,deployed,237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/173,1,['deploy'],['deployed']
Deployability,"Hi,; I had used the explicit 'split' size, because I intended to create the index on a different machine than the one where the index would be used (which have less RAM). But because I'm now indexing on the fly, I no longer need to fiddle with the 'split' option :) Clearly a local SSD on each node would be ideal, but with index files as large as 200GB per database, this would require either deleting the index file after each job (therefore transferring the index file before each job, too much network traffic) or installing giant SSDs?...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252569542:518,install,installing,518,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252569542,1,['install'],['installing']
Deployability,"Hi,; I'm glad that the cluster update works for you now. Concerning the generated TSV file:; (i) When you have two different databases DB_old and DB_new, then the ffindex keys do not necessarily match.; (ii) In fresh clustered db, the keys of the clusters get the same IDs as their representative sequences (the first appearing in the cluster). ; (iii) clusterupdate tries to have stable cluster keys (i.e. if a cluster is preserved between the old clustering and the updated one, then the associated key will remains the same). (i) + (ii) + (iii) => updated clustering databases ffindex-keys does not point anymore to the ffindex-keys of their representative sequence. . So that in your TSV file, the cluster composition should be right, but the representative sequence (first column) is wrong. If you want that the first columns actually contains the representative sequence of your clusters, you can pull the last commit of MMseqs2, re-do the cluster updating procedure and call createtsv this way:; mmseqs createtsv DB_new DB_new DB_clusterupdate DB_clusterupdate.tsv --first-seq-as-repr. Best,; Clovis.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-281069817:31,update,update,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-281069817,3,['update'],"['update', 'updated']"
Deployability,"Hi,; thank you very much for mmseqs2, it's really amazing! . We are clustering a few million of sequences following a similar approach than the one described in your uniclust pipeline. Before reinventing the wheel, we are wondering if mmseqs has an easy workaround to extract the sequence identities for each pair of sequences in a cluster from the _alignment_ file. Our aim would be to be able to integrate the identities between pairs to the output of _createtsv_. Do you have any recommendations?. Many thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/13:175,pipeline,pipeline,175,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/13,2,"['integrat', 'pipeline']","['integrate', 'pipeline']"
Deployability,"Hi; I am trying to compile the MPI version of MMseqs2 and I am getting the following [error](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) . ## Expected Behavior; Should compile without errors; ## Current Behavior; Fails with:; ```; src/CMakeFiles/mmseqs-framework.dir/build.make:1598: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```; ## Steps to Reproduce (for bugs); ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; make; ```; ## MMseqs Output (for bugs); Full error log [here](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) ; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): fe2b746e63519424f565b4fbeb4ca5dba905adc7; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; GCC: gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10); OPENMPI: (OpenRTE) 1.10.2; CMAKE: 3.5.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel Xeon Processor (Skylake, IBRS) with 256GB (); * Operating system and version: Ubuntu 5.4.0-6ubuntu1~16.04.10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/158:800,Release,Release,800,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/158,1,['Release'],['Release']
Deployability,"Hi; this is not an issue but a potential enhancement we discussed with @martin-steinegger.; We have a seed clustering database that is continuously updated with new sequences. The size of the DB is growing quite fast, and eventually, we will have problems storing and distributing it. As we have many redundant sequences in each cluster. We thought that having a module that takes a DB and then filters it based on a criterion similar to `--diff` from `result2msa` or `result2profile` would be very useful to keep only informative sequences in the clusters. Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/316:135,continuous,continuously,135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316,2,"['continuous', 'update']","['continuously', 'updated']"
Deployability,"Hi; we are continuously updating a large cluster DB with new data, and one of the steps that are taking longer is when the new sequences are updated with the old keys using the function `joinAndReplace`. We are using this function for other purposes and we added to the sorting parts `--parallel` and `--buffer-size` to speed up and reduce the I/O needed for the sorting. I think it would be great to have available these options if `sort` is modern enough and fallback to the original `joinAndReplace` if `sort` doesn't support these options. What do you think?. Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/269:11,continuous,continuously,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269,2,"['continuous', 'update']","['continuously', 'updated']"
Deployability,"Hi; we are having several problems with the `clusterupdate` workflow on 39ee37f97ab065a3763ee10b834b3e6e25aae491-MPI. ## Expected Behavior; The `clusterupdate` workflow should update existing clusters and the number of sequences should match OLDDB+NEWDB; ## Current Behavior; The workflow has problems in some of the steps:. 1) Most probably related to the new behavior of not merging files, the logic [here](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L218) fails to create the `updatedClust` when concatenating the old cluster results with the new hits. When the workflow is on its [final step](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L271) and has to concatenate the old clusters with the new ones, fails. 2) In our run, we are missing ~200K new sequences that had a hit after the search against the old cluster representatives but it seems to be lost in the `swapresults` [step](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L202) . Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/199:176,update,update,176,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/199,2,['update'],"['update', 'updatedClust']"
Deployability,"Hi; we are having some problems using the MPI version with commit 39ee37f97ab065a3763ee10b834b3e6e25aae491. Thank you; Antonio. ## Expected Behavior; MPI version should use all threads in each of the nodes for prefilter. ## Current Behavior; MPI only uses all threads in one node and one thread in the rest. It works as expected on release 7-4e23d and has the wrong behavior on 39ee37f97ab065a3763ee10b834b3e6e25aae491. ## Steps to Reproduce (for bugs); The command we use in both cases is:; ```{bash}; export OMPI_MCA_btl=^openib; export OMP_NUM_THREADS=28. RUNNER=""mpirun --mca btl_tcp_if_include ens3 -n 10 --map-by ppr:1:node --bind-to none "" ""${MMSEQS}"" clusterupdate ""${SDIR}""/marine_hmp_db_03112017 ""${SDIR}""/mg_gtdb_orfs_db ""${SDIR}""/marine_hmp_db_03112017_clu ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019 ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019_clu ""${DIR}""/mg_gtdb_update/tmp --min-seq-id 0.3 -s 5 --cov-mode 0 -c 0.8; ```. ## MMseqs Output (for bugs); release [7-4e23d](https://gist.github.com/genomewalker/96cfc0c4754cd4f2cd1ce6925576c876) log; commit [39ee37f](https://gist.github.com/genomewalker/8a83a8707dae2bc3179df730a5b695b7) log. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" 39ee37f97ab065a3763ee10b834b3e6e25aae491; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc 5.4 and open MPI 1.10.2; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/vol/attached/opt/MMseqs2-7-4e23d ..; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): cloud system (10 instances, BiBiGrid) with Intel Xeon Processor (Skylake, IBRS) with 28 vCPUs and 256G of memory; * Operating system and version: Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/198:332,release,release,332,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/198,3,"['Release', 'release']","['Release', 'release']"
Deployability,How did you install mmseqs and how do you call it?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-1175793221:12,install,install,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-1175793221,1,['install'],['install']
Deployability,How do you check the release of MMSeqs2 that I am using? I just recently downloaded it a couple weeks ago.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809718243:21,release,release,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809718243,1,['release'],['release']
Deployability,Huzzah! When can expect a new release with these changes incorporated?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/321#issuecomment-649263563:30,release,release,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/321#issuecomment-649263563,1,['release'],['release']
Deployability,"I am not sure how the linuxbrew maintenance works. I think they occasionally merge back hombrew-core master into their repository. The new release is in homebrew-core, so it should appear sometime soonish in linuxbrew. Does the new release also work when you change the k-mer size?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483620666:139,release,release,139,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483620666,2,['release'],['release']
Deployability,"I am not sure what exactly you are running currently. Could you make a list of all MMseqs2 commands you are running or link to the script you are running?. Using the Uniclust pipeline doesn't really make sense anymore, since it's extremely slow.; You should use multiple separate `mmseqs cluster` calls with `--cluster-reassign` at different `--min-seq-id` levels.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765522172:175,pipeline,pipeline,175,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765522172,1,['pipeline'],['pipeline']
Deployability,"I am sorry, I don't think we can help with MPI issues. A separate installation is probably a bad idea, since its usually tailored to the local cluster installation. I would suggest to contact your local IT support.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101#issuecomment-401770487:66,install,installation,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101#issuecomment-401770487,2,['install'],['installation']
Deployability,"I am still not 100% sure why the shared zstd works in debian. We use the zstd function `ZSTD_findDecompressedSize` that should only be available if `ZSTD_STATIC_LINKING_ONLY` is set and therefore zstd is linked statically. ; I just spent a few minutes trying to figure out how debian defeats this check, but didn't find where they do that. As we can't make sure that every native libzstd package does something similar, it's probably more appropriate to have distributions patch that themselves if they are confident it will work out fine. If `ZSTD_findDecompressedSize` becomes part of the stable zstd api, then we can provide as `USE_SYSTEM_ZSTD` option. Regarding xxhash I am very uncomfortable to encourage anyone to provide their own library. xxhash is a central part of the linclust algorithm and we have extensive tests to make sure that linclust produces exactly the same results on every platform/distribution/architecture. I think scientific reproducibility outweighs other concerns for our software.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777511188:473,patch,patch,473,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777511188,1,['patch'],['patch']
Deployability,"I am trying to parallelize the pipeline so that each sample runs on a single core with two threads. The computer I am running this on has 80 cpus and about 1.5TB RAM. So I could use more processors per sample, but I wanted to optimize this for single processor per sample. How many processors did you run your job on that took 10 minutes?. I can try using /dev/shm instead of tmp and see if it makes any difference. We also have a Solid state drive on this computer. Do you think it would be faster if my database is on this drive?. regards,. Dhwani. ________________________________; From: Martin Steinegger <notifications@github.com>; Sent: Wednesday, July 3, 2019 5:18:16 PM; To: soedinglab/MMseqs2; Cc: Dhwani Desai; Mention; Subject: Re: [soedinglab/MMseqs2] Speed up mmseqs for large database and multiple large query sets by loading target into memory (#214). This is way too slow. I just ran something in a similar scale (query size 10005733, target size 101055107) in less than 10 minutes total. Could it be that your file system is very slow? What would happen if you set the tmp to /dev/shm? Why do you just use two threads? What kind of CPUs does the computer have?. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/214?email_source=notifications&email_token=ABYZBDIRYJK5AJLDI4NZQVTP5UCQRA5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODZFSEZA#issuecomment-508240484>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMXQ2BW72344I3OKHDP5UCQRANCNFSM4H333Q6Q>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508484622:31,pipeline,pipeline,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508484622,1,['pipeline'],['pipeline']
Deployability,"I am trying to run hhpred on my clustering results. I have MMseqs2 Version: 9f344f3d6765a1131f22794d9a6fd9fcd8ca2cdf and hhsuite 3.0 installed.; But I cant find the last command (`cstranslate_mpi`) from https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-hhblits-database. Is it part of mmseqs or hhsuite? Does it need to be installed separately? can I use `cstranslate` instead?. Thanks,; Adi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/83:133,install,installed,133,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/83,2,['install'],['installed']
Deployability,"I am trying to use the taxonomy --majority parameter for taxonomic assignment to metagenomic contigs described in this paper, https://www.biorxiv.org/content/10.1101/2020.11.27.401018v1.full.pdf, but it seems like the functionality hasn't been updated yet! When will this function be made available? Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/413:244,update,updated,244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/413,1,['update'],['updated']
Deployability,"I am upgrading my system(cmake, g++ etc) to make suitable for MMseq2 installation. Once it is done I will switch to MMseqs2. The A.index file is totally empty. I am unable to figure out the possible solution.; I have tried multiple times with all input files formatted correctly. Thanks in advance.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-251088900:69,install,installation,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-251088900,1,['install'],['installation']
Deployability,"I assume you are using the `easy-taxonomy`? I think it's currently broken, I am in the process of fixing that again. I'll update you once everything works again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-757961804:122,update,update,122,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-757961804,1,['update'],['update']
Deployability,"I can't reproduce the issue locally. It doesn't get stuck in the index building. How did you install MMseqs2 (condo, self-compiled etc?) Whats your hardware specs?. If your computer supports AVX2, please try using the avx2 binary at https://mmseqs.com/latest.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741791452:93,install,install,93,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741791452,1,['install'],['install']
Deployability,"I checked over my code, and I don't see why `extractorfs` is being called during `mmseqs clusterupdate`. My entire workflow is:. * existing mmseqs db of full length gene amino acid sequences (created via `mmseqs createdb`); * existing mmseqs cluster db for all of the sequences in the db (created via `mmseqs linclust`); * 18 threads used, so the cluster db files end in `.<#>`; * new db of full length gene amino acid sequences (created via `mmseqs createdb`); * no overlap with the original set of sequences; * concat of both sequence databases via `mmseqs concatdbs` (also done on the `*_h` files); * `mmseqs clusterupdate {original_seq_db} {concat_seq_db} {cluster_db} {output_db} {output_cluster_db} {tmp_dir}`. Is there anything that I can do to get `clusterupdate` working in my case? For instance, can I change the `updatedClust` symlink to `clusters_db.0`?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665613918:824,update,updatedClust,824,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665613918,1,['update'],['updatedClust']
Deployability,I did run this with the newest release. Did you want to install the newest version on the master branch?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579509968:31,release,release,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579509968,2,"['install', 'release']","['install', 'release']"
Deployability,"I did what you suggested. It worked well. Thanks. On Fri, Jul 10, 2020, 16:44 Milot Mirdita <notifications@github.com> wrote:. > We introduced the module after the 11th release. It will be part of the; > next one.; >; > You can either use the non ""easy"" workflow, i.e. something like:; >; > mmseqs createdb query.fasta qdb; > mmseqs createdb target.fasta tdb; > mmseqs rbh qdb tdb res tmp; > mmseqs convertalis qdb tdb res res.m8; >; > or you can either download precompiled binaries from the latest git commit; > at https://mmseqs.com/latest or build the code from source.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AE545CK2WHJAOVZ6JC27IUDR23Z2BANCNFSM4OWPFQCA>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656969705:169,release,release,169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656969705,1,['release'],['release']
Deployability,I didnt hear any update. I considere this issues resolved. Please open it again if the problem still occurs.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-266994149:17,update,update,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-266994149,1,['update'],['update']
Deployability,"I don't think I have permissions to install, but i can ask cluster admin to do it. Should i ask them to install SSE41?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/90#issuecomment-392935049:36,install,install,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/90#issuecomment-392935049,2,['install'],['install']
Deployability,I downloaded the latest official release (MMseqs2 Release 8-fac81) and everything works with that one.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/195#issuecomment-485932290:33,release,release,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/195#issuecomment-485932290,2,"['Release', 'release']","['Release', 'release']"
Deployability,"I encountered an error while executing the command cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ... My cmake version is 3.28.0, and gcc version 7.3. The error message I received is as follows:. -- The CXX compiler identification is GNU 7.3.0 ; -- The C compiler identification is GNU 7.3.0 ; -- Detecting CXX compiler ABI info ; -- Detecting CXX compiler ABI info - failed ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ - broken ; CMake Error at /usr/local/share/cmake-3.28/Modules/CMakeTestCXXCompiler.cmake:60 (message): ; The C++ compiler; ""/home/anaconda3/envs/AlphaFlow/bin/c++"" ; is not able to compile a simple test program. ; It fails with the following output:; Change Dir: '/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz'; Run Build Command(s): /usr/local/bin/cmake -E env VERBOSE=1 /usr/bin/gmake -f Makefile cmTC_8b7b3/fast ; /usr/bin/gmake -f CMakeFiles/cmTC_8b7b3.dir/build.make CMakeFiles/cmTC_8b7b3.dir/build; gmake[1]: Entering directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; Building CXX object CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o ; /home/anaconda3/envs/AlphaFlow/bin/c++ -o CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -c /home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz/testCXXCompiler.cxx ; Linking CXX executable cmTC_8b7b3 ; /usr/local/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8b7b3.dir/link.txt --verbose=1 ; /home/anaconda3/envs/AlphaFlow/bin/c++ -rdynamic CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -o cmTC_8b7b3 ; collect2: fatal error: cannot find 'ld' compilation terminated. ; gmake[1]: *** [cmTC_8b7b3] Error 1 ; gmake[1]: Leaving directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; gmake: *** [cmTC_8b7b3/fast] Error 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/816:76,RELEASE,RELEASE,76,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/816,1,['RELEASE'],['RELEASE']
Deployability,"I encountered the same issue while working with mmseqs version [14-7e284](https://github.com/soedinglab/MMseqs2/tree/14-7e284) and GTDB r214, using a Linux server (Ubuntu 22.04 LTS; CPU with SSE/AVX2 support and 512 GB RAM). Although there is a lot of overlap with the post by @mlcoleman previously and the discussion by @mherold1 , I include some details below about the problems I ran into and how I addressed them. ## Problem description; After making a seqdb for the GTDB, there seems to be a collision of genome IDs between different genomes in the seqdb's `gdtb.lookup` file. As mentioned by @mlcoleman , these ID collisions seem to disrupt mmseqs taxonomy workflows downstream. ## Steps to reproduce; 1. Download `gtdb.tar.gz` as done in the `data/workflow/databases.sh` script (or you can just run: `wget -o gdtb.tar.gz https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/genomic_files_reps/gtdb_proteins_aa_reps.tar.gz`); 2. Import `gtdb.tar.gz` as a tardb via `mmseqs tar2db gtdb.tar.gz tardb --tar-include 'faa.gz$'`; 3. Run `mmseqs createdb tardb gtdb`. `mmseqs createdb` finishes without error, but the resulting `gtdb.lookup` file seems to assign the wrong genome IDs (resulting in ID collisions) for any genomes with an ID over 65535. Meanwhile, the correct IDs seem to be assigned in `gtdb.source`. #### For example:. Last few lines of `gtdb.source` (`tail gtdb.source`):; ```; 85195 RS_GCF_014201515.1; 85196 RS_GCF_003977665.1; 85197 RS_GCF_007922615.2; 85198 GB_GCA_002389765.1; 85199 RS_GCF_001440475.1; 85200 GB_GCA_015059865.1; 85201 GB_GCA_900546895.1; 85202 GB_GCA_017621015.1; 85203 GB_GCA_015486425.1; 85204 GB_GCA_934565415.1; ```; It seems like the left column is the genome ID, and the right column is the genome name in the GTDB. Everything seems OK with this file. Last few lines of `gtdb.lookup` (`tail gtdb.lookup`); ```; 256163105 CAKTHQ010000047.1_16 19668; 256163106 CAKTHQ010000050.1_5 19668; 256163107 CAKTHQ010000052.1_8 19668; 256163108 CAKTHQ010000056.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:872,release,releases,872,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625,1,['release'],['releases']
Deployability,I finished up the integration in #321. Thanks a lot again!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-649132530:18,integrat,integration,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-649132530,1,['integrat'],['integration']
Deployability,"I fixed this issue recently in https://github.com/soedinglab/MMseqs2/issues/379. It will be part of the next release, which should happen somewhat soonish. In the meantime you can use the static precompiled binaries available at https://mmseqs.com/latest/.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/399#issuecomment-767474520:109,release,release,109,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399#issuecomment-767474520,1,['release'],['release']
Deployability,I found one memory issue when giving only extremely short sequences to MMseqs2.; You can probably work around this issue in release 13 by adding one fake sequence that is longer than 20 AA residues to the input file. . I would also recommend to use the following parameters `-k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0` for clustering such extremely short sequences. You might also want to add `-e inf` as E-values are essentially meaningless for such short sequences. In this case you would only cluster based on seq. id. and coverage.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833923971:124,release,release,124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833923971,1,['release'],['release']
Deployability,I get release 13 when I create a fresh conda env.; What does `conda list` say when you install MMseqs2?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809685553:6,release,release,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809685553,2,"['install', 'release']","['install', 'release']"
Deployability,"I get the helpfulness of the multi-output, but it really does make integrating mmseqs in a snakemake pipeline a pain. It would be helpful to know which files are actually the input and output of each subcommand, but I get that it would be a large change to the script help docs, and if you were to change the implementation, you'd have to change all of the docs. . I don't know why `clusterupdate` is using `extractorfs` either. For my test, I'm just taking some full-length gene AA sequences (generated by prodigal from a set of genomes), and trying to update those with a few more full-length gene AA sequences. I'll double check my code.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477:67,integrat,integrating,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477,3,"['integrat', 'pipeline', 'update']","['integrating', 'pipeline', 'update']"
Deployability,"I get the same type of error when using the parallel MPI version with ""RUNNER=mpirun -np 8"" . I only encountered this error while testing. I ideally would like to use a cluster configuration but will not be able to if this error persists.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367:177,configurat,configuration,177,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367,1,['configurat'],['configuration']
Deployability,I have added the support to index nucleotide sequences. We will release a new version of mmseqs2 soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/175#issuecomment-477738710:64,release,release,64,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175#issuecomment-477738710,1,['release'],['release']
Deployability,"I have installed the latest version available via ; `conda install -c conda-forge -c bioconda mmseqs2`. I tried to download the PDB database via ; `mmseqs databases PDB pdb_db tmp`. This leads to the process just hanging. One of the error messages printed shows that the URL seems to be inactive, as described in this [issue](https://github.com/soedinglab/MMseqs2/issues/772#issue-1977470516) (#772). . 03/11 13:57:28 [ERROR] CUID#7 - Download aborted. URI=https://ftp.wwpdb.org/pub/pdb/derived_data/pdb_seqres.txt.gz; Exception: [AbstractCommand.cc:340] errorCode=2 Timeout. Is there a way to specify the URL when calling `mmseqs databases`? Or could you suggest a fix for the code when installed via conda?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/820:7,install,installed,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/820,3,['install'],"['install', 'installed']"
Deployability,I have tried to update my clusters with the static compiled verison of mmseq2.; command used for updating clusters. ```; mmseqs clusterupdate old_DB new_DB old_DB_clu new_DB_clu tmp2/; ```. Errors noticed at various levels:. ```; Failed to mmap memory dataSize=0 File=tmp2//NEWDB.newSeqs; Failed to mmap memory dataSize=0 File=tmp2//NEWDB.newSeqs; mv: cannot stat `/tmp2/aln_4': No such file or directory; Failed to mmap memory dataSize=0 File=tmp2//NEWDB.newSeqs; Could not open data file tmp2//newSeqsHits.swapped.all!; awk: cmd. line:1: fatal: cannot open file `tmp2//newSeqsHits.index' for reading (No such file or directory); mv: cannot stat `tmp2//aln_*': No such file or directory; mv: cannot stat `tmp2//pref_*': No such file or directory; mv: cannot stat `tmp2//clu_*': No such file or directory; mv: cannot stat `tmp2//input_*': No such file or directory; Failed to mmap memory dataSize=0 File=tmp2//toBeClusteredSeparately; Failed to mmap memory dataSize=0 File=tmp2//toBeClusteredSeparately; awk: cmd. line:1: fatal: cannot open file `tmp2//clu_redundancy.index' for reading (No such file or directory); Failed to mmap memory dataSize=0 File=tmp2//toBeClusteredSeparately; Could not open data file tmp2//input_step_redundancy!; Could not open data file tmp2//input_step_redundancy!; Could not open data file tmp2//input_step_redundancy!; Failed to mmap memory dataSize=0 File=tmp2//toBeClusteredSeparately; mv: cannot stat `tmp2//clu': No such file or directory; mv: cannot stat `tmp2//clu.index': No such file or directory; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-253194194:16,update,update,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-253194194,1,['update'],['update']
Deployability,I have updated the wiki. Sorry for the delay. I will build a more convenient way to create taxonomical databases soon. https://github.com/soedinglab/MMseqs2/wiki#taxonomy-assignment-using-mmseqs-taxonomy,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/132#issuecomment-436739404:7,update,updated,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/132#issuecomment-436739404,1,['update'],['updated']
Deployability,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:631,update,updated,631,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896,1,['update'],['updated']
Deployability,I just looked up when the commit you listed (`113e3212c137d026e297c7540e1fcd039f6812b1`) is is from and its ancient. please update to the latest release and everything should work fine.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/851#issuecomment-2197779147:124,update,update,124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/851#issuecomment-2197779147,2,"['release', 'update']","['release', 'update']"
Deployability,"I just successfully created, indexed, and searched NR, getting the 'expected' output, using a fresh download of the static build, but on looking at the output it seems that the static build is now at the same version as the last commit on GitHub. Unfortunately, I deleted the older version when I built from source.; Not sure what more I can do to help; the issue was either fixed in the new release or it was user error. Regardless, I'm glad it seems to be working now. I'm pretty excited about your software, so thanks for putting it out there.; -Steve",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16#issuecomment-278849748:392,release,release,392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16#issuecomment-278849748,1,['release'],['release']
Deployability,"I realize that those are both required libraries, and needed for many platforms. . The request is for adding something like USE_SYSTEM_ZSTD and USE_SYSTEM_XXHASH. The Debian patch for system zstd has the minor changes needed except the cmake ifdefs. Debian also uses system gzstream (Debian is an outlier in having that lib), but no patch for xxhash. xxhash is central to your algorithm and also latest-release in your repo, but it's in pretty active development with fairly major bug fixes and performance improvements in the last 6 months, so it's good to have a pinned version in the repo that can be overridden with system if desired. Being able to build shared libs is pretty important, in either case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777005754:174,patch,patch,174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777005754,3,"['patch', 'release']","['patch', 'release']"
Deployability,I see that this function is still defined still inside the static linking only block:; Latest release: https://github.com/facebook/zstd/blob/v1.4.8/lib/zstd.h#L1282; Current git HEAD: https://github.com/facebook/zstd/blob/f39178b445f96b456881268d29779964633f527d/lib/zstd.h#L1297. But I added a cmake flag to use the (static) system provided libzstd. Hope it helps.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-779222347:94,release,release,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-779222347,1,['release'],['release']
Deployability,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:1648,release,release,1648,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495,1,['release'],['release']
Deployability,I think I fixed the same issue recently. You can either compile from git or download the latest statically compiled binaries from mmseqs.com/latest. The fix will be part of the next release that will be available very soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-781922599:182,release,release,182,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-781922599,1,['release'],['release']
Deployability,"I think I found the issue, its mostly unrelated to the regex itself. . When an entry is skipped, we don't correctly update the data offset for the next tar entry.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1173383836:116,update,update,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1173383836,1,['update'],['update']
Deployability,"I think I've found a typo on the rolling hash function of linclust, at line; https://github.com/soedinglab/MMseqs2/blob/11e2736028cc12a6523b507b061158903f8de317/src/linclust/kmermatcher.cpp#L55; I guess it should be; ```; h ^= RoL(RAND[x_first], (rol*(length-1)) % 16);; ```; with rol instead of the fixed 5 ? Probably you define rol=5 somewhere so in practice no harm is done. (In the Supplementary Material of the paper it's `5` but I noticed that now is more general...)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/252:33,rolling,rolling,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/252,1,['rolling'],['rolling']
Deployability,I think MMseqs2 12 should now deal with this better. Could you please update? We resolved many issues with cluster updating in the last release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-709046082:70,update,update,70,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-709046082,2,"['release', 'update']","['release', 'update']"
Deployability,I think it's probably salvageable. I'll need to look over your output in detail. . Another question: This was clustered using `easy-linclust` not using `easy-cluster` right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058:182,update,update,182,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058,1,['update'],['update']
Deployability,"I think the issue might be with my OpenMPI installation more generally, as I cannot get their hello_c program to function properly. Do you suggest locally installing a separate local OpenMPI installation? I am having trouble figuring out how to configure everything so as to work properly. Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101#issuecomment-401577332:43,install,installation,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101#issuecomment-401577332,3,['install'],"['installation', 'installing']"
Deployability,"I think we have computed the wrong thing at some point and never updated the number. 130GB sounds about right. . The function that computes a more accurate memory estimate can be found in the code:; https://github.com/soedinglab/MMseqs2/blob/d4841a8efad066e9758b6626cc64c5ef5ee53055/src/prefiltering/Prefiltering.cpp#L1069. You will still find the same two parts as listed above. However, the largest chunk of memory that is used now with modern machines is the per thread memory. A dual socket 64-core CPU machine with hyper threading will try to use about 500GB total RAM in per-thread memory. Thus, its usually a good idea to not use hyperthreading with MMseqs2 as it only has minor speed benefits for a large increase of memory.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/808#issuecomment-2063458294:65,update,updated,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/808#issuecomment-2063458294,1,['update'],['updated']
Deployability,"I think with the latest commit it should finally work fine. Please update to the latest version and delete the following files. Then you can rerun the previous command, it should continue and work fine now. ```; rm -f tmp/2765600628860701936/top1* tmp/2765600628860701936/aligned*; ```. Thanks a lot for uncovering all these bugs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381540258:67,update,update,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381540258,1,['update'],['update']
Deployability,I took a look at the issue yesterday. The problem should already be fixed in Git. Could you please try downloading the latest statically compiled version or build MMseqs2 yourself?. We will make a new release soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571942512:201,release,release,201,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571942512,1,['release'],['release']
Deployability,I tried to reproduce the behavior but I could not. I did not see this message before in my runs. But I think your results will be fine if not all sequences reports this warning. But just to figure out what does wrong: Could you provide us the MSA where this issue occurs? I have create a patch which should print out the MSA if the warning occurs ( https://gist.github.com/martin-steinegger/2ecff9e259d97eca3f9c45c69912d113 ). Thanks a lot.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/72#issuecomment-371032617:288,patch,patch,288,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/72#issuecomment-371032617,1,['patch'],['patch']
Deployability,"I try to reproduce this bug on my Mac with macOS Sierra with gcc-6.2 (brew install gcc).; But I can still compile it. DId you compile gcc-6 with or without multilib support? ; The new gcc with multlib support seems to have troubles with openmp. ; If you have multilib support try to run ""brew reinstall gcc --without-multilib"". Maybe this can solve the problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/8#issuecomment-265665662:75,install,install,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/8#issuecomment-265665662,1,['install'],['install']
Deployability,I unprefixed the MMseqs2 macros and replaced our undefined version xxhash with the latest release v0.8.; I'll merge once I get a green light from the CI. Thanks a lot :),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-755369024:90,release,release,90,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-755369024,1,['release'],['release']
Deployability,"I updated the documentation. . MMseqs2/Linclust and Linclust has three main criteria to link two sequences by an edge:. (1) a maximum E-value threshold (option -e ). (2) a minimum sequence identity (--min-seq-id [0,1]) with option --alignment-mode 3 defined as the number of identical aligned residues divided by the number of aligned columns including internal gap columns, or, by default, defined by a highly correlated measure, the equivalent similarity score of the local alignment (including gap penalties) divided by the maximum of the lengths of the two locally aligned sequence segments. The score per residue equivalent to a certain sequence identity is obtained by a linear regression using thousands of local alignments as training set. (3) a minimum coverage (option -c [0,1], which is defined by the number of aligned residue pairs divided by either the minimum of the length of query/centre and target/non-centre sequences (default mode, --cov-mode 0), or by the length of the target/non-centre sequence (--cov-mode 1), or by the length of the query/centre (--cov-mode 2);. https://github.com/soedinglab/MMseqs2/wiki#clustering-criteria. @ksteczk `--clustering-mode 1 ` is similar to BLASTclust. Each connected component is a seperate cluster. See https://en.wikipedia.org/wiki/Connected_component_(graph_theory)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/73#issuecomment-373644484:2,update,updated,2,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/73#issuecomment-373644484,1,['update'],['updated']
Deployability,I updated the scripts on how to setup the template server in the colabfold repository https://github.com/sokrypton/ColabFold/tree/main/MsaServer.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/621#issuecomment-1285072520:2,update,updated,2,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/621#issuecomment-1285072520,1,['update'],['updated']
Deployability,"I used the following command, where `queryDB` is a sequence database created using a fasta file with 25 sequences. ; ```; mmseqs search test/query/queryDB ../nrDB resultDB tmp --num-iterations 3 --start-sens 1 --sens-steps 3 -s 7; ```; Only three files were created as the result:; ```; 1.5M Jan 30 11:52 resultDB; 4 Jan 30 11:52 resultDB.dbtype; 392 Jan 30 11:52 resultDB.index; ```; If I do `head -n 5 resultDB` I get the following:; ```; 329161555 773 1.00 2.658E-249 0 382 383 0 382 383 383M; 121000224 437 0.538 5.873E-133 0 382 383 0 389 390 217M7D166M; 187343874 431 0.520 6.546E-131 0 382 383 0 389 390 217M7D166M; 190748379 428 0.517 5.905E-130 0 382 383 0 389 390 217M7D166M; 100067444 424 0.513 1.872E-128 0 382 383 0 392 393 219M8D80M2D84M; ```; If I do `head -n resultDB.index` I get the following:; ```; 0 0 46663; 1 46663 71880; 2 118543 58035; 3 176578 50784; 4 227362 80826; ```. I also tried searching against my `nrDB` using a profileDB, and similarly got only those three files (`resultDB`, `resultDB.dbtype`, and `resultDB.index`) as the result. Here is the command I used there:; ```; mmseqs search ../profileDB /home/scratch60/new_ndDB/nrDB resultDB tmp --start-sens 1 --sens-steps 3 -s 7 -e 0.005 -a 1; ````. I see that makes sense about `taxDB`!. Edit: also I don't know if I mentioned that I am using `MMseqs2 Version: 6672bbc9de55e89b011c8a055982a2644d31a467` which was acquired and installed in mid-January. I am running it on my university's computer cluster (Red Hat Enterprise Linux Server 7.7 (Maipo)) which I ssh into.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771814053:1410,install,installed,1410,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771814053,1,['install'],['installed']
Deployability,"I was trying to avoid MPI so far... Mostly because I run mmseqs as part of a nextflow pipeline, and I'm not even sure if it is possible to use MPI from there, because nextflow usually takes care of the parallelization.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/376#issuecomment-734387106:86,pipeline,pipeline,86,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/376#issuecomment-734387106,1,['pipeline'],['pipeline']
Deployability,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:37,update,update,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,3,['update'],"['update', 'updated']"
Deployability,"I was using `MMseqs2 Release 6-f5a1c` version and I can executed result2flat over MSA file. Anyway, Is there any way to convert the result2msa output to a flat-file (fasta or similar)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-557532623:21,Release,Release,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-557532623,1,['Release'],['Release']
Deployability,"I was wondering how I could merge existing SeqTaxDBs into one database? Also is it possible to add sequences, individually, to this database as well? For instance, I would like to create an updated version of the MMETSP_zenodo_3247846_uniclust90_2018_08_seed_valid_taxids DB used in the MetaEuk paper, then add my model organism to the final database.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/302:190,update,updated,190,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/302,1,['update'],['updated']
Deployability,"I was wondering if it is possible to copy the database index to /dev/shm instead of page cache? This would have the advantage that in a slurm cluster environment, one could reserve the memory needed for the index. When the database gets copied to cache and pages are locked by vmtouch, this would not be covered by the slurm reservation as far as I understand. It wouldn't be a problem that the database index gets deleted after the job finishes (when it is copied to /dev/shm). Update:; I could run the job now by copying the index to /dev/shm and making symlinks in the /dev/shm directory to the other database files on the network share because otherwise (without the links) there is a file not found error when using db-load-mode 3.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/629:479,Update,Update,479,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/629,1,['Update'],['Update']
Deployability,I will close this issues for now. Please reopen it if you have an update.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-498860813:66,update,update,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-498860813,1,['update'],['update']
Deployability,"I would like to use the `clusterupdate` function, but I have some questions about the workflow. 1. Will the new sequences be compared to all the sequences of a cluster or only to the reference sequence? For example, if I have a new sequence N and an old cluster A={A0,A1,...,Ax} (with A0 the reference sequence), N will be compared to the whole sequence of A or only to A0. . 2. When I update, I read that the identifiers are consistent, but can the reference sequences be changed?. 3. If a new sequence links groups, will the groups be merged or will the new sequence be assigned to one of them. 4. Finally, can a sequence from an already existing cluster be reassigned to another cluster?. Sorry if you already reply to these questions. Thanks for your work",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/419:386,update,update,386,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/419,1,['update'],['update']
Deployability,I would love to know what is the substitution matrix configuration for nucleotides too. Which one is correct?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-2034719433:53,configurat,configuration,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-2034719433,1,['configurat'],['configuration']
Deployability,"I would recommend to install MMseqs2 on Windows through WSL2. See the official [WSL guide](https://docs.microsoft.com/en-us/windows/wsl/install) for install instructions. The mingw MMseqs2 version for Windows suffers from relatively poor memory performance in some modules. We tried to improve that, however its still slower than the Linux version. I am not sure what your exact issue is. You might have to try to start MMseqs2 (`mmseqs.bat`) for the first time as administrator, so all links are setup correctly. Subsequent calls should then work without admin rights.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178:21,install,install,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178,6,['install'],['install']
Deployability,"I would recommend to just use UniProt instead of NR. it’s much better maintained, especially with the versioning. Any annotations against the NR are essentially unreproducible due to the lack of versioning by the NCBI. I don’t plan on integrating the blast databases for the foreseeable future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/893#issuecomment-2390571174:235,integrat,integrating,235,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/893#issuecomment-2390571174,1,['integrat'],['integrating']
Deployability,"I'll leave this ticket open, until I updated the documentation.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/65#issuecomment-367303895:37,update,updated,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/65#issuecomment-367303895,1,['update'],['updated']
Deployability,I'll update #565 when we have a solution.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/557#issuecomment-1174543109:5,update,update,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/557#issuecomment-1174543109,1,['update'],['update']
Deployability,"I'm comparing MMSeqs2 taxonomic assignment with approx. 2bLCA and top hit and noticed that the later approach classifies more genes than the former. I extracted the alignments using `--extract-lines 1` and the top hit search had more hits to the database. All parameters were the same with the exception of `--lca-mode`. Example:; ```; mmseqs taxonomy querydb/querydb gtdb_r202/gtdb_r202 taxonomydb/taxonomydb tmp -s 3.0 --lca-mode 3 --tax-output-mode 2 --threads 64; ```. Is behavior expected? If so, what is causing this difference?. I'm using release `13-45111`. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/465:546,release,release,546,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/465,1,['release'],['release']
Deployability,"I'm examining the efficiency of template retrieval using different MMseqs2 configurations for MSA generation, which is crucial for identifying templates via hhsearch. Notably, the **ColabFold MMseqs2 detailed version** involves complex steps like search, expansion, alignment, and filtering, offering high accuracy but with significant time investment. On the other hand, the **MMseqs2 easy search version** simplifies the process, potentially reducing time but at a possible cost to accuracy. Given that my project processes a large volume of PDB chains (around 400k), understanding the trade-offs between these methods is essential. Key inquiries:; **Does the difference in MSA quality between the two MMseqs2 versions significantly affect template identification accuracy?; How can I optimize the MMseqs2 template search to balance efficiency and precision effectively?**; I appreciate any insights or experiences with these tools. <Colabfold mmseqs2>; `def mmseqs_search_monomer(; dbbase: Path,; base: Path,; uniref_db: Path = Path(""uniref30_2202_db""),; template_db: Path = Path(""""), # Unused by default; metagenomic_db: Path = Path(""colabfold_envdb_202108_db""),; mmseqs: Path = Path(""mmseqs""),; use_env: bool = True,; use_templates: bool = False,; filter: bool = True,; expand_eval: float = math.inf,; align_eval: int = 10,; diff: int = 3000,; qsc: float = -20.0,; max_accept: int = 1000000,; prefilter_mode: int = 0,; s: float = 8,; db_load_mode: int = 2,; threads: int = 32,; ):; #Run mmseqs with a local colabfold database set; #; #db1: uniprot db (UniRef30); #db2: Template (unused by default); #db3: metagenomic db (colabfold_envdb_202108 or bfd_mgy_colabfold, the former is preferred); ; uniref_db = Path(""/store/colabfold/db/uniref30_2202_db""); template_db = Path(""/store/colabfold/db/pdb70_220313""); if filter:; # 0.1 was not used in benchmarks due to POSIX shell bug in line above; # EXPAND_EVAL=0.1; align_eval = 10; qsc = 0.8; max_accept = 100000. used_dbs = [uniref_db]; if use_templa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:75,configurat,configurations,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['configurat'],['configurations']
Deployability,"I'm having trouble setting some command line args with the `cluster` command. When I run this command. ```bash; time ~/projects/MMseqs2/build/bin/mmseqs cluster DB clu . --threads 3 -v 2 --min-seq-id 0.25; ```. I get the following output showing that the threads, verbosity, and seq id are the default values rather than those specified on the command line. ```; Set cluster settings automatic to s=6 cascaded=1; Program call:; DB ./aln_redundancy. MMseqs Version: 	fb43334f0594c4b6a345d7419965cb0beae48430; Sub Matrix 	blosum62.out; Alphabet size 	3; Seq. Id Threshold 	0; Max. sequence length	32000; Threads 	1; Verbosity 	3; ```. The version of the program I'm using is `fb43334f0594c4b6a345d7419965cb0beae48430` installed from source on Mac 10.10.5.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7:716,install,installed,716,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7,1,['install'],['installed']
Deployability,"I'm not able to recreate this error with other data sets with the same configuration (i.e. adding the same data set + a completely separate outgroup). I was able to get concatdbs to run properly, so other runs have worked without issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-405613850:71,configurat,configuration,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-405613850,1,['configurat'],['configuration']
Deployability,"I'm not sure, I installed a few months ago at most though, and I don't have the flexibility to reinstall a new mmseqs version at the moment.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384870215:16,install,installed,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384870215,1,['install'],['installed']
Deployability,"I'm optimistic that this PR, a couple of typo fixes in the `README.md`, hasn't actually broken the build. I think the failed check is just due to an error in the package configuration of the Travis-CI instance in one of the Clang builds. I think that restarting that build will probably do the trick.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/44#issuecomment-326970054:170,configurat,configuration,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/44#issuecomment-326970054,1,['configurat'],['configuration']
Deployability,I'm running the command: `mmseqs easy-taxonomy taxdb output tmp -e 1e-5 -s 6 --blacklist --tax-lineage 1 --majority 0.75` along with a custom database and taxonomy. However many of the taxonomy results have <0.75 agreement (fewer than 75% of genes with taxonomy agree with the assigned taxon). I've attached the output and log file. Update: I tried running `mmseqs easy-taxonomy` using various values for `--majority` and the outputs are identical.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/609:333,Update,Update,333,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/609,1,['Update'],['Update']
Deployability,"I'm running this right now. I updated to the latest issue, and that did not fix the problem :/ .",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590327077:30,update,updated,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590327077,1,['update'],['updated']
Deployability,"I've been evaluating how adding pseudocounts change the sensitivity of profile searches. ```; mmseqs msa2profile msa_db/msa_db profile_db/profile_db --match-mode 1 --match-ratio 0.5 --threads 64; mmseqs msa2profile msa_db/msa_db profile_db_pseudo/profile_db --match-mode 1 --match-ratio 0.5 --threads 64 --pca 0.3; ```. I noticed, however, that the search results are different depending on the version of MMSeqs2. If I use the latest GitHub/Conda release (`13-45111`), the search on the `profile_db_pseudo` will provide more results (as expected, given that the alignments are not very diverse). If I use a newer release (`92deb92fb46583b4c68932111303d12dfa121364`), the search on the database with pseudocounts will results in *less* hits. ```; mmseqs easy-search --threads 64 fragment_sequences.faa profile_db_pseudo/profile_db mmseqs2_results_pseudo tmp; ```. Were there any changes in MMSeqs2's behavior regarding pseudocounts? Also, are there recommendations about how to use the `--pca` parameter?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/547:448,release,release,448,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547,2,['release'],['release']
Deployability,"If I compile with GCC 10 (just make USE_GCC=yes in FreeBSD ports), it does not hang with only SSE. I'd hate to add such a heavy dependency to the port, though, so it would be good to figure out what's going wrong with clang 10. The PowerEdge has 32 hyperthreads and 64G RAM. Is 2G/thread not enough for SLICEPROFILE? If not, how can I limit the number of threads in the regression tests? It doesn't seem to respect OMP_NUM_THREADS=16. I still see CPU spike to > 3000%. I'll test your patches later. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240:484,patch,patches,484,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240,1,['patch'],['patches']
Deployability,"If a center-star alignment is good enough, you can use the `result2msa` module. You can use the `apply` module to execute any external program. We do this step for building the Uniclust databases. Though slightly more involved to handle some edge cases of the alignments tools and with the equivalent tool to `apply` from the `ffindex` package. See: ; https://github.com/soedinglab/uniclust-pipeline/blob/develop/hhdatabase/make_hhdatabase.sh#L2; https://github.com/soedinglab/uniclust-pipeline/blob/develop/hhdatabase/make_a3m.sh#L13; https://github.com/soedinglab/uniclust-pipeline/blob/develop/hhdatabase/fasta_to_msa_a3m.sh#L1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-376547387:391,pipeline,pipeline,391,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-376547387,3,['pipeline'],['pipeline']
Deployability,"If you have MMseqs2 release 14 installed, then `--msa-format-mode 6` should be available in the `result2msa` module. Could you please post the full terminal output?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1465528470:20,release,release,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1465528470,2,"['install', 'release']","['installed', 'release']"
Deployability,"If you have `aria2c` installed, it will prefer that over `curl` or `wget` and use multiple download connections. This should speed up downloads quite a bit.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054055542:21,install,installed,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054055542,1,['install'],['installed']
Deployability,"If your cluster has a module system, use that MPI and make sure no MPI packages from the OS package manager are installed. Thats one common problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463139431:112,install,installed,112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463139431,1,['install'],['installed']
Deployability,"Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Slice search mode false; Strand selection 1; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files true; Alignment format 0; Format alignment output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output false; Overlap threshold 0; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 0; Greedy best hits false; ```. ## Context; Want to identify close homologues in uniprotkb from RCSB. Filtering by e-value seems a reasonable choice. ## Your Environment; Installed via a fresh miniconda env last week.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/379:3203,Install,Installed,3203,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379,1,['Install'],['Installed']
Deployability,Is there a way to specify the URL when calling `mmseqs databases`? . The version of `mmseqs2` installed via conda install still doesn't have this correction.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1988520904:94,install,installed,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1988520904,2,['install'],"['install', 'installed']"
Deployability,Is there any update on this? Suggestions for creating a mmseqs2 database of this size?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/495#issuecomment-1758196191:13,update,update,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/495#issuecomment-1758196191,1,['update'],['update']
Deployability,Is there any update?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/192#issuecomment-625663750:13,update,update,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/192#issuecomment-625663750,1,['update'],['update']
Deployability,Is this with the latest release? We had a few changes a while ago that are only officially part as of release 15; Maybe the issue is already fixed. I don't see anything immediately wrong. . Could you post the full command line output of both calls?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808160547:24,release,release,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808160547,2,['release'],['release']
Deployability,It appears like some of the CI tests are not passing. Am I missing something or are parts of the CI pipeline broken? Can someone help me on that?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/647#issuecomment-1347358706:100,pipeline,pipeline,100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/647#issuecomment-1347358706,1,['pipeline'],['pipeline']
Deployability,"It didn't cause a crash ! . So now I had the same log error: ; ```; data/04_taxgenes/contigs_tax/14073767031253215106/easy-taxonomy.sh: line 55: 19300 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```. In output: ; ```; Time for merging to result_aln_swapped_sum: 0h 0m 48s 61ms; Time for processing: 0h 1m 27s 597ms; Error: filterdb died; ```. But doing the `gdb` run in our master node it worked without any problem. . In my cluster we work through module installation for the programs, but I wanted to try out beforehand a local copy of the bin without being properly compiled in the system. Could that be the problem?. (I am basically running `mmseqs2` executing the script as follows: `./scripts/mmseqs_latest/mmseqs/bin/mmseqs <opts>`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921:563,install,installation,563,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921,1,['install'],['installation']
Deployability,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:200,Pipeline,PipelineProteome,200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034,5,"['Pipeline', 'pipeline']","['PipelineProteome', 'pipeline']"
Deployability,"It looks like with the newest release that the default output from mmseqs easy-taxonomy has changed a bit. There are now 4 additional numeric columns that were not there by default in prior releases. I assume this has something to do with the new contig annotation settings. Can you let me know what the column headers are? Specifically for columns 5-8 in the example below (the 5, 1, 1, 1.000)?. 207026	2420051	species	Yasminevirus sp. GU-2018	5	1	1	1.000	Viruses;unknown;unknown;unknown;unknown;unknown;Yasminevirus sp. GU-2018	d_Viruses;-_unclassified viruses;s_Yasminevirus sp. GU-2018",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/435:30,release,release,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/435,2,['release'],"['release', 'releases']"
Deployability,It seems every other way to install MMseqs doesn't work except using Brew.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/605:28,install,install,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/605,1,['install'],['install']
Deployability,"It turns out that the issue wasn't a memory error, but instead a bug in my pipeline code that killed the job prematurely. Sorry to waste your time on this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-453225786:75,pipeline,pipeline,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-453225786,1,['pipeline'],['pipeline']
Deployability,It's available since a while. Are you running the latest release?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-849728070:57,release,release,57,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-849728070,1,['release'],['release']
Deployability,L:6.6MiB] ; 09/27 14:59:56 [NOTICE] Download complete: tmp/3290078511923703767/gtdb.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 2b99bd|OK | 8.9MiB/s|tmp/3290078511923703767/gtdb.tar.gz. Status Legend:; (OK):download completed. 09/27 14:59:57 [NOTICE] Downloading 1 item(s). 09/27 14:59:57 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#8eef3f 51MiB/54MiB(95%) CN:1 DL:4.9MiB] ; 09/27 15:00:10 [NOTICE] Download complete: tmp/3290078511923703767/bac120_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8eef3f|OK | 4.2MiB/s|tmp/3290078511923703767/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 09/27 15:00:10 [NOTICE] Downloading 1 item(s); [#c371fe 880KiB/1.0MiB(81%) CN:1 DL:268KiB] ; 09/27 15:00:15 [NOTICE] Download complete: tmp/3290078511923703767/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; c371fe|OK | 273KiB/s|tmp/3290078511923703767/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; tar2db tmp/3290078511923703767/gtdb.tar.gz tmp/3290078511923703767/tardb --tar-include faa$ --threads 64 -v 3 . Time for merging to tardb: 0h 0m 0s 62ms; Time for merging to tardb.lookup: 0h 0m 0s 77ms; Time for processing: 0h 1m 8s 163ms; createdb tmp/3290078511923703767/tardb gtdb --compressed 0 -v 3 . Converting sequences. Time for merging to gtdb_h: 0h 0m 0s 32ms; Time for merging to gtdb: 0h 0m 0s 34ms; Database type: Nucleotide; The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died. ## Context; NA. ## Your Environment; mmseqs2 release 14-7e284 installed via conda on RHEL8,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:36120,release,release,36120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,2,"['install', 'release']","['installed', 'release']"
Deployability,"LLVLGIVVAICSTTQPTVASDQDTPKLGDRARFPQPVMVAVANFPPEEIRTSLRTFRTGDRCKIDAGYE; VEAYALDGNRVLVYLDYRTPTDGVSCPRGTVFWLREDVFAAMKAVHQCGTNYTAEELAALLKSAGLKFE; >OHA11761.1_MHQV01000001.1; MELILEKLFESQAKVRILRLFLRNSTTNFTLEDVLRGTGLKRASALKEIAKLIKLRFLKSKNTDLVVSRVSGSGKTKKLR; MRSVRIRIYTTDPTFEFFRELRDLILRQVPESRHRIIQKLRKIGKVKLAVVTGAFINNEDARVDLLVVGEHVSRRKLESL. ## Current Behavior; core dump. ## Steps to Reproduce (for bugs); each time I launch the command. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; Program call:; createdb dpann_cpr.faa dpann_cpr_mmseq_db/ . MMseqs Version: 	a951e4dede7e9b52e514119d083ff4ca80ad1565; Max. sequence length 	65535; Split Seq. by len 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; .........................................................Time for merging files: 0h 0m 0s 772ms; Erreur de segmentation (core dumped). ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; (strangely It stop working when I update mmseqs2 version to the newest , rm -rf old directory and git clone the new one); I updated my version because I had alignment died error doing all against all search. ## Your Environment; ubuntu 16.04 . Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: a951e4dede7e9b52e514119d083ff4ca80ad1565. self compiled (default) (make, make install) ; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/141:1762,update,update,1762,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/141,3,"['install', 'update']","['install', 'update', 'updated']"
Deployability,"Let me see later if I can install the latest release (currently I have it via conda, no clue if that's updated yet).; I don't think I can send the data to you. The database includes unpublished data from various collaboration partners, so not really an option :/. I'll make another run and capture the output, the log is not a problem luckily.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590271725:26,install,install,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590271725,3,"['install', 'release', 'update']","['install', 'release', 'updated']"
Deployability,"Listing the gtdb.tar.gz It seems that removing the $ will not affect the number of files used in the tardb because all files are .faa, so I have edited the download.sh script and I am building the database in this way while a fix is released:. ```; /localscratch/users/latest # diff download.sh ../*bkp/download.sh; 6c6; < MMSEQS=mmseqs # add this or define it as an ENV variable.; ---; > ; 374,376c374; < #""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; < ; < ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa' ${THREADS_PAR} \; ---; > ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; ```. Also it seems to fail in servers with 512 GB of RAM due a some mapping of the files into memory, so I have used one with 2TB, it seems that the program is using. Using MMseqs2 Version: 92deb92fb46583b4c68932111303d12dfa121364",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799:233,release,released,233,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799,1,['release'],['released']
Deployability,"MMseqs2 Version: GITDIR-NOTFOUND; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search 	Sensitive homology search; easy-cluster 	Slower, sensitive clustering; easy-linclust 	Fast linear time cluster, less sensitive clustering; easy-taxonomy 	Taxonomic classification; easy-rbh 	Find reciprocal best hit. Main workflows for database input/output; search 	Sensitive homology search; map 	Map nearly identical sequences; rbh 	Reciprocal best hit search; linclust 	Fast, less sensitive clustering; cluster 	Slower, sensitive clustering; clusterupdate 	Update previous clustering with new sequences; taxonomy 	Taxonomic classification. Input database creation; databases 	List and download databases; createdb 	Convert FASTA/Q file(s) to a sequence DB; createindex 	Store precomputed index on disk to reduce search overhead; convertmsa 	Convert Stockholm/PFAM MSA file to a MSA DB; msa2profile 	Convert a MSA DB to a profile DB. Format conversion for downstream processing; convertalis 	Convert alignment DB to BLAST-tab, SAM or custom format; createtsv 	Convert result DB to tab-separated flat file; convert2fasta 	Convert sequence DB to FASTA format; taxonomyreport 	Create a taxonomy report in Kraken or Krona format. An extended list of all modules can be obtained by calling 'mmseqs -h'. Bash completion for modules and parameters can be installed by adding ""source MMSEQS_HOME/util/bash-completion.sh"" to your ""$HOME/.bash_profile"".; Include the location of the MMseqs2 binary in your ""$PATH"" environment variable.; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; $ which mmseqs; ~/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build/bin/mmseqs; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; MACOS 15",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:6016,install,installed,6016,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['install'],['installed']
Deployability,"MMseqs2 doesn't have an inbuilt module to merge paired-end reads.; You could use plass `mergereads` module which has integrated [flash](http://ccb.jhu.edu/software/FLASH/index.shtml), to merge paired-end reads. The output from plass can be directly consumed by the MMseqs2 taxonomy.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/436#issuecomment-815852585:117,integrat,integrated,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/436#issuecomment-815852585,1,['integrat'],['integrated']
Deployability,Maybe it works if you explicitly also add the conda-forge channel:; ```; conda install -c conda-forge -c bioconda mmseqs2; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867853182:79,install,install,79,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867853182,1,['install'],['install']
Deployability,"Maybe this is by design, but the (helpful) message about `--cluster-reassign` makes it seem like a flag as opposed to an option, i.e. have to specify `--cluster-reassign 1` to turn it on. Here is a suggestion... (fwiw I haven't tried this option yet because the install from conda on my machine with my current dataset is giving me an error `Alignment format is not supported! ] 0.00% 1 eta - Error: Clustering step 2 died Error: Search died`, but I will investigate more on my end to see if it's an issue with my version/files)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/329:262,install,install,262,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329,1,['install'],['install']
Deployability,"Metaclust, a database clustered by linclust protocol in MMseqs2, is becoming smaller with each release. Metaclust95 2017_01 has 97G.; Metaclust 2017_05 has 60G.; Metaclust 2018_01 has 28G only.; Shouldn't the number of Metaclust entries increase with time?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/54:95,release,release,95,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/54,1,['release'],['release']
Deployability,"Mseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CP",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:3492,install,install,3492,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['install'],['install']
Deployability,"Mseqs2 by prepending the RUNNER=""..."" string. ## Current Behavior; In order to see whether MMseqs2 can really make use of node-level parallelism, I first clustered a dataset of 50 million sequences on a single node with a single MPI task and multiple threads. The command I use for that purpose is:. ```; RUNNER=""srun -n 1 --ntasks-per-node 1"" ./mmseqs-par easy-linclust <fasta-file> <cluster-prefix> <tmp-dir> --min-seq-id 0.7 -c 0.8 --cov-mode 0 --threads 64; ```. This completes in ~34 minutes and has a peak memory usage of 27.9 GB. Now when I change the number of nodes to 4, by using RUNNER=""srun -n 4 ..., it completes in ~49 minutes and still has a peak memory usage of ~27.9 GB. The issue is similar for 16 nodes, i.e., the runtime does not go down as one expects. Is this expected? Am I using the MPI version correctly? It seems like there is no use for utilizing the MPI-mode as it is not efficient in terms of runtime and memory. ## Expected Behavior; I know some components of the clustering pipeline are sequential, and some of them are parallel. But one would logically expect a gain in terms of runtime and/or memory when using multiple nodes. ## MMseqs Output (for bugs); The output for single-node run: https://pastebin.com/waDMWGA3; The output for 4-node run: https://pastebin.com/B7bMaei3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 61ca48883b50714be51fc35fc9b77325ffde53fb-MPI. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; compiler version: OpenMPI 4.0.2, gcc 8.3.0; cmake version: 3.14.4. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Intel Haswell CPU (support for SSE and AVX2), 128 GB system memory. * Operating sy",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/331:1160,pipeline,pipeline,1160,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331,1,['pipeline'],['pipeline']
Deployability,Multi-threading not working when installing from brew on OSX Catalina,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/289:33,install,installing,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289,1,['install'],['installing']
Deployability,"My point of view is that of a computational biologist who is both an end-user and developer of software that includes mmseqs as a dependency. As a developer myself, I view end users who are sophisticated enough to say things about builds as a fairly precious resource. So let me make my point one more time before I accept your decision and move on. . While I admit there are things that suck about semantic versioning, it has two outstanding qualities: (1) it has a controlled syntax that is widely used, and (2) it's easy to determine whether software that follow the pattern is older, newer, or equal to a reference version that someone else tested. Among the three recipes shown above and the binaries available for download, it seems that there are 3 different versioning schemes in use that will show up as the output of ""mmseqs version"" (12.11e3, 12-11e3, and the full SHA1). If I add my software (which uses VERSION_OVERRIDE=12.0 internally for compatibility with python semantic versioning), that's a 4th. My install code can't easily determine if a binary of unknown provenance is lower, equal, or higher than the recommended version. Neither can any downstream users without the sophistication to look at your repository's version tags. Using semantic versioning as a standard (that can be overridden by packagers or users if needed) would avoid this issue. To finish with something nice, your build system is well-done and build are smooth on the various linux and macos BigSur platforms I've tested it on. Feel free to close this issue after reading.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559:1018,install,install,1018,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559,1,['install'],['install']
Deployability,NEWMAPDB variable missing in updatecluster,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103:29,update,updatecluster,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103,1,['update'],['updatecluster']
Deployability,"No issues, I just have a quick question: . Are there any circumstances where running clusterupdate would result in breaking a cluster into two or more clusters after the update? For example, if the updated database included a sequence that was similar to some sequences in a cluster (but somehow not all of them), is there any chance that that cluster would get split?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/528:170,update,update,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/528,2,['update'],"['update', 'updated']"
Deployability,"No official release quite yet, but the latest git version already contains the new algorithm. ; You can either compile from source or use the precompiled static binaries at [mmseqs.com/latest](https://mmseqs.com/latest).; We'll also make a release soonish.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-744803194:12,release,release,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-744803194,2,['release'],['release']
Deployability,"No, it's seems to be ok for me (using the release 8-fac81 ) even without using the option --kmer-per-seq 80 and --max-seqs 300 (that you advised me to use one year ago)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/206#issuecomment-496872235:42,release,release,42,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206#issuecomment-496872235,1,['release'],['release']
Deployability,"Oh damn, that's a bit embarrassing, I was using this build: `8bd3de3e35c91c0723517a964efc3223682c3bb5`, which I installed early January. I didn't expect there to be this much difference, but the current build works correctly in the ""unexpected behavior 1"" case. I compiled and ran MMseqs on openSUSE. Running make produced a lot of warnings, I don't know if this is expected and I can provide the output if you want to. The behavior of case 2 and 3 is unchanged. Case 2 still shows only 3 rows and case 3 still results in an error.; Here is the stdout when running case 2 (outer paths obfuscated):. ```; Program call:; /.../fasta.txt DB . MMseqs Version: 	e5e41af867c566f3fffe479d30bfaa10de77517c; Max. sequence length 	32000; Split Seq. by len 	true; Use fasta header 	false; Offset of numeric ids	0; Verbosity 	3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Program call:; DB . MMseqs Version: 	e5e41af867c566f3fffe479d30bfaa10de77517c; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Split DB 	0; Spaced Kmer 	1; Threads 	4; Verbosity 	3. Substitution matrices...; Use kmer size 6 and split 1 using split mode; Index table: counting k-mers... Index table: Masked residues: 18; Index table: fill...; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Write 5; Write 0; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. ; Program call:; DB DB resultDB tmp -a -s 7.5 . MMseqs Version: 	e5e41af867c566f3fffe479d30bfaa10de77517c; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Profile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	4; Verbosity 	3; Sensitivity 	7.5; K-mer size 	0; K-scor",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275107869:112,install,installed,112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275107869,1,['install'],['installed']
Deployability,"Ok good, then I will ignore these pipelines. The Neff scores I use come from the `neffM` field of the `Sequence.h` class. According to the following code, these are stored as floats. https://github.com/soedinglab/MMseqs2/blob/7b95387f93e38c3911f9188bc702d63ed3194013/src/commons/Sequence.h#L453. Therefore I think the `convertNeffToChar` function is more appropriate since it takes a Neff score that is stored a float. (The `convertNeffToFloat` function expects its parameter as an unsigned char, which I don't have when using said `neffM` field.). https://github.com/soedinglab/MMseqs2/blob/7b95387f93e38c3911f9188bc702d63ed3194013/src/commons/MathUtil.h#L216-L224. Sorry if I am missing something here. Is there another location/a better way of extracting the Neff scores?. (I don't know whether this is just personal preference, but I like the idea of _values not being floats when writing_ them to an output. A fixed range from [1;255] somehow sound more appealing to me than a floating point number with an obscure precision.)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/647#issuecomment-1348308945:34,pipeline,pipelines,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/647#issuecomment-1348308945,1,['pipeline'],['pipelines']
Deployability,"Ok maybe it is a problem on my side: ; The gdb was executed in a master node in which we have installed gdb, whereas the `while` loop is in one of the nodes, which maybe presents a different architecture. . Right now it is impossible but I will talk to my admin tomorrow to see what we can do. Thanks for your patience!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-832068919:94,install,installed,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-832068919,1,['install'],['installed']
Deployability,"Ok, I'll play with it. I'll keep you updated on any progress. Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/378#issuecomment-736715983:37,update,updated,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/378#issuecomment-736715983,1,['update'],['updated']
Deployability,"Ok, thank you. Unfortunately I am still not sure why my initial run failed. It had the following input, with a new unique name given for both the updated index files as well as the newly generated cluster:; `mmseqs clusterupdate Old_db New_db_with_updated_seq Old_cluster New_unique_name New_unique_cluster tmp_folder` . If necessary, I can provide the input files as they are a subset of public protein databases. . Thanks, . Irena",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404853205:146,update,updated,146,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404853205,1,['update'],['updated']
Deployability,"Okay I will try to change the temporary directory. I will see to install the avx2 binary too. Thanks for your help, I will test all this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741817483:65,install,install,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741817483,1,['install'],['install']
Deployability,"Okay sorry, this will not work after all, as `taxonomyreport` only reads the first entry and ignores the rest.; I'll update you when I fix `taxonomyreport` to support your use-case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771891766:117,update,update,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771891766,1,['update'],['update']
Deployability,"Okay this turned into quite the refactoring adventure. I am still not happy with the naming of the parameters, so they might change until release 11. But you can now do the following:; ```; mmseqs filterdb aln_result aln_filtered --beats-first --filter-column 2 --comparison-operator ip --comparison-value 0.8; ```; This means it keeps everything that it within 0.8 * alnScore of the first row. I'll update the documentation etc in a few days once I decide on names.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/249#issuecomment-562196896:138,release,release,138,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/249#issuecomment-562196896,2,"['release', 'update']","['release', 'update']"
Deployability,"Okay we found the issue. The problem occurs because of : in the --lca-ranks parameter. The seperator should be ;. The description is wrong in our mmseqs help text. So it should be `--lca-ranks ""species;genus;family;order;class;phylum;superkingdom""`. . Thank you so much for your help to find it. But we have just noticed that ';' make some issues as parameter. If you would write `--lca-ranks species;genus;family;order;class;phylum;superkingdom` than bash will only interpret until `--lca-ranks species`. Luckily this change was not yet part of any release. So we will change it to `,` and add a proper validation of the input parameter. . Also I did not receive a mail for the stickers. My mail add is themartinsteinegger gmail com 🙂",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571346393:550,release,release,550,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571346393,1,['release'],['release']
Deployability,Okay. I didn't realize that. I assumed from the wiki page with `createsubdb` grabbing from the index could be equivalent to the fasta file headers. Your way is about what I was doing but with some intermediate python code for extra filtering. First I filter out all hits in the forward search which didn't meet a set bitscore threshold. Could I do this easily with `filterdb`? Next if a query sequence had multiple best hits with the same bitscore in the forward search then I retained all those target sequences for the reverse search. It's an edge case but could be important with our annotation pipeline. On my tests on real data we do see query sequences with multiple best hits when bitscores are less than ~90. Your script is a great first try though. Really clears up how to use the `filterdb` and `createsubdb` commands for me.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/162#issuecomment-462214865:598,pipeline,pipeline,598,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/162#issuecomment-462214865,2,['pipeline'],['pipeline']
Deployability,"On my first try, I had installed mmseqs2 with conda. Then, I used the git version, it was faster ~8 hrs. However, I am thinking if this is expected or if it is still slow. Any thoughts?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-744013366:23,install,installed,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-744013366,1,['install'],['installed']
Deployability,"Only the order results in one query block is conserved. Block of different queries will be more or less random due to the order in which they are processed multithreaded. You can ensure a consistent order of the result file by using `search` and then `convertalis --threads 1` instead of `easy-search`. However, a different number of result lines seems like a bug. Would you mind trying if this bug was resolved in the meantime in the newest release 11?. Can you reproduce the bug with the two FASTA files in the example folder (QUERY.fasta and DB.fasta)?. By the way, if you want a set of stickers (see https://twitter.com/thesteinegger/status/1201076220957315074), send me your address to milot at mirdita de.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-589707876:442,release,release,442,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-589707876,1,['release'],['release']
Deployability,"Oops I forgot to give an update on this issue. Actually, the problem was related to a bad indexing of the database. Once the formatting and indexing were fully redone, everything started working again properly. So it was on my side that the problem occurred. . I'm sorry to have bothered you unnecessarily. Thank you again for the help. Meilleurs voeux; Guillaume",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-571588367:25,update,update,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-571588367,1,['update'],['update']
Deployability,Patches to allow MMseqs2 to build with gcc13,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/714:0,Patch,Patches,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/714,1,['Patch'],['Patches']
Deployability,Pipeline for getting taxonomy for clusters,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/815:0,Pipeline,Pipeline,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/815,1,['Pipeline'],['Pipeline']
Deployability,"Please download the latest git mmseqs as prebuilt binaries from https://mmseqs.com/latest or compile from source. The issue is already fixed there, however it’s not part of a release yet.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759207874:175,release,release,175,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759207874,1,['release'],['release']
Deployability,Please try the git version of MMseqs2 (either compile from source or download from https://mmseqs.com/latest). The recent changes from the just published preprint or not part of the latest released version yet.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-742763807:189,release,released,189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-742763807,1,['release'],['released']
Deployability,"Question: ColabFold search pipeline for very large query, less sensitivity acceptable",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897:27,pipeline,pipeline,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897,1,['pipeline'],['pipeline']
Deployability,Question: cluster update with linclust algorithm.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/630:18,update,update,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/630,1,['update'],['update']
Deployability,"Quick update: #729 now also seems to be resolved, so the GTDB database should work properly in the latest mmseqs master branch (from commit 1d62fa0)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740#issuecomment-1696662290:6,update,update,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740#issuecomment-1696662290,1,['update'],['update']
Deployability,"Ran but seems somethign is missing for the `bt`; ```; ....; Inferior 1 (process 27381) exited with code 01]; Missing separate debuginfos, use: debuginfo-install bash-4.2.46-28.el7.x86_64; (gdb) bt; No stack. ```. Edit: ran `uname -a`; `Linux compute-0-18.power5 3.10.0-693.el7.x86_64`; Edit 2: but `bash --version`; `GNU bash, version 4.2.46(2)-release (x86_64-redhat-linux-gnu)`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591439764:153,install,install,153,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591439764,2,"['install', 'release']","['install', 'release']"
Deployability,Release 15 includes all the GTDB changes and is up on conda.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/760#issuecomment-1794316852:0,Release,Release,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/760#issuecomment-1794316852,1,['Release'],['Release']
Deployability,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:0,Release,Release,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,4,"['Release', 'install', 'release']","['Release', 'install', 'releases']"
Deployability,Removed doc.install from Formula,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/18:12,install,install,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/18,1,['install'],['install']
Deployability,"Running easy-cluster pipeline on a fasta file of protein sequences. Getting 575 messages saying ""Cannot extract identifier from entry nnnnn"" out of 37k input proteins. ; Is this an error or just a warning? ; Are those proteins being clustered or ignored? ; How can I figure out which proteins in my input file are causing the problem so I can fix it? ; Is there a description of the required fasta header format for proper identifier extraction in the manual (I didn't see it)?. Ubuntu 20.04; mmseqs2 v 13.45111. Thanks,; Bill",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/804:21,pipeline,pipeline,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/804,1,['pipeline'],['pipeline']
Deployability,Seems like something is wrong with the installed compilers within this conda environment. You should be able to install the `compilers` conda meta package which should contain everything to compile mmseqs,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/816#issuecomment-1974703820:39,install,installed,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/816#issuecomment-1974703820,2,['install'],"['install', 'installed']"
Deployability,Seems the file size is updated.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/54#issuecomment-357017762:23,update,updated,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/54#issuecomment-357017762,1,['update'],['updated']
Deployability,"Shared libraries are usually loaded in many popular scripting languages (i.e. Julia, Python, R); https://docs.julialang.org/en/release-0.6/manual/calling-c-and-fortran-code/; https://docs.python.org/3/library/ctypes.html; https://www.rdocumentation.org/packages/base/versions/3.4.3/topics/dyn.load. I could call externally command line tool, but library could more elegant.; Basically I would like to obtain BLAST-like bit-scores in all-vs-all comparisons between multiple fasta files with protein sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381913569:127,release,release-,127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381913569,1,['release'],['release-']
Deployability,Short update: Martin should have fixed the issue with the --split parameter. MMseqs should actually chose a sensible value for split automatically (now). So you shouldn't need it at all. Could you try if this fixed your issue?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-250780684:6,update,update,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-250780684,1,['update'],['update']
Deployability,Should be fixed in the newest release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/617#issuecomment-1277877901:30,release,release,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617#issuecomment-1277877901,1,['release'],['release']
Deployability,Should be fixed now. Statically built binaries with the fix will be available at http://mmseqs.com/latest/ in about an hour. We will also make a new release in the next few weeks.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/379#issuecomment-735712461:149,release,release,149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379#issuecomment-735712461,1,['release'],['release']
Deployability,"Since the documentation was moved to the wiki the installation using brew fails when `doc.install ""userguide.pdf""`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/18:50,install,installation,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/18,2,['install'],"['install', 'installation']"
Deployability,"So I installed GCC 6.2 from homebrew and used that for the compiler in cmake but it failed to compile successfully. ```; Zebulon | build -> CXX=""$(brew --prefix)/bin/gcc-6"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; -- The CXX compiler identification is GNU 6.2.0; -- Checking whether CXX compiler has -isysroot; -- Checking whether CXX compiler has -isysroot - yes; -- Checking whether CXX compiler supports OSX deployment target flag; -- Checking whether CXX compiler supports OSX deployment target flag - yes; -- Check for working CXX compiler: /usr/local/bin/gcc-6; -- Check for working CXX compiler: /usr/local/bin/gcc-6 -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Sourcedir /Users/moorer/Downloads/mmseqs2; -- Projectdir /Users/moorer/Downloads/mmseqs2; -- Compiler is GNU; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Failed; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 ex",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:5,install,installed,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,2,"['RELEASE', 'install']","['RELEASE', 'installed']"
Deployability,"Sorry I didn't update the documentation. The `_taxonomy` file is something new, it contains all the `.dmp` files in a binary format that is instantly loadable (no more 5-7s delay every time the taxonomy database is used).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771793382:15,update,update,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771793382,1,['update'],['update']
Deployability,"Sorry for the confusion, you have to use g++ in the CXX call. I fixed the readme. Try this call and upload the log if anything goes wrong:; CXX=""$(brew --prefix)/bin/g++-6"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make VERBOSE=1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/8#issuecomment-265689036:198,RELEASE,RELEASE,198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/8#issuecomment-265689036,1,['RELEASE'],['RELEASE']
Deployability,"Sorry for the delay, I am currently quite busy finishing another project. I can't reproduce your issue on our machines.; Since the prefilter call doesn't produce any output at all from mmseqs it looks like its crashing in `MMseqsMPI::init`. ```; void MMseqsMPI::init(int argc, const char **argv) {; #ifdef HAVE_MPI; MPI_Init(&argc, const_cast<char ***>(&argv));; MPI_Comm_rank(MPI_COMM_WORLD, &rank);; MPI_Comm_size(MPI_COMM_WORLD, &numProc);. active = true;. if(!isMaster()) {; Parameters& par = Parameters::getInstance();; par.verbosity = Debug::ERROR;; Debug::setDebugLevel(Debug::ERROR);; }. Debug(Debug::INFO) << ""MPI Init...\n"";; Debug(Debug::INFO) << ""Rank: "" << rank << "" Size: "" << numProc << ""\n"";; #endif; }; ```. This is how it looks like. Since we don't even see the ""MPI Init..."" string. It is probably crashing in `MPI_Init`, `MPI_Comm_rank`, or `MPI_Comm_size`. This points to a faulty OpenMPI installation. Can you run other MPI programs on your machine?. You can also contact me at milot [at] mirdita . de and we can try to debug the issue in a chat session with faster turnaround times. Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-311062480:910,install,installation,910,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-311062480,1,['install'],['installation']
Deployability,Sorry for the delay. I was dealing with some private stuff :/. I would drop 32-bit support. Even with the patch it doesn't pass the integration tests and tracking down why would be very low priority as we require a >4GB address space for everything except small databases anyway.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505:106,patch,patch,106,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505,2,"['integrat', 'patch']","['integration', 'patch']"
Deployability,Sorry this one i meant:. https://github.com/soedinglab/uniclust-pipeline/blob/ec52afc312baab5178ce709caebb41bbae9bb3f0/uniclust_workflow.sh#L49-L133,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1553952874:64,pipeline,pipeline,64,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1553952874,1,['pipeline'],['pipeline']
Deployability,"Sorry, should not have closed the issue yet. I'll update it when the feature lands in the main branch.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/21#issuecomment-282766528:50,update,update,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/21#issuecomment-282766528,1,['update'],['update']
Deployability,"Sounds like a plan!. Building a plugin is a pretty big lift as it requires close integration with Qiime 2 [semantic types](https://docs.qiime2.org/2019.10/semantic-types/). But at least the [docs](https://docs.qiime2.org/2019.10/plugins/developing/) are good! . I don't think I'm the right person to lead development, but I would be happy to contribute methods to the plugin.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404:81,integrat,integration,81,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404,1,['integrat'],['integration']
Deployability,Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	2147483647; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3. Substitution matrices...; Use kmer size 5 and split 1 using Target split mode.; Needed memory (20178976034 byte) of total memory (486687909888 byte); Index table: counting k-mers... ```. ## Context; Trying to generate a profile DB from the file `uniclust30_2018_08_hhm_db` contained the 18-08 release of Uniclust30; `http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz`; I am using `convertprofiledb` and then `createindex`... **NOTE:** I have used the same procedure to generate the profile DB using the HHblits profiles for Pfam 31 downloaded from:; `http://wwwuser.gwdg.de/%7Ecompbiol/data/hhsuite/databases/hhsuite_dbs/pfamA_31.0.tgz`. ## Your Environment; > MMseqs Version: 6.f5a1c; [f5a1cdb](https://github.com/soedinglab/MMseqs2/commit/f5a1cdb44c996d6be229226b09ecc687646c0c12); > MMseqs was self-compiled; > gcc (Homebrew gcc 5.5.0_4) 5.5.0; > cmake 3.12.3. >Server specifications:. ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fp,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130:2542,release,release,2542,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130,1,['release'],['release']
Deployability,Sure...; I am uploading the fasta file and the alignment results (produced by the `mmseqs search` pipeline) for sequences of 100% identity. . [https://drive.google.com/file/d/1DgqRHQa7RIgoXONB8kCkPwg07YZubipl/view?usp=sharing](url),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259603614:98,pipeline,pipeline,98,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259603614,1,['pipeline'],['pipeline']
Deployability,"TL; DR: Enabling building against shared system libraries gives better modularity and a better end-user experience. The way that the Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development an",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:140,patch,patch,140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463,10,"['install', 'patch', 'update']","['installed', 'patch', 'updated', 'updates']"
Deployability,"Thank for your report. I copied a wrong file to the Metaclust 2018_01 release. It should be fixed now.; Information on the current release can be found in the latest version of the preprint: https://www.biorxiv.org/content/early/2018/01/05/104034.full.pdf+html. The input set size of the Metaclust did not increase since the first release. The data should be seen as proof of concept for Linclust. We can not commit to such a data intensive procedure at this point. It took weeks to download the full datasets used in this study. We believe that a sequence database based on metagenomic sequences should be offered rather by institutions that have direct access to huge amounts of metagenomic data (e.g. EMBL, NCBI, JGI, Argonne National Lab, ...).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/54#issuecomment-357018695:70,release,release,70,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/54#issuecomment-357018695,3,['release'],['release']
Deployability,"Thank you @gieses for the reply! . Just for a context, when I proposed this issue (months ago) I was trying to replace the msa pairing workflow in alphafold. I got stuck when I had to deal with the taxonomy labels. This is particularly tricky when I wanted to use uniref50 instead of 30. . I finally chose to integrate a new pipeline using the monomer msa from mmseqs, and pairing them with alphafold-multimer's python code. To link the searched msas with taxonomy labels, I extracted a map between taxonomy labels and uniref ids from uniref50 myself.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448304253:309,integrat,integrate,309,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448304253,2,"['integrat', 'pipeline']","['integrate', 'pipeline']"
Deployability,"Thank you for all the work you have put into MMseqs2. I hope it can support my use case. ## Desired outcome. I would like to make a MMseqs2 target profile database from VOGDB data however I can't find a path to do so. To do this I attempted to process the latest release of the VOGDB files available [here](http://vogdb.org/download) specifically I am using the MSA files in [vog.raw_algs.tar.gz](http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz). Contained in vog.raw_algs.tar.gz are many FASTA formatted MSA files with each file being named after the VOG ID but not containing it in the text of the files. I have tried using a similar workflow to that of the PFAM format and several other approaches to no avail. Here are some of my observations on the situation: . VOGDB is not in stockholm format, unlike PFAM, and convertmsa does not support it. However, instead of raising an error convertmsa produces empty files without alerting the user. To skip preprocessing and run msa2profile command directly requires the datatype and index files to exist, and I don't know how to generate these correctly from the data at hand. Making a database from the MSA data is not a problem and the database can be searched without issue except that VOG IDs are not transferred from the file name. It seems that the problem is only with generating profiles. ## Reproduction / Examples. Example where convertmsa creates files, but they are empty and there is no error. ```BASH; # make temp folders; mkdir vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; # tar xzf vog.raw_algs.tar.gz; # gzip -c *.msa > vog.raw_algs.gz; cd ..; mmseqs convertmsa vog/vog.raw_algs.tar.gz vog/temp/converted; ```. Files are created in vog/temp with the converted prefix, but they are all empty. The only path to an MMseqs2 profile that has any success is to convert the MSA files first into HH-suite compatible hmm files and then to use the hmm to profile p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/440:263,release,release,263,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440,1,['release'],['release']
Deployability,"Thank you for analyzing the problem. This helps me a lot. I changed the shebang line to bash. Your run worked just fine. ; The output is ""debug"" output which occures becaues of the -x parameter at the shebang line. ""#!/bin/bash -ex"". I removed this flag and updated the tar file. You can download it here http://github.com/soedinglab/mmseqs2/raw/master/mmseqs-static.tar.gz",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235795180:258,update,updated,258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235795180,1,['update'],['updated']
Deployability,"Thank you for getting back! We will try to use the latest release. ; Meanwhile, we are testing whether increasing `--max-seqs` will help. Do you think this could be one possibility/ direction to try?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604150179:58,release,release,58,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604150179,1,['release'],['release']
Deployability,"Thank you for reporting this issues. Could please update your MMseqs2 version, the --cascaded flag does not exists anymore in the current version of mmseqs. We already fixed the stability issues of the clustering.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/110#issuecomment-411728076:50,update,update,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/110#issuecomment-411728076,1,['update'],['update']
Deployability,Thank you for reporting this! ; Yes this is a known bug. Could you please use the newest git commit. We will make a new release soon. :),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120#issuecomment-423486014:120,release,release,120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120#issuecomment-423486014,1,['release'],['release']
